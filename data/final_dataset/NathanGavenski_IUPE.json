{"home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.utils.CheckpointAlreadyExists.__init__": [[42, 44], ["Exception.__init__"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "files", ",", "name", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "f'{name} already exists in {files}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.utils.save_idm_model": [[46, 61], ["os.path.exists", "os.mkdir", "utils.CheckpointAlreadyExists", "os.listdir", "os.path.isfile", "torch.save", "os.path.join", "str", "model.state_dict", "torch.save", "model.state.dict", "len"], "function", ["None"], ["", "", "def", "save_idm_model", "(", "model", ",", "replace", "=", "False", ",", "name", "=", "None", ",", "folder", "=", "None", ")", ":", "\n", "    ", "parent_folder", "=", "'./checkpoint/idm'", "\n", "path", "=", "folder", "if", "folder", "is", "not", "None", "else", "parent_folder", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "path", ")", "\n", "\n", "", "onlyfiles", "=", "[", "f", "for", "f", "in", "listdir", "(", "path", ")", "if", "isfile", "(", "join", "(", "path", ",", "f", ")", ")", "]", "\n", "checkpoint_name", "=", "f'model_{str(len(onlyfiles) + 1)}.ckpt'", "if", "name", "is", "None", "else", "name", "\n", "\n", "if", "checkpoint_name", "in", "onlyfiles", "and", "replace", "is", "False", ":", "\n", "        ", "raise", "CheckpointAlreadyExists", "(", "onlyfiles", ",", "checkpoint_name", ")", "\n", "", "elif", "replace", "is", "True", ":", "\n", "        ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "f'{path}/best_model.ckpt'", ")", "\n", "", "elif", "replace", "is", "False", ":", "\n", "        ", "torch", ".", "save", "(", "model", ".", "state", ".", "dict", "(", ")", ",", "f'{path}/{checkpoint_name}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.utils.save_policy_model": [[63, 78], ["os.path.exists", "os.mkdir", "utils.CheckpointAlreadyExists", "os.listdir", "os.path.isfile", "torch.save", "os.path.join", "str", "model.state_dict", "torch.save", "model.state.dict", "len"], "function", ["None"], ["", "", "def", "save_policy_model", "(", "model", ",", "replace", "=", "False", ",", "name", "=", "None", ",", "folder", "=", "None", ")", ":", "\n", "    ", "parent_folder", "=", "'./checkpoint/policy'", "\n", "path", "=", "folder", "if", "folder", "is", "not", "None", "else", "parent_folder", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "path", ")", "\n", "\n", "", "onlyfiles", "=", "[", "f", "for", "f", "in", "listdir", "(", "path", ")", "if", "isfile", "(", "join", "(", "path", ",", "f", ")", ")", "]", "\n", "checkpoint_name", "=", "f'model_{str(len(onlyfiles) + 1)}.ckpt'", "if", "name", "is", "None", "else", "name", "\n", "\n", "if", "checkpoint_name", "in", "onlyfiles", "and", "replace", "is", "False", ":", "\n", "        ", "raise", "CheckpointAlreadyExists", "(", "onlyfiles", ",", "checkpoint_name", ")", "\n", "", "elif", "replace", ":", "\n", "        ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "f'{path}/best_model.ckpt'", ")", "\n", "", "elif", "not", "replace", ":", "\n", "        ", "torch", ".", "save", "(", "model", ".", "state", ".", "dict", "(", ")", ",", "f'{path}/{checkpoint_name}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.utils.load_policy_model": [[80, 94], ["models.policy.Policy", "model.to.load_state_dict", "model.to.to", "model.to.eval", "torch.load"], "function", ["None"], ["", "", "def", "load_policy_model", "(", "args", ",", "environment", ",", "device", ",", "folder", "=", "None", ")", ":", "\n", "    ", "parent_folder", "=", "'./checkpoint/policy'", "\n", "path", "=", "folder", "if", "folder", "is", "not", "None", "else", "parent_folder", "\n", "\n", "model", "=", "Policy", "(", "\n", "environment", "[", "'action'", "]", ",", "\n", "net", "=", "args", ".", "encoder", ",", "\n", "pretrained", "=", "args", ".", "pretrained", ",", "\n", "input", "=", "environment", "[", "'input_size'", "]", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "f'{path}/best_model.ckpt'", ")", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "model", ".", "eval", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.utils.load_idm_model": [[96, 105], ["models.idm.IDM", "model.to.load_state_dict", "model.to.to", "model.to.eval", "torch.load"], "function", ["None"], ["", "def", "load_idm_model", "(", "args", ",", "folder", "=", "None", ")", ":", "\n", "    ", "parent_folder", "=", "'./checkpoint/policy'", "\n", "path", "=", "f'{parent_folder}/{folder}'", "if", "folder", "is", "not", "None", "else", "parent_folder", "\n", "\n", "model", "=", "IDM", "(", "args", ".", "actions", ",", "pretrained", "=", "args", ".", "pretrained", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "f'{path}/best_model.ckpt'", ")", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "model", ".", "eval", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.utils.save_gif": [[107, 118], ["gif_images[].save", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "save_gif", "(", "gif_images", ",", "random", ",", "iteration", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "'./gifs/'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'./gifs/'", ")", "\n", "\n", "", "name", "=", "'Random'", "if", "random", "else", "'Sample'", "\n", "gif_images", "[", "0", "]", ".", "save", "(", "f'./gifs/{name}_{iteration}.gif'", ",", "\n", "format", "=", "'GIF'", ",", "\n", "append_images", "=", "gif_images", "[", "1", ":", "]", ",", "\n", "save_all", "=", "True", ",", "\n", "duration", "=", "100", ",", "\n", "loop", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.utils.policy_infer": [[120, 187], ["numpy.ndarray", "range", "model.eval", "utils.enjoy.delete_alpha", "utils.enjoy.get_environment", "play_function", "reward_epoch.append", "utils.enjoy.get_environment.close", "numpy.mean", "numpy.mean", "utils.save_gif", "performance_epoch.append", "print", "bar.next", "utils.enjoy.performance"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.delete_alpha", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.get_environment", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.utils.save_gif", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.performance"], ["", "def", "policy_infer", "(", "\n", "model", ",", "\n", "dataloader", ",", "\n", "device", ",", "\n", "domain", ",", "\n", "random", "=", "False", ",", "\n", "size", "=", "(", "10", ",", "10", ")", ",", "\n", "episodes", "=", "10", ",", "\n", "seed", "=", "None", ",", "\n", "bar", "=", "None", ",", "\n", "verbose", "=", "False", ",", "\n", "dataset", "=", "False", ",", "\n", "gif", "=", "True", ",", "\n", "alpha_location", "=", "None", ",", "\n", ")", ":", "\n", "\n", "    ", "_dataset", "=", "dataloader", ".", "dataset", "\n", "transforms", "=", "_dataset", ".", "transforms", "\n", "\n", "if", "model", ".", "training", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "\n", "", "if", "dataset", ":", "\n", "        ", "delete_alpha", "(", "alpha_location", ",", "domain", ")", "\n", "\n", "", "count", "=", "0", "\n", "total_solved", "=", "0", "\n", "reward_epoch", "=", "[", "]", "\n", "performance_epoch", "=", "[", "]", "\n", "states", "=", "np", ".", "ndarray", "(", "(", "0", ",", "4", ")", ",", "dtype", "=", "str", ")", "\n", "for", "e", "in", "range", "(", "episodes", ")", ":", "\n", "        ", "_seed", "=", "e", "+", "1", "if", "seed", "is", "None", "else", "seed", "\n", "env", "=", "get_environment", "(", "domain", ",", "size", ",", "_seed", ",", "random", ")", "\n", "\n", "play_function", "=", "domain", "[", "'enjoy'", "]", "\n", "epoch_data", "=", "play_function", "(", "\n", "env", ",", "\n", "model", ",", "\n", "dataset", ",", "\n", "gif", ",", "\n", "count", ",", "\n", "alpha_location", ",", "\n", "transforms", ",", "\n", "device", ",", "\n", "states", ",", "\n", "domain", ",", "\n", ")", "\n", "total_reward", ",", "gif_images", ",", "count", ",", "goal", "=", "epoch_data", "\n", "total_solved", "+=", "goal", "\n", "\n", "if", "gif", ":", "\n", "            ", "save_gif", "(", "gif_images", ",", "random", ",", "e", ")", "\n", "\n", "", "if", "not", "random", ":", "\n", "            ", "performance_epoch", ".", "append", "(", "performance", "(", "total_reward", ",", "_seed", ",", "_dataset", ")", ")", "\n", "", "reward_epoch", ".", "append", "(", "total_reward", ")", "\n", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "f'{e}/{episodes} - Total Reward: {total_reward}'", ")", "\n", "\n", "", "if", "bar", "is", "not", "None", ":", "\n", "            ", "bar", ".", "next", "(", ")", "\n", "\n", "", "env", ".", "close", "(", ")", "\n", "del", "env", "\n", "\n", "", "return", "np", ".", "mean", "(", "reward_epoch", ")", ",", "np", ".", "mean", "(", "performance_epoch", ")", ",", "total_solved", "/", "episodes", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.utils.create_alpha_dataset": [[189, 232], ["open", "collections.defaultdict", "open.close", "collections.defaultdict", "range", "open", "collections.defaultdict", "open.close", "line.replace().split", "classes_idm[].append", "max", "random.sample", "max", "random.sample", "os.path.exists", "os.makedirs", "open", "line.replace().split", "classes_alpha[].append", "collections.defaultdict", "int", "int", "line.replace", "str", "str", "line.replace", "len", "str", "len", "str", "str", "f.write", "f.write", "f.write", "str", "str"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "create_alpha_dataset", "(", "idm", ",", "alpha", ",", "domain", ",", "ratio", "=", "None", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "alpha_file", "=", "open", "(", "f'{alpha}{domain[\"file\"]}'", ",", "'r'", ")", "\n", "\n", "classes_alpha", "=", "defaultdict", "(", "list", ")", "\n", "for", "line", "in", "alpha_file", ":", "\n", "            ", "words", "=", "line", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "';'", ")", "\n", "classes_alpha", "[", "words", "[", "-", "1", "]", "]", ".", "append", "(", "words", ")", "\n", "", "alpha_file", ".", "close", "(", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "alpha_file", "=", "[", "]", "\n", "classes_alpha", "=", "defaultdict", "(", "list", ")", "\n", "\n", "", "idm_file", "=", "open", "(", "f'{idm}{domain[\"file\"]}'", ",", "'r'", ")", "\n", "classes_idm", "=", "defaultdict", "(", "list", ")", "\n", "for", "line", "in", "idm_file", ":", "\n", "        ", "words", "=", "line", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "';'", ")", "\n", "classes_idm", "[", "words", "[", "-", "1", "]", "]", ".", "append", "(", "words", ")", "\n", "", "idm_file", ".", "close", "(", ")", "\n", "\n", "new_dataset", "=", "defaultdict", "(", "list", ")", "\n", "idm_ratio", "=", "1", "if", "ratio", "is", "None", "else", "1", "-", "ratio", "\n", "for", "key", "in", "range", "(", "domain", "[", "'action'", "]", ")", ":", "\n", "# Ipre", "\n", "        ", "k", "=", "max", "(", "0", ",", "int", "(", "len", "(", "classes_idm", "[", "str", "(", "key", ")", "]", ")", "*", "idm_ratio", ")", ")", "\n", "new_dataset", "[", "str", "(", "key", ")", "]", "+=", "random", ".", "sample", "(", "classes_idm", "[", "str", "(", "key", ")", "]", ",", "k", ")", "\n", "\n", "# Ipos", "\n", "k", "=", "max", "(", "0", ",", "int", "(", "len", "(", "classes_alpha", "[", "str", "(", "key", ")", "]", ")", "*", "ratio", ")", ")", "\n", "new_dataset", "[", "str", "(", "key", ")", "]", "+=", "random", ".", "sample", "(", "classes_alpha", "[", "str", "(", "key", ")", "]", ",", "k", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "alpha", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "alpha", ")", "\n", "\n", "", "with", "open", "(", "f'{alpha}{domain[\"file\"]}'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "key", "in", "new_dataset", ":", "\n", "            ", "for", "row", "in", "new_dataset", "[", "str", "(", "key", ")", "]", ":", "\n", "                ", "if", "'previous'", "in", "row", "[", "0", "]", "and", "'maze'", "in", "domain", "[", "'name'", "]", ":", "\n", "                    ", "f", ".", "write", "(", "f'{idm}images/{row[0]};{idm}images/{row[1]};{row[-2]};{row[-1]}\\n'", ")", "\n", "", "elif", "'prev'", "in", "row", "[", "0", "]", ":", "\n", "                    ", "f", ".", "write", "(", "f'{idm}{row[0]};{idm}{row[1]};{row[-1]};{row[-1]}\\n'", ")", "\n", "", "else", ":", "\n", "                    ", "f", ".", "write", "(", "f'{alpha}images/{row[0]};{alpha}images/{row[1]};{row[-1]};{row[-1]}\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.utils.create_alpha_vector_dataset": [[234, 276], ["open", "collections.defaultdict", "open.close", "range", "open", "collections.defaultdict", "open.close", "line.replace().split", "classes_idm[].append", "len", "list", "print", "os.path.exists", "os.makedirs", "open", "line.replace().split", "classes_alpha[].append", "collections.defaultdict", "int", "numpy.random.choice", "len", "f.write", "line.replace", "int", "int", "str", "line.replace", "len", "len", "str", "len", "len", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "", "", "", "", "def", "create_alpha_vector_dataset", "(", "idm", ",", "alpha", ",", "domain", ",", "ratio", "=", "None", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "alpha_file", "=", "open", "(", "f'{alpha}{domain[\"file\"]}'", ",", "'r'", ")", "\n", "\n", "classes_alpha", "=", "defaultdict", "(", "list", ")", "\n", "for", "line", "in", "alpha_file", ":", "\n", "            ", "words", "=", "line", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "';'", ")", "\n", "classes_alpha", "[", "words", "[", "-", "1", "]", "]", ".", "append", "(", "line", ")", "\n", "", "alpha_file", ".", "close", "(", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "alpha_file", "=", "[", "]", "\n", "classes_alpha", "=", "defaultdict", "(", "list", ")", "\n", "\n", "", "idm_file", "=", "open", "(", "f'{idm}{domain[\"file\"]}'", ",", "'r'", ")", "\n", "classes_idm", "=", "defaultdict", "(", "list", ")", "\n", "for", "line", "in", "idm_file", ":", "\n", "        ", "words", "=", "line", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "';'", ")", "\n", "classes_idm", "[", "words", "[", "-", "1", "]", "]", ".", "append", "(", "line", ")", "\n", "", "idm_file", ".", "close", "(", ")", "\n", "\n", "# ratio = 1 if ratio is None else 1 - ratio", "\n", "for", "key", "in", "range", "(", "domain", "[", "'action'", "]", ")", ":", "\n", "        ", "if", "domain", "[", "'name'", "]", "==", "'maze'", ":", "\n", "            ", "k", "=", "int", "(", "len", "(", "classes_idm", "[", "str", "(", "key", ")", "]", ")", "*", "ratio", ")", "\n", "", "else", ":", "\n", "            ", "if", "ratio", "==", "0", ":", "\n", "                ", "k", "=", "int", "(", "len", "(", "classes_idm", "[", "str", "(", "key", ")", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "action_size", "=", "(", "len", "(", "classes_alpha", "[", "str", "(", "key", ")", "]", ")", "*", "100", ")", "/", "(", "ratio", "*", "100", ")", "\n", "k", "=", "int", "(", "action_size", "-", "len", "(", "classes_alpha", "[", "str", "(", "key", ")", "]", ")", ")", "\n", "\n", "", "", "size", "=", "len", "(", "classes_alpha", "[", "str", "(", "key", ")", "]", ")", "\n", "classes_alpha", "[", "str", "(", "key", ")", "]", "+=", "list", "(", "np", ".", "random", ".", "choice", "(", "classes_idm", "[", "str", "(", "key", ")", "]", ",", "k", ")", ")", "\n", "\n", "print", "(", "key", ",", "ratio", ",", "k", ",", "size", ",", "len", "(", "classes_alpha", "[", "str", "(", "key", ")", "]", ")", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "alpha", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "alpha", ")", "\n", "\n", "", "with", "open", "(", "f'{alpha}{domain[\"file\"]}'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "key", "in", "classes_alpha", ":", "\n", "            ", "f", ".", "write", "(", "''", ".", "join", "(", "classes_alpha", "[", "str", "(", "key", ")", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.__init__": [[12, 15], ["collections.defaultdict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "max_count", ")", ":", "\n", "        ", "self", ".", "prev_state", "=", "defaultdict", "(", "int", ")", "\n", "self", ".", "max_count", "=", "max_count", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append": [[16, 20], ["tuple"], "methods", ["None"], ["", "def", "append", "(", "self", ",", "state", ")", ":", "\n", "        ", "state", "=", "tuple", "(", "state", ")", "\n", "self", ".", "prev_state", "[", "state", "]", "+=", "1", "\n", "return", "self", ".", "prev_state", "[", "state", "]", ">", "self", ".", "max_count", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.get_min_reward": [[22, 24], ["None"], "function", ["None"], ["", "", "def", "get_min_reward", "(", ")", ":", "\n", "    ", "return", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.define_goal": [[26, 36], ["None"], "function", ["None"], ["", "def", "define_goal", "(", "domain", ",", "gym_return", ",", "total_reward", ")", ":", "\n", "    ", "location", ",", "reward", ",", "done", ",", "info", "=", "gym_return", "\n", "if", "domain", "[", "'name'", "]", "is", "'maze'", ":", "\n", "        ", "return", "reward", "==", "1", "\n", "", "elif", "domain", "[", "'name'", "]", "is", "'cartpole'", ":", "\n", "        ", "return", "total_reward", "+", "reward", ">=", "195", "\n", "", "elif", "domain", "[", "'name'", "]", "is", "'mountaincar'", ":", "\n", "        ", "return", "location", "[", "0", "]", ">=", "0.5", "\n", "", "elif", "domain", "[", "'name'", "]", "is", "'acrobot'", ":", "\n", "        ", "return", "reward", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.save_alpha": [[38, 62], ["os.path.exists", "enumerate", "open.close", "os.path.exists", "os.makedirs", "open", "open", "PIL.Image.fromarray", "Image.fromarray.save", "len", "len", "open.write", "action.item", "action.item"], "function", ["None"], ["", "", "def", "save_alpha", "(", "datas", ",", "count", ",", "alpha_location", ",", "domain", ")", ":", "\n", "    ", "path", "=", "f'./dataset/{domain[\"name\"]}/POLICY/alpha/'", "if", "alpha_location", "is", "None", "else", "alpha_location", "\n", "\n", "image_path", "=", "f'{path}images/'", "\n", "if", "os", ".", "path", ".", "exists", "(", "image_path", ")", "is", "False", ":", "\n", "        ", "os", ".", "makedirs", "(", "image_path", ")", "\n", "\n", "", "file", "=", "f'{path}{domain[\"file\"]}'", "\n", "if", "os", ".", "path", ".", "exists", "(", "file", ")", ":", "\n", "        ", "f", "=", "open", "(", "file", ",", "'a'", ")", "\n", "", "else", ":", "\n", "        ", "f", "=", "open", "(", "file", ",", "'w'", ")", "\n", "\n", "", "for", "i", ",", "data", "in", "enumerate", "(", "datas", ")", ":", "\n", "        ", "state", ",", "action", "=", "data", "\n", "s", "=", "Image", ".", "fromarray", "(", "state", ")", "\n", "s", ".", "save", "(", "f'{image_path}state_{count + i}.png'", ")", "\n", "\n", "if", "i", "+", "1", "<", "len", "(", "datas", ")", ":", "\n", "            ", "f", ".", "write", "(", "f'state_{count + i}.png;state_{count + (i + 1)}.png;{action.item()};{action.item()}\\n'", ")", "\n", "\n", "", "", "f", ".", "close", "(", ")", "\n", "\n", "return", "count", "+", "len", "(", "datas", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.save_vector_alpha": [[64, 87], ["os.path.exists", "enumerate", "open.close", "os.path.exists", "os.makedirs", "open", "open", "len", "open.write", "state.tolist", "nState.tolist", "action.item"], "function", ["None"], ["", "def", "save_vector_alpha", "(", "datas", ",", "count", ",", "alpha_location", ",", "domain", ")", ":", "\n", "    ", "path", "=", "f'./dataset/{domain[\"name\"]}/POLICY/alpha/'", "if", "alpha_location", "is", "None", "else", "alpha_location", "\n", "\n", "image_path", "=", "f'{path}images/'", "\n", "if", "os", ".", "path", ".", "exists", "(", "image_path", ")", "is", "False", ":", "\n", "        ", "os", ".", "makedirs", "(", "image_path", ")", "\n", "\n", "", "file", "=", "f'{path}{domain[\"file\"]}'", "\n", "if", "os", ".", "path", ".", "exists", "(", "file", ")", ":", "\n", "        ", "f", "=", "open", "(", "file", ",", "'a'", ")", "\n", "", "else", ":", "\n", "        ", "f", "=", "open", "(", "file", ",", "'w'", ")", "\n", "\n", "", "for", "i", ",", "data", "in", "enumerate", "(", "datas", ")", ":", "\n", "        ", "state", ",", "action", "=", "data", "\n", "try", ":", "\n", "            ", "nState", ",", "nAction", "=", "datas", "[", "i", "+", "1", "]", "\n", "f", ".", "write", "(", "f'{state.tolist()};{nState.tolist()};{action.item()}\\n'", ")", "\n", "", "except", "IndexError", ":", "\n", "            ", "continue", "\n", "\n", "", "", "f", ".", "close", "(", ")", "\n", "return", "count", "+", "len", "(", "datas", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.delete_alpha": [[89, 96], ["os.path.exists", "shutil.rmtree", "os.path.exists", "os.remove"], "function", ["None"], ["", "def", "delete_alpha", "(", "alpha_location", ",", "domain", ")", ":", "\n", "    ", "path", "=", "f'./dataset/{domain[\"name\"]}/POLICY/alpha/'", "if", "alpha_location", "is", "None", "else", "alpha_location", "\n", "if", "os", ".", "path", ".", "exists", "(", "f'{path}images/'", ")", "is", "True", ":", "\n", "        ", "shutil", ".", "rmtree", "(", "f'{path}images/'", ",", "ignore_errors", "=", "True", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "f'{path}{domain[\"file\"]}'", ")", "is", "True", ":", "\n", "        ", "os", ".", "remove", "(", "f'{path}{domain[\"file\"]}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.performance": [[98, 101], ["dataset.get_performance_rewards"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.Policy_Vector_Dataset.get_performance_rewards"], ["", "", "def", "performance", "(", "reward", ",", "maze_version", ",", "dataset", ")", ":", "\n", "    ", "sample", ",", "random", "=", "dataset", ".", "get_performance_rewards", "(", "maze_version", ")", "\n", "return", "(", "reward", "-", "random", ")", "/", "(", "sample", "-", "random", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.play": [[103, 192], ["env.reset", "enjoy.EnjoyController", "numpy.ndarray", "len", "enjoy.EnjoyController.append", "env.render", "PIL.Image.fromarray().convert", "transforms", "s.to.view", "s.to.to", "model", "env.step", "enjoy.define_goal", "enjoy.save_alpha", "gif_images.append", "torch.argmax", "int", "numpy.array", "numpy.append", "env.render", "PIL.Image.fromarray().convert", "enjoy.get_min_reward", "PIL.Image.fromarray", "numpy.arange", "torch.nn.functional.softmax().cpu().detach().numpy", "numpy.random.choice", "torch.tensor", "action.to.to", "action.to.double", "np.array.reshape", "gif_images.append", "numpy.array", "numpy.append", "torch.argmax", "numpy.array", "PIL.Image.fromarray", "np.array.reshape", "torch.nn.functional.softmax().cpu().detach", "numpy.array", "torch.nn.functional.softmax().cpu", "torch.nn.functional.softmax"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.ExpertMaze.reset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.define_goal", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.save_alpha", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.get_min_reward", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "play", "(", "\n", "env", ",", "\n", "model", ",", "\n", "dataset", ",", "\n", "gif", ",", "\n", "count", ",", "\n", "alpha_location", ",", "\n", "transforms", ",", "\n", "device", ",", "\n", "states", ",", "\n", "domain", ",", "\n", "args", ",", "\n", ")", ":", "\n", "    ", "location", "=", "env", ".", "reset", "(", ")", "\n", "controller", "=", "EnjoyController", "(", "3", ")", "\n", "done", ",", "goal", "=", "False", ",", "False", "\n", "\n", "gif_images", "=", "[", "]", "\n", "total_reward", "=", "0", "\n", "run", "=", "np", ".", "ndarray", "(", "(", "0", ",", "2", ")", ")", "\n", "\n", "step_count", "=", "0", "\n", "exploration_count", "=", "0", "\n", "\n", "while", "not", "done", ":", "\n", "        ", "step_count", "+=", "1", "\n", "early_stop", "=", "controller", ".", "append", "(", "location", ")", "\n", "s", "=", "env", ".", "render", "(", "'rgb_array'", ")", "\n", "s_image", "=", "Image", ".", "fromarray", "(", "s", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "gif", ":", "\n", "            ", "gif_images", ".", "append", "(", "s_image", ")", "\n", "\n", "", "s", "=", "transforms", "(", "s_image", ")", "\n", "s", "=", "s", ".", "view", "(", "1", ",", "*", "s", ".", "shape", ")", "\n", "s", "=", "s", ".", "to", "(", "device", ")", "\n", "\n", "prediction", "=", "model", "(", "s", ")", "\n", "\n", "if", "args", ".", "choice", "==", "'max'", ":", "\n", "            ", "action", "=", "torch", ".", "argmax", "(", "prediction", ",", "1", ")", "\n", "", "elif", "args", ".", "choice", "==", "'weighted'", ":", "\n", "            ", "classes", "=", "np", ".", "arange", "(", "domain", "[", "'action'", "]", ")", "\n", "prob", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "prediction", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "action", "=", "np", ".", "random", ".", "choice", "(", "classes", ",", "p", "=", "prob", "[", "0", "]", ")", "\n", "\n", "if", "action", "!=", "torch", ".", "argmax", "(", "prediction", ",", "1", ")", ":", "\n", "                ", "exploration_count", "+=", "1", "\n", "\n", "", "action", "=", "torch", ".", "tensor", "(", "action", ")", "\n", "action", "=", "action", ".", "to", "(", "device", ")", "\n", "\n", "", "gym_return", "=", "env", ".", "step", "(", "int", "(", "action", ".", "double", "(", ")", ")", ")", "\n", "location", ",", "reward", ",", "done", ",", "info", "=", "gym_return", "\n", "goal", "=", "define_goal", "(", "domain", ",", "gym_return", ",", "total_reward", ")", "\n", "total_reward", "+=", "reward", "\n", "\n", "if", "dataset", ":", "\n", "            ", "data", "=", "np", ".", "array", "(", "(", "np", ".", "array", "(", "s_image", ")", ",", "action", ")", ")", "\n", "run", "=", "np", ".", "append", "(", "run", ",", "data", ".", "reshape", "(", "(", "1", ",", "*", "data", ".", "shape", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "if", "done", "and", "gif", "or", "dataset", ":", "\n", "            ", "nS", "=", "env", ".", "render", "(", "'rgb_array'", ")", "\n", "nS", "=", "Image", ".", "fromarray", "(", "nS", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "gif", ":", "\n", "                ", "gif_images", ".", "append", "(", "nS", ")", "\n", "\n", "", "if", "dataset", ":", "\n", "                ", "data", "=", "np", ".", "array", "(", "(", "np", ".", "array", "(", "nS", ")", ",", "action", ")", ")", "\n", "run", "=", "np", ".", "append", "(", "run", ",", "data", ".", "reshape", "(", "(", "1", ",", "*", "data", ".", "shape", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "if", "early_stop", "and", "domain", "[", "'name'", "]", "==", "'maze'", ":", "\n", "            ", "total_reward", "=", "get_min_reward", "(", ")", "\n", "done", "=", "True", "\n", "break", "\n", "\n", "", "", "goal", "=", "True", "\n", "if", "dataset", "and", "goal", ":", "\n", "        ", "save_alpha", "(", "\n", "run", ",", "\n", "count", ",", "\n", "alpha_location", ",", "\n", "domain", ",", "\n", ")", "\n", "\n", "", "count", "+=", "len", "(", "run", ")", "\n", "goal", "=", "1", "if", "goal", "else", "0", "\n", "return", "total_reward", ",", "gif_images", ",", "count", ",", "goal", ",", "exploration_count", "/", "step_count", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.play_vector": [[194, 269], ["env.reset", "enjoy.EnjoyController", "numpy.ndarray", "len", "enjoy.EnjoyController.append", "transforms", "env.render.view", "env.render.to", "model", "env.step", "enjoy.define_goal", "enjoy.save_vector_alpha", "env.render", "PIL.Image.fromarray().convert", "gif_images.append", "torch.argmax", "int", "numpy.array", "numpy.append", "env.render", "PIL.Image.fromarray().convert", "gif_images.append", "enjoy.get_min_reward", "numpy.arange", "torch.nn.functional.softmax().cpu().detach().numpy", "numpy.random.choice", "torch.tensor", "action.to.to", "action.to.double", "np.array.reshape", "PIL.Image.fromarray", "PIL.Image.fromarray", "torch.nn.functional.softmax().cpu().detach", "torch.nn.functional.softmax().cpu", "torch.nn.functional.softmax"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.ExpertMaze.reset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.define_goal", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.save_vector_alpha", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.get_min_reward"], ["", "def", "play_vector", "(", "\n", "env", ",", "\n", "model", ",", "\n", "dataset", ",", "\n", "gif", ",", "\n", "count", ",", "\n", "alpha_location", ",", "\n", "transforms", ",", "\n", "device", ",", "\n", "states", ",", "\n", "domain", ",", "\n", "args", ",", "\n", ")", ":", "\n", "    ", "location", "=", "env", ".", "reset", "(", ")", "\n", "controller", "=", "EnjoyController", "(", "3", ")", "\n", "done", ",", "goal", "=", "False", ",", "False", "\n", "\n", "gif_images", "=", "[", "]", "\n", "total_reward", "=", "0", "\n", "run", "=", "np", ".", "ndarray", "(", "(", "0", ",", "2", ")", ")", "\n", "\n", "while", "not", "done", ":", "\n", "        ", "early_stop", "=", "controller", ".", "append", "(", "location", ")", "\n", "\n", "if", "gif", ":", "\n", "            ", "s", "=", "env", ".", "render", "(", "'rgb_array'", ")", "\n", "s_image", "=", "Image", ".", "fromarray", "(", "s", ")", ".", "convert", "(", "'RGB'", ")", "\n", "gif_images", ".", "append", "(", "s_image", ")", "\n", "\n", "", "s", "=", "transforms", "(", "location", ")", "\n", "s", "=", "s", ".", "view", "(", "1", ",", "*", "s", ".", "shape", ")", "\n", "s", "=", "s", ".", "to", "(", "device", ")", "\n", "\n", "prediction", "=", "model", "(", "s", ")", "\n", "\n", "if", "args", ".", "choice", "==", "'max'", ":", "\n", "            ", "action", "=", "torch", ".", "argmax", "(", "prediction", ",", "1", ")", "\n", "", "elif", "args", ".", "choice", "==", "'weighted'", ":", "\n", "            ", "classes", "=", "np", ".", "arange", "(", "domain", "[", "'action'", "]", ")", "\n", "prob", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "prediction", ",", "dim", "=", "1", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "action", "=", "np", ".", "random", ".", "choice", "(", "classes", ",", "p", "=", "prob", "[", "0", "]", ")", "\n", "\n", "action", "=", "torch", ".", "tensor", "(", "action", ")", "\n", "action", "=", "action", ".", "to", "(", "device", ")", "\n", "\n", "", "gym_return", "=", "env", ".", "step", "(", "int", "(", "action", ".", "double", "(", ")", ")", ")", "\n", "location", ",", "reward", ",", "done", ",", "info", "=", "gym_return", "\n", "goal", "=", "define_goal", "(", "domain", ",", "gym_return", ",", "total_reward", ")", "\n", "total_reward", "+=", "reward", "\n", "\n", "if", "dataset", ":", "\n", "            ", "data", "=", "np", ".", "array", "(", "(", "location", ",", "action", ")", ")", "\n", "run", "=", "np", ".", "append", "(", "run", ",", "data", ".", "reshape", "(", "(", "1", ",", "*", "data", ".", "shape", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "if", "done", "and", "gif", ":", "\n", "            ", "nS", "=", "env", ".", "render", "(", "'rgb_array'", ")", "\n", "nS", "=", "Image", ".", "fromarray", "(", "nS", ")", ".", "convert", "(", "'RGB'", ")", "\n", "gif_images", ".", "append", "(", "nS", ")", "\n", "\n", "", "if", "early_stop", "and", "domain", "[", "'name'", "]", "==", "'maze'", ":", "\n", "            ", "total_reward", "=", "get_min_reward", "(", ")", "\n", "done", "=", "True", "\n", "break", "\n", "\n", "", "", "if", "dataset", "and", "goal", ":", "\n", "        ", "save_vector_alpha", "(", "\n", "run", ",", "\n", "count", ",", "\n", "alpha_location", ",", "\n", "domain", ",", "\n", ")", "\n", "\n", "", "count", "+=", "len", "(", "run", ")", "\n", "goal", "=", "1", "if", "goal", "else", "0", "\n", "return", "total_reward", ",", "gif_images", ",", "count", ",", "goal", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.get_environment": [[271, 285], ["gym.make", "gym.make", "gym.make", "gym.make", "gym.make"], "function", ["None"], ["", "def", "get_environment", "(", "domain", ",", "size", "=", "None", ",", "seed", "=", "None", ",", "random", "=", "None", ")", ":", "\n", "    ", "if", "domain", "[", "'name'", "]", "is", "'cartpole'", ":", "\n", "        ", "return", "gym", ".", "make", "(", "'CartPole-v1'", ")", "\n", "", "elif", "domain", "[", "'name'", "]", "is", "'mountaincar'", ":", "\n", "        ", "return", "gym", ".", "make", "(", "'MountainCar-v0'", ")", "\n", "", "elif", "domain", "[", "'name'", "]", "is", "'acrobot'", ":", "\n", "        ", "return", "gym", ".", "make", "(", "'Acrobot-v1'", ")", "\n", "", "elif", "domain", "[", "'name'", "]", "is", "'maze'", ":", "\n", "        ", "if", "random", ":", "\n", "            ", "return", "gym", ".", "make", "(", "f\"maze-random-{size[0]}x{size[1]}-v0\"", ")", "\n", "", "else", ":", "\n", "            ", "return", "gym", ".", "make", "(", "\n", "f\"maze-sample-{size[0]}x{size[1]}-v1\"", ",", "\n", "version", "=", "seed", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.IDM_Vector_Dataset.__init__": [[101, 106], ["torch.utils.data.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "path", ",", "images", ",", "actions", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "previous_images", "=", "images", "[", ":", ",", "0", "]", "\n", "self", ".", "next_images", "=", "images", "[", ":", ",", "1", "]", "\n", "self", ".", "labels", "=", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.IDM_Vector_Dataset.__len__": [[107, 109], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "labels", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.IDM_Vector_Dataset.__getitem__": [[110, 120], ["dataset_MountainCar.IDM_Vector_Dataset.previous_images[].astype", "dataset_MountainCar.IDM_Vector_Dataset.next_images[].astype", "torch.from_numpy", "torch.from_numpy", "torch.tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "s", "=", "self", ".", "previous_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "nS", "=", "self", ".", "next_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "\n", "s", "=", "torch", ".", "from_numpy", "(", "s", ")", "\n", "nS", "=", "torch", ".", "from_numpy", "(", "nS", ")", "\n", "\n", "a", "=", "torch", ".", "tensor", "(", "self", ".", "labels", "[", "idx", "]", ")", "\n", "\n", "return", "(", "s", ",", "nS", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.Policy_Vector_Dataset.__init__": [[129, 134], ["torch.utils.data.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "path", ",", "images", ",", "actions", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "previous_images", "=", "images", "[", ":", ",", "0", "]", "\n", "self", ".", "next_images", "=", "images", "[", ":", ",", "1", "]", "\n", "self", ".", "labels", "=", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.Policy_Vector_Dataset.__len__": [[135, 137], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "labels", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.Policy_Vector_Dataset.__getitem__": [[138, 148], ["dataset_MountainCar.Policy_Vector_Dataset.previous_images[].astype", "dataset_MountainCar.Policy_Vector_Dataset.next_images[].astype", "torch.from_numpy", "torch.from_numpy", "torch.tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "s", "=", "self", ".", "previous_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "nS", "=", "self", ".", "next_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "\n", "s", "=", "torch", ".", "from_numpy", "(", "s", ")", "\n", "nS", "=", "torch", ".", "from_numpy", "(", "nS", ")", "\n", "\n", "a", "=", "torch", ".", "tensor", "(", "self", ".", "labels", "[", "idx", "]", ")", "\n", "\n", "return", "(", "s", ",", "nS", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.Policy_Vector_Dataset.get_performance_rewards": [[149, 151], ["None"], "methods", ["None"], ["", "def", "get_performance_rewards", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "return", "self", ".", "expert", ",", "self", ".", "random_policy", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.detect_path": [[16, 18], ["None"], "function", ["None"], ["def", "detect_path", "(", "file", ")", ":", "\n", "    ", "return", "'/'", "in", "file", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.read_vector": [[20, 46], ["collections.defaultdict", "numpy.ndarray", "open", "enumerate", "numpy.array", "line.replace().split", "numpy.fromstring", "numpy.fromstring", "numpy.append", "int", "actions.append", "numpy.append", "count[].append", "word[].replace().replace().replace", "word[].replace().replace().replace", "line.replace", "word[].replace().replace", "word[].replace().replace", "word[].replace", "word[].replace"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "read_vector", "(", "dataset_path", ",", "idm", "=", "True", ")", ":", "\n", "    ", "count", "=", "defaultdict", "(", "list", ")", "\n", "actions", "=", "[", "]", "\n", "states", "=", "np", ".", "ndarray", "(", "(", "0", ",", "2", ",", "2", ")", ",", "dtype", "=", "str", ")", "\n", "with", "open", "(", "f'{dataset_path}mountaincar.txt'", ")", "as", "f", ":", "\n", "        ", "for", "idx", ",", "line", "in", "enumerate", "(", "f", ")", ":", "\n", "            ", "word", "=", "line", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "';'", ")", "\n", "state", "=", "np", ".", "fromstring", "(", "\n", "word", "[", "0", "]", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "','", ",", "' '", ")", ",", "\n", "sep", "=", "' '", ",", "\n", "dtype", "=", "float", "\n", ")", "\n", "nState", "=", "np", ".", "fromstring", "(", "\n", "word", "[", "1", "]", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "','", ",", "' '", ")", ",", "\n", "sep", "=", "' '", ",", "\n", "dtype", "=", "float", "\n", ")", "\n", "\n", "s", "=", "np", ".", "append", "(", "state", "[", "None", "]", ",", "nState", "[", "None", "]", ",", "axis", "=", "0", ")", "\n", "\n", "action", "=", "int", "(", "word", "[", "-", "1", "]", ")", "\n", "actions", ".", "append", "(", "action", ")", "\n", "states", "=", "np", ".", "append", "(", "states", ",", "s", "[", "None", "]", ",", "axis", "=", "0", ")", "\n", "count", "[", "action", "]", ".", "append", "(", "idx", ")", "\n", "\n", "", "", "return", "count", ",", "states", ",", "np", ".", "array", "(", "actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.balance_dataset": [[48, 88], ["print", "list", "numpy.ndarray", "print", "read_data", "dataset_MountainCar.read_vector", "sizes.append", "len", "min", "range", "numpy.bincount", "len", "numpy.min", "len", "numpy.append().astype", "numpy.random.choice", "numpy.array", "numpy.random.choice", "numpy.append"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.read_data", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.read_vector", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "balance_dataset", "(", "dataset_path", ",", "downsample_size", "=", "5000", ",", "replace", "=", "True", ",", "sampling", "=", "True", ",", "vector", "=", "False", ")", ":", "\n", "    ", "if", "not", "vector", ":", "\n", "        ", "data", "=", "read_data", "(", "dataset_path", ")", "\n", "", "else", ":", "\n", "        ", "data", "=", "read_vector", "(", "dataset_path", ")", "\n", "", "count", ",", "states", ",", "actions", "=", "data", "\n", "\n", "sizes", "=", "[", "]", "\n", "dict_sizes", "=", "{", "}", "\n", "for", "key", "in", "count", ":", "\n", "        ", "sizes", ".", "append", "(", "len", "(", "count", "[", "key", "]", ")", ")", "\n", "dict_sizes", "[", "key", "]", "=", "len", "(", "count", "[", "key", "]", ")", "\n", "", "print", "(", "'Size each action:'", ",", "dict_sizes", ")", "\n", "\n", "if", "sampling", ":", "\n", "        ", "max_size", "=", "np", ".", "min", "(", "sizes", ")", "if", "downsample_size", "is", "not", "None", "else", "None", "\n", "downsample_size", "=", "min", "(", "downsample_size", ",", "max_size", ")", "\n", "\n", "", "classes", "=", "list", "(", "range", "(", "0", ",", "3", ")", ")", "\n", "all_idxs", "=", "np", ".", "ndarray", "(", "(", "0", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "if", "downsample_size", "is", "not", "None", ":", "\n", "        ", "for", "i", "in", "classes", ":", "\n", "            ", "size", "=", "len", "(", "count", "[", "i", "]", ")", "\n", "\n", "try", ":", "\n", "                ", "random_idxs", "=", "np", ".", "random", ".", "choice", "(", "size", ",", "downsample_size", ",", "replace", "=", "replace", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "random_idxs", "=", "np", ".", "random", ".", "choice", "(", "size", ",", "size", ",", "replace", "=", "replace", ")", "\n", "\n", "", "idxs", "=", "np", ".", "array", "(", "count", "[", "i", "]", ")", "[", "random_idxs", "]", "\n", "all_idxs", "=", "np", ".", "append", "(", "all_idxs", ",", "idxs", ",", "axis", "=", "0", ")", ".", "astype", "(", "int", ")", "\n", "\n", "", "states", "=", "states", "[", "all_idxs", "]", "\n", "a", "=", "actions", "[", "all_idxs", "]", "\n", "", "else", ":", "\n", "        ", "for", "i", "in", "classes", ":", "\n", "            ", "a", "=", "actions", "\n", "\n", "", "", "print", "(", "'Final size action:'", ",", "np", ".", "bincount", "(", "a", ")", ")", "\n", "return", "states", ",", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.split_dataset": [[90, 95], ["sklearn.model_selection.train_test_split", "sklearn.model_selection.train_test_split"], "function", ["None"], ["", "def", "split_dataset", "(", "states", ",", "actions", ",", "stratify", "=", "True", ")", ":", "\n", "    ", "if", "stratify", ":", "\n", "        ", "return", "train_test_split", "(", "states", ",", "actions", ",", "test_size", "=", "0.3", ",", "stratify", "=", "actions", ")", "\n", "", "else", ":", "\n", "        ", "return", "train_test_split", "(", "states", ",", "actions", ",", "test_size", "=", "0.3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.get_idm_dataset": [[153, 175], ["dataset_MountainCar.balance_dataset", "dataset_MountainCar.split_dataset", "IDM_Dataset", "IDM_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.balance_dataset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.split_dataset"], ["", "", "def", "get_idm_dataset", "(", "\n", "path", ",", "\n", "batch_size", ",", "\n", "downsample_size", "=", "5000", ",", "\n", "shuffle", "=", "True", ",", "\n", "replace", "=", "True", ",", "\n", "sampling", "=", "True", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "    ", "states", ",", "actions", "=", "balance_dataset", "(", "\n", "path", ",", "\n", "downsample_size", "=", "downsample_size", ",", "\n", "replace", "=", "replace", ",", "\n", "sampling", "=", "sampling", ",", "\n", ")", "\n", "train", ",", "validation", ",", "train_y", ",", "validation_y", "=", "split_dataset", "(", "states", ",", "actions", ")", "\n", "\n", "train_dataset", "=", "IDM_Dataset", "(", "path", ",", "train", ",", "train_y", ")", "\n", "validation_dataset", "=", "IDM_Dataset", "(", "path", ",", "validation", ",", "validation_y", ")", "\n", "train", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "validation", "=", "DataLoader", "(", "validation_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "return", "train", ",", "validation", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.get_policy_dataset": [[177, 192], ["dataset_MountainCar.balance_dataset", "dataset_MountainCar.split_dataset", "Policy_Dataset", "Policy_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.balance_dataset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.split_dataset"], ["", "def", "get_policy_dataset", "(", "path", ",", "batch_size", ",", "shuffle", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "states", ",", "actions", "=", "balance_dataset", "(", "\n", "path", ",", "\n", "downsample_size", "=", "None", ",", "\n", "replace", "=", "False", ",", "\n", "sampling", "=", "False", ",", "\n", ")", "\n", "\n", "train", ",", "validation", ",", "train_y", ",", "validation_y", "=", "split_dataset", "(", "states", ",", "actions", ")", "\n", "train_dataset", "=", "Policy_Dataset", "(", "path", ",", "train", ",", "train_y", ")", "\n", "validation_dataset", "=", "Policy_Dataset", "(", "path", ",", "validation", ",", "validation_y", ")", "\n", "\n", "train", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "validation", "=", "DataLoader", "(", "validation_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "return", "train", ",", "validation", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.get_idm_vector_dataset": [[194, 218], ["dataset_MountainCar.balance_dataset", "dataset_MountainCar.split_dataset", "dataset_MountainCar.IDM_Vector_Dataset", "dataset_MountainCar.IDM_Vector_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.balance_dataset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.split_dataset"], ["", "def", "get_idm_vector_dataset", "(", "\n", "path", ",", "\n", "batch_size", ",", "\n", "downsample_size", "=", "5000", ",", "\n", "shuffle", "=", "True", ",", "\n", "replace", "=", "True", ",", "\n", "sampling", "=", "True", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "\n", "    ", "states", ",", "actions", "=", "balance_dataset", "(", "\n", "path", ",", "\n", "downsample_size", "=", "downsample_size", ",", "\n", "replace", "=", "replace", ",", "\n", "sampling", "=", "sampling", ",", "\n", "vector", "=", "True", ",", "\n", ")", "\n", "train", ",", "validation", ",", "train_y", ",", "validation_y", "=", "split_dataset", "(", "states", ",", "actions", ")", "\n", "\n", "train_dataset", "=", "IDM_Vector_Dataset", "(", "path", ",", "train", ",", "train_y", ")", "\n", "validation_dataset", "=", "IDM_Vector_Dataset", "(", "path", ",", "validation", ",", "validation_y", ")", "\n", "train", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "validation", "=", "DataLoader", "(", "validation_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "return", "train", ",", "validation", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_MountainCar.get_policy_vector_dataset": [[220, 244], ["dataset_MountainCar.balance_dataset", "dataset_MountainCar.split_dataset", "dataset_MountainCar.Policy_Vector_Dataset", "dataset_MountainCar.Policy_Vector_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.balance_dataset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.split_dataset"], ["", "def", "get_policy_vector_dataset", "(", "\n", "path", ",", "\n", "batch_size", ",", "\n", "downsample_size", "=", "5000", ",", "\n", "shuffle", "=", "True", ",", "\n", "replace", "=", "True", ",", "\n", "sampling", "=", "True", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "\n", "    ", "states", ",", "actions", "=", "balance_dataset", "(", "\n", "path", ",", "\n", "downsample_size", "=", "None", ",", "\n", "replace", "=", "False", ",", "\n", "sampling", "=", "False", ",", "\n", "vector", "=", "True", ",", "\n", ")", "\n", "train", ",", "validation", ",", "train_y", ",", "validation_y", "=", "split_dataset", "(", "states", ",", "actions", ")", "\n", "\n", "train_dataset", "=", "Policy_Vector_Dataset", "(", "path", ",", "train", ",", "train_y", ")", "\n", "validation_dataset", "=", "Policy_Vector_Dataset", "(", "path", ",", "validation", ",", "validation_y", ")", "\n", "train", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "validation", "=", "DataLoader", "(", "validation_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "return", "train", ",", "validation", "\n", "", ""]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.IDM_Vector_Dataset.__init__": [[92, 97], ["torch.utils.data.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "path", ",", "images", ",", "actions", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "previous_images", "=", "images", "[", ":", ",", "0", "]", "\n", "self", ".", "next_images", "=", "images", "[", ":", ",", "1", "]", "\n", "self", ".", "labels", "=", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.IDM_Vector_Dataset.__len__": [[98, 100], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "labels", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.IDM_Vector_Dataset.__getitem__": [[101, 111], ["dataset_Acrobot.IDM_Vector_Dataset.previous_images[].astype", "dataset_Acrobot.IDM_Vector_Dataset.next_images[].astype", "torch.from_numpy", "torch.from_numpy", "torch.tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "s", "=", "self", ".", "previous_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "nS", "=", "self", ".", "next_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "\n", "s", "=", "torch", ".", "from_numpy", "(", "s", ")", "\n", "nS", "=", "torch", ".", "from_numpy", "(", "nS", ")", "\n", "\n", "a", "=", "torch", ".", "tensor", "(", "self", ".", "labels", "[", "idx", "]", ")", "\n", "\n", "return", "(", "s", ",", "nS", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.Policy_Vector_Dataset.__init__": [[120, 125], ["torch.utils.data.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "path", ",", "images", ",", "actions", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "previous_images", "=", "images", "[", ":", ",", "0", "]", "\n", "self", ".", "next_images", "=", "images", "[", ":", ",", "1", "]", "\n", "self", ".", "labels", "=", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.Policy_Vector_Dataset.__len__": [[126, 128], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "labels", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.Policy_Vector_Dataset.__getitem__": [[129, 139], ["dataset_Acrobot.Policy_Vector_Dataset.previous_images[].astype", "dataset_Acrobot.Policy_Vector_Dataset.next_images[].astype", "torch.from_numpy", "torch.from_numpy", "torch.tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "s", "=", "self", ".", "previous_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "nS", "=", "self", ".", "next_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "\n", "s", "=", "torch", ".", "from_numpy", "(", "s", ")", "\n", "nS", "=", "torch", ".", "from_numpy", "(", "nS", ")", "\n", "\n", "a", "=", "torch", ".", "tensor", "(", "self", ".", "labels", "[", "idx", "]", ")", "\n", "\n", "return", "(", "s", ",", "nS", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.Policy_Vector_Dataset.get_performance_rewards": [[140, 142], ["None"], "methods", ["None"], ["", "def", "get_performance_rewards", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "return", "self", ".", "expert", ",", "self", ".", "random_policy", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.detect_path": [[16, 18], ["None"], "function", ["None"], ["def", "detect_path", "(", "file", ")", ":", "\n", "    ", "return", "'/'", "in", "file", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.read_vector": [[20, 40], ["collections.defaultdict", "numpy.ndarray", "open", "enumerate", "numpy.array", "line.replace().split", "numpy.fromstring", "numpy.fromstring", "numpy.append", "int", "actions.append", "numpy.append", "count[].append", "word[].replace().replace", "word[].replace().replace", "line.replace", "word[].replace", "word[].replace"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "read_vector", "(", "dataset_path", ",", "idm", "=", "True", ")", ":", "\n", "    ", "count", "=", "defaultdict", "(", "list", ")", "\n", "actions", "=", "[", "]", "\n", "states", "=", "np", ".", "ndarray", "(", "(", "0", ",", "2", ",", "6", ")", ",", "dtype", "=", "str", ")", "\n", "with", "open", "(", "f'{dataset_path}acrobot.txt'", ")", "as", "f", ":", "\n", "        ", "for", "idx", ",", "line", "in", "enumerate", "(", "f", ")", ":", "\n", "            ", "word", "=", "line", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "';'", ")", "\n", "state", "=", "np", ".", "fromstring", "(", "word", "[", "0", "]", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ",", "sep", "=", "','", ",", "dtype", "=", "float", ")", "\n", "nState", "=", "np", ".", "fromstring", "(", "word", "[", "1", "]", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ",", "sep", "=", "','", ",", "dtype", "=", "float", ")", "\n", "\n", "s", "=", "np", ".", "append", "(", "state", "[", "None", "]", ",", "nState", "[", "None", "]", ",", "axis", "=", "0", ")", "\n", "\n", "action", "=", "int", "(", "word", "[", "-", "1", "]", ")", "\n", "actions", ".", "append", "(", "action", ")", "\n", "\n", "states", "=", "np", ".", "append", "(", "states", ",", "s", "[", "None", "]", ",", "axis", "=", "0", ")", "\n", "\n", "count", "[", "action", "]", ".", "append", "(", "idx", ")", "\n", "\n", "", "", "return", "count", ",", "states", ",", "np", ".", "array", "(", "actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.balance_dataset": [[42, 79], ["dataset_Acrobot.read_vector", "print", "list", "numpy.ndarray", "print", "sizes.append", "len", "min", "range", "numpy.bincount", "len", "numpy.min", "len", "numpy.append().astype", "numpy.random.choice", "numpy.array", "numpy.random.choice", "numpy.append"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.read_vector", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "balance_dataset", "(", "dataset_path", ",", "downsample_size", "=", "5000", ",", "replace", "=", "True", ",", "sampling", "=", "True", ")", ":", "\n", "    ", "data", "=", "read_vector", "(", "dataset_path", ")", "\n", "count", ",", "states", ",", "actions", "=", "data", "\n", "\n", "sizes", "=", "[", "]", "\n", "dict_sizes", "=", "{", "}", "\n", "for", "key", "in", "count", ":", "\n", "        ", "sizes", ".", "append", "(", "len", "(", "count", "[", "key", "]", ")", ")", "\n", "dict_sizes", "[", "key", "]", "=", "len", "(", "count", "[", "key", "]", ")", "\n", "", "print", "(", "'Size each action:'", ",", "dict_sizes", ")", "\n", "\n", "if", "sampling", ":", "\n", "        ", "max_size", "=", "np", ".", "min", "(", "sizes", ")", "if", "downsample_size", "is", "not", "None", "else", "None", "\n", "downsample_size", "=", "min", "(", "downsample_size", ",", "max_size", ")", "\n", "\n", "", "classes", "=", "list", "(", "range", "(", "0", ",", "3", ")", ")", "\n", "all_idxs", "=", "np", ".", "ndarray", "(", "(", "0", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "if", "downsample_size", "is", "not", "None", ":", "\n", "        ", "for", "i", "in", "classes", ":", "\n", "            ", "size", "=", "len", "(", "count", "[", "i", "]", ")", "\n", "\n", "try", ":", "\n", "                ", "random_idxs", "=", "np", ".", "random", ".", "choice", "(", "size", ",", "downsample_size", ",", "replace", "=", "replace", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "random_idxs", "=", "np", ".", "random", ".", "choice", "(", "size", ",", "size", ",", "replace", "=", "replace", ")", "\n", "\n", "", "idxs", "=", "np", ".", "array", "(", "count", "[", "i", "]", ")", "[", "random_idxs", "]", "\n", "all_idxs", "=", "np", ".", "append", "(", "all_idxs", ",", "idxs", ",", "axis", "=", "0", ")", ".", "astype", "(", "int", ")", "\n", "\n", "", "states", "=", "states", "[", "all_idxs", "]", "\n", "a", "=", "actions", "[", "all_idxs", "]", "\n", "", "else", ":", "\n", "        ", "for", "i", "in", "classes", ":", "\n", "            ", "a", "=", "actions", "\n", "\n", "", "", "print", "(", "'Final size action:'", ",", "np", ".", "bincount", "(", "a", ")", ")", "\n", "return", "states", ",", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.split_dataset": [[81, 86], ["sklearn.model_selection.train_test_split", "sklearn.model_selection.train_test_split"], "function", ["None"], ["", "def", "split_dataset", "(", "states", ",", "actions", ",", "stratify", "=", "True", ")", ":", "\n", "    ", "if", "stratify", ":", "\n", "        ", "return", "train_test_split", "(", "states", ",", "actions", ",", "test_size", "=", "0.3", ",", "stratify", "=", "actions", ")", "\n", "", "else", ":", "\n", "        ", "return", "train_test_split", "(", "states", ",", "actions", ",", "test_size", "=", "0.3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.get_idm_vector_dataset": [[144, 168], ["dataset_Acrobot.balance_dataset", "dataset_Acrobot.split_dataset", "dataset_Acrobot.IDM_Vector_Dataset", "dataset_Acrobot.IDM_Vector_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.balance_dataset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.split_dataset"], ["", "", "def", "get_idm_vector_dataset", "(", "\n", "path", ",", "\n", "batch_size", ",", "\n", "downsample_size", "=", "5000", ",", "\n", "shuffle", "=", "True", ",", "\n", "replace", "=", "True", ",", "\n", "sampling", "=", "True", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "\n", "    ", "states", ",", "actions", "=", "balance_dataset", "(", "\n", "path", ",", "\n", "downsample_size", "=", "downsample_size", ",", "\n", "replace", "=", "replace", ",", "\n", "sampling", "=", "sampling", ",", "\n", "vector", "=", "True", ",", "\n", ")", "\n", "train", ",", "validation", ",", "train_y", ",", "validation_y", "=", "split_dataset", "(", "states", ",", "actions", ")", "\n", "\n", "train_dataset", "=", "IDM_Vector_Dataset", "(", "path", ",", "train", ",", "train_y", ")", "\n", "validation_dataset", "=", "IDM_Vector_Dataset", "(", "path", ",", "validation", ",", "validation_y", ")", "\n", "train", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "validation", "=", "DataLoader", "(", "validation_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "return", "train", ",", "validation", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Acrobot.get_policy_vector_dataset": [[170, 194], ["dataset_Acrobot.balance_dataset", "dataset_Acrobot.split_dataset", "dataset_Acrobot.Policy_Vector_Dataset", "dataset_Acrobot.Policy_Vector_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.balance_dataset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.split_dataset"], ["", "def", "get_policy_vector_dataset", "(", "\n", "path", ",", "\n", "batch_size", ",", "\n", "downsample_size", "=", "5000", ",", "\n", "shuffle", "=", "True", ",", "\n", "replace", "=", "True", ",", "\n", "sampling", "=", "True", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "\n", "    ", "states", ",", "actions", "=", "balance_dataset", "(", "\n", "path", ",", "\n", "downsample_size", "=", "None", ",", "\n", "replace", "=", "False", ",", "\n", "sampling", "=", "False", ",", "\n", "vector", "=", "True", ",", "\n", ")", "\n", "train", ",", "validation", ",", "train_y", ",", "validation_y", "=", "split_dataset", "(", "states", ",", "actions", ")", "\n", "\n", "train_dataset", "=", "Policy_Vector_Dataset", "(", "path", ",", "train", ",", "train_y", ")", "\n", "validation_dataset", "=", "Policy_Vector_Dataset", "(", "path", ",", "validation", ",", "validation_y", ")", "\n", "train", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "validation", "=", "DataLoader", "(", "validation_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "return", "train", ",", "validation", "\n", "", ""]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.ExpertMaze.__init__": [[103, 110], ["runs[].mean", "random[].mean"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "runs", ",", "random", ",", "train", ")", ":", "\n", "        ", "self", ".", "index", "=", "random", "[", "0", ",", "0", "]", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "runs", "=", "runs", "\n", "self", ".", "original_runs", "=", "runs", "\n", "self", ".", "avg_reward", "=", "runs", "[", ":", ",", "2", "]", ".", "mean", "(", ")", "\n", "self", ".", "avg_reward_random", "=", "random", "[", ":", ",", "2", "]", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.ExpertMaze.get_data": [[111, 120], ["int", "dataset_Maze.ExpertMaze.get_random_data", "dataset_Maze.ExpertMaze.get_sample_data", "len"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.ExpertMaze.get_random_data", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.ExpertMaze.get_sample_data"], ["", "def", "get_data", "(", "self", ",", "random", ",", "type", ")", ":", "\n", "        ", "if", "type", "==", "'all'", ":", "\n", "            ", "split", "=", "int", "(", "len", "(", "self", ".", "runs", ")", "*", "self", ".", "train", ")", "\n", "return", "self", ".", "runs", ",", "self", ".", "runs", "\n", "\n", "", "if", "random", "is", "True", ":", "\n", "            ", "return", "self", ".", "get_random_data", "(", "type", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "get_sample_data", "(", "type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.ExpertMaze.get_random_data": [[121, 134], ["numpy.random.randint", "numpy.delete", "range", "numpy.random.randint", "result.append", "numpy.delete"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "", "def", "get_random_data", "(", "self", ",", "type", ")", ":", "\n", "        ", "if", "type", "==", "'same'", ":", "\n", "            ", "index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "runs", ".", "shape", "[", "0", "]", ")", "\n", "information", "=", "self", ".", "runs", "[", "index", "]", "\n", "self", ".", "runs", "=", "np", ".", "delete", "(", "self", ".", "runs", ",", "index", ",", "axis", "=", "0", ")", "\n", "return", "information", ",", "information", "\n", "", "else", ":", "\n", "            ", "result", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "                ", "index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "runs", ".", "shape", "[", "0", "]", ")", "\n", "result", ".", "append", "(", "self", ".", "runs", "[", "index", "]", ")", "\n", "self", ".", "runs", "=", "np", ".", "delete", "(", "self", ".", "runs", ",", "index", ",", "axis", "=", "0", ")", "\n", "", "return", "result", "[", "0", "]", ",", "result", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.ExpertMaze.get_sample_data": [[135, 147], ["numpy.delete", "result.append", "result.append", "numpy.delete", "numpy.delete"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "", "def", "get_sample_data", "(", "self", ",", "type", ")", ":", "\n", "        ", "if", "type", "==", "'same'", ":", "\n", "            ", "information", "=", "self", ".", "runs", "[", "0", "]", "\n", "self", ".", "runs", "=", "np", ".", "delete", "(", "self", ".", "runs", ",", "0", ",", "axis", "=", "0", ")", "\n", "return", "information", ",", "information", "\n", "", "else", ":", "\n", "            ", "result", "=", "[", "]", "\n", "result", ".", "append", "(", "self", ".", "runs", "[", "0", "]", ")", "\n", "result", ".", "append", "(", "self", ".", "runs", "[", "1", "]", ")", "\n", "self", ".", "runs", "=", "np", ".", "delete", "(", "self", ".", "runs", ",", "0", ",", "axis", "=", "0", ")", "\n", "self", ".", "runs", "=", "np", ".", "delete", "(", "self", ".", "runs", ",", "1", ",", "axis", "=", "0", ")", "\n", "return", "result", "[", "0", "]", ",", "result", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.ExpertMaze.reset": [[148, 150], ["copy.copy.copy"], "methods", ["None"], ["", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "runs", "=", "copy", "(", "self", ".", "original_runs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.IDM_Dataset.__init__": [[159, 165], ["torch.utils.data.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "images", ",", "actions", ",", "mode", "=", "'RGB'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "previous_images", "=", "images", "[", ":", ",", "0", "]", "\n", "self", ".", "next_images", "=", "images", "[", ":", ",", "1", "]", "\n", "self", ".", "labels", "=", "actions", "\n", "self", ".", "mode", "=", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.IDM_Dataset.__len__": [[166, 168], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "labels", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.IDM_Dataset.__getitem__": [[169, 179], ["PIL.Image.open().convert", "PIL.Image.open().convert", "dataset_Maze.IDM_Dataset.transforms", "dataset_Maze.IDM_Dataset.transforms", "torch.tensor", "PIL.Image.open", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "s", "=", "Image", ".", "open", "(", "self", ".", "previous_images", "[", "idx", "]", ")", ".", "convert", "(", "self", ".", "mode", ")", "\n", "nS", "=", "Image", ".", "open", "(", "self", ".", "next_images", "[", "idx", "]", ")", ".", "convert", "(", "self", ".", "mode", ")", "\n", "\n", "s", "=", "self", ".", "transforms", "(", "s", ")", "\n", "nS", "=", "self", ".", "transforms", "(", "nS", ")", "\n", "\n", "a", "=", "torch", ".", "tensor", "(", "self", ".", "labels", "[", "idx", "]", ")", "\n", "\n", "return", "(", "s", ",", "nS", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.__init__": [[188, 218], ["torch.utils.data.Dataset.__init__", "dataset_Maze.Policy_Dataset.read_expert", "Exception", "dataset_Maze.Policy_Dataset.read_config", "dataset_Maze.Policy_Dataset.get_index", "dataset_Maze.Policy_Dataset.get_index", "dataset_Maze.Policy_Dataset.astype", "dataset_Maze.Policy_Dataset.astype", "dataset_Maze.Policy_Dataset.astype", "dataset_Maze.Policy_Dataset.astype", "dataset_Maze.Policy_Dataset.astype", "dataset_Maze.Policy_Dataset.astype"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.read_expert", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.read_config", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.get_index", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.get_index"], ["def", "__init__", "(", "self", ",", "config", ",", "path", ",", "train", "=", "True", ",", "\n", "random", "=", "True", ",", "type", "=", "'single'", ",", "\n", "mode", "=", "'RGB'", ",", "labyrinths_valid", "=", "None", ",", "\n", "train_size", "=", "0.7", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mazes", "=", "[", "]", "\n", "if", "type", "not", "in", "[", "'single'", ",", "'all'", ",", "'same'", ",", "'different'", "]", ":", "\n", "            ", "raise", "Exception", "(", "'Type should be \\'all\\', \\'single\\', \\'same\\' or \\'different\\''", ")", "\n", "\n", "", "self", ".", "read_expert", "(", "config", "+", "'maze.txt'", ")", "\n", "\n", "if", "labyrinths_valid", "is", "None", ":", "\n", "            ", "self", ".", "read_config", "(", "config", ",", "random", ",", "type", ",", "train_size", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "labyrinths_valid", "=", "labyrinths_valid", "\n", "\n", "", "if", "train", ":", "\n", "            ", "idxs", "=", "self", ".", "get_index", "(", "self", ".", "labyrinths_train", ")", "\n", "self", ".", "actions", "=", "self", ".", "actions", "[", "idxs", ".", "astype", "(", "'int'", ")", "]", "\n", "self", ".", "previous_images", "=", "self", ".", "previous_images", "[", "idxs", ".", "astype", "(", "'int'", ")", "]", "\n", "self", ".", "next_images", "=", "self", ".", "next_images", "[", "idxs", ".", "astype", "(", "'int'", ")", "]", "\n", "", "else", ":", "\n", "            ", "idxs", "=", "self", ".", "get_index", "(", "self", ".", "labyrinths_valid", ")", "\n", "self", ".", "actions", "=", "self", ".", "actions", "[", "idxs", ".", "astype", "(", "'int'", ")", "]", "\n", "self", ".", "previous_images", "=", "self", ".", "previous_images", "[", "idxs", ".", "astype", "(", "'int'", ")", "]", "\n", "self", ".", "next_images", "=", "self", ".", "next_images", "[", "idxs", ".", "astype", "(", "'int'", ")", "]", "\n", "\n", "", "self", ".", "mode", "=", "mode", "\n", "self", ".", "path", "=", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.__len__": [[219, 221], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "actions", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.__getitem__": [[222, 231], ["PIL.Image.open().convert", "PIL.Image.open().convert", "dataset_Maze.Policy_Dataset.transforms", "dataset_Maze.Policy_Dataset.transforms", "torch.tensor().long", "PIL.Image.open", "PIL.Image.open", "torch.tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "s", "=", "Image", ".", "open", "(", "f'{self.path}{self.previous_images[idx]}'", ")", ".", "convert", "(", "self", ".", "mode", ")", "\n", "nS", "=", "Image", ".", "open", "(", "f'{self.path}{self.next_images[idx]}'", ")", ".", "convert", "(", "self", ".", "mode", ")", "\n", "\n", "s", "=", "self", ".", "transforms", "(", "s", ")", "\n", "nS", "=", "self", ".", "transforms", "(", "nS", ")", "\n", "\n", "a", "=", "torch", ".", "tensor", "(", "self", ".", "actions", "[", "idx", "]", ")", ".", "long", "(", ")", "\n", "return", "(", "s", ",", "nS", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.read_expert": [[232, 247], ["numpy.array", "numpy.array", "numpy.array", "open", "line.replace().split", "dataset_Maze.Policy_Dataset.previous_images.append", "dataset_Maze.Policy_Dataset.next_images.append", "dataset_Maze.Policy_Dataset.actions.append", "line.replace"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "read_expert", "(", "self", ",", "file", ")", ":", "\n", "        ", "self", ".", "actions", "=", "[", "]", "\n", "self", ".", "next_images", "=", "[", "]", "\n", "self", ".", "previous_images", "=", "[", "]", "\n", "\n", "with", "open", "(", "file", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "words", "=", "line", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "';'", ")", "\n", "self", ".", "previous_images", ".", "append", "(", "words", "[", "0", "]", ")", "\n", "self", ".", "next_images", ".", "append", "(", "words", "[", "1", "]", ")", "\n", "self", ".", "actions", ".", "append", "(", "words", "[", "-", "1", "]", ")", "\n", "\n", "", "", "self", ".", "actions", "=", "np", ".", "array", "(", "self", ".", "actions", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "self", ".", "next_images", "=", "np", ".", "array", "(", "self", ".", "next_images", ")", "\n", "self", ".", "previous_images", "=", "np", ".", "array", "(", "self", ".", "previous_images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.read_config": [[248, 272], ["pandas.read_csv", "pandas.read_csv", "zip", "pandas.read_csv.groupby", "pandas.read_csv.groupby", "dataset_Maze.Policy_Dataset.mazes.append", "labyrinth.get_data", "dataset_Maze.ExpertMaze", "dataset_Maze.Policy_Dataset.labyrinths_train.append", "dataset_Maze.Policy_Dataset.labyrinths_valid.append", "maze.to_numpy", "random.to_numpy", "dataset_Maze.Policy_Dataset.labyrinths_train.append", "dataset_Maze.Policy_Dataset.labyrinths_valid.append"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.ExpertMaze.get_data", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "read_config", "(", "self", ",", "file", ",", "random", ",", "type", ",", "train", ")", ":", "\n", "        ", "df", "=", "pd", ".", "read_csv", "(", "file", "+", "'expert.txt'", ",", "sep", "=", "';'", ",", "header", "=", "None", ")", "\n", "df", ".", "columns", "=", "[", "'maze'", ",", "'number'", ",", "'reward'", ",", "'start'", ",", "'end'", "]", "\n", "\n", "df_random", "=", "pd", ".", "read_csv", "(", "file", "+", "'random.txt'", ",", "sep", "=", "';'", ",", "header", "=", "None", ")", "\n", "df_random", ".", "columns", "=", "[", "'maze'", ",", "'number'", ",", "'reward'", "]", "\n", "\n", "for", "expert", ",", "random", "in", "zip", "(", "df", ".", "groupby", "(", "'maze'", ")", ",", "df_random", ".", "groupby", "(", "'maze'", ")", ")", ":", "\n", "            ", "_", ",", "maze", "=", "expert", "\n", "_", ",", "random", "=", "random", "\n", "self", ".", "mazes", ".", "append", "(", "ExpertMaze", "(", "maze", ".", "to_numpy", "(", ")", ",", "random", ".", "to_numpy", "(", ")", ",", "train", ")", ")", "\n", "\n", "", "self", ".", "labyrinths_train", "=", "[", "]", "\n", "self", ".", "labyrinths_valid", "=", "[", "]", "\n", "for", "labyrinth", "in", "self", ".", "mazes", ":", "\n", "            ", "train_lab", ",", "valid_lab", "=", "labyrinth", ".", "get_data", "(", "random", ",", "type", ")", "\n", "if", "type", "==", "'all'", ":", "\n", "                ", "for", "t", "in", "train_lab", ":", "\n", "                    ", "self", ".", "labyrinths_train", ".", "append", "(", "t", ")", "\n", "", "for", "v", "in", "valid_lab", ":", "\n", "                    ", "self", ".", "labyrinths_valid", ".", "append", "(", "v", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "labyrinths_train", ".", "append", "(", "train_lab", ")", "\n", "self", ".", "labyrinths_valid", ".", "append", "(", "valid_lab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.get_index": [[273, 281], ["numpy.array", "enumerate", "int", "numpy.append", "int", "list", "range"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "", "", "def", "get_index", "(", "self", ",", "maze_list", ")", ":", "\n", "        ", "idxs", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "for", "i", ",", "labyrinth", "in", "enumerate", "(", "maze_list", ")", ":", "\n", "            ", "r", "=", "labyrinth", "[", "-", "2", ":", "]", "\n", "begin", "=", "int", "(", "r", "[", "0", "]", ")", "\n", "end", "=", "int", "(", "r", "[", "1", "]", ")", "+", "1", "\n", "idxs", "=", "np", ".", "append", "(", "idxs", ",", "list", "(", "range", "(", "begin", ",", "end", ")", ")", ")", "\n", "", "return", "idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.Policy_Dataset.get_performance_rewards": [[282, 286], ["None"], "methods", ["None"], ["", "def", "get_performance_rewards", "(", "self", ",", "index", ")", ":", "\n", "        ", "for", "maze", "in", "self", ".", "mazes", ":", "\n", "            ", "if", "maze", ".", "index", "==", "index", ":", "\n", "                ", "return", "maze", ".", "avg_reward", ",", "maze", ".", "avg_reward_random", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.detect_path": [[15, 17], ["None"], "function", ["None"], ["def", "detect_path", "(", "file", ")", ":", "\n", "    ", "return", "'/'", "in", "file", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.read_data": [[19, 49], ["range", "numpy.ndarray", "open", "enumerate", "numpy.array", "numpy.array", "line.replace().split", "numpy.append", "int", "actions.append", "reducted_actions.append", "str", "dataset_Maze.detect_path", "dataset_Maze.detect_path", "numpy.array().reshape", "count[].append", "int", "count[].append", "line.replace", "int", "numpy.array"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.detect_path", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.detect_path", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "read_data", "(", "file_path", ",", "dataset_path", ",", "reducted", "=", "False", ",", "no_hit", "=", "False", ")", ":", "\n", "    ", "count", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "-", "1", ",", "4", ")", ":", "\n", "        ", "count", "[", "str", "(", "i", ")", "]", "=", "[", "]", "\n", "\n", "", "states", "=", "np", ".", "ndarray", "(", "(", "0", ",", "2", ")", ")", "\n", "\n", "actions", "=", "[", "]", "\n", "reducted_actions", "=", "[", "]", "\n", "\n", "with", "open", "(", "file_path", ")", "as", "f", ":", "\n", "        ", "for", "idx", ",", "line", "in", "enumerate", "(", "f", ")", ":", "\n", "            ", "words", "=", "line", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "';'", ")", "\n", "state", "=", "words", "[", "0", "]", "if", "detect_path", "(", "words", "[", "0", "]", ")", "else", "f'{dataset_path}{words[0]}'", "\n", "nState", "=", "words", "[", "1", "]", "if", "detect_path", "(", "words", "[", "1", "]", ")", "else", "f'{dataset_path}{words[1]}'", "\n", "states", "=", "np", ".", "append", "(", "states", ",", "np", ".", "array", "(", "[", "state", ",", "nState", "]", ")", ".", "reshape", "(", "(", "1", ",", "2", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n", "action", "=", "int", "(", "words", "[", "-", "1", "]", ")", "\n", "actions", ".", "append", "(", "action", ")", "\n", "\n", "if", "not", "no_hit", ":", "\n", "                ", "count", "[", "words", "[", "-", "1", "]", "]", ".", "append", "(", "idx", ")", "\n", "\n", "", "reducted_action", "=", "4", "if", "int", "(", "words", "[", "-", "2", "]", ")", "==", "-", "1", "else", "int", "(", "words", "[", "-", "1", "]", ")", "\n", "reducted_actions", ".", "append", "(", "reducted_action", ")", "\n", "\n", "if", "no_hit", ":", "\n", "                ", "count", "[", "words", "[", "-", "2", "]", "]", ".", "append", "(", "idx", ")", "\n", "\n", "", "", "", "return", "count", ",", "states", ",", "np", ".", "array", "(", "actions", ")", ",", "np", ".", "array", "(", "reducted_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.balance_dataset": [[51, 92], ["dataset_Maze.read_data", "print", "list", "numpy.ndarray", "print", "sizes.append", "min", "range", "numpy.bincount", "len", "numpy.min", "len", "numpy.append().astype", "numpy.random.choice", "numpy.array", "numpy.random.choice", "numpy.append", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.read_data", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "balance_dataset", "(", "file_path", ",", "dataset_path", ",", "downsample_size", "=", "4000", ",", "reducted", "=", "False", ",", "no_hit", "=", "False", ",", "replace", "=", "True", ",", "sampling", "=", "True", ")", ":", "\n", "    ", "count", ",", "states", ",", "actions", ",", "reducted_actions", "=", "read_data", "(", "file_path", ",", "dataset_path", ",", "reducted", ",", "no_hit", ")", "\n", "\n", "sizes", "=", "[", "]", "\n", "for", "key", "in", "count", ":", "\n", "        ", "sizes", ".", "append", "(", "len", "(", "count", "[", "key", "]", ")", ")", "\n", "", "print", "(", "sizes", ")", "\n", "\n", "if", "sampling", ":", "\n", "        ", "max_size", "=", "np", ".", "min", "(", "sizes", "[", "1", ":", "]", ")", "if", "downsample_size", "is", "not", "None", "else", "None", "\n", "downsample_size", "=", "min", "(", "downsample_size", ",", "max_size", ")", "\n", "\n", "", "classes", "=", "list", "(", "range", "(", "0", ",", "4", ")", ")", "\n", "all_idxs", "=", "np", ".", "ndarray", "(", "(", "0", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "if", "downsample_size", "is", "not", "None", ":", "\n", "        ", "for", "i", "in", "classes", ":", "\n", "            ", "size", "=", "len", "(", "count", "[", "str", "(", "i", ")", "]", ")", "\n", "\n", "try", ":", "\n", "                ", "random_idxs", "=", "np", ".", "random", ".", "choice", "(", "size", ",", "downsample_size", ",", "replace", "=", "replace", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "random_idxs", "=", "np", ".", "random", ".", "choice", "(", "size", ",", "size", ",", "replace", "=", "replace", ")", "\n", "\n", "", "idxs", "=", "np", ".", "array", "(", "count", "[", "str", "(", "i", ")", "]", ")", "[", "random_idxs", "]", "\n", "all_idxs", "=", "np", ".", "append", "(", "all_idxs", ",", "idxs", ",", "axis", "=", "0", ")", ".", "astype", "(", "int", ")", "\n", "\n", "", "states", "=", "states", "[", "all_idxs", "]", "\n", "if", "reducted", ":", "\n", "            ", "a", "=", "reducted_actions", "[", "all_idxs", "]", "\n", "", "else", ":", "\n", "            ", "a", "=", "actions", "[", "all_idxs", "]", "\n", "", "", "else", ":", "\n", "        ", "if", "reducted", "and", "no_hit", ":", "\n", "            ", "for", "i", "in", "classes", ":", "\n", "                ", "a", "=", "reducted_actions", "[", "count", "[", "str", "(", "i", ")", "]", "]", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "classes", ":", "\n", "                ", "a", "=", "actions", "\n", "\n", "", "", "", "print", "(", "np", ".", "bincount", "(", "a", ")", ")", "\n", "return", "states", ",", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.split_dataset": [[94, 99], ["train_test_split", "train_test_split"], "function", ["None"], ["", "def", "split_dataset", "(", "states", ",", "actions", ",", "stratify", "=", "True", ")", ":", "\n", "    ", "if", "stratify", ":", "\n", "        ", "return", "train_test_split", "(", "states", ",", "actions", ",", "test_size", "=", "0.3", ",", "stratify", "=", "actions", ")", "\n", "", "else", ":", "\n", "        ", "return", "train_test_split", "(", "states", ",", "actions", ",", "test_size", "=", "0.3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.get_idm_dataset": [[288, 309], ["dataset_Maze.balance_dataset", "dataset_Maze.split_dataset", "dataset_Maze.IDM_Dataset", "dataset_Maze.IDM_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.balance_dataset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.split_dataset"], ["", "", "", "", "def", "get_idm_dataset", "(", "\n", "path", ",", "\n", "batch_size", ",", "\n", "downsample_size", "=", "4000", ",", "\n", "reducted", "=", "False", ",", "\n", "shuffle", "=", "True", ",", "\n", "no_hit", "=", "False", ",", "\n", "replace", "=", "True", ",", "\n", "sampling", "=", "True", "\n", ")", ":", "\n", "    ", "file_path", "=", "f'{path}maze.txt'", "\n", "image_path", "=", "f'{path}images/'", "\n", "\n", "states", ",", "actions", "=", "balance_dataset", "(", "file_path", ",", "image_path", ",", "downsample_size", ",", "reducted", ",", "no_hit", ",", "replace", ",", "sampling", ")", "\n", "train", ",", "validation", ",", "train_y", ",", "validation_y", "=", "split_dataset", "(", "states", ",", "actions", ")", "\n", "\n", "train_dataset", "=", "IDM_Dataset", "(", "train", ",", "train_y", ")", "\n", "validation_dataset", "=", "IDM_Dataset", "(", "validation", ",", "validation_y", ")", "\n", "train", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "validation", "=", "DataLoader", "(", "validation_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "return", "train", ",", "validation", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.get_policy_dataset": [[311, 329], ["dataset_Maze.Policy_Dataset", "dataset_Maze.Policy_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["None"], ["", "def", "get_policy_dataset", "(", "\n", "path", ",", "\n", "batch_size", ",", "\n", "maze_size", ",", "\n", "maze_type", ",", "\n", "shuffle", "=", "Tru", "\n", ")", ":", "\n", "    ", "image_path", "=", "f'{path}maze{maze_size}/'", "\n", "config", "=", "f'{image_path}expert.txt'", "\n", "mazes", "=", "f'{image_path}maze.txt'", "\n", "expert", "=", "f'{image_path}random.txt'", "\n", "\n", "train_dataset", "=", "Policy_Dataset", "(", "image_path", ",", "image_path", ",", "random", "=", "False", ",", "type", "=", "maze_type", ")", "\n", "validation_dataset", "=", "Policy_Dataset", "(", "image_path", ",", "image_path", ",", "train", "=", "False", ",", "labyrinths_valid", "=", "train_dataset", ".", "labyrinths_valid", ")", "\n", "\n", "train", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "validation", "=", "DataLoader", "(", "validation_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "return", "train", ",", "validation", "\n", "", ""]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.IDM_Vector_Dataset.__init__": [[102, 107], ["torch.utils.data.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "path", ",", "images", ",", "actions", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "previous_images", "=", "images", "[", ":", ",", "0", "]", "\n", "self", ".", "next_images", "=", "images", "[", ":", ",", "1", "]", "\n", "self", ".", "labels", "=", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.IDM_Vector_Dataset.__len__": [[108, 110], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "labels", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.IDM_Vector_Dataset.__getitem__": [[111, 121], ["dataset_CartPole.IDM_Vector_Dataset.previous_images[].astype", "dataset_CartPole.IDM_Vector_Dataset.next_images[].astype", "torch.from_numpy", "torch.from_numpy", "torch.tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "s", "=", "self", ".", "previous_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "nS", "=", "self", ".", "next_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "\n", "s", "=", "torch", ".", "from_numpy", "(", "s", ")", "\n", "nS", "=", "torch", ".", "from_numpy", "(", "nS", ")", "\n", "\n", "a", "=", "torch", ".", "tensor", "(", "self", ".", "labels", "[", "idx", "]", ")", "\n", "\n", "return", "(", "s", ",", "nS", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.Policy_Vector_Dataset.__init__": [[130, 135], ["torch.utils.data.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "path", ",", "images", ",", "actions", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "previous_images", "=", "images", "[", ":", ",", "0", "]", "\n", "self", ".", "next_images", "=", "images", "[", ":", ",", "1", "]", "\n", "self", ".", "labels", "=", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.Policy_Vector_Dataset.__len__": [[136, 138], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "labels", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.Policy_Vector_Dataset.__getitem__": [[139, 149], ["dataset_CartPole.Policy_Vector_Dataset.previous_images[].astype", "dataset_CartPole.Policy_Vector_Dataset.next_images[].astype", "torch.from_numpy", "torch.from_numpy", "torch.tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "s", "=", "self", ".", "previous_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "nS", "=", "self", ".", "next_images", "[", "idx", "]", ".", "astype", "(", "float", ")", "\n", "\n", "s", "=", "torch", ".", "from_numpy", "(", "s", ")", "\n", "nS", "=", "torch", ".", "from_numpy", "(", "nS", ")", "\n", "\n", "a", "=", "torch", ".", "tensor", "(", "self", ".", "labels", "[", "idx", "]", ")", "\n", "\n", "return", "(", "s", ",", "nS", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.Policy_Vector_Dataset.get_performance_rewards": [[150, 152], ["None"], "methods", ["None"], ["", "def", "get_performance_rewards", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "return", "self", ".", "expert", ",", "self", ".", "random_policy", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.detect_path": [[16, 18], ["None"], "function", ["None"], ["def", "detect_path", "(", "file", ")", ":", "\n", "    ", "return", "'/'", "in", "file", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.read_vector": [[20, 47], ["collections.defaultdict", "numpy.ndarray", "open", "enumerate", "numpy.array", "line.replace().split", "numpy.fromstring", "numpy.fromstring", "numpy.append", "int", "actions.append", "numpy.append", "count[].append", "word[].replace().replace", "word[].replace().replace", "line.replace", "word[].replace", "word[].replace"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "read_vector", "(", "dataset_path", ",", "idm", "=", "True", ")", ":", "\n", "    ", "count", "=", "defaultdict", "(", "list", ")", "\n", "actions", "=", "[", "]", "\n", "states", "=", "np", ".", "ndarray", "(", "(", "0", ",", "2", ",", "4", ")", ",", "dtype", "=", "str", ")", "\n", "with", "open", "(", "f'{dataset_path}cartpole.txt'", ")", "as", "f", ":", "\n", "        ", "for", "idx", ",", "line", "in", "enumerate", "(", "f", ")", ":", "\n", "            ", "word", "=", "line", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "';'", ")", "\n", "\n", "state", "=", "np", ".", "fromstring", "(", "\n", "word", "[", "0", "]", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ",", "\n", "sep", "=", "' '", ",", "\n", "dtype", "=", "float", "\n", ")", "\n", "nState", "=", "np", ".", "fromstring", "(", "\n", "word", "[", "1", "]", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ",", "\n", "sep", "=", "' '", ",", "\n", "dtype", "=", "float", "\n", ")", "\n", "\n", "s", "=", "np", ".", "append", "(", "state", "[", "None", "]", ",", "nState", "[", "None", "]", ",", "axis", "=", "0", ")", "\n", "\n", "action", "=", "int", "(", "word", "[", "-", "1", "]", ")", "\n", "actions", ".", "append", "(", "action", ")", "\n", "states", "=", "np", ".", "append", "(", "states", ",", "s", "[", "None", "]", ",", "axis", "=", "0", ")", "\n", "count", "[", "action", "]", ".", "append", "(", "idx", ")", "\n", "\n", "", "", "return", "count", ",", "states", ",", "np", ".", "array", "(", "actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.balance_dataset": [[49, 89], ["print", "list", "numpy.ndarray", "print", "read_data", "dataset_CartPole.read_vector", "sizes.append", "len", "min", "range", "numpy.bincount", "len", "numpy.min", "len", "numpy.append", "numpy.random.choice", "numpy.array", "numpy.random.choice"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_Maze.read_data", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.read_vector", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.utils.enjoy.EnjoyController.append"], ["", "def", "balance_dataset", "(", "dataset_path", ",", "downsample_size", "=", "5000", ",", "replace", "=", "True", ",", "sampling", "=", "True", ")", ":", "\n", "    ", "if", "not", "vector", ":", "\n", "        ", "data", "=", "read_data", "(", "dataset_path", ")", "\n", "", "else", ":", "\n", "        ", "data", "=", "read_vector", "(", "dataset_path", ")", "\n", "", "count", ",", "states", ",", "actions", "=", "data", "\n", "\n", "sizes", "=", "[", "]", "\n", "dict_sizes", "=", "{", "}", "\n", "for", "key", "in", "count", ":", "\n", "        ", "sizes", ".", "append", "(", "len", "(", "count", "[", "key", "]", ")", ")", "\n", "dict_sizes", "[", "key", "]", "=", "len", "(", "count", "[", "key", "]", ")", "\n", "", "print", "(", "'Size each action:'", ",", "dict_sizes", ")", "\n", "\n", "if", "sampling", ":", "\n", "        ", "max_size", "=", "np", ".", "min", "(", "sizes", ")", "if", "downsample_size", "is", "not", "None", "else", "None", "\n", "downsample_size", "=", "min", "(", "downsample_size", ",", "max_size", ")", "\n", "\n", "", "classes", "=", "list", "(", "range", "(", "0", ",", "2", ")", ")", "\n", "all_idxs", "=", "np", ".", "ndarray", "(", "(", "0", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "if", "downsample_size", "is", "not", "None", ":", "\n", "        ", "for", "i", "in", "classes", ":", "\n", "            ", "size", "=", "len", "(", "count", "[", "i", "]", ")", "\n", "\n", "try", ":", "\n", "                ", "random_idxs", "=", "np", ".", "random", ".", "choice", "(", "size", ",", "downsample_size", ",", "replace", "=", "replace", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "random_idxs", "=", "np", ".", "random", ".", "choice", "(", "size", ",", "size", ",", "replace", "=", "replace", ")", "\n", "\n", "", "idxs", "=", "np", ".", "array", "(", "count", "[", "i", "]", ")", "[", "random_idxs", "]", "\n", "all_idxs", "=", "np", ".", "append", "(", "all_idxs", ",", "idxs", ",", "axis", "=", "0", ")", "\n", "\n", "", "states", "=", "states", "[", "all_idxs", "]", "\n", "a", "=", "actions", "[", "all_idxs", "]", "\n", "", "else", ":", "\n", "        ", "for", "i", "in", "classes", ":", "\n", "            ", "a", "=", "actions", "\n", "\n", "", "", "print", "(", "'Final size action:'", ",", "np", ".", "bincount", "(", "a", ")", ")", "\n", "return", "states", ",", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.split_dataset": [[91, 96], ["sklearn.model_selection.train_test_split", "sklearn.model_selection.train_test_split"], "function", ["None"], ["", "def", "split_dataset", "(", "states", ",", "actions", ",", "stratify", "=", "True", ")", ":", "\n", "    ", "if", "stratify", ":", "\n", "        ", "return", "train_test_split", "(", "states", ",", "actions", ",", "test_size", "=", "0.3", ",", "stratify", "=", "actions", ")", "\n", "", "else", ":", "\n", "        ", "return", "train_test_split", "(", "states", ",", "actions", ",", "test_size", "=", "0.3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.get_idm_vector_dataset": [[154, 177], ["dataset_CartPole.balance_dataset", "dataset_CartPole.split_dataset", "dataset_CartPole.IDM_Vector_Dataset", "dataset_CartPole.IDM_Vector_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.balance_dataset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.split_dataset"], ["", "", "def", "get_idm_vector_dataset", "(", "\n", "path", ",", "\n", "batch_size", ",", "\n", "downsample_size", "=", "5000", ",", "\n", "shuffle", "=", "True", ",", "\n", "replace", "=", "True", ",", "\n", "sampling", "=", "True", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "\n", "    ", "states", ",", "actions", "=", "balance_dataset", "(", "\n", "path", ",", "\n", "downsample_size", "=", "downsample_size", ",", "\n", "replace", "=", "replace", ",", "\n", "sampling", "=", "sampling", ",", "\n", ")", "\n", "train", ",", "validation", ",", "train_y", ",", "validation_y", "=", "split_dataset", "(", "states", ",", "actions", ")", "\n", "\n", "train_dataset", "=", "IDM_Vector_Dataset", "(", "path", ",", "train", ",", "train_y", ")", "\n", "validation_dataset", "=", "IDM_Vector_Dataset", "(", "path", ",", "validation", ",", "validation_y", ")", "\n", "train", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "validation", "=", "DataLoader", "(", "validation_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "return", "train", ",", "validation", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.get_policy_vector_dataset": [[179, 202], ["dataset_CartPole.balance_dataset", "dataset_CartPole.split_dataset", "dataset_CartPole.Policy_Vector_Dataset", "dataset_CartPole.Policy_Vector_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.balance_dataset", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.datasets.dataset_CartPole.split_dataset"], ["", "def", "get_policy_vector_dataset", "(", "\n", "path", ",", "\n", "batch_size", ",", "\n", "downsample_size", "=", "5000", ",", "\n", "shuffle", "=", "True", ",", "\n", "replace", "=", "True", ",", "\n", "sampling", "=", "True", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "\n", "    ", "states", ",", "actions", "=", "balance_dataset", "(", "\n", "path", ",", "\n", "downsample_size", "=", "None", ",", "\n", "replace", "=", "False", ",", "\n", "sampling", "=", "False", ",", "\n", ")", "\n", "train", ",", "validation", ",", "train_y", ",", "validation_y", "=", "split_dataset", "(", "states", ",", "actions", ")", "\n", "\n", "train_dataset", "=", "Policy_Vector_Dataset", "(", "path", ",", "train", ",", "train_y", ")", "\n", "validation_dataset", "=", "Policy_Vector_Dataset", "(", "path", ",", "validation", ",", "validation_y", ")", "\n", "train", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "validation", "=", "DataLoader", "(", "validation_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "return", "train", ",", "validation", "\n", "", ""]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.idm.IDM.__init__": [[14, 55], ["torch.Module.__init__", "torchvision.inception_v3", "torchvision.inception_v3", "torchvision.vgg19_bn", "torchvision.vgg19_bn", "general.empty.Empty", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "print", "idm.IDM.model.parameters", "general.empty.Empty", "torch.Sequential", "torch.Sequential", "torch.Sequential", "general.resnet.create_resnet", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "general.mlp.MlpAttention"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.create_resnet"], ["    ", "def", "__init__", "(", "self", ",", "action_size", ",", "net", "=", "'vgg'", ",", "pretrained", "=", "True", ",", "input", "=", "8", ")", ":", "\n", "        ", "super", "(", "IDM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "net", "=", "net", "\n", "\n", "if", "net", "==", "'inception'", ":", "\n", "            ", "self", ".", "model", "=", "models", ".", "inception_v3", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "", "elif", "net", "==", "'vgg'", ":", "\n", "            ", "self", ".", "model", "=", "models", ".", "vgg19_bn", "(", "pretrained", "=", "pretrained", ")", "\n", "self", ".", "model", ".", "classifier", "=", "Empty", "(", ")", "\n", "self", ".", "fc_layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "(", "512", "*", "7", "*", "7", ")", "*", "2", ",", "4096", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "action_size", ")", "\n", ")", "\n", "\n", "if", "pretrained", ":", "\n", "                ", "print", "(", "'Freezing weights'", ")", "\n", "for", "params", "in", "self", ".", "model", ".", "parameters", "(", ")", ":", "\n", "                    ", "params", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "", "elif", "net", "in", "[", "'resnet'", ",", "'attention-first'", ",", "'attention-last'", ",", "'attention-all'", "]", ":", "\n", "            ", "self", ".", "model", "=", "create_resnet", "(", "net", ")", "(", "normalize", "=", "False", ")", "\n", "self", ".", "model", ".", "features", ".", "fc", "=", "Empty", "(", ")", "\n", "self", ".", "fc_layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "2", ",", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "action_size", ")", "\n", ")", "\n", "\n", "", "elif", "net", "==", "'vector'", ":", "\n", "            ", "self", ".", "model", "=", "MlpAttention", "(", "input", ",", "action_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.idm.IDM.forward": [[56, 65], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "idm.IDM.model", "idm.IDM.model", "idm.IDM.model", "idm.IDM.fc_layers", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "state", ",", "nState", ")", ":", "\n", "        ", "if", "self", ".", "net", "==", "'vector'", ":", "\n", "            ", "input", "=", "torch", ".", "cat", "(", "(", "state", ",", "nState", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "model", "(", "input", ")", "\n", "", "else", ":", "\n", "            ", "s", "=", "self", ".", "model", "(", "state", ")", "\n", "nS", "=", "self", ".", "model", "(", "nState", ")", "\n", "x", "=", "self", ".", "fc_layers", "(", "torch", ".", "cat", "(", "(", "s", ",", "nS", ")", ",", "1", ")", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.idm.IDM.get_params": [[66, 68], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "idm.IDM.reduction.parameters", "idm.IDM.fc_layers.parameters"], "methods", ["None"], ["", "def", "get_params", "(", "self", ")", ":", "\n", "        ", "return", "(", "x", "for", "x", "in", "torch", ".", "cat", "(", "(", "self", ".", "reduction", ".", "parameters", "(", ")", ",", "self", ".", "fc_layers", ".", "parameters", "(", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.idm.train": [[70, 93], ["s.to.to", "nS.to.to", "a.to.to", "optimizer.zero_grad", "model", "torch.argmax", "torch.argmax", "torch.argmax", "criterion", "criterion.backward", "optimizer.step", "model.train", "tensorboard.add_grid"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.policy.train"], ["", "", "def", "train", "(", "model", ",", "data", ",", "criterion", ",", "optimizer", ",", "device", ",", "tensorboard", "=", "None", ")", ":", "\n", "    ", "if", "model", ".", "training", "is", "False", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "\n", "", "s", ",", "nS", ",", "a", "=", "data", "\n", "\n", "if", "tensorboard", "is", "not", "None", ":", "\n", "        ", "tensorboard", ".", "add_grid", "(", "train", "=", "True", ",", "state", "=", "s", ",", "nState", "=", "nS", ")", "\n", "\n", "", "s", "=", "s", ".", "to", "(", "device", ")", "\n", "nS", "=", "nS", ".", "to", "(", "device", ")", "\n", "a", "=", "a", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "pred", "=", "model", "(", "s", ",", "nS", ")", "\n", "\n", "pred_argmax", "=", "torch", ".", "argmax", "(", "pred", ",", "1", ")", "\n", "loss", "=", "criterion", "(", "pred", ",", "a", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "acc", "=", "(", "(", "pred_argmax", "==", "a", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "a", ".", "shape", "[", "0", "]", ")", "*", "100", "\n", "return", "loss", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.idm.validation": [[95, 115], ["s.to.to", "nS.to.to", "a.to.to", "model", "torch.argmax", "torch.argmax", "torch.argmax", "model.eval", "tensorboard.add_grid"], "function", ["None"], ["", "def", "validation", "(", "model", ",", "data", ",", "device", ",", "tensorboard", "=", "None", ")", ":", "\n", "    ", "if", "model", ".", "training", "is", "True", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "\n", "", "s", ",", "nS", ",", "a", "=", "data", "\n", "\n", "if", "tensorboard", "is", "not", "None", ":", "\n", "        ", "tensorboard", ".", "add_grid", "(", "train", "=", "False", ",", "state", "=", "s", ",", "nState", "=", "nS", ")", "\n", "\n", "", "s", "=", "s", ".", "to", "(", "device", ")", "\n", "nS", "=", "nS", ".", "to", "(", "device", ")", "\n", "a", "=", "a", ".", "to", "(", "device", ")", "\n", "\n", "pred", "=", "model", "(", "s", ",", "nS", ")", "\n", "\n", "pred_argmax", "=", "torch", ".", "argmax", "(", "pred", ",", "1", ")", "\n", "\n", "acc", "=", "(", "(", "pred_argmax", "==", "a", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "a", ".", "shape", "[", "0", "]", ")", "*", "100", "\n", "\n", "return", "acc", "\n", "", ""]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.policy.Policy.__init__": [[13, 55], ["torch.Module.__init__", "torchvision.inception_v3", "torchvision.inception_v3", "general.empty.Empty", "torch.Linear", "torch.Linear", "torch.Linear", "torchvision.vgg19_bn", "torchvision.vgg19_bn", "general.empty.Empty", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "print", "policy.Policy.model.parameters", "general.empty.Empty", "torch.Sequential", "torch.Sequential", "torch.Sequential", "general.resnet.create_resnet", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "general.mlp.MlpAttention"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__", "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.create_resnet"], ["    ", "def", "__init__", "(", "self", ",", "action_size", ",", "net", "=", "'vgg'", ",", "pretrained", "=", "True", ",", "input", "=", "4", ")", ":", "\n", "        ", "super", "(", "Policy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "net", "=", "net", "\n", "\n", "if", "net", "==", "'inception'", ":", "\n", "            ", "self", ".", "model", "=", "models", ".", "inception_v3", "(", "pretrained", "=", "pretrained", ")", "\n", "self", ".", "model", ".", "fc", "=", "Empty", "(", ")", "\n", "linear", "=", "nn", ".", "Linear", "(", "2048", ",", "4096", ")", "\n", "", "elif", "net", "==", "'vgg'", ":", "\n", "            ", "self", ".", "model", "=", "models", ".", "vgg19_bn", "(", "pretrained", "=", "pretrained", ")", "\n", "self", ".", "model", ".", "classifier", "=", "Empty", "(", ")", "\n", "self", ".", "fc_layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "(", "512", "*", "7", "*", "7", ")", ",", "4096", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "action_size", ")", "\n", ")", "\n", "\n", "if", "pretrained", ":", "\n", "                ", "print", "(", "'Freezing weights'", ")", "\n", "for", "params", "in", "self", ".", "model", ".", "parameters", "(", ")", ":", "\n", "                    ", "params", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "", "elif", "net", "in", "[", "'resnet'", ",", "'attention-first'", ",", "'attention-last'", ",", "'attention-all'", "]", ":", "\n", "            ", "self", ".", "model", "=", "create_resnet", "(", "net", ")", "(", "normalize", "=", "False", ")", "\n", "self", ".", "model", ".", "features", ".", "fc", "=", "Empty", "(", ")", "\n", "self", ".", "fc_layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", ",", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "action_size", ")", "\n", ")", "\n", "\n", "", "elif", "net", "==", "'vector'", ":", "\n", "            ", "self", ".", "model", "=", "MlpAttention", "(", "input", ",", "action_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.policy.Policy.forward": [[56, 63], ["policy.Policy.model", "policy.Policy.model", "policy.Policy.fc_layers"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "state", ")", ":", "\n", "        ", "if", "self", ".", "net", "==", "'vector'", ":", "\n", "            ", "x", "=", "self", ".", "model", "(", "state", ")", "\n", "", "else", ":", "\n", "            ", "s", "=", "self", ".", "model", "(", "state", ")", "\n", "x", "=", "self", ".", "fc_layers", "(", "s", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.policy.train": [[65, 99], ["s.to.to", "nS.to.to", "idm_model", "torch.argmax", "torch.argmax", "torch.argmax", "optimizer.zero_grad", "model", "torch.argmax", "torch.argmax", "torch.argmax", "criterion", "criterion.backward", "optimizer.step", "model.train", "idm_model.eval", "tensorboard.add_grid", "tensorboard.add_histogram", "tensorboard.add_histogram"], "function", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.policy.train"], ["", "", "def", "train", "(", "model", ",", "idm_model", ",", "data", ",", "criterion", ",", "optimizer", ",", "device", ",", "tensorboard", "=", "None", ")", ":", "\n", "    ", "if", "model", ".", "training", "is", "False", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "\n", "", "if", "idm_model", ".", "training", "is", "True", ":", "\n", "        ", "idm_model", ".", "eval", "(", ")", "\n", "\n", "", "s", ",", "nS", ",", "a_gt", "=", "data", "\n", "\n", "if", "tensorboard", "is", "not", "None", ":", "\n", "        ", "tensorboard", ".", "add_grid", "(", "train", "=", "False", ",", "state", "=", "s", ",", "nState", "=", "nS", ")", "\n", "\n", "", "s", "=", "s", ".", "to", "(", "device", ")", "\n", "nS", "=", "nS", ".", "to", "(", "device", ")", "\n", "\n", "action", "=", "idm_model", "(", "s", ",", "nS", ")", "\n", "action", "=", "torch", ".", "argmax", "(", "action", ",", "1", ")", "\n", "# action = a_gt.to(device)", "\n", "\n", "if", "tensorboard", "is", "not", "None", ":", "\n", "        ", "tensorboard", ".", "add_histogram", "(", "'Valid/action distribution'", ",", "action", ")", "\n", "tensorboard", ".", "add_histogram", "(", "'Valid/GT action distribution'", ",", "a_gt", ")", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "pred", "=", "model", "(", "s", ")", "\n", "\n", "pred_argmax", "=", "torch", ".", "argmax", "(", "pred", ",", "1", ")", "\n", "loss", "=", "criterion", "(", "pred", ",", "action", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "acc", "=", "(", "(", "pred_argmax", "==", "action", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "a_gt", ".", "shape", "[", "0", "]", ")", "*", "100", "\n", "\n", "return", "loss", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.models.policy.validation": [[101, 127], ["s.to.to", "nS.to.to", "idm_model", "torch.argmax", "torch.argmax", "torch.argmax", "model", "torch.argmax", "torch.argmax", "torch.argmax", "model.eval", "tensorboard.add_grid", "tensorboard.add_histogram", "tensorboard.add_histogram"], "function", ["None"], ["", "def", "validation", "(", "model", ",", "idm_model", ",", "data", ",", "device", ",", "tensorboard", "=", "None", ")", ":", "\n", "    ", "if", "model", ".", "training", "is", "True", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "\n", "", "s", ",", "nS", ",", "a_gt", "=", "data", "\n", "\n", "if", "tensorboard", "is", "not", "None", ":", "\n", "        ", "tensorboard", ".", "add_grid", "(", "train", "=", "False", ",", "state", "=", "s", ",", "nState", "=", "nS", ")", "\n", "\n", "", "s", "=", "s", ".", "to", "(", "device", ")", "\n", "nS", "=", "nS", ".", "to", "(", "device", ")", "\n", "\n", "action", "=", "idm_model", "(", "s", ",", "nS", ")", "\n", "action", "=", "torch", ".", "argmax", "(", "action", ",", "1", ")", "\n", "# action = a_gt.to(device)", "\n", "\n", "if", "tensorboard", "is", "not", "None", ":", "\n", "        ", "tensorboard", ".", "add_histogram", "(", "'Valid/action distribution'", ",", "action", ")", "\n", "tensorboard", ".", "add_histogram", "(", "'Valid/GT action distribution'", ",", "a_gt", ")", "\n", "\n", "", "pred", "=", "model", "(", "s", ")", "\n", "pred_argmax", "=", "torch", ".", "argmax", "(", "pred", ",", "1", ")", "\n", "\n", "acc", "=", "(", "(", "pred_argmax", "==", "action", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "a_gt", ".", "shape", "[", "0", "]", ")", "*", "100", "\n", "\n", "return", "acc", "\n", "", ""]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.empty.Empty.__init__": [[6, 8], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.empty.Empty.forward": [[9, 11], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.Resnet.__init__": [[42, 46], ["torch.Module.__init__", "torchvision.resnet18", "torchvision.resnet18"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "normalize", "=", "normalize", "\n", "self", ".", "features", "=", "models", ".", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.Resnet.forward": [[47, 65], ["copy.deepcopy", "resnet.Resnet.features.conv1", "resnet.Resnet.features.bn1", "resnet.Resnet.features.relu", "resnet.Resnet.features.maxpool", "resnet.Resnet.features.layer1", "resnet.Resnet.features.layer2", "resnet.Resnet.features.layer3", "resnet.Resnet.features.layer4", "resnet.Resnet.features.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet.normalize_imagenet"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.normalize_imagenet"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "img", "=", "deepcopy", "(", "x", ")", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "x", "=", "normalize_imagenet", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "features", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer1", "(", "x", ")", "# 64", "\n", "x", "=", "self", ".", "features", ".", "layer2", "(", "x", ")", "# 128", "\n", "x", "=", "self", ".", "features", ".", "layer3", "(", "x", ")", "# 256", "\n", "x", "=", "self", ".", "features", ".", "layer4", "(", "x", ")", "# 512", "\n", "\n", "x", "=", "self", ".", "features", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "# batch, 512", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.ResnetFirst.__init__": [[74, 81], ["torch.Module.__init__", "torchvision.resnet18", "torchvision.resnet18", "attention.Self_Attn2D", "attention.Self_Attn2D"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "normalize", "=", "normalize", "\n", "self", ".", "features", "=", "models", ".", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "\n", "self", ".", "att", "=", "Self_Attn2D", "(", "64", ")", "\n", "self", ".", "att2", "=", "Self_Attn2D", "(", "128", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.ResnetFirst.forward": [[82, 104], ["copy.deepcopy", "resnet.ResnetFirst.features.conv1", "resnet.ResnetFirst.features.bn1", "resnet.ResnetFirst.features.relu", "resnet.ResnetFirst.features.maxpool", "resnet.ResnetFirst.features.layer1", "resnet.ResnetFirst.att", "resnet.ResnetFirst.features.layer2", "resnet.ResnetFirst.att2", "resnet.ResnetFirst.features.layer3", "resnet.ResnetFirst.features.layer4", "resnet.ResnetFirst.features.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet.normalize_imagenet"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.normalize_imagenet"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "img", "=", "deepcopy", "(", "x", ")", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "x", "=", "normalize_imagenet", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "features", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer1", "(", "x", ")", "# 64", "\n", "x", ",", "_", "=", "self", ".", "att", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer2", "(", "x", ")", "# 128", "\n", "x", ",", "_", "=", "self", ".", "att2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer3", "(", "x", ")", "# 256", "\n", "x", "=", "self", ".", "features", ".", "layer4", "(", "x", ")", "# 512", "\n", "\n", "x", "=", "self", ".", "features", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "# batch, 512", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.ResnetLast.__init__": [[113, 120], ["torch.Module.__init__", "torchvision.resnet18", "torchvision.resnet18", "attention.Self_Attn2D", "attention.Self_Attn2D"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "normalize", "=", "normalize", "\n", "self", ".", "features", "=", "models", ".", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "\n", "self", ".", "att3", "=", "Self_Attn2D", "(", "256", ")", "\n", "self", ".", "att4", "=", "Self_Attn2D", "(", "512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.ResnetLast.forward": [[121, 143], ["copy.deepcopy", "resnet.ResnetLast.features.conv1", "resnet.ResnetLast.features.bn1", "resnet.ResnetLast.features.relu", "resnet.ResnetLast.features.maxpool", "resnet.ResnetLast.features.layer1", "resnet.ResnetLast.features.layer2", "resnet.ResnetLast.features.layer3", "resnet.ResnetLast.att3", "resnet.ResnetLast.features.layer4", "resnet.ResnetLast.att4", "resnet.ResnetLast.features.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet.normalize_imagenet"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.normalize_imagenet"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "img", "=", "deepcopy", "(", "x", ")", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "x", "=", "normalize_imagenet", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "features", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer1", "(", "x", ")", "# 64", "\n", "x", "=", "self", ".", "features", ".", "layer2", "(", "x", ")", "# 128", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer3", "(", "x", ")", "# 256", "\n", "x", ",", "_", "=", "self", ".", "att3", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer4", "(", "x", ")", "# 512", "\n", "x", ",", "_", "=", "self", ".", "att4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "# batch, 512", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.ResnetAll.__init__": [[152, 161], ["torch.Module.__init__", "torchvision.resnet18", "torchvision.resnet18", "attention.Self_Attn2D", "attention.Self_Attn2D", "attention.Self_Attn2D", "attention.Self_Attn2D"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "normalize", "=", "normalize", "\n", "self", ".", "features", "=", "models", ".", "resnet18", "(", "pretrained", "=", "True", ")", "\n", "\n", "self", ".", "att", "=", "Self_Attn2D", "(", "64", ")", "\n", "self", ".", "att2", "=", "Self_Attn2D", "(", "128", ")", "\n", "self", ".", "att3", "=", "Self_Attn2D", "(", "256", ")", "\n", "self", ".", "att4", "=", "Self_Attn2D", "(", "512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.ResnetAll.forward": [[162, 187], ["copy.deepcopy", "resnet.ResnetAll.features.conv1", "resnet.ResnetAll.features.bn1", "resnet.ResnetAll.features.relu", "resnet.ResnetAll.features.maxpool", "resnet.ResnetAll.features.layer1", "resnet.ResnetAll.att", "resnet.ResnetAll.features.layer2", "resnet.ResnetAll.att2", "resnet.ResnetAll.features.layer3", "resnet.ResnetAll.att3", "resnet.ResnetAll.features.layer4", "resnet.ResnetAll.att4", "resnet.ResnetAll.features.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet.normalize_imagenet"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.normalize_imagenet"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "img", "=", "deepcopy", "(", "x", ")", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "x", "=", "normalize_imagenet", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "features", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "features", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer1", "(", "x", ")", "# 64", "\n", "x", ",", "_", "=", "self", ".", "att", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer2", "(", "x", ")", "# 128", "\n", "x", ",", "_", "=", "self", ".", "att2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer3", "(", "x", ")", "# 256", "\n", "x", ",", "_", "=", "self", ".", "att3", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "layer4", "(", "x", ")", "# 512", "\n", "x", ",", "_", "=", "self", ".", "att4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "features", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "# batch, 512", "\n", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.normalize_imagenet": [[12, 23], ["x.clone.clone"], "function", ["None"], ["def", "normalize_imagenet", "(", "x", ")", ":", "\n", "    ", "''' Normalize input images according to ImageNet standards.\n\n    Args:\n        x (tensor): input images\n    '''", "\n", "x", "=", "x", ".", "clone", "(", ")", "\n", "x", "[", ":", ",", "0", "]", "=", "(", "x", "[", ":", ",", "0", "]", "-", "0.485", ")", "/", "0.229", "\n", "x", "[", ":", ",", "1", "]", "=", "(", "x", "[", ":", ",", "1", "]", "-", "0.456", ")", "/", "0.224", "\n", "x", "[", ":", ",", "2", "]", "=", "(", "x", "[", ":", ",", "2", "]", "-", "0.406", ")", "/", "0.225", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.resnet.create_resnet": [[24, 33], ["None"], "function", ["None"], ["", "def", "create_resnet", "(", "type", ")", ":", "\n", "    ", "if", "type", "==", "'resnet'", ":", "\n", "        ", "return", "Resnet", "\n", "", "elif", "type", "==", "'attention-first'", ":", "\n", "        ", "return", "ResnetFirst", "\n", "", "elif", "type", "==", "'attention-last'", ":", "\n", "        ", "return", "ResnetLast", "\n", "", "elif", "type", "==", "'attention-all'", ":", "\n", "        ", "return", "ResnetAll", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.mlp.MLP.__init__": [[11, 21], ["torch.Module.__init__", "max", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ")", ":", "\n", "        ", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "out", "=", "max", "(", "8", ",", "in_dim", "*", "2", ")", "\n", "self", ".", "input", "=", "nn", ".", "Linear", "(", "in_dim", ",", "out", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "out", ",", "out", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "out", ",", "out", ")", "\n", "self", ".", "output", "=", "nn", ".", "Linear", "(", "out", ",", "out_dim", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.mlp.MLP.forward": [[22, 29], ["mlp.MLP.float", "mlp.MLP.relu", "mlp.MLP.relu", "mlp.MLP.relu", "mlp.MLP.relu", "mlp.MLP.input", "mlp.MLP.fc", "mlp.MLP.fc2", "mlp.MLP.output"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "float", "(", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "input", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "fc", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "output", "(", "x", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.mlp.MlpWithAttention.__init__": [[32, 46], ["torch.Module.__init__", "max", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "attention.Self_Attn1D", "attention.Self_Attn1D", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ")", ":", "\n", "        ", "super", "(", "MlpWithAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "out", "=", "max", "(", "8", ",", "in_dim", "*", "2", ")", "\n", "self", ".", "input", "=", "nn", ".", "Linear", "(", "in_dim", ",", "out", ")", "\n", "self", ".", "output", "=", "nn", ".", "Linear", "(", "out", ",", "out_dim", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "out", ",", "out", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "out", ",", "out", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "out", ",", "out", ")", "\n", "self", ".", "attention", "=", "Self_Attn1D", "(", "out", ",", "nn", ".", "LeakyReLU", ")", "\n", "self", ".", "attention2", "=", "Self_Attn1D", "(", "out", ",", "nn", ".", "LeakyReLU", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.mlp.MlpWithAttention.forward": [[47, 57], ["mlp.MlpWithAttention.float", "mlp.MlpWithAttention.relu", "mlp.MlpWithAttention.attention", "mlp.MlpWithAttention.relu", "mlp.MlpWithAttention.attention2", "mlp.MlpWithAttention.relu", "mlp.MlpWithAttention.relu", "mlp.MlpWithAttention.relu", "mlp.MlpWithAttention.input", "mlp.MlpWithAttention.fc", "mlp.MlpWithAttention.fc2", "mlp.MlpWithAttention.fc3", "mlp.MlpWithAttention.output"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "float", "(", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "input", "(", "x", ")", ")", "\n", "x", ",", "_", "=", "self", ".", "attention", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "fc", "(", "x", ")", ")", "\n", "x", ",", "_", "=", "self", ".", "attention2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "fc3", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "output", "(", "x", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.mlp.MlpAttention.__init__": [[60, 69], ["torch.Module.__init__", "max", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "attention.Self_Attn1D", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ")", ":", "\n", "        ", "super", "(", "MlpAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "out", "=", "max", "(", "8", ",", "in_dim", "*", "2", ")", "\n", "self", ".", "input", "=", "nn", ".", "Linear", "(", "in_dim", ",", "out", ")", "\n", "self", ".", "output", "=", "nn", ".", "Linear", "(", "out", ",", "out_dim", ")", "\n", "self", ".", "attention", "=", "Self_Attn1D", "(", "out", ",", "nn", ".", "LeakyReLU", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.mlp.MlpAttention.forward": [[70, 76], ["mlp.MlpAttention.float", "mlp.MlpAttention.input", "mlp.MlpAttention.attention", "mlp.MlpAttention.relu", "mlp.MlpAttention.output"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "float", "(", ")", "\n", "x", "=", "self", ".", "input", "(", "x", ")", "\n", "x", ",", "att", "=", "self", ".", "attention", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "output", "(", "x", ")", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn2D.__init__": [[13, 23], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", "Self_Attn2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chanel_in", "=", "in_dim", "\n", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn2D.forward": [[24, 44], ["x.size", "attention.Self_Attn2D.Self_Attn2D.query_conv().view().permute", "attention.Self_Attn2D.Self_Attn2D.key_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "attention.Self_Attn2D.Self_Attn2D.softmax", "attention.Self_Attn2D.Self_Attn2D.value_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.view.view.view", "attention.Self_Attn2D.Self_Attn2D.permute", "attention.Self_Attn2D.Self_Attn2D.query_conv().view", "attention.Self_Attn2D.Self_Attn2D.key_conv", "attention.Self_Attn2D.Self_Attn2D.value_conv", "attention.Self_Attn2D.Self_Attn2D.query_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X W X H)\n            returns :\n                out : self attention value + input feature\n                attention: B X N X N (N is Width*Height)\n        \"\"\"", "\n", "m_batchsize", ",", "C", ",", "width", ",", "height", "=", "x", ".", "size", "(", ")", "\n", "proj_query", "=", "self", ".", "query_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "# B X CX(N)", "\n", "proj_key", "=", "self", ".", "key_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", "# B X C x (*W*H)", "\n", "energy", "=", "torch", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "# transpose check", "\n", "attention", "=", "self", ".", "softmax", "(", "energy", ")", "# BX (N) X (N)", "\n", "proj_value", "=", "self", ".", "value_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", "# B X C X N", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "proj_value", ",", "attention", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "m_batchsize", ",", "C", ",", "width", ",", "height", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "return", "out", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__": [[49, 72], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ",", "activation", ",", "k", "=", "8", ")", ":", "\n", "        ", "super", "(", "Self_Attn1D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chanel_in", "=", "in_dim", "\n", "self", ".", "activation", "=", "activation", "\n", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv1d", "(", "\n", "in_channels", "=", "in_dim", ",", "\n", "out_channels", "=", "in_dim", "//", "k", ",", "\n", "kernel_size", "=", "1", ",", "\n", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv1d", "(", "\n", "in_channels", "=", "in_dim", ",", "\n", "out_channels", "=", "in_dim", "//", "k", ",", "\n", "kernel_size", "=", "1", ",", "\n", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Conv1d", "(", "\n", "in_channels", "=", "in_dim", ",", "\n", "out_channels", "=", "in_dim", ",", "\n", "kernel_size", "=", "1", "\n", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.NathanGavenski_IUPE.general.attention.Self_Attn1D.forward": [[73, 102], ["x.view.view.size", "x.view.view.view", "attention.Self_Attn1D.Self_Attn1D.query_conv().view().permute", "attention.Self_Attn1D.Self_Attn1D.key_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "attention.Self_Attn1D.Self_Attn1D.softmax", "attention.Self_Attn1D.Self_Attn1D.value_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.squeeze.squeeze.view", "out.squeeze.squeeze.squeeze", "attention.Self_Attn1D.Self_Attn1D.permute", "attention.Self_Attn1D.Self_Attn1D.query_conv().view", "attention.Self_Attn1D.Self_Attn1D.key_conv", "attention.Self_Attn1D.Self_Attn1D.value_conv", "attention.Self_Attn1D.Self_Attn1D.query_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "return_attn", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps(B X C X T)\n            returns :\n                out : self attention value + input feature\n                attention: B X N X N (N is Width*T)\n        \"\"\"", "\n", "B", ",", "C", "=", "x", ".", "size", "(", ")", "\n", "T", "=", "1", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "C", ",", "T", ")", "\n", "\n", "# B X C X (N)", "\n", "proj_query", "=", "self", ".", "query_conv", "(", "x", ")", ".", "view", "(", "B", ",", "-", "1", ",", "T", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "# B X C x (W*H)", "\n", "proj_key", "=", "self", ".", "key_conv", "(", "x", ")", ".", "view", "(", "B", ",", "-", "1", ",", "T", ")", "\n", "energy", "=", "torch", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "\n", "# B X (N) X (N)", "\n", "attention", "=", "self", ".", "softmax", "(", "energy", ")", "\n", "# B X C X N", "\n", "proj_value", "=", "self", ".", "value_conv", "(", "x", ")", ".", "view", "(", "B", ",", "-", "1", ",", "T", ")", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "proj_value", ",", "attention", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "B", ",", "C", ",", "T", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "out", "=", "out", ".", "squeeze", "(", "2", ")", "\n", "\n", "return", "out", ",", "attention", "\n", "", "", ""]]}