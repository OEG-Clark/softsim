{"home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_MSCADC.save_model": [[33, 36], ["os.path.join", "torch.save", "torch.save", "torch.save", "model.state_dict"], "function", ["None"], ["def", "save_model", "(", "model", ",", "model_name", ",", "epoch", ",", "path", ")", ":", "\n", "    ", "model_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "'%s_%d.pth'", "%", "(", "model_name", ",", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_MSCADC.train_phase": [[38, 108], ["model_CNN.train", "model_score_regressor.train", "model_classifier.train", "model_caption.train", "data[].type().cuda", "data[].transpose_().cuda", "model_CNN", "model_score_regressor", "optimizer.zero_grad", "loss.backward", "optimizer.step", "data[].cuda", "data[].cuda", "data[].cuda", "data[].cuda", "data[].cuda", "data[].cuda", "data[].cuda", "model_classifier", "model_caption", "criterion_final_score", "penalty_final_score", "criterion_dive_classifier", "criterion_dive_classifier", "criterion_dive_classifier", "criterion_dive_classifier", "criterion_dive_classifier", "criterion_caption", "print", "print", "data[].type", "data[].transpose_", "loss.data.cpu().numpy", "loss_final_score.data.cpu().numpy", "print", "print", "loss_cls.data.cpu().numpy", "criterion_caption.data.cpu().numpy", "loss.data.cpu", "loss_final_score.data.cpu", "loss_cls.data.cpu", "criterion_caption.data.cpu"], "function", ["None"], ["", "def", "train_phase", "(", "train_dataloader", ",", "optimizer", ",", "criterions", ",", "epoch", ")", ":", "\n", "    ", "criterion_final_score", "=", "criterions", "[", "'criterion_final_score'", "]", "\n", "penalty_final_score", "=", "criterions", "[", "'penalty_final_score'", "]", "\n", "if", "with_dive_classification", ":", "\n", "        ", "criterion_dive_classifier", "=", "criterions", "[", "'criterion_dive_classifier'", "]", "\n", "", "if", "with_caption", ":", "\n", "        ", "criterion_caption", "=", "criterions", "[", "'criterion_caption'", "]", "\n", "\n", "", "model_CNN", ".", "train", "(", ")", "\n", "model_score_regressor", ".", "train", "(", ")", "\n", "if", "with_dive_classification", ":", "\n", "        ", "model_classifier", ".", "train", "(", ")", "\n", "", "if", "with_caption", ":", "\n", "        ", "model_caption", ".", "train", "(", ")", "\n", "\n", "", "iteration", "=", "0", "\n", "for", "data", "in", "train_dataloader", ":", "\n", "        ", "true_final_score", "=", "data", "[", "'label_final_score'", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "if", "with_dive_classification", ":", "\n", "            ", "true_postion", "=", "data", "[", "'label_position'", "]", ".", "cuda", "(", ")", "\n", "true_armstand", "=", "data", "[", "'label_armstand'", "]", ".", "cuda", "(", ")", "\n", "true_rot_type", "=", "data", "[", "'label_rot_type'", "]", ".", "cuda", "(", ")", "\n", "true_ss_no", "=", "data", "[", "'label_ss_no'", "]", ".", "cuda", "(", ")", "\n", "true_tw_no", "=", "data", "[", "'label_tw_no'", "]", ".", "cuda", "(", ")", "\n", "", "if", "with_caption", ":", "\n", "            ", "true_captions", "=", "data", "[", "'label_captions'", "]", ".", "cuda", "(", ")", "\n", "true_captions_mask", "=", "data", "[", "'label_captions_mask'", "]", ".", "cuda", "(", ")", "\n", "", "video", "=", "data", "[", "'video'", "]", ".", "transpose_", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "batch_size", ",", "C", ",", "frames", ",", "H", ",", "W", "=", "video", ".", "shape", "\n", "\n", "sample_feats_fc6", "=", "model_CNN", "(", "video", ")", "\n", "\n", "if", "with_dive_classification", ":", "\n", "            ", "pred_position", ",", "pred_armstand", ",", "pred_rot_type", ",", "pred_ss_no", ",", "pred_tw_no", "=", "model_classifier", "(", "sample_feats_fc6", ")", "\n", "\n", "", "if", "with_caption", ":", "\n", "            ", "seq_probs", ",", "_", "=", "model_caption", "(", "sample_feats_fc6", ",", "true_captions", ",", "'train'", ")", "\n", "\n", "", "pred_final_score", "=", "model_score_regressor", "(", "sample_feats_fc6", ")", "\n", "\n", "loss_final_score", "=", "(", "criterion_final_score", "(", "pred_final_score", ",", "true_final_score", ")", "\n", "+", "penalty_final_score", "(", "pred_final_score", ",", "true_final_score", ")", ")", "\n", "\n", "loss", "=", "0", "\n", "loss", "+=", "loss_final_score", "\n", "if", "with_dive_classification", ":", "\n", "            ", "loss_position", "=", "criterion_dive_classifier", "(", "pred_position", ",", "true_postion", ")", "\n", "loss_armstand", "=", "criterion_dive_classifier", "(", "pred_armstand", ",", "true_armstand", ")", "\n", "loss_rot_type", "=", "criterion_dive_classifier", "(", "pred_rot_type", ",", "true_rot_type", ")", "\n", "loss_ss_no", "=", "criterion_dive_classifier", "(", "pred_ss_no", ",", "true_ss_no", ")", "\n", "loss_tw_no", "=", "criterion_dive_classifier", "(", "pred_tw_no", ",", "true_tw_no", ")", "\n", "loss_cls", "=", "loss_position", "+", "loss_armstand", "+", "loss_rot_type", "+", "loss_ss_no", "+", "loss_tw_no", "\n", "loss", "+=", "loss_cls", "\n", "", "if", "with_caption", ":", "\n", "            ", "loss_caption", "=", "criterion_caption", "(", "seq_probs", ",", "true_captions", "[", ":", ",", "1", ":", "]", ",", "true_captions_mask", "[", ":", ",", "1", ":", "]", ")", "\n", "loss", "+=", "loss_caption", "*", "0.01", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "iteration", "%", "20", "==", "0", ":", "\n", "            ", "print", "(", "'Epoch:'", ",", "epoch", ",", "'    Iter:'", ",", "iteration", ",", "'    Loss:'", ",", "\n", "loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "'    FS Loss:'", ",", "loss_final_score", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "end", "=", "\"\"", ")", "\n", "if", "with_dive_classification", ":", "\n", "                  ", "print", "(", "'   Cls Loss:'", ",", "loss_cls", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "end", "=", "\"\"", ")", "\n", "", "if", "with_caption", ":", "\n", "                  ", "print", "(", "'   Cap Loss:'", ",", "loss_caption", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", "' '", ")", "\n", "", "iteration", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_MSCADC.test_phase": [[110, 186], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "model_CNN.eval", "model_score_regressor.eval", "scipy.spearmanr", "print", "print", "print", "model_classifier.eval", "model_caption.eval", "true_scores.extend", "data[].transpose_().cuda", "model_CNN", "model_score_regressor", "pred_scores.extend", "range", "print", "data[].data.numpy", "true_position.extend", "true_armstand.extend", "true_rot_type.extend", "true_ss_no.extend", "true_tw_no.extend", "model_caption", "model_classifier", "torch.Softmax", "nn.Softmax.data.cpu().numpy", "nn.Softmax.data.cpu().numpy", "nn.Softmax.data.cpu().numpy", "nn.Softmax.data.cpu().numpy", "nn.Softmax.data.cpu().numpy", "range", "model_score_regressor.data.cpu().numpy", "len", "data[].numpy", "data[].numpy", "data[].numpy", "data[].numpy", "data[].numpy", "data[].transpose_", "len", "pred_position.extend", "pred_armstand.extend", "pred_rot_type.extend", "pred_ss_no.extend", "pred_tw_no.extend", "len", "len", "len", "len", "len", "nn.Softmax.data.cpu", "nn.Softmax.data.cpu", "nn.Softmax.data.cpu", "nn.Softmax.data.cpu", "nn.Softmax.data.cpu", "model_score_regressor.data.cpu", "numpy.subtract", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "nn.Softmax.", "nn.Softmax.", "nn.Softmax.", "nn.Softmax.", "nn.Softmax.", "max", "max", "max", "max", "max"], "function", ["None"], ["", "", "def", "test_phase", "(", "test_dataloader", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "pred_scores", "=", "[", "]", ";", "true_scores", "=", "[", "]", "\n", "if", "with_dive_classification", ":", "\n", "            ", "pred_position", "=", "[", "]", ";", "pred_armstand", "=", "[", "]", ";", "pred_rot_type", "=", "[", "]", ";", "pred_ss_no", "=", "[", "]", ";", "pred_tw_no", "=", "[", "]", "\n", "true_position", "=", "[", "]", ";", "true_armstand", "=", "[", "]", ";", "true_rot_type", "=", "[", "]", ";", "true_ss_no", "=", "[", "]", ";", "true_tw_no", "=", "[", "]", "\n", "\n", "", "model_CNN", ".", "eval", "(", ")", "\n", "model_score_regressor", ".", "eval", "(", ")", "\n", "if", "with_dive_classification", ":", "\n", "            ", "model_classifier", ".", "eval", "(", ")", "\n", "", "if", "with_caption", ":", "\n", "            ", "model_caption", ".", "eval", "(", ")", "\n", "\n", "", "for", "data", "in", "test_dataloader", ":", "\n", "            ", "true_scores", ".", "extend", "(", "data", "[", "'label_final_score'", "]", ".", "data", ".", "numpy", "(", ")", ")", "\n", "if", "with_dive_classification", ":", "\n", "                ", "true_position", ".", "extend", "(", "data", "[", "'label_position'", "]", ".", "numpy", "(", ")", ")", "\n", "true_armstand", ".", "extend", "(", "data", "[", "'label_armstand'", "]", ".", "numpy", "(", ")", ")", "\n", "true_rot_type", ".", "extend", "(", "data", "[", "'label_rot_type'", "]", ".", "numpy", "(", ")", ")", "\n", "true_ss_no", ".", "extend", "(", "data", "[", "'label_ss_no'", "]", ".", "numpy", "(", ")", ")", "\n", "true_tw_no", ".", "extend", "(", "data", "[", "'label_tw_no'", "]", ".", "numpy", "(", ")", ")", "\n", "", "video", "=", "data", "[", "'video'", "]", ".", "transpose_", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "\n", "batch_size", ",", "C", ",", "frames", ",", "H", ",", "W", "=", "video", ".", "shape", "\n", "\n", "sample_feats_fc6", "=", "model_CNN", "(", "video", ")", "\n", "\n", "if", "with_caption", ":", "\n", "                ", "seq_probs", ",", "_", "=", "model_caption", "(", "sample_feats_fc6", ",", "mode", "=", "'inference'", ")", "\n", "\n", "", "if", "with_dive_classification", ":", "\n", "                ", "temp_position", ",", "temp_armstand", ",", "temp_rot_type", ",", "temp_ss_no", ",", "temp_tw_no", "=", "model_classifier", "(", "sample_feats_fc6", ")", "\n", "softmax_layer", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "temp_position", "=", "softmax_layer", "(", "temp_position", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "temp_armstand", "=", "softmax_layer", "(", "temp_armstand", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "temp_rot_type", "=", "softmax_layer", "(", "temp_rot_type", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "temp_ss_no", "=", "softmax_layer", "(", "temp_ss_no", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "temp_tw_no", "=", "softmax_layer", "(", "temp_tw_no", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "temp_position", ")", ")", ":", "\n", "                    ", "pred_position", ".", "extend", "(", "np", ".", "argwhere", "(", "temp_position", "[", "i", "]", "==", "max", "(", "temp_position", "[", "i", "]", ")", ")", "[", "0", "]", ")", "\n", "pred_armstand", ".", "extend", "(", "np", ".", "argwhere", "(", "temp_armstand", "[", "i", "]", "==", "max", "(", "temp_armstand", "[", "i", "]", ")", ")", "[", "0", "]", ")", "\n", "pred_rot_type", ".", "extend", "(", "np", ".", "argwhere", "(", "temp_rot_type", "[", "i", "]", "==", "max", "(", "temp_rot_type", "[", "i", "]", ")", ")", "[", "0", "]", ")", "\n", "pred_ss_no", ".", "extend", "(", "np", ".", "argwhere", "(", "temp_ss_no", "[", "i", "]", "==", "max", "(", "temp_ss_no", "[", "i", "]", ")", ")", "[", "0", "]", ")", "\n", "pred_tw_no", ".", "extend", "(", "np", ".", "argwhere", "(", "temp_tw_no", "[", "i", "]", "==", "max", "(", "temp_tw_no", "[", "i", "]", ")", ")", "[", "0", "]", ")", "\n", "\n", "", "", "temp_final_score", "=", "model_score_regressor", "(", "sample_feats_fc6", ")", "\n", "pred_scores", ".", "extend", "(", "temp_final_score", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "if", "with_dive_classification", ":", "\n", "            ", "position_correct", "=", "0", ";", "armstand_correct", "=", "0", ";", "rot_type_correct", "=", "0", ";", "ss_no_correct", "=", "0", ";", "tw_no_correct", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_position", ")", ")", ":", "\n", "                ", "if", "pred_position", "[", "i", "]", "==", "true_position", "[", "i", "]", ":", "\n", "                    ", "position_correct", "+=", "1", "\n", "", "if", "pred_armstand", "[", "i", "]", "==", "true_armstand", "[", "i", "]", ":", "\n", "                    ", "armstand_correct", "+=", "1", "\n", "", "if", "pred_rot_type", "[", "i", "]", "==", "true_rot_type", "[", "i", "]", ":", "\n", "                    ", "rot_type_correct", "+=", "1", "\n", "", "if", "pred_ss_no", "[", "i", "]", "==", "true_ss_no", "[", "i", "]", ":", "\n", "                    ", "ss_no_correct", "+=", "1", "\n", "", "if", "pred_tw_no", "[", "i", "]", "==", "true_tw_no", "[", "i", "]", ":", "\n", "                    ", "tw_no_correct", "+=", "1", "\n", "", "", "position_accu", "=", "position_correct", "/", "len", "(", "pred_position", ")", "*", "100", "\n", "armstand_accu", "=", "armstand_correct", "/", "len", "(", "pred_armstand", ")", "*", "100", "\n", "rot_type_accu", "=", "rot_type_correct", "/", "len", "(", "pred_rot_type", ")", "*", "100", "\n", "ss_no_accu", "=", "ss_no_correct", "/", "len", "(", "pred_ss_no", ")", "*", "100", "\n", "tw_no_accu", "=", "tw_no_correct", "/", "len", "(", "pred_tw_no", ")", "*", "100", "\n", "print", "(", "'Accuracies: Position: '", ",", "position_accu", ",", "' Armstand: '", ",", "armstand_accu", ",", "' Rot_type: '", ",", "rot_type_accu", ",", "\n", "' SS_no: '", ",", "ss_no_accu", ",", "' TW_no: '", ",", "tw_no_accu", ")", "\n", "\n", "", "rho", ",", "p", "=", "stats", ".", "spearmanr", "(", "pred_scores", ",", "true_scores", ")", "\n", "mse", "=", "(", "(", "np", ".", "subtract", "(", "pred_scores", ",", "true_scores", ")", "*", "final_score_std", ")", "**", "2", ")", ".", "mean", "(", ")", "\n", "print", "(", "'Predicted scores: '", ",", "pred_scores", ")", "\n", "print", "(", "'True scores: '", ",", "true_scores", ")", "\n", "print", "(", "'Correlation: '", ",", "rho", ",", "'   |   MSE: '", ",", "mse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_MSCADC.main": [[188, 239], ["torch.Adam", "print", "torch.MSELoss", "torch.L1Loss", "dataloaders.dataloader_MSCADC.VideoDataset", "dataloaders.dataloader_MSCADC.VideoDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "print", "print", "range", "list", "list", "list", "list", "torch.CrossEntropyLoss", "utils.utils_1.LanguageModelCriterion", "len", "len", "len", "len", "print", "train_test_MSCADC.train_phase", "train_test_MSCADC.test_phase", "model_CNN.parameters", "model_score_regressor.parameters", "model_CNN.named_parameters", "model_score_regressor.named_parameters", "list", "list", "list", "list", "print", "train_test_MSCADC.save_model", "train_test_MSCADC.save_model", "model_classifier.parameters", "model_classifier.parameters", "model_caption.parameters", "model_caption.named_parameters", "train_test_MSCADC.save_model", "train_test_MSCADC.save_model"], "function", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.train_phase", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.test_phase", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.save_model", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.save_model", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.save_model", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.save_model"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "parameters_2_optimize", "=", "(", "list", "(", "model_CNN", ".", "parameters", "(", ")", ")", "+", "list", "(", "model_score_regressor", ".", "parameters", "(", ")", ")", ")", "\n", "parameters_2_optimize_named", "=", "(", "list", "(", "model_CNN", ".", "named_parameters", "(", ")", ")", "+", "list", "(", "model_score_regressor", ".", "named_parameters", "(", ")", ")", ")", "\n", "if", "with_dive_classification", ":", "\n", "        ", "parameters_2_optimize", "=", "(", "parameters_2_optimize", "+", "list", "(", "model_classifier", ".", "parameters", "(", ")", ")", ")", "\n", "parameters_2_optimize_named", "=", "(", "parameters_2_optimize_named", "+", "list", "(", "model_classifier", ".", "parameters", "(", ")", ")", ")", "\n", "", "if", "with_caption", ":", "\n", "        ", "parameters_2_optimize", "=", "parameters_2_optimize", "+", "list", "(", "model_caption", ".", "parameters", "(", ")", ")", "\n", "parameters_2_optimize_named", "=", "parameters_2_optimize_named", "+", "list", "(", "model_caption", ".", "named_parameters", "(", ")", ")", "\n", "\n", "", "learning_rate", "=", "base_learning_rate", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "parameters_2_optimize", ",", "lr", "=", "learning_rate", ")", "\n", "print", "(", "'Parameters that will be learnt: '", ",", "parameters_2_optimize_named", ")", "\n", "\n", "criterions", "=", "{", "}", "\n", "criterion_final_score", "=", "nn", ".", "MSELoss", "(", ")", "\n", "penalty_final_score", "=", "nn", ".", "L1Loss", "(", ")", "\n", "criterions", "[", "'criterion_final_score'", "]", "=", "criterion_final_score", "\n", "criterions", "[", "'penalty_final_score'", "]", "=", "penalty_final_score", "\n", "if", "with_dive_classification", ":", "\n", "        ", "criterion_dive_classifier", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterions", "[", "'criterion_dive_classifier'", "]", "=", "criterion_dive_classifier", "\n", "", "if", "with_caption", ":", "\n", "        ", "criterion_caption", "=", "utils_1", ".", "LanguageModelCriterion", "(", ")", "\n", "criterions", "[", "'criterion_caption'", "]", "=", "criterion_caption", "\n", "\n", "", "train_dataset", "=", "VideoDataset", "(", "'train'", ")", "\n", "test_dataset", "=", "VideoDataset", "(", "'test'", ")", "\n", "train_dataloader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "train_batch_size", ",", "shuffle", "=", "True", ")", "\n", "test_dataloader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "test_batch_size", ",", "shuffle", "=", "False", ")", "\n", "print", "(", "'Length of train loader: '", ",", "len", "(", "train_dataloader", ")", ")", "\n", "print", "(", "'Length of test loader: '", ",", "len", "(", "test_dataloader", ")", ")", "\n", "print", "(", "'Training set size: '", ",", "len", "(", "train_dataset", ".", "keys", ")", ",", "';    Test set size: '", ",", "len", "(", "test_dataset", ".", "keys", ")", ")", "\n", "\n", "# actual training, testing loops", "\n", "for", "epoch", "in", "range", "(", "max_epochs", ")", ":", "\n", "        ", "saving_dir", "=", "'...'", "\n", "print", "(", "'-------------------------------------------------------------------------------------------------------'", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "print", "(", "'Current learning rate: '", ",", "param_group", "[", "'lr'", "]", ")", "\n", "\n", "", "train_phase", "(", "train_dataloader", ",", "optimizer", ",", "criterions", ",", "epoch", ")", "\n", "test_phase", "(", "test_dataloader", ")", "\n", "\n", "if", "(", "epoch", "+", "1", ")", "%", "model_ckpt_interval", "==", "0", ":", "# save models every 5 epochs", "\n", "            ", "save_model", "(", "model_CNN", ",", "'model_CNN'", ",", "epoch", ",", "saving_dir", ")", "\n", "save_model", "(", "model_score_regressor", ",", "'model_score_regressor'", ",", "epoch", ",", "saving_dir", ")", "\n", "if", "with_dive_classification", ":", "\n", "                ", "save_model", "(", "model_classifier", ",", "'model_position_classifier'", ",", "epoch", ",", "saving_dir", ")", "\n", "", "if", "with_caption", ":", "\n", "                ", "save_model", "(", "model_caption", ",", "'model_caption'", ",", "epoch", ",", "saving_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.save_model": [[33, 36], ["os.path.join", "torch.save", "torch.save", "torch.save", "model.state_dict"], "function", ["None"], ["def", "save_model", "(", "model", ",", "model_name", ",", "epoch", ",", "path", ")", ":", "\n", "    ", "model_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "'%s_%d.pth'", "%", "(", "model_name", ",", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.train_phase": [[38, 115], ["model_CNN.train", "model_my_fc6.train", "model_score_regressor.train", "model_dive_classifier.train", "model_caption.train", "data[].unsqueeze_().type().cuda", "data[].transpose_().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "numpy.arange", "torch.cat.mean", "model_my_fc6", "model_score_regressor", "optimizer.zero_grad", "loss.backward", "optimizer.step", "data[].cuda", "data[].cuda", "data[].cuda", "data[].cuda", "data[].cuda", "data[].cuda", "data[].cuda", "model_CNN", "model_CNN.unsqueeze_", "model_CNN.transpose_", "torch.cat", "torch.cat", "torch.cat", "model_dive_classifier", "model_caption", "criterion_final_score", "penalty_final_score", "criterion_dive_classifier", "criterion_dive_classifier", "criterion_dive_classifier", "criterion_dive_classifier", "criterion_dive_classifier", "criterion_caption", "print", "print", "data[].unsqueeze_().type", "data[].transpose_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "print", "print", "data[].unsqueeze_"], "function", ["None"], ["", "def", "train_phase", "(", "train_dataloader", ",", "optimizer", ",", "criterions", ",", "epoch", ")", ":", "\n", "    ", "criterion_final_score", "=", "criterions", "[", "'criterion_final_score'", "]", ";", "penalty_final_score", "=", "criterions", "[", "'penalty_final_score'", "]", "\n", "if", "with_dive_classification", ":", "\n", "        ", "criterion_dive_classifier", "=", "criterions", "[", "'criterion_dive_classifier'", "]", "\n", "", "if", "with_caption", ":", "\n", "        ", "criterion_caption", "=", "criterions", "[", "'criterion_caption'", "]", "\n", "\n", "", "model_CNN", ".", "train", "(", ")", "\n", "model_my_fc6", ".", "train", "(", ")", "\n", "model_score_regressor", ".", "train", "(", ")", "\n", "if", "with_dive_classification", ":", "\n", "        ", "model_dive_classifier", ".", "train", "(", ")", "\n", "", "if", "with_caption", ":", "\n", "        ", "model_caption", ".", "train", "(", ")", "\n", "\n", "", "iteration", "=", "0", "\n", "for", "data", "in", "train_dataloader", ":", "\n", "        ", "true_final_score", "=", "data", "[", "'label_final_score'", "]", ".", "unsqueeze_", "(", "1", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "cuda", "(", ")", "\n", "if", "with_dive_classification", ":", "\n", "            ", "true_postion", "=", "data", "[", "'label_position'", "]", ".", "cuda", "(", ")", "\n", "true_armstand", "=", "data", "[", "'label_armstand'", "]", ".", "cuda", "(", ")", "\n", "true_rot_type", "=", "data", "[", "'label_rot_type'", "]", ".", "cuda", "(", ")", "\n", "true_ss_no", "=", "data", "[", "'label_ss_no'", "]", ".", "cuda", "(", ")", "\n", "true_tw_no", "=", "data", "[", "'label_tw_no'", "]", ".", "cuda", "(", ")", "\n", "", "if", "with_caption", ":", "\n", "            ", "true_captions", "=", "data", "[", "'label_captions'", "]", ".", "cuda", "(", ")", "\n", "true_captions_mask", "=", "data", "[", "'label_captions_mask'", "]", ".", "cuda", "(", ")", "\n", "", "video", "=", "data", "[", "'video'", "]", ".", "transpose_", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "\n", "batch_size", ",", "C", ",", "frames", ",", "H", ",", "W", "=", "video", ".", "shape", "\n", "clip_feats", "=", "torch", ".", "Tensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "i", "in", "np", ".", "arange", "(", "0", ",", "frames", "-", "17", ",", "16", ")", ":", "\n", "            ", "clip", "=", "video", "[", ":", ",", ":", ",", "i", ":", "i", "+", "16", ",", ":", ",", ":", "]", "\n", "clip_feats_temp", "=", "model_CNN", "(", "clip", ")", "\n", "clip_feats_temp", ".", "unsqueeze_", "(", "0", ")", "\n", "clip_feats_temp", ".", "transpose_", "(", "0", ",", "1", ")", "\n", "clip_feats", "=", "torch", ".", "cat", "(", "(", "clip_feats", ",", "clip_feats_temp", ")", ",", "1", ")", "\n", "", "clip_feats_avg", "=", "clip_feats", ".", "mean", "(", "1", ")", "\n", "\n", "sample_feats_fc6", "=", "model_my_fc6", "(", "clip_feats_avg", ")", "\n", "\n", "pred_final_score", "=", "model_score_regressor", "(", "sample_feats_fc6", ")", "\n", "if", "with_dive_classification", ":", "\n", "            ", "(", "pred_position", ",", "pred_armstand", ",", "pred_rot_type", ",", "pred_ss_no", ",", "\n", "pred_tw_no", ")", "=", "model_dive_classifier", "(", "sample_feats_fc6", ")", "\n", "", "if", "with_caption", ":", "\n", "            ", "seq_probs", ",", "_", "=", "model_caption", "(", "clip_feats", ",", "true_captions", ",", "'train'", ")", "\n", "\n", "", "loss_final_score", "=", "(", "criterion_final_score", "(", "pred_final_score", ",", "true_final_score", ")", "\n", "+", "penalty_final_score", "(", "pred_final_score", ",", "true_final_score", ")", ")", "\n", "loss", "=", "0", "\n", "loss", "+=", "loss_final_score", "\n", "if", "with_dive_classification", ":", "\n", "            ", "loss_position", "=", "criterion_dive_classifier", "(", "pred_position", ",", "true_postion", ")", "\n", "loss_armstand", "=", "criterion_dive_classifier", "(", "pred_armstand", ",", "true_armstand", ")", "\n", "loss_rot_type", "=", "criterion_dive_classifier", "(", "pred_rot_type", ",", "true_rot_type", ")", "\n", "loss_ss_no", "=", "criterion_dive_classifier", "(", "pred_ss_no", ",", "true_ss_no", ")", "\n", "loss_tw_no", "=", "criterion_dive_classifier", "(", "pred_tw_no", ",", "true_tw_no", ")", "\n", "loss_cls", "=", "loss_position", "+", "loss_armstand", "+", "loss_rot_type", "+", "loss_ss_no", "+", "loss_tw_no", "\n", "loss", "+=", "loss_cls", "\n", "", "if", "with_caption", ":", "\n", "            ", "loss_caption", "=", "criterion_caption", "(", "seq_probs", ",", "true_captions", "[", ":", ",", "1", ":", "]", ",", "true_captions_mask", "[", ":", ",", "1", ":", "]", ")", "\n", "loss", "+=", "loss_caption", "*", "0.01", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "iteration", "%", "20", "==", "0", ":", "\n", "            ", "print", "(", "'Epoch: '", ",", "epoch", ",", "' Iter: '", ",", "iteration", ",", "' Loss: '", ",", "loss", ",", "' FS Loss: '", ",", "loss_final_score", ",", "end", "=", "\"\"", ")", "\n", "if", "with_dive_classification", ":", "\n", "                  ", "print", "(", "' Cls Loss: '", ",", "loss_cls", ",", "end", "=", "\"\"", ")", "\n", "", "if", "with_caption", ":", "\n", "                  ", "print", "(", "' Cap Loss: '", ",", "loss_caption", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", "' '", ")", "\n", "", "iteration", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.test_phase": [[117, 198], ["print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model_CNN.eval", "model_my_fc6.eval", "model_score_regressor.eval", "scipy.spearmanr", "print", "print", "print", "model_dive_classifier.eval", "model_caption.eval", "true_scores.extend", "data[].transpose_().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "numpy.arange", "torch.cat.mean", "model_my_fc6", "model_score_regressor", "pred_scores.extend", "range", "print", "data[].data.numpy", "true_position.extend", "true_armstand.extend", "true_rot_type.extend", "true_ss_no.extend", "true_tw_no.extend", "model_CNN", "model_CNN.unsqueeze_", "model_CNN.transpose_", "torch.cat", "torch.cat", "torch.cat", "model_dive_classifier", "torch.Softmax", "nn.Softmax.data.cpu().numpy", "nn.Softmax.data.cpu().numpy", "nn.Softmax.data.cpu().numpy", "nn.Softmax.data.cpu().numpy", "nn.Softmax.data.cpu().numpy", "range", "len", "data[].numpy", "data[].numpy", "data[].numpy", "data[].numpy", "data[].numpy", "data[].transpose_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "len", "pred_position.extend", "pred_armstand.extend", "pred_rot_type.extend", "pred_ss_no.extend", "pred_tw_no.extend", "len", "len", "len", "len", "len", "model_score_regressor.data.cpu().numpy", "nn.Softmax.data.cpu", "nn.Softmax.data.cpu", "nn.Softmax.data.cpu", "nn.Softmax.data.cpu", "nn.Softmax.data.cpu", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "model_score_regressor.data.cpu", "nn.Softmax.", "nn.Softmax.", "nn.Softmax.", "nn.Softmax.", "nn.Softmax.", "max", "max", "max", "max", "max"], "function", ["None"], ["", "", "def", "test_phase", "(", "test_dataloader", ")", ":", "\n", "    ", "print", "(", "'In testphase...'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "pred_scores", "=", "[", "]", ";", "true_scores", "=", "[", "]", "\n", "if", "with_dive_classification", ":", "\n", "            ", "pred_position", "=", "[", "]", ";", "pred_armstand", "=", "[", "]", ";", "pred_rot_type", "=", "[", "]", ";", "pred_ss_no", "=", "[", "]", ";", "pred_tw_no", "=", "[", "]", "\n", "true_position", "=", "[", "]", ";", "true_armstand", "=", "[", "]", ";", "true_rot_type", "=", "[", "]", ";", "true_ss_no", "=", "[", "]", ";", "true_tw_no", "=", "[", "]", "\n", "\n", "", "model_CNN", ".", "eval", "(", ")", "\n", "model_my_fc6", ".", "eval", "(", ")", "\n", "model_score_regressor", ".", "eval", "(", ")", "\n", "if", "with_dive_classification", ":", "\n", "            ", "model_dive_classifier", ".", "eval", "(", ")", "\n", "", "if", "with_caption", ":", "\n", "            ", "model_caption", ".", "eval", "(", ")", "\n", "\n", "", "for", "data", "in", "test_dataloader", ":", "\n", "            ", "true_scores", ".", "extend", "(", "data", "[", "'label_final_score'", "]", ".", "data", ".", "numpy", "(", ")", ")", "\n", "if", "with_dive_classification", ":", "\n", "                ", "true_position", ".", "extend", "(", "data", "[", "'label_position'", "]", ".", "numpy", "(", ")", ")", "\n", "true_armstand", ".", "extend", "(", "data", "[", "'label_armstand'", "]", ".", "numpy", "(", ")", ")", "\n", "true_rot_type", ".", "extend", "(", "data", "[", "'label_rot_type'", "]", ".", "numpy", "(", ")", ")", "\n", "true_ss_no", ".", "extend", "(", "data", "[", "'label_ss_no'", "]", ".", "numpy", "(", ")", ")", "\n", "true_tw_no", ".", "extend", "(", "data", "[", "'label_tw_no'", "]", ".", "numpy", "(", ")", ")", "\n", "", "video", "=", "data", "[", "'video'", "]", ".", "transpose_", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "\n", "batch_size", ",", "C", ",", "frames", ",", "H", ",", "W", "=", "video", ".", "shape", "\n", "clip_feats", "=", "torch", ".", "Tensor", "(", "[", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "i", "in", "np", ".", "arange", "(", "0", ",", "frames", "-", "17", ",", "16", ")", ":", "\n", "                ", "clip", "=", "video", "[", ":", ",", ":", ",", "i", ":", "i", "+", "16", ",", ":", ",", ":", "]", "\n", "clip_feats_temp", "=", "model_CNN", "(", "clip", ")", "\n", "clip_feats_temp", ".", "unsqueeze_", "(", "0", ")", "\n", "clip_feats_temp", ".", "transpose_", "(", "0", ",", "1", ")", "\n", "clip_feats", "=", "torch", ".", "cat", "(", "(", "clip_feats", ",", "clip_feats_temp", ")", ",", "1", ")", "\n", "", "clip_feats_avg", "=", "clip_feats", ".", "mean", "(", "1", ")", "\n", "\n", "sample_feats_fc6", "=", "model_my_fc6", "(", "clip_feats_avg", ")", "\n", "temp_final_score", "=", "model_score_regressor", "(", "sample_feats_fc6", ")", "\n", "pred_scores", ".", "extend", "(", "[", "element", "[", "0", "]", "for", "element", "in", "temp_final_score", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", ")", "\n", "if", "with_dive_classification", ":", "\n", "                ", "temp_position", ",", "temp_armstand", ",", "temp_rot_type", ",", "temp_ss_no", ",", "temp_tw_no", "=", "model_dive_classifier", "(", "sample_feats_fc6", ")", "\n", "softmax_layer", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "temp_position", "=", "softmax_layer", "(", "temp_position", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "temp_armstand", "=", "softmax_layer", "(", "temp_armstand", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "temp_rot_type", "=", "softmax_layer", "(", "temp_rot_type", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "temp_ss_no", "=", "softmax_layer", "(", "temp_ss_no", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "temp_tw_no", "=", "softmax_layer", "(", "temp_tw_no", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "temp_position", ")", ")", ":", "\n", "                    ", "pred_position", ".", "extend", "(", "np", ".", "argwhere", "(", "temp_position", "[", "i", "]", "==", "max", "(", "temp_position", "[", "i", "]", ")", ")", "[", "0", "]", ")", "\n", "pred_armstand", ".", "extend", "(", "np", ".", "argwhere", "(", "temp_armstand", "[", "i", "]", "==", "max", "(", "temp_armstand", "[", "i", "]", ")", ")", "[", "0", "]", ")", "\n", "pred_rot_type", ".", "extend", "(", "np", ".", "argwhere", "(", "temp_rot_type", "[", "i", "]", "==", "max", "(", "temp_rot_type", "[", "i", "]", ")", ")", "[", "0", "]", ")", "\n", "pred_ss_no", ".", "extend", "(", "np", ".", "argwhere", "(", "temp_ss_no", "[", "i", "]", "==", "max", "(", "temp_ss_no", "[", "i", "]", ")", ")", "[", "0", "]", ")", "\n", "pred_tw_no", ".", "extend", "(", "np", ".", "argwhere", "(", "temp_tw_no", "[", "i", "]", "==", "max", "(", "temp_tw_no", "[", "i", "]", ")", ")", "[", "0", "]", ")", "\n", "\n", "", "", "", "if", "with_dive_classification", ":", "\n", "            ", "position_correct", "=", "0", ";", "armstand_correct", "=", "0", ";", "rot_type_correct", "=", "0", ";", "ss_no_correct", "=", "0", ";", "tw_no_correct", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_position", ")", ")", ":", "\n", "                ", "if", "pred_position", "[", "i", "]", "==", "true_position", "[", "i", "]", ":", "\n", "                    ", "position_correct", "+=", "1", "\n", "", "if", "pred_armstand", "[", "i", "]", "==", "true_armstand", "[", "i", "]", ":", "\n", "                    ", "armstand_correct", "+=", "1", "\n", "", "if", "pred_rot_type", "[", "i", "]", "==", "true_rot_type", "[", "i", "]", ":", "\n", "                    ", "rot_type_correct", "+=", "1", "\n", "", "if", "pred_ss_no", "[", "i", "]", "==", "true_ss_no", "[", "i", "]", ":", "\n", "                    ", "ss_no_correct", "+=", "1", "\n", "", "if", "pred_tw_no", "[", "i", "]", "==", "true_tw_no", "[", "i", "]", ":", "\n", "                    ", "tw_no_correct", "+=", "1", "\n", "", "", "position_accu", "=", "position_correct", "/", "len", "(", "pred_position", ")", "*", "100", "\n", "armstand_accu", "=", "armstand_correct", "/", "len", "(", "pred_armstand", ")", "*", "100", "\n", "rot_type_accu", "=", "rot_type_correct", "/", "len", "(", "pred_rot_type", ")", "*", "100", "\n", "ss_no_accu", "=", "ss_no_correct", "/", "len", "(", "pred_ss_no", ")", "*", "100", "\n", "tw_no_accu", "=", "tw_no_correct", "/", "len", "(", "pred_tw_no", ")", "*", "100", "\n", "print", "(", "'Accuracies: Position: '", ",", "position_accu", ",", "' Armstand: '", ",", "armstand_accu", ",", "' Rot_type: '", ",", "rot_type_accu", ",", "\n", "' SS_no: '", ",", "ss_no_accu", ",", "' TW_no: '", ",", "tw_no_accu", ")", "\n", "\n", "", "rho", ",", "p", "=", "stats", ".", "spearmanr", "(", "pred_scores", ",", "true_scores", ")", "\n", "print", "(", "'Predicted scores: '", ",", "pred_scores", ")", "\n", "print", "(", "'True scores: '", ",", "true_scores", ")", "\n", "print", "(", "'Correlation: '", ",", "rho", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.main": [[200, 254], ["torch.Adam", "print", "torch.MSELoss", "torch.L1Loss", "dataloaders.dataloader_C3DAVG.VideoDataset", "dataloaders.dataloader_C3DAVG.VideoDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "print", "print", "range", "list", "list", "torch.CrossEntropyLoss", "utils.utils_1.LanguageModelCriterion", "len", "len", "print", "train_test_C3DAVG.train_phase", "train_test_C3DAVG.test_phase", "list", "list", "model_score_regressor.parameters", "list", "list", "model_score_regressor.named_parameters", "list", "list", "list", "list", "len", "len", "print", "train_test_C3DAVG.save_model", "train_test_C3DAVG.save_model", "train_test_C3DAVG.save_model", "model_CNN.parameters", "model_my_fc6.parameters", "model_CNN.named_parameters", "model_my_fc6.named_parameters", "model_dive_classifier.parameters", "model_dive_classifier.named_parameters", "model_caption.parameters", "model_caption.named_parameters", "train_test_C3DAVG.save_model", "train_test_C3DAVG.save_model"], "function", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.train_phase", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.test_phase", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.save_model", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.save_model", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.save_model", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.save_model", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MTL-AQA_code_release.train_test_C3DAVG.save_model"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "parameters_2_optimize", "=", "(", "list", "(", "model_CNN", ".", "parameters", "(", ")", ")", "+", "list", "(", "model_my_fc6", ".", "parameters", "(", ")", ")", "+", "\n", "list", "(", "model_score_regressor", ".", "parameters", "(", ")", ")", ")", "\n", "parameters_2_optimize_named", "=", "(", "list", "(", "model_CNN", ".", "named_parameters", "(", ")", ")", "+", "list", "(", "model_my_fc6", ".", "named_parameters", "(", ")", ")", "+", "\n", "list", "(", "model_score_regressor", ".", "named_parameters", "(", ")", ")", ")", "\n", "if", "with_dive_classification", ":", "\n", "        ", "parameters_2_optimize", "=", "parameters_2_optimize", "+", "list", "(", "model_dive_classifier", ".", "parameters", "(", ")", ")", "\n", "parameters_2_optimize_named", "=", "parameters_2_optimize_named", "+", "list", "(", "model_dive_classifier", ".", "named_parameters", "(", ")", ")", "\n", "", "if", "with_caption", ":", "\n", "        ", "parameters_2_optimize", "=", "parameters_2_optimize", "+", "list", "(", "model_caption", ".", "parameters", "(", ")", ")", "\n", "parameters_2_optimize_named", "=", "parameters_2_optimize_named", "+", "list", "(", "model_caption", ".", "named_parameters", "(", ")", ")", "\n", "\n", "", "optimizer", "=", "optim", ".", "Adam", "(", "parameters_2_optimize", ",", "lr", "=", "0.0001", ")", "\n", "print", "(", "'Parameters that will be learnt: '", ",", "parameters_2_optimize_named", ")", "\n", "\n", "criterions", "=", "{", "}", "\n", "criterion_final_score", "=", "nn", ".", "MSELoss", "(", ")", "\n", "penalty_final_score", "=", "nn", ".", "L1Loss", "(", ")", "\n", "criterions", "[", "'criterion_final_score'", "]", "=", "criterion_final_score", "\n", "criterions", "[", "'penalty_final_score'", "]", "=", "penalty_final_score", "\n", "if", "with_dive_classification", ":", "\n", "        ", "criterion_dive_classifier", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterions", "[", "'criterion_dive_classifier'", "]", "=", "criterion_dive_classifier", "\n", "", "if", "with_caption", ":", "\n", "        ", "criterion_caption", "=", "utils_1", ".", "LanguageModelCriterion", "(", ")", "\n", "criterions", "[", "'criterion_caption'", "]", "=", "criterion_caption", "\n", "\n", "", "train_dataset", "=", "VideoDataset", "(", "'train'", ")", "\n", "test_dataset", "=", "VideoDataset", "(", "'test'", ")", "\n", "train_dataloader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "train_batch_size", ",", "shuffle", "=", "True", ")", "\n", "test_dataloader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "test_batch_size", ",", "shuffle", "=", "False", ")", "\n", "print", "(", "'Length of train loader: '", ",", "len", "(", "train_dataloader", ")", ")", "\n", "print", "(", "'Length of test loader: '", ",", "len", "(", "test_dataloader", ")", ")", "\n", "print", "(", "'Training set size: '", ",", "len", "(", "train_dataloader", ")", "*", "train_batch_size", ",", "\n", "';    Test set size: '", ",", "len", "(", "test_dataloader", ")", "*", "test_batch_size", ")", "\n", "\n", "# actual training, testing loops", "\n", "for", "epoch", "in", "range", "(", "100", ")", ":", "\n", "        ", "saving_dir", "=", "'...'", "\n", "print", "(", "'-------------------------------------------------------------------------------------------------------'", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "print", "(", "'Current learning rate: '", ",", "param_group", "[", "'lr'", "]", ")", "\n", "\n", "", "train_phase", "(", "train_dataloader", ",", "optimizer", ",", "criterions", ",", "epoch", ")", "\n", "test_phase", "(", "test_dataloader", ")", "\n", "\n", "if", "(", "epoch", "+", "1", ")", "%", "model_ckpt_interval", "==", "0", ":", "# save models every 5 epochs", "\n", "            ", "save_model", "(", "model_CNN", ",", "'model_CNN'", ",", "epoch", ",", "saving_dir", ")", "\n", "save_model", "(", "model_my_fc6", ",", "'model_my_fc6'", ",", "epoch", ",", "saving_dir", ")", "\n", "save_model", "(", "model_score_regressor", ",", "'model_score_regressor'", ",", "epoch", ",", "saving_dir", ")", "\n", "if", "with_dive_classification", ":", "\n", "                ", "save_model", "(", "model_dive_classifier", ",", "'model_dive_classifier'", ",", "epoch", ",", "saving_dir", ")", "\n", "", "if", "with_caption", ":", "\n", "                ", "save_model", "(", "model_caption", ",", "'model_caption'", ",", "epoch", ",", "saving_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.utils.utils_1.RewardCriterion.__init__": [[40, 42], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "RewardCriterion", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.utils.utils_1.RewardCriterion.forward": [[44, 53], ["input.contiguous().view.contiguous().view.contiguous().view", "reward.contiguous().view.contiguous().view.contiguous().view", "torch.cat().contiguous().view", "torch.cat().contiguous().view", "torch.cat().contiguous().view", "torch.cat().contiguous().view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "input.contiguous().view.contiguous().view.contiguous", "reward.contiguous().view.contiguous().view.contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().contiguous().view.new().fill_().cuda", "torch.cat().contiguous().view.new().fill_().cuda", "torch.cat().contiguous().view.new().fill_", "torch.cat().contiguous().view.new().fill_", "torch.cat().contiguous().view.new", "torch.cat().contiguous().view.new", "torch.cat().contiguous().view.size", "torch.cat().contiguous().view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "seq", ",", "reward", ")", ":", "\n", "        ", "input", "=", "input", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "reward", "=", "reward", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "mask", "=", "(", "seq", ">", "0", ")", ".", "float", "(", ")", "\n", "mask", "=", "torch", ".", "cat", "(", "[", "mask", ".", "new", "(", "mask", ".", "size", "(", "0", ")", ",", "1", ")", ".", "fill_", "(", "1", ")", ".", "cuda", "(", ")", ",", "mask", "[", ":", ",", ":", "-", "1", "]", "]", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "output", "=", "-", "input", "*", "reward", "*", "mask", "\n", "output", "=", "torch", ".", "sum", "(", "output", ")", "/", "torch", ".", "sum", "(", "mask", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.utils.utils_1.LanguageModelCriterion.__init__": [[56, 59], ["torch.Module.__init__", "torch.NLLLoss", "torch.NLLLoss"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "LanguageModelCriterion", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss_fn", "=", "nn", ".", "NLLLoss", "(", "reduce", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.utils.utils_1.LanguageModelCriterion.forward": [[61, 71], ["logits.contiguous().view.contiguous().view.contiguous().view", "target.contiguous().view.contiguous().view.contiguous().view", "mask.contiguous().view.contiguous().view.contiguous().view", "utils_1.LanguageModelCriterion.loss_fn", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "logits.contiguous().view.contiguous().view.contiguous", "target.contiguous().view.contiguous().view.contiguous", "mask.contiguous().view.contiguous().view.contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "logits", ",", "target", ",", "mask", ")", ":", "\n", "        ", "batch_size", "=", "logits", ".", "shape", "[", "0", "]", "\n", "target", "=", "target", "[", ":", ",", ":", "logits", ".", "shape", "[", "1", "]", "]", "\n", "mask", "=", "mask", "[", ":", ",", ":", "logits", ".", "shape", "[", "1", "]", "]", "\n", "logits", "=", "logits", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "logits", ".", "shape", "[", "2", "]", ")", "\n", "target", "=", "target", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "mask", "=", "mask", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "loss", "=", "self", ".", "loss_fn", "(", "logits", ",", "target", ")", "\n", "output", "=", "torch", ".", "sum", "(", "loss", "*", "mask", ")", "/", "batch_size", "\n", "return", "output", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.utils.utils_1.decode_sequence": [[21, 37], ["seq.cpu.cpu", "seq.cpu.size", "range", "range", "out.append", "seq[].item", "str"], "function", ["None"], ["def", "decode_sequence", "(", "ix_to_word", ",", "seq", ")", ":", "\n", "    ", "seq", "=", "seq", ".", "cpu", "(", ")", "\n", "N", ",", "D", "=", "seq", ".", "size", "(", ")", "\n", "out", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "txt", "=", "''", "\n", "for", "j", "in", "range", "(", "D", ")", ":", "\n", "            ", "ix", "=", "seq", "[", "i", ",", "j", "]", ".", "item", "(", ")", "\n", "if", "ix", ">", "0", ":", "\n", "                ", "if", "j", ">=", "1", ":", "\n", "                    ", "txt", "=", "txt", "+", "' '", "\n", "", "txt", "=", "txt", "+", "ix_to_word", "[", "str", "(", "ix", ")", "]", "\n", "", "else", ":", "\n", "                ", "break", "\n", "", "", "out", ".", "append", "(", "txt", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MSCADC.body.C3D_dilated_body.__init__": [[23, 52], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "C3D_dilated_body", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "3", ",", "32", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "32", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "1", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv3d", "(", "32", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "conv3a", "=", "nn", ".", "Conv3d", "(", "64", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bn3a", "=", "nn", ".", "BatchNorm3d", "(", "128", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv3d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bn3b", "=", "nn", ".", "BatchNorm3d", "(", "128", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "conv4a", "=", "nn", ".", "Conv3d", "(", "128", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bn4a", "=", "nn", ".", "BatchNorm3d", "(", "256", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv3d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bn4b", "=", "nn", ".", "BatchNorm3d", "(", "256", ")", "\n", "\n", "self", ".", "conv5a", "=", "nn", ".", "Conv3d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "2", ",", "2", ",", "2", ")", ",", "dilation", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "self", ".", "bn5a", "=", "nn", ".", "BatchNorm3d", "(", "256", ")", "\n", "self", ".", "conv5b", "=", "nn", ".", "Conv3d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ",", "dilation", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "self", ".", "bn5b", "=", "nn", ".", "BatchNorm3d", "(", "256", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MSCADC.body.C3D_dilated_body.forward": [[54, 73], ["body.C3D_dilated_body.relu", "body.C3D_dilated_body.pool1", "body.C3D_dilated_body.relu", "body.C3D_dilated_body.pool2", "body.C3D_dilated_body.relu", "body.C3D_dilated_body.relu", "body.C3D_dilated_body.pool3", "body.C3D_dilated_body.relu", "body.C3D_dilated_body.relu", "body.C3D_dilated_body.relu", "body.C3D_dilated_body.relu", "body.C3D_dilated_body.dropout", "body.C3D_dilated_body.bn1", "body.C3D_dilated_body.bn2", "body.C3D_dilated_body.bn3a", "body.C3D_dilated_body.bn3b", "body.C3D_dilated_body.bn4a", "body.C3D_dilated_body.bn4b", "body.C3D_dilated_body.bn5a", "body.C3D_dilated_body.bn5b", "body.C3D_dilated_body.conv1", "body.C3D_dilated_body.conv2", "body.C3D_dilated_body.conv3a", "body.C3D_dilated_body.conv3b", "body.C3D_dilated_body.conv4a", "body.C3D_dilated_body.conv4b", "body.C3D_dilated_body.conv5a", "body.C3D_dilated_body.conv5b"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# model backbone", "\n", "        ", "h", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "h", "=", "self", ".", "pool1", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "pool2", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "bn3a", "(", "self", ".", "conv3a", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "bn3b", "(", "self", ".", "conv3b", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "pool3", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "bn4a", "(", "self", ".", "conv4a", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "bn4b", "(", "self", ".", "conv4b", "(", "h", ")", ")", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "bn5a", "(", "self", ".", "conv5a", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "bn5b", "(", "self", ".", "conv5b", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "dropout", "(", "h", ")", "\n", "return", "h", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MSCADC.head_captions.S2VTModel.__init__": [[27, 83], ["torch.nn.Module.__init__", "head_captions.S2VTModel.rnn_cell", "head_captions.S2VTModel.rnn_cell", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.ReplicationPad3d", "torch.nn.ReplicationPad3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.ReLU", "torch.nn.ReLU", "rnn_cell.lower", "int", "int", "int", "int", "rnn_cell.lower"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "vocab_size", ",", "max_len", ",", "dim_hidden", ",", "dim_word", ",", "dim_vid", "=", "1200", ",", "sos_id", "=", "1", ",", "eos_id", "=", "0", ",", "\n", "n_layers", "=", "1", ",", "rnn_cell", "=", "'gru'", ",", "rnn_dropout_p", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "S2VTModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "rnn_cell", ".", "lower", "(", ")", "==", "'lstm'", ":", "\n", "            ", "self", ".", "rnn_cell", "=", "nn", ".", "LSTM", "\n", "", "elif", "rnn_cell", ".", "lower", "(", ")", "==", "'gru'", ":", "\n", "            ", "self", ".", "rnn_cell", "=", "nn", ".", "GRU", "\n", "", "self", ".", "rnn1", "=", "self", ".", "rnn_cell", "(", "dim_vid", ",", "dim_hidden", ",", "n_layers", ",", "\n", "batch_first", "=", "True", ",", "dropout", "=", "rnn_dropout_p", ")", "\n", "self", ".", "rnn2", "=", "self", ".", "rnn_cell", "(", "dim_hidden", "+", "dim_word", ",", "dim_hidden", ",", "n_layers", ",", "\n", "batch_first", "=", "True", ",", "dropout", "=", "rnn_dropout_p", ")", "\n", "self", ".", "dim_vid", "=", "dim_vid", "\n", "self", ".", "dim_output", "=", "vocab_size", "\n", "self", ".", "dim_hidden", "=", "dim_hidden", "\n", "self", ".", "dim_word", "=", "dim_word", "\n", "self", ".", "max_length", "=", "max_len", "\n", "self", ".", "sos_id", "=", "sos_id", "\n", "self", ".", "eos_id", "=", "eos_id", "\n", "self", ".", "embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "dim_output", ",", "self", ".", "dim_word", ")", "\n", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "self", ".", "dim_hidden", ",", "self", ".", "dim_output", ")", "\n", "\n", "#########", "\n", "btlnk", "=", "12", "\n", "# model head", "\n", "self", ".", "head_conv1", "=", "nn", ".", "Conv3d", "(", "256", ",", "btlnk", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "# context net", "\n", "self", ".", "cntxt_pad", "=", "nn", ".", "ReplicationPad3d", "(", "padding", "=", "(", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ")", ")", "\n", "self", ".", "cntxt_conv1", "=", "nn", ".", "Conv3d", "(", "btlnk", ",", "btlnk", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "cntxt_bn1", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "2", ")", "\n", "\n", "self", ".", "cntxt_conv2", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "2", ",", "btlnk", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "cntxt_bn2", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "2", ")", "\n", "\n", "self", ".", "cntxt_conv3", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "2", ",", "btlnk", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "dilation", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "self", ".", "cntxt_bn3", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "4", ")", "\n", "\n", "self", ".", "cntxt_conv4", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "4", ",", "btlnk", "*", "8", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "dilation", "=", "(", "4", ",", "4", ",", "4", ")", ")", "\n", "self", ".", "cntxt_bn4", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "8", ")", "\n", "\n", "self", ".", "cntxt_conv5", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "8", ",", "btlnk", "*", "8", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "cntxt_bn5", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "8", ")", "\n", "\n", "self", ".", "cntxt_conv6", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "8", ",", "btlnk", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "\n", "# resuming mode head", "\n", "self", ".", "head_bn1", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", ")", "\n", "self", ".", "head_pool1", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "head_conv2", "=", "nn", ".", "Conv3d", "(", "btlnk", ",", "int", "(", "btlnk", ")", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_bn2", "=", "nn", ".", "BatchNorm3d", "(", "int", "(", "btlnk", ")", ")", "\n", "\n", "self", ".", "head_conv3", "=", "nn", ".", "Conv3d", "(", "int", "(", "btlnk", ")", ",", "int", "(", "btlnk", ")", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_pool3", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MSCADC.head_captions.S2VTModel.forward": [[85, 147], ["head_captions.S2VTModel.head_conv1", "head_captions.S2VTModel.cntxt_pad", "head_captions.S2VTModel.relu", "head_captions.S2VTModel.relu", "head_captions.S2VTModel.relu", "head_captions.S2VTModel.relu", "head_captions.S2VTModel.relu", "head_captions.S2VTModel.cntxt_conv6", "head_captions.S2VTModel.relu", "head_captions.S2VTModel.head_pool1", "head_captions.S2VTModel.relu", "head_captions.S2VTModel.head_pool3", "torch.unsqueeze.view", "torch.unsqueeze.view", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.autograd.Variable().zero_", "torch.autograd.Variable().zero_", "torch.autograd.Variable().zero_", "torch.autograd.Variable().zero_", "head_captions.S2VTModel.rnn1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "head_captions.S2VTModel.rnn2", "head_captions.S2VTModel.cntxt_bn1", "head_captions.S2VTModel.cntxt_bn2", "head_captions.S2VTModel.cntxt_bn3", "head_captions.S2VTModel.cntxt_bn4", "head_captions.S2VTModel.cntxt_bn5", "head_captions.S2VTModel.head_bn1", "head_captions.S2VTModel.head_bn2", "head_captions.S2VTModel.head_conv3", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "head_captions.S2VTModel.embedding", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "head_captions.S2VTModel.cntxt_conv1", "head_captions.S2VTModel.cntxt_conv2", "head_captions.S2VTModel.cntxt_conv3", "head_captions.S2VTModel.cntxt_conv4", "head_captions.S2VTModel.cntxt_conv5", "head_captions.S2VTModel.head_conv2", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "target_variable.type().cuda.type().cuda.type().cuda", "head_captions.S2VTModel.embedding", "head_captions.S2VTModel.rnn1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "head_captions.S2VTModel.rnn2", "head_captions.S2VTModel.out", "torch.log_softmax", "torch.log_softmax", "torch.cat.append", "torch.cat.append", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "head_captions.S2VTModel.rnn1.flatten_parameters", "head_captions.S2VTModel.rnn2.flatten_parameters", "head_captions.S2VTModel.rnn1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "head_captions.S2VTModel.rnn2", "head_captions.S2VTModel.out", "torch.log_softmax", "torch.log_softmax", "torch.cat.append", "torch.cat.append", "torch.max", "torch.max", "torch.max", "torch.max", "head_captions.S2VTModel.embedding", "torch.cat.append", "torch.cat.append", "torch.unsqueeze.data.new", "torch.unsqueeze.data.new", "torch.unsqueeze.data.new", "torch.unsqueeze.data.new", "output2.squeeze", "torch.log_softmax.unsqueeze", "output2.squeeze", "torch.log_softmax.unsqueeze", "preds.unsqueeze", "target_variable.type().cuda.type().cuda.type", "head_captions.S2VTModel.unsqueeze", "torch.autograd.Variable", "torch.autograd.Variable", "head_captions.S2VTModel.unsqueeze", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "vid_feats_in", ",", "target_variable", "=", "None", ",", "mode", "=", "'train'", ",", "opt", "=", "{", "}", ")", ":", "\n", "# model head", "\n", "        ", "vid_feats", "=", "self", ".", "head_conv1", "(", "vid_feats_in", ")", "\n", "vid_feats", "=", "self", ".", "cntxt_pad", "(", "vid_feats", ")", "\n", "vid_feats", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn1", "(", "self", ".", "cntxt_conv1", "(", "vid_feats", ")", ")", ")", "\n", "vid_feats", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn2", "(", "self", ".", "cntxt_conv2", "(", "vid_feats", ")", ")", ")", "\n", "vid_feats", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn3", "(", "self", ".", "cntxt_conv3", "(", "vid_feats", ")", ")", ")", "\n", "vid_feats", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn4", "(", "self", ".", "cntxt_conv4", "(", "vid_feats", ")", ")", ")", "\n", "vid_feats", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn5", "(", "self", ".", "cntxt_conv5", "(", "vid_feats", ")", ")", ")", "\n", "vid_feats", "=", "self", ".", "cntxt_conv6", "(", "vid_feats", ")", "\n", "\n", "vid_feats", "=", "self", ".", "relu", "(", "self", ".", "head_bn1", "(", "vid_feats", ")", ")", "\n", "vid_feats", "=", "self", ".", "head_pool1", "(", "vid_feats", ")", "\n", "\n", "vid_feats", "=", "self", ".", "relu", "(", "self", ".", "head_bn2", "(", "self", ".", "head_conv2", "(", "vid_feats", ")", ")", ")", "\n", "\n", "vid_feats", "=", "self", ".", "head_pool3", "(", "self", ".", "head_conv3", "(", "vid_feats", ")", ")", "\n", "\n", "vid_feats", "=", "vid_feats", ".", "view", "(", "-", "1", ",", "1200", ")", "\n", "vid_feats", "=", "torch", ".", "unsqueeze", "(", "vid_feats", ",", "1", ")", "\n", "\n", "batch_size", ",", "n_frames", ",", "_", "=", "vid_feats", ".", "shape", "\n", "\n", "padding_words", "=", "Variable", "(", "vid_feats", ".", "data", ".", "new", "(", "batch_size", ",", "n_frames", ",", "self", ".", "dim_word", ")", ")", ".", "zero_", "(", ")", "\n", "padding_frames", "=", "Variable", "(", "vid_feats", ".", "data", ".", "new", "(", "batch_size", ",", "1", ",", "self", ".", "dim_vid", ")", ")", ".", "zero_", "(", ")", "\n", "state1", "=", "None", "\n", "state2", "=", "None", "\n", "output1", ",", "state1", "=", "self", ".", "rnn1", "(", "vid_feats", ",", "state1", ")", "\n", "input2", "=", "torch", ".", "cat", "(", "(", "output1", ",", "padding_words", ")", ",", "dim", "=", "2", ")", "\n", "output2", ",", "state2", "=", "self", ".", "rnn2", "(", "input2", ",", "state2", ")", "\n", "\n", "seq_probs", "=", "[", "]", "\n", "seq_preds", "=", "[", "]", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "max_length", "-", "1", ")", ":", "\n", "                ", "target_variable", "=", "target_variable", ".", "type", "(", "torch", ".", "LongTensor", ")", ".", "cuda", "(", ")", "\n", "current_words", "=", "self", ".", "embedding", "(", "target_variable", "[", ":", ",", "i", "]", ")", "\n", "output1", ",", "state1", "=", "self", ".", "rnn1", "(", "padding_frames", ",", "state1", ")", "\n", "input2", "=", "torch", ".", "cat", "(", "(", "output1", ",", "current_words", ".", "unsqueeze", "(", "1", ")", ")", ",", "dim", "=", "2", ")", "\n", "output2", ",", "state2", "=", "self", ".", "rnn2", "(", "input2", ",", "state2", ")", "\n", "logits", "=", "self", ".", "out", "(", "output2", ".", "squeeze", "(", "1", ")", ")", "\n", "logits", "=", "F", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "seq_probs", ".", "append", "(", "logits", ".", "unsqueeze", "(", "1", ")", ")", "\n", "", "seq_probs", "=", "torch", ".", "cat", "(", "seq_probs", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "current_words", "=", "self", ".", "embedding", "(", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "self", ".", "sos_id", "]", "*", "batch_size", ")", ")", ".", "cuda", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "max_length", "-", "1", ")", ":", "\n", "                ", "self", ".", "rnn1", ".", "flatten_parameters", "(", ")", "\n", "self", ".", "rnn2", ".", "flatten_parameters", "(", ")", "\n", "output1", ",", "state1", "=", "self", ".", "rnn1", "(", "padding_frames", ",", "state1", ")", "\n", "input2", "=", "torch", ".", "cat", "(", "\n", "(", "output1", ",", "current_words", ".", "unsqueeze", "(", "1", ")", ")", ",", "dim", "=", "2", ")", "\n", "output2", ",", "state2", "=", "self", ".", "rnn2", "(", "input2", ",", "state2", ")", "\n", "logits", "=", "self", ".", "out", "(", "output2", ".", "squeeze", "(", "1", ")", ")", "\n", "logits", "=", "F", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "seq_probs", ".", "append", "(", "logits", ".", "unsqueeze", "(", "1", ")", ")", "\n", "_", ",", "preds", "=", "torch", ".", "max", "(", "logits", ",", "1", ")", "\n", "current_words", "=", "self", ".", "embedding", "(", "preds", ")", "\n", "seq_preds", ".", "append", "(", "preds", ".", "unsqueeze", "(", "1", ")", ")", "\n", "", "seq_probs", "=", "torch", ".", "cat", "(", "seq_probs", ",", "1", ")", "\n", "seq_preds", "=", "torch", ".", "cat", "(", "seq_preds", ",", "1", ")", "\n", "", "return", "seq_probs", ",", "seq_preds", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MSCADC.head_dive_classifier.C3D_dilated_head_classifier.__init__": [[23, 66], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.ReplicationPad3d", "torch.ReplicationPad3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.ReLU", "torch.ReLU", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "C3D_dilated_head_classifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "btlnk", "=", "12", "\n", "# model head", "\n", "self", ".", "head_conv1", "=", "nn", ".", "Conv3d", "(", "256", ",", "btlnk", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "# context net", "\n", "self", ".", "cntxt_pad", "=", "nn", ".", "ReplicationPad3d", "(", "padding", "=", "(", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ")", ")", "\n", "self", ".", "cntxt_conv1", "=", "nn", ".", "Conv3d", "(", "btlnk", ",", "btlnk", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "cntxt_bn1", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "2", ")", "\n", "\n", "self", ".", "cntxt_conv2", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "2", ",", "btlnk", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "cntxt_bn2", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "2", ")", "\n", "\n", "self", ".", "cntxt_conv3", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "2", ",", "btlnk", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "dilation", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "self", ".", "cntxt_bn3", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "4", ")", "\n", "\n", "self", ".", "cntxt_conv4", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "4", ",", "btlnk", "*", "8", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "dilation", "=", "(", "4", ",", "4", ",", "4", ")", ")", "\n", "self", ".", "cntxt_bn4", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "8", ")", "\n", "\n", "self", ".", "cntxt_conv5", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "8", ",", "btlnk", "*", "8", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "cntxt_bn5", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "8", ")", "\n", "\n", "self", ".", "cntxt_conv6", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "8", ",", "btlnk", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "\n", "# resuming mode head", "\n", "self", ".", "head_bn1", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", ")", "\n", "self", ".", "head_pool1", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "head_conv2", "=", "nn", ".", "Conv3d", "(", "btlnk", ",", "int", "(", "btlnk", ")", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_bn2", "=", "nn", ".", "BatchNorm3d", "(", "int", "(", "btlnk", ")", ")", "\n", "\n", "self", ".", "head_conv3_position", "=", "nn", ".", "Conv3d", "(", "int", "(", "btlnk", ")", ",", "3", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_pool3_position", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "2", ",", "11", ",", "11", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_conv3_armstand", "=", "nn", ".", "Conv3d", "(", "int", "(", "btlnk", ")", ",", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_pool3_armstand", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "2", ",", "11", ",", "11", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_conv3_rot_type", "=", "nn", ".", "Conv3d", "(", "int", "(", "btlnk", ")", ",", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_pool3_rot_type", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "2", ",", "11", ",", "11", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_conv3_ss_no", "=", "nn", ".", "Conv3d", "(", "int", "(", "btlnk", ")", ",", "10", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_pool3_ss_no", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "2", ",", "11", ",", "11", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_conv3_tw_no", "=", "nn", ".", "Conv3d", "(", "int", "(", "btlnk", ")", ",", "8", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_pool3_tw_no", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "2", ",", "11", ",", "11", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MSCADC.head_dive_classifier.C3D_dilated_head_classifier.forward": [[68, 90], ["head_dive_classifier.C3D_dilated_head_classifier.head_conv1", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_pad", "head_dive_classifier.C3D_dilated_head_classifier.relu", "head_dive_classifier.C3D_dilated_head_classifier.relu", "head_dive_classifier.C3D_dilated_head_classifier.relu", "head_dive_classifier.C3D_dilated_head_classifier.relu", "head_dive_classifier.C3D_dilated_head_classifier.relu", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_conv6", "head_dive_classifier.C3D_dilated_head_classifier.relu", "head_dive_classifier.C3D_dilated_head_classifier.head_pool1", "head_dive_classifier.C3D_dilated_head_classifier.relu", "head_dive_classifier.C3D_dilated_head_classifier.head_pool3_position().squeeze_", "head_dive_classifier.C3D_dilated_head_classifier.head_pool3_armstand().squeeze_", "head_dive_classifier.C3D_dilated_head_classifier.head_pool3_rot_type().squeeze_", "head_dive_classifier.C3D_dilated_head_classifier.head_pool3_ss_no().squeeze_", "head_dive_classifier.C3D_dilated_head_classifier.head_pool3_tw_no().squeeze_", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_bn1", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_bn2", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_bn3", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_bn4", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_bn5", "head_dive_classifier.C3D_dilated_head_classifier.head_bn1", "head_dive_classifier.C3D_dilated_head_classifier.head_bn2", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_conv1", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_conv2", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_conv3", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_conv4", "head_dive_classifier.C3D_dilated_head_classifier.cntxt_conv5", "head_dive_classifier.C3D_dilated_head_classifier.head_conv2", "head_dive_classifier.C3D_dilated_head_classifier.head_pool3_position", "head_dive_classifier.C3D_dilated_head_classifier.head_pool3_armstand", "head_dive_classifier.C3D_dilated_head_classifier.head_pool3_rot_type", "head_dive_classifier.C3D_dilated_head_classifier.head_pool3_ss_no", "head_dive_classifier.C3D_dilated_head_classifier.head_pool3_tw_no", "head_dive_classifier.C3D_dilated_head_classifier.head_conv3_position", "head_dive_classifier.C3D_dilated_head_classifier.head_conv3_armstand", "head_dive_classifier.C3D_dilated_head_classifier.head_conv3_rot_type", "head_dive_classifier.C3D_dilated_head_classifier.head_conv3_ss_no", "head_dive_classifier.C3D_dilated_head_classifier.head_conv3_tw_no"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# model head", "\n", "        ", "h", "=", "self", ".", "head_conv1", "(", "x", ")", "\n", "h", "=", "self", ".", "cntxt_pad", "(", "h", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn1", "(", "self", ".", "cntxt_conv1", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn2", "(", "self", ".", "cntxt_conv2", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn3", "(", "self", ".", "cntxt_conv3", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn4", "(", "self", ".", "cntxt_conv4", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn5", "(", "self", ".", "cntxt_conv5", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "cntxt_conv6", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "head_bn1", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "head_pool1", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "head_bn2", "(", "self", ".", "head_conv2", "(", "h", ")", ")", ")", "\n", "\n", "position", "=", "self", ".", "head_pool3_position", "(", "self", ".", "head_conv3_position", "(", "h", ")", ")", ".", "squeeze_", "(", ")", "\n", "armstand", "=", "self", ".", "head_pool3_armstand", "(", "self", ".", "head_conv3_armstand", "(", "h", ")", ")", ".", "squeeze_", "(", ")", "\n", "rot_type", "=", "self", ".", "head_pool3_rot_type", "(", "self", ".", "head_conv3_rot_type", "(", "h", ")", ")", ".", "squeeze_", "(", ")", "\n", "ss_no", "=", "self", ".", "head_pool3_ss_no", "(", "self", ".", "head_conv3_ss_no", "(", "h", ")", ")", ".", "squeeze_", "(", ")", "\n", "tw_no", "=", "self", ".", "head_pool3_tw_no", "(", "self", ".", "head_conv3_tw_no", "(", "h", ")", ")", ".", "squeeze_", "(", ")", "\n", "return", "position", ",", "armstand", ",", "rot_type", ",", "ss_no", ",", "tw_no", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MSCADC.head_fs_2.C3D_dilated_head_fs.__init__": [[23, 58], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.ReplicationPad3d", "torch.ReplicationPad3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.ReLU", "torch.ReLU", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "C3D_dilated_head_fs", ",", "self", ")", ".", "__init__", "(", ")", "\n", "btlnk", "=", "12", "\n", "# model head", "\n", "self", ".", "head_conv1", "=", "nn", ".", "Conv3d", "(", "256", ",", "btlnk", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "# context net", "\n", "self", ".", "cntxt_pad", "=", "nn", ".", "ReplicationPad3d", "(", "padding", "=", "(", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ")", ")", "\n", "self", ".", "cntxt_conv1", "=", "nn", ".", "Conv3d", "(", "btlnk", ",", "btlnk", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "cntxt_bn1", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "2", ")", "\n", "\n", "self", ".", "cntxt_conv2", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "2", ",", "btlnk", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "cntxt_bn2", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "2", ")", "\n", "\n", "self", ".", "cntxt_conv3", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "2", ",", "btlnk", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "dilation", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "self", ".", "cntxt_bn3", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "4", ")", "\n", "\n", "self", ".", "cntxt_conv4", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "4", ",", "btlnk", "*", "8", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ",", "dilation", "=", "(", "4", ",", "4", ",", "4", ")", ")", "\n", "self", ".", "cntxt_bn4", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "8", ")", "\n", "\n", "self", ".", "cntxt_conv5", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "8", ",", "btlnk", "*", "8", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "cntxt_bn5", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", "*", "8", ")", "\n", "\n", "self", ".", "cntxt_conv6", "=", "nn", ".", "Conv3d", "(", "btlnk", "*", "8", ",", "btlnk", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "\n", "# resuming mode head", "\n", "self", ".", "head_bn1", "=", "nn", ".", "BatchNorm3d", "(", "btlnk", ")", "\n", "self", ".", "head_pool1", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "head_conv2", "=", "nn", ".", "Conv3d", "(", "btlnk", ",", "int", "(", "btlnk", ")", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_bn2", "=", "nn", ".", "BatchNorm3d", "(", "int", "(", "btlnk", ")", ")", "\n", "\n", "self", ".", "head_conv3", "=", "nn", ".", "Conv3d", "(", "int", "(", "btlnk", ")", ",", "1", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "head_pool3", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "2", ",", "11", ",", "11", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.MSCADC.head_fs_2.C3D_dilated_head_fs.forward": [[60, 87], ["head_fs_2.C3D_dilated_head_fs.head_conv1", "head_fs_2.C3D_dilated_head_fs.cntxt_pad", "head_fs_2.C3D_dilated_head_fs.relu", "head_fs_2.C3D_dilated_head_fs.relu", "head_fs_2.C3D_dilated_head_fs.relu", "head_fs_2.C3D_dilated_head_fs.relu", "head_fs_2.C3D_dilated_head_fs.relu", "head_fs_2.C3D_dilated_head_fs.cntxt_conv6", "head_fs_2.C3D_dilated_head_fs.relu", "head_fs_2.C3D_dilated_head_fs.head_pool1", "head_fs_2.C3D_dilated_head_fs.relu", "head_fs_2.C3D_dilated_head_fs.head_pool3", "torch.squeeze.view", "torch.squeeze.view", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "head_fs_2.C3D_dilated_head_fs.cntxt_bn1", "head_fs_2.C3D_dilated_head_fs.cntxt_bn2", "head_fs_2.C3D_dilated_head_fs.cntxt_bn3", "head_fs_2.C3D_dilated_head_fs.cntxt_bn4", "head_fs_2.C3D_dilated_head_fs.cntxt_bn5", "head_fs_2.C3D_dilated_head_fs.head_bn1", "head_fs_2.C3D_dilated_head_fs.head_bn2", "head_fs_2.C3D_dilated_head_fs.head_conv3", "head_fs_2.C3D_dilated_head_fs.cntxt_conv1", "head_fs_2.C3D_dilated_head_fs.cntxt_conv2", "head_fs_2.C3D_dilated_head_fs.cntxt_conv3", "head_fs_2.C3D_dilated_head_fs.cntxt_conv4", "head_fs_2.C3D_dilated_head_fs.cntxt_conv5", "head_fs_2.C3D_dilated_head_fs.head_conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# model head", "\n", "        ", "h", "=", "self", ".", "head_conv1", "(", "x", ")", "\n", "h", "=", "self", ".", "cntxt_pad", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn1", "(", "self", ".", "cntxt_conv1", "(", "h", ")", ")", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn2", "(", "self", ".", "cntxt_conv2", "(", "h", ")", ")", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn3", "(", "self", ".", "cntxt_conv3", "(", "h", ")", ")", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn4", "(", "self", ".", "cntxt_conv4", "(", "h", ")", ")", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "cntxt_bn5", "(", "self", ".", "cntxt_conv5", "(", "h", ")", ")", ")", "\n", "\n", "h", "=", "self", ".", "cntxt_conv6", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "head_bn1", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "head_pool1", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "head_bn2", "(", "self", ".", "head_conv2", "(", "h", ")", ")", ")", "\n", "\n", "h", "=", "self", ".", "head_pool3", "(", "self", ".", "head_conv3", "(", "h", ")", ")", "\n", "\n", "h", "=", "h", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "h", "=", "torch", ".", "squeeze", "(", "h", ")", "\n", "return", "h", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.C3DAVG.score_regressor.score_regressor.__init__": [[21, 24], ["torch.Module.__init__", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "score_regressor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc_final_score", "=", "nn", ".", "Linear", "(", "4096", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.C3DAVG.score_regressor.score_regressor.forward": [[25, 28], ["score_regressor.score_regressor.fc_final_score"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "final_score", "=", "self", ".", "fc_final_score", "(", "x", ")", "\n", "return", "final_score", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.C3DAVG.my_fc6.my_fc6.__init__": [[21, 25], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "my_fc6", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "8192", ",", "4096", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.C3DAVG.my_fc6.my_fc6.forward": [[26, 29], ["my_fc6.my_fc6.relu", "my_fc6.my_fc6.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu", "(", "self", ".", "fc", "(", "x", ")", ")", "\n", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.C3DAVG.dive_classifier.dive_classifier.__init__": [[21, 28], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "dive_classifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc_position", "=", "nn", ".", "Linear", "(", "4096", ",", "3", ")", "\n", "self", ".", "fc_armstand", "=", "nn", ".", "Linear", "(", "4096", ",", "2", ")", "\n", "self", ".", "fc_rot_type", "=", "nn", ".", "Linear", "(", "4096", ",", "4", ")", "\n", "self", ".", "fc_ss_no", "=", "nn", ".", "Linear", "(", "4096", ",", "10", ")", "\n", "self", ".", "fc_tw_no", "=", "nn", ".", "Linear", "(", "4096", ",", "8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.C3DAVG.dive_classifier.dive_classifier.forward": [[30, 37], ["dive_classifier.dive_classifier.fc_position", "dive_classifier.dive_classifier.fc_armstand", "dive_classifier.dive_classifier.fc_rot_type", "dive_classifier.dive_classifier.fc_ss_no", "dive_classifier.dive_classifier.fc_tw_no"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "position", "=", "self", ".", "fc_position", "(", "x", ")", "\n", "armstand", "=", "self", ".", "fc_armstand", "(", "x", ")", "\n", "rot_type", "=", "self", ".", "fc_rot_type", "(", "x", ")", "\n", "ss_no", "=", "self", ".", "fc_ss_no", "(", "x", ")", "\n", "tw_no", "=", "self", ".", "fc_tw_no", "(", "x", ")", "\n", "return", "position", ",", "armstand", ",", "rot_type", ",", "ss_no", ",", "tw_no", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.C3DAVG.C3D_altered.C3D_altered.__init__": [[25, 47], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "C3D_altered", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "3", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "1", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv3d", "(", "64", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "conv3a", "=", "nn", ".", "Conv3d", "(", "128", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv3b", "=", "nn", ".", "Conv3d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "conv4a", "=", "nn", ".", "Conv3d", "(", "256", ",", "512", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv4b", "=", "nn", ".", "Conv3d", "(", "512", ",", "512", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "pool4", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ")", "\n", "\n", "self", ".", "conv5a", "=", "nn", ".", "Conv3d", "(", "512", ",", "512", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv5b", "=", "nn", ".", "Conv3d", "(", "512", ",", "512", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "pool5", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.C3DAVG.C3D_altered.C3D_altered.forward": [[49, 70], ["C3D_altered.C3D_altered.relu", "C3D_altered.C3D_altered.pool1", "C3D_altered.C3D_altered.relu", "C3D_altered.C3D_altered.pool2", "C3D_altered.C3D_altered.relu", "C3D_altered.C3D_altered.relu", "C3D_altered.C3D_altered.pool3", "C3D_altered.C3D_altered.relu", "C3D_altered.C3D_altered.relu", "C3D_altered.C3D_altered.pool4", "C3D_altered.C3D_altered.relu", "C3D_altered.C3D_altered.relu", "C3D_altered.C3D_altered.pool5", "h.view.view.view", "C3D_altered.C3D_altered.conv1", "C3D_altered.C3D_altered.conv2", "C3D_altered.C3D_altered.conv3a", "C3D_altered.C3D_altered.conv3b", "C3D_altered.C3D_altered.conv4a", "C3D_altered.C3D_altered.conv4b", "C3D_altered.C3D_altered.conv5a", "C3D_altered.C3D_altered.conv5b"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "h", "=", "self", ".", "pool1", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "pool2", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "conv3a", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "conv3b", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "pool3", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "conv4a", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "conv4b", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "pool4", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "conv5a", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu", "(", "self", ".", "conv5b", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "pool5", "(", "h", ")", "\n", "\n", "h", "=", "h", ".", "view", "(", "-", "1", ",", "8192", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.C3DAVG.S2VTModel.S2VTModel.__init__": [[26, 46], ["torch.nn.Module.__init__", "S2VTModel.S2VTModel.rnn_cell", "S2VTModel.S2VTModel.rnn_cell", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "rnn_cell.lower", "rnn_cell.lower"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "vocab_size", ",", "max_len", ",", "dim_hidden", ",", "dim_word", ",", "dim_vid", "=", "2904", ",", "sos_id", "=", "1", ",", "eos_id", "=", "0", ",", "\n", "n_layers", "=", "1", ",", "rnn_cell", "=", "'gru'", ",", "rnn_dropout_p", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "S2VTModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "rnn_cell", ".", "lower", "(", ")", "==", "'lstm'", ":", "\n", "            ", "self", ".", "rnn_cell", "=", "nn", ".", "LSTM", "\n", "", "elif", "rnn_cell", ".", "lower", "(", ")", "==", "'gru'", ":", "\n", "            ", "self", ".", "rnn_cell", "=", "nn", ".", "GRU", "\n", "", "self", ".", "rnn1", "=", "self", ".", "rnn_cell", "(", "dim_vid", ",", "dim_hidden", ",", "n_layers", ",", "\n", "batch_first", "=", "True", ",", "dropout", "=", "rnn_dropout_p", ")", "\n", "self", ".", "rnn2", "=", "self", ".", "rnn_cell", "(", "dim_hidden", "+", "dim_word", ",", "dim_hidden", ",", "n_layers", ",", "\n", "batch_first", "=", "True", ",", "dropout", "=", "rnn_dropout_p", ")", "\n", "self", ".", "dim_vid", "=", "dim_vid", "\n", "self", ".", "dim_output", "=", "vocab_size", "\n", "self", ".", "dim_hidden", "=", "dim_hidden", "\n", "self", ".", "dim_word", "=", "dim_word", "\n", "self", ".", "max_length", "=", "max_len", "\n", "self", ".", "sos_id", "=", "sos_id", "\n", "self", ".", "eos_id", "=", "eos_id", "\n", "self", ".", "embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "dim_output", ",", "self", ".", "dim_word", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "self", ".", "dim_hidden", ",", "self", ".", "dim_output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.C3DAVG.S2VTModel.S2VTModel.forward": [[48, 90], ["torch.autograd.Variable().zero_", "torch.autograd.Variable().zero_", "torch.autograd.Variable().zero_", "torch.autograd.Variable().zero_", "S2VTModel.S2VTModel.rnn1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "S2VTModel.S2VTModel.rnn2", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "S2VTModel.S2VTModel.embedding", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "target_variable.type().cuda.type().cuda.type().cuda", "S2VTModel.S2VTModel.embedding", "S2VTModel.S2VTModel.rnn1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "S2VTModel.S2VTModel.rnn2", "S2VTModel.S2VTModel.out", "torch.log_softmax", "torch.log_softmax", "torch.cat.append", "torch.cat.append", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "S2VTModel.S2VTModel.rnn1.flatten_parameters", "S2VTModel.S2VTModel.rnn2.flatten_parameters", "S2VTModel.S2VTModel.rnn1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "S2VTModel.S2VTModel.rnn2", "S2VTModel.S2VTModel.out", "torch.log_softmax", "torch.log_softmax", "torch.cat.append", "torch.cat.append", "torch.max", "torch.max", "torch.max", "torch.max", "S2VTModel.S2VTModel.embedding", "torch.cat.append", "torch.cat.append", "vid_feats.data.new", "vid_feats.data.new", "output2.squeeze", "torch.log_softmax.unsqueeze", "output2.squeeze", "torch.log_softmax.unsqueeze", "preds.unsqueeze", "target_variable.type().cuda.type().cuda.type", "S2VTModel.S2VTModel.unsqueeze", "torch.autograd.Variable", "torch.autograd.Variable", "S2VTModel.S2VTModel.unsqueeze", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "vid_feats", ",", "target_variable", "=", "None", ",", "mode", "=", "'train'", ",", "opt", "=", "{", "}", ")", ":", "\n", "        ", "batch_size", ",", "n_frames", ",", "_", "=", "vid_feats", ".", "shape", "\n", "\n", "padding_words", "=", "Variable", "(", "vid_feats", ".", "data", ".", "new", "(", "batch_size", ",", "n_frames", ",", "self", ".", "dim_word", ")", ")", ".", "zero_", "(", ")", "\n", "padding_frames", "=", "Variable", "(", "vid_feats", ".", "data", ".", "new", "(", "batch_size", ",", "1", ",", "self", ".", "dim_vid", ")", ")", ".", "zero_", "(", ")", "\n", "state1", "=", "None", "\n", "state2", "=", "None", "\n", "output1", ",", "state1", "=", "self", ".", "rnn1", "(", "vid_feats", ",", "state1", ")", "\n", "input2", "=", "torch", ".", "cat", "(", "(", "output1", ",", "padding_words", ")", ",", "dim", "=", "2", ")", "\n", "output2", ",", "state2", "=", "self", ".", "rnn2", "(", "input2", ",", "state2", ")", "\n", "\n", "seq_probs", "=", "[", "]", "\n", "seq_preds", "=", "[", "]", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "max_length", "-", "1", ")", ":", "\n", "                ", "target_variable", "=", "target_variable", ".", "type", "(", "torch", ".", "LongTensor", ")", ".", "cuda", "(", ")", "\n", "current_words", "=", "self", ".", "embedding", "(", "target_variable", "[", ":", ",", "i", "]", ")", "\n", "output1", ",", "state1", "=", "self", ".", "rnn1", "(", "padding_frames", ",", "state1", ")", "\n", "input2", "=", "torch", ".", "cat", "(", "(", "output1", ",", "current_words", ".", "unsqueeze", "(", "1", ")", ")", ",", "dim", "=", "2", ")", "\n", "output2", ",", "state2", "=", "self", ".", "rnn2", "(", "input2", ",", "state2", ")", "\n", "logits", "=", "self", ".", "out", "(", "output2", ".", "squeeze", "(", "1", ")", ")", "\n", "logits", "=", "F", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "seq_probs", ".", "append", "(", "logits", ".", "unsqueeze", "(", "1", ")", ")", "\n", "", "seq_probs", "=", "torch", ".", "cat", "(", "seq_probs", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "current_words", "=", "self", ".", "embedding", "(", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "self", ".", "sos_id", "]", "*", "batch_size", ")", ")", ".", "cuda", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "max_length", "-", "1", ")", ":", "\n", "                ", "self", ".", "rnn1", ".", "flatten_parameters", "(", ")", "\n", "self", ".", "rnn2", ".", "flatten_parameters", "(", ")", "\n", "output1", ",", "state1", "=", "self", ".", "rnn1", "(", "padding_frames", ",", "state1", ")", "\n", "input2", "=", "torch", ".", "cat", "(", "\n", "(", "output1", ",", "current_words", ".", "unsqueeze", "(", "1", ")", ")", ",", "dim", "=", "2", ")", "\n", "output2", ",", "state2", "=", "self", ".", "rnn2", "(", "input2", ",", "state2", ")", "\n", "logits", "=", "self", ".", "out", "(", "output2", ".", "squeeze", "(", "1", ")", ")", "\n", "logits", "=", "F", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "seq_probs", ".", "append", "(", "logits", ".", "unsqueeze", "(", "1", ")", ")", "\n", "_", ",", "preds", "=", "torch", ".", "max", "(", "logits", ",", "1", ")", "\n", "current_words", "=", "self", ".", "embedding", "(", "preds", ")", "\n", "seq_preds", ".", "append", "(", "preds", ".", "unsqueeze", "(", "1", ")", ")", "\n", "", "seq_probs", "=", "torch", ".", "cat", "(", "seq_probs", ",", "1", ")", "\n", "seq_preds", "=", "torch", ".", "cat", "(", "seq_preds", ",", "1", ")", "\n", "", "return", "seq_probs", ",", "seq_preds", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_C3DAVG.VideoDataset.get_vocab_size": [[55, 57], ["len", "dataloader_C3DAVG.VideoDataset.get_vocab"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.get_vocab"], ["    ", "def", "get_vocab_size", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "get_vocab", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_C3DAVG.VideoDataset.get_vocab": [[59, 61], ["None"], "methods", ["None"], ["", "def", "get_vocab", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "ix_to_word", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_C3DAVG.VideoDataset.__init__": [[63, 86], ["torch.utils.data.Dataset.__init__", "pickle.load", "open", "pickle.load", "pickle.load", "json.load", "os.path.join", "open", "pickle.load", "print", "open", "open", "os.path.join", "open", "os.path.join", "os.path.join", "os.path.join", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["", "def", "__init__", "(", "self", ",", "mode", ")", ":", "\n", "        ", "super", "(", "VideoDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mode", "=", "mode", "# train or test", "\n", "# loading annotations", "\n", "self", ".", "annotations", "=", "pkl", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "anno_n_splits_dir", ",", "'final_annotations_dict.pkl'", ")", ",", "'rb'", ")", ")", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "# loading train set keys", "\n", "            ", "self", ".", "keys", "=", "pkl", ".", "load", "(", "\n", "open", "(", "os", ".", "path", ".", "join", "(", "anno_n_splits_dir", ",", "'train_split_'", "+", "str", "(", "randomseed", ")", "+", "'.pkl'", ")", ",", "'rb'", ")", ")", "\n", "", "elif", "self", ".", "mode", "==", "'test'", ":", "\n", "# loading test set keys", "\n", "            ", "self", ".", "keys", "=", "pkl", ".", "load", "(", "\n", "open", "(", "os", ".", "path", ".", "join", "(", "anno_n_splits_dir", ",", "'test_split_'", "+", "str", "(", "randomseed", ")", "+", "'.pkl'", ")", ",", "'rb'", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Currently supporting only 2 modes: train and test. Choose one of them.'", ")", "\n", "\n", "", "if", "with_caption", ":", "\n", "################ loading captions ######################", "\n", "            ", "self", ".", "captions", "=", "pkl", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "anno_n_splits_dir", ",", "'final_captions_dict.pkl'", ")", ",", "'rb'", ")", ")", "\n", "info", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "anno_n_splits_dir", ",", "'vocab.json'", ")", ",", "'rb'", ")", ")", "\n", "self", ".", "ix_to_word", "=", "info", "[", "'ix_to_word'", "]", "\n", "self", ".", "word_to_ix", "=", "info", "[", "'word_to_ix'", "]", "\n", "self", ".", "max_cap_len", "=", "max_cap_len", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_C3DAVG.VideoDataset.__getitem__": [[88, 145], ["torchvision.transforms.Compose", "sorted", "dataloader_C3DAVG.VideoDataset.annotations.get().get", "torch.zeros", "numpy.arange", "dataloader_C3DAVG.VideoDataset.annotations.get().get", "dataloader_C3DAVG.VideoDataset.annotations.get().get", "dataloader_C3DAVG.VideoDataset.annotations.get().get", "dataloader_C3DAVG.VideoDataset.annotations.get().get", "dataloader_C3DAVG.VideoDataset.annotations.get().get", "dataloader_C3DAVG.VideoDataset.annotations.get().get", "glob.glob", "random.randint", "random.randint", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "os.path.join", "dataloader_C3DAVG.VideoDataset.annotations.get", "dataloader_C3DAVG.load_image_train", "dataloader_C3DAVG.load_image", "dataloader_C3DAVG.VideoDataset.annotations.get", "dataloader_C3DAVG.VideoDataset.annotations.get", "dataloader_C3DAVG.VideoDataset.annotations.get", "dataloader_C3DAVG.VideoDataset.annotations.get", "dataloader_C3DAVG.VideoDataset.annotations.get", "dataloader_C3DAVG.VideoDataset.annotations.get", "numpy.zeros", "numpy.zeros", "dataloader_C3DAVG.VideoDataset.captions.get", "enumerate", "torch.from_numpy().type", "torch.from_numpy().type", "str", "print", "len", "torch.from_numpy", "torch.from_numpy", "int"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.load_image_train", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.load_image"], ["", "", "def", "__getitem__", "(", "self", ",", "ix", ")", ":", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "CenterCrop", "(", "H", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "image_list", "=", "sorted", "(", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "dataset_frames_dir", ",", "\n", "str", "(", "'{:02d}'", ".", "format", "(", "self", ".", "keys", "[", "ix", "]", "[", "0", "]", ")", ")", ",", "'*.jpg'", ")", ")", ")", ")", "\n", "end_frame", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'end_frame'", ")", "\n", "# temporal augmentation", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "temporal_aug_shift", "=", "random", ".", "randint", "(", "temporal_aug_min", ",", "temporal_aug_max", ")", "\n", "end_frame", "=", "end_frame", "+", "temporal_aug_shift", "\n", "", "start_frame", "=", "end_frame", "-", "sample_length", "# presently using sample_length number of frames", "\n", "\n", "# spatial augmentation", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "hori_flip", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "\n", "", "images", "=", "torch", ".", "zeros", "(", "sample_length", ",", "C", ",", "H", ",", "W", ")", "\n", "for", "i", "in", "np", ".", "arange", "(", "0", ",", "sample_length", ")", ":", "\n", "            ", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "                ", "images", "[", "i", "]", "=", "load_image_train", "(", "image_list", "[", "start_frame", "+", "i", "]", ",", "hori_flip", ",", "transform", ")", "\n", "", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "                ", "images", "[", "i", "]", "=", "load_image", "(", "image_list", "[", "start_frame", "+", "i", "]", ",", "transform", ")", "\n", "\n", "", "", "label_final_score", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'final_score'", ")", "\n", "label_position", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'position'", ")", "\n", "label_armstand", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'armstand'", ")", "\n", "label_rot_type", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'rotation_type'", ")", "\n", "label_ss_no", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'ss_no'", ")", "\n", "label_tw_no", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'tw_no'", ")", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "if", "with_caption", ":", "\n", "########## loading captions ############", "\n", "                ", "label_captions", "=", "np", ".", "zeros", "(", "self", ".", "max_cap_len", ")", "\n", "label_captions_mask", "=", "np", ".", "zeros", "(", "self", ".", "max_cap_len", ")", "\n", "captions", "=", "self", ".", "captions", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", "\n", "if", "captions", "is", "None", ":", "\n", "                    ", "print", "(", "'Fault in caps for: '", ",", "self", ".", "keys", "[", "ix", "]", ")", "\n", "", "if", "len", "(", "captions", ")", ">", "self", ".", "max_cap_len", ":", "\n", "                    ", "captions", "=", "captions", "[", ":", "self", ".", "max_cap_len", "]", "\n", "", "captions", "[", "-", "1", "]", "=", "'<eos>'", "\n", "for", "j", ",", "w", "in", "enumerate", "(", "captions", ")", ":", "\n", "                    ", "label_captions", "[", "j", "]", "=", "self", ".", "word_to_ix", "[", "w", "]", "\n", "", "label_captions_non_zero", "=", "(", "label_captions", "==", "0", ")", ".", "nonzero", "(", ")", "\n", "label_captions_mask", "[", ":", "int", "(", "label_captions_non_zero", "[", "0", "]", "[", "0", "]", ")", "+", "1", "]", "=", "1", "\n", "\n", "", "", "data", "=", "{", "}", "\n", "data", "[", "'video'", "]", "=", "images", "\n", "data", "[", "'label_position'", "]", "=", "label_position", ";", "data", "[", "'label_armstand'", "]", "=", "label_armstand", "\n", "data", "[", "'label_rot_type'", "]", "=", "label_rot_type", ";", "data", "[", "'label_ss_no'", "]", "=", "label_ss_no", ";", "data", "[", "'label_tw_no'", "]", "=", "label_tw_no", "\n", "data", "[", "'label_final_score'", "]", "=", "label_final_score", "/", "final_score_std", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "if", "with_caption", ":", "\n", "########## caption stuff #############", "\n", "                ", "data", "[", "'label_captions'", "]", "=", "torch", ".", "from_numpy", "(", "label_captions", ")", ".", "type", "(", "torch", ".", "LongTensor", ")", "\n", "data", "[", "'label_captions_mask'", "]", "=", "torch", ".", "from_numpy", "(", "label_captions_mask", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_C3DAVG.VideoDataset.__len__": [[147, 150], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "sample_pool", "=", "len", "(", "self", ".", "keys", ")", "\n", "return", "sample_pool", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_C3DAVG.load_image_train": [[28, 40], ["PIL.Image.open", "random.randint", "transform().unsqueeze.resize", "transform().unsqueeze.transpose", "transform().unsqueeze", "transform"], "function", ["None"], ["def", "load_image_train", "(", "image_path", ",", "hori_flip", ",", "transform", "=", "None", ")", ":", "\n", "    ", "image", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "size", "=", "input_resize", "\n", "interpolator_idx", "=", "random", ".", "randint", "(", "0", ",", "3", ")", "\n", "interpolators", "=", "[", "Image", ".", "NEAREST", ",", "Image", ".", "BILINEAR", ",", "Image", ".", "BICUBIC", ",", "Image", ".", "LANCZOS", "]", "\n", "interpolator", "=", "interpolators", "[", "interpolator_idx", "]", "\n", "image", "=", "image", ".", "resize", "(", "size", ",", "interpolator", ")", "\n", "if", "hori_flip", ":", "\n", "        ", "image", "=", "image", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "if", "transform", "is", "not", "None", ":", "\n", "        ", "image", "=", "transform", "(", "image", ")", ".", "unsqueeze", "(", "0", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_C3DAVG.load_image": [[42, 52], ["PIL.Image.open", "random.randint", "transform().unsqueeze.resize", "transform().unsqueeze", "transform"], "function", ["None"], ["", "def", "load_image", "(", "image_path", ",", "transform", "=", "None", ")", ":", "\n", "    ", "image", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "size", "=", "input_resize", "\n", "interpolator_idx", "=", "random", ".", "randint", "(", "0", ",", "3", ")", "\n", "interpolators", "=", "[", "Image", ".", "NEAREST", ",", "Image", ".", "BILINEAR", ",", "Image", ".", "BICUBIC", ",", "Image", ".", "LANCZOS", "]", "\n", "interpolator", "=", "interpolators", "[", "interpolator_idx", "]", "\n", "image", "=", "image", ".", "resize", "(", "size", ",", "interpolator", ")", "\n", "if", "transform", "is", "not", "None", ":", "\n", "        ", "image", "=", "transform", "(", "image", ")", ".", "unsqueeze", "(", "0", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.get_vocab_size": [[55, 57], ["len", "dataloader_MSCADC.VideoDataset.get_vocab"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.get_vocab"], ["    ", "def", "get_vocab_size", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "get_vocab", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.get_vocab": [[59, 61], ["None"], "methods", ["None"], ["", "def", "get_vocab", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "ix_to_word", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__": [[63, 91], ["torch.utils.data.Dataset.__init__", "pickle.load", "print", "open", "pickle.load", "print", "pickle.load", "json.load", "print", "print", "os.path.join", "open", "pickle.load", "print", "print", "open", "open", "len", "os.path.join", "open", "os.path.join", "os.path.join", "os.path.join", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__init__"], ["", "def", "__init__", "(", "self", ",", "mode", ")", ":", "\n", "        ", "super", "(", "VideoDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mode", "=", "mode", "# train or test", "\n", "# loading annotations", "\n", "self", ".", "annotations", "=", "pkl", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "anno_n_splits_dir", ",", "'final_annotations_dict.pkl'", ")", ",", "'rb'", ")", ")", "\n", "print", "(", "'Annotations: '", ",", "self", ".", "annotations", ")", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "# loading train set keys", "\n", "            ", "self", ".", "keys", "=", "pkl", ".", "load", "(", "\n", "open", "(", "os", ".", "path", ".", "join", "(", "anno_n_splits_dir", ",", "'train_split_'", "+", "str", "(", "randomseed", ")", "+", "'.pkl'", ")", ",", "'rb'", ")", ")", "\n", "print", "(", "'train set keys: '", ",", "self", ".", "keys", ")", "\n", "", "elif", "self", ".", "mode", "==", "'test'", ":", "\n", "# loading test set keys", "\n", "            ", "self", ".", "keys", "=", "pkl", ".", "load", "(", "\n", "open", "(", "os", ".", "path", ".", "join", "(", "anno_n_splits_dir", ",", "'test_split_'", "+", "str", "(", "randomseed", ")", "+", "'.pkl'", ")", ",", "'rb'", ")", ")", "\n", "print", "(", "'test set keys: '", ",", "self", ".", "keys", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Currently supporting only 2 modes: train and test. Choose one of them.'", ")", "\n", "\n", "", "if", "with_caption", ":", "\n", "################ loading captions ######################", "\n", "            ", "self", ".", "captions", "=", "pkl", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "anno_n_splits_dir", ",", "'final_captions_dict.pkl'", ")", ",", "'rb'", ")", ")", "\n", "info", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "anno_n_splits_dir", ",", "'vocab.json'", ")", ",", "'rb'", ")", ")", "\n", "self", ".", "ix_to_word", "=", "info", "[", "'ix_to_word'", "]", "\n", "self", ".", "word_to_ix", "=", "info", "[", "'word_to_ix'", "]", "\n", "print", "(", "'Vocab size: '", ",", "len", "(", "self", ".", "ix_to_word", ")", ")", "\n", "self", ".", "max_cap_len", "=", "max_cap_len", "\n", "print", "(", "'Max seq. len in data is: '", ",", "self", ".", "max_cap_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__getitem__": [[93, 151], ["torchvision.transforms.Compose", "sorted", "dataloader_MSCADC.VideoDataset.annotations.get().get", "torch.zeros", "numpy.arange", "dataloader_MSCADC.VideoDataset.annotations.get().get", "dataloader_MSCADC.VideoDataset.annotations.get().get", "dataloader_MSCADC.VideoDataset.annotations.get().get", "dataloader_MSCADC.VideoDataset.annotations.get().get", "dataloader_MSCADC.VideoDataset.annotations.get().get", "dataloader_MSCADC.VideoDataset.annotations.get().get", "glob.glob", "random.randint", "random.randint", "int", "numpy.zeros", "numpy.zeros", "dataloader_MSCADC.VideoDataset.captions.get", "enumerate", "torch.from_numpy().type", "torch.from_numpy().type", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "os.path.join", "dataloader_MSCADC.VideoDataset.annotations.get", "dataloader_MSCADC.load_image_train", "dataloader_MSCADC.load_image", "dataloader_MSCADC.VideoDataset.annotations.get", "dataloader_MSCADC.VideoDataset.annotations.get", "dataloader_MSCADC.VideoDataset.annotations.get", "dataloader_MSCADC.VideoDataset.annotations.get", "dataloader_MSCADC.VideoDataset.annotations.get", "dataloader_MSCADC.VideoDataset.annotations.get", "print", "len", "str", "torch.from_numpy", "torch.from_numpy", "int"], "methods", ["home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.load_image_train", "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.load_image"], ["", "", "def", "__getitem__", "(", "self", ",", "ix", ")", ":", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "CenterCrop", "(", "H", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "image_list", "=", "sorted", "(", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "dataset_frames_dir", ",", "\n", "str", "(", "'{:02d}'", ".", "format", "(", "self", ".", "keys", "[", "ix", "]", "[", "0", "]", ")", ")", ",", "'*.jpg'", ")", ")", ")", ")", "\n", "end_frame", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'end_frame'", ")", "\n", "# temporal augmentation", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "temporal_aug_shift", "=", "random", ".", "randint", "(", "temporal_aug_min", ",", "temporal_aug_max", ")", "\n", "end_frame", "=", "end_frame", "+", "temporal_aug_shift", "\n", "", "start_frame", "=", "end_frame", "-", "sample_length", "# presently using sample_length number of frames", "\n", "\n", "# # spatial augmentation", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "            ", "hori_flip", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "\n", "", "images", "=", "torch", ".", "zeros", "(", "16", ",", "C", ",", "H", ",", "W", ")", "\n", "image_no", "=", "0", "\n", "for", "i", "in", "np", ".", "arange", "(", "start_frame", ",", "end_frame", ",", "6.5", ")", ":", "\n", "            ", "i", "=", "int", "(", "i", ")", "\n", "if", "self", ".", "mode", "==", "'train'", ":", "\n", "                ", "images", "[", "image_no", "]", "=", "load_image_train", "(", "image_list", "[", "i", "]", ",", "hori_flip", ",", "transform", ")", "\n", "", "if", "self", ".", "mode", "==", "'test'", ":", "\n", "                ", "images", "[", "image_no", "]", "=", "load_image", "(", "image_list", "[", "i", "]", ",", "transform", ")", "\n", "", "image_no", "+=", "1", "\n", "\n", "", "label_final_score", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'final_score'", ")", "\n", "label_position", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'position'", ")", "\n", "label_armstand", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'armstand'", ")", "\n", "label_rot_type", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'rotation_type'", ")", "\n", "label_ss_no", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'ss_no'", ")", "\n", "label_tw_no", "=", "self", ".", "annotations", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", ".", "get", "(", "'tw_no'", ")", "\n", "if", "with_caption", ":", "\n", "########## loading captions ############", "\n", "            ", "label_captions", "=", "np", ".", "zeros", "(", "self", ".", "max_cap_len", ")", "\n", "label_captions_mask", "=", "np", ".", "zeros", "(", "self", ".", "max_cap_len", ")", "\n", "captions", "=", "self", ".", "captions", ".", "get", "(", "self", ".", "keys", "[", "ix", "]", ")", "\n", "if", "captions", "is", "None", ":", "\n", "                ", "print", "(", "'Fault in caps for: '", ",", "self", ".", "keys", "[", "ix", "]", ")", "\n", "", "if", "len", "(", "captions", ")", ">", "self", ".", "max_cap_len", ":", "\n", "                ", "captions", "=", "captions", "[", ":", "self", ".", "max_cap_len", "]", "\n", "", "captions", "[", "-", "1", "]", "=", "'<eos>'", "\n", "for", "j", ",", "w", "in", "enumerate", "(", "captions", ")", ":", "\n", "                ", "label_captions", "[", "j", "]", "=", "self", ".", "word_to_ix", "[", "w", "]", "\n", "", "label_captions_non_zero", "=", "(", "label_captions", "==", "0", ")", ".", "nonzero", "(", ")", "\n", "label_captions_mask", "[", ":", "int", "(", "label_captions_non_zero", "[", "0", "]", "[", "0", "]", ")", "+", "1", "]", "=", "1", "\n", "\n", "", "data", "=", "{", "}", "\n", "data", "[", "'video'", "]", "=", "images", "\n", "data", "[", "'label_position'", "]", "=", "label_position", ";", "data", "[", "'label_armstand'", "]", "=", "label_armstand", "\n", "data", "[", "'label_rot_type'", "]", "=", "label_rot_type", ";", "data", "[", "'label_ss_no'", "]", "=", "label_ss_no", ";", "data", "[", "'label_tw_no'", "]", "=", "label_tw_no", "\n", "data", "[", "'label_final_score'", "]", "=", "label_final_score", "/", "final_score_std", "\n", "if", "with_caption", ":", "\n", "########## caption stuff #############", "\n", "            ", "data", "[", "'label_captions'", "]", "=", "torch", ".", "from_numpy", "(", "label_captions", ")", ".", "type", "(", "torch", ".", "LongTensor", ")", "\n", "data", "[", "'label_captions_mask'", "]", "=", "torch", ".", "from_numpy", "(", "label_captions_mask", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.VideoDataset.__len__": [[153, 155], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "keys", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.load_image_train": [[28, 40], ["PIL.Image.open", "random.randint", "transform().unsqueeze.resize", "transform().unsqueeze.transpose", "transform().unsqueeze", "transform"], "function", ["None"], ["def", "load_image_train", "(", "image_path", ",", "hori_flip", ",", "transform", "=", "None", ")", ":", "\n", "    ", "image", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "size", "=", "input_resize", "\n", "interpolator_idx", "=", "random", ".", "randint", "(", "0", ",", "3", ")", "\n", "interpolators", "=", "[", "Image", ".", "NEAREST", ",", "Image", ".", "BILINEAR", ",", "Image", ".", "BICUBIC", ",", "Image", ".", "LANCZOS", "]", "\n", "interpolator", "=", "interpolators", "[", "interpolator_idx", "]", "\n", "image", "=", "image", ".", "resize", "(", "size", ",", "interpolator", ")", "\n", "if", "hori_flip", ":", "\n", "        ", "image", "=", "image", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "if", "transform", "is", "not", "None", ":", "\n", "        ", "image", "=", "transform", "(", "image", ")", ".", "unsqueeze", "(", "0", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.ParitoshParmar_MTL-AQA.dataloaders.dataloader_MSCADC.load_image": [[42, 52], ["PIL.Image.open", "random.randint", "transform().unsqueeze.resize", "transform().unsqueeze", "transform"], "function", ["None"], ["", "def", "load_image", "(", "image_path", ",", "transform", "=", "None", ")", ":", "\n", "    ", "image", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "size", "=", "input_resize", "\n", "interpolator_idx", "=", "random", ".", "randint", "(", "0", ",", "3", ")", "\n", "interpolators", "=", "[", "Image", ".", "NEAREST", ",", "Image", ".", "BILINEAR", ",", "Image", ".", "BICUBIC", ",", "Image", ".", "LANCZOS", "]", "\n", "interpolator", "=", "interpolators", "[", "interpolator_idx", "]", "\n", "image", ".", "resize", "(", "size", ",", "interpolator", ")", "\n", "if", "transform", "is", "not", "None", ":", "\n", "        ", "image", "=", "transform", "(", "image", ")", ".", "unsqueeze", "(", "0", ")", "\n", "", "return", "image", "\n", "\n"]]}