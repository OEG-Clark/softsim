{"home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.baselines.init_args": [[11, 23], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.args.parse_args"], ["def", "init_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--metadata_root'", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--snapshots_root'", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--snapshot'", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--save_dir'", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--lgbm_hyperopt_trials'", ",", "type", "=", "int", ",", "default", "=", "500", ")", "\n", "parser", ".", "add_argument", "(", "'--n_bootstrap'", ",", "type", "=", "int", ",", "default", "=", "2000", ")", "\n", "parser", ".", "add_argument", "(", "'--n_vals_c'", ",", "type", "=", "int", ",", "default", "=", "300", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.baselines.init_metadata_test": [[25, 29], ["pandas.read_csv", "pandas.read_csv", "pandas.merge", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "init_metadata_test", "(", "args", ")", ":", "\n", "    ", "clinical_data_most", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "args", ".", "metadata_root", ",", "'MOST_participants.csv'", ")", ")", "\n", "metadata_test", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "args", ".", "metadata_root", ",", "'MOST_progression.csv'", ")", ")", "\n", "return", "pd", ".", "merge", "(", "metadata_test", ",", "clinical_data_most", ",", "on", "=", "(", "'ID'", ",", "'Side'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.baselines.init_metadata": [[31, 50], ["pandas.read_csv", "pandas.merge", "baselines.init_metadata_test", "open", "pickle.load", "os.path.join", "train_folds.append", "os.path.join"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.baselines.init_metadata_test"], ["", "def", "init_metadata", "(", "args", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "snapshots_root", ",", "args", ".", "snapshot", ",", "'session.pkl'", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "session_snapshot", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "clinical_data_oai", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "args", ".", "metadata_root", ",", "'OAI_participants.csv'", ")", ")", "\n", "\n", "metadata", "=", "session_snapshot", "[", "'metadata'", "]", "[", "0", "]", "\n", "metadata", "=", "pd", ".", "merge", "(", "metadata", ",", "clinical_data_oai", ",", "on", "=", "(", "'ID'", ",", "'Side'", ")", ")", "\n", "\n", "metadata_test", "=", "init_metadata_test", "(", "args", ")", "\n", "\n", "train_folds", "=", "[", "]", "\n", "for", "train_index", ",", "val_index", "in", "session_snapshot", "[", "'cv_split_all_folds'", "]", "[", "0", "]", ":", "\n", "        ", "train_split", "=", "metadata", ".", "iloc", "[", "train_index", "]", "\n", "val_split", "=", "metadata", ".", "iloc", "[", "val_index", "]", "\n", "\n", "train_folds", ".", "append", "(", "(", "train_split", ",", "val_split", ")", ")", "\n", "\n", "", "return", "train_folds", ",", "metadata_test", ",", "session_snapshot", "[", "'args'", "]", "[", "0", "]", ".", "seed", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.baselines.build_logreg_model": [[52, 113], ["numpy.logspace", "numpy.argmax", "enumerate", "metric", "cv_scores.append", "models.append", "means_stds.append", "numpy.array", "numpy.array", "train_split.copy.copy", "train_split.copy.copy", "train_split.copy.dropna", "train_split.copy.dropna", "train_split[].values.astype", "val_split[].values.astype", "numpy.mean", "numpy.std", "folds_means_stds.append", "folds_predicts.extend", "folds_gt.extend", "folds_models.append", "statsmodels.Logit", "sm.Logit.fit", "sklearn.linear_model.LogisticRegression.predict().flatten().tolist", "sklearn.linear_model.LogisticRegression", "sklearn.linear_model.LogisticRegression.fit", "[].flatten().tolist", "train_split.copy.Progressor.values.flatten().tolist", "statsmodels.add_constant", "sklearn.linear_model.LogisticRegression.predict().flatten", "[].flatten", "train_split.copy.Progressor.values.flatten", "sklearn.linear_model.LogisticRegression.predict", "statsmodels.add_constant", "sklearn.linear_model.LogisticRegression.predict_proba"], "function", ["None"], ["", "def", "build_logreg_model", "(", "train_folds", ",", "feature_set", ",", "seed", ",", "n_vals_c", ",", "metric", ",", "regularization", "=", "False", ")", ":", "\n", "    ", "cv_scores", "=", "[", "]", "\n", "models", "=", "[", "]", "\n", "means_stds", "=", "[", "]", "\n", "c_vals", "=", "np", ".", "logspace", "(", "-", "6", ",", "2", ",", "n_vals_c", ")", "\n", "if", "not", "regularization", ":", "\n", "        ", "c_vals", "=", "[", "None", ",", "]", "\n", "", "for", "C", "in", "c_vals", ":", "# Enumerating the regularizer weight", "\n", "        ", "folds_predicts", "=", "[", "]", "\n", "folds_gt", "=", "[", "]", "\n", "folds_models", "=", "[", "]", "\n", "folds_means_stds", "=", "[", "]", "\n", "\n", "for", "fold_id", ",", "(", "train_split", ",", "val_split", ")", "in", "enumerate", "(", "train_folds", ")", ":", "# Going through the prepared fold splits", "\n", "            ", "train_split", "=", "train_split", ".", "copy", "(", ")", "\n", "val_split", "=", "train_split", ".", "copy", "(", ")", "\n", "\n", "train_split", ".", "dropna", "(", "inplace", "=", "True", ")", "\n", "val_split", ".", "dropna", "(", "inplace", "=", "True", ")", "\n", "\n", "train_split", ".", "Progressor", "=", "train_split", ".", "Progressor", ".", "values", ">", "0", "\n", "val_split", ".", "Progressor", "=", "val_split", ".", "Progressor", ".", "values", ">", "0", "\n", "\n", "X_train", "=", "train_split", "[", "feature_set", "]", ".", "values", ".", "astype", "(", "float", ")", "\n", "X_val", "=", "val_split", "[", "feature_set", "]", ".", "values", ".", "astype", "(", "float", ")", "\n", "\n", "mean", "=", "np", ".", "mean", "(", "X_train", ",", "0", ")", "\n", "std", "=", "np", ".", "std", "(", "X_train", ",", "0", ")", "\n", "\n", "X_train", "-=", "mean", "\n", "X_train", "/=", "std", "\n", "\n", "X_val", "-=", "mean", "\n", "X_val", "/=", "std", "\n", "\n", "train_split", "[", "feature_set", "]", "=", "X_train", "\n", "val_split", "[", "feature_set", "]", "=", "X_val", "\n", "\n", "if", "not", "regularization", ":", "\n", "                ", "model", "=", "sm", ".", "Logit", "(", "train_split", ".", "Progressor", ".", "values", ",", "sm", ".", "add_constant", "(", "X_train", ")", ")", "\n", "clf", "=", "model", ".", "fit", "(", "disp", "=", "0", ")", "\n", "p_val", "=", "clf", ".", "predict", "(", "sm", ".", "add_constant", "(", "X_val", ")", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "                ", "clf", "=", "LogisticRegression", "(", "C", "=", "C", ",", "random_state", "=", "seed", ",", "solver", "=", "'lbfgs'", ")", "\n", "clf", ".", "fit", "(", "X_train", ",", "train_split", ".", "Progressor", ".", "values", ")", "\n", "p_val", "=", "clf", ".", "predict_proba", "(", "X_val", ")", "[", ":", ",", "1", "]", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "", "folds_means_stds", ".", "append", "(", "[", "mean", ",", "std", "]", ")", "\n", "folds_predicts", ".", "extend", "(", "p_val", ")", "\n", "folds_gt", ".", "extend", "(", "val_split", ".", "Progressor", ".", "values", ".", "flatten", "(", ")", ".", "tolist", "(", ")", ")", "\n", "folds_models", ".", "append", "(", "clf", ")", "\n", "\n", "", "auc", "=", "metric", "(", "folds_gt", ",", "folds_predicts", ")", "\n", "cv_scores", ".", "append", "(", "auc", ")", "\n", "models", ".", "append", "(", "folds_models", ")", "\n", "means_stds", ".", "append", "(", "folds_means_stds", ")", "\n", "\n", "", "opt_c_id", "=", "np", ".", "argmax", "(", "cv_scores", ")", "\n", "models_best", "=", "models", "[", "opt_c_id", "]", "\n", "mean_std_best", "=", "means_stds", "[", "opt_c_id", "]", "\n", "return", "models_best", ",", "mean_std_best", ",", "np", ".", "array", "(", "folds_gt", ")", ",", "np", ".", "array", "(", "folds_predicts", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.lgbm_tools.fit_lgb": [[11, 45], ["enumerate", "pandas.concat", "list", "pd.DataFrame.append", "lightgbm.Dataset", "lightgbm.Dataset", "lgb.train.predict", "pandas.DataFrame", "pd.concat.append", "clfs.append", "metric", "pd.DataFrame.append", "pd.DataFrame.append", "len", "warnings.catch_warnings", "warnings.simplefilter", "lightgbm.train", "pd.concat.Progressor.values.astype", "pd.concat.prog_pred.values.astype"], "function", ["None"], ["def", "fit_lgb", "(", "params", ",", "train_folds", ",", "feature_set", ",", "metric", ",", "return_oof_res", "=", "False", ",", "return_models", "=", "False", ")", ":", "\n", "    ", "oof_results", "=", "[", "]", "\n", "clfs", "=", "[", "]", "\n", "for", "fold_id", ",", "(", "train_split", ",", "val_split", ")", "in", "enumerate", "(", "train_folds", ")", ":", "# Going through the prepared fold splits", "\n", "        ", "d_train_prog", "=", "lgb", ".", "Dataset", "(", "train_split", "[", "feature_set", "]", ",", "label", "=", "train_split", ".", "Progressor", ".", "values", ">", "0", ")", "\n", "d_val_prog", "=", "lgb", ".", "Dataset", "(", "val_split", "[", "feature_set", "]", ",", "label", "=", "val_split", ".", "Progressor", ".", "values", ">", "0", ")", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "# LGBM throws annoying messages, because we do not set the number", "\n", "# of iterations as a parameter", "\n", "            ", "warnings", ".", "simplefilter", "(", "\"ignore\"", ")", "\n", "clf_prog", "=", "lgb", ".", "train", "(", "params", ",", "d_train_prog", ",", "valid_sets", "=", "(", "d_train_prog", ",", "d_val_prog", ")", ",", "verbose_eval", "=", "False", ")", "\n", "\n", "", "preds_prog", "=", "clf_prog", ".", "predict", "(", "val_split", "[", "feature_set", "]", ",", "num_iteration", "=", "clf_prog", ".", "best_iteration", ")", "\n", "\n", "res", "=", "pd", ".", "DataFrame", "(", "data", "=", "{", "'ID'", ":", "val_split", ".", "ID", ".", "values", ",", "'Side'", ":", "val_split", ".", "Side", ".", "values", ",", "'prog_pred'", ":", "preds_prog", ",", "\n", "'Progressor'", ":", "val_split", ".", "Progressor", ".", "values", ">", "0", "}", ")", "\n", "oof_results", ".", "append", "(", "res", ")", "\n", "clfs", ".", "append", "(", "clf_prog", ")", "\n", "\n", "", "oof_results", "=", "pd", ".", "concat", "(", "oof_results", ")", "\n", "res", "=", "list", "(", ")", "\n", "res", ".", "append", "(", "metric", "(", "oof_results", ".", "Progressor", ".", "values", ".", "astype", "(", "int", ")", ",", "\n", "oof_results", ".", "prog_pred", ".", "values", ".", "astype", "(", "float", ")", ")", ")", "\n", "\n", "if", "return_models", ":", "\n", "        ", "res", ".", "append", "(", "clfs", ")", "\n", "\n", "", "if", "return_oof_res", ":", "\n", "        ", "res", ".", "append", "(", "oof_results", ")", "\n", "\n", "", "if", "len", "(", "res", ")", "==", "1", ":", "\n", "        ", "return", "res", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.lgbm_tools.init_lgbm_param_grid": [[47, 65], ["dict", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.loguniform", "hyperopt.hp.choice", "hyperopt.hp.uniform", "hyperopt.hp.uniform", "hyperopt.hp.randint", "hyperopt.hp.randint", "hyperopt.hp.randint"], "function", ["None"], ["", "", "def", "init_lgbm_param_grid", "(", "seed", ")", ":", "\n", "    ", "params", "=", "dict", "(", ")", "\n", "params", "[", "'num_iterations'", "]", "=", "hp", ".", "choice", "(", "'num_iterations'", ",", "[", "10", ",", "100", ",", "1000", ",", "2000", ",", "3000", "]", ")", "\n", "params", "[", "'early_stopping_round'", "]", "=", "hp", ".", "choice", "(", "'early_stopping_round'", ",", "[", "50", ",", "100", "]", ")", "\n", "params", "[", "'learning_rate'", "]", "=", "hp", ".", "loguniform", "(", "'learning_rate'", ",", "-", "5", ",", "-", "3", ")", "\n", "params", "[", "'boosting_type'", "]", "=", "hp", ".", "choice", "(", "'boosting_type'", ",", "[", "'gbdt'", ",", "'dart'", "]", ")", "\n", "params", "[", "'objective'", "]", "=", "'binary'", "\n", "params", "[", "'metric'", "]", "=", "'binary_logloss'", "\n", "params", "[", "'num_leaves'", "]", "=", "2", "+", "hp", ".", "randint", "(", "'num_leaves'", ",", "21", ")", ",", "\n", "params", "[", "'max_depth'", "]", "=", "3", "+", "hp", ".", "randint", "(", "'max_depth'", ",", "11", ")", ",", "\n", "params", "[", "'num_threads'", "]", "=", "8", "\n", "params", "[", "'feature_fraction'", "]", "=", "hp", ".", "uniform", "(", "'feature_fraction'", ",", "0.6", ",", "0.95", ")", "\n", "params", "[", "'bagging_fraction'", "]", "=", "hp", ".", "uniform", "(", "'bagging_fraction'", ",", "0.4", ",", "0.95", ")", "\n", "params", "[", "'bagging_freq'", "]", "=", "1", "+", "hp", ".", "randint", "(", "'bagging_freq'", ",", "9", ")", ",", "\n", "params", "[", "'seed'", "]", "=", "seed", "\n", "params", "[", "'bagging_seed'", "]", "=", "seed", "\n", "params", "[", "'verbose'", "]", "=", "-", "1", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.lgbm_tools.eval_lgb_objective": [[67, 72], ["lgbm_tools.fit_lgb", "callback"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.lgbm_tools.fit_lgb"], ["", "def", "eval_lgb_objective", "(", "space", ",", "train_folds", ",", "feature_set", ",", "metric", ",", "callback", "=", "None", ")", ":", "\n", "    ", "res", "=", "fit_lgb", "(", "space", ",", "train_folds", ",", "feature_set", ",", "metric", ",", "False", ",", "False", ")", "\n", "if", "callback", "is", "not", "None", ":", "\n", "        ", "callback", "(", ")", "\n", "", "return", "{", "'loss'", ":", "1", "-", "res", ",", "'status'", ":", "STATUS_OK", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.lgbm_tools.optimize_lgbm_hyperopt": [[74, 88], ["hyperopt.Trials", "tqdm.tqdm", "lgbm_tools.init_lgbm_param_grid", "hyperopt.fmin", "tqdm.tqdm.close", "hyperopt.space_eval", "functools.partial", "numpy.random.RandomState", "tqdm.tqdm.update"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.lgbm_tools.init_lgbm_param_grid", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update"], ["", "def", "optimize_lgbm_hyperopt", "(", "train_folds", ",", "feature_set", ",", "metric", ",", "seed", ",", "hyperopt_trials", "=", "100", ")", ":", "\n", "    ", "trials", "=", "Trials", "(", ")", "\n", "pbar", "=", "tqdm", "(", "total", "=", "hyperopt_trials", ",", "desc", "=", "\"Hyperopt:\"", ")", "\n", "param_space", "=", "init_lgbm_param_grid", "(", "seed", ")", "\n", "best", "=", "fmin", "(", "fn", "=", "partial", "(", "eval_lgb_objective", ",", "train_folds", "=", "train_folds", ",", "\n", "feature_set", "=", "feature_set", ",", "metric", "=", "metric", ",", "callback", "=", "lambda", ":", "pbar", ".", "update", "(", ")", ")", ",", "\n", "space", "=", "param_space", ",", "\n", "algo", "=", "tpe", ".", "suggest", ",", "\n", "max_evals", "=", "hyperopt_trials", ",", "\n", "trials", "=", "trials", ",", "\n", "verbose", "=", "0", ",", "\n", "rstate", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", ")", "\n", "pbar", ".", "close", "(", ")", "\n", "return", "space_eval", "(", "param_space", ",", "best", ")", ",", "trials", "\n", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.OAProgressionDataset.__init__": [[25, 29], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "split", ",", "trf", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "transforms", "=", "trf", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.OAProgressionDataset.__getitem__": [[30, 48], ["isinstance", "os.path.join", "cv2.imread", "cv2.flip.reshape", "dataset.OAProgressionDataset.transforms", "ind.item.item.item", "cv2.flip", "str"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "ind", ")", ":", "\n", "        ", "if", "isinstance", "(", "ind", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "ind", "=", "ind", ".", "item", "(", ")", "\n", "", "entry", "=", "self", ".", "split", ".", "iloc", "[", "ind", "]", "\n", "fname", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset", ",", "'{}_00_{}.png'", ".", "format", "(", "entry", ".", "ID", ",", "entry", ".", "Side", ")", ")", "\n", "img", "=", "cv2", ".", "imread", "(", "fname", ",", "0", ")", "\n", "if", "entry", ".", "Side", "==", "'L'", ":", "\n", "            ", "img", "=", "cv2", ".", "flip", "(", "img", ",", "1", ")", "\n", "", "img", "=", "img", ".", "reshape", "(", "(", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ",", "1", ")", ")", "\n", "img", ",", "kl_grade", ",", "label", "=", "self", ".", "transforms", "(", "(", "img", ",", "entry", ".", "KL", ",", "entry", ".", "Progressor", ")", ")", "\n", "\n", "res", "=", "{", "'KL'", ":", "kl_grade", ",", "\n", "'img'", ":", "img", ",", "\n", "'label'", ":", "label", ",", "\n", "'ID_SIDE'", ":", "str", "(", "entry", ".", "ID", ")", "+", "'_'", "+", "entry", ".", "Side", "\n", "}", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.OAProgressionDataset.__len__": [[49, 51], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "split", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.AgeSexBMIDataset.__init__": [[54, 58], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "split", ",", "trf", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "transforms", "=", "trf", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.AgeSexBMIDataset.__getitem__": [[59, 78], ["isinstance", "os.path.join", "cv2.imread", "cv2.flip.reshape", "dataset.AgeSexBMIDataset.transforms", "ind.item.item.item", "cv2.flip", "str"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "ind", ")", ":", "\n", "        ", "if", "isinstance", "(", "ind", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "ind", "=", "ind", ".", "item", "(", ")", "\n", "", "entry", "=", "self", ".", "split", ".", "iloc", "[", "ind", "]", "\n", "fname", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset", ",", "'{}_00_{}.png'", ".", "format", "(", "entry", ".", "ID", ",", "entry", ".", "Side", ")", ")", "\n", "img", "=", "cv2", ".", "imread", "(", "fname", ",", "0", ")", "\n", "if", "entry", ".", "Side", "==", "'L'", ":", "\n", "            ", "img", "=", "cv2", ".", "flip", "(", "img", ",", "1", ")", "\n", "", "img", "=", "img", ".", "reshape", "(", "(", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ",", "1", ")", ")", "\n", "img", ",", "age", ",", "sex", ",", "bmi", "=", "self", ".", "transforms", "(", "(", "img", ",", "entry", ".", "AGE", ",", "entry", ".", "SEX", ",", "entry", ".", "BMI", ")", ")", "\n", "\n", "res", "=", "{", "'AGE'", ":", "age", ",", "\n", "'SEX'", ":", "sex", ",", "\n", "'BMI'", ":", "bmi", ",", "\n", "'img'", ":", "img", ",", "\n", "'ID_SIDE'", ":", "str", "(", "entry", ".", "ID", ")", "+", "'_'", "+", "entry", ".", "Side", "\n", "}", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.AgeSexBMIDataset.__len__": [[79, 81], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "split", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.init_age_sex_bmi_metadata": [[83, 104], ["oaprogression.kvs.GlobalKVS", "pandas.read_csv", "pandas.read_csv", "pandas.merge", "pandas.read_csv", "pandas.read_csv", "pandas.merge", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "sklearn.model_selection.GroupKFold", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.save_pkl", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "sklearn.model_selection.GroupKFold.split", "[].astype", "pd.merge.SEX.isna", "pd.merge.BMI.isna", "pd.merge.AGE.isna"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.save_pkl"], ["", "", "def", "init_age_sex_bmi_metadata", "(", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "\n", "oai_meta", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "metadata_root", ",", "'OAI_progression.csv'", ")", ")", "\n", "clinical_data_oai", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "metadata_root", ",", "'OAI_participants.csv'", ")", ")", "\n", "oai_meta", "=", "pd", ".", "merge", "(", "oai_meta", ",", "clinical_data_oai", ",", "on", "=", "(", "'ID'", ",", "'Side'", ")", ")", "\n", "oai_meta", "=", "oai_meta", "[", "~", "oai_meta", ".", "BMI", ".", "isna", "(", ")", "&", "~", "oai_meta", ".", "AGE", ".", "isna", "(", ")", "&", "~", "oai_meta", ".", "SEX", ".", "isna", "(", ")", "]", "\n", "\n", "clinical_data_most", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "metadata_root", ",", "'MOST_participants.csv'", ")", ")", "\n", "metadata_test", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "metadata_root", ",", "'MOST_progression.csv'", ")", ")", "\n", "metadata_test", "=", "pd", ".", "merge", "(", "metadata_test", ",", "clinical_data_most", ",", "on", "=", "(", "'ID'", ",", "'Side'", ")", ")", "\n", "\n", "kvs", ".", "update", "(", "'metadata'", ",", "oai_meta", ")", "\n", "kvs", ".", "update", "(", "'metadata_test'", ",", "metadata_test", ")", "\n", "gkf", "=", "GroupKFold", "(", "n_splits", "=", "5", ")", "\n", "cv_split", "=", "[", "x", "for", "x", "in", "gkf", ".", "split", "(", "kvs", "[", "'metadata'", "]", ",", "\n", "kvs", "[", "'metadata'", "]", "[", "kvs", "[", "'args'", "]", ".", "target_var", "]", ",", "\n", "kvs", "[", "'metadata'", "]", "[", "'ID'", "]", ".", "astype", "(", "str", ")", ")", "]", "\n", "\n", "kvs", ".", "update", "(", "'cv_split_all_folds'", ",", "cv_split", ")", "\n", "kvs", ".", "save_pkl", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "snapshots", ",", "kvs", "[", "'snapshot_name'", "]", ",", "'session.pkl'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.init_progression_metadata": [[106, 151], ["oaprogression.kvs.GlobalKVS", "pandas.read_csv", "pandas.read_csv", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "sklearn.model_selection.GroupKFold", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.save_pkl", "print", "print", "print", "print", "os.path.join", "os.path.join", "int", "pandas.concat", "print", "os.path.join", "sklearn.model_selection.GroupKFold.split", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice", "termcolor.colored", "[].astype"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.save_pkl"], ["", "def", "init_progression_metadata", "(", ")", ":", "\n", "# We get should rid of non-progressors from MOST because we can check", "\n", "# non-progressors only up to 84 months", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "\n", "most_meta", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "metadata_root", ",", "'MOST_progression.csv'", ")", ")", "\n", "oai_meta", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "metadata_root", ",", "'OAI_progression.csv'", ")", ")", "\n", "\n", "if", "kvs", "[", "'args'", "]", ".", "subsample_train", "!=", "-", "1", ":", "\n", "        ", "n_train", "=", "oai_meta", ".", "shape", "[", "0", "]", "\n", "prevalence", "=", "(", "oai_meta", ".", "Progressor", ">", "0", ")", ".", "sum", "(", ")", "/", "n_train", "\n", "sample_pos", "=", "int", "(", "kvs", "[", "'args'", "]", ".", "subsample_train", "*", "prevalence", ")", "\n", "sample_neg", "=", "kvs", "[", "'args'", "]", ".", "subsample_train", "-", "sample_pos", "\n", "train_pos", "=", "oai_meta", "[", "oai_meta", ".", "Progressor", ">", "0", "]", "\n", "train_neg", "=", "oai_meta", "[", "oai_meta", ".", "Progressor", "==", "0", "]", "\n", "\n", "pos_sampled", "=", "train_pos", ".", "iloc", "[", "np", ".", "random", ".", "choice", "(", "train_pos", ".", "shape", "[", "0", "]", ",", "sample_pos", ")", "]", "\n", "neg_sampled", "=", "train_neg", ".", "iloc", "[", "np", ".", "random", ".", "choice", "(", "train_neg", ".", "shape", "[", "0", "]", ",", "sample_neg", ")", "]", "\n", "\n", "new_meta", "=", "pd", ".", "concat", "(", "(", "pos_sampled", ",", "neg_sampled", ")", ")", "\n", "oai_meta", "=", "new_meta", ".", "iloc", "[", "np", ".", "random", ".", "choice", "(", "new_meta", ".", "shape", "[", "0", "]", ",", "new_meta", ".", "shape", "[", "0", "]", ")", "]", "\n", "print", "(", "colored", "(", "\"==> \"", ",", "'red'", ")", "+", "f\"Train set has been sub-sampled. New # pos/neg {sample_pos}/{sample_neg}\"", ")", "\n", "\n", "", "kvs", ".", "update", "(", "'metadata'", ",", "oai_meta", ")", "\n", "kvs", ".", "update", "(", "'metadata_test'", ",", "most_meta", ")", "\n", "\n", "gkf", "=", "GroupKFold", "(", "n_splits", "=", "5", ")", "\n", "cv_split", "=", "[", "x", "for", "x", "in", "gkf", ".", "split", "(", "kvs", "[", "'metadata'", "]", ",", "\n", "kvs", "[", "'metadata'", "]", "[", "'Progressor'", "]", ",", "\n", "kvs", "[", "'metadata'", "]", "[", "'ID'", "]", ".", "astype", "(", "str", ")", ")", "]", "\n", "\n", "kvs", ".", "update", "(", "'cv_split_all_folds'", ",", "cv_split", ")", "\n", "kvs", ".", "save_pkl", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "snapshots", ",", "kvs", "[", "'snapshot_name'", "]", ",", "'session.pkl'", ")", ")", "\n", "\n", "print", "(", "colored", "(", "\"==> \"", ",", "'green'", ")", "+", "\n", "f\"Train dataset has {(kvs['metadata'].Progressor == 0).sum()} non-progressed knees\"", ")", "\n", "\n", "print", "(", "colored", "(", "\"==> \"", ",", "'green'", ")", "+", "\n", "f\"Train dataset has {(kvs['metadata'].Progressor > 0).sum()} progressed knees\"", ")", "\n", "\n", "print", "(", "colored", "(", "\"==> \"", ",", "'green'", ")", "+", "\n", "f\"Test dataset has {(kvs['metadata_test'].Progressor == 0).sum()} non-progressed knees\"", ")", "\n", "\n", "print", "(", "colored", "(", "\"==> \"", ",", "'green'", ")", "+", "\n", "f\"Test dataset has {(kvs['metadata_test'].Progressor > 0).sum()} progressed knees\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.img_labels2solt": [[153, 160], ["solt.DataContainer", "len", "solt.DataContainer"], "function", ["None"], ["", "def", "img_labels2solt", "(", "inp", ")", ":", "\n", "    ", "if", "len", "(", "inp", ")", "==", "3", ":", "\n", "        ", "img", ",", "kl", ",", "prog", "=", "inp", "\n", "return", "sld", ".", "DataContainer", "(", "(", "img", ",", "kl", ",", "prog", ")", ",", "fmt", "=", "'ILL'", ")", "\n", "\n", "", "img", ",", "age", ",", "sex", ",", "bmi", "=", "inp", "\n", "return", "sld", ".", "DataContainer", "(", "(", "img", ",", "age", ",", "sex", ",", "bmi", ")", ",", "fmt", "=", "'ILLL'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.unpack_solt_data": [[162, 164], ["None"], "function", ["None"], ["", "def", "unpack_solt_data", "(", "dc", ":", "sld", ".", "DataContainer", ")", ":", "\n", "    ", "return", "dc", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.apply_by_index": [[166, 196], ["isinstance", "set", "enumerate", "isinstance", "isinstance", "res.append", "res.append", "transform", "copy.deepcopy"], "function", ["None"], ["", "def", "apply_by_index", "(", "items", ",", "transform", ",", "idx", "=", "0", ")", ":", "\n", "    ", "\"\"\"Applies callable to certain objects in iterable using given indices.\n    Parameters\n    ----------\n    items: tuple or list\n    transform: callable\n    idx: int or tuple or or list None\n    Returns\n    -------\n    result: tuple\n    \"\"\"", "\n", "if", "idx", "is", "None", ":", "\n", "        ", "return", "items", "\n", "", "if", "not", "isinstance", "(", "items", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "        ", "raise", "TypeError", "\n", "", "if", "not", "isinstance", "(", "idx", ",", "(", "int", ",", "tuple", ",", "list", ")", ")", ":", "\n", "        ", "raise", "TypeError", "\n", "\n", "", "if", "isinstance", "(", "idx", ",", "int", ")", ":", "\n", "        ", "idx", "=", "[", "idx", ",", "]", "\n", "\n", "", "idx", "=", "set", "(", "idx", ")", "\n", "res", "=", "[", "]", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "items", ")", ":", "\n", "        ", "if", "i", "in", "idx", ":", "\n", "            ", "res", ".", "append", "(", "transform", "(", "item", ")", ")", "\n", "", "else", ":", "\n", "            ", "res", ".", "append", "(", "copy", ".", "deepcopy", "(", "item", ")", ")", "\n", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.init_train_augs": [[198, 215], ["torchvision.transforms.Compose", "solt.Stream", "functools.partial", "solt.PadTransform", "solt.CropTransform", "solt.ResizeTransform", "solt.ImageAdditiveGaussianNoise", "solt.RandomRotate", "solt.CropTransform", "solt.ImageGammaCorrection", "solt.ImageColorTransform", "torchvision.transforms.ToTensor"], "function", ["None"], ["", "def", "init_train_augs", "(", ")", ":", "\n", "    ", "trf", "=", "transforms", ".", "Compose", "(", "[", "\n", "img_labels2solt", ",", "\n", "slc", ".", "Stream", "(", "[", "\n", "slt", ".", "PadTransform", "(", "pad_to", "=", "(", "700", ",", "700", ")", ")", ",", "\n", "slt", ".", "CropTransform", "(", "crop_size", "=", "(", "700", ",", "700", ")", ",", "crop_mode", "=", "'c'", ")", ",", "\n", "slt", ".", "ResizeTransform", "(", "(", "310", ",", "310", ")", ")", ",", "\n", "slt", ".", "ImageAdditiveGaussianNoise", "(", "p", "=", "0.5", ",", "gain_range", "=", "0.3", ")", ",", "\n", "slt", ".", "RandomRotate", "(", "p", "=", "1", ",", "rotation_range", "=", "(", "-", "10", ",", "10", ")", ")", ",", "\n", "slt", ".", "CropTransform", "(", "crop_size", "=", "(", "300", ",", "300", ")", ",", "crop_mode", "=", "'r'", ")", ",", "\n", "slt", ".", "ImageGammaCorrection", "(", "p", "=", "0.5", ",", "gamma_range", "=", "(", "0.5", ",", "1.5", ")", ")", ",", "\n", "slt", ".", "ImageColorTransform", "(", "mode", "=", "'gs2rgb'", ")", "\n", "]", ",", "interpolation", "=", "'bicubic'", ",", "padding", "=", "'z'", ")", ",", "\n", "unpack_solt_data", ",", "\n", "partial", "(", "apply_by_index", ",", "transform", "=", "transforms", ".", "ToTensor", "(", ")", ",", "idx", "=", "0", ")", ",", "\n", "]", ")", "\n", "return", "trf", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.debug_augmentations": [[217, 232], ["oaprogression.kvs.GlobalKVS", "dataset.OAProgressionDataset", "numpy.random.choice", "len", "numpy.clip().astype", "numpy.swapaxes", "numpy.swapaxes", "matplotlib.figure", "matplotlib.imshow", "matplotlib.show", "dataset.init_train_augs", "numpy.clip", "sample[].numpy"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.init_train_augs"], ["", "def", "debug_augmentations", "(", "n_iter", "=", "20", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "\n", "ds", "=", "OAProgressionDataset", "(", "dataset", "=", "kvs", "[", "'args'", "]", ".", "dataset_root", ",", "\n", "split", "=", "kvs", "[", "'metadata'", "]", ",", "\n", "trf", "=", "init_train_augs", "(", ")", ")", "\n", "\n", "for", "ind", "in", "np", ".", "random", ".", "choice", "(", "len", "(", "ds", ")", ",", "n_iter", ",", "replace", "=", "False", ")", ":", "\n", "        ", "sample", "=", "ds", "[", "ind", "]", "\n", "img", "=", "np", ".", "clip", "(", "sample", "[", "'img'", "]", ".", "numpy", "(", ")", "*", "255", ",", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "img", "=", "np", ".", "swapaxes", "(", "img", ",", "0", ",", "-", "1", ")", "\n", "img", "=", "np", ".", "swapaxes", "(", "img", ",", "0", ",", "1", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "imshow", "(", "img", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.init_snapshot_dir": [[22, 29], ["oaprogression.kvs.GlobalKVS", "time.strftime", "os.makedirs", "oaprogression.kvs.GlobalKVS.update", "os.path.join"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update"], ["def", "init_snapshot_dir", "(", "snapshot_name_prefix", "=", "None", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "snapshot_name", "=", "time", ".", "strftime", "(", "'%Y_%m_%d_%H_%M'", ")", "\n", "if", "snapshot_name_prefix", "is", "not", "None", ":", "\n", "        ", "snapshot_name", "=", "f'{snapshot_name_prefix}_{snapshot_name}'", "\n", "", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "snapshots", ",", "snapshot_name", ")", ",", "exist_ok", "=", "True", ")", "\n", "kvs", ".", "update", "(", "'snapshot_name'", ",", "snapshot_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.init_session": [[31, 60], ["oaprogression.kvs.GlobalKVS", "oaprogression.training.args.parse_args", "oaprogression.kvs.GlobalKVS.update", "torch.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "session.init_snapshot_dir", "oaprogression.kvs.GlobalKVS.update", "torch.cuda.is_available", "oaprogression.kvs.GlobalKVS.save_pkl", "torch.cuda.is_available", "EnvironmentError", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "os.path.join", "torch.cuda.device_count"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.args.parse_args", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.init_snapshot_dir", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.save_pkl", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update"], ["", "def", "init_session", "(", "snapshot_name_prefix", "=", "None", ")", ":", "\n", "    ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "raise", "EnvironmentError", "(", "'The code must be run on GPU.'", ")", "\n", "\n", "", "kvs", "=", "GlobalKVS", "(", ")", "\n", "\n", "# Getting the arguments", "\n", "args", "=", "parse_args", "(", ")", "\n", "kvs", ".", "update", "(", "'args'", ",", "args", ")", "\n", "\n", "# Initializing the seeds", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "# Creating the snapshot", "\n", "init_snapshot_dir", "(", "snapshot_name_prefix", ")", "\n", "\n", "kvs", ".", "update", "(", "'pytorch_version'", ",", "torch", ".", "__version__", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "kvs", ".", "update", "(", "'cuda'", ",", "torch", ".", "version", ".", "cuda", ")", "\n", "kvs", ".", "update", "(", "'gpus'", ",", "torch", ".", "cuda", ".", "device_count", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "kvs", ".", "update", "(", "'cuda'", ",", "None", ")", "\n", "kvs", ".", "update", "(", "'gpus'", ",", "None", ")", "\n", "\n", "", "kvs", ".", "save_pkl", "(", "os", ".", "path", ".", "join", "(", "args", ".", "snapshots", ",", "kvs", "[", "'snapshot_name'", "]", ",", "'session.pkl'", ")", ")", "\n", "\n", "return", "args", ",", "kvs", "[", "'snapshot_name'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.init_data_processing": [[62, 96], ["oaprogression.kvs.GlobalKVS", "oaprogression.training.dataset.init_train_augs", "oaprogression.training.dataset.OAProgressionDataset", "session.init_mean_std", "print", "print", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.save_pkl", "mean_vector.tolist", "std_vector.tolist", "os.path.join", "termcolor.colored", "termcolor.colored", "functools.partial", "solt.Stream", "functools.partial", "functools.partial", "solt.ResizeTransform", "solt.CropTransform", "solt.ImageColorTransform", "torchvision.transforms.ToTensor"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.dataset.init_train_augs", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.init_mean_std", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.save_pkl"], ["", "def", "init_data_processing", "(", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "train_augs", "=", "init_train_augs", "(", ")", "\n", "\n", "dataset", "=", "OAProgressionDataset", "(", "dataset", "=", "kvs", "[", "'args'", "]", ".", "dataset_root", ",", "split", "=", "kvs", "[", "'metadata'", "]", ",", "trf", "=", "train_augs", ")", "\n", "\n", "mean_vector", ",", "std_vector", "=", "init_mean_std", "(", "snapshots_dir", "=", "kvs", "[", "'args'", "]", ".", "snapshots", ",", "\n", "dataset", "=", "dataset", ",", "batch_size", "=", "kvs", "[", "'args'", "]", ".", "bs", ",", "\n", "n_threads", "=", "kvs", "[", "'args'", "]", ".", "n_threads", ")", "\n", "\n", "print", "(", "colored", "(", "'====> '", ",", "'red'", ")", "+", "'Mean:'", ",", "mean_vector", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'red'", ")", "+", "'Std:'", ",", "std_vector", ")", "\n", "\n", "norm_trf", "=", "tv_transforms", ".", "Normalize", "(", "mean_vector", ".", "tolist", "(", ")", ",", "std_vector", ".", "tolist", "(", ")", ")", "\n", "train_trf", "=", "tv_transforms", ".", "Compose", "(", "[", "\n", "train_augs", ",", "\n", "partial", "(", "apply_by_index", ",", "transform", "=", "norm_trf", ",", "idx", "=", "0", ")", "\n", "]", ")", "\n", "\n", "val_trf", "=", "tv_transforms", ".", "Compose", "(", "[", "\n", "img_labels2solt", ",", "\n", "slc", ".", "Stream", "(", "[", "\n", "slt", ".", "ResizeTransform", "(", "(", "310", ",", "310", ")", ")", ",", "\n", "slt", ".", "CropTransform", "(", "crop_size", "=", "(", "300", ",", "300", ")", ",", "crop_mode", "=", "'c'", ")", ",", "\n", "slt", ".", "ImageColorTransform", "(", "mode", "=", "'gs2rgb'", ")", ",", "\n", "]", ",", "interpolation", "=", "'bicubic'", ")", ",", "\n", "unpack_solt_data", ",", "\n", "partial", "(", "apply_by_index", ",", "transform", "=", "tv_transforms", ".", "ToTensor", "(", ")", ",", "idx", "=", "0", ")", ",", "\n", "partial", "(", "apply_by_index", ",", "transform", "=", "norm_trf", ",", "idx", "=", "0", ")", "\n", "]", ")", "\n", "\n", "kvs", ".", "update", "(", "'train_trf'", ",", "train_trf", ")", "\n", "kvs", ".", "update", "(", "'val_trf'", ",", "val_trf", ")", "\n", "kvs", ".", "save_pkl", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "snapshots", ",", "kvs", "[", "'snapshot_name'", "]", ",", "'session.pkl'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.init_mean_std": [[98, 122], ["os.path.isfile", "os.path.join", "numpy.load", "torch.utils.data.DataLoader", "print", "tqdm.tqdm", "len", "len", "numpy.save", "os.path.join", "range", "os.path.join", "termcolor.colored", "len", "numpy.zeros", "numpy.zeros", "imgs[].mean", "imgs[].std", "np.zeros.astype", "np.zeros.astype", "imgs.size", "imgs.size"], "function", ["None"], ["", "def", "init_mean_std", "(", "snapshots_dir", ",", "dataset", ",", "batch_size", ",", "n_threads", ")", ":", "\n", "    ", "if", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "snapshots_dir", ",", "'mean_std.npy'", ")", ")", ":", "\n", "        ", "tmp", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "snapshots_dir", ",", "'mean_std.npy'", ")", ")", "\n", "mean_vector", ",", "std_vector", "=", "tmp", "\n", "", "else", ":", "\n", "        ", "tmp_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "num_workers", "=", "n_threads", ")", "\n", "mean_vector", "=", "None", "\n", "std_vector", "=", "None", "\n", "print", "(", "colored", "(", "'==> '", ",", "'green'", ")", "+", "'Calculating mean and std'", ")", "\n", "for", "batch", "in", "tqdm", "(", "tmp_loader", ",", "total", "=", "len", "(", "tmp_loader", ")", ")", ":", "\n", "            ", "imgs", "=", "batch", "[", "'img'", "]", "\n", "if", "mean_vector", "is", "None", ":", "\n", "                ", "mean_vector", "=", "np", ".", "zeros", "(", "imgs", ".", "size", "(", "1", ")", ")", "\n", "std_vector", "=", "np", ".", "zeros", "(", "imgs", ".", "size", "(", "1", ")", ")", "\n", "", "for", "j", "in", "range", "(", "mean_vector", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "mean_vector", "[", "j", "]", "+=", "imgs", "[", ":", ",", "j", ",", ":", ",", ":", "]", ".", "mean", "(", ")", "\n", "std_vector", "[", "j", "]", "+=", "imgs", "[", ":", ",", "j", ",", ":", ",", ":", "]", ".", "std", "(", ")", "\n", "\n", "", "", "mean_vector", "/=", "len", "(", "tmp_loader", ")", "\n", "std_vector", "/=", "len", "(", "tmp_loader", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "snapshots_dir", ",", "'mean_std.npy'", ")", ",", "\n", "[", "mean_vector", ".", "astype", "(", "np", ".", "float32", ")", ",", "std_vector", ".", "astype", "(", "np", ".", "float32", ")", "]", ")", "\n", "\n", "", "return", "mean_vector", ",", "std_vector", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.init_loaders": [[124, 148], ["oaprogression.kvs.GlobalKVS", "ds", "ds", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "numpy.random.seed", "numpy.uint32", "torch.initial_seed"], "function", ["None"], ["", "def", "init_loaders", "(", "x_train", ",", "x_val", ",", "progression", "=", "True", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "\n", "ds", "=", "OAProgressionDataset", "\n", "if", "not", "progression", ":", "\n", "        ", "ds", "=", "AgeSexBMIDataset", "\n", "\n", "", "train_dataset", "=", "ds", "(", "dataset", "=", "kvs", "[", "'args'", "]", ".", "dataset_root", ",", "\n", "split", "=", "x_train", ",", "\n", "trf", "=", "kvs", "[", "'train_trf'", "]", ")", "\n", "\n", "val_dataset", "=", "ds", "(", "dataset", "=", "kvs", "[", "'args'", "]", ".", "dataset_root", ",", "\n", "split", "=", "x_val", ",", "\n", "trf", "=", "kvs", "[", "'val_trf'", "]", ")", "\n", "\n", "train_loader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "kvs", "[", "'args'", "]", ".", "bs", ",", "\n", "num_workers", "=", "kvs", "[", "'args'", "]", ".", "n_threads", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "\n", "worker_init_fn", "=", "lambda", "wid", ":", "np", ".", "random", ".", "seed", "(", "np", ".", "uint32", "(", "torch", ".", "initial_seed", "(", ")", "+", "wid", ")", ")", ")", "\n", "\n", "val_loader", "=", "DataLoader", "(", "val_dataset", ",", "batch_size", "=", "kvs", "[", "'args'", "]", ".", "val_bs", ",", "\n", "num_workers", "=", "kvs", "[", "'args'", "]", ".", "n_threads", ")", "\n", "\n", "return", "train_loader", ",", "val_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.init_folds": [[150, 167], ["oaprogression.kvs.GlobalKVS", "enumerate", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.save_pkl", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "tensorboardX.SummaryWriter", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.save_pkl", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update"], ["", "def", "init_folds", "(", "project", "=", "'OA_progression'", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "writers", "=", "{", "}", "\n", "cv_split_train", "=", "{", "}", "\n", "for", "fold_id", ",", "split", "in", "enumerate", "(", "kvs", "[", "'cv_split_all_folds'", "]", ")", ":", "\n", "        ", "if", "kvs", "[", "'args'", "]", ".", "fold", "!=", "-", "1", "and", "fold_id", "!=", "kvs", "[", "'args'", "]", ".", "fold", ":", "\n", "            ", "continue", "\n", "", "kvs", ".", "update", "(", "f'losses_fold_[{fold_id}]'", ",", "None", ",", "list", ")", "\n", "kvs", ".", "update", "(", "f'val_metrics_fold_[{fold_id}]'", ",", "None", ",", "list", ")", "\n", "cv_split_train", "[", "fold_id", "]", "=", "split", "\n", "writers", "[", "fold_id", "]", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "logs", ",", "\n", "project", ",", "\n", "'fold_{}'", ".", "format", "(", "fold_id", ")", ",", "kvs", "[", "'snapshot_name'", "]", ")", ")", "\n", "\n", "", "kvs", ".", "update", "(", "'cv_split_train'", ",", "cv_split_train", ")", "\n", "kvs", ".", "save_pkl", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "snapshots", ",", "kvs", "[", "'snapshot_name'", "]", ",", "'session.pkl'", ")", ")", "\n", "return", "writers", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.save_checkpoint": [[169, 196], ["isinstance", "oaprogression.kvs.GlobalKVS", "getattr", "os.path.join", "oaprogression.kvs.GlobalKVS.save_pkl", "print", "torch.save", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "getattr.", "os.path.join", "model.state_dict", "print", "os.remove", "torch.save", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "termcolor.colored", "model.state_dict", "termcolor.colored"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.save_pkl", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update"], ["", "def", "save_checkpoint", "(", "model", ",", "val_metric_name", ",", "comparator", "=", "'lt'", ")", ":", "\n", "    ", "if", "isinstance", "(", "model", ",", "torch", ".", "nn", ".", "DataParallel", ")", ":", "\n", "        ", "model", "=", "model", ".", "module", "\n", "\n", "", "kvs", "=", "GlobalKVS", "(", ")", "\n", "fold_id", "=", "kvs", "[", "'cur_fold'", "]", "\n", "epoch", "=", "kvs", "[", "'cur_epoch'", "]", "\n", "val_metric", "=", "kvs", "[", "f'val_metrics_fold_[{fold_id}]'", "]", "[", "-", "1", "]", "[", "0", "]", "[", "val_metric_name", "]", "\n", "comparator", "=", "getattr", "(", "operator", ",", "comparator", ")", "\n", "cur_snapshot_name", "=", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "snapshots", ",", "kvs", "[", "'snapshot_name'", "]", ",", "\n", "f'fold_{fold_id}_epoch_{epoch + 1}.pth'", ")", "\n", "\n", "if", "kvs", "[", "'prev_model'", "]", "is", "None", ":", "\n", "        ", "print", "(", "colored", "(", "'====> '", ",", "'red'", ")", "+", "'Snapshot was saved to'", ",", "cur_snapshot_name", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "cur_snapshot_name", ")", "\n", "kvs", ".", "update", "(", "'prev_model'", ",", "cur_snapshot_name", ")", "\n", "kvs", ".", "update", "(", "'best_val_metric'", ",", "val_metric", ")", "\n", "\n", "", "else", ":", "\n", "        ", "if", "comparator", "(", "val_metric", ",", "kvs", "[", "'best_val_metric'", "]", ")", ":", "\n", "            ", "print", "(", "colored", "(", "'====> '", ",", "'red'", ")", "+", "'Snapshot was saved to'", ",", "cur_snapshot_name", ")", "\n", "os", ".", "remove", "(", "kvs", "[", "'prev_model'", "]", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "cur_snapshot_name", ")", "\n", "kvs", ".", "update", "(", "'prev_model'", ",", "cur_snapshot_name", ")", "\n", "kvs", ".", "update", "(", "'best_val_metric'", ",", "val_metric", ")", "\n", "\n", "", "", "kvs", ".", "save_pkl", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "snapshots", ",", "kvs", "[", "'snapshot_name'", "]", ",", "'session.pkl'", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.model.FCViewer.forward": [[6, 8], ["x.view", "x.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.model.PretrainedModel.__init__": [[11, 30], ["torch.nn.Module.__init__", "model.PretrainedModel.encoder.append", "torch.nn.Sequential", "list", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Sequential", "torch.nn.Sequential", "model.children", "model.FCViewer", "torch.nn.Dropout", "torch.nn.Linear", "model.FCViewer", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.model.KneeNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "drop", ",", "ncls", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "pretrained", ":", "\n", "            ", "model", "=", "pretrainedmodels", ".", "__dict__", "[", "backbone", "]", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "'imagenet'", ")", "\n", "", "else", ":", "\n", "            ", "model", "=", "pretrainedmodels", ".", "__dict__", "[", "backbone", "]", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ")", "\n", "", "self", ".", "encoder", "=", "list", "(", "model", ".", "children", "(", ")", ")", "[", ":", "-", "2", "]", "\n", "\n", "self", ".", "encoder", ".", "append", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder", ")", "\n", "\n", "if", "drop", ">", "0", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "FCViewer", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "drop", ")", ",", "\n", "nn", ".", "Linear", "(", "model", ".", "last_linear", ".", "in_features", ",", "ncls", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "FCViewer", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "model", ".", "last_linear", ".", "in_features", ",", "ncls", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.model.PretrainedModel.forward": [[32, 36], ["model.PretrainedModel.encoder", "model.PretrainedModel.fc"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.model.KneeNet.__init__": [[44, 56], ["torch.nn.Module.__init__", "model.PretrainedModel", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.model.KneeNet.__init__"], ["def", "__init__", "(", "self", ",", "backbone_net", ",", "drop", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "KneeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "backbone", "=", "PretrainedModel", "(", "backbone_net", ",", "1", ",", "1", ",", "pretrained", ")", "\n", "\n", "self", ".", "features", "=", "backbone", ".", "encoder", "\n", "\n", "# 4 KL-grades", "\n", "self", ".", "classifier_kl", "=", "nn", ".", "Sequential", "(", "nn", ".", "Dropout", "(", "p", "=", "drop", ")", ",", "\n", "nn", ".", "Linear", "(", "backbone", ".", "fc", "[", "-", "1", "]", ".", "in_features", ",", "4", ")", ")", "\n", "# 3 progression sub-types", "\n", "self", ".", "classifier_prog", "=", "nn", ".", "Sequential", "(", "nn", ".", "Dropout", "(", "p", "=", "drop", ")", ",", "\n", "nn", ".", "Linear", "(", "backbone", ".", "fc", "[", "-", "1", "]", ".", "in_features", ",", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.model.KneeNet.forward": [[57, 61], ["model.KneeNet.features", "model.KneeNet.view", "model.KneeNet.size", "model.KneeNet.classifier_kl", "model.KneeNet.classifier_prog"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "o", "=", "self", ".", "features", "(", "x", ")", "\n", "feats", "=", "o", ".", "view", "(", "o", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "self", ".", "classifier_kl", "(", "feats", ")", ",", "self", ".", "classifier_prog", "(", "feats", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.train_folds": [[20, 54], ["oaprogression.kvs.GlobalKVS", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "print", "oaprogression.training.session.init_loaders", "train_utils.init_model", "train_utils.init_optimizer", "torch.optim.lr_scheduler.MultiStepLR", "range", "oaprogression.kvs.GlobalKVS.update", "print", "train_utils.prog_epoch_pass", "train_utils.prog_epoch_pass", "train_utils.log_metrics_prog", "oaprogression.training.session.save_checkpoint", "torch.optim.lr_scheduler.MultiStepLR.step", "termcolor.colored", "print", "list", "init_optimizer.add_param_group", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR.get_lr", "init_model.module.classifier_kl.parameters", "init_model.module.classifier_prog.parameters", "map", "termcolor.colored", "termcolor.colored", "init_model.module.features.parameters"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.init_loaders", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.init_model", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.init_optimizer", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.prog_epoch_pass", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.prog_epoch_pass", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.log_metrics_prog", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.save_checkpoint"], ["def", "train_folds", "(", "writers", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "for", "fold_id", "in", "kvs", "[", "'cv_split_train'", "]", ":", "\n", "        ", "kvs", ".", "update", "(", "'cur_fold'", ",", "fold_id", ")", "\n", "kvs", ".", "update", "(", "'prev_model'", ",", "None", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'blue'", ")", "+", "f'Training fold {fold_id}....'", ")", "\n", "\n", "train_index", ",", "val_index", "=", "kvs", "[", "'cv_split_train'", "]", "[", "fold_id", "]", "\n", "train_loader", ",", "val_loader", "=", "session", ".", "init_loaders", "(", "kvs", "[", "'metadata'", "]", ".", "iloc", "[", "train_index", "]", ",", "\n", "kvs", "[", "'metadata'", "]", ".", "iloc", "[", "val_index", "]", ")", "\n", "\n", "net", "=", "init_model", "(", ")", "\n", "optimizer", "=", "init_optimizer", "(", "[", "{", "'params'", ":", "net", ".", "module", ".", "classifier_kl", ".", "parameters", "(", ")", "}", ",", "\n", "{", "'params'", ":", "net", ".", "module", ".", "classifier_prog", ".", "parameters", "(", ")", "}", "]", ")", "\n", "\n", "scheduler", "=", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "kvs", "[", "'args'", "]", ".", "lr_drop", ",", "gamma", "=", "0.1", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "kvs", "[", "'args'", "]", ".", "n_epochs", ")", ":", "\n", "            ", "kvs", ".", "update", "(", "'cur_epoch'", ",", "epoch", ")", "\n", "if", "epoch", "==", "kvs", "[", "'args'", "]", ".", "unfreeze_epoch", ":", "\n", "                ", "print", "(", "colored", "(", "'====> '", ",", "'red'", ")", "+", "'Unfreezing the layers!'", ")", "\n", "new_lr_drop_milestones", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", "-", "kvs", "[", "'args'", "]", ".", "unfreeze_epoch", ",", "kvs", "[", "'args'", "]", ".", "lr_drop", ")", ")", "\n", "optimizer", ".", "add_param_group", "(", "{", "'params'", ":", "net", ".", "module", ".", "features", ".", "parameters", "(", ")", "}", ")", "\n", "scheduler", "=", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "new_lr_drop_milestones", ",", "gamma", "=", "0.1", ")", "\n", "\n", "", "print", "(", "colored", "(", "'====> '", ",", "'red'", ")", "+", "'LR:'", ",", "scheduler", ".", "get_lr", "(", ")", ")", "\n", "train_loss", "=", "prog_epoch_pass", "(", "net", ",", "optimizer", ",", "train_loader", ")", "\n", "val_out", "=", "prog_epoch_pass", "(", "net", ",", "None", ",", "val_loader", ")", "\n", "val_loss", ",", "val_ids", ",", "gt_progression", ",", "preds_progression", ",", "gt_kl", ",", "preds_kl", "=", "val_out", "\n", "log_metrics_prog", "(", "writers", "[", "fold_id", "]", ",", "train_loss", ",", "val_loss", ",", "\n", "gt_progression", ",", "preds_progression", ",", "gt_kl", ",", "preds_kl", ")", "\n", "\n", "session", ".", "save_checkpoint", "(", "net", ",", "'ap_prog'", ",", "'gt'", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.init_model": [[56, 71], ["oaprogression.kvs.GlobalKVS", "oaprogression.training.model.PretrainedModel.to", "oaprogression.training.model.KneeNet", "torch.nn.DataParallel().to", "oaprogression.training.model.PretrainedModel", "oaprogression.training.model.PretrainedModel", "torch.nn.DataParallel"], "function", ["None"], ["", "", "", "def", "init_model", "(", "kneenet", "=", "True", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "if", "kneenet", ":", "\n", "        ", "net", "=", "KneeNet", "(", "kvs", "[", "'args'", "]", ".", "backbone", ",", "kvs", "[", "'args'", "]", ".", "dropout_rate", ")", "\n", "", "else", ":", "\n", "        ", "if", "not", "kvs", "[", "'args'", "]", ".", "predict_age_sex_bmi", ":", "\n", "            ", "net", "=", "PretrainedModel", "(", "kvs", "[", "'args'", "]", ".", "backbone", ",", "kvs", "[", "'args'", "]", ".", "dropout_rate", ",", "1", ",", "True", ")", "\n", "", "else", ":", "\n", "            ", "net", "=", "PretrainedModel", "(", "kvs", "[", "'args'", "]", ".", "backbone", ",", "kvs", "[", "'args'", "]", ".", "dropout_rate", ",", "3", ",", "True", ")", "\n", "\n", "", "", "if", "kvs", "[", "'gpus'", "]", ">", "1", ":", "\n", "        ", "net", "=", "nn", ".", "DataParallel", "(", "net", ")", ".", "to", "(", "'cuda'", ")", "\n", "\n", "", "net", "=", "net", ".", "to", "(", "'cuda'", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.init_optimizer": [[73, 81], ["oaprogression.kvs.GlobalKVS", "torch.optim.Adam", "torch.optim.SGD"], "function", ["None"], ["", "def", "init_optimizer", "(", "parameters", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "if", "kvs", "[", "'args'", "]", ".", "optimizer", "==", "'adam'", ":", "\n", "        ", "return", "optim", ".", "Adam", "(", "parameters", ",", "lr", "=", "kvs", "[", "'args'", "]", ".", "lr", ",", "weight_decay", "=", "kvs", "[", "'args'", "]", ".", "wd", ")", "\n", "", "elif", "kvs", "[", "'args'", "]", ".", "optimizer", "==", "'sgd'", ":", "\n", "        ", "return", "optim", ".", "SGD", "(", "parameters", ",", "lr", "=", "kvs", "[", "'args'", "]", ".", "lr", ",", "weight_decay", "=", "kvs", "[", "'args'", "]", ".", "wd", ",", "momentum", "=", "0.9", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.init_epoch_pass": [[83, 93], ["oaprogression.kvs.GlobalKVS", "net.train", "len", "tqdm.tqdm", "next", "net.parameters"], "function", ["None"], ["", "", "def", "init_epoch_pass", "(", "net", ",", "optimizer", ",", "loader", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "net", ".", "train", "(", "optimizer", "is", "not", "None", ")", "\n", "running_loss", "=", "0.0", "\n", "n_batches", "=", "len", "(", "loader", ")", "\n", "pbar", "=", "tqdm", "(", "total", "=", "n_batches", ")", "\n", "epoch", "=", "kvs", "[", "'cur_epoch'", "]", "\n", "max_epoch", "=", "kvs", "[", "'args'", "]", ".", "n_epochs", "\n", "device", "=", "next", "(", "net", ".", "parameters", "(", ")", ")", ".", "device", "\n", "return", "running_loss", ",", "pbar", ",", "n_batches", ",", "epoch", ",", "max_epoch", ",", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.epoch_pass": [[95, 192], ["oaprogression.kvs.GlobalKVS", "train_utils.init_epoch_pass", "list", "list", "list", "list", "list", "list", "list", "list", "list", "gc.collect", "pbar.close", "torch.set_grad_enabled", "torch.set_grad_enabled", "enumerate", "batch[].to", "net().squeeze", "criterion.item", "pbar.update", "gc.collect", "numpy.hstack", "numpy.hstack", "numpy.hstack", "numpy.hstack", "numpy.hstack", "numpy.hstack", "numpy.hstack", "numpy.hstack", "optimizer.zero_grad", "batch[].float().to", "criterion", "batch[].float().to", "batch[].float().to", "batch[].float().to", "torch.mse_loss", "torch.binary_cross_entropy_with_logits", "torch.mse_loss", "criterion.backward", "optimizer.step", "list.extend", "pbar.set_description", "pbar.set_description", "net", "output[].squeeze", "output[].squeeze", "output[].squeeze", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "np.hstack.append", "np.hstack.append", "output[].data.to().numpy().squeeze", "torch.sigmoid().data.to().numpy().squeeze", "torch.sigmoid().data.to().numpy().squeeze", "output[].data.to().numpy().squeeze", "np.hstack.append", "np.hstack.append", "np.hstack.append", "np.hstack.append", "np.hstack.append", "np.hstack.append", "batch[].float", "batch[].float", "batch[].float", "batch[].float", "net.parameters", "torch.sigmoid().data.to().numpy().squeeze", "torch.sigmoid().data.to().numpy().squeeze", "net().squeeze.data.to().numpy().squeeze", "batch[].numpy().squeeze", "batch[].numpy().squeeze", "batch[].numpy().squeeze", "batch[].numpy().squeeze", "output[].data.to().numpy", "torch.sigmoid().data.to().numpy", "torch.sigmoid().data.to().numpy", "output[].data.to().numpy", "torch.sigmoid().data.to().numpy", "torch.sigmoid().data.to().numpy", "net().squeeze.data.to().numpy", "batch[].numpy", "batch[].numpy", "batch[].numpy", "batch[].numpy", "output[].data.to", "torch.sigmoid().data.to", "torch.sigmoid().data.to", "output[].data.to", "torch.sigmoid().data.to", "torch.sigmoid().data.to", "net().squeeze.data.to", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.init_epoch_pass", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update"], ["", "def", "epoch_pass", "(", "net", ",", "optimizer", ",", "loader", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "running_loss", ",", "pbar", ",", "n_batches", ",", "epoch", ",", "max_epoch", ",", "device", "=", "init_epoch_pass", "(", "net", ",", "optimizer", ",", "loader", ")", "\n", "if", "kvs", "[", "'args'", "]", ".", "target_var", "==", "'SEX'", ":", "\n", "        ", "criterion", "=", "F", ".", "binary_cross_entropy_with_logits", "\n", "", "else", ":", "\n", "        ", "criterion", "=", "F", ".", "mse_loss", "\n", "# Individual factors prediction", "\n", "", "preds", "=", "list", "(", ")", "\n", "gt", "=", "list", "(", ")", "\n", "# Predicting Age, Sex, BMI", "\n", "preds_age", "=", "list", "(", ")", "\n", "preds_sex", "=", "list", "(", ")", "\n", "preds_bmi", "=", "list", "(", ")", "\n", "\n", "gt_age", "=", "list", "(", ")", "\n", "gt_sex", "=", "list", "(", ")", "\n", "gt_bmi", "=", "list", "(", ")", "\n", "\n", "ids", "=", "list", "(", ")", "\n", "\n", "with", "torch", ".", "set_grad_enabled", "(", "optimizer", "is", "not", "None", ")", ":", "\n", "        ", "for", "i", ",", "batch", "in", "enumerate", "(", "loader", ")", ":", "\n", "            ", "if", "optimizer", "is", "not", "None", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "", "inp", "=", "batch", "[", "'img'", "]", ".", "to", "(", "device", ")", "\n", "output", "=", "net", "(", "inp", ")", ".", "squeeze", "(", ")", "\n", "if", "not", "kvs", "[", "'args'", "]", ".", "predict_age_sex_bmi", ":", "\n", "                ", "target", "=", "batch", "[", "kvs", "[", "'args'", "]", ".", "target_var", "]", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "target", ")", "\n", "", "else", ":", "\n", "                ", "target_age", "=", "batch", "[", "'AGE'", "]", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "target_sex", "=", "batch", "[", "'SEX'", "]", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "target_bmi", "=", "batch", "[", "'BMI'", "]", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "loss_age", "=", "F", ".", "mse_loss", "(", "output", "[", ":", ",", "0", "]", ".", "squeeze", "(", ")", ",", "target_age", ")", "\n", "loss_sex", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "output", "[", ":", ",", "1", "]", ".", "squeeze", "(", ")", ",", "target_sex", ")", "\n", "loss_bmi", "=", "F", ".", "mse_loss", "(", "output", "[", ":", ",", "2", "]", ".", "squeeze", "(", ")", ",", "target_bmi", ")", "\n", "loss", "=", "loss_age", "+", "loss_sex", "+", "loss_bmi", "\n", "\n", "", "if", "optimizer", "is", "not", "None", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "if", "kvs", "[", "'args'", "]", ".", "clip_grad", ":", "\n", "                    ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "net", ".", "parameters", "(", ")", ",", "kvs", "[", "'args'", "]", ".", "clip_grad_norm", ")", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "                ", "if", "not", "kvs", "[", "'args'", "]", ".", "predict_age_sex_bmi", ":", "\n", "                    ", "if", "kvs", "[", "'args'", "]", ".", "target_var", "==", "'SEX'", ":", "\n", "                        ", "pred_batch", "=", "torch", ".", "sigmoid", "(", "output", ")", ".", "data", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "", "else", ":", "\n", "                        ", "pred_batch", "=", "output", ".", "data", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "", "preds", ".", "append", "(", "pred_batch", ")", "\n", "gt", ".", "append", "(", "batch", "[", "kvs", "[", "'args'", "]", ".", "target_var", "]", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "preds_age_batch", "=", "output", "[", ":", ",", "0", "]", ".", "data", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "preds_sex_batch", "=", "torch", ".", "sigmoid", "(", "output", "[", ":", ",", "1", "]", ")", ".", "data", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "preds_bmi_batch", "=", "output", "[", ":", ",", "2", "]", ".", "data", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "\n", "preds_age", ".", "append", "(", "preds_age_batch", ")", "\n", "preds_sex", ".", "append", "(", "preds_sex_batch", ")", "\n", "preds_bmi", ".", "append", "(", "preds_bmi_batch", ")", "\n", "\n", "gt_age", ".", "append", "(", "batch", "[", "'AGE'", "]", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "gt_sex", ".", "append", "(", "batch", "[", "'SEX'", "]", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "gt_bmi", ".", "append", "(", "batch", "[", "'BMI'", "]", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", ")", "\n", "\n", "", "ids", ".", "extend", "(", "batch", "[", "'ID_SIDE'", "]", ")", "\n", "\n", "", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "if", "optimizer", "is", "not", "None", ":", "\n", "                ", "pbar", ".", "set_description", "(", "f'Training   [{epoch} / {max_epoch}]:: {running_loss / (i + 1):.3f}'", ")", "\n", "", "else", ":", "\n", "                ", "pbar", ".", "set_description", "(", "f'Validating [{epoch} / {max_epoch}]:'", ")", "\n", "", "pbar", ".", "update", "(", ")", "\n", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "", "", "gc", ".", "collect", "(", ")", "\n", "pbar", ".", "close", "(", ")", "\n", "\n", "if", "optimizer", "is", "not", "None", ":", "\n", "        ", "return", "running_loss", "/", "n_batches", "\n", "", "else", ":", "\n", "        ", "if", "not", "kvs", "[", "'args'", "]", ".", "predict_age_sex_bmi", ":", "\n", "            ", "preds", "=", "np", ".", "hstack", "(", "preds", ")", "\n", "gt", "=", "np", ".", "hstack", "(", "gt", ")", "\n", "return", "running_loss", "/", "n_batches", ",", "ids", ",", "gt", ",", "preds", "\n", "", "else", ":", "\n", "            ", "preds_age", "=", "np", ".", "hstack", "(", "preds_age", ")", "\n", "gt_age", "=", "np", ".", "hstack", "(", "gt_age", ")", "\n", "\n", "preds_sex", "=", "np", ".", "hstack", "(", "preds_sex", ")", "\n", "gt_sex", "=", "np", ".", "hstack", "(", "gt_sex", ")", "\n", "\n", "preds_bmi", "=", "np", ".", "hstack", "(", "preds_bmi", ")", "\n", "gt_bmi", "=", "np", ".", "hstack", "(", "gt_bmi", ")", "\n", "\n", "return", "running_loss", "/", "n_batches", ",", "ids", ",", "gt_age", ",", "preds_age", ",", "gt_sex", ",", "preds_sex", ",", "gt_bmi", ",", "preds_bmi", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.prog_epoch_pass": [[194, 259], ["oaprogression.kvs.GlobalKVS", "train_utils.init_epoch_pass", "gc.collect", "pbar.close", "torch.set_grad_enabled", "torch.set_grad_enabled", "enumerate", "numpy.vstack", "numpy.hstack", "numpy.vstack", "numpy.hstack", "batch[].long().to", "batch[].long().to", "batch[].to", "net", "torch.cross_entropy", "torch.cross_entropy", "loss.item", "pbar.update", "gc.collect", "optimizer.zero_grad", "F.cross_entropy.mul", "F.cross_entropy.mul", "loss.backward", "optimizer.step", "torch.softmax().data.to().numpy", "torch.softmax().data.to().numpy", "np.vstack.append", "np.hstack.append", "np.vstack.append", "np.hstack.append", "ids.extend", "pbar.set_description", "pbar.set_description", "batch[].long", "batch[].long", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "batch[].numpy", "net.parameters", "torch.softmax().data.to", "torch.softmax().data.to", "torch.softmax", "torch.softmax"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.init_epoch_pass", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update"], ["", "", "", "def", "prog_epoch_pass", "(", "net", ",", "optimizer", ",", "loader", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "running_loss", ",", "pbar", ",", "n_batches", ",", "epoch", ",", "max_epoch", ",", "device", "=", "init_epoch_pass", "(", "net", ",", "optimizer", ",", "loader", ")", "\n", "\n", "preds_progression", "=", "[", "]", "\n", "gt_progression", "=", "[", "]", "\n", "ids", "=", "[", "]", "\n", "preds_kl", "=", "[", "]", "\n", "gt_kl", "=", "[", "]", "\n", "\n", "with", "torch", ".", "set_grad_enabled", "(", "optimizer", "is", "not", "None", ")", ":", "\n", "        ", "for", "i", ",", "batch", "in", "enumerate", "(", "loader", ")", ":", "\n", "            ", "if", "optimizer", "is", "not", "None", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "# forward + backward + optimize if train", "\n", "", "labels_prog", "=", "batch", "[", "'label'", "]", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "labels_kl", "=", "batch", "[", "'KL'", "]", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "inputs", "=", "batch", "[", "'img'", "]", ".", "to", "(", "device", ")", "\n", "\n", "outputs_kl", ",", "outputs_prog", "=", "net", "(", "inputs", ")", "\n", "loss_kl", "=", "F", ".", "cross_entropy", "(", "outputs_kl", ",", "labels_kl", ")", "\n", "loss_prog", "=", "F", ".", "cross_entropy", "(", "outputs_prog", ",", "labels_prog", ")", "\n", "\n", "loss", "=", "loss_prog", ".", "mul", "(", "kvs", "[", "'args'", "]", ".", "loss_weight", ")", "+", "loss_kl", ".", "mul", "(", "1", "-", "kvs", "[", "'args'", "]", ".", "loss_weight", ")", "\n", "\n", "if", "optimizer", "is", "not", "None", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "if", "kvs", "[", "'args'", "]", ".", "clip_grad", ":", "\n", "                    ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "net", ".", "parameters", "(", ")", ",", "kvs", "[", "'args'", "]", ".", "clip_grad_norm", ")", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "                ", "probs_progression_batch", "=", "F", ".", "softmax", "(", "outputs_prog", ",", "1", ")", ".", "data", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", "\n", "probs_kl_batch", "=", "F", ".", "softmax", "(", "outputs_kl", ",", "1", ")", ".", "data", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", "\n", "\n", "preds_progression", ".", "append", "(", "probs_progression_batch", ")", "\n", "gt_progression", ".", "append", "(", "batch", "[", "'label'", "]", ".", "numpy", "(", ")", ")", "\n", "\n", "preds_kl", ".", "append", "(", "probs_kl_batch", ")", "\n", "gt_kl", ".", "append", "(", "batch", "[", "'KL'", "]", ")", "\n", "ids", ".", "extend", "(", "batch", "[", "'ID_SIDE'", "]", ")", "\n", "\n", "", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "if", "optimizer", "is", "not", "None", ":", "\n", "                ", "pbar", ".", "set_description", "(", "f'Training   [{epoch} / {max_epoch}]:: {running_loss / (i + 1):.3f}'", ")", "\n", "", "else", ":", "\n", "                ", "pbar", ".", "set_description", "(", "f'Validating [{epoch} / {max_epoch}]:'", ")", "\n", "", "pbar", ".", "update", "(", ")", "\n", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "", "", "if", "optimizer", "is", "None", ":", "\n", "        ", "preds_progression", "=", "np", ".", "vstack", "(", "preds_progression", ")", "\n", "gt_progression", "=", "np", ".", "hstack", "(", "gt_progression", ")", "\n", "\n", "preds_kl", "=", "np", ".", "vstack", "(", "preds_kl", ")", "\n", "gt_kl", "=", "np", ".", "hstack", "(", "gt_kl", ")", "\n", "\n", "", "gc", ".", "collect", "(", ")", "\n", "pbar", ".", "close", "(", ")", "\n", "\n", "if", "optimizer", "is", "not", "None", ":", "\n", "        ", "return", "running_loss", "/", "n_batches", "\n", "", "else", ":", "\n", "        ", "return", "running_loss", "/", "n_batches", ",", "ids", ",", "gt_progression", ",", "preds_progression", ",", "gt_kl", ",", "preds_kl", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.log_metrics_prog": [[261, 293], ["oaprogression.kvs.GlobalKVS", "oaprogression.evaluation.tools.calc_metrics", "print", "print", "print", "print", "print", "print", "print", "print", "print", "boardlogger.add_scalars", "boardlogger.add_scalars", "boardlogger.add_scalars", "boardlogger.add_scalars", "boardlogger.add_scalars", "boardlogger.add_scalars", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.save_pkl", "os.path.join", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.calc_metrics", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.save_pkl"], ["", "", "def", "log_metrics_prog", "(", "boardlogger", ",", "train_loss", ",", "val_loss", ",", "gt_progression", ",", "preds_progression", ",", "gt_kl", ",", "preds_kl", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "\n", "res", "=", "testtools", ".", "calc_metrics", "(", "gt_progression", ",", "gt_kl", ",", "preds_progression", ",", "preds_kl", ")", "\n", "res", "[", "'val_loss'", "]", "=", "val_loss", ",", "\n", "res", "[", "'epoch'", "]", "=", "kvs", "[", "'cur_epoch'", "]", "\n", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Train loss: {train_loss:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation loss: {val_loss:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation AUC [prog]: {res[\"auc_prog\"]:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation F1 @ 0.3 [prog]: {res[\"f1_score_03_prog\"]:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation F1 @ 0.4 [prog]: {res[\"f1_score_04_prog\"]:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation F1 @ 0.5 [prog]: {res[\"f1_score_05_prog\"]:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation AP [prog]: {res[\"ap_prog\"]:.5f}'", ")", "\n", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation AUC [oa]: {res[\"auc_oa\"]:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Kappa [oa]: {res[\"kappa_kl\"]:.5f}'", ")", "\n", "\n", "boardlogger", ".", "add_scalars", "(", "'Losses'", ",", "{", "'train'", ":", "train_loss", ",", "'val'", ":", "val_loss", "}", ",", "kvs", "[", "'cur_epoch'", "]", ")", "\n", "boardlogger", ".", "add_scalars", "(", "'AUC progression'", ",", "{", "'val'", ":", "res", "[", "'auc_prog'", "]", "}", ",", "kvs", "[", "'cur_epoch'", "]", ")", "\n", "boardlogger", ".", "add_scalars", "(", "'F1-score @ 0.3 progression'", ",", "{", "'val'", ":", "res", "[", "'f1_score_03_prog'", "]", "}", ",", "kvs", "[", "'cur_epoch'", "]", ")", "\n", "boardlogger", ".", "add_scalars", "(", "'F1-score @ 0.4 progression'", ",", "{", "'val'", ":", "res", "[", "'f1_score_04_prog'", "]", "}", ",", "kvs", "[", "'cur_epoch'", "]", ")", "\n", "boardlogger", ".", "add_scalars", "(", "'F1-score @ 0.5 progression'", ",", "{", "'val'", ":", "res", "[", "'f1_score_05_prog'", "]", "}", ",", "kvs", "[", "'cur_epoch'", "]", ")", "\n", "boardlogger", ".", "add_scalars", "(", "'Average Precision progression'", ",", "{", "'val'", ":", "res", "[", "'ap_prog'", "]", "}", ",", "kvs", "[", "'cur_epoch'", "]", ")", "\n", "\n", "kvs", ".", "update", "(", "f'losses_fold_[{kvs[\"cur_fold\"]}]'", ",", "{", "'epoch'", ":", "kvs", "[", "'cur_epoch'", "]", ",", "\n", "'train_loss'", ":", "train_loss", ",", "\n", "'val_loss'", ":", "val_loss", "}", ")", "\n", "\n", "kvs", ".", "update", "(", "f'val_metrics_fold_[{kvs[\"cur_fold\"]}]'", ",", "res", ")", "\n", "\n", "kvs", ".", "save_pkl", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "snapshots", ",", "kvs", "[", "'snapshot_name'", "]", ",", "'session.pkl'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.train_utils.log_metrics_age_sex_bmi": [[295, 356], ["oaprogression.kvs.GlobalKVS", "dict", "print", "print", "boardlogger.add_scalars", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.update", "oaprogression.kvs.GlobalKVS.save_pkl", "sklearn.metrics.mean_squared_error", "sklearn.metrics.median_absolute_error", "sklearn.metrics.roc_auc_score", "sklearn.metrics.mean_squared_error", "sklearn.metrics.median_absolute_error", "print", "print", "print", "print", "print", "os.path.join", "termcolor.colored", "termcolor.colored", "sklearn.metrics.roc_auc_score", "print", "boardlogger.add_scalars", "sklearn.metrics.mean_squared_error", "sklearn.metrics.median_absolute_error", "print", "print", "boardlogger.add_scalars", "boardlogger.add_scalars", "gt_sex.astype", "gt.astype", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored", "termcolor.colored"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.save_pkl"], ["", "def", "log_metrics_age_sex_bmi", "(", "boardlogger", ",", "train_loss", ",", "val_res", ")", ":", "\n", "    ", "kvs", "=", "GlobalKVS", "(", ")", "\n", "res", "=", "dict", "(", ")", "\n", "val_loss", "=", "val_res", "[", "0", "]", "\n", "res", "[", "'val_loss'", "]", "=", "val_loss", ",", "\n", "res", "[", "'epoch'", "]", "=", "kvs", "[", "'cur_epoch'", "]", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Train loss: {train_loss:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation loss: {val_loss:.5f}'", ")", "\n", "boardlogger", ".", "add_scalars", "(", "'Losses'", ",", "{", "'train'", ":", "train_loss", ",", "'val'", ":", "val_loss", "}", ",", "kvs", "[", "'cur_epoch'", "]", ")", "\n", "\n", "if", "not", "kvs", "[", "'args'", "]", ".", "predict_age_sex_bmi", ":", "\n", "        ", "_", ",", "ids", ",", "gt", ",", "preds", "=", "val_res", "\n", "if", "kvs", "[", "'args'", "]", ".", "target_var", "==", "'SEX'", ":", "\n", "            ", "val_auc", "=", "roc_auc_score", "(", "gt", ".", "astype", "(", "int", ")", ",", "preds", ")", "\n", "res", "[", "'sex_auc'", "]", "=", "val_auc", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation AUC: {val_auc:.5f}'", ")", "\n", "boardlogger", ".", "add_scalars", "(", "'AUC sex'", ",", "{", "'val'", ":", "res", "[", "'sex_auc'", "]", "}", ",", "kvs", "[", "'cur_epoch'", "]", ")", "\n", "", "else", ":", "\n", "            ", "val_mse", "=", "mean_squared_error", "(", "gt", ",", "preds", ")", "\n", "val_mae", "=", "median_absolute_error", "(", "gt", ",", "preds", ")", "\n", "res", "[", "f\"{kvs['args'].target_var}_mse\"", "]", "=", "val_mse", "\n", "res", "[", "f\"{kvs['args'].target_var}_mae\"", "]", "=", "val_mae", "\n", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation mae: {val_mae:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation mse: {val_mse:.5f}'", ")", "\n", "\n", "boardlogger", ".", "add_scalars", "(", "f\"MSE [{kvs['args'].target_var}]\"", ",", "{", "'val'", ":", "val_mse", "}", ",", "\n", "kvs", "[", "'cur_epoch'", "]", ")", "\n", "boardlogger", ".", "add_scalars", "(", "f\"MAE [{kvs['args'].target_var}]\"", ",", "{", "'val'", ":", "val_mae", "}", ",", "\n", "kvs", "[", "'cur_epoch'", "]", ")", "\n", "", "", "else", ":", "\n", "        ", "_", ",", "ids", ",", "gt_age", ",", "preds_age", ",", "gt_sex", ",", "preds_sex", ",", "gt_bmi", ",", "preds_bmi", "=", "val_res", "\n", "val_mse_age", "=", "mean_squared_error", "(", "gt_age", ",", "preds_age", ")", "\n", "val_mae_age", "=", "median_absolute_error", "(", "gt_age", ",", "preds_age", ")", "\n", "val_sex_auc", "=", "roc_auc_score", "(", "gt_sex", ".", "astype", "(", "int", ")", ",", "preds_sex", ")", "\n", "val_mse_bmi", "=", "mean_squared_error", "(", "gt_bmi", ",", "preds_bmi", ")", "\n", "val_mae_bmi", "=", "median_absolute_error", "(", "gt_bmi", ",", "preds_bmi", ")", "\n", "\n", "res", "[", "\"AGE_mse\"", "]", "=", "val_mse_age", "\n", "res", "[", "\"AGE_mae\"", "]", "=", "val_mae_age", "\n", "\n", "res", "[", "\"BMI_mse\"", "]", "=", "val_mse_bmi", "\n", "res", "[", "\"BMI_mae\"", "]", "=", "val_mae_bmi", "\n", "\n", "res", "[", "\"SEX_auc\"", "]", "=", "val_sex_auc", "\n", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation mae [Age]: {val_mae_age:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation mse [Age]: {val_mse_age:.5f}'", ")", "\n", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation val_auc [Sex]: {val_sex_auc:.5f}'", ")", "\n", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation mae [BMI]: {val_mae_bmi:.5f}'", ")", "\n", "print", "(", "colored", "(", "'====> '", ",", "'green'", ")", "+", "f'Validation mse [BMI]: {val_mse_bmi:.5f}'", ")", "\n", "\n", "", "kvs", ".", "update", "(", "f'losses_fold_[{kvs[\"cur_fold\"]}]'", ",", "{", "'epoch'", ":", "kvs", "[", "'cur_epoch'", "]", ",", "\n", "'train_loss'", ":", "train_loss", ",", "\n", "'val_loss'", ":", "val_loss", "}", ")", "\n", "\n", "kvs", ".", "update", "(", "f'val_metrics_fold_[{kvs[\"cur_fold\"]}]'", ",", "res", ")", "\n", "\n", "kvs", ".", "save_pkl", "(", "os", ".", "path", ".", "join", "(", "kvs", "[", "'args'", "]", ".", "snapshots", ",", "kvs", "[", "'snapshot_name'", "]", ",", "'session.pkl'", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.stacking.init_first_level_data_for_stacking": [[7, 45], ["pandas.read_pickle", "pd.read_pickle.ID.values.astype", "pandas.read_csv", "pandas.merge", "pandas.merge", "pd.merge.SEX.values.astype", "pd.merge.INJ.values.astype", "pd.merge.SURG.values.astype", "numpy.load", "pandas.DataFrame", "pandas.merge", "os.path.join", "os.path.join", "train_folds.append", "os.path.join", "oaprogression.training.baselines.init_metadata_test", "list", "list", "map", "map", "x.split", "x.split"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.baselines.init_metadata_test"], ["def", "init_first_level_data_for_stacking", "(", "args", ",", "session_snapshot", ")", ":", "\n", "    ", "oof_preds", "=", "pd", ".", "read_pickle", "(", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "'oof_results.pkl'", ")", ")", "\n", "oof_preds", ".", "ID", "=", "oof_preds", ".", "ID", ".", "values", ".", "astype", "(", "int", ")", "\n", "metadata_clinical", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "args", ".", "metadata_root", ",", "'OAI_participants.csv'", ")", ")", "\n", "metadata", "=", "session_snapshot", "[", "'metadata'", "]", "[", "0", "]", "\n", "\n", "metadata", "=", "pd", ".", "merge", "(", "metadata", ",", "metadata_clinical", ",", "on", "=", "(", "'ID'", ",", "'Side'", ")", ")", "\n", "metadata", "=", "pd", ".", "merge", "(", "metadata", ",", "oof_preds", ",", "on", "=", "(", "'ID'", ",", "'Side'", ")", ")", "\n", "metadata", ".", "SEX", "=", "metadata", ".", "SEX", ".", "values", ".", "astype", "(", "int", ")", "\n", "metadata", ".", "INJ", "=", "metadata", ".", "INJ", ".", "values", ".", "astype", "(", "int", ")", "\n", "metadata", ".", "SURG", "=", "metadata", ".", "SURG", ".", "values", ".", "astype", "(", "int", ")", "\n", "metadata", "[", "'prog_pred'", "]", "=", "metadata", ".", "prog_pred_1", "+", "metadata", ".", "prog_pred_2", "\n", "\n", "train_folds", "=", "[", "]", "\n", "for", "train_idx", ",", "val_idx", "in", "session_snapshot", "[", "'cv_split_all_folds'", "]", "[", "0", "]", ":", "\n", "        ", "train_folds", ".", "append", "(", "(", "metadata", ".", "iloc", "[", "train_idx", "]", ",", "metadata", ".", "iloc", "[", "val_idx", "]", ")", ")", "\n", "\n", "", "data", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "save_dir", ",", "'results.npz'", ")", ")", "\n", "\n", "preds_prog", "=", "data", "[", "'preds_prog'", "]", "\n", "preds_kl", "=", "data", "[", "'preds_kl'", "]", "\n", "ids", "=", "data", "[", "'ids'", "]", "\n", "res", "=", "pd", ".", "DataFrame", "(", "data", "=", "{", "'ID'", ":", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "split", "(", "'_'", ")", "[", "0", "]", ",", "ids", ")", ")", ",", "\n", "'Side'", ":", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "split", "(", "'_'", ")", "[", "1", "]", ",", "ids", ")", ")", ",", "\n", "'prog_pred_0'", ":", "preds_prog", "[", ":", ",", "0", "]", ",", "\n", "'prog_pred_1'", ":", "preds_prog", "[", ":", ",", "1", "]", ",", "\n", "'prog_pred_2'", ":", "preds_prog", "[", ":", ",", "2", "]", ",", "\n", "'kl_pred_0'", ":", "preds_kl", "[", ":", ",", "0", "]", ",", "\n", "'kl_pred_1'", ":", "preds_kl", "[", ":", ",", "1", "]", ",", "\n", "'kl_pred_2'", ":", "preds_kl", "[", ":", ",", "2", "]", ",", "\n", "'kl_pred_3'", ":", "preds_kl", "[", ":", ",", "3", "]", ",", "\n", "}", ")", "\n", "\n", "metadata_test", "=", "pd", ".", "merge", "(", "res", ",", "init_metadata_test", "(", "args", ")", ",", "on", "=", "(", "'ID'", ",", "'Side'", ")", ")", "\n", "metadata_test", ".", "Progressor", "=", "metadata_test", ".", "Progressor", ">", "0", "\n", "metadata_test", "[", "'prog_pred'", "]", "=", "metadata_test", ".", "prog_pred_2", "+", "metadata_test", ".", "prog_pred_1", "\n", "\n", "return", "train_folds", ",", "metadata_test", "", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.args.parse_args": [[4, 38], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.args.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset_root'", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--metadata_root'", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--oai_data_root'", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--snapshots'", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--logs'", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--backbone'", ",", "type", "=", "str", ",", "choices", "=", "[", "'se_resnet50'", ",", "\n", "'inceptionv4'", ",", "\n", "'se_resnext50_32x4d'", ",", "\n", "'se_resnext101_32x4d'", "\n", "]", ",", "default", "=", "'se_resnext50_32x4d'", ")", "\n", "parser", ".", "add_argument", "(", "'--optimizer'", ",", "type", "=", "str", ",", "choices", "=", "[", "'adam'", ",", "'sgd'", "]", ",", "default", "=", "'adam'", ")", "\n", "parser", ".", "add_argument", "(", "'--bs'", ",", "type", "=", "int", ",", "default", "=", "64", ")", "\n", "parser", ".", "add_argument", "(", "'--val_bs'", ",", "type", "=", "int", ",", "default", "=", "128", ")", "\n", "parser", ".", "add_argument", "(", "'--target_var'", ",", "type", "=", "str", ",", "choices", "=", "[", "'AGE'", ",", "'SEX'", ",", "'BMI'", "]", ",", "default", "=", "'AGE'", ")", "\n", "parser", ".", "add_argument", "(", "'--predict_age_sex_bmi'", ",", "type", "=", "bool", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--n_folds'", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "'--subsample_train'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--fold'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--n_epochs'", ",", "type", "=", "int", ",", "default", "=", "20", ")", "\n", "parser", ".", "add_argument", "(", "'--n_threads'", ",", "type", "=", "int", ",", "default", "=", "12", ")", "\n", "parser", ".", "add_argument", "(", "'--loss_weight'", ",", "type", "=", "float", ",", "default", "=", "0.5", ")", "\n", "parser", ".", "add_argument", "(", "'--unfreeze_epoch'", ",", "type", "=", "int", ",", "default", "=", "2", ")", "\n", "parser", ".", "add_argument", "(", "'--dropout_rate'", ",", "type", "=", "float", ",", "default", "=", "0.5", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_drop'", ",", "default", "=", "[", "15", ",", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--clip_grad'", ",", "type", "=", "bool", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--clip_grad_norm'", ",", "type", "=", "float", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--wd'", ",", "type", "=", "float", ",", "default", "=", "1e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "123456", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.__new__": [[11, 15], ["object.__new__"], "methods", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.__new__"], ["def", "__new__", "(", "cls", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "not", "cls", ".", "_instance", ":", "\n", "            ", "cls", ".", "_instance", "=", "super", "(", "GlobalKVS", ",", "cls", ")", ".", "__new__", "(", "cls", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "return", "cls", ".", "_instance", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update": [[16, 45], ["isinstance", "dtype", "_kvs.GlobalKVS._d[].append", "isinstance", "str", "_kvs.GlobalKVS._d[].update", "datetime.datetime.now", "str", "str", "datetime.datetime.now", "str", "datetime.datetime.now", "datetime.datetime.now"], "methods", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update"], ["", "def", "update", "(", "self", ",", "tag", ",", "value", ",", "dtype", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Updates the internal state of the logger.\n\n        Parameters\n        ----------\n        tag : str\n            Tag, of the variable, which we log.\n        value : object\n            The value to be logged\n        dtype :\n            Container which is used to store the values under the tag\n\n        Returns\n        -------\n\n        \"\"\"", "\n", "if", "tag", "not", "in", "self", ".", "_d", ":", "\n", "            ", "if", "dtype", "is", "None", ":", "\n", "                ", "self", ".", "_d", "[", "tag", "]", "=", "(", "value", ",", "str", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "_d", "[", "tag", "]", "=", "dtype", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "isinstance", "(", "self", ".", "_d", "[", "tag", "]", ",", "list", ")", ":", "\n", "                ", "self", ".", "_d", "[", "tag", "]", ".", "append", "(", "(", "value", ",", "str", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ")", ")", ")", "\n", "", "elif", "isinstance", "(", "self", ".", "_d", "[", "tag", "]", ",", "dict", ")", ":", "\n", "                ", "self", ".", "_d", "[", "tag", "]", ".", "update", "(", "(", "value", ",", "str", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "_d", "[", "tag", "]", "=", "(", "value", ",", "str", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.__getitem__": [[46, 51], ["isinstance"], "methods", ["None"], ["", "", "", "def", "__getitem__", "(", "self", ",", "tag", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "self", ".", "_d", "[", "tag", "]", ",", "(", "list", ",", "dict", ")", ")", ":", "\n", "            ", "return", "self", ".", "_d", "[", "tag", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "_d", "[", "tag", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.tag_ts": [[52, 54], ["None"], "methods", ["None"], ["", "", "def", "tag_ts", "(", "self", ",", "tag", ")", ":", "\n", "        ", "return", "self", ".", "_d", "[", "tag", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.save_pkl": [[55, 58], ["open", "pickle.dump"], "methods", ["None"], ["", "def", "save_pkl", "(", "self", ",", "filename", ")", ":", "\n", "        ", "with", "open", "(", "filename", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "self", ".", "_d", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.git_info": [[61, 85], ["_kvs.git_info._minimal_ext_cmd"], "function", ["None"], ["", "", "", "def", "git_info", "(", ")", ":", "\n", "    ", "def", "_minimal_ext_cmd", "(", "cmd", ")", ":", "\n", "# construct minimal environment", "\n", "        ", "env", "=", "{", "}", "\n", "for", "k", "in", "[", "'SYSTEMROOT'", ",", "'PATH'", "]", ":", "\n", "            ", "v", "=", "os", ".", "environ", ".", "get", "(", "k", ")", "\n", "if", "v", "is", "not", "None", ":", "\n", "                ", "env", "[", "k", "]", "=", "v", "\n", "# LANGUAGE is used on win32", "\n", "", "", "env", "[", "'LANGUAGE'", "]", "=", "'C'", "\n", "env", "[", "'LANG'", "]", "=", "'C'", "\n", "env", "[", "'LC_ALL'", "]", "=", "'C'", "\n", "return", "subprocess", ".", "Popen", "(", "cmd", ",", "stdout", "=", "subprocess", ".", "PIPE", ",", "env", "=", "env", ")", ".", "communicate", "(", ")", "[", "0", "]", "\n", "\n", "", "try", ":", "\n", "        ", "out", "=", "_minimal_ext_cmd", "(", "[", "'git'", ",", "'rev-parse'", ",", "'HEAD'", "]", ")", "\n", "git_revision", "=", "out", ".", "strip", "(", ")", ".", "decode", "(", "'ascii'", ")", "\n", "\n", "out", "=", "_minimal_ext_cmd", "(", "[", "'git'", ",", "'rev-parse'", ",", "'--abbrev-ref'", ",", "'HEAD'", "]", ")", "\n", "git_branch", "=", "out", ".", "strip", "(", ")", ".", "decode", "(", "'ascii'", ")", "\n", "", "except", "OSError", ":", "\n", "        ", "return", "None", "\n", "\n", "", "return", "git_branch", ",", "git_revision", "\n", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.most.build_img_progression_meta": [[11, 119], ["glob.glob", "oaprogression.metadata.utils.read_sas7bdata_pd().fillna", "oaprogression.metadata.utils.read_sas7bdata_pd().fillna", "pandas.merge", "pd.merge.set_index", "tkr_l.set_index", "tkr_r.set_index", "tqdm.tqdm", "pandas.DataFrame", "pd.DataFrame.Progressor.copy", "pd.DataFrame.apply", "os.path.join", "[].lower", "print", "oaprogression.metadata.utils.read_sas7bdata_pd", "pandas.merge", "set", "oaprogression.metadata.utils.read_sas7bdata_pd", "oaprogression.metadata.utils.read_sas7bdata_pd", "pd.merge.MOSTID.values.tolist", "len", "os.path.join", "os.path.join", "tmp_l.append", "tmp_r.append", "cv2.imread", "len", "cv2.imread", "len", "file.split", "os.path.join", "sum", "os.path.join", "sum", "list", "progressors.append", "list", "progressors.append", "map", "non_progressors.append", "map", "non_progressors.append"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.read_sas7bdata_pd", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.read_sas7bdata_pd", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.read_sas7bdata_pd"], ["def", "build_img_progression_meta", "(", "most_src_dir", ",", "img_dir", ")", ":", "\n", "# 0 - no progression observed (up to 84 months)", "\n", "# 1 - progression earlier than 60 months", "\n", "# 2 - progression later than 60 and earlier than 84 months", "\n", "    ", "mapping", "=", "{", "0", ":", "0", ",", "1", ":", "1", ",", "2", ":", "1", ",", "3", ":", "2", ",", "4", ":", "2", ",", "5", ":", "2", "}", "\n", "\n", "files", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "most_src_dir", ",", "'*enroll.sas7bdat'", ")", ")", "\n", "files_dict", "=", "{", "file", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "lower", "(", ")", ":", "file", "for", "file", "in", "files", "}", "\n", "data", "=", "read_sas7bdata_pd", "(", "os", ".", "path", ".", "join", "(", "most_src_dir", ",", "'mostv01235xray.sas7bdat'", ")", ")", ".", "fillna", "(", "-", "1", ")", "\n", "most_outcomes", "=", "read_sas7bdata_pd", "(", "os", ".", "path", ".", "join", "(", "most_src_dir", ",", "'mostoutcomes.sas7bdat'", ")", ")", ".", "fillna", "(", "-", "1", ")", "\n", "ids_alive", "=", "most_outcomes", "[", "most_outcomes", ".", "V99EDINDEX", "==", "-", "1", "]", "[", "[", "'MOSTID'", "]", "]", "\n", "# Excluding the people who died", "\n", "data", "=", "pd", ".", "merge", "(", "ids_alive", ",", "data", ")", "\n", "# Helpful for further i", "\n", "tkr_l", "=", "most_outcomes", "[", "most_outcomes", "[", "'V99ELKRINDEX'", "]", ">", "0", "]", "[", "[", "'MOSTID'", ",", "'V99ELKRINDEX'", "]", "]", "\n", "tkr_r", "=", "most_outcomes", "[", "most_outcomes", "[", "'V99ERKRINDEX'", "]", ">", "0", "]", "[", "[", "'MOSTID'", ",", "'V99ERKRINDEX'", "]", "]", "\n", "\n", "data", ".", "set_index", "(", "'MOSTID'", ",", "inplace", "=", "True", ")", "\n", "tkr_l", ".", "set_index", "(", "'MOSTID'", ",", "inplace", "=", "True", ")", "\n", "tkr_r", ".", "set_index", "(", "'MOSTID'", ",", "inplace", "=", "True", ")", "\n", "\n", "enrolled", "=", "{", "}", "\n", "for", "visit", "in", "[", "0", ",", "1", ",", "2", ",", "3", ",", "5", "]", ":", "\n", "        ", "print", "(", "f'==> Reading MOST {visit} visit'", ")", "\n", "ds", "=", "read_sas7bdata_pd", "(", "files_dict", "[", "f'mostv{visit}enroll.sas7bdat'", "]", ")", "\n", "ds", "=", "ds", "[", "ds", "[", "'V{}PA'", ".", "format", "(", "visit", ")", "]", "==", "1", "]", "# Filtering out the cases when X-rays wern't taken", "\n", "ds", "=", "pd", ".", "merge", "(", "ids_alive", ",", "ds", ")", "\n", "id_set", "=", "set", "(", "ds", ".", "MOSTID", ".", "values", ".", "tolist", "(", ")", ")", "\n", "enrolled", "[", "visit", "]", "=", "id_set", "\n", "\n", "", "last_follow_up", "=", "enrolled", "[", "5", "]", "\n", "\n", "progressors", "=", "[", "]", "\n", "non_progressors", "=", "[", "]", "\n", "\n", "for", "ID", "in", "tqdm", "(", "enrolled", "[", "0", "]", ",", "total", "=", "len", "(", "enrolled", "[", "0", "]", ")", ",", "desc", "=", "'Processing MOST:'", ")", ":", "\n", "        ", "tmp_l", "=", "[", "]", "\n", "tmp_r", "=", "[", "]", "\n", "\n", "subj", "=", "data", ".", "loc", "[", "ID", "]", "\n", "KL_bl_l", "=", "subj", "[", "'V{0}X{1}{2}'", ".", "format", "(", "0", ",", "'L'", ",", "'KL'", ")", "]", "\n", "KL_bl_r", "=", "subj", "[", "'V{0}X{1}{2}'", ".", "format", "(", "0", ",", "'R'", ",", "'KL'", ")", "]", "\n", "for", "visit_id", "in", "[", "1", ",", "2", ",", "3", ",", "5", "]", ":", "\n", "            ", "if", "ID", "in", "enrolled", "[", "visit_id", "]", ":", "\n", "                ", "KL_l", "=", "subj", "[", "'V{0}X{1}{2}'", ".", "format", "(", "visit_id", ",", "'L'", ",", "'KL'", ")", "]", "\n", "KL_r", "=", "subj", "[", "'V{0}X{1}{2}'", ".", "format", "(", "visit_id", ",", "'R'", ",", "'KL'", ")", "]", "\n", "\n", "tmp_l", ".", "append", "(", "[", "ID", ",", "'L'", ",", "KL_bl_l", ",", "KL_l", ",", "visit_id", "]", ")", "\n", "tmp_r", ".", "append", "(", "[", "ID", ",", "'R'", ",", "KL_bl_r", ",", "KL_r", ",", "visit_id", "]", ")", "\n", "\n", "# KL4 subjects are end-stage and do not progress. TKR can be made by other reasons", "\n", "", "", "if", "0", "<=", "KL_bl_l", "<", "4", "and", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "f'{ID}_00_L.png'", ")", ")", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "tmp_l", ")", ">", "0", ":", "\n", "# We exclude missing values and also \"grade 9\"", "\n", "                ", "if", "sum", "(", "list", "(", "map", "(", "lambda", "x", ":", "x", "[", "3", "]", "==", "-", "1", "or", "x", "[", "3", "]", "==", "9", ",", "tmp_l", ")", ")", ")", "==", "0", ":", "\n", "                    ", "prog", "=", "None", "\n", "# going through the follow-up grades", "\n", "for", "point", "in", "tmp_l", ":", "\n", "# if we notice a progression case, we stop looking and store the", "\n", "# visit id where we stopped", "\n", "                        ", "if", "KL_bl_l", "<", "point", "[", "-", "2", "]", "<", "9", "and", "point", "[", "-", "2", "]", "!=", "1", "and", "point", "[", "-", "2", "]", "!=", "1.9", ":", "\n", "# This additional check is needed,", "\n", "# because 8 can mean that the image could have been bad", "\n", "                            ", "if", "point", "[", "-", "2", "]", "==", "8", "and", "ID", "in", "tkr_l", ".", "index", ":", "\n", "                                ", "if", "tkr_l", ".", "loc", "[", "ID", "]", ".", "V99ELKRINDEX", "==", "point", "[", "-", "1", "]", ":", "\n", "                                    ", "prog", "=", "point", "\n", "break", "\n", "", "", "else", ":", "\n", "                                ", "prog", "=", "point", "\n", "break", "\n", "# Checking whether the case is a progressor", "\n", "", "", "", "if", "prog", "is", "None", ":", "\n", "# To ignore the patients who dropped during the study, we", "\n", "# make sure that they were examined at the last follow-up", "\n", "                        ", "if", "ID", "in", "last_follow_up", "and", "subj", "[", "'V{0}X{1}{2}'", ".", "format", "(", "5", ",", "'R'", ",", "'KL'", ")", "]", "<", "5", ":", "\n", "                            ", "non_progressors", ".", "append", "(", "[", "ID", ",", "'L'", ",", "KL_bl_l", ",", "0", ",", "0", "]", ")", "\n", "", "", "else", ":", "\n", "                        ", "progressors", ".", "append", "(", "[", "ID", ",", "'L'", ",", "KL_bl_l", ",", "prog", "[", "-", "2", "]", "-", "KL_bl_l", ",", "prog", "[", "-", "1", "]", "]", ")", "\n", "\n", "# Doing the same thing for the right knee", "\n", "", "", "", "", "if", "0", "<=", "KL_bl_r", "<", "4", "and", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "f'{ID}_00_R.png'", ")", ")", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "tmp_r", ")", ">", "0", ":", "\n", "                ", "if", "sum", "(", "list", "(", "map", "(", "lambda", "x", ":", "x", "[", "3", "]", "==", "-", "1", "or", "x", "[", "3", "]", "==", "9", ",", "tmp_r", ")", ")", ")", "==", "0", ":", "\n", "                    ", "prog", "=", "None", "\n", "for", "point", "in", "tmp_r", ":", "\n", "# if we notice a progression case, we stop looking and store the", "\n", "# visit id where we stopped", "\n", "                        ", "if", "KL_bl_r", "<", "point", "[", "-", "2", "]", "<", "9", "and", "point", "[", "-", "2", "]", "!=", "1", "and", "point", "[", "-", "2", "]", "!=", "1.9", ":", "\n", "# This additional check is needed,", "\n", "# because 8 can mean that the image could have been bad", "\n", "                            ", "if", "point", "[", "-", "2", "]", "==", "8", "and", "ID", "in", "tkr_r", ".", "index", ":", "\n", "                                ", "if", "tkr_r", ".", "loc", "[", "ID", "]", ".", "V99ERKRINDEX", "==", "point", "[", "-", "1", "]", ":", "\n", "                                    ", "prog", "=", "point", "\n", "break", "\n", "", "", "else", ":", "\n", "                                ", "prog", "=", "point", "\n", "break", "\n", "", "", "", "if", "prog", "is", "None", ":", "\n", "                        ", "if", "ID", "in", "last_follow_up", "and", "subj", "[", "'V{0}X{1}{2}'", ".", "format", "(", "5", ",", "'R'", ",", "'KL'", ")", "]", "<", "5", ":", "\n", "                            ", "non_progressors", ".", "append", "(", "[", "ID", ",", "'R'", ",", "KL_bl_r", ",", "0", ",", "0", "]", ")", "\n", "", "", "else", ":", "\n", "                        ", "progressors", ".", "append", "(", "[", "ID", ",", "'R'", ",", "KL_bl_r", ",", "prog", "[", "-", "2", "]", "-", "KL_bl_r", ",", "prog", "[", "-", "1", "]", "]", ")", "\n", "\n", "", "", "", "", "", "progr_data", "=", "pd", ".", "DataFrame", "(", "progressors", "+", "non_progressors", ",", "\n", "columns", "=", "[", "'ID'", ",", "'Side'", ",", "'KL'", ",", "'Prog_increase'", ",", "'Progressor'", "]", ")", "\n", "progr_data", "[", "'Progressor_visit'", "]", "=", "progr_data", ".", "Progressor", ".", "copy", "(", ")", "\n", "progr_data", ".", "Progressor", "=", "progr_data", ".", "apply", "(", "lambda", "x", ":", "mapping", "[", "x", ".", "Progressor", "]", ",", "1", ")", "\n", "return", "progr_data", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.most.build_clinical": [[121, 150], ["glob.glob", "oaprogression.metadata.utils.read_sas7bdata_pd", "pd.concat.copy", "pd.concat.copy", "pandas.concat", "os.path.join", "[].lower", "file.split"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.read_sas7bdata_pd"], ["", "def", "build_clinical", "(", "most_src_dir", ")", ":", "\n", "    ", "files", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "most_src_dir", ",", "'*enroll.sas7bdat'", ")", ")", "\n", "files_dict", "=", "{", "file", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "lower", "(", ")", ":", "file", "for", "file", "in", "files", "}", "\n", "clinical_data_most", "=", "read_sas7bdata_pd", "(", "files_dict", "[", "'mostv0enroll.sas7bdat'", "]", ")", "\n", "clinical_data_most", "[", "'ID'", "]", "=", "clinical_data_most", ".", "MOSTID", "\n", "clinical_data_most", "[", "'BMI'", "]", "=", "clinical_data_most", "[", "'V0BMI'", "]", "\n", "\n", "clinical_data_most_left", "=", "clinical_data_most", ".", "copy", "(", ")", "\n", "clinical_data_most_right", "=", "clinical_data_most", ".", "copy", "(", ")", "\n", "\n", "# Making side-wise metadata", "\n", "clinical_data_most_left", "[", "'Side'", "]", "=", "'L'", "\n", "clinical_data_most_right", "[", "'Side'", "]", "=", "'R'", "\n", "\n", "# Injury (ever had)", "\n", "clinical_data_most_left", "[", "'INJ'", "]", "=", "clinical_data_most_left", "[", "'V0LAL'", "]", "\n", "clinical_data_most_right", "[", "'INJ'", "]", "=", "clinical_data_most_right", "[", "'V0LAR'", "]", "\n", "\n", "# Surgery (ever had)", "\n", "clinical_data_most_left", "[", "'SURG'", "]", "=", "clinical_data_most_left", "[", "'V0SURGL'", "]", "\n", "clinical_data_most_right", "[", "'SURG'", "]", "=", "clinical_data_most_right", "[", "'V0SURGR'", "]", "\n", "\n", "# Total WOMAC score", "\n", "clinical_data_most_left", "[", "'WOMAC'", "]", "=", "clinical_data_most_left", "[", "'V0WOTOTL'", "]", "\n", "clinical_data_most_right", "[", "'WOMAC'", "]", "=", "clinical_data_most_right", "[", "'V0WOTOTR'", "]", "\n", "\n", "clinical_data_most", "=", "pd", ".", "concat", "(", "(", "clinical_data_most_left", ",", "clinical_data_most_right", ")", ")", "\n", "\n", "return", "clinical_data_most", "[", "[", "'ID'", ",", "'Side'", ",", "'AGE'", ",", "'SEX'", ",", "'BMI'", ",", "'INJ'", ",", "'SURG'", ",", "'WOMAC'", "]", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.oai.build_img_progression_meta": [[18, 92], ["enumerate", "set", "range", "set", "tqdm.tqdm", "tqdm.tqdm", "pandas.DataFrame", "pd.DataFrame.apply", "print", "oaprogression.metadata.utils.read_sas7bdata_pd", "oaprogression.metadata.utils.read_sas7bdata_pd.drop_duplicates", "oaprogression.metadata.utils.read_sas7bdata_pd.fillna", "KL_files.append", "KL_files[].ID.values.astype().tolist", "len", "KL_files[].set_index", "KL_files[].iterrows", "range", "KL_files[].iterrows", "non_progressors.append", "os.path.join", "int", "len", "follow_up.index.isin", "follow_up.index.isin.any", "int", "KL_files[].ID.values.astype", "int", "int", "int", "int", "int", "c.upper", "progressors.append", "set.update", "int", "int", "int", "progressors.append", "set.update", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.read_sas7bdata_pd", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update"], ["def", "build_img_progression_meta", "(", "oai_src_dir", ")", ":", "\n", "    ", "visits", "=", "[", "'00'", ",", "'12'", ",", "'24'", ",", "'36'", ",", "'72'", ",", "'96'", "]", "\n", "exam_codes", "=", "[", "'00'", ",", "'01'", ",", "'03'", ",", "'05'", ",", "'08'", ",", "'10'", "]", "\n", "# 0 - no progression within 84 months range", "\n", "# 1 - progression earlier than 60 months", "\n", "# 2 - progression later than 60 months", "\n", "mapping_prog", "=", "{", "0", ":", "0", ",", "1", ":", "1", ",", "2", ":", "1", ",", "3", ":", "1", ",", "4", ":", "2", ",", "5", ":", "2", "}", "\n", "KL_files", "=", "[", "]", "\n", "for", "i", ",", "visit", "in", "enumerate", "(", "visits", ")", ":", "\n", "        ", "print", "(", "f'==> Reading OAI {visit} visit'", ")", "\n", "meta", "=", "read_sas7bdata_pd", "(", "os", ".", "path", ".", "join", "(", "oai_src_dir", ",", "\n", "'Semi-Quant Scoring_SAS'", ",", "\n", "f'kxr_sq_bu{exam_codes[i]}.sas7bdat'", ")", ")", "\n", "# Dropping the data from multiple projects", "\n", "meta", ".", "drop_duplicates", "(", "subset", "=", "[", "'ID'", ",", "'SIDE'", "]", ",", "inplace", "=", "True", ")", "\n", "meta", ".", "fillna", "(", "-", "1", ",", "inplace", "=", "True", ")", "\n", "for", "c", "in", "meta", ".", "columns", ":", "\n", "            ", "meta", "[", "c", ".", "upper", "(", ")", "]", "=", "meta", "[", "c", "]", "\n", "# Removing the TKR and KL4 at the baseline", "\n", "", "if", "i", "==", "0", ":", "\n", "            ", "meta", "=", "meta", "[", "meta", "[", "f'V{exam_codes[i]}XRKL'", "]", "!=", "-", "1", "]", "\n", "meta", "=", "meta", "[", "meta", "[", "f'V{exam_codes[i]}XRKL'", "]", "<", "4", "]", "\n", "", "meta", "=", "meta", "[", "meta", "[", "f'V{exam_codes[i]}XRKL'", "]", "<=", "4", "]", "\n", "\n", "meta", "[", "'KL'", "]", "=", "meta", "[", "f'V{exam_codes[i]}XRKL'", "]", "\n", "KL_files", ".", "append", "(", "meta", "[", "[", "'ID'", ",", "'SIDE'", ",", "'KL'", "]", "]", ")", "\n", "\n", "", "id_set_last_fu", "=", "set", "(", "KL_files", "[", "-", "1", "]", ".", "ID", ".", "values", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "# Subjects present at all FU", "\n", "\n", "for", "follow_up_id", "in", "range", "(", "1", ",", "len", "(", "KL_files", ")", ")", ":", "\n", "        ", "KL_files", "[", "follow_up_id", "]", "=", "KL_files", "[", "follow_up_id", "]", ".", "set_index", "(", "[", "'ID'", ",", "'SIDE'", "]", ")", "\n", "\n", "# looking for progressors", "\n", "", "progressors", "=", "[", "]", "\n", "identified_prog", "=", "set", "(", ")", "\n", "sides", "=", "[", "None", ",", "'R'", ",", "'L'", "]", "\n", "for", "_", ",", "knee", "in", "tqdm", "(", "KL_files", "[", "0", "]", ".", "iterrows", "(", ")", ",", "total", "=", "KL_files", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "desc", "=", "'Processing OAI:'", ")", ":", "\n", "        ", "if", "int", "(", "knee", ".", "ID", ")", "in", "identified_prog", ":", "\n", "            ", "if", "identified_prog", "[", "int", "(", "knee", ".", "ID", ")", "]", "==", "sides", "[", "int", "(", "knee", ".", "SIDE", ")", "]", ":", "\n", "                ", "continue", "\n", "", "", "for", "follow_up_id", "in", "range", "(", "1", ",", "len", "(", "KL_files", ")", ")", ":", "\n", "            ", "follow_up", "=", "KL_files", "[", "follow_up_id", "]", "\n", "ind", "=", "follow_up", ".", "index", ".", "isin", "(", "[", "(", "knee", ".", "ID", ",", "knee", ".", "SIDE", ")", "]", ")", "\n", "# If the patient is present during the follow-up", "\n", "if", "ind", ".", "any", "(", ")", ":", "\n", "                ", "old_kl", "=", "int", "(", "knee", ".", "KL", ")", "\n", "new_kl", "=", "int", "(", "follow_up", "[", "ind", "]", ".", "KL", ".", "values", "[", "0", "]", ")", "\n", "# Skipping the ones who were identified as progressors already", "\n", "if", "(", "int", "(", "knee", ".", "ID", ")", ",", "sides", "[", "int", "(", "knee", ".", "SIDE", ")", "]", ")", "in", "identified_prog", ":", "\n", "                    ", "continue", "\n", "", "if", "0", "<=", "new_kl", "<=", "4", ":", "\n", "# If not TKR", "\n", "                    ", "if", "new_kl", "!=", "1", "and", "new_kl", ">", "old_kl", ":", "\n", "                        ", "progressors", ".", "append", "(", "[", "int", "(", "knee", ".", "ID", ")", ",", "sides", "[", "int", "(", "knee", ".", "SIDE", ")", "]", ",", "old_kl", ",", "new_kl", "-", "old_kl", ",", "follow_up_id", "]", ")", "\n", "identified_prog", ".", "update", "(", "{", "(", "int", "(", "knee", ".", "ID", ")", ",", "sides", "[", "int", "(", "knee", ".", "SIDE", ")", "]", ")", ",", "}", ")", "\n", "", "", "else", ":", "\n", "# Adding only the TKR cases here", "\n", "# We will denote it as 5", "\n", "                    ", "progressors", ".", "append", "(", "[", "int", "(", "knee", ".", "ID", ")", ",", "sides", "[", "int", "(", "knee", ".", "SIDE", ")", "]", ",", "old_kl", ",", "5", "-", "old_kl", ",", "follow_up_id", "]", ")", "\n", "identified_prog", ".", "update", "(", "{", "(", "int", "(", "knee", ".", "ID", ")", ",", "sides", "[", "int", "(", "knee", ".", "SIDE", ")", "]", ")", ",", "}", ")", "\n", "\n", "# Looking for non-progressors", "\n", "", "", "", "", "non_progressors", "=", "[", "]", "\n", "for", "_", ",", "knee", "in", "tqdm", "(", "KL_files", "[", "0", "]", ".", "iterrows", "(", ")", ",", "total", "=", "KL_files", "[", "0", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "if", "(", "int", "(", "knee", ".", "ID", ")", ",", "sides", "[", "int", "(", "knee", ".", "SIDE", ")", "]", ")", "in", "identified_prog", ":", "\n", "            ", "continue", "\n", "", "if", "int", "(", "knee", ".", "ID", ")", "not", "in", "id_set_last_fu", ":", "\n", "            ", "continue", "\n", "\n", "", "non_progressors", ".", "append", "(", "[", "int", "(", "knee", ".", "ID", ")", ",", "sides", "[", "int", "(", "knee", ".", "SIDE", ")", "]", ",", "int", "(", "knee", ".", "KL", ")", ",", "0", ",", "0", "]", ")", "\n", "\n", "", "data", "=", "pd", ".", "DataFrame", "(", "data", "=", "progressors", "+", "non_progressors", ",", "columns", "=", "[", "'ID'", ",", "'Side'", ",", "'KL'", ",", "'Prog_increase'", ",", "'Progressor'", "]", ")", "\n", "data", ".", "Progressor", "=", "data", ".", "apply", "(", "lambda", "x", ":", "mapping_prog", "[", "x", ".", "Progressor", "]", ",", "axis", "=", "1", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.oai.build_clinical": [[94, 127], ["oaprogression.metadata.utils.read_sas7bdata_pd", "oaprogression.metadata.utils.read_sas7bdata_pd", "oaprogression.metadata.utils.read_sas7bdata_pd.merge", "pd.concat.copy", "pd.concat.copy", "pandas.concat", "pd.concat.ID.values.astype", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.read_sas7bdata_pd", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.read_sas7bdata_pd"], ["", "def", "build_clinical", "(", "oai_src_dir", ")", ":", "\n", "    ", "data_enrollees", "=", "read_sas7bdata_pd", "(", "os", ".", "path", ".", "join", "(", "oai_src_dir", ",", "'enrollees.sas7bdat'", ")", ")", "\n", "data_clinical", "=", "read_sas7bdata_pd", "(", "os", ".", "path", ".", "join", "(", "oai_src_dir", ",", "'allclinical00.sas7bdat'", ")", ")", "\n", "\n", "clinical_data_oai", "=", "data_clinical", ".", "merge", "(", "data_enrollees", ",", "on", "=", "'ID'", ")", "\n", "\n", "# Age, Sex, BMI", "\n", "clinical_data_oai", "[", "'SEX'", "]", "=", "2", "-", "clinical_data_oai", "[", "'P02SEX'", "]", "\n", "clinical_data_oai", "[", "'AGE'", "]", "=", "clinical_data_oai", "[", "'V00AGE'", "]", "\n", "clinical_data_oai", "[", "'BMI'", "]", "=", "clinical_data_oai", "[", "'P01BMI'", "]", "\n", "\n", "clinical_data_oai_left", "=", "clinical_data_oai", ".", "copy", "(", ")", "\n", "clinical_data_oai_right", "=", "clinical_data_oai", ".", "copy", "(", ")", "\n", "\n", "# Making side-wise metadata", "\n", "clinical_data_oai_left", "[", "'Side'", "]", "=", "'L'", "\n", "clinical_data_oai_right", "[", "'Side'", "]", "=", "'R'", "\n", "\n", "# Injury (ever had)", "\n", "clinical_data_oai_left", "[", "'INJ'", "]", "=", "clinical_data_oai_left", "[", "'P01INJL'", "]", "\n", "clinical_data_oai_right", "[", "'INJ'", "]", "=", "clinical_data_oai_right", "[", "'P01INJR'", "]", "\n", "\n", "# Surgery (ever had)", "\n", "clinical_data_oai_left", "[", "'SURG'", "]", "=", "clinical_data_oai_left", "[", "'P01KSURGL'", "]", "\n", "clinical_data_oai_right", "[", "'SURG'", "]", "=", "clinical_data_oai_right", "[", "'P01KSURGR'", "]", "\n", "\n", "# Total WOMAC score", "\n", "clinical_data_oai_left", "[", "'WOMAC'", "]", "=", "clinical_data_oai_left", "[", "'V00WOMTSL'", "]", "\n", "clinical_data_oai_right", "[", "'WOMAC'", "]", "=", "clinical_data_oai_right", "[", "'V00WOMTSR'", "]", "\n", "\n", "clinical_data_oai", "=", "pd", ".", "concat", "(", "(", "clinical_data_oai_left", ",", "clinical_data_oai_right", ")", ")", "\n", "clinical_data_oai", ".", "ID", "=", "clinical_data_oai", ".", "ID", ".", "values", ".", "astype", "(", "int", ")", "\n", "return", "clinical_data_oai", "[", "[", "'ID'", ",", "'Side'", ",", "'AGE'", ",", "'SEX'", ",", "'BMI'", ",", "'INJ'", ",", "'SURG'", ",", "'WOMAC'", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.oai.read_jsw_metadata_oai": [[129, 156], ["pandas.read_csv", "pandas.read_csv", "oaprogression.metadata.utils.read_sas7bdata_pd", "np.unique.ID.astype", "pandas.merge", "pandas.merge", "oaprogression.metadata.utils.read_sas7bdata_pd", "oaprogression.metadata.utils.read_sas7bdata_pd.drop_duplicates", "oaprogression.metadata.utils.read_sas7bdata_pd.SIDE.apply", "oaprogression.metadata.utils.read_sas7bdata_pd.ID.astype", "oaprogression.metadata.utils.read_sas7bdata_pd.drop", "pandas.merge", "numpy.unique", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "quant_readings[].astype", "quant_readings[].astype", "int"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.read_sas7bdata_pd", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.read_sas7bdata_pd"], ["", "def", "read_jsw_metadata_oai", "(", "preprocessed_metadata_dir", ",", "oai_src_dir", ")", ":", "\n", "    ", "oai_meta", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "preprocessed_metadata_dir", ",", "'OAI_progression.csv'", ")", ")", "\n", "oai_participants", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "preprocessed_metadata_dir", ",", "'OAI_participants.csv'", ")", ")", "\n", "oai_participants_raw", "=", "read_sas7bdata_pd", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "join", "(", "oai_src_dir", ",", "'X-Ray_Image_Assessments_SAS'", ",", "\n", "'enrollees.sas7bdat'", ")", ")", ")", "\n", "\n", "sites", "=", "oai_participants_raw", "[", "[", "'ID'", ",", "'V00SITE'", "]", "]", "\n", "sites", ".", "ID", "=", "sites", ".", "ID", ".", "astype", "(", "int", ")", "\n", "metadata", "=", "pd", ".", "merge", "(", "oai_meta", ",", "oai_participants", ",", "on", "=", "(", "'ID'", ",", "'Side'", ")", ")", "\n", "metadata", "=", "pd", ".", "merge", "(", "metadata", ",", "sites", ")", "\n", "\n", "quant_readings", "=", "read_sas7bdata_pd", "(", "os", ".", "path", ".", "join", "(", "oai_src_dir", ",", "'X-Ray_Image_Assessments_SAS'", ",", "\n", "'Quant JSW_SAS'", ",", "\n", "'kxr_qjsw_duryea00.sas7bdat'", ")", ")", "\n", "\n", "quant_readings", ".", "drop_duplicates", "(", "subset", "=", "[", "'ID'", ",", "'SIDE'", "]", ",", "inplace", "=", "True", ")", "\n", "quant_readings", "=", "quant_readings", "[", "(", "quant_readings", "[", "'V00NOLJSWX'", "]", ".", "astype", "(", "float", ")", "+", "\n", "quant_readings", "[", "'V00NOMJSWX'", "]", ".", "astype", "(", "float", ")", ")", "==", "0", "]", "\n", "\n", "quant_readings", "=", "quant_readings", "[", "[", "'ID'", ",", "'SIDE'", "]", "+", "jsw_features", "+", "[", "beam_angle_feature", ",", "]", "]", "\n", "\n", "quant_readings", "[", "'Side'", "]", "=", "quant_readings", ".", "SIDE", ".", "apply", "(", "lambda", "x", ":", "(", "sides", "[", "int", "(", "x", ")", "]", ")", ",", "1", ")", "\n", "quant_readings", "[", "'ID'", "]", "=", "quant_readings", ".", "ID", ".", "astype", "(", "int", ")", "\n", "quant_readings", ".", "drop", "(", "'SIDE'", ",", "axis", "=", "1", ",", "inplace", "=", "True", ")", "\n", "metadata", "=", "pd", ".", "merge", "(", "quant_readings", ",", "metadata", ",", "on", "=", "(", "'ID'", ",", "'Side'", ")", ")", "\n", "sites", "=", "np", ".", "unique", "(", "metadata", ".", "V00SITE", ".", "values", ")", "\n", "return", "sites", ",", "metadata", "\n", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.read_sas7bdata_pd": [[6, 13], ["pandas.DataFrame", "sas7bdat.SAS7BDAT", "data.append"], "function", ["None"], ["def", "read_sas7bdata_pd", "(", "fname", ")", ":", "\n", "    ", "data", "=", "[", "]", "\n", "with", "SAS7BDAT", "(", "fname", ")", "as", "f", ":", "\n", "        ", "for", "row", "in", "f", ":", "\n", "            ", "data", ".", "append", "(", "row", ")", "\n", "\n", "", "", "return", "pd", ".", "DataFrame", "(", "data", "[", "1", ":", "]", ",", "columns", "=", "data", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.metadata.utils.data_stats": [[15, 53], ["pandas.merge", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "numpy.nanmean", "numpy.nanstd", "numpy.nanmean", "numpy.nanstd", "print", "print", "print", "numpy.unique", "numpy.unique", "numpy.unique"], "function", ["None"], ["", "def", "data_stats", "(", "dataset", ",", "participants", ")", ":", "\n", "    ", "dataset", "=", "pd", ".", "merge", "(", "dataset", ",", "participants", ",", "on", "=", "(", "'ID'", ",", "'Side'", ")", ")", "\n", "\n", "print", "(", "'## Unique subjects'", ",", "np", ".", "unique", "(", "dataset", ".", "ID", ")", ".", "shape", "[", "0", "]", ")", "\n", "print", "(", "'## Males'", ",", "np", ".", "unique", "(", "dataset", "[", "dataset", ".", "SEX", "==", "1", "]", ".", "ID", ")", ".", "shape", "[", "0", "]", ")", "\n", "print", "(", "'## Females'", ",", "np", ".", "unique", "(", "dataset", "[", "dataset", ".", "SEX", "==", "0", "]", ".", "ID", ")", ".", "shape", "[", "0", "]", ")", "\n", "\n", "print", "(", "'## Mean Age'", ",", "np", ".", "nanmean", "(", "participants", ".", "AGE", ")", ")", "\n", "print", "(", "'## STD Age'", ",", "np", ".", "nanstd", "(", "participants", ".", "AGE", ")", ")", "\n", "\n", "print", "(", "'## Mean BMI'", ",", "np", ".", "nanmean", "(", "participants", ".", "BMI", ")", ")", "\n", "print", "(", "'## STD BMI'", ",", "np", ".", "nanstd", "(", "participants", ".", "BMI", ")", ")", "\n", "\n", "print", "(", "'## Knees'", ",", "dataset", ".", "ID", ".", "shape", "[", "0", "]", ")", "\n", "\n", "print", "(", "'## Knees (left non-progressors)'", ",", "\n", "dataset", "[", "(", "dataset", ".", "Side", "==", "'L'", ")", "&", "(", "dataset", ".", "Progressor", ".", "values", "==", "0", ")", "]", ".", "ID", ".", "shape", "[", "0", "]", ")", "\n", "print", "(", "'## Knees (right non-progressors)'", ",", "\n", "dataset", "[", "(", "dataset", ".", "Side", "==", "'R'", ")", "&", "(", "dataset", ".", "Progressor", ".", "values", "==", "0", ")", "]", ".", "ID", ".", "shape", "[", "0", "]", ")", "\n", "\n", "print", "(", "'## Knees (left progressors)'", ",", "\n", "dataset", "[", "(", "dataset", ".", "Side", "==", "'L'", ")", "&", "(", "dataset", ".", "Progressor", ".", "values", ">", "0", ")", "]", ".", "ID", ".", "shape", "[", "0", "]", ")", "\n", "print", "(", "'## Knees (right progressors)'", ",", "\n", "dataset", "[", "(", "dataset", ".", "Side", "==", "'R'", ")", "&", "(", "dataset", ".", "Progressor", ".", "values", ">", "0", ")", "]", ".", "ID", ".", "shape", "[", "0", "]", ")", "\n", "\n", "print", "(", "'## Knees non-progressors'", ",", "(", "dataset", ".", "Progressor", ".", "values", "==", "0", ")", ".", "sum", "(", ")", ")", "\n", "print", "(", "'## Knees progressors'", ",", "(", "dataset", ".", "Progressor", ".", "values", ">", "0", ")", ".", "sum", "(", ")", ")", "\n", "\n", "print", "(", "'## Knees non-progressors (males)'", ",", "(", "dataset", "[", "dataset", ".", "SEX", "==", "1", "]", ".", "Progressor", ".", "values", "==", "0", ")", ".", "sum", "(", ")", ")", "\n", "print", "(", "'## Knees progressors (males)'", ",", "(", "dataset", "[", "dataset", ".", "SEX", "==", "1", "]", ".", "Progressor", ".", "values", ">", "0", ")", ".", "sum", "(", ")", ")", "\n", "\n", "print", "(", "'## Knees non-progressors (females)'", ",", "(", "dataset", "[", "dataset", ".", "SEX", "==", "0", "]", ".", "Progressor", ".", "values", "==", "0", ")", ".", "sum", "(", ")", ")", "\n", "print", "(", "'## Knees progressors (females)'", ",", "(", "dataset", "[", "dataset", ".", "SEX", "==", "0", "]", ".", "Progressor", ".", "values", ">", "0", ")", ".", "sum", "(", ")", ")", "\n", "\n", "for", "KL", "in", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", "]", ":", "\n", "        ", "print", "(", "\" \"", ")", "\n", "print", "(", "f'### [{KL}] # knees non-progressors'", ",", "(", "dataset", "[", "dataset", ".", "KL", "==", "KL", "]", ".", "Progressor", ".", "values", "==", "0", ")", ".", "sum", "(", ")", ")", "\n", "print", "(", "f'### [{KL}] # knees progressors'", ",", "(", "dataset", "[", "dataset", ".", "KL", "==", "KL", "]", ".", "Progressor", ".", "values", ">", "0", ")", ".", "sum", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.five_crop": [[35, 51], ["img.clone.clone", "torch.stack", "torch.stack", "img.clone.size"], "function", ["None"], ["def", "five_crop", "(", "img", ",", "size", ")", ":", "\n", "    ", "\"\"\"Returns a stacked 5 crop\n    \"\"\"", "\n", "img", "=", "img", ".", "clone", "(", ")", "\n", "h", ",", "w", "=", "img", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "# get central crop", "\n", "c_cr", "=", "img", "[", ":", ",", "h", "//", "2", "-", "size", "//", "2", ":", "h", "//", "2", "+", "size", "//", "2", ",", "w", "//", "2", "-", "size", "//", "2", ":", "w", "//", "2", "+", "size", "//", "2", "]", "\n", "# upper-left crop", "\n", "ul_cr", "=", "img", "[", ":", ",", "0", ":", "size", ",", "0", ":", "size", "]", "\n", "# upper-right crop", "\n", "ur_cr", "=", "img", "[", ":", ",", "0", ":", "size", ",", "w", "-", "size", ":", "w", "]", "\n", "# bottom-left crop", "\n", "bl_cr", "=", "img", "[", ":", ",", "h", "-", "size", ":", "h", ",", "0", ":", "size", "]", "\n", "# bottom-right crop", "\n", "br_cr", "=", "img", "[", ":", ",", "h", "-", "size", ":", "h", ",", "w", "-", "size", ":", "w", "]", "\n", "return", "torch", ".", "stack", "(", "(", "c_cr", ",", "ul_cr", ",", "ur_cr", ",", "bl_cr", ",", "br_cr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.init_fold": [[53, 76], ["oaprogression.training.model.KneeNet", "model.KneeNet.load_state_dict", "torch.nn.DataParallel", "torch.nn.DataParallel", "nn.DataParallel.to", "nn.DataParallel.to", "nn.DataParallel.eval", "nn.DataParallel.eval", "glob.glob", "torch.load", "torch.load", "torch.nn.DataParallel", "nn.DataParallel.to", "nn.DataParallel.eval", "os.path.join"], "function", ["None"], ["", "def", "init_fold", "(", "fold_id", ",", "session_snapshot", ",", "fold_path", ",", "return_fc_kl", "=", "False", ")", ":", "\n", "    ", "net", "=", "model", ".", "KneeNet", "(", "session_snapshot", "[", "'args'", "]", "[", "0", "]", ".", "backbone", ",", "0.5", ",", "False", ")", "\n", "snapshot_name", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "fold_path", ",", "f'fold_{fold_id}*.pth'", ")", ")", "[", "0", "]", "\n", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "snapshot_name", ")", ")", "\n", "\n", "features", "=", "nn", ".", "DataParallel", "(", "net", ".", "features", "[", ":", "-", "1", "]", ")", "\n", "fc", "=", "nn", ".", "DataParallel", "(", "net", ".", "classifier_prog", "[", "-", "1", "]", ")", "\n", "\n", "features", ".", "to", "(", "'cuda'", ")", "\n", "fc", ".", "to", "(", "'cuda'", ")", "\n", "\n", "features", ".", "eval", "(", ")", "\n", "fc", ".", "eval", "(", ")", "\n", "\n", "if", "return_fc_kl", ":", "\n", "        ", "fc_kl", "=", "nn", ".", "DataParallel", "(", "net", ".", "classifier_kl", "[", "-", "1", "]", ")", "\n", "fc_kl", ".", "to", "(", "'cuda'", ")", "\n", "fc_kl", ".", "eval", "(", ")", "\n", "\n", "return", "features", ",", "fc", ",", "fc_kl", "\n", "\n", "", "return", "features", ",", "fc", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.init_loader": [[78, 106], ["oaprogression.training.session.init_mean_std", "torchvision.Normalize", "torchvision.Compose", "oaprogression.training.dataset.OAProgressionDataset", "torch.utils.data.DataLoader", "mean_vector.tolist", "std_vector.tolist", "solt.Stream", "functools.partial", "functools.partial", "functools.partial", "torch.utils.data.sampler.SequentialSampler", "solt.PadTransform", "solt.CropTransform", "solt.ResizeTransform", "solt.ImageColorTransform", "torchvision.ToTensor", "functools.partial"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.training.session.init_mean_std"], ["", "def", "init_loader", "(", "metadata", ",", "args", ",", "snapshots_root", ")", ":", "\n", "    ", "mean_vector", ",", "std_vector", "=", "session", ".", "init_mean_std", "(", "snapshots_root", ",", "None", ",", "None", ",", "None", ")", "\n", "\n", "norm_trf", "=", "tv_transforms", ".", "Normalize", "(", "mean_vector", ".", "tolist", "(", ")", ",", "std_vector", ".", "tolist", "(", ")", ")", "\n", "\n", "tta_trf", "=", "tv_transforms", ".", "Compose", "(", "[", "\n", "img_labels2solt", ",", "\n", "slc", ".", "Stream", "(", "[", "\n", "slt", ".", "PadTransform", "(", "pad_to", "=", "(", "700", ",", "700", ")", ",", "padding", "=", "'z'", ")", ",", "\n", "slt", ".", "CropTransform", "(", "crop_size", "=", "(", "700", ",", "700", ")", ",", "crop_mode", "=", "'c'", ")", ",", "\n", "slt", ".", "ResizeTransform", "(", "resize_to", "=", "(", "310", ",", "310", ")", ",", "interpolation", "=", "'bicubic'", ")", ",", "\n", "slt", ".", "ImageColorTransform", "(", "mode", "=", "'gs2rgb'", ")", ",", "\n", "]", ",", "interpolation", "=", "'bicubic'", ")", ",", "\n", "unpack_solt_data", ",", "\n", "partial", "(", "apply_by_index", ",", "transform", "=", "tv_transforms", ".", "ToTensor", "(", ")", ",", "idx", "=", "0", ")", ",", "\n", "partial", "(", "apply_by_index", ",", "transform", "=", "norm_trf", ",", "idx", "=", "0", ")", ",", "\n", "partial", "(", "apply_by_index", ",", "transform", "=", "partial", "(", "five_crop", ",", "size", "=", "300", ")", ",", "idx", "=", "0", ")", ",", "\n", "]", ")", "\n", "\n", "dataset", "=", "OAProgressionDataset", "(", "dataset", "=", "args", ".", "dataset_root", ",", "\n", "split", "=", "metadata", ",", "trf", "=", "tta_trf", ")", "\n", "\n", "loader", "=", "DataLoader", "(", "dataset", ",", "\n", "batch_size", "=", "args", ".", "bs", ",", "\n", "sampler", "=", "SequentialSampler", "(", "dataset", ")", ",", "\n", "num_workers", "=", "args", ".", "n_threads", ")", "\n", "\n", "return", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.eval_batch": [[108, 121], ["torch.no_grad", "torch.no_grad", "sample[].to", "sample[].to.size", "features", "torch.adaptive_avg_pool2d().view", "torch.softmax().view().mean", "F.softmax().view().mean.to().numpy", "sample[].to.view", "features.size", "torch.softmax().view().mean", "torch.adaptive_avg_pool2d", "torch.softmax().view", "F.softmax().view().mean.to().numpy", "F.softmax().view().mean.to().numpy", "F.softmax().view().mean.to", "torch.softmax().view", "torch.softmax", "F.softmax().view().mean.to", "F.softmax().view().mean.to", "fc_prog", "torch.softmax", "fc_kl"], "function", ["None"], ["", "def", "eval_batch", "(", "sample", ",", "features", ",", "fc_prog", ",", "fc_kl", "=", "None", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "inputs", "=", "sample", "[", "'img'", "]", ".", "to", "(", "\"cuda\"", ")", "\n", "bs", ",", "ncrops", ",", "c", ",", "h", ",", "w", "=", "inputs", ".", "size", "(", ")", "\n", "maps", "=", "features", "(", "inputs", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "maps_avg", "=", "F", ".", "adaptive_avg_pool2d", "(", "maps", ",", "1", ")", ".", "view", "(", "maps", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out_prog", "=", "F", ".", "softmax", "(", "fc_prog", "(", "maps_avg", ")", ",", "1", ")", ".", "view", "(", "bs", ",", "ncrops", ",", "-", "1", ")", ".", "mean", "(", "1", ")", "\n", "\n", "if", "fc_kl", "is", "not", "None", ":", "\n", "            ", "out_kl", "=", "F", ".", "softmax", "(", "fc_kl", "(", "maps_avg", ")", ",", "1", ")", ".", "view", "(", "bs", ",", "ncrops", ",", "-", "1", ")", ".", "mean", "(", "1", ")", "\n", "return", "out_prog", ".", "to", "(", "\"cpu\"", ")", ".", "numpy", "(", ")", ",", "out_kl", ".", "to", "(", "\"cpu\"", ")", ".", "numpy", "(", ")", "\n", "\n", "", "return", "out_prog", ".", "to", "(", "\"cpu\"", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.run_test_inference": [[123, 160], ["range", "numpy.savez_compressed", "tools.init_fold", "enumerate", "numpy.vstack", "numpy.vstack", "numpy.vstack", "gc.collect", "os.path.join", "os.path.join", "tqdm.tqdm", "oaprogression.evaluation.gcam.eval_batch", "gradcam_maps_fold.append", "np.vstack.append", "np.vstack.append", "ids.extend", "gc.collect", "len"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.init_fold", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.gcam.eval_batch"], ["", "", "def", "run_test_inference", "(", "loader", ",", "session_snapshot", ",", "snapshots_root", ",", "snapshot", ",", "save_dir", ")", ":", "\n", "    ", "gradcam_maps_all", "=", "0", "\n", "res_kl", "=", "0", "\n", "res_prog", "=", "0", "\n", "ids", "=", "None", "\n", "for", "fold_id", "in", "range", "(", "session_snapshot", "[", "'args'", "]", "[", "0", "]", ".", "n_folds", ")", ":", "\n", "        ", "features", ",", "fc", ",", "fc_kl", "=", "init_fold", "(", "fold_id", ",", "session_snapshot", ",", "os", ".", "path", ".", "join", "(", "snapshots_root", ",", "snapshot", ")", ",", "\n", "return_fc_kl", "=", "True", ")", "\n", "\n", "preds_prog_fold", "=", "[", "]", "\n", "preds_kl_fold", "=", "[", "]", "\n", "gradcam_maps_fold", "=", "[", "]", "\n", "ids", "=", "[", "]", "\n", "for", "batch_id", ",", "sample", "in", "enumerate", "(", "\n", "tqdm", "(", "loader", ",", "total", "=", "len", "(", "loader", ")", ",", "desc", "=", "'Prediction from fold {}'", ".", "format", "(", "fold_id", ")", ")", ")", ":", "\n", "            ", "gcam_batch", ",", "probs_prog", ",", "probs_kl", "=", "gcam", ".", "eval_batch", "(", "sample", ",", "features", ",", "fc", ",", "fc_kl", ")", "\n", "gradcam_maps_fold", ".", "append", "(", "gcam_batch", ")", "\n", "preds_prog_fold", ".", "append", "(", "probs_prog", ")", "\n", "preds_kl_fold", ".", "append", "(", "probs_kl", ")", "\n", "ids", ".", "extend", "(", "sample", "[", "'ID_SIDE'", "]", ")", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "", "preds_prog_fold", "=", "np", ".", "vstack", "(", "preds_prog_fold", ")", "\n", "preds_kl_fold", "=", "np", ".", "vstack", "(", "preds_kl_fold", ")", "\n", "gradcam_maps_all", "+=", "np", ".", "vstack", "(", "gradcam_maps_fold", ")", "\n", "\n", "res_kl", "+=", "preds_kl_fold", "\n", "res_prog", "+=", "preds_prog_fold", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "", "res_kl", "/=", "5.", "\n", "res_prog", "/=", "5.", "\n", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'results.npz'", ")", ",", "\n", "gradcam_maps_all", "=", "gradcam_maps_all", ",", "\n", "preds_kl", "=", "res_kl", ",", "\n", "preds_prog", "=", "res_prog", ",", "\n", "ids", "=", "ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.calc_metrics": [[162, 184], ["preds_progression[].sum", "preds_kl[].sum", "dict", "sklearn.metrics.confusion_matrix", "sklearn.metrics.confusion_matrix", "sklearn.metrics.roc_auc_score", "sklearn.metrics.cohen_kappa_score", "numpy.mean", "sklearn.metrics.mean_squared_error", "sklearn.metrics.roc_auc_score", "sklearn.metrics.cohen_kappa_score", "numpy.mean", "sklearn.metrics.mean_squared_error", "sklearn.metrics.f1_score", "sklearn.metrics.f1_score", "sklearn.metrics.f1_score", "sklearn.metrics.average_precision_score", "preds_progression.argmax", "preds_kl.argmax", "preds_progression.argmax", "preds_progression.argmax", "preds_kl.argmax", "preds_kl.argmax", "res[].diagonal().astype", "res[].sum", "res[].diagonal().astype", "res[].sum", "res[].diagonal", "res[].diagonal"], "function", ["None"], ["", "def", "calc_metrics", "(", "gt_progression", ",", "gt_kl", ",", "preds_progression", ",", "preds_kl", ")", ":", "\n", "# Computing Validation metrics", "\n", "    ", "preds_progression_bin", "=", "preds_progression", "[", ":", ",", "1", ":", "]", ".", "sum", "(", "1", ")", "\n", "preds_kl_bin", "=", "preds_kl", "[", ":", ",", "1", ":", "]", ".", "sum", "(", "1", ")", "\n", "\n", "res", "=", "dict", "(", ")", "\n", "res", "[", "'cm_prog'", "]", "=", "confusion_matrix", "(", "gt_progression", ",", "preds_progression", ".", "argmax", "(", "1", ")", ")", "\n", "res", "[", "'cm_kl'", "]", "=", "confusion_matrix", "(", "gt_kl", ",", "preds_kl", ".", "argmax", "(", "1", ")", ")", "\n", "res", "[", "'auc_prog'", "]", "=", "roc_auc_score", "(", "gt_progression", ">", "0", ",", "preds_progression_bin", ")", "\n", "res", "[", "'kappa_prog'", "]", "=", "cohen_kappa_score", "(", "gt_progression", ",", "preds_progression", ".", "argmax", "(", "1", ")", ",", "weights", "=", "\"quadratic\"", ")", "\n", "res", "[", "'acc_prog'", "]", "=", "np", ".", "mean", "(", "res", "[", "'cm_prog'", "]", ".", "diagonal", "(", ")", ".", "astype", "(", "float", ")", "/", "res", "[", "'cm_prog'", "]", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "res", "[", "'mse_prog'", "]", "=", "mean_squared_error", "(", "gt_progression", ",", "preds_progression", ".", "argmax", "(", "1", ")", ")", "\n", "res", "[", "'auc_oa'", "]", "=", "roc_auc_score", "(", "gt_kl", ">", "1", ",", "preds_kl_bin", ")", "\n", "res", "[", "'kappa_kl'", "]", "=", "cohen_kappa_score", "(", "gt_kl", ",", "preds_kl", ".", "argmax", "(", "1", ")", ",", "weights", "=", "\"quadratic\"", ")", "\n", "res", "[", "'acc_kl'", "]", "=", "np", ".", "mean", "(", "res", "[", "'cm_kl'", "]", ".", "diagonal", "(", ")", ".", "astype", "(", "float", ")", "/", "res", "[", "'cm_kl'", "]", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "res", "[", "'mse_kl'", "]", "=", "mean_squared_error", "(", "gt_kl", ",", "preds_kl", ".", "argmax", "(", "1", ")", ")", "\n", "res", "[", "'f1_score_03_prog'", "]", "=", "f1_score", "(", "gt_progression", ">", "0", ",", "preds_progression_bin", ">", "0.3", ")", "\n", "res", "[", "'f1_score_04_prog'", "]", "=", "f1_score", "(", "gt_progression", ">", "0", ",", "preds_progression_bin", ">", "0.5", ")", "\n", "res", "[", "'f1_score_05_prog'", "]", "=", "f1_score", "(", "gt_progression", ">", "0", ",", "preds_progression_bin", ">", "0.6", ")", "\n", "res", "[", "'ap_prog'", "]", "=", "average_precision_score", "(", "gt_progression", ">", "0", ",", "preds_progression_bin", ")", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.eval_models": [[186, 215], ["metadata_test[].copy", "range", "len", "x_test_initial.values.astype.fillna", "x_test_initial.values.astype.values.astype", "len", "x_test_initial.values.astype.copy", "x_test_initial.values.astype.mean", "clf_prog.predict_proba", "clf_prog.predict", "clf_prog.predict().flatten", "clf_prog.predict", "statsmodels.add_constant"], "function", ["None"], ["", "def", "eval_models", "(", "metadata_test", ",", "feature_set", ",", "models_best", ",", "\n", "mean_std_best", "=", "None", ",", "\n", "impute", "=", "True", ",", "\n", "model_type", "=", "'sklearn'", ")", ":", "\n", "    ", "x_test_initial", "=", "metadata_test", "[", "feature_set", "]", ".", "copy", "(", ")", "\n", "# Using mean imputation if necessary", "\n", "if", "impute", ":", "\n", "        ", "x_test_initial", ".", "fillna", "(", "x_test_initial", ".", "mean", "(", ")", ",", "inplace", "=", "True", ")", "\n", "x_test_initial", "=", "x_test_initial", ".", "values", ".", "astype", "(", "float", ")", "\n", "\n", "", "test_res", "=", "0", "\n", "for", "model_id", "in", "range", "(", "len", "(", "models_best", ")", ")", ":", "\n", "        ", "x_test", "=", "x_test_initial", ".", "copy", "(", ")", "\n", "if", "mean_std_best", "is", "not", "None", "and", "model_type", "!=", "'lgbm'", ":", "\n", "            ", "mean", ",", "std", "=", "mean_std_best", "[", "model_id", "]", "\n", "x_test", "-=", "mean", "\n", "x_test", "/=", "std", "\n", "", "clf_prog", "=", "models_best", "[", "model_id", "]", "\n", "if", "model_type", "==", "'sklearn'", ":", "\n", "            ", "test_res", "+=", "clf_prog", ".", "predict_proba", "(", "x_test", ")", "[", ":", ",", "1", "]", "\n", "", "elif", "model_type", "==", "'lgbm'", ":", "\n", "            ", "test_res", "+=", "clf_prog", ".", "predict", "(", "x_test", ",", "clf_prog", ".", "best_iteration", ")", "\n", "", "elif", "model_type", "==", "'statsmodels'", ":", "\n", "            ", "test_res", "+=", "clf_prog", ".", "predict", "(", "sm", ".", "add_constant", "(", "x_test", ")", ")", ".", "flatten", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "", "test_res", "/=", "len", "(", "models_best", ")", "\n", "return", "test_res", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.pkl2df": [[217, 226], ["pandas.read_pickle", "pandas.DataFrame"], "function", ["None"], ["", "def", "pkl2df", "(", "fname", ")", ":", "\n", "    ", "data_dict", "=", "pd", ".", "read_pickle", "(", "fname", ")", "\n", "res", "=", "{", "}", "\n", "for", "key", "in", "data_dict", ":", "\n", "        ", "res", "[", "key", "]", "=", "pd", ".", "DataFrame", "(", "data", "=", "{", "'ID'", ":", "data_dict", "[", "key", "]", "[", "0", "]", ",", "\n", "'Side'", ":", "data_dict", "[", "key", "]", "[", "1", "]", ",", "\n", "'Progressor'", ":", "data_dict", "[", "key", "]", "[", "2", "]", ",", "\n", "'Prediction'", ":", "data_dict", "[", "key", "]", "[", "3", "]", "}", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.init_auc_pr_plot": [[228, 249], ["matplotlib.rcParams.update", "matplotlib.subplots", "axs[].plot", "axs[].set_xlim", "axs[].set_ylim", "axs[].grid", "axs[].set_xlabel", "axs[].set_ylabel", "axs[].set_title", "axs[].axhline", "axs[].set_xlim", "axs[].set_ylim", "axs[].grid", "axs[].set_xlabel", "axs[].set_ylabel", "axs[].set_title", "y.sum"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.kvs._kvs.GlobalKVS.update"], ["", "def", "init_auc_pr_plot", "(", "y", ")", ":", "\n", "    ", "plt", ".", "rcParams", ".", "update", "(", "{", "'font.size'", ":", "13", "}", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "nrows", "=", "1", ",", "ncols", "=", "2", ",", "figsize", "=", "(", "16", ",", "8", ")", ")", "\n", "\n", "axs", "[", "0", "]", ".", "plot", "(", "[", "0", ",", "1", "]", ",", "[", "0", ",", "1", "]", ",", "'--'", ",", "color", "=", "'black'", ")", "\n", "axs", "[", "0", "]", ".", "set_xlim", "(", "[", "0", ",", "1", "]", ")", "\n", "axs", "[", "0", "]", ".", "set_ylim", "(", "[", "0", ",", "1", "]", ")", "\n", "axs", "[", "0", "]", ".", "grid", "(", ")", "\n", "axs", "[", "0", "]", ".", "set_xlabel", "(", "'False positive rate'", ")", "\n", "axs", "[", "0", "]", ".", "set_ylabel", "(", "'True positive rate'", ")", "\n", "axs", "[", "0", "]", ".", "set_title", "(", "'ROC curve'", ")", "\n", "\n", "axs", "[", "1", "]", ".", "axhline", "(", "y", "=", "y", ".", "sum", "(", ")", "/", "y", ".", "shape", "[", "0", "]", ",", "linestyle", "=", "'--'", ",", "color", "=", "'black'", ")", "\n", "axs", "[", "1", "]", ".", "set_xlim", "(", "[", "0", ",", "1", "]", ")", "\n", "axs", "[", "1", "]", ".", "set_ylim", "(", "[", "0", ",", "1", "]", ")", "\n", "axs", "[", "1", "]", ".", "grid", "(", ")", "\n", "axs", "[", "1", "]", ".", "set_xlabel", "(", "'Recall'", ")", "\n", "axs", "[", "1", "]", ".", "set_ylabel", "(", "'Precision'", ")", "\n", "axs", "[", "1", "]", ".", "set_title", "(", "'Precision-Recall curve'", ")", "\n", "\n", "return", "fig", ",", "axs", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.compute_and_plot_curves": [[251, 279], ["oaprogression.evaluation.stats.calc_curve_bootstrap", "oaprogression.evaluation.stats.calc_curve_bootstrap", "tmp_df.Progressor.values.astype", "tmp_df.Prediction.values.astype", "axs[].plot", "axs[].plot", "axs[].legend", "tmp_df.Progressor.values.astype", "tmp_df.Prediction.values.astype", "axs[].plot", "axs[].plot", "axs[].legend", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap"], ["", "def", "compute_and_plot_curves", "(", "tmp_df", ",", "axs", ",", "key", "=", "None", ",", "legend", "=", "True", ",", "color", "=", "None", ",", "n_bootstrap", "=", "2000", ",", "seed", "=", "12345", ")", ":", "\n", "    ", "auc", ",", "ci_l", ",", "ci_h", ",", "fpr", ",", "tpr", "=", "stats", ".", "calc_curve_bootstrap", "(", "roc_curve", ",", "roc_auc_score", ",", "\n", "tmp_df", ".", "Progressor", ".", "values", ".", "astype", "(", "int", ")", ",", "\n", "tmp_df", ".", "Prediction", ".", "values", ".", "astype", "(", "float", ")", ",", "\n", "n_bootstrap", ",", "seed", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", "\n", "\n", "if", "key", "is", "None", ":", "\n", "        ", "key", "=", "''", "\n", "", "if", "color", "is", "None", ":", "\n", "        ", "axs", "[", "0", "]", ".", "plot", "(", "fpr", ",", "tpr", ",", "label", "=", "key", "+", "f' ({np.round(auc, 2)} [{np.round(ci_l, 2)}, {np.round(ci_h, 2)}])'", ")", "\n", "", "else", ":", "\n", "        ", "axs", "[", "0", "]", ".", "plot", "(", "fpr", ",", "tpr", ",", "label", "=", "key", "+", "f' ({np.round(auc, 2)} [{np.round(ci_l, 2)}, {np.round(ci_h, 2)}])'", ",", "\n", "color", "=", "color", ")", "\n", "", "if", "legend", ":", "\n", "        ", "axs", "[", "0", "]", ".", "legend", "(", ")", "\n", "\n", "", "ap", ",", "ci_l", ",", "ci_h", ",", "precision", ",", "recall", "=", "stats", ".", "calc_curve_bootstrap", "(", "precision_recall_curve", ",", "average_precision_score", ",", "\n", "tmp_df", ".", "Progressor", ".", "values", ".", "astype", "(", "int", ")", ",", "\n", "tmp_df", ".", "Prediction", ".", "values", ".", "astype", "(", "float", ")", ",", "\n", "n_bootstrap", ",", "seed", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", "\n", "\n", "if", "color", "is", "None", ":", "\n", "        ", "axs", "[", "1", "]", ".", "plot", "(", "recall", ",", "precision", ",", "label", "=", "key", "+", "f' ({np.round(ap, 2)} [{np.round(ci_l, 2)}, {np.round(ci_h, 2)}])'", ")", "\n", "", "else", ":", "\n", "        ", "axs", "[", "1", "]", ".", "plot", "(", "recall", ",", "precision", ",", "label", "=", "key", "+", "f' ({np.round(ap, 2)} [{np.round(ci_l, 2)}, {np.round(ci_h, 2)}])'", ",", "\n", "color", "=", "color", ")", "\n", "", "if", "legend", ":", "\n", "        ", "axs", "[", "1", "]", ".", "legend", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.tools.compute_curves_and_metrics": [[281, 297], ["oaprogression.evaluation.stats.calc_curve_bootstrap", "print", "oaprogression.evaluation.stats.calc_curve_bootstrap", "print", "print", "tmp_df.Progressor.values.astype", "tmp_df.Prediction.values.astype", "tmp_df.Progressor.values.astype", "tmp_df.Prediction.values.astype", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap"], ["", "", "def", "compute_curves_and_metrics", "(", "model_name", ",", "tmp_df", ",", "n_bootstrap", "=", "2000", ",", "seed", "=", "12345", ")", ":", "\n", "    ", "auc", ",", "ci_l", ",", "ci_h", ",", "fpr", ",", "tpr", "=", "stats", ".", "calc_curve_bootstrap", "(", "roc_curve", ",", "roc_auc_score", ",", "\n", "tmp_df", ".", "Progressor", ".", "values", ".", "astype", "(", "int", ")", ",", "\n", "tmp_df", ".", "Prediction", ".", "values", ".", "astype", "(", "float", ")", ",", "\n", "n_bootstrap", ",", "seed", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", "\n", "\n", "print", "(", "f'{model_name} | AUC: {np.round(auc, 2)} [{np.round(ci_l, 2)}, {np.round(ci_h, 2)}]'", ")", "\n", "\n", "ap", ",", "ci_l", ",", "ci_h", ",", "precision", ",", "recall", "=", "stats", ".", "calc_curve_bootstrap", "(", "precision_recall_curve", ",", "average_precision_score", ",", "\n", "tmp_df", ".", "Progressor", ".", "values", ".", "astype", "(", "int", ")", ",", "\n", "tmp_df", ".", "Prediction", ".", "values", ".", "astype", "(", "float", ")", ",", "\n", "n_bootstrap", ",", "seed", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", "\n", "\n", "print", "(", "f'{model_name} | AP: {np.round(ap, 2)} [{np.round(ci_l, 2)}, {np.round(ci_h, 2)}]'", ")", "\n", "\n", "print", "(", "\"=\"", "*", "80", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.gcam.eval_batch": [[16, 67], ["fc.zero_grad", "F.adaptive_avg_pool2d().view.register_hook", "torch.softmax().view().mean", "F.softmax().view().mean.to().detach().numpy", "torch.cat", "torch.cat", "torch.cat.to().detach().numpy", "sklearn.preprocessing.OneHotEncoder", "numpy.argmax().reshape", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.cat.backward", "torch.no_grad", "torch.no_grad", "sample[].to", "sample[].to.size", "features", "torch.adaptive_avg_pool2d().view", "torch.no_grad", "torch.no_grad", "weight.unsqueeze().unsqueeze().expand().mul", "torch.relu().view().sum", "gcam_batch.to().numpy.to().numpy", "sample[].to.view", "features.size", "torch.softmax().view().mean", "out_kl.to().numpy.to().numpy", "grads.append", "torch.softmax().view", "F.softmax().view().mean.to().detach", "out_tmp[].view", "out_tmp[].sum().view", "torch.cat.to().detach", "numpy.argmax", "torch.from_numpy().float", "torch.from_numpy().float", "torch.adaptive_avg_pool2d", "range", "weight.unsqueeze().unsqueeze().expand", "torch.relu().view", "gcam_batch.to().numpy.to", "torch.softmax().view", "out_kl.to().numpy.to", "torch.softmax", "F.softmax().view().mean.to", "out_tmp[].sum", "torch.cat.to", "torch.cat.size", "torch.from_numpy", "torch.from_numpy", "features.size", "features.size", "fc", "sklearn.preprocessing.OneHotEncoder.fit_transform", "weight.unsqueeze().unsqueeze", "features.size", "torch.relu", "torch.softmax", "fc_kl", "weight.unsqueeze"], "function", ["None"], ["def", "eval_batch", "(", "sample", ",", "features", ",", "fc", ",", "fc_kl", "=", "None", ")", ":", "\n", "# We don't need gradient to make an inference  for the features", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "inputs", "=", "sample", "[", "'img'", "]", ".", "to", "(", "\"cuda\"", ")", "\n", "bs", ",", "ncrops", ",", "c", ",", "h", ",", "w", "=", "inputs", ".", "size", "(", ")", "\n", "maps", "=", "features", "(", "inputs", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "maps_avg", "=", "F", ".", "adaptive_avg_pool2d", "(", "maps", ",", "1", ")", ".", "view", "(", "maps", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "if", "fc_kl", "is", "not", "None", ":", "\n", "            ", "out_kl", "=", "F", ".", "softmax", "(", "fc_kl", "(", "maps_avg", ")", ",", "1", ")", ".", "view", "(", "bs", ",", "ncrops", ",", "-", "1", ")", ".", "mean", "(", "1", ")", "\n", "out_kl", "=", "out_kl", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", "\n", "", "", "fc", ".", "zero_grad", "(", ")", "\n", "# Registering a hook to get the gradients", "\n", "grads", "=", "[", "]", "\n", "\n", "# First we should attach the variable back to the graph", "\n", "maps_avg", ".", "requires_grad", "=", "True", "\n", "# Now registering the backward hook", "\n", "maps_avg", ".", "register_hook", "(", "lambda", "x", ":", "grads", ".", "append", "(", "x", ")", ")", "\n", "\n", "# Making the inference", "\n", "# Applying the TTA right away during the forward pass", "\n", "out_tmp", "=", "F", ".", "softmax", "(", "fc", "(", "maps_avg", ")", ",", "1", ")", ".", "view", "(", "bs", ",", "ncrops", ",", "-", "1", ")", ".", "mean", "(", "1", ")", "\n", "probs_not_summed", "=", "out_tmp", ".", "to", "(", "\"cpu\"", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "# Summing the probabilities values for progression", "\n", "# This allows us to predict progressor / non-progressor", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out_tmp", "[", ":", ",", "0", "]", ".", "view", "(", "-", "1", ",", "1", ")", ",", "out_tmp", "[", ":", ",", "1", ":", "]", ".", "sum", "(", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", ")", ",", "1", ")", "\n", "# Saving the results to CPU", "\n", "probs", "=", "out", ".", "to", "(", "\"cpu\"", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "# Using simple one hot encoder to create a fake gradient", "\n", "ohe", "=", "OneHotEncoder", "(", "sparse", "=", "False", ",", "categories", "=", "[", "range", "(", "out", ".", "size", "(", "1", ")", ")", "]", ")", "\n", "# Creating the fake gradient (read the paper for details)", "\n", "index", "=", "np", ".", "argmax", "(", "probs", ",", "axis", "=", "1", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "fake_grad", "=", "torch", ".", "from_numpy", "(", "ohe", ".", "fit_transform", "(", "index", ")", ")", ".", "float", "(", ")", ".", "to", "(", "'cuda'", ")", "\n", "# Backward pass after which we'll have the gradients", "\n", "out", ".", "backward", "(", "fake_grad", ")", "\n", "\n", "# Reshaping the activation maps sand getting the weights using the stored gradients", "\n", "# This way we would be able to consider GradCAM for each crop individually", "\n", "\n", "# Making the GradCAM", "\n", "# Going over the batch", "\n", "weight", "=", "grads", "[", "-", "1", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "weighted_A", "=", "weight", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "*", "maps", ".", "size", "(", ")", ")", ".", "mul", "(", "maps", ")", "\n", "gcam_batch", "=", "F", ".", "relu", "(", "weighted_A", ")", ".", "view", "(", "bs", ",", "ncrops", ",", "-", "1", ",", "maps", ".", "size", "(", "-", "2", ")", ",", "maps", ".", "size", "(", "-", "1", ")", ")", ".", "sum", "(", "2", ")", "\n", "gcam_batch", "=", "gcam_batch", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", "\n", "\n", "", "if", "fc_kl", "is", "not", "None", ":", "\n", "        ", "return", "gcam_batch", ",", "probs_not_summed", ",", "out_kl", "\n", "", "return", "gcam_batch", ",", "probs_not_summed", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.gcam.preds_and_hmaps": [[69, 143], ["torchvision.Compose", "tqdm.tqdm", "ValueError", "results.iterrows", "cv2.imread", "cv2.flip.reshape", "tv_transforms.Compose.", "cv2.flip.squeeze", "numpy.zeros", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize", "np.zeros.min", "np.zeros.max", "hmaps.append", "ids_rs.append", "matplotlib.figure", "matplotlib.subplot", "matplotlib.title", "matplotlib.imshow", "matplotlib.xticks", "matplotlib.yticks", "matplotlib.subplot", "matplotlib.title", "matplotlib.imshow", "matplotlib.imshow", "matplotlib.xticks", "matplotlib.yticks", "matplotlib.savefig", "matplotlib.close", "solt.Stream", "os.path.join", "cv2.flip", "os.path.join", "solt.PadTransform", "solt.CropTransform"], "function", ["None"], ["", "def", "preds_and_hmaps", "(", "results", ",", "gradcams", ",", "dataset_root", ",", "figsize", ",", "threshold", ",", "savepath", ",", "gcam_type", "=", "'prog'", ")", ":", "\n", "    ", "if", "gcam_type", "not", "in", "[", "'prog'", ",", "'non-prog'", "]", ":", "\n", "        ", "raise", "ValueError", "(", "'gcam type shoould be either prog or non-prog'", ")", "\n", "\n", "", "ids_rs", "=", "[", "]", "\n", "hmaps", "=", "[", "]", "\n", "\n", "w", ",", "h", "=", "700", ",", "700", "# 140x140mm", "\n", "size", "=", "(", "650", ",", "650", ")", "# 130x130mm - were used in the evaluation", "\n", "x1", "=", "w", "//", "2", "-", "size", "[", "0", "]", "//", "2", "\n", "y1", "=", "h", "//", "2", "-", "size", "[", "1", "]", "//", "2", "\n", "\n", "gcam_trf", "=", "tv_transforms", ".", "Compose", "(", "[", "\n", "img_labels2solt", ",", "\n", "slc", ".", "Stream", "(", "[", "\n", "slt", ".", "PadTransform", "(", "pad_to", "=", "(", "700", ",", "700", ")", ",", "padding", "=", "'z'", ")", ",", "\n", "slt", ".", "CropTransform", "(", "crop_size", "=", "(", "700", ",", "700", ")", ",", "crop_mode", "=", "'c'", ")", ",", "\n", "]", ",", "interpolation", "=", "'bicubic'", ")", ",", "\n", "unpack_solt_data", ",", "\n", "]", ")", "\n", "\n", "for", "i", ",", "entry", "in", "tqdm", "(", "results", ".", "iterrows", "(", ")", ",", "total", "=", "results", ".", "shape", "[", "0", "]", ",", "desc", "=", "f'GradCAM [{gcam_type}]:'", ")", ":", "\n", "        ", "if", "gcam_type", "==", "'prog'", ":", "\n", "            ", "if", "entry", ".", "pred", "<", "threshold", "or", "entry", ".", "Progressor", "==", "0", ":", "\n", "                ", "continue", "\n", "", "", "else", ":", "\n", "            ", "if", "entry", ".", "pred", ">", "threshold", "or", "entry", ".", "Progressor", "==", "1", ":", "\n", "                ", "continue", "\n", "\n", "", "", "img", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "f'{entry.ID}_00_{entry.Side}.png'", ")", ",", "0", ")", "\n", "\n", "if", "'L'", "==", "entry", ".", "Side", ":", "\n", "            ", "img", "=", "cv2", ".", "flip", "(", "img", ",", "1", ")", "\n", "\n", "", "img", "=", "img", ".", "reshape", "(", "(", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ",", "1", ")", ")", "\n", "img", ",", "_", ",", "_", "=", "gcam_trf", "(", "(", "img", ",", "0", ",", "0", ")", ")", "\n", "img", "=", "img", ".", "squeeze", "(", ")", "\n", "\n", "# We had 310x310 image and 5 300x300 crops", "\n", "# Now we map these crops back to the image", "\n", "tmp", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ")", "\n", "# Center crop", "\n", "tmp", "[", "y1", ":", "y1", "+", "size", "[", "0", "]", ",", "x1", ":", "x1", "+", "size", "[", "1", "]", "]", "+=", "cv2", ".", "resize", "(", "gradcams", "[", "i", ",", "0", ",", ":", ",", ":", "]", ",", "size", ")", "\n", "# Upper-left crop", "\n", "tmp", "[", "0", ":", "size", "[", "0", "]", ",", "0", ":", "size", "[", "1", "]", "]", "+=", "cv2", ".", "resize", "(", "gradcams", "[", "i", ",", "1", ",", ":", ",", ":", "]", ",", "size", ")", "\n", "# Upper-right crop", "\n", "tmp", "[", "0", ":", "size", "[", "0", "]", ",", "w", "-", "size", "[", "1", "]", ":", "w", "]", "+=", "cv2", ".", "resize", "(", "gradcams", "[", "i", ",", "2", ",", ":", ",", ":", "]", ",", "size", ")", "\n", "# Bottom-left crop", "\n", "tmp", "[", "h", "-", "size", "[", "0", "]", ":", "h", ",", "0", ":", "size", "[", "1", "]", "]", "+=", "cv2", ".", "resize", "(", "gradcams", "[", "i", ",", "3", ",", ":", ",", ":", "]", ",", "size", ")", "\n", "# Bottom-right crop", "\n", "tmp", "[", "h", "-", "size", "[", "0", "]", ":", "h", ",", "w", "-", "size", "[", "1", "]", ":", "w", "]", "+=", "cv2", ".", "resize", "(", "gradcams", "[", "i", ",", "4", ",", ":", ",", ":", "]", ",", "size", ")", "\n", "\n", "tmp", "-=", "tmp", ".", "min", "(", ")", "\n", "tmp", "/=", "tmp", ".", "max", "(", ")", "\n", "tmp", "*=", "255", "\n", "\n", "hmaps", ".", "append", "(", "tmp", ")", "\n", "ids_rs", ".", "append", "(", "entry", ".", "ID", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "figsize", ",", "figsize", ")", ")", "\n", "plt", ".", "subplot", "(", "121", ")", "\n", "plt", ".", "title", "(", "f'Original Image {entry.ID}'", ")", "\n", "plt", ".", "imshow", "(", "img", ",", "cmap", "=", "plt", ".", "cm", ".", "Greys_r", ")", "\n", "plt", ".", "xticks", "(", "[", "]", ")", "\n", "plt", ".", "yticks", "(", "[", "]", ")", "\n", "\n", "plt", ".", "subplot", "(", "122", ")", "\n", "plt", ".", "title", "(", "f'Prog. {entry.KL} -> {entry.KL + entry.Prog_increase} | {entry.Progressor_type}'", ")", "\n", "plt", ".", "imshow", "(", "img", ",", "cmap", "=", "plt", ".", "cm", ".", "Greys_r", ")", "\n", "plt", ".", "imshow", "(", "tmp", ",", "cmap", "=", "plt", ".", "cm", ".", "jet", ",", "alpha", "=", "0.5", ")", "\n", "plt", ".", "xticks", "(", "[", "]", ")", "\n", "plt", ".", "yticks", "(", "[", "]", ")", "\n", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "savepath", ",", "f'{entry.ID}_{entry.Side}.pdf'", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap": [[8, 54], ["numpy.random.seed", "tqdm.tqdm", "numpy.percentile", "numpy.percentile", "numpy.where", "numpy.where", "range", "metric_vals.append", "numpy.random.choice", "numpy.random.choice", "numpy.hstack", "numpy.random.choice", "y[].sum", "sklearn.metrics.roc_curve", "sklearn.metrics.roc_auc_score", "sklearn.metrics.roc_curve", "sklearn.metrics.roc_auc_score", "sklearn.metrics.roc_curve", "sklearn.metrics.roc_auc_score", "sklearn.metrics.precision_recall_curve", "sklearn.metrics.average_precision_score", "sklearn.metrics.precision_recall_curve", "sklearn.metrics.average_precision_score"], "function", ["None"], ["def", "calc_curve_bootstrap", "(", "curve", ",", "metric", ",", "y", ",", "preds", ",", "n_bootstrap", ",", "seed", "=", "12345", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", ":", "\n", "    ", "\"\"\"\n    Parameters\n    ----------\n    curve : function\n        Function, which computes the curve.\n    metric : fucntion\n        Metric to compute, e.g. AUC for ROC curve or AP for PR curve\n    y : numpy.array\n        Ground truth\n    preds : numpy.array\n        Predictions\n    n_bootstrap:\n        Number of bootstrap samples to draw\n    seed : int\n        Random seed\n    stratified : bool\n        Whether to do a stratified bootstrapping\n    alpha : float\n        Confidence intervals width\n\n    \"\"\"", "\n", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "metric_vals", "=", "[", "]", "\n", "ind_pos", "=", "np", ".", "where", "(", "y", "==", "1", ")", "[", "0", "]", "\n", "ind_neg", "=", "np", ".", "where", "(", "y", "==", "0", ")", "[", "0", "]", "\n", "\n", "for", "_", "in", "tqdm", "(", "range", "(", "n_bootstrap", ")", ",", "total", "=", "n_bootstrap", ",", "desc", "=", "'Bootstrap:'", ")", ":", "\n", "        ", "if", "stratified", ":", "\n", "            ", "ind_pos_bs", "=", "np", ".", "random", ".", "choice", "(", "ind_pos", ",", "ind_pos", ".", "shape", "[", "0", "]", ")", "\n", "ind_neg_bs", "=", "np", ".", "random", ".", "choice", "(", "ind_neg", ",", "ind_neg", ".", "shape", "[", "0", "]", ")", "\n", "ind", "=", "np", ".", "hstack", "(", "(", "ind_pos_bs", ",", "ind_neg_bs", ")", ")", "\n", "", "else", ":", "\n", "            ", "ind", "=", "np", ".", "random", ".", "choice", "(", "y", ".", "shape", "[", "0", "]", ",", "y", ".", "shape", "[", "0", "]", ")", "\n", "\n", "", "if", "y", "[", "ind", "]", ".", "sum", "(", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "metric_vals", ".", "append", "(", "metric", "(", "y", "[", "ind", "]", ",", "preds", "[", "ind", "]", ")", ")", "\n", "\n", "", "metric_val", "=", "metric", "(", "y", ",", "preds", ")", "\n", "x_curve_vals", ",", "y_curve_vals", ",", "_", "=", "curve", "(", "y", ",", "preds", ")", "\n", "ci_l", "=", "np", ".", "percentile", "(", "metric_vals", ",", "(", "100", "-", "alpha", ")", "//", "2", ")", "\n", "ci_h", "=", "np", ".", "percentile", "(", "metric_vals", ",", "alpha", "+", "(", "100", "-", "alpha", ")", "//", "2", ")", "\n", "\n", "return", "metric_val", ",", "ci_l", ",", "ci_h", ",", "x_curve_vals", ",", "y_curve_vals", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.roc_curve_bootstrap": [[56, 99], ["stats.calc_curve_bootstrap", "matplotlib.figure", "matplotlib.title", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlim", "matplotlib.ylim", "matplotlib.grid", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.tight_layout", "matplotlib.show", "matplotlib.close", "print", "print", "matplotlib.savefig", "numpy.round", "numpy.round", "numpy.round", "numpy.round"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap"], ["", "def", "roc_curve_bootstrap", "(", "y", ",", "preds", ",", "savepath", "=", "None", ",", "n_bootstrap", "=", "1000", ",", "seed", "=", "42", ",", "return_curve", "=", "False", ")", ":", "\n", "    ", "\"\"\"Evaluates ROC curve using bootstrapping\n\n    Also reports confidence intervals and prints them.\n\n    Parameters\n    ----------\n    y : numpy.array\n        Ground truth\n    preds : numpy.array\n        Predictions\n    savepath: str\n        Where to save the figure with ROC curve\n    n_bootstrap:\n        Number of bootstrap samples to draw\n    seed : int\n        Random seed\n\n    \"\"\"", "\n", "auc", ",", "ci_l", ",", "ci_h", ",", "fpr", ",", "tpr", "=", "calc_curve_bootstrap", "(", "roc_curve", ",", "roc_auc_score", ",", "y", ",", "preds", ",", "\n", "n_bootstrap", ",", "seed", ",", "stratified", "=", "False", ",", "alpha", "=", "95", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "8", ",", "8", ")", ")", "\n", "plt", ".", "title", "(", "f'AUC {np.round(auc, 2):.2f} 95% CI [{np.round(ci_l, 2):.2f}-{np.round(ci_h, 2):.2f}]'", ")", "\n", "plt", ".", "plot", "(", "fpr", ",", "tpr", ",", "'r-'", ")", "\n", "plt", ".", "plot", "(", "[", "0", ",", "1", "]", ",", "[", "0", ",", "1", "]", ",", "'--'", ",", "color", "=", "'black'", ")", "\n", "\n", "plt", ".", "xlim", "(", "[", "0", ",", "1", "]", ")", "\n", "plt", ".", "ylim", "(", "[", "0", ",", "1", "]", ")", "\n", "plt", ".", "grid", "(", ")", "\n", "plt", ".", "xlabel", "(", "'False positive rate'", ")", "\n", "plt", ".", "ylabel", "(", "'True positive rate'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "if", "savepath", "is", "not", "None", ":", "\n", "        ", "plt", ".", "savefig", "(", "savepath", ",", "bbox_inches", "=", "'tight'", ")", "\n", "", "plt", ".", "show", "(", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "print", "(", "'AUC:'", ",", "np", ".", "round", "(", "auc", ",", "5", ")", ")", "\n", "print", "(", "f'CI [{ci_l:.5f}, {ci_h:.5f}]'", ")", "\n", "if", "return_curve", ":", "\n", "        ", "return", "auc", ",", "ci_l", ",", "ci_h", ",", "fpr", ",", "tpr", "\n", "", "return", "auc", ",", "ci_l", ",", "ci_h", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compare_curves": [[101, 147], ["matplotlib.figure", "stats.calc_curve_bootstrap", "print", "matplotlib.plot", "stats.calc_curve_bootstrap", "print", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlim", "matplotlib.ylim", "matplotlib.grid", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.tight_layout", "matplotlib.show", "matplotlib.close", "matplotlib.figure", "matplotlib.axhline", "stats.calc_curve_bootstrap", "print", "matplotlib.plot", "stats.calc_curve_bootstrap", "print", "matplotlib.plot", "matplotlib.xlim", "matplotlib.ylim", "matplotlib.grid", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.tight_layout", "matplotlib.show", "matplotlib.close", "matplotlib.savefig", "matplotlib.savefig", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "y.sum", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap"], ["", "def", "compare_curves", "(", "y", ",", "preds1", ",", "preds2", ",", "savepath_roc", "=", "None", ",", "savepath_pr", "=", "None", ",", "n_bootstrap", "=", "2000", ",", "seed", "=", "12345", ")", ":", "\n", "    ", "plt", ".", "figure", "(", "figsize", "=", "(", "8", ",", "8", ")", ")", "\n", "auc", ",", "ci_l", ",", "ci_h", ",", "fpr", ",", "tpr", "=", "calc_curve_bootstrap", "(", "roc_curve", ",", "roc_auc_score", ",", "y", ",", "preds1", ",", "n_bootstrap", "=", "n_bootstrap", ",", "\n", "seed", "=", "seed", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", "\n", "print", "(", "f'AUC (method 1): {np.round(auc, 2):.2f} | 95% CI [{np.round(ci_l, 2):.2f},{np.round(ci_h, 2):.2f}]'", ")", "\n", "plt", ".", "plot", "(", "fpr", ",", "tpr", ",", "'b-'", ")", "\n", "\n", "auc", ",", "ci_l", ",", "ci_h", ",", "fpr", ",", "tpr", "=", "calc_curve_bootstrap", "(", "roc_curve", ",", "roc_auc_score", ",", "y", ",", "preds2", ",", "n_bootstrap", "=", "n_bootstrap", ",", "\n", "seed", "=", "seed", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", "\n", "print", "(", "f'AUC (method 2): {np.round(auc, 2):.2f} | 95% CI [{np.round(ci_l, 2):.2f},{np.round(ci_h, 2):.2f}]'", ")", "\n", "plt", ".", "plot", "(", "fpr", ",", "tpr", ",", "'r-'", ")", "\n", "plt", ".", "plot", "(", "[", "0", ",", "1", "]", ",", "[", "0", ",", "1", "]", ",", "'-'", ",", "color", "=", "'black'", ")", "\n", "\n", "plt", ".", "xlim", "(", "[", "0", ",", "1", "]", ")", "\n", "plt", ".", "ylim", "(", "[", "0", ",", "1", "]", ")", "\n", "plt", ".", "grid", "(", ")", "\n", "plt", ".", "xlabel", "(", "'False positive rate'", ")", "\n", "plt", ".", "ylabel", "(", "'True positive rate'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "if", "savepath_roc", ":", "\n", "        ", "plt", ".", "savefig", "(", "savepath_roc", ",", "bbox_inches", "=", "'tight'", ")", "\n", "", "plt", ".", "show", "(", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "8", ",", "8", ")", ")", "\n", "plt", ".", "axhline", "(", "y", "=", "y", ".", "sum", "(", ")", "/", "y", ".", "shape", "[", "0", "]", ",", "color", "=", "'black'", ",", "linestyle", "=", "'--'", ")", "\n", "AP", ",", "ci_l", ",", "ci_h", ",", "precision", ",", "recall", "=", "calc_curve_bootstrap", "(", "precision_recall_curve", ",", "average_precision_score", ",", "y", ",", "\n", "preds1", ",", "n_bootstrap", ",", "seed", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", "\n", "print", "(", "f'AP (method 1): {np.round(AP, 2):.2f} | 95% CI [{np.round(ci_l, 2):.2f},{np.round(ci_h, 2):.2f}]'", ")", "\n", "\n", "plt", ".", "plot", "(", "recall", ",", "precision", ",", "'b-'", ")", "\n", "AP", ",", "ci_l", ",", "ci_h", ",", "precision", ",", "recall", "=", "calc_curve_bootstrap", "(", "precision_recall_curve", ",", "average_precision_score", ",", "y", ",", "\n", "preds2", ",", "n_bootstrap", ",", "seed", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", "\n", "print", "(", "f'AP (method 2): {np.round(AP, 2):.2f} | 95% CI [{np.round(ci_l, 2):.2f},{np.round(ci_h, 2):.2f}]'", ")", "\n", "plt", ".", "plot", "(", "recall", ",", "precision", ",", "'r-'", ")", "\n", "\n", "plt", ".", "xlim", "(", "[", "0", ",", "1", "]", ")", "\n", "plt", ".", "ylim", "(", "[", "0", ",", "1", "]", ")", "\n", "plt", ".", "grid", "(", ")", "\n", "plt", ".", "xlabel", "(", "'Recall'", ")", "\n", "plt", ".", "ylabel", "(", "'Precision'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "if", "savepath_pr", ":", "\n", "        ", "plt", ".", "savefig", "(", "savepath_pr", ",", "bbox_inches", "=", "'tight'", ")", "\n", "", "plt", ".", "show", "(", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_midrank": [[154, 177], ["numpy.argsort", "len", "numpy.zeros", "numpy.empty"], "function", ["None"], ["", "def", "compute_midrank", "(", "x", ")", ":", "\n", "    ", "\"\"\"Computes midranks.\n    Args:\n       x - a 1D numpy array\n    Returns:\n       array of midranks\n    \"\"\"", "\n", "J", "=", "np", ".", "argsort", "(", "x", ")", "\n", "Z", "=", "x", "[", "J", "]", "\n", "N", "=", "len", "(", "x", ")", "\n", "T", "=", "np", ".", "zeros", "(", "N", ",", "dtype", "=", "np", ".", "float", ")", "\n", "i", "=", "0", "\n", "while", "i", "<", "N", ":", "\n", "        ", "j", "=", "i", "\n", "while", "j", "<", "N", "and", "Z", "[", "j", "]", "==", "Z", "[", "i", "]", ":", "\n", "            ", "j", "+=", "1", "\n", "", "T", "[", "i", ":", "j", "]", "=", "0.5", "*", "(", "i", "+", "j", "-", "1", ")", "\n", "i", "=", "j", "\n", "", "T2", "=", "np", ".", "empty", "(", "N", ",", "dtype", "=", "np", ".", "float", ")", "\n", "# Note(kazeevn) +1 is due to Python using 0-based indexing", "\n", "# instead of 1-based in the AUC formula in the paper", "\n", "T2", "[", "J", "]", "=", "T", "+", "1", "\n", "return", "T2", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_midrank_weight": [[179, 201], ["numpy.argsort", "numpy.cumsum", "len", "numpy.zeros", "numpy.empty", "cumulative_weight[].mean"], "function", ["None"], ["", "def", "compute_midrank_weight", "(", "x", ",", "sample_weight", ")", ":", "\n", "    ", "\"\"\"Computes midranks.\n    Args:\n       x - a 1D numpy array\n    Returns:\n       array of midranks\n    \"\"\"", "\n", "J", "=", "np", ".", "argsort", "(", "x", ")", "\n", "Z", "=", "x", "[", "J", "]", "\n", "cumulative_weight", "=", "np", ".", "cumsum", "(", "sample_weight", "[", "J", "]", ")", "\n", "N", "=", "len", "(", "x", ")", "\n", "T", "=", "np", ".", "zeros", "(", "N", ",", "dtype", "=", "np", ".", "float", ")", "\n", "i", "=", "0", "\n", "while", "i", "<", "N", ":", "\n", "        ", "j", "=", "i", "\n", "while", "j", "<", "N", "and", "Z", "[", "j", "]", "==", "Z", "[", "i", "]", ":", "\n", "            ", "j", "+=", "1", "\n", "", "T", "[", "i", ":", "j", "]", "=", "cumulative_weight", "[", "i", ":", "j", "]", ".", "mean", "(", ")", "\n", "i", "=", "j", "\n", "", "T2", "=", "np", ".", "empty", "(", "N", ",", "dtype", "=", "np", ".", "float", ")", "\n", "T2", "[", "J", "]", "=", "T", "\n", "return", "T2", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.fastDeLong": [[203, 208], ["stats.fastDeLong_no_weights", "stats.fastDeLong_weights"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.fastDeLong_no_weights", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.fastDeLong_weights"], ["", "def", "fastDeLong", "(", "predictions_sorted_transposed", ",", "label_1_count", ",", "sample_weight", ")", ":", "\n", "    ", "if", "sample_weight", "is", "None", ":", "\n", "        ", "return", "fastDeLong_no_weights", "(", "predictions_sorted_transposed", ",", "label_1_count", ")", "\n", "", "else", ":", "\n", "        ", "return", "fastDeLong_weights", "(", "predictions_sorted_transposed", ",", "label_1_count", ",", "sample_weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.fastDeLong_weights": [[210, 257], ["numpy.empty", "numpy.empty", "numpy.empty", "range", "sample_weight[].sum", "sample_weight[].sum", "numpy.dot", "np.dot.sum", "numpy.cov", "numpy.cov", "stats.compute_midrank_weight", "stats.compute_midrank_weight", "stats.compute_midrank_weight"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_midrank_weight", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_midrank_weight", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_midrank_weight"], ["", "", "def", "fastDeLong_weights", "(", "predictions_sorted_transposed", ",", "label_1_count", ",", "sample_weight", ")", ":", "\n", "    ", "\"\"\"\n    The fast version of DeLong's method for computing the covariance of\n    unadjusted AUC.\n    Args:\n       predictions_sorted_transposed: a 2D numpy.array[n_classifiers, n_examples]\n          sorted such as the examples with label \"1\" are first\n    Returns:\n       (AUC value, DeLong covariance)\n    Reference:\n     @article{sun2014fast,\n       title={Fast Implementation of DeLong's Algorithm for\n              Comparing the Areas Under Correlated Receiver Oerating Characteristic Curves},\n       author={Xu Sun and Weichao Xu},\n       journal={IEEE Signal Processing Letters},\n       volume={21},\n       number={11},\n       pages={1389--1393},\n       year={2014},\n       publisher={IEEE}\n     }\n    \"\"\"", "\n", "# Short variables are named as they are in the paper", "\n", "m", "=", "label_1_count", "\n", "n", "=", "predictions_sorted_transposed", ".", "shape", "[", "1", "]", "-", "m", "\n", "positive_examples", "=", "predictions_sorted_transposed", "[", ":", ",", ":", "m", "]", "\n", "negative_examples", "=", "predictions_sorted_transposed", "[", ":", ",", "m", ":", "]", "\n", "k", "=", "predictions_sorted_transposed", ".", "shape", "[", "0", "]", "\n", "\n", "tx", "=", "np", ".", "empty", "(", "[", "k", ",", "m", "]", ",", "dtype", "=", "np", ".", "float", ")", "\n", "ty", "=", "np", ".", "empty", "(", "[", "k", ",", "n", "]", ",", "dtype", "=", "np", ".", "float", ")", "\n", "tz", "=", "np", ".", "empty", "(", "[", "k", ",", "m", "+", "n", "]", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "r", "in", "range", "(", "k", ")", ":", "\n", "        ", "tx", "[", "r", ",", ":", "]", "=", "compute_midrank_weight", "(", "positive_examples", "[", "r", ",", ":", "]", ",", "sample_weight", "[", ":", "m", "]", ")", "\n", "ty", "[", "r", ",", ":", "]", "=", "compute_midrank_weight", "(", "negative_examples", "[", "r", ",", ":", "]", ",", "sample_weight", "[", "m", ":", "]", ")", "\n", "tz", "[", "r", ",", ":", "]", "=", "compute_midrank_weight", "(", "predictions_sorted_transposed", "[", "r", ",", ":", "]", ",", "sample_weight", ")", "\n", "", "total_positive_weights", "=", "sample_weight", "[", ":", "m", "]", ".", "sum", "(", ")", "\n", "total_negative_weights", "=", "sample_weight", "[", "m", ":", "]", ".", "sum", "(", ")", "\n", "pair_weights", "=", "np", ".", "dot", "(", "sample_weight", "[", ":", "m", ",", "np", ".", "newaxis", "]", ",", "sample_weight", "[", "np", ".", "newaxis", ",", "m", ":", "]", ")", "\n", "total_pair_weights", "=", "pair_weights", ".", "sum", "(", ")", "\n", "aucs", "=", "(", "sample_weight", "[", ":", "m", "]", "*", "(", "tz", "[", ":", ",", ":", "m", "]", "-", "tx", ")", ")", ".", "sum", "(", "axis", "=", "1", ")", "/", "total_pair_weights", "\n", "v01", "=", "(", "tz", "[", ":", ",", ":", "m", "]", "-", "tx", "[", ":", ",", ":", "]", ")", "/", "total_negative_weights", "\n", "v10", "=", "1.", "-", "(", "tz", "[", ":", ",", "m", ":", "]", "-", "ty", "[", ":", ",", ":", "]", ")", "/", "total_positive_weights", "\n", "sx", "=", "np", ".", "cov", "(", "v01", ")", "\n", "sy", "=", "np", ".", "cov", "(", "v10", ")", "\n", "delongcov", "=", "sx", "/", "m", "+", "sy", "/", "n", "\n", "return", "aucs", ",", "delongcov", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.fastDeLong_no_weights": [[259, 302], ["numpy.empty", "numpy.empty", "numpy.empty", "range", "numpy.cov", "numpy.cov", "stats.compute_midrank", "stats.compute_midrank", "stats.compute_midrank", "tz[].sum", "float"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_midrank", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_midrank", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_midrank"], ["", "def", "fastDeLong_no_weights", "(", "predictions_sorted_transposed", ",", "label_1_count", ")", ":", "\n", "    ", "\"\"\"\n    The fast version of DeLong's method for computing the covariance of\n    unadjusted AUC.\n    Args:\n       predictions_sorted_transposed: a 2D numpy.array[n_classifiers, n_examples]\n          sorted such as the examples with label \"1\" are first\n    Returns:\n       (AUC value, DeLong covariance)\n    Reference:\n     @article{sun2014fast,\n       title={Fast Implementation of DeLong's Algorithm for\n              Comparing the Areas Under Correlated Receiver Oerating Characteristic Curves},\n       author={Xu Sun and Weichao Xu},\n       journal={IEEE Signal Processing Letters},\n       volume={21},\n       number={11},\n       pages={1389--1393},\n       year={2014},\n       publisher={IEEE}\n     }\n    \"\"\"", "\n", "# Short variables are named as they are in the paper", "\n", "m", "=", "label_1_count", "\n", "n", "=", "predictions_sorted_transposed", ".", "shape", "[", "1", "]", "-", "m", "\n", "positive_examples", "=", "predictions_sorted_transposed", "[", ":", ",", ":", "m", "]", "\n", "negative_examples", "=", "predictions_sorted_transposed", "[", ":", ",", "m", ":", "]", "\n", "k", "=", "predictions_sorted_transposed", ".", "shape", "[", "0", "]", "\n", "\n", "tx", "=", "np", ".", "empty", "(", "[", "k", ",", "m", "]", ",", "dtype", "=", "np", ".", "float", ")", "\n", "ty", "=", "np", ".", "empty", "(", "[", "k", ",", "n", "]", ",", "dtype", "=", "np", ".", "float", ")", "\n", "tz", "=", "np", ".", "empty", "(", "[", "k", ",", "m", "+", "n", "]", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "r", "in", "range", "(", "k", ")", ":", "\n", "        ", "tx", "[", "r", ",", ":", "]", "=", "compute_midrank", "(", "positive_examples", "[", "r", ",", ":", "]", ")", "\n", "ty", "[", "r", ",", ":", "]", "=", "compute_midrank", "(", "negative_examples", "[", "r", ",", ":", "]", ")", "\n", "tz", "[", "r", ",", ":", "]", "=", "compute_midrank", "(", "predictions_sorted_transposed", "[", "r", ",", ":", "]", ")", "\n", "", "aucs", "=", "tz", "[", ":", ",", ":", "m", "]", ".", "sum", "(", "axis", "=", "1", ")", "/", "m", "/", "n", "-", "float", "(", "m", "+", "1.0", ")", "/", "2.0", "/", "n", "\n", "v01", "=", "(", "tz", "[", ":", ",", ":", "m", "]", "-", "tx", "[", ":", ",", ":", "]", ")", "/", "n", "\n", "v10", "=", "1.0", "-", "(", "tz", "[", ":", ",", "m", ":", "]", "-", "ty", "[", ":", ",", ":", "]", ")", "/", "m", "\n", "sx", "=", "np", ".", "cov", "(", "v01", ")", "\n", "sy", "=", "np", ".", "cov", "(", "v10", ")", "\n", "delongcov", "=", "sx", "/", "m", "+", "sy", "/", "n", "\n", "return", "aucs", ",", "delongcov", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_pvalue": [[304, 315], ["numpy.array", "numpy.abs", "numpy.sqrt", "numpy.log10", "numpy.diff", "numpy.dot", "scipy.stats.norm.logsf", "numpy.log", "numpy.dot"], "function", ["None"], ["", "def", "calc_pvalue", "(", "aucs", ",", "sigma", ")", ":", "\n", "    ", "\"\"\"Computes log(10) of p-values.\n    Args:\n       aucs: 1D array of AUCs\n       sigma: AUC DeLong covariances\n    Returns:\n       log10(pvalue)\n    \"\"\"", "\n", "l", "=", "np", ".", "array", "(", "[", "[", "1", ",", "-", "1", "]", "]", ")", "\n", "z", "=", "np", ".", "abs", "(", "np", ".", "diff", "(", "aucs", ")", ")", "/", "np", ".", "sqrt", "(", "np", ".", "dot", "(", "np", ".", "dot", "(", "l", ",", "sigma", ")", ",", "l", ".", "T", ")", ")", "\n", "return", "np", ".", "log10", "(", "2", ")", "+", "scipy", ".", "stats", ".", "norm", ".", "logsf", "(", "z", ",", "loc", "=", "0", ",", "scale", "=", "1", ")", "/", "np", ".", "log", "(", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_ground_truth_statistics": [[317, 327], ["numpy.array_equal", "int", "numpy.unique", "ground_truth.sum"], "function", ["None"], ["", "def", "compute_ground_truth_statistics", "(", "ground_truth", ",", "sample_weight", ")", ":", "\n", "    ", "assert", "np", ".", "array_equal", "(", "np", ".", "unique", "(", "ground_truth", ")", ",", "[", "0", ",", "1", "]", ")", "\n", "order", "=", "(", "-", "ground_truth", ")", ".", "argsort", "(", ")", "\n", "label_1_count", "=", "int", "(", "ground_truth", ".", "sum", "(", ")", ")", "\n", "if", "sample_weight", "is", "None", ":", "\n", "        ", "ordered_sample_weight", "=", "None", "\n", "", "else", ":", "\n", "        ", "ordered_sample_weight", "=", "sample_weight", "[", "order", "]", "\n", "\n", "", "return", "order", ",", "label_1_count", ",", "ordered_sample_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.delong_roc_variance": [[329, 342], ["stats.compute_ground_truth_statistics", "stats.fastDeLong", "len"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_ground_truth_statistics", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.fastDeLong"], ["", "def", "delong_roc_variance", "(", "ground_truth", ",", "predictions", ",", "sample_weight", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Computes ROC AUC variance for a single set of predictions\n    Args:\n       ground_truth: np.array of 0 and 1\n       predictions: np.array of floats of the probability of being class 1\n    \"\"\"", "\n", "order", ",", "label_1_count", ",", "ordered_sample_weight", "=", "compute_ground_truth_statistics", "(", "\n", "ground_truth", ",", "sample_weight", ")", "\n", "predictions_sorted_transposed", "=", "predictions", "[", "np", ".", "newaxis", ",", "order", "]", "\n", "aucs", ",", "delongcov", "=", "fastDeLong", "(", "predictions_sorted_transposed", ",", "label_1_count", ",", "ordered_sample_weight", ")", "\n", "assert", "len", "(", "aucs", ")", "==", "1", ",", "\"There is a bug in the code, please forward this to the developers\"", "\n", "return", "aucs", "[", "0", "]", ",", "delongcov", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.delong_roc_test": [[344, 358], ["stats.compute_ground_truth_statistics", "stats.fastDeLong", "stats.calc_pvalue", "numpy.vstack"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.compute_ground_truth_statistics", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.fastDeLong", "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_pvalue"], ["", "def", "delong_roc_test", "(", "ground_truth", ",", "predictions_one", ",", "predictions_two", ")", ":", "\n", "    ", "\"\"\"\n    Computes log(p-value) for hypothesis that two ROC AUCs are different\n    Args:\n       ground_truth: np.array of 0 and 1\n       predictions_one: predictions of the first model,\n          np.array of floats of the probability of being class 1\n       predictions_two: predictions of the second model,\n          np.array of floats of the probability of being class 1\n    \"\"\"", "\n", "order", ",", "label_1_count", ",", "_", "=", "compute_ground_truth_statistics", "(", "ground_truth", ",", "None", ")", "\n", "predictions_sorted_transposed", "=", "np", ".", "vstack", "(", "(", "predictions_one", ",", "predictions_two", ")", ")", "[", ":", ",", "order", "]", "\n", "aucs", ",", "delongcov", "=", "fastDeLong", "(", "predictions_sorted_transposed", ",", "label_1_count", ",", "None", ")", "\n", "return", "calc_pvalue", "(", "aucs", ",", "delongcov", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.scripts.generate_paper_subplots.add_roc_curve": [[18, 32], ["oaprogression.evaluation.stats.calc_curve_bootstrap", "tmp_df.Progressor.values.astype", "tmp_df.Prediction.values.astype", "axs.plot", "axs.plot", "axs.legend", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap"], ["def", "add_roc_curve", "(", "axs", ",", "tmp_df", ",", "key", ",", "color", ",", "legend", "=", "True", ",", "seed", "=", "12345", ",", "n_bootstrap", "=", "2000", ")", ":", "\n", "    ", "auc", ",", "ci_l", ",", "ci_h", ",", "fpr", ",", "tpr", "=", "stats", ".", "calc_curve_bootstrap", "(", "roc_curve", ",", "roc_auc_score", ",", "\n", "tmp_df", ".", "Progressor", ".", "values", ".", "astype", "(", "int", ")", ",", "\n", "tmp_df", ".", "Prediction", ".", "values", ".", "astype", "(", "float", ")", ",", "\n", "n_bootstrap", "=", "n_bootstrap", ",", "\n", "seed", "=", "seed", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", "\n", "if", "key", "is", "None", ":", "\n", "        ", "key", "=", "''", "\n", "", "if", "color", "is", "None", ":", "\n", "        ", "axs", ".", "plot", "(", "fpr", ",", "tpr", ",", "label", "=", "key", "+", "f' ({np.round(auc, 2)} [{np.round(ci_l, 2)}, {np.round(ci_h, 2)}])'", ")", "\n", "", "else", ":", "\n", "        ", "axs", ".", "plot", "(", "fpr", ",", "tpr", ",", "label", "=", "key", "+", "f' ({np.round(auc, 2)} [{np.round(ci_l, 2)}, {np.round(ci_h, 2)}])'", ",", "color", "=", "color", ")", "\n", "", "if", "legend", ":", "\n", "        ", "axs", ".", "legend", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.scripts.generate_paper_subplots.add_pr_curve": [[34, 48], ["oaprogression.evaluation.stats.calc_curve_bootstrap", "tmp_df.Progressor.values.astype", "tmp_df.Prediction.values.astype", "axs.plot", "axs.plot", "axs.legend", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.round"], "function", ["home.repos.pwc.inspect_result.MIPT-Oulu_OAProgression.evaluation.stats.calc_curve_bootstrap"], ["", "", "def", "add_pr_curve", "(", "axs", ",", "tmp_df", ",", "key", ",", "color", ",", "legend", "=", "True", ",", "seed", "=", "12345", ",", "n_bootstrap", "=", "2000", ")", ":", "\n", "    ", "ap", ",", "ci_l", ",", "ci_h", ",", "precision", ",", "recall", "=", "stats", ".", "calc_curve_bootstrap", "(", "precision_recall_curve", ",", "average_precision_score", ",", "\n", "tmp_df", ".", "Progressor", ".", "values", ".", "astype", "(", "int", ")", ",", "\n", "tmp_df", ".", "Prediction", ".", "values", ".", "astype", "(", "float", ")", ",", "\n", "n_bootstrap", "=", "n_bootstrap", ",", "\n", "seed", "=", "seed", ",", "stratified", "=", "True", ",", "alpha", "=", "95", ")", "\n", "\n", "if", "color", "is", "None", ":", "\n", "        ", "axs", ".", "plot", "(", "recall", ",", "precision", ",", "label", "=", "key", "+", "f' ({np.round(ap, 2)} [{np.round(ci_l, 2)}, {np.round(ci_h, 2)}])'", ")", "\n", "", "else", ":", "\n", "        ", "axs", ".", "plot", "(", "recall", ",", "precision", ",", "label", "=", "key", "+", "f' ({np.round(ap, 2)} [{np.round(ci_l, 2)}, {np.round(ci_h, 2)}])'", ",", "\n", "color", "=", "color", ")", "\n", "", "if", "legend", ":", "\n", "        ", "axs", ".", "legend", "(", ")", "\n", "\n"]]}