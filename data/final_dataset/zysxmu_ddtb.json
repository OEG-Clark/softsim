{"home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.timer.__init__": [[22, 25], ["utility.timer.tic"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "=", "0", "\n", "self", ".", "tic", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.timer.tic": [[26, 28], ["time.time"], "methods", ["None"], ["", "def", "tic", "(", "self", ")", ":", "\n", "        ", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.timer.toc": [[29, 33], ["time.time", "time.time"], "methods", ["None"], ["", "def", "toc", "(", "self", ",", "restart", "=", "False", ")", ":", "\n", "        ", "diff", "=", "time", ".", "time", "(", ")", "-", "self", ".", "t0", "\n", "if", "restart", ":", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.timer.hold": [[34, 36], ["utility.timer.toc"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.toc"], ["", "def", "hold", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "+=", "self", ".", "toc", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.timer.release": [[37, 42], ["None"], "methods", ["None"], ["", "def", "release", "(", "self", ")", ":", "\n", "        ", "ret", "=", "self", ".", "acc", "\n", "self", ".", "acc", "=", "0", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.timer.reset": [[43, 45], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.__init__": [[47, 87], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "datetime.datetime.now().strftime", "os.makedirs", "os.makedirs", "os.makedirs", "open", "open", "os.path.join", "os.path.join", "os.path.exists", "os.system", "utility.checkpoint.get_path", "os.makedirs", "utility.checkpoint.get_path", "os.path.exists", "utility.checkpoint.get_path", "utility.checkpoint.get_path", "open", "f.write", "vars", "f.write", "datetime.datetime.now", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "utility.checkpoint.get_path", "utility.checkpoint.get_path", "utility.checkpoint.get_path", "f.write", "utility.checkpoint.get_path", "len", "getattr"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "ok", "=", "True", "\n", "self", ".", "log", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "ssim_log", "=", "torch", ".", "Tensor", "(", ")", "\n", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "\n", "if", "not", "args", ".", "load", ":", "\n", "            ", "if", "not", "args", ".", "save", ":", "\n", "                ", "args", ".", "save", "=", "now", "\n", "", "self", ".", "dir", "=", "os", ".", "path", ".", "join", "(", "'..'", ",", "'experiment'", ",", "args", ".", "save", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dir", "=", "os", ".", "path", ".", "join", "(", "'..'", ",", "'experiment'", ",", "args", ".", "load", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", ")", ":", "\n", "                ", "self", ".", "log", "=", "torch", ".", "load", "(", "self", ".", "get_path", "(", "'psnr_log.pt'", ")", ")", "\n", "print", "(", "'Continue from epoch {}...'", ".", "format", "(", "len", "(", "self", ".", "log", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "args", ".", "load", "=", "''", "\n", "\n", "", "", "if", "args", ".", "reset", ":", "\n", "            ", "os", ".", "system", "(", "'rm -rf '", "+", "self", ".", "dir", ")", "\n", "args", ".", "load", "=", "''", "\n", "\n", "", "os", ".", "makedirs", "(", "self", ".", "dir", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "get_path", "(", "'model'", ")", ",", "exist_ok", "=", "True", ")", "\n", "for", "d", "in", "args", ".", "data_test", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "get_path", "(", "'results-{}'", ".", "format", "(", "d", ")", ")", ",", "exist_ok", "=", "True", ")", "\n", "", "os", ".", "makedirs", "(", "self", ".", "get_path", "(", "'run'", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "open_type", "=", "'a'", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "get_path", "(", "'log.txt'", ")", ")", "else", "'w'", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "get_path", "(", "'log.txt'", ")", ",", "open_type", ")", "\n", "self", ".", "eval_file", "=", "open", "(", "self", ".", "get_path", "(", "'eval.txt'", ")", ",", "open_type", ")", "\n", "\n", "with", "open", "(", "self", ".", "get_path", "(", "'config.txt'", ")", ",", "open_type", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "now", "+", "'\\n\\n'", ")", "\n", "for", "arg", "in", "vars", "(", "args", ")", ":", "\n", "                ", "f", ".", "write", "(", "'{}: {}\\n'", ".", "format", "(", "arg", ",", "getattr", "(", "args", ",", "arg", ")", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "\n", "", "self", ".", "n_processes", "=", "8", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.get_path": [[88, 90], ["os.path.join"], "methods", ["None"], ["", "def", "get_path", "(", "self", ",", "*", "subdir", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "*", "subdir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.save": [[91, 99], ["trainer.model.save", "trainer.loss.save", "trainer.loss.plot_loss", "utility.checkpoint.plot_psnr", "trainer.optimizer.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "utility.checkpoint.get_path", "utility.checkpoint.get_path"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.plot_loss", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.plot_psnr", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "def", "save", "(", "self", ",", "trainer", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "trainer", ".", "model", ".", "save", "(", "self", ".", "get_path", "(", "'model'", ")", ",", "epoch", ",", "is_best", "=", "is_best", ")", "\n", "trainer", ".", "loss", ".", "save", "(", "self", ".", "dir", ")", "\n", "trainer", ".", "loss", ".", "plot_loss", "(", "self", ".", "dir", ",", "epoch", ")", "\n", "\n", "self", ".", "plot_psnr", "(", "epoch", ")", "\n", "trainer", ".", "optimizer", ".", "save", "(", "self", ".", "dir", ")", "\n", "torch", ".", "save", "(", "self", ".", "log", ",", "self", ".", "get_path", "(", "'psnr_log.pt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.add_log": [[100, 102], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "add_log", "(", "self", ",", "log", ")", ":", "\n", "        ", "self", ".", "log", "=", "torch", ".", "cat", "(", "[", "self", ".", "log", ",", "log", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.write_log": [[103, 109], ["print", "utility.checkpoint.log_file.write", "utility.checkpoint.log_file.close", "open", "utility.checkpoint.get_path"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "def", "write_log", "(", "self", ",", "log", ",", "refresh", "=", "False", ")", ":", "\n", "        ", "print", "(", "log", ")", "\n", "self", ".", "log_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "if", "refresh", ":", "\n", "            ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "get_path", "(", "'log.txt'", ")", ",", "'a'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.write_eval": [[110, 112], ["utility.checkpoint.eval_file.write"], "methods", ["None"], ["", "", "def", "write_eval", "(", "self", ",", "log", ")", ":", "\n", "        ", "self", ".", "eval_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.done": [[113, 116], ["utility.checkpoint.log_file.close", "utility.checkpoint.eval_file.close"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close"], ["", "def", "done", "(", "self", ")", ":", "\n", "        ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "self", ".", "eval_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.plot_psnr": [[117, 135], ["numpy.linspace", "enumerate", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "enumerate", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "matplotlib.plot", "matplotlib.plot", "utility.checkpoint.get_path", "utility.checkpoint.log[].numpy"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "def", "plot_psnr", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "axis", "=", "np", ".", "linspace", "(", "1", ",", "epoch", ",", "epoch", ")", "\n", "for", "idx_data", ",", "d", "in", "enumerate", "(", "self", ".", "args", ".", "data_test", ")", ":", "\n", "            ", "label", "=", "'SR on {}'", ".", "format", "(", "d", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "title", "(", "label", ")", "\n", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "args", ".", "scale", ")", ":", "\n", "                ", "plt", ".", "plot", "(", "\n", "axis", ",", "\n", "self", ".", "log", "[", ":", ",", "idx_data", ",", "idx_scale", "]", ".", "numpy", "(", ")", ",", "\n", "label", "=", "'Scale {}'", ".", "format", "(", "scale", ")", "\n", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'PSNR'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "self", ".", "get_path", "(", "'test_{}.pdf'", ".", "format", "(", "d", ")", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.begin_background": [[136, 152], ["multiprocessing.Queue", "multiprocessing.Process", "p.start", "range", "queue.empty", "queue.get", "imageio.imwrite", "tensor.numpy"], "methods", ["None"], ["", "", "def", "begin_background", "(", "self", ")", ":", "\n", "        ", "self", ".", "queue", "=", "Queue", "(", ")", "\n", "\n", "def", "bg_target", "(", "queue", ")", ":", "\n", "            ", "while", "True", ":", "\n", "                ", "if", "not", "queue", ".", "empty", "(", ")", ":", "\n", "                    ", "filename", ",", "tensor", "=", "queue", ".", "get", "(", ")", "\n", "if", "filename", "is", "None", ":", "break", "\n", "imageio", ".", "imwrite", "(", "filename", ",", "tensor", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "", "self", ".", "process", "=", "[", "\n", "Process", "(", "target", "=", "bg_target", ",", "args", "=", "(", "self", ".", "queue", ",", ")", ")", "for", "_", "in", "range", "(", "self", ".", "n_processes", ")", "\n", "]", "\n", "\n", "for", "p", "in", "self", ".", "process", ":", "p", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.end_background": [[153, 157], ["range", "utility.checkpoint.queue.put", "utility.checkpoint.queue.empty", "time.sleep", "p.join"], "methods", ["None"], ["", "def", "end_background", "(", "self", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "self", ".", "n_processes", ")", ":", "self", ".", "queue", ".", "put", "(", "(", "None", ",", "None", ")", ")", "\n", "while", "not", "self", ".", "queue", ".", "empty", "(", ")", ":", "time", ".", "sleep", "(", "1", ")", "\n", "for", "p", "in", "self", ".", "process", ":", "p", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.checkpoint.save_results": [[158, 170], ["utility.checkpoint.get_path", "zip", "v[].mul", "v[].mul.byte().permute().cpu", "utility.checkpoint.queue.put", "v[].mul.byte().permute", "v[].mul.byte"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "def", "save_results", "(", "self", ",", "dataset", ",", "filename", ",", "save_list", ",", "scale", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "save_results", ":", "\n", "            ", "filename", "=", "self", ".", "get_path", "(", "\n", "'results-{}'", ".", "format", "(", "dataset", ".", "dataset", ".", "name", ")", ",", "\n", "'{}_x{}_'", ".", "format", "(", "filename", ",", "scale", ")", "\n", ")", "\n", "\n", "postfix", "=", "(", "'SR'", ",", "'LR'", ",", "'HR'", ")", "\n", "for", "v", ",", "p", "in", "zip", "(", "save_list", ",", "postfix", ")", ":", "\n", "                ", "normalized", "=", "v", "[", "0", "]", ".", "mul", "(", "255", "/", "self", ".", "args", ".", "rgb_range", ")", "\n", "tensor_cpu", "=", "normalized", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", "\n", "self", ".", "queue", ".", "put", "(", "(", "'{}{}.png'", ".", "format", "(", "filename", ",", "p", ")", ",", "tensor_cpu", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.quantize": [[171, 174], ["img.mul().clamp().round().div", "img.mul().clamp().round", "img.mul().clamp", "img.mul"], "function", ["None"], ["", "", "", "", "def", "quantize", "(", "img", ",", "rgb_range", ")", ":", "\n", "    ", "pixel_range", "=", "255", "/", "rgb_range", "\n", "return", "img", ".", "mul", "(", "pixel_range", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "round", "(", ")", ".", "div", "(", "pixel_range", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.calc_psnr": [[175, 191], ["valid.pow().mean", "hr.nelement", "math.log10", "diff.mul().sum.size", "diff.mul().sum.mul().sum", "valid.pow", "diff.mul().sum.new_tensor().view", "diff.mul().sum.mul", "diff.mul().sum.new_tensor"], "function", ["None"], ["", "def", "calc_psnr", "(", "sr", ",", "hr", ",", "scale", ",", "rgb_range", ",", "dataset", "=", "None", ")", ":", "\n", "    ", "if", "hr", ".", "nelement", "(", ")", "==", "1", ":", "return", "0", "\n", "diff", "=", "(", "sr", "-", "hr", ")", "/", "rgb_range", "\n", "if", "dataset", "and", "dataset", ".", "dataset", ".", "benchmark", ":", "\n", "        ", "shave", "=", "scale", "\n", "if", "diff", ".", "size", "(", "1", ")", ">", "1", ":", "\n", "            ", "gray_coeffs", "=", "[", "65.738", ",", "129.057", ",", "25.064", "]", "\n", "convert", "=", "diff", ".", "new_tensor", "(", "gray_coeffs", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", "/", "256", "\n", "diff", "=", "diff", ".", "mul", "(", "convert", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "", "", "else", ":", "\n", "        ", "shave", "=", "scale", "+", "6", "\n", "\n", "", "valid", "=", "diff", "[", "...", ",", "shave", ":", "-", "shave", ",", "shave", ":", "-", "shave", "]", "\n", "mse", "=", "valid", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n", "return", "-", "10", "*", "math", ".", "log10", "(", "mse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.ssim": [[192, 213], ["img1.astype.astype", "img2.astype.astype", "cv2.getGaussianKernel", "numpy.outer", "ssim_map.mean", "cv2.getGaussianKernel.transpose", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D"], "function", ["None"], ["", "def", "ssim", "(", "img1", ",", "img2", ")", ":", "\n", "    ", "C1", "=", "(", "0.01", "*", "255", ")", "**", "2", "\n", "C2", "=", "(", "0.03", "*", "255", ")", "**", "2", "\n", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "kernel", "=", "cv2", ".", "getGaussianKernel", "(", "11", ",", "1.5", ")", "\n", "window", "=", "np", ".", "outer", "(", "kernel", ",", "kernel", ".", "transpose", "(", ")", ")", "\n", "\n", "mu1", "=", "cv2", ".", "filter2D", "(", "img1", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "# valid", "\n", "mu2", "=", "cv2", ".", "filter2D", "(", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "\n", "mu1_sq", "=", "mu1", "**", "2", "\n", "mu2_sq", "=", "mu2", "**", "2", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "sigma1_sq", "=", "cv2", ".", "filter2D", "(", "img1", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_sq", "\n", "sigma2_sq", "=", "cv2", ".", "filter2D", "(", "img2", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu2_sq", "\n", "sigma12", "=", "cv2", ".", "filter2D", "(", "img1", "*", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_mu2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "\n", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "return", "ssim_map", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.bgr2ycbcr": [[214, 236], ["img.astype", "rlt.round.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "bgr2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        uint8, [0, 255]\n        float, [0, 1]\n    '''", "\n", "in_img_type", "=", "img", ".", "dtype", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "in_img_type", "!=", "np", ".", "uint8", ":", "\n", "        ", "img", "*=", "255.", "\n", "# convert", "\n", "", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "24.966", ",", "128.553", ",", "65.481", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "if", "in_img_type", "==", "np", ".", "uint8", ":", "\n", "        ", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "", "else", ":", "\n", "        ", "rlt", "/=", "255.", "\n", "", "return", "rlt", ".", "astype", "(", "in_img_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.tensor2img": [[237, 262], ["tensor.squeeze().float().cpu().clamp_.squeeze().float().cpu().clamp_", "tensor.squeeze().float().cpu().clamp_.dim", "tensor.numpy.astype", "len", "make_grid().numpy", "numpy.transpose", "tensor.squeeze().float().cpu().clamp_.squeeze().float().cpu", "tensor.squeeze().float().cpu().clamp_.numpy", "numpy.transpose", "make_grid", "tensor.squeeze().float().cpu().clamp_.numpy", "TypeError", "tensor.squeeze().float().cpu().clamp_.squeeze().float", "int", "tensor.squeeze().float().cpu().clamp_.squeeze", "math.sqrt"], "function", ["None"], ["", "def", "tensor2img", "(", "tensor", ",", "out_type", "=", "np", ".", "uint8", ",", "min_max", "=", "(", "0", ",", "1", ")", ")", ":", "\n", "    ", "'''\n    Converts a torch Tensor into an image Numpy array\n    Input: 4D(B,(3/1),H,W), 3D(C,H,W), or 2D(H,W), any range, RGB channel order\n    Output: 3D(H,W,C) or 2D(H,W), [0,255], np.uint8 (default)\n    '''", "\n", "tensor", "=", "tensor", ".", "squeeze", "(", ")", ".", "float", "(", ")", ".", "cpu", "(", ")", ".", "clamp_", "(", "*", "min_max", ")", "# clamp", "\n", "tensor", "=", "(", "tensor", "-", "min_max", "[", "0", "]", ")", "/", "(", "min_max", "[", "1", "]", "-", "min_max", "[", "0", "]", ")", "# to range [0,1]", "\n", "n_dim", "=", "tensor", ".", "dim", "(", ")", "\n", "if", "n_dim", "==", "4", ":", "\n", "        ", "n_img", "=", "len", "(", "tensor", ")", "\n", "img_np", "=", "make_grid", "(", "tensor", ",", "nrow", "=", "int", "(", "math", ".", "sqrt", "(", "n_img", ")", ")", ",", "normalize", "=", "False", ")", ".", "numpy", "(", ")", "\n", "img_np", "=", "np", ".", "transpose", "(", "img_np", "[", "[", "2", ",", "1", ",", "0", "]", ",", ":", ",", ":", "]", ",", "(", "1", ",", "2", ",", "0", ")", ")", "# HWC, BGR", "\n", "", "elif", "n_dim", "==", "3", ":", "\n", "        ", "img_np", "=", "tensor", ".", "numpy", "(", ")", "\n", "img_np", "=", "np", ".", "transpose", "(", "img_np", "[", "[", "2", ",", "1", ",", "0", "]", ",", ":", ",", ":", "]", ",", "(", "1", ",", "2", ",", "0", ")", ")", "# HWC, BGR", "\n", "", "elif", "n_dim", "==", "2", ":", "\n", "        ", "img_np", "=", "tensor", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "'Only support 4D, 3D and 2D tensor. But received with dimension: {:d}'", ".", "format", "(", "n_dim", ")", ")", "\n", "", "if", "out_type", "==", "np", ".", "uint8", ":", "\n", "        ", "img_np", "=", "(", "img_np", "*", "255.0", ")", ".", "round", "(", ")", "\n", "# Important. Unlike matlab, numpy.unit8() WILL NOT round by default.", "\n", "", "return", "img_np", ".", "astype", "(", "out_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.calc_ssim": [[263, 296], ["utility.tensor2img", "utility.tensor2img", "utility.bgr2ycbcr", "utility.bgr2ycbcr", "ValueError", "utility.ssim", "ValueError", "range", "numpy.array().mean", "ssims.append", "utility.ssim", "utility.ssim", "numpy.array", "numpy.squeeze", "numpy.squeeze"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.tensor2img", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.tensor2img", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.bgr2ycbcr", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.bgr2ycbcr", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.ssim", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.ssim", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.ssim"], ["", "def", "calc_ssim", "(", "img1", ",", "img2", ",", "scale", ")", ":", "\n", "    ", "'''calculate SSIM\n    the same outputs as MATLAB's\n    img1, img2: [0, 255]\n    '''", "\n", "shave", "=", "scale", "\n", "\n", "img1", "=", "tensor2img", "(", "img1", ")", "/", "255.", "\n", "img2", "=", "tensor2img", "(", "img2", ")", "/", "255.", "\n", "\n", "# print(img1.shape, img2.shape)", "\n", "# img1 = img1[shave:-shave, shave:-shave, :]", "\n", "# img2 = img2[shave:-shave, shave:-shave, :]", "\n", "\n", "img1", "=", "bgr2ycbcr", "(", "img1", ")", "*", "255", "\n", "img2", "=", "bgr2ycbcr", "(", "img2", ")", "*", "255", "\n", "\n", "# print(img1.shape, img2.shape)", "\n", "\n", "if", "not", "img1", ".", "shape", "==", "img2", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "'Input images must have the same dimensions.'", ")", "\n", "", "if", "img1", ".", "ndim", "==", "2", ":", "\n", "        ", "return", "ssim", "(", "img1", ",", "img2", ")", "\n", "", "elif", "img1", ".", "ndim", "==", "3", ":", "\n", "        ", "if", "img1", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "            ", "ssims", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "ssims", ".", "append", "(", "ssim", "(", "img1", ",", "img2", ")", ")", "\n", "", "return", "np", ".", "array", "(", "ssims", ")", ".", "mean", "(", ")", "\n", "", "elif", "img1", ".", "shape", "[", "2", "]", "==", "1", ":", "\n", "            ", "return", "ssim", "(", "np", ".", "squeeze", "(", "img1", ")", ",", "np", ".", "squeeze", "(", "img2", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Wrong input image dimensions.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.utility.make_optimizer": [[298, 352], ["filter", "list", "CustomOptimizer", "CustomOptimizer._register_scheduler", "target.parameters", "map", "args.decay.split", "super().__init__", "scheduler_class", "torch.save", "torch.save", "torch.save", "utility..load_state_dict", "os.path.join", "utility..scheduler.step", "int", "utility..state_dict", "utility..get_dir", "torch.load", "torch.load", "torch.load", "range", "utility..scheduler.get_lr", "utility..get_dir", "utility..scheduler.step"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step"], ["", "", "def", "make_optimizer", "(", "args", ",", "target", ")", ":", "\n", "    ", "'''\n        make optimizer and scheduler together\n    '''", "\n", "# optimizer", "\n", "trainable", "=", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "target", ".", "parameters", "(", ")", ")", "\n", "kwargs_optimizer", "=", "{", "'lr'", ":", "args", ".", "lr", ",", "'weight_decay'", ":", "args", ".", "weight_decay", "}", "\n", "\n", "if", "args", ".", "optimizer", "==", "'SGD'", ":", "\n", "        ", "optimizer_class", "=", "optim", ".", "SGD", "\n", "kwargs_optimizer", "[", "'momentum'", "]", "=", "args", ".", "momentum", "\n", "", "elif", "args", ".", "optimizer", "==", "'ADAM'", ":", "\n", "        ", "optimizer_class", "=", "optim", ".", "Adam", "\n", "kwargs_optimizer", "[", "'betas'", "]", "=", "args", ".", "betas", "\n", "kwargs_optimizer", "[", "'eps'", "]", "=", "args", ".", "epsilon", "\n", "", "elif", "args", ".", "optimizer", "==", "'RMSprop'", ":", "\n", "        ", "optimizer_class", "=", "optim", ".", "RMSprop", "\n", "kwargs_optimizer", "[", "'eps'", "]", "=", "args", ".", "epsilon", "\n", "\n", "# scheduler", "\n", "", "milestones", "=", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ")", ",", "args", ".", "decay", ".", "split", "(", "'-'", ")", ")", ")", "\n", "kwargs_scheduler", "=", "{", "'milestones'", ":", "milestones", ",", "'gamma'", ":", "args", ".", "gamma", "}", "\n", "scheduler_class", "=", "lrs", ".", "MultiStepLR", "\n", "\n", "class", "CustomOptimizer", "(", "optimizer_class", ")", ":", "\n", "        ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "super", "(", "CustomOptimizer", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "_register_scheduler", "(", "self", ",", "scheduler_class", ",", "**", "kwargs", ")", ":", "\n", "            ", "self", ".", "scheduler", "=", "scheduler_class", "(", "self", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "save", "(", "self", ",", "save_dir", ")", ":", "\n", "            ", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "self", ".", "get_dir", "(", "save_dir", ")", ")", "\n", "\n", "", "def", "load", "(", "self", ",", "load_dir", ",", "epoch", "=", "1", ")", ":", "\n", "            ", "self", ".", "load_state_dict", "(", "torch", ".", "load", "(", "self", ".", "get_dir", "(", "load_dir", ")", ")", ")", "\n", "if", "epoch", ">", "1", ":", "\n", "                ", "for", "_", "in", "range", "(", "epoch", ")", ":", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "", "def", "get_dir", "(", "self", ",", "dir_path", ")", ":", "\n", "            ", "return", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'optimizer.pt'", ")", "\n", "\n", "", "def", "schedule", "(", "self", ")", ":", "\n", "            ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "def", "get_lr", "(", "self", ")", ":", "\n", "            ", "return", "self", ".", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "\n", "", "def", "get_last_epoch", "(", "self", ")", ":", "\n", "            ", "return", "self", ".", "scheduler", ".", "last_epoch", "\n", "\n", "", "", "optimizer", "=", "CustomOptimizer", "(", "trainable", ",", "**", "kwargs_optimizer", ")", "\n", "optimizer", ".", "_register_scheduler", "(", "scheduler_class", ",", "**", "kwargs_scheduler", ")", "\n", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.trainer.Trainer.__init__": [[12, 28], ["utility.make_optimizer", "trainer.Trainer.optimizer.load", "len"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.make_optimizer", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "loader", ",", "my_model", ",", "my_loss", ",", "ckp", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n", "self", ".", "ckp", "=", "ckp", "\n", "self", ".", "loader_train", "=", "loader", ".", "loader_train", "\n", "self", ".", "loader_test", "=", "loader", ".", "loader_test", "\n", "self", ".", "model", "=", "my_model", "\n", "self", ".", "loss", "=", "my_loss", "\n", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "args", ",", "self", ".", "model", ")", "\n", "self", ".", "save_name_list", "=", "[", "'comic'", ",", "'barbara'", ",", "'253027'", ",", "'baboon'", ",", "'img005'", ",", "'img010'", ",", "'img062'", ",", "'img016'", "]", "\n", "\n", "if", "self", ".", "args", ".", "load", "!=", "''", ":", "\n", "            ", "self", ".", "optimizer", ".", "load", "(", "ckp", ".", "dir", ",", "epoch", "=", "len", "(", "ckp", ".", "log", ")", ")", "\n", "\n", "", "self", ".", "error_last", "=", "1e8", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.trainer.Trainer.train": [[29, 73], ["trainer.Trainer.loss.step", "trainer.Trainer.optimizer.get_lr", "trainer.Trainer.ckp.write_log", "trainer.Trainer.loss.start_log", "trainer.Trainer.model.train", "enumerate", "trainer.Trainer.loss.end_log", "trainer.Trainer.optimizer.schedule", "trainer.Trainer.optimizer.get_last_epoch", "utility.timer", "utility.timer", "trainer.Trainer.prepare", "timer_data.hold", "timer_model.tic", "trainer.Trainer.optimizer.zero_grad", "trainer.Trainer.model", "trainer.Trainer.loss", "trainer.Trainer.backward", "trainer.Trainer.optimizer.step", "timer_model.hold", "timer_data.tic", "len", "decimal.Decimal", "torch.clip_grad_value_", "torch.clip_grad_value_", "trainer.Trainer.ckp.write_log", "trainer.Trainer.model.parameters", "len", "trainer.Trainer.loss.display_loss", "timer_model.release", "timer_data.release"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.start_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.train", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.end_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.hold", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.hold", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.display_loss", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.release", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.release"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "loss", ".", "step", "(", ")", "\n", "epoch", "=", "self", ".", "optimizer", ".", "get_last_epoch", "(", ")", "+", "1", "\n", "lr", "=", "self", ".", "optimizer", ".", "get_lr", "(", ")", "\n", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[Epoch {}]\\tLearning rate: {:.2e}'", ".", "format", "(", "epoch", ",", "Decimal", "(", "lr", ")", ")", "\n", ")", "\n", "self", ".", "loss", ".", "start_log", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "timer_data", ",", "timer_model", "=", "utility", ".", "timer", "(", ")", ",", "utility", ".", "timer", "(", ")", "\n", "for", "batch", ",", "(", "lr", ",", "hr", ",", "_", ",", "idx_scale", ")", "in", "enumerate", "(", "self", ".", "loader_train", ")", ":", "\n", "            ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "timer_data", ".", "hold", "(", ")", "\n", "timer_model", ".", "tic", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "sr", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "\n", "loss", "=", "self", ".", "loss", "(", "sr", ",", "hr", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "if", "self", ".", "args", ".", "gclip", ">", "0", ":", "\n", "                ", "utils", ".", "clip_grad_value_", "(", "\n", "self", ".", "model", ".", "parameters", "(", ")", ",", "\n", "self", ".", "args", ".", "gclip", "\n", ")", "\n", "", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "timer_model", ".", "hold", "(", ")", "\n", "\n", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                ", "self", ".", "ckp", ".", "write_log", "(", "'[{}/{}]\\t{}\\t{:.1f}+{:.1f}s'", ".", "format", "(", "\n", "(", "batch", "+", "1", ")", "*", "self", ".", "args", ".", "batch_size", ",", "\n", "len", "(", "self", ".", "loader_train", ".", "dataset", ")", ",", "\n", "self", ".", "loss", ".", "display_loss", "(", "batch", ")", ",", "\n", "timer_model", ".", "release", "(", ")", ",", "\n", "timer_data", ".", "release", "(", ")", ")", ")", "\n", "\n", "", "timer_data", ".", "tic", "(", ")", "\n", "\n", "", "self", ".", "loss", ".", "end_log", "(", "len", "(", "self", ".", "loader_train", ")", ")", "\n", "self", ".", "error_last", "=", "self", ".", "loss", ".", "log", "[", "-", "1", ",", "-", "1", "]", "\n", "self", ".", "optimizer", ".", "schedule", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.trainer.Trainer.test": [[74, 140], ["torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "trainer.Trainer.optimizer.get_last_epoch", "trainer.Trainer.ckp.write_log", "trainer.Trainer.ckp.add_log", "trainer.Trainer.model.eval", "utility.timer", "enumerate", "trainer.Trainer.ckp.write_log", "trainer.Trainer.ckp.write_log", "trainer.Trainer.ckp.write_log", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "trainer.Trainer.ckp.begin_background", "enumerate", "trainer.Trainer.ckp.end_background", "trainer.Trainer.ckp.save", "len", "len", "d.dataset.set_scale", "tqdm.tqdm.tqdm", "len", "trainer.Trainer.ckp.log.max", "trainer.Trainer.ckp.write_log", "utility.timer.toc", "utility.timer.toc", "trainer.Trainer.prepare", "trainer.Trainer.model", "utility.quantize", "utility.calc_psnr", "len", "save_list.extend", "trainer.Trainer.ckp.save_results", "trainer.Trainer.ckp.write_log", "sum", "len"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.add_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.begin_background", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.end_background", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.MyConcatDataset.set_scale", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.toc", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.toc", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.quantize", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.calc_psnr", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.save_results", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "\n", "epoch", "=", "self", ".", "optimizer", ".", "get_last_epoch", "(", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "'\\nEvaluation:'", ")", "\n", "self", ".", "ckp", ".", "add_log", "(", "\n", "torch", ".", "zeros", "(", "1", ",", "len", "(", "self", ".", "loader_test", ")", ",", "len", "(", "self", ".", "scale", ")", ")", "\n", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "# print(self.args.save_results)", "\n", "timer_test", "=", "utility", ".", "timer", "(", ")", "\n", "if", "self", ".", "args", ".", "save_results", ":", "self", ".", "ckp", ".", "begin_background", "(", ")", "\n", "for", "idx_data", ",", "d", "in", "enumerate", "(", "self", ".", "loader_test", ")", ":", "\n", "            ", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "d", ".", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "ssim_list", "=", "[", "]", "\n", "for", "lr", ",", "hr", ",", "filename", ",", "_", "in", "tqdm", "(", "d", ",", "ncols", "=", "80", ")", ":", "\n", "                    ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "sr", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "sr", "=", "utility", ".", "quantize", "(", "sr", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "save_list", "=", "[", "sr", "]", "\n", "cur_psnr", "=", "utility", ".", "calc_psnr", "(", "\n", "sr", ",", "hr", ",", "scale", ",", "self", ".", "args", ".", "rgb_range", ",", "dataset", "=", "d", "\n", ")", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", "+=", "cur_psnr", "\n", "if", "self", ".", "args", ".", "save_gt", ":", "\n", "                        ", "save_list", ".", "extend", "(", "[", "lr", ",", "hr", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "# print(filename[0])", "\n", "                        ", "self", ".", "ckp", ".", "save_results", "(", "d", ",", "filename", "[", "0", "]", ",", "save_list", ",", "scale", ")", "\n", "\n", "", "if", "filename", "[", "0", "]", "in", "self", ".", "save_name_list", ":", "\n", "                        ", "self", ".", "ckp", ".", "write_log", "(", "f'{filename[0]} PSNR/SSIM: {cur_psnr:.3f}'", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", "/=", "len", "(", "d", ")", "\n", "if", "len", "(", "ssim_list", ")", ">", "0", ":", "\n", "                    ", "ssim", "=", "sum", "(", "ssim_list", ")", "/", "len", "(", "ssim_list", ")", "\n", "", "else", ":", "\n", "                    ", "ssim", "=", "0.0", "\n", "", "best", "=", "self", ".", "ckp", ".", "log", ".", "max", "(", "0", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[{} x{}]\\tPSNR/SSIM: {:.3f}/{:.4f} (Best: {:.3f} @epoch {})'", ".", "format", "(", "\n", "d", ".", "dataset", ".", "name", ",", "\n", "scale", ",", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", ",", "\n", "ssim", ",", "\n", "best", "[", "0", "]", "[", "idx_data", ",", "idx_scale", "]", ",", "\n", "best", "[", "1", "]", "[", "idx_data", ",", "idx_scale", "]", "+", "1", "\n", ")", "\n", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "write_log", "(", "'Forward: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "'Saving...'", ")", "\n", "\n", "if", "self", ".", "args", ".", "save_results", ":", "\n", "            ", "self", ".", "ckp", ".", "end_background", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "ckp", ".", "save", "(", "self", ",", "epoch", ",", "is_best", "=", "(", "best", "[", "1", "]", "[", "0", ",", "0", "]", "+", "1", "==", "epoch", ")", ")", "\n", "\n", "", "self", ".", "ckp", ".", "write_log", "(", "\n", "'Total: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ",", "refresh", "=", "True", "\n", ")", "\n", "\n", "torch", ".", "set_grad_enabled", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.trainer.Trainer.prepare": [[141, 148], ["tensor.half.half.cuda", "trainer.Trainer.prepare._prepare"], "methods", ["None"], ["", "def", "prepare", "(", "self", ",", "*", "args", ")", ":", "\n", "# device = torch.device('cpu' if self.args.cpu else f'cuda:{self.args.gpu_id}')", "\n", "        ", "def", "_prepare", "(", "tensor", ")", ":", "\n", "            ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "cuda", "(", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "a", ")", "for", "a", "in", "args", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.trainer.Trainer.terminate": [[149, 156], ["trainer.Trainer.test", "trainer.Trainer.optimizer.get_last_epoch"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.test"], ["", "def", "terminate", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "test", "(", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "epoch", "=", "self", ".", "optimizer", ".", "get_last_epoch", "(", ")", "+", "1", "\n", "return", "epoch", ">=", "self", ".", "args", ".", "epochs", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_ori.Trainer.__init__": [[30, 57], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "tensorboardX.SummaryWriter", "torch.common.AverageMeter", "main_ori.Trainer.model.parameters", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "main_ori.Trainer.model.load_state_dict", "main_ori.Trainer.optimizer.load_state_dict", "main_ori.Trainer.sheduler.load_state_dict", "int"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "loader", ",", "t_model", ",", "my_loss", ",", "ckp", ")", ":", "\n", "\n", "        ", "self", ".", "epoch", "=", "0", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n", "self", ".", "ckp", "=", "ckp", "\n", "self", ".", "loader_train", "=", "loader", ".", "loader_train", "\n", "self", ".", "loader_test", "=", "loader", ".", "loader_test", "\n", "self", ".", "model", "=", "t_model", "\n", "self", ".", "loss", "=", "my_loss", "\n", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "args", ".", "betas", ",", "eps", "=", "args", ".", "epsilon", ")", "\n", "self", ".", "sheduler", "=", "StepLR", "(", "self", ".", "optimizer", ",", "step_size", "=", "int", "(", "args", ".", "decay", ")", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "\n", "self", ".", "writer_train", "=", "SummaryWriter", "(", "ckp", ".", "dir", "+", "'/run/train'", ")", "\n", "\n", "if", "args", ".", "resume", "is", "not", "None", ":", "\n", "            ", "ckpt", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "self", ".", "epoch", "=", "ckpt", "[", "'epoch'", "]", "\n", "print", "(", "f\"Continue from {self.epoch}\"", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "ckpt", "[", "'state_dict'", "]", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer'", "]", ")", "\n", "self", ".", "sheduler", ".", "load_state_dict", "(", "ckpt", "[", "'scheduler'", "]", ")", "\n", "\n", "", "self", ".", "error_last", "=", "1e8", "\n", "self", ".", "losses", "=", "AverageMeter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_ori.Trainer.train": [[59, 116], ["main_ori.Trainer.writer_train.add_scalar", "main_ori.Trainer.ckp.write_log", "main_ori.Trainer.model.train", "len", "main_ori.Trainer.loader_train.dataset.set_scale", "enumerate", "main_ori.Trainer.sheduler.step", "utility.timer", "utility.timer", "main_ori.Trainer.prepare", "lr.size", "timer_data.hold", "timer_model.tic", "main_ori.Trainer.optimizer.zero_grad", "main_ori.Trainer.model", "main_ori.Trainer.loss.start_log", "main_ori.Trainer.loss", "main_ori.Trainer.loss.end_log", "main_ori.Trainer.backward", "main_ori.Trainer.optimizer.step", "timer_model.hold", "main_ori.Trainer.losses.update", "timer_data.tic", "decimal.Decimal", "len", "torch.clip_grad_value_", "torch.clip_grad_value_", "torch.clip_grad_value_", "main_ori.Trainer.item", "main_ori.Trainer.loss.display_loss", "main_ori.Trainer.ckp.write_log", "main_ori.Trainer.optimizer.state_dict", "main_ori.Trainer.model.parameters", "len", "len", "timer_model.release", "timer_data.release"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.train", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.MyConcatDataset.set_scale", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.hold", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.start_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.end_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.hold", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.display_loss", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.release", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.release"], ["", "def", "train", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "epoch", "=", "self", ".", "epoch", "+", "1", "\n", "lr", "=", "self", ".", "optimizer", ".", "state_dict", "(", ")", "[", "'param_groups'", "]", "[", "0", "]", "[", "'lr'", "]", "\n", "\n", "self", ".", "writer_train", ".", "add_scalar", "(", "f'lr'", ",", "lr", ",", "self", ".", "epoch", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[Epoch {}]\\tLearning rate: {:.2e}'", ".", "format", "(", "self", ".", "epoch", ",", "Decimal", "(", "lr", ")", ")", "\n", ")", "\n", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "num_iterations", "=", "len", "(", "self", ".", "loader_train", ")", "\n", "timer_data", ",", "timer_model", "=", "utility", ".", "timer", "(", ")", ",", "utility", ".", "timer", "(", ")", "\n", "self", ".", "loader_train", ".", "dataset", ".", "set_scale", "(", "0", ")", "\n", "for", "batch", ",", "(", "lr", ",", "hr", ",", "_", ",", ")", "in", "enumerate", "(", "self", ".", "loader_train", ")", ":", "\n", "\n", "\n", "            ", "num_iters", "=", "num_iterations", "*", "(", "self", ".", "epoch", "-", "1", ")", "+", "batch", "\n", "\n", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "data_size", "=", "lr", ".", "size", "(", "0", ")", "\n", "\n", "timer_data", ".", "hold", "(", ")", "\n", "timer_model", ".", "tic", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "sr", "=", "self", ".", "model", "(", "lr", ")", "\n", "# start log", "\n", "self", ".", "loss", ".", "start_log", "(", ")", "\n", "loss", "=", "self", ".", "loss", "(", "sr", ",", "hr", ")", "\n", "self", ".", "loss", ".", "end_log", "(", "len", "(", "lr", ")", ")", "\n", "if", "self", ".", "args", ".", "gclip", ">", "0", ":", "\n", "                ", "utils", ".", "clip_grad_value_", "(", "\n", "self", ".", "model", ".", "parameters", "(", ")", ",", "\n", "self", ".", "args", ".", "gclip", "\n", ")", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "\n", "timer_model", ".", "hold", "(", ")", "\n", "self", ".", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "data_size", ")", "\n", "display_loss", "=", "self", ".", "loss", ".", "display_loss", "(", "len", "(", "lr", ")", ")", "+", "f'Loss: {self.losses.avg: .3f}'", "\n", "\n", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                ", "self", ".", "ckp", ".", "write_log", "(", "'[{}/{}]\\t{}\\t{:.1f}+{:.1f}s'", ".", "format", "(", "\n", "(", "batch", "+", "1", ")", "*", "self", ".", "args", ".", "batch_size", ",", "\n", "len", "(", "self", ".", "loader_train", ".", "dataset", ")", ",", "\n", "display_loss", ",", "\n", "timer_model", ".", "release", "(", ")", ",", "\n", "timer_data", ".", "release", "(", ")", ")", ")", "\n", "\n", "", "timer_data", ".", "tic", "(", ")", "\n", "", "self", ".", "sheduler", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_ori.Trainer.test": [[118, 183], ["torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "main_ori.Trainer.ckp.write_log", "main_ori.Trainer.ckp.add_log", "model.eval", "utility.timer", "enumerate", "main_ori.Trainer.ckp.write_log", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "main_ori.Trainer.ckp.begin_background", "enumerate", "main_ori.Trainer.ckp.end_background", "torch.common.save_checkpoint", "len", "len", "d.dataset.set_scale", "tqdm.tqdm.tqdm", "len", "main_ori.Trainer.ckp.log.max", "main_ori.Trainer.ckp.write_log", "main_ori.Trainer.writer_train.add_scalar", "main_ori.Trainer.model.state_dict", "main_ori.Trainer.optimizer.state_dict", "main_ori.Trainer.sheduler.state_dict", "utility.timer.toc", "main_ori.Trainer.prepare", "model", "utility.quantize", "utility.calc_psnr", "save_list.extend", "main_ori.Trainer.ckp.save_results"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.add_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.begin_background", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.end_background", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.save_checkpoint", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.MyConcatDataset.set_scale", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.toc", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.quantize", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.calc_psnr", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.save_results"], ["", "def", "test", "(", "self", ",", "is_teacher", "=", "False", ")", ":", "\n", "        ", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "'\\nEvaluation:'", ")", "\n", "self", ".", "ckp", ".", "add_log", "(", "\n", "torch", ".", "zeros", "(", "1", ",", "len", "(", "self", ".", "loader_test", ")", ",", "len", "(", "self", ".", "scale", ")", ")", "\n", ")", "\n", "model", "=", "self", ".", "model", "\n", "model", ".", "eval", "(", ")", "\n", "timer_test", "=", "utility", ".", "timer", "(", ")", "\n", "\n", "if", "self", ".", "args", ".", "save_results", ":", "self", ".", "ckp", ".", "begin_background", "(", ")", "\n", "self", ".", "savesau", "=", "{", "}", "\n", "self", ".", "savesal", "=", "{", "}", "\n", "for", "idx_data", ",", "d", "in", "enumerate", "(", "self", ".", "loader_test", ")", ":", "\n", "            ", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "d", ".", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "i", "=", "0", "\n", "for", "lr", ",", "hr", ",", "filename", "in", "tqdm", "(", "d", ",", "ncols", "=", "80", ")", ":", "\n", "                    ", "i", "+=", "1", "\n", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "sr", "=", "model", "(", "lr", ")", "\n", "sr", "=", "utility", ".", "quantize", "(", "sr", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "save_list", "=", "[", "sr", "]", "\n", "cur_psnr", "=", "utility", ".", "calc_psnr", "(", "\n", "sr", ",", "hr", ",", "scale", ",", "self", ".", "args", ".", "rgb_range", ",", "dataset", "=", "d", "\n", ")", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", "+=", "cur_psnr", "\n", "if", "self", ".", "args", ".", "save_gt", ":", "\n", "                        ", "save_list", ".", "extend", "(", "[", "lr", ",", "hr", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "                        ", "save_name", "=", "f'{args.k_bits}bit_{filename[0]}'", "\n", "self", ".", "ckp", ".", "save_results", "(", "d", ",", "save_name", ",", "save_list", ",", "scale", ")", "\n", "# pdb.set_trace()", "\n", "", "", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", "/=", "len", "(", "d", ")", "\n", "best", "=", "self", ".", "ckp", ".", "log", ".", "max", "(", "0", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[{} x{}] PSNR: {:.3f}  (Best: {:.3f} @epoch {})'", ".", "format", "(", "\n", "d", ".", "dataset", ".", "name", ",", "\n", "scale", ",", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", ",", "\n", "best", "[", "0", "]", "[", "idx_data", ",", "idx_scale", "]", ",", "\n", "best", "[", "1", "]", "[", "idx_data", ",", "idx_scale", "]", "+", "1", ",", "\n", ")", "\n", ")", "\n", "self", ".", "writer_train", ".", "add_scalar", "(", "f'psnr'", ",", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", ",", "self", ".", "epoch", ")", "\n", "\n", "", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "            ", "self", ".", "ckp", ".", "end_background", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "is_best", "=", "(", "best", "[", "1", "]", "[", "0", ",", "0", "]", "+", "1", "==", "self", ".", "epoch", ")", "\n", "state", "=", "{", "\n", "'epoch'", ":", "self", ".", "epoch", ",", "\n", "'state_dict'", ":", "self", ".", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'scheduler'", ":", "self", ".", "sheduler", ".", "state_dict", "(", ")", "\n", "}", "\n", "util", ".", "save_checkpoint", "(", "state", ",", "is_best", ",", "checkpoint", "=", "self", ".", "ckp", ".", "dir", "+", "'/model'", ")", "\n", "\n", "", "self", ".", "ckp", ".", "write_log", "(", "\n", "'Total: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ",", "refresh", "=", "True", "\n", ")", "\n", "\n", "torch", ".", "set_grad_enabled", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_ori.Trainer.prepare": [[184, 190], ["tensor.half.half.cuda", "main_ori.Trainer.prepare._prepare"], "methods", ["None"], ["", "def", "prepare", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "def", "_prepare", "(", "tensor", ")", ":", "\n", "            ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "cuda", "(", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "a", ")", "for", "a", "in", "args", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_ori.Trainer.terminate": [[191, 197], ["main_ori.Trainer.test"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.test"], ["", "def", "terminate", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "test", "(", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "epoch", ">=", "self", ".", "args", ".", "epochs", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_ori.main": [[199, 239], ["data_new.Data", "main_ori.Trainer", "print", "checkpoint.done", "print", "option.args.model.lower", "model.edsr_org.EDSR().to", "torch.load", "torch.load", "torch.load", "bnSRResNet().to.load_state_dict", "bnSRResNet().to.load_state_dict", "print", "loss.Loss", "main_ori.Trainer.terminate", "main_ori.Trainer.train", "main_ori.Trainer.test", "option.args.model.lower", "model.rdn_org.RDN().to", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "model.edsr_org.EDSR", "option.args.model.lower", "model.bnsrresnet_org.SRResNet.to", "ValueError", "model.rdn_org.RDN", "model.bnsrresnet_org.SRResNet"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.done", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.terminate", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.train", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.test", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load"], ["", "", "", "def", "main", "(", ")", ":", "\n", "    ", "global", "checkpoint", "\n", "if", "checkpoint", ".", "ok", ":", "\n", "        ", "loader", "=", "data_new", ".", "Data", "(", "args", ")", "\n", "if", "args", ".", "model", ".", "lower", "(", ")", "==", "'edsr'", ":", "\n", "            ", "t_model", "=", "EDSR", "(", "args", ",", "is_teacher", "=", "False", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "model", ".", "lower", "(", ")", "==", "'rdn'", ":", "\n", "            ", "t_model", "=", "RDN", "(", "args", ",", "is_teacher", "=", "False", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "model", ".", "lower", "(", ")", "==", "'bnsrresnet'", ":", "\n", "            ", "t_model", "=", "bnSRResNet", "(", "args", ",", "is_teacher", "=", "False", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'not expected model = {}'", ".", "format", "(", "args", ".", "model", ")", ")", "\n", "\n", "", "if", "args", ".", "pre_train", "is", "not", "None", ":", "\n", "            ", "tckpt", "=", "torch", ".", "load", "(", "args", ".", "pre_train", ")", "\n", "t_checkpoint", "=", "tckpt", "[", "'state_dict'", "]", "if", "'state_dict'", "in", "tckpt", "else", "tckpt", "\n", "t_model", ".", "load_state_dict", "(", "t_checkpoint", ")", "\n", "", "if", "args", ".", "test_only", ":", "\n", "            ", "if", "args", ".", "refine", "is", "None", ":", "\n", "                ", "ckpt", "=", "torch", ".", "load", "(", "f'{args.save}/model/model_best.pth.tar'", ")", "\n", "refine_path", "=", "f'{args.save}/model/model_best.pth.tar'", "\n", "", "else", ":", "\n", "                ", "ckpt", "=", "torch", ".", "load", "(", "f'{args.refine}'", ")", "\n", "refine_path", "=", "args", ".", "refine", "\n", "\n", "", "t_checkpoint", "=", "ckpt", "[", "'state_dict'", "]", "if", "'state_dict'", "in", "ckpt", "else", "ckpt", "\n", "\n", "t_model", ".", "load_state_dict", "(", "t_checkpoint", ")", "\n", "print", "(", "f\"Load model from {refine_path}\"", ")", "\n", "", "_loss", "=", "L", ".", "Loss", "(", "args", ",", "checkpoint", ")", "if", "not", "args", ".", "test_only", "else", "None", "\n", "t", "=", "Trainer", "(", "args", ",", "loader", ",", "t_model", ",", "_loss", ",", "checkpoint", ")", "\n", "\n", "print", "(", "f'{args.save} start!'", ")", "\n", "while", "not", "t", ".", "terminate", "(", ")", ":", "\n", "# t.test(True)", "\n", "            ", "t", ".", "train", "(", ")", "\n", "t", ".", "test", "(", ")", "\n", "\n", "", "checkpoint", ".", "done", "(", ")", "\n", "print", "(", "f'{args.save} done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_limitrange_incremental.Trainer.__init__": [[47, 100], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "tensorboardX.SummaryWriter", "torch.common.AverageMeter", "torch.common.AverageMeter", "torch.common.AverageMeter", "print", "main_limitrange_incremental.Trainer.s_model.named_modules", "main_limitrange_incremental.Trainer.s_model.apply", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "main_limitrange_incremental.Trainer.s_model.load_state_dict", "main_limitrange_incremental.Trainer.optimizer.load_state_dict", "main_limitrange_incremental.Trainer.sheduler.load_state_dict", "main_limitrange_incremental.Trainer.s_model.eval", "main_limitrange_incremental.Trainer.s_model.named_modules", "main_limitrange_incremental.Trainer.s_model.named_parameters", "main_limitrange_incremental.Trainer.s_model.named_parameters", "main_limitrange_incremental.Trainer.s_model.named_parameters", "int", "m.register_forward_hook", "setattr", "isinstance", "isinstance", "isinstance", "main_limitrange_incremental.Trainer.hook_fn_forward", "getattr", "setattr"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_limitrange_incremental.Trainer.hook_fn_forward"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "loader", ",", "t_model", ",", "s_model", ",", "ckp", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n", "self", ".", "epoch", "=", "0", "\n", "self", ".", "ckp", "=", "ckp", "\n", "self", ".", "loader_train", "=", "loader", ".", "loader_train", "\n", "self", ".", "loader_test", "=", "loader", ".", "loader_test", "\n", "self", ".", "t_model", "=", "t_model", "\n", "self", ".", "s_model", "=", "s_model", "\n", "arch_param", "=", "[", "v", "for", "k", ",", "v", "in", "self", ".", "s_model", ".", "named_parameters", "(", ")", "if", "'alpha'", "not", "in", "k", "]", "\n", "alpha_param", "=", "[", "v", "for", "k", ",", "v", "in", "self", ".", "s_model", ".", "named_parameters", "(", ")", "if", "'alpha'", "in", "k", "]", "\n", "a", "=", "[", "k", "for", "k", ",", "v", "in", "self", ".", "s_model", ".", "named_parameters", "(", ")", "if", "'alpha'", "in", "k", "]", "\n", "\n", "params", "=", "[", "{", "'params'", ":", "arch_param", "}", ",", "{", "'params'", ":", "alpha_param", ",", "'lr'", ":", "1e-2", "}", "]", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "args", ".", "betas", ",", "eps", "=", "args", ".", "epsilon", ")", "\n", "self", ".", "sheduler", "=", "StepLR", "(", "self", ".", "optimizer", ",", "step_size", "=", "int", "(", "args", ".", "decay", ")", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "self", ".", "writer_train", "=", "SummaryWriter", "(", "ckp", ".", "dir", "+", "'/run/train'", ")", "\n", "\n", "if", "args", ".", "resume", "is", "not", "None", ":", "\n", "            ", "ckpt", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "self", ".", "epoch", "=", "ckpt", "[", "'epoch'", "]", "\n", "print", "(", "f\"Continue from {self.epoch}\"", ")", "\n", "self", ".", "s_model", ".", "load_state_dict", "(", "ckpt", "[", "'state_dict'", "]", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer'", "]", ")", "\n", "self", ".", "sheduler", ".", "load_state_dict", "(", "ckpt", "[", "'scheduler'", "]", ")", "\n", "\n", "", "self", ".", "losses", "=", "AverageMeter", "(", ")", "\n", "self", ".", "att_losses", "=", "AverageMeter", "(", ")", "\n", "self", ".", "nor_losses", "=", "AverageMeter", "(", ")", "\n", "\n", "# if not test", "\n", "forcheck", "=", "0", "\n", "if", "not", "args", ".", "test_only", ":", "\n", "# set not quantized for now", "\n", "            ", "self", ".", "s_model", ".", "eval", "(", ")", "\n", "for", "n", ",", "m", "in", "self", ".", "s_model", ".", "named_modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "quant_weight", ")", "or", "isinstance", "(", "m", ",", "quant_weight_asym99", ")", "or", "isinstance", "(", "m", ",", "DDTB_quant_act_asym_dynamic_quantized", ")", ":", "\n", "                    ", "if", "getattr", "(", "m", ",", "'k_bits'", ")", "==", "args", ".", "k_bits", ":", "\n", "                        ", "setattr", "(", "m", ",", "'k_bits'", ",", "32", ")", "\n", "", "forcheck", "+=", "1", "\n", "", "", "", "print", "(", "'forcheck'", ",", "forcheck", ")", "\n", "\n", "self", ".", "save_output", "=", "{", "}", "\n", "for", "n", ",", "m", "in", "self", ".", "s_model", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "'atten_c'", "in", "n", "and", "'.convs.0.act.'", "not", "in", "n", "and", "n", "[", "-", "1", "]", "==", "'c'", "and", "n", "[", "-", "2", "]", "==", "'_'", ":", "\n", "                ", "m", ".", "register_forward_hook", "(", "self", ".", "hook_fn_forward", "(", "n", ")", ")", "\n", "\n", "", "", "self", ".", "first_stage_epoch", "=", "6", "\n", "self", ".", "s_model", ".", "apply", "(", "lambda", "m", ":", "setattr", "(", "m", ",", "'first_stage_epoch'", ",", "self", ".", "first_stage_epoch", ")", ")", "\n", "self", ".", "dynamic_ratio", "=", "args", ".", "dynamic_ratio", "\n", "print", "(", "'dynamic_ratio'", ",", "self", ".", "dynamic_ratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_limitrange_incremental.Trainer.hook_fn_forward": [[101, 105], ["None"], "methods", ["None"], ["", "def", "hook_fn_forward", "(", "self", ",", "name", ")", ":", "\n", "        ", "def", "hook", "(", "module", ",", "input", ",", "output", ")", ":", "\n", "            ", "self", ".", "save_output", "[", "name", "]", "=", "output", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_limitrange_incremental.Trainer.train": [[106, 239], ["main_limitrange_incremental.Trainer.writer_train.add_scalar", "main_limitrange_incremental.Trainer.ckp.write_log", "main_limitrange_incremental.Trainer.t_model.eval", "main_limitrange_incremental.Trainer.s_model.apply", "len", "enumerate", "main_limitrange_incremental.Trainer.sheduler.step", "utility.checkpoint", "main_limitrange_incremental.Trainer.s_model.train", "main_limitrange_incremental.Trainer.s_model.named_modules", "print", "main_limitrange_incremental.Trainer.s_model.named_modules", "var_list.sort", "print", "set", "range", "print", "print", "main_limitrange_incremental.Trainer.s_model.named_modules", "utility.checkpoint", "main_limitrange_incremental.Trainer.s_model.train", "utility.timer", "utility.timer", "main_limitrange_incremental.Trainer.prepare", "lr.size", "timer_data.hold", "timer_model.tic", "main_limitrange_incremental.Trainer.optimizer.zero_grad", "hasattr", "hasattr", "timer_data.tic", "main_limitrange_incremental.Trainer.s_model.named_parameters", "isinstance", "int", "set.add", "len", "len", "decimal.Decimal", "setattr", "main_limitrange_incremental.Trainer.t_model.set_scale", "main_limitrange_incremental.Trainer.s_model.set_scale", "main_limitrange_incremental.Trainer.save_output.clear", "main_limitrange_incremental.Trainer.s_model", "torch.any", "torch.any", "torch.any", "torch.any", "torch.any", "torch.any", "torch.any", "torch.any", "torch.any", "loss.backward", "main_limitrange_incremental.Trainer.optimizer.step", "timer_model.hold", "main_limitrange_incremental.Trainer.losses.update", "isinstance", "isinstance", "isinstance", "m.fp_max_list.clear", "m.fp_min_list.clear", "setattr", "main_limitrange_incremental.Trainer.optimizer.state_dict", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "main_limitrange_incremental.Trainer.s_model", "main_limitrange_incremental.Trainer.ckp.write_log", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "main_limitrange_incremental.Trainer.t_model", "torch.l1_loss", "torch.l1_loss", "torch.l1_loss", "torch.common.at_loss", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "print", "IPython.embed", "loss.item", "main_limitrange_incremental.Trainer.ckp.write_log", "getattr", "setattr", "hasattr", "var_list.append", "len", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "len", "main_limitrange_incremental.Trainer.ckp.write_log", "main_limitrange_incremental.Trainer.writer_train.add_scalar", "main_limitrange_incremental.Trainer.writer_train.add_scalar", "len", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss", "len", "len", "timer_model.release", "timer_data.release", "value.grad.cpu().data.numpy", "value.cpu().data.numpy", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "str", "value.grad.squeeze", "numpy.var", "numpy.var", "round", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros().cuda.cpu().item", "torch.zeros().cuda.cpu().item", "torch.zeros().cuda.cpu().item", "value.grad.cpu", "value.cpu", "torch.zeros().cuda.cpu", "torch.zeros().cuda.cpu", "torch.zeros().cuda.cpu"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.train", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.train", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.hold", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.MyConcatDataset.set_scale", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.MyConcatDataset.set_scale", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.hold", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.at_loss", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.release", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.release"], ["", "def", "train", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "epoch", "=", "self", ".", "epoch", "+", "1", "\n", "# calibration is over", "\n", "if", "self", ".", "epoch", "==", "2", ":", "\n", "# reset", "\n", "            ", "self", ".", "ckp", "=", "utility", ".", "checkpoint", "(", "args", ")", "\n", "forcheck", "=", "0", "\n", "self", ".", "s_model", ".", "train", "(", ")", "\n", "for", "n", ",", "m", "in", "self", ".", "s_model", ".", "named_modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "quant_weight", ")", "or", "isinstance", "(", "m", ",", "quant_weight_asym99", ")", "or", "isinstance", "(", "m", ",", "DDTB_quant_act_asym_dynamic_quantized", ")", ":", "\n", "# set quantized for now", "\n", "                    ", "if", "getattr", "(", "m", ",", "'k_bits'", ")", "==", "32", ":", "\n", "                        ", "setattr", "(", "m", ",", "'k_bits'", ",", "args", ".", "k_bits", ")", "\n", "", "forcheck", "+=", "1", "\n", "", "", "print", "(", "forcheck", ")", "\n", "\n", "var_list", "=", "[", "]", "\n", "for", "n", ",", "m", "in", "self", ".", "s_model", ".", "named_modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "DDTB_quant_act_asym_dynamic_quantized", ")", ":", "\n", "# set open the dynamic", "\n", "                    ", "if", "hasattr", "(", "m", ",", "'fp_max_list'", ")", "and", "len", "(", "m", ".", "fp_max_list", ")", ">", "0", ":", "\n", "                        ", "var_list", ".", "append", "(", "(", "n", ",", "np", ".", "var", "(", "m", ".", "fp_max_list", ")", "+", "np", ".", "var", "(", "m", ".", "fp_min_list", ")", ")", ")", "\n", "", "m", ".", "fp_max_list", ".", "clear", "(", ")", "\n", "m", ".", "fp_min_list", ".", "clear", "(", ")", "\n", "", "", "var_list", ".", "sort", "(", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "print", "(", "var_list", ")", "\n", "# random.shuffle(var_list)", "\n", "dynamice_names", "=", "set", "(", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "len", "(", "var_list", ")", "*", "self", ".", "dynamic_ratio", ")", ")", ":", "\n", "                ", "dynamice_names", ".", "add", "(", "var_list", "[", "i", "]", "[", "0", "]", ")", "\n", "", "print", "(", "'dynamice_names'", ",", "dynamice_names", ")", "\n", "print", "(", "'len dynamice_names,'", ",", "len", "(", "dynamice_names", ")", ",", "'len var_list,'", ",", "len", "(", "var_list", ")", ")", "\n", "for", "n", ",", "m", "in", "self", ".", "s_model", ".", "named_modules", "(", ")", ":", "\n", "                ", "if", "n", "in", "dynamice_names", ":", "\n", "                    ", "setattr", "(", "m", ",", "'is_dynamic'", ",", "torch", ".", "ones", "(", "1", ")", ".", "cuda", "(", ")", ")", "\n", "\n", "# incremental epoch is over", "\n", "", "", "", "if", "self", ".", "epoch", "==", "self", ".", "first_stage_epoch", ":", "\n", "# reset", "\n", "            ", "self", ".", "ckp", "=", "utility", ".", "checkpoint", "(", "args", ")", "\n", "\n", "", "lr", "=", "self", ".", "optimizer", ".", "state_dict", "(", ")", "[", "'param_groups'", "]", "[", "0", "]", "[", "'lr'", "]", "\n", "\n", "self", ".", "writer_train", ".", "add_scalar", "(", "f'lr'", ",", "lr", ",", "self", ".", "epoch", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[Epoch {}]\\tLearning rate: {:.2e}'", ".", "format", "(", "self", ".", "epoch", ",", "Decimal", "(", "lr", ")", ")", "\n", ")", "\n", "\n", "self", ".", "t_model", ".", "eval", "(", ")", "\n", "if", "self", ".", "epoch", ">", "1", ":", "\n", "            ", "self", ".", "s_model", ".", "train", "(", ")", "\n", "\n", "", "self", ".", "s_model", ".", "apply", "(", "lambda", "m", ":", "setattr", "(", "m", ",", "'epoch'", ",", "self", ".", "epoch", ")", ")", "\n", "\n", "num_iterations", "=", "len", "(", "self", ".", "loader_train", ")", "\n", "timer_data", ",", "timer_model", "=", "utility", ".", "timer", "(", ")", ",", "utility", ".", "timer", "(", ")", "\n", "\n", "\n", "for", "batch", ",", "(", "lr", ",", "hr", ",", "_", ",", ")", "in", "enumerate", "(", "self", ".", "loader_train", ")", ":", "\n", "\n", "            ", "num_iters", "=", "num_iterations", "*", "(", "self", ".", "epoch", "-", "1", ")", "+", "batch", "\n", "\n", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "data_size", "=", "lr", ".", "size", "(", "0", ")", "\n", "\n", "timer_data", ".", "hold", "(", ")", "\n", "timer_model", ".", "tic", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "if", "hasattr", "(", "self", ".", "t_model", ",", "'set_scale'", ")", ":", "\n", "                ", "self", ".", "t_model", ".", "set_scale", "(", "idx_scale", ")", "\n", "", "if", "hasattr", "(", "self", ".", "s_model", ",", "'set_scale'", ")", ":", "\n", "                ", "self", ".", "s_model", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "if", "self", ".", "epoch", "==", "1", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "s_sr", ",", "s_res", "=", "self", ".", "s_model", "(", "lr", ")", "\n", "", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                    ", "self", ".", "ckp", ".", "write_log", "(", "'Calibration! Accumulate the max_v and min_v for computing Variance'", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "save_output", ".", "clear", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "t_sr", ",", "t_res", "=", "self", ".", "t_model", "(", "lr", ")", "\n", "", "s_sr", ",", "s_res", "=", "self", ".", "s_model", "(", "lr", ")", "\n", "\n", "nor_loss", "=", "args", ".", "w_l1", "*", "F", ".", "l1_loss", "(", "s_sr", ",", "hr", ")", "\n", "att_loss", "=", "args", ".", "w_at", "*", "util", ".", "at_loss", "(", "s_res", ",", "t_res", ")", "\n", "\n", "if", "self", ".", "epoch", "<", "self", ".", "first_stage_epoch", ":", "\n", "                    ", "reg_loss", "=", "torch", ".", "zeros", "(", "1", ")", ".", "cuda", "(", ")", "\n", "if", "len", "(", "self", ".", "save_output", ")", ">", "0", ":", "\n", "                        ", "for", "n", "in", "self", ".", "save_output", ":", "\n", "                            ", "reg_loss", "+=", "F", ".", "mse_loss", "(", "self", ".", "save_output", "[", "n", "]", ",", "torch", ".", "zeros", "(", "self", ".", "save_output", "[", "n", "]", ".", "shape", ")", ".", "cuda", "(", ")", ")", "\n", "", "reg_loss", "=", "reg_loss", "/", "len", "(", "self", ".", "save_output", ")", "\n", "", "loss", "=", "nor_loss", "+", "att_loss", "+", "reg_loss", "\n", "", "else", ":", "\n", "                    ", "loss", "=", "nor_loss", "+", "att_loss", "\n", "\n", "", "if", "torch", ".", "any", "(", "torch", ".", "isnan", "(", "loss", ")", ")", ":", "\n", "                    ", "print", "(", "'None loss!!'", ")", "\n", "import", "IPython", "\n", "IPython", ".", "embed", "(", ")", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "timer_model", ".", "hold", "(", ")", "\n", "\n", "self", ".", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "data_size", ")", "\n", "display_loss", "=", "f'Loss: {self.losses.avg: .3f}'", "\n", "\n", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                    ", "self", ".", "ckp", ".", "write_log", "(", "'[{}/{}]\\t{}\\t{:.1f}+{:.1f}s'", ".", "format", "(", "\n", "(", "batch", "+", "1", ")", "*", "self", ".", "args", ".", "batch_size", ",", "\n", "len", "(", "self", ".", "loader_train", ".", "dataset", ")", ",", "\n", "display_loss", ",", "\n", "timer_model", ".", "release", "(", ")", ",", "\n", "timer_data", ".", "release", "(", ")", ")", ")", "\n", "if", "self", ".", "epoch", "<", "self", ".", "first_stage_epoch", ":", "\n", "                        ", "self", ".", "ckp", ".", "write_log", "(", "'reg_loss:'", "+", "str", "(", "round", "(", "reg_loss", ".", "cpu", "(", ")", ".", "item", "(", ")", ",", "4", ")", ")", ")", "\n", "", "", "", "timer_data", ".", "tic", "(", ")", "\n", "\n", "for", "name", ",", "value", "in", "self", ".", "s_model", ".", "named_parameters", "(", ")", ":", "\n", "                ", "if", "'alpha'", "in", "name", ":", "\n", "# if value.grad is not None:", "\n", "                    ", "if", "value", ".", "grad", "is", "not", "None", "and", "value", ".", "grad", ".", "squeeze", "(", ")", ".", "ndim", "==", "0", ":", "\n", "                        ", "self", ".", "writer_train", ".", "add_scalar", "(", "f'{name}_grad'", ",", "value", ".", "grad", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "num_iters", ")", "\n", "self", ".", "writer_train", ".", "add_scalar", "(", "f'{name}_data'", ",", "value", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "num_iters", ")", "\n", "\n", "", "", "", "", "self", ".", "sheduler", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_limitrange_incremental.Trainer.test": [[241, 337], ["torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "main_limitrange_incremental.Trainer.s_model.apply", "main_limitrange_incremental.Trainer.ckp.write_log", "main_limitrange_incremental.Trainer.ckp.add_log", "model.eval", "utility.timer", "model.named_modules", "print", "enumerate", "main_limitrange_incremental.Trainer.ckp.write_log", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "main_limitrange_incremental.Trainer.ckp.begin_background", "enumerate", "main_limitrange_incremental.Trainer.ckp.end_background", "torch.common.save_checkpoint", "setattr", "len", "len", "isinstance", "hasattr", "d.dataset.set_scale", "tqdm.tqdm.tqdm", "len", "main_limitrange_incremental.Trainer.ckp.log.max", "main_limitrange_incremental.Trainer.ckp.write_log", "main_limitrange_incremental.Trainer.writer_train.add_scalar", "main_limitrange_incremental.Trainer.s_model.state_dict", "main_limitrange_incremental.Trainer.optimizer.state_dict", "main_limitrange_incremental.Trainer.sheduler.state_dict", "utility.timer.toc", "main_limitrange_incremental.Trainer.prepare", "model", "model.named_modules", "utility.quantize", "utility.calc_psnr", "isinstance", "save_list.extend", "main_limitrange_incremental.Trainer.ckp.save_results", "hasattr", "round", "round", "main_limitrange_incremental.Trainer.savesau[].append", "main_limitrange_incremental.Trainer.savesal[].append", "m.alpha_upper.cpu().item", "m.alpha_lower.cpu().item", "round", "round", "m.sau.cpu().item", "m.sal.cpu().item", "m.alpha_upper.cpu", "m.alpha_lower.cpu", "m.sau.cpu", "m.sal.cpu"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.add_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.begin_background", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.end_background", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.save_checkpoint", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.MyConcatDataset.set_scale", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.toc", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.quantize", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.calc_psnr", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.save_results", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "def", "test", "(", "self", ",", "is_teacher", "=", "False", ")", ":", "\n", "        ", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "\n", "self", ".", "s_model", ".", "apply", "(", "lambda", "m", ":", "setattr", "(", "m", ",", "'test_only'", ",", "args", ".", "test_only", ")", ")", "\n", "epoch", "=", "self", ".", "epoch", "\n", "self", ".", "ckp", ".", "write_log", "(", "'\\nEvaluation:'", ")", "\n", "self", ".", "ckp", ".", "add_log", "(", "\n", "torch", ".", "zeros", "(", "1", ",", "len", "(", "self", ".", "loader_test", ")", ",", "len", "(", "self", ".", "scale", ")", ")", "\n", ")", "\n", "if", "is_teacher", ":", "\n", "            ", "model", "=", "self", ".", "t_model", "\n", "", "else", ":", "\n", "            ", "model", "=", "self", ".", "s_model", "\n", "", "model", ".", "eval", "(", ")", "\n", "timer_test", "=", "utility", ".", "timer", "(", ")", "\n", "\n", "forcheck", "=", "0", "\n", "all", "=", "0", "\n", "for", "n", ",", "m", "in", "model", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "DDTB_quant_act_asym_dynamic_quantized", ")", "and", "hasattr", "(", "m", ",", "'is_dynamic'", ")", ":", "\n", "                ", "if", "m", ".", "is_dynamic", ":", "\n", "                    ", "forcheck", "+=", "1", "\n", "", "all", "+=", "1", "\n", "", "", "print", "(", "forcheck", ",", "all", ")", "\n", "\n", "if", "self", ".", "args", ".", "save_results", ":", "self", ".", "ckp", ".", "begin_background", "(", ")", "\n", "\n", "self", ".", "savesau", "=", "{", "}", "\n", "self", ".", "savesal", "=", "{", "}", "\n", "for", "idx_data", ",", "d", "in", "enumerate", "(", "self", ".", "loader_test", ")", ":", "\n", "            ", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "d", ".", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "i", "=", "0", "\n", "for", "lr", ",", "hr", ",", "filename", "in", "tqdm", "(", "d", ",", "ncols", "=", "80", ")", ":", "\n", "                    ", "i", "+=", "1", "\n", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "sr", ",", "s_res", "=", "model", "(", "lr", ")", "\n", "\n", "for", "n", ",", "m", "in", "model", ".", "named_modules", "(", ")", ":", "\n", "                        ", "if", "isinstance", "(", "m", ",", "DDTB_quant_act_asym_dynamic_quantized", ")", ":", "\n", "                            ", "if", "n", "not", "in", "self", ".", "savesau", ":", "\n", "                                ", "self", ".", "savesau", "[", "n", "]", "=", "[", "0", "]", "\n", "self", ".", "savesal", "[", "n", "]", "=", "[", "0", "]", "\n", "\n", "", "if", "hasattr", "(", "m", ",", "'sau'", ")", ":", "\n", "                                ", "self", ".", "savesau", "[", "n", "]", "[", "0", "]", "=", "round", "(", "m", ".", "alpha_upper", ".", "cpu", "(", ")", ".", "item", "(", ")", ",", "3", ")", "\n", "self", ".", "savesal", "[", "n", "]", "[", "0", "]", "=", "round", "(", "m", ".", "alpha_lower", ".", "cpu", "(", ")", ".", "item", "(", ")", ",", "3", ")", "\n", "\n", "self", ".", "savesau", "[", "n", "]", ".", "append", "(", "round", "(", "m", ".", "sau", ".", "cpu", "(", ")", ".", "item", "(", ")", ",", "3", ")", ")", "\n", "self", ".", "savesal", "[", "n", "]", ".", "append", "(", "round", "(", "m", ".", "sal", ".", "cpu", "(", ")", ".", "item", "(", ")", ",", "3", ")", ")", "\n", "\n", "", "", "", "sr", "=", "utility", ".", "quantize", "(", "sr", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "save_list", "=", "[", "sr", "]", "\n", "cur_psnr", "=", "utility", ".", "calc_psnr", "(", "\n", "sr", ",", "hr", ",", "scale", ",", "self", ".", "args", ".", "rgb_range", ",", "dataset", "=", "d", "\n", ")", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", "+=", "cur_psnr", "\n", "if", "self", ".", "args", ".", "save_gt", ":", "\n", "                        ", "save_list", ".", "extend", "(", "[", "lr", ",", "hr", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "                        ", "save_name", "=", "f'{args.k_bits}bit_{filename[0]}'", "\n", "self", ".", "ckp", ".", "save_results", "(", "d", ",", "save_name", ",", "save_list", ",", "scale", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", "/=", "len", "(", "d", ")", "\n", "best", "=", "self", ".", "ckp", ".", "log", ".", "max", "(", "0", ")", "\n", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[{} x{}] PSNR: {:.3f}  (Best: {:.3f} @epoch {})'", ".", "format", "(", "\n", "d", ".", "dataset", ".", "name", ",", "\n", "scale", ",", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", ",", "\n", "best", "[", "0", "]", "[", "idx_data", ",", "idx_scale", "]", ",", "\n", "best", "[", "1", "]", "[", "idx_data", ",", "idx_scale", "]", "+", "1", "\n", ")", "\n", ")", "\n", "self", ".", "writer_train", ".", "add_scalar", "(", "f'psnr'", ",", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", ",", "self", ".", "epoch", ")", "\n", "\n", "", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "            ", "self", ".", "ckp", ".", "end_background", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "args", ".", "test_only", ":", "\n", "# because the after the first epoch, the ckp re-initialize", "\n", "            ", "is_best", "=", "(", "best", "[", "1", "]", "[", "0", ",", "0", "]", "+", "self", ".", "first_stage_epoch", "==", "epoch", ")", "\n", "state", "=", "{", "\n", "'epoch'", ":", "epoch", ",", "\n", "'state_dict'", ":", "self", ".", "s_model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'scheduler'", ":", "self", ".", "sheduler", ".", "state_dict", "(", ")", "\n", "}", "\n", "util", ".", "save_checkpoint", "(", "state", ",", "is_best", ",", "checkpoint", "=", "self", ".", "ckp", ".", "dir", "+", "'/model'", ")", "\n", "", "self", ".", "ckp", ".", "write_log", "(", "\n", "'Total: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ",", "refresh", "=", "True", "\n", ")", "\n", "\n", "torch", ".", "set_grad_enabled", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_limitrange_incremental.Trainer.prepare": [[338, 344], ["tensor.half.half.cuda", "main_limitrange_incremental.Trainer.prepare._prepare"], "methods", ["None"], ["", "def", "prepare", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "def", "_prepare", "(", "tensor", ")", ":", "\n", "            ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "cuda", "(", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "a", ")", "for", "a", "in", "args", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_limitrange_incremental.Trainer.terminate": [[345, 351], ["main_limitrange_incremental.Trainer.test"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.test"], ["", "def", "terminate", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "test", "(", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "epoch", ">=", "self", ".", "args", ".", "epochs", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.None.main_limitrange_incremental.main": [[353, 430], ["data_new.Data", "main_limitrange_incremental.Trainer", "print", "checkpoint.done", "print", "option.args.model.lower", "model.edsr_org.EDSR().to", "model.edsr.DDTB_EDSR().to", "torch.load", "torch.load", "torch.load", "bnSRResNet().to.load_state_dict", "DDTB_SRResNet().to.state_dict", "torch.load.items", "print", "s_model.state_dict.update", "DDTB_SRResNet().to.load_state_dict", "s_checkpoint.items", "DDTB_SRResNet().to.load_state_dict", "print", "main_limitrange_incremental.Trainer.terminate", "main_limitrange_incremental.Trainer.train", "main_limitrange_incremental.Trainer.test", "option.args.model.lower", "model.rdn_org.RDN().to", "model.rdn.DDTB_RDN().to", "len", "len", "len", "len", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "model.edsr_org.EDSR", "model.edsr.DDTB_EDSR", "option.args.model.lower", "model.bnsrresnet_org.SRResNet.to", "model.bnsrresnet.DDTB_SRResNet().to", "ValueError", "option.args.model.lower", "option.args.model.lower", "bnSRResNet().to.state_dict", "torch.reshape", "torch.reshape", "torch.reshape", "model.rdn_org.RDN", "model.rdn.DDTB_RDN", "print", "print", "print", "model.bnsrresnet_org.SRResNet", "model.bnsrresnet.DDTB_SRResNet", "k.replace", "print", "k.replace", "torch.ones", "torch.ones", "torch.ones", "k.replace"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.done", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.terminate", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.train", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.test", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict"], ["", "", "", "def", "main", "(", ")", ":", "\n", "\n", "\n", "    ", "if", "checkpoint", ".", "ok", ":", "\n", "        ", "loader", "=", "data_new", ".", "Data", "(", "args", ")", "\n", "if", "args", ".", "model", ".", "lower", "(", ")", "==", "'edsr'", ":", "\n", "            ", "t_model", "=", "EDSR", "(", "args", ",", "is_teacher", "=", "True", ")", ".", "to", "(", "device", ")", "\n", "s_model", "=", "DDTB_EDSR", "(", "args", ",", "bias", "=", "True", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "model", ".", "lower", "(", ")", "==", "'rdn'", ":", "\n", "            ", "t_model", "=", "RDN", "(", "args", ",", "is_teacher", "=", "True", ")", ".", "to", "(", "device", ")", "\n", "s_model", "=", "DDTB_RDN", "(", "args", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "model", ".", "lower", "(", ")", "==", "'bnsrresnet'", ":", "\n", "            ", "t_model", "=", "bnSRResNet", "(", "args", ",", "is_teacher", "=", "True", ")", ".", "to", "(", "device", ")", "\n", "s_model", "=", "DDTB_SRResNet", "(", "args", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'not expected model = {}'", ".", "format", "(", "args", ".", "model", ")", ")", "\n", "\n", "", "if", "args", ".", "pre_train", "is", "not", "None", ":", "\n", "            ", "t_checkpoint", "=", "torch", ".", "load", "(", "args", ".", "pre_train", ")", "\n", "t_checkpoint", "=", "t_checkpoint", "[", "'state_dict'", "]", "if", "'state_dict'", "in", "t_checkpoint", "else", "t_checkpoint", "\n", "t_model", ".", "load_state_dict", "(", "t_checkpoint", ")", "\n", "\n", "# quantized model load pre-train weighs", "\n", "\n", "s_model_dict", "=", "s_model", ".", "state_dict", "(", ")", "\n", "pre_trained_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "t_checkpoint", ".", "items", "(", ")", ":", "\n", "                ", "if", "args", ".", "model", ".", "lower", "(", ")", "==", "'edsr'", ":", "\n", "                    ", "if", "k", "in", "s_model_dict", ":", "\n", "                        ", "pre_trained_dict", "[", "k", "]", "=", "v", "\n", "", "elif", "k", ".", "replace", "(", "'.body.2'", ",", "'.body.3'", ")", "in", "s_model_dict", ":", "\n", "                        ", "pre_trained_dict", "[", "k", ".", "replace", "(", "'.body.2'", ",", "'.body.3'", ")", "]", "=", "v", "\n", "", "else", ":", "\n", "                        ", "print", "(", "k", ")", "\n", "", "", "else", ":", "\n", "                    ", "if", "k", "in", "s_model_dict", ":", "\n", "                        ", "pre_trained_dict", "[", "k", "]", "=", "v", "\n", "", "else", ":", "\n", "                        ", "print", "(", "k", ")", "\n", "# check all pre-train parameter are loaded", "\n", "", "", "", "for", "k", "in", "pre_trained_dict", ":", "\n", "                ", "if", "args", ".", "model", ".", "lower", "(", ")", "==", "'edsr'", ":", "\n", "                    ", "if", "k", "not", "in", "s_model_dict", "and", "k", ".", "replace", "(", "'.body.2'", ",", "'.body.3'", ")", "not", "in", "s_model_dict", ":", "\n", "                        ", "print", "(", "k", ")", "\n", "", "", "else", ":", "\n", "                    ", "if", "k", "not", "in", "s_model_dict", ":", "\n", "                        ", "print", "(", "k", ")", "\n", "\n", "", "", "", "assert", "len", "(", "pre_trained_dict", ")", "==", "len", "(", "t_model", ".", "state_dict", "(", ")", ")", "\n", "print", "(", "len", "(", "pre_trained_dict", ")", ",", "len", "(", "s_model_dict", ")", ")", "\n", "s_model_dict", ".", "update", "(", "pre_trained_dict", ")", "\n", "s_model", ".", "load_state_dict", "(", "s_model_dict", ")", "\n", "\n", "", "if", "args", ".", "test_only", ":", "\n", "            ", "if", "args", ".", "refine", "is", "None", ":", "\n", "                ", "ckpt", "=", "torch", ".", "load", "(", "f'{args.save}/model/model_best.pth.tar'", ")", "\n", "refine_path", "=", "f'{args.save}/model/model_best.pth.tar'", "\n", "", "else", ":", "\n", "                ", "ckpt", "=", "torch", ".", "load", "(", "f'{args.refine}'", ")", "\n", "refine_path", "=", "args", ".", "refine", "\n", "\n", "", "s_checkpoint", "=", "ckpt", "[", "'state_dict'", "]", "if", "'state_dict'", "in", "ckpt", "else", "ckpt", "\n", "for", "k", ",", "v", "in", "s_checkpoint", ".", "items", "(", ")", ":", "\n", "                ", "if", "'max_val'", "in", "k", "or", "'min_val'", "in", "k", ":", "\n", "                    ", "s_checkpoint", "[", "k", "]", "=", "torch", ".", "reshape", "(", "v", ",", "torch", ".", "ones", "(", "1", ")", ".", "shape", ")", "\n", "", "", "s_model", ".", "load_state_dict", "(", "s_checkpoint", ")", "\n", "print", "(", "f\"Load model from {refine_path}\"", ")", "\n", "\n", "", "t", "=", "Trainer", "(", "args", ",", "loader", ",", "t_model", ",", "s_model", ",", "checkpoint", ")", "\n", "# t.test()", "\n", "print", "(", "f'{args.save} start!'", ")", "\n", "while", "not", "t", ".", "terminate", "(", ")", ":", "\n", "            ", "t", ".", "train", "(", ")", "\n", "t", ".", "test", "(", ")", "\n", "\n", "", "checkpoint", ".", "done", "(", ")", "\n", "print", "(", "f'{args.save} done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.timer.__init__": [[23, 26], ["utility.timer.tic"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic"], ["        ", "self", ".", "acc", "=", "0", "\n", "self", ".", "tic", "(", ")", "\n", "\n", "", "def", "tic", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.timer.tic": [[27, 29], ["time.time"], "methods", ["None"], ["        ", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "def", "toc", "(", "self", ",", "restart", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.timer.toc": [[30, 34], ["time.time", "time.time"], "methods", ["None"], ["        ", "diff", "=", "time", ".", "time", "(", ")", "-", "self", ".", "t0", "\n", "if", "restart", ":", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "return", "diff", "\n", "\n", "", "def", "hold", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.timer.hold": [[35, 37], ["utility.timer.toc"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.toc"], ["        ", "self", ".", "acc", "+=", "self", ".", "toc", "(", ")", "\n", "\n", "", "def", "release", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.timer.release": [[38, 43], ["None"], "methods", ["None"], ["        ", "ret", "=", "self", ".", "acc", "\n", "self", ".", "acc", "=", "0", "\n", "\n", "return", "ret", "\n", "\n", "", "def", "reset", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.timer.reset": [[44, 46], ["None"], "methods", ["None"], ["        ", "self", ".", "acc", "=", "0", "\n", "\n", "", "", "class", "checkpoint", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.checkpoint.__init__": [[48, 84], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "datetime.datetime.now().strftime", "os.makedirs", "os.makedirs", "open", "os.path.join", "os.path.exists", "os.system", "utility.checkpoint.get_path", "os.makedirs", "os.path.exists", "utility.checkpoint.get_path", "open", "f.write", "vars", "f.write", "datetime.datetime.now", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "utility.checkpoint.get_path", "utility.checkpoint.get_path", "utility.checkpoint.get_path", "f.write", "utility.checkpoint.get_path", "len", "getattr"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["        ", "self", ".", "args", "=", "args", "\n", "self", ".", "ok", "=", "True", "\n", "self", ".", "log", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "ssim_log", "=", "torch", ".", "Tensor", "(", ")", "\n", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "\n", "if", "not", "args", ".", "load", ":", "\n", "            ", "if", "not", "args", ".", "save", ":", "\n", "                ", "args", ".", "save", "=", "now", "\n", "", "self", ".", "dir", "=", "os", ".", "path", ".", "join", "(", "'..'", ",", "'experiment'", ",", "args", ".", "save", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dir", "=", "os", ".", "path", ".", "join", "(", "'..'", ",", "'experiment'", ",", "args", ".", "load", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", ")", ":", "\n", "                ", "self", ".", "log", "=", "torch", ".", "load", "(", "self", ".", "get_path", "(", "'psnr_log.pt'", ")", ")", "\n", "print", "(", "'Continue from epoch {}...'", ".", "format", "(", "len", "(", "self", ".", "log", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "args", ".", "load", "=", "''", "\n", "\n", "", "", "if", "args", ".", "reset", ":", "\n", "            ", "os", ".", "system", "(", "'rm -rf '", "+", "self", ".", "dir", ")", "\n", "args", ".", "load", "=", "''", "\n", "\n", "", "os", ".", "makedirs", "(", "self", ".", "dir", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "get_path", "(", "'model'", ")", ",", "exist_ok", "=", "True", ")", "\n", "for", "d", "in", "args", ".", "data_test", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "get_path", "(", "'results-{}'", ".", "format", "(", "d", ")", ")", ",", "exist_ok", "=", "True", ")", "\n", "", "os", ".", "makedirs", "(", "self", ".", "get_path", "(", "'run'", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "open_type", "=", "'a'", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "get_path", "(", "'log.txt'", ")", ")", "else", "'w'", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "get_path", "(", "'log.txt'", ")", ",", "open_type", ")", "\n", "self", ".", "eval_file", "=", "open", "(", "self", ".", "get_path", "(", "'eval.txt'", ")", ",", "open_type", ")", "\n", "\n", "with", "open", "(", "self", ".", "get_path", "(", "'config.txt'", ")", ",", "open_type", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "now", "+", "'\\n\\n'", ")", "\n", "for", "arg", "in", "vars", "(", "args", ")", ":", "\n", "                ", "f", ".", "write", "(", "'{}: {}\\n'", ".", "format", "(", "arg", ",", "getattr", "(", "args", ",", "arg", ")", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.checkpoint.get_path": [[85, 87], ["os.path.join"], "methods", ["None"], ["\n", "", "self", ".", "n_processes", "=", "8", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.checkpoint.save": [[88, 96], ["trainer.model.save", "trainer.loss.save", "trainer.loss.plot_loss", "utility.checkpoint.plot_psnr", "trainer.optimizer.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "utility.checkpoint.get_path", "utility.checkpoint.get_path"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.plot_loss", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.plot_psnr", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "def", "get_path", "(", "self", ",", "*", "subdir", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "*", "subdir", ")", "\n", "\n", "", "def", "save", "(", "self", ",", "trainer", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "trainer", ".", "model", ".", "save", "(", "self", ".", "get_path", "(", "'model'", ")", ",", "epoch", ",", "is_best", "=", "is_best", ")", "\n", "trainer", ".", "loss", ".", "save", "(", "self", ".", "dir", ")", "\n", "trainer", ".", "loss", ".", "plot_loss", "(", "self", ".", "dir", ",", "epoch", ")", "\n", "\n", "self", ".", "plot_psnr", "(", "epoch", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.checkpoint.add_log": [[97, 99], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["trainer", ".", "optimizer", ".", "save", "(", "self", ".", "dir", ")", "\n", "torch", ".", "save", "(", "self", ".", "log", ",", "self", ".", "get_path", "(", "'psnr_log.pt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.checkpoint.write_log": [[100, 106], ["print", "utility.checkpoint.log_file.write", "utility.checkpoint.log_file.close", "open", "utility.checkpoint.get_path"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "def", "add_log", "(", "self", ",", "log", ")", ":", "\n", "        ", "self", ".", "log", "=", "torch", ".", "cat", "(", "[", "self", ".", "log", ",", "log", "]", ")", "\n", "\n", "", "def", "write_log", "(", "self", ",", "log", ",", "refresh", "=", "False", ")", ":", "\n", "        ", "print", "(", "log", ")", "\n", "self", ".", "log_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "if", "refresh", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.checkpoint.done": [[107, 109], ["utility.checkpoint.log_file.close"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close"], ["            ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "get_path", "(", "'log.txt'", ")", ",", "'a'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.checkpoint.plot_psnr": [[110, 128], ["numpy.linspace", "enumerate", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "enumerate", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "matplotlib.plot", "matplotlib.plot", "utility.checkpoint.get_path", "utility.checkpoint.log[].numpy"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "", "def", "write_eval", "(", "self", ",", "log", ")", ":", "\n", "        ", "self", ".", "eval_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "\n", "", "def", "done", "(", "self", ")", ":", "\n", "        ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "self", ".", "eval_file", ".", "close", "(", ")", "\n", "\n", "", "def", "plot_psnr", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "axis", "=", "np", ".", "linspace", "(", "1", ",", "epoch", ",", "epoch", ")", "\n", "for", "idx_data", ",", "d", "in", "enumerate", "(", "self", ".", "args", ".", "data_test", ")", ":", "\n", "            ", "label", "=", "'SR on {}'", ".", "format", "(", "d", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "title", "(", "label", ")", "\n", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "args", ".", "scale", ")", ":", "\n", "                ", "plt", ".", "plot", "(", "\n", "axis", ",", "\n", "self", ".", "log", "[", ":", ",", "idx_data", ",", "idx_scale", "]", ".", "numpy", "(", ")", ",", "\n", "label", "=", "'Scale {}'", ".", "format", "(", "scale", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.checkpoint.begin_background": [[129, 145], ["multiprocessing.Queue", "multiprocessing.Process", "p.start", "range", "queue.empty", "queue.get", "imageio.imwrite", "tensor.numpy"], "methods", ["None"], ["", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'PSNR'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "self", ".", "get_path", "(", "'test_{}.pdf'", ".", "format", "(", "d", ")", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n", "", "", "def", "begin_background", "(", "self", ")", ":", "\n", "        ", "self", ".", "queue", "=", "Queue", "(", ")", "\n", "\n", "def", "bg_target", "(", "queue", ")", ":", "\n", "            ", "while", "True", ":", "\n", "                ", "if", "not", "queue", ".", "empty", "(", ")", ":", "\n", "                    ", "filename", ",", "tensor", "=", "queue", ".", "get", "(", ")", "\n", "if", "filename", "is", "None", ":", "break", "\n", "imageio", ".", "imwrite", "(", "filename", ",", "tensor", ".", "numpy", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.checkpoint.end_background": [[146, 150], ["range", "utility.checkpoint.queue.put", "utility.checkpoint.queue.empty", "time.sleep", "p.join"], "methods", ["None"], ["", "", "", "self", ".", "process", "=", "[", "\n", "Process", "(", "target", "=", "bg_target", ",", "args", "=", "(", "self", ".", "queue", ",", ")", ")", "for", "_", "in", "range", "(", "self", ".", "n_processes", ")", "\n", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.checkpoint.save_results": [[151, 164], ["utility.checkpoint.get_path", "zip", "v[].mul", "v[].mul.byte().permute().cpu", "utility.checkpoint.queue.put", "v[].mul.byte().permute", "v[].mul.byte"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["for", "p", "in", "self", ".", "process", ":", "p", ".", "start", "(", ")", "\n", "\n", "", "def", "end_background", "(", "self", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "self", ".", "n_processes", ")", ":", "self", ".", "queue", ".", "put", "(", "(", "None", ",", "None", ")", ")", "\n", "while", "not", "self", ".", "queue", ".", "empty", "(", ")", ":", "time", ".", "sleep", "(", "1", ")", "\n", "for", "p", "in", "self", ".", "process", ":", "p", ".", "join", "(", ")", "\n", "\n", "", "def", "save_results", "(", "self", ",", "dataset", ",", "filename", ",", "save_list", ",", "scale", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "save_results", ":", "\n", "            ", "filename", "=", "self", ".", "get_path", "(", "\n", "'results-{}'", ".", "format", "(", "dataset", ".", "dataset", ".", "name", ")", ",", "\n", "'{}_x{}_'", ".", "format", "(", "filename", ",", "scale", ")", "\n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.quantize": [[165, 168], ["img.mul().clamp().round().div", "img.mul().clamp().round", "img.mul().clamp", "img.mul"], "function", ["None"], ["postfix", "=", "(", "'SR'", ",", "'LR'", ",", "'HR'", ")", "\n", "for", "v", ",", "p", "in", "zip", "(", "save_list", ",", "postfix", ")", ":", "\n", "                ", "normalized", "=", "v", "[", "0", "]", ".", "mul", "(", "255", "/", "self", ".", "args", ".", "rgb_range", ")", "\n", "tensor_cpu", "=", "normalized", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.calc_psnr": [[169, 186], ["valid.pow().mean", "hr.nelement", "math.log10", "diff.mul().sum.size", "diff.mul().sum.mul().sum", "valid.pow", "diff.mul().sum.new_tensor().view", "diff.mul().sum.mul", "diff.mul().sum.new_tensor"], "function", ["None"], ["self", ".", "queue", ".", "put", "(", "(", "'{}{}.png'", ".", "format", "(", "filename", ",", "p", ")", ",", "tensor_cpu", ")", ")", "\n", "\n", "", "", "", "", "def", "quantize", "(", "img", ",", "rgb_range", ")", ":", "\n", "    ", "pixel_range", "=", "255", "/", "rgb_range", "\n", "return", "img", ".", "mul", "(", "pixel_range", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "round", "(", ")", ".", "div", "(", "pixel_range", ")", "\n", "\n", "", "def", "calc_psnr", "(", "sr", ",", "hr", ",", "scale", ",", "rgb_range", ",", "dataset", "=", "None", ")", ":", "\n", "    ", "if", "hr", ".", "nelement", "(", ")", "==", "1", ":", "return", "0", "\n", "diff", "=", "(", "sr", "-", "hr", ")", "/", "rgb_range", "\n", "if", "dataset", "and", "dataset", ".", "dataset", ".", "benchmark", ":", "\n", "        ", "shave", "=", "scale", "\n", "if", "diff", ".", "size", "(", "1", ")", ">", "1", ":", "\n", "            ", "gray_coeffs", "=", "[", "65.738", ",", "129.057", ",", "25.064", "]", "\n", "convert", "=", "diff", ".", "new_tensor", "(", "gray_coeffs", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", "/", "256", "\n", "diff", "=", "diff", ".", "mul", "(", "convert", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "", "", "else", ":", "\n", "        ", "shave", "=", "scale", "+", "6", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.utility.make_optimizer": [[187, 241], ["filter", "list", "CustomOptimizer", "CustomOptimizer._register_scheduler", "target.parameters", "map", "args.decay.split", "super().__init__", "scheduler_class", "torch.save", "torch.save", "torch.save", "utility..load_state_dict", "os.path.join", "utility..scheduler.step", "int", "utility..state_dict", "utility..get_dir", "torch.load", "torch.load", "torch.load", "range", "utility..scheduler.get_lr", "utility..get_dir", "utility..scheduler.step"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step"], ["", "valid", "=", "diff", "[", "...", ",", "shave", ":", "-", "shave", ",", "shave", ":", "-", "shave", "]", "\n", "mse", "=", "valid", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n", "return", "-", "10", "*", "math", ".", "log10", "(", "mse", ")", "\n", "\n", "", "def", "ssim", "(", "img1", ",", "img2", ")", ":", "\n", "    ", "C1", "=", "(", "0.01", "*", "255", ")", "**", "2", "\n", "C2", "=", "(", "0.03", "*", "255", ")", "**", "2", "\n", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "kernel", "=", "cv2", ".", "getGaussianKernel", "(", "11", ",", "1.5", ")", "\n", "window", "=", "np", ".", "outer", "(", "kernel", ",", "kernel", ".", "transpose", "(", ")", ")", "\n", "\n", "mu1", "=", "cv2", ".", "filter2D", "(", "img1", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "# valid", "\n", "mu2", "=", "cv2", ".", "filter2D", "(", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "\n", "mu1_sq", "=", "mu1", "**", "2", "\n", "mu2_sq", "=", "mu2", "**", "2", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "sigma1_sq", "=", "cv2", ".", "filter2D", "(", "img1", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_sq", "\n", "sigma2_sq", "=", "cv2", ".", "filter2D", "(", "img2", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu2_sq", "\n", "sigma12", "=", "cv2", ".", "filter2D", "(", "img1", "*", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_mu2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "\n", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "return", "ssim_map", ".", "mean", "(", ")", "\n", "\n", "", "def", "bgr2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        uint8, [0, 255]\n        float, [0, 1]\n    '''", "\n", "in_img_type", "=", "img", ".", "dtype", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "in_img_type", "!=", "np", ".", "uint8", ":", "\n", "        ", "img", "*=", "255.", "\n", "# convert", "\n", "", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "24.966", ",", "128.553", ",", "65.481", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "if", "in_img_type", "==", "np", ".", "uint8", ":", "\n", "        ", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "", "else", ":", "\n", "        ", "rlt", "/=", "255.", "\n", "", "return", "rlt", ".", "astype", "(", "in_img_type", ")", "\n", "\n", "", "def", "tensor2img", "(", "tensor", ",", "out_type", "=", "np", ".", "uint8", ",", "min_max", "=", "(", "0", ",", "1", ")", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.AverageMeter.__init__": [[27, 32], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.AverageMeter.reset": [[33, 38], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.AverageMeter.update": [[39, 45], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "if", "self", ".", "count", ">", "0", ":", "\n", "            ", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.AverageMeter.accumulate": [[46, 51], ["None"], "methods", ["None"], ["", "", "def", "accumulate", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "sum", "+=", "val", "\n", "self", ".", "count", "+=", "n", "\n", "if", "self", ".", "count", ">", "0", ":", "\n", "            ", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.__init__": [[53, 74], ["open", "common.Logger.file.readline", "common.Logger.rstrip().split", "enumerate", "common.Logger.file.close", "open", "open", "numbers.rstrip().split.rstrip().split.rstrip().split", "range", "common.Logger.rstrip", "len", "common.Logger.numbers[].append", "numbers.rstrip().split.rstrip().split.rstrip"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["    ", "def", "__init__", "(", "self", ",", "fpath", ",", "title", "=", "None", ",", "resume", "=", "False", ")", ":", "\n", "        ", "self", ".", "file", "=", "None", "\n", "self", ".", "resume", "=", "resume", "\n", "self", ".", "title", "=", "''", "if", "title", "==", "None", "else", "title", "\n", "if", "fpath", "is", "not", "None", ":", "\n", "            ", "if", "resume", ":", "\n", "                ", "self", ".", "file", "=", "open", "(", "fpath", ",", "'r'", ")", "\n", "name", "=", "self", ".", "file", ".", "readline", "(", ")", "\n", "self", ".", "names", "=", "name", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "self", ".", "numbers", "=", "{", "}", "\n", "for", "_", ",", "name", "in", "enumerate", "(", "self", ".", "names", ")", ":", "\n", "                    ", "self", ".", "numbers", "[", "name", "]", "=", "[", "]", "\n", "\n", "", "for", "numbers", "in", "self", ".", "file", ":", "\n", "                    ", "numbers", "=", "numbers", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "numbers", ")", ")", ":", "\n", "                        ", "self", ".", "numbers", "[", "self", ".", "names", "[", "i", "]", "]", ".", "append", "(", "numbers", "[", "i", "]", ")", "\n", "", "", "self", ".", "file", ".", "close", "(", ")", "\n", "self", ".", "file", "=", "open", "(", "fpath", ",", "'a'", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "file", "=", "open", "(", "fpath", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.set_names": [[75, 87], ["enumerate", "common.Logger.file.write", "common.Logger.file.flush", "common.Logger.file.write", "common.Logger.file.write"], "methods", ["None"], ["", "", "", "def", "set_names", "(", "self", ",", "names", ")", ":", "\n", "        ", "if", "self", ".", "resume", ":", "\n", "            ", "pass", "\n", "# initialize numbers as empty list", "\n", "", "self", ".", "numbers", "=", "{", "}", "\n", "self", ".", "names", "=", "names", "\n", "for", "_", ",", "name", "in", "enumerate", "(", "self", ".", "names", ")", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "name", ")", "\n", "self", ".", "file", ".", "write", "(", "'\\t'", ")", "\n", "self", ".", "numbers", "[", "name", "]", "=", "[", "]", "\n", "", "self", ".", "file", ".", "write", "(", "'\\n'", ")", "\n", "self", ".", "file", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append": [[88, 96], ["enumerate", "common.Logger.file.write", "common.Logger.file.flush", "len", "len", "common.Logger.file.write", "common.Logger.file.write", "common.Logger.numbers[].append"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "def", "append", "(", "self", ",", "numbers", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "names", ")", "==", "len", "(", "numbers", ")", ",", "'Numbers do not match names'", "\n", "for", "index", ",", "num", "in", "enumerate", "(", "numbers", ")", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "\"{0:.6f}\"", ".", "format", "(", "num", ")", ")", "\n", "self", ".", "file", ".", "write", "(", "'\\t'", ")", "\n", "self", ".", "numbers", "[", "self", ".", "names", "[", "index", "]", "]", ".", "append", "(", "num", ")", "\n", "", "self", ".", "file", ".", "write", "(", "'\\n'", ")", "\n", "self", ".", "file", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot": [[97, 105], ["enumerate", "matplotlib.legend", "matplotlib.legend", "matplotlib.legend", "matplotlib.grid", "matplotlib.grid", "matplotlib.grid", "numpy.arange", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "len", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot"], ["", "def", "plot", "(", "self", ",", "names", "=", "None", ")", ":", "\n", "        ", "names", "=", "self", ".", "names", "if", "names", "==", "None", "else", "names", "\n", "numbers", "=", "self", ".", "numbers", "\n", "for", "_", ",", "name", "in", "enumerate", "(", "names", ")", ":", "\n", "            ", "x", "=", "np", ".", "arange", "(", "len", "(", "numbers", "[", "name", "]", ")", ")", "\n", "plt", ".", "plot", "(", "x", ",", "np", ".", "asarray", "(", "numbers", "[", "name", "]", ")", ")", "\n", "", "plt", ".", "legend", "(", "[", "self", ".", "title", "+", "'('", "+", "name", "+", "')'", "for", "name", "in", "names", "]", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close": [[106, 109], ["common.Logger.file.close"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.accuracy": [[111, 124], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.to_numpy": [[130, 133], ["var.cpu().data.numpy", "var.data.numpy", "var.cpu"], "function", ["None"], ["def", "to_numpy", "(", "var", ")", ":", "\n", "# return var.cpu().data.numpy()", "\n", "    ", "return", "var", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "if", "USE_CUDA", "else", "var", ".", "data", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.to_tensor": [[135, 139], ["torch.autograd.Variable().type", "torch.autograd.Variable", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["", "def", "to_tensor", "(", "ndarray", ",", "volatile", "=", "False", ",", "requires_grad", "=", "False", ",", "dtype", "=", "FLOAT", ")", ":", "\n", "    ", "return", "Variable", "(", "\n", "torch", ".", "from_numpy", "(", "ndarray", ")", ",", "volatile", "=", "volatile", ",", "requires_grad", "=", "requires_grad", "\n", ")", ".", "type", "(", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.sample_from_truncated_normal_distribution": [[141, 144], ["stats.truncnorm.rvs"], "function", ["None"], ["", "def", "sample_from_truncated_normal_distribution", "(", "lower", ",", "upper", ",", "mu", ",", "sigma", ",", "size", "=", "1", ")", ":", "\n", "    ", "from", "scipy", "import", "stats", "\n", "return", "stats", ".", "truncnorm", ".", "rvs", "(", "(", "lower", "-", "mu", ")", "/", "sigma", ",", "(", "upper", "-", "mu", ")", "/", "sigma", ",", "loc", "=", "mu", ",", "scale", "=", "sigma", ",", "size", "=", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.prRed": [[147, 148], ["print"], "function", ["None"], ["", "def", "prRed", "(", "prt", ")", ":", "print", "(", "\"\\033[91m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prGreen", "(", "prt", ")", ":", "print", "(", "\"\\033[92m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.prGreen": [[148, 149], ["print"], "function", ["None"], ["def", "prGreen", "(", "prt", ")", ":", "print", "(", "\"\\033[92m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prYellow", "(", "prt", ")", ":", "print", "(", "\"\\033[93m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.prYellow": [[149, 150], ["print"], "function", ["None"], ["def", "prYellow", "(", "prt", ")", ":", "print", "(", "\"\\033[93m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prLightPurple", "(", "prt", ")", ":", "print", "(", "\"\\033[94m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.prLightPurple": [[150, 151], ["print"], "function", ["None"], ["def", "prLightPurple", "(", "prt", ")", ":", "print", "(", "\"\\033[94m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prPurple", "(", "prt", ")", ":", "print", "(", "\"\\033[95m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.prPurple": [[151, 152], ["print"], "function", ["None"], ["def", "prPurple", "(", "prt", ")", ":", "print", "(", "\"\\033[95m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prCyan", "(", "prt", ")", ":", "print", "(", "\"\\033[96m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.prCyan": [[152, 153], ["print"], "function", ["None"], ["def", "prCyan", "(", "prt", ")", ":", "print", "(", "\"\\033[96m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prLightGray", "(", "prt", ")", ":", "print", "(", "\"\\033[97m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.prLightGray": [[153, 154], ["print"], "function", ["None"], ["def", "prLightGray", "(", "prt", ")", ":", "print", "(", "\"\\033[97m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prBlack", "(", "prt", ")", ":", "print", "(", "\"\\033[98m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.prBlack": [[154, 155], ["print"], "function", ["None"], ["def", "prBlack", "(", "prt", ")", ":", "print", "(", "\"\\033[98m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.cross_entropy_with_label_smoothing": [[157, 167], ["torch.LogSoftmax", "pred.size", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like.scatter_", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "nn.LogSoftmax."], "function", ["None"], ["def", "cross_entropy_with_label_smoothing", "(", "pred", ",", "target", ",", "label_smoothing", "=", "0.1", ")", ":", "\n", "    ", "logsoftmax", "=", "nn", ".", "LogSoftmax", "(", ")", "\n", "n_classes", "=", "pred", ".", "size", "(", "1", ")", "\n", "# convert to one-hot", "\n", "target", "=", "torch", ".", "unsqueeze", "(", "target", ",", "1", ")", "\n", "soft_target", "=", "torch", ".", "zeros_like", "(", "pred", ")", "\n", "soft_target", ".", "scatter_", "(", "1", ",", "target", ",", "1", ")", "\n", "# label smoothing", "\n", "soft_target", "=", "soft_target", "*", "(", "1", "-", "label_smoothing", ")", "+", "label_smoothing", "/", "n_classes", "\n", "return", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "-", "soft_target", "*", "logsoftmax", "(", "pred", ")", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.wrapped_partial": [[169, 173], ["functools.partial", "functools.update_wrapper"], "function", ["None"], ["", "def", "wrapped_partial", "(", "func", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "  ", "partial_func", "=", "functools", ".", "partial", "(", "func", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "functools", ".", "update_wrapper", "(", "partial_func", ",", "func", ")", "\n", "return", "partial_func", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.get_logger": [[175, 189], ["logging.getLogger", "coloredlogs.install", "logging.Formatter", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler"], "function", ["None"], ["", "def", "get_logger", "(", "file_path", ",", "name", "=", "'ED'", ")", ":", "\n", "    ", "\"\"\" Make python logger \"\"\"", "\n", "# [!] Since tensorboardX use default logger (e.g. logging.info()), we should use custom logger", "\n", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "coloredlogs", ".", "install", "(", "level", "=", "'INFO'", ",", "logger", "=", "logger", ")", "\n", "\n", "log_format", "=", "'%(asctime)s | %(message)s'", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "log_format", ",", "datefmt", "=", "'%m/%d %I:%M:%S %p'", ")", "\n", "file_handler", "=", "logging", ".", "FileHandler", "(", "file_path", ")", "\n", "file_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "\n", "logger", ".", "addHandler", "(", "file_handler", ")", "\n", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.print_params": [[190, 196], ["prtf", "prtf", "sorted", "prtf", "config.items", "prtf", "attr.upper"], "function", ["None"], ["", "def", "print_params", "(", "config", ",", "prtf", "=", "print", ")", ":", "\n", "    ", "prtf", "(", "\"\"", ")", "\n", "prtf", "(", "\"Parameters:\"", ")", "\n", "for", "attr", ",", "value", "in", "sorted", "(", "config", ".", "items", "(", ")", ")", ":", "\n", "        ", "prtf", "(", "\"{}={}\"", ".", "format", "(", "attr", ".", "upper", "(", ")", ",", "value", ")", ")", "\n", "", "prtf", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.as_markdown": [[198, 205], ["sorted", "config.items"], "function", ["None"], ["", "def", "as_markdown", "(", "config", ")", ":", "\n", "    ", "\"\"\" Return configs as markdown format \"\"\"", "\n", "text", "=", "\"|name|value|  \\n|-|-|  \\n\"", "\n", "for", "attr", ",", "value", "in", "sorted", "(", "config", ".", "items", "(", ")", ")", ":", "\n", "        ", "text", "+=", "\"|{}|{}|  \\n\"", ".", "format", "(", "attr", ",", "value", ")", "\n", "\n", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.at": [[206, 208], ["torch.normalize", "x.pow().mean().view", "x.size", "x.pow().mean", "x.pow"], "function", ["None"], ["", "def", "at", "(", "x", ")", ":", "\n", "    ", "return", "F", ".", "normalize", "(", "x", ".", "pow", "(", "2", ")", ".", "mean", "(", "1", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.at_loss": [[209, 211], ["common.at", "common.at"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.at", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.at"], ["", "def", "at_loss", "(", "x", ",", "y", ")", ":", "\n", "    ", "return", "(", "at", "(", "x", ")", "-", "at", "(", "y", ")", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.distillation": [[226, 232], ["torch.log_softmax", "torch.softmax", "torch.cross_entropy", "torch.kl_div"], "function", ["None"], ["", "def", "distillation", "(", "y", ",", "teacher_scores", ",", "labels", ",", "T", ",", "alpha", ")", ":", "\n", "    ", "p", "=", "F", ".", "log_softmax", "(", "y", "/", "T", ",", "dim", "=", "1", ")", "\n", "q", "=", "F", ".", "softmax", "(", "teacher_scores", "/", "T", ",", "dim", "=", "1", ")", "\n", "l_kl", "=", "F", ".", "kl_div", "(", "p", ",", "q", ",", "reduction", "=", "'sum'", ")", "*", "(", "T", "**", "2", ")", "/", "y", ".", "shape", "[", "0", "]", "\n", "l_ce", "=", "F", ".", "cross_entropy", "(", "y", ",", "labels", ")", "\n", "return", "l_kl", "*", "alpha", "+", "l_ce", "*", "(", "1.", "-", "alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.pix_loss": [[234, 237], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs"], "function", ["None"], ["", "def", "pix_loss", "(", "x", ",", "y", ")", ":", "\n", "    ", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "x", "-", "y", ")", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common._make_dir": [[242, 244], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "_make_dir", "(", "path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.tensor2img": [[245, 270], ["tensor.squeeze().float().cpu().clamp_.squeeze().float().cpu().clamp_", "tensor.squeeze().float().cpu().clamp_.dim", "tensor.numpy.astype", "len", "torchvision.utils.make_grid().numpy", "numpy.transpose", "tensor.squeeze().float().cpu().clamp_.squeeze().float().cpu", "tensor.squeeze().float().cpu().clamp_.numpy", "numpy.transpose", "torchvision.utils.make_grid", "tensor.squeeze().float().cpu().clamp_.numpy", "TypeError", "tensor.squeeze().float().cpu().clamp_.squeeze().float", "int", "tensor.squeeze().float().cpu().clamp_.squeeze", "math.sqrt"], "function", ["None"], ["", "def", "tensor2img", "(", "tensor", ",", "out_type", "=", "np", ".", "uint8", ",", "min_max", "=", "(", "0", ",", "1", ")", ")", ":", "\n", "    ", "'''\n    Converts a torch Tensor into an image Numpy array\n    Input: 4D(B,(3/1),H,W), 3D(C,H,W), or 2D(H,W), any range, RGB channel order\n    Output: 3D(H,W,C) or 2D(H,W), [0,255], np.uint8 (default)\n    '''", "\n", "tensor", "=", "tensor", ".", "squeeze", "(", ")", ".", "float", "(", ")", ".", "cpu", "(", ")", ".", "clamp_", "(", "*", "min_max", ")", "# clamp", "\n", "tensor", "=", "(", "tensor", "-", "min_max", "[", "0", "]", ")", "/", "(", "min_max", "[", "1", "]", "-", "min_max", "[", "0", "]", ")", "# to range [0,1]", "\n", "n_dim", "=", "tensor", ".", "dim", "(", ")", "\n", "if", "n_dim", "==", "4", ":", "\n", "        ", "n_img", "=", "len", "(", "tensor", ")", "\n", "img_np", "=", "make_grid", "(", "tensor", ",", "nrow", "=", "int", "(", "math", ".", "sqrt", "(", "n_img", ")", ")", ",", "normalize", "=", "False", ")", ".", "numpy", "(", ")", "\n", "img_np", "=", "np", ".", "transpose", "(", "img_np", "[", "[", "2", ",", "1", ",", "0", "]", ",", ":", ",", ":", "]", ",", "(", "1", ",", "2", ",", "0", ")", ")", "# HWC, BGR", "\n", "", "elif", "n_dim", "==", "3", ":", "\n", "        ", "img_np", "=", "tensor", ".", "numpy", "(", ")", "\n", "img_np", "=", "np", ".", "transpose", "(", "img_np", "[", "[", "2", ",", "1", ",", "0", "]", ",", ":", ",", ":", "]", ",", "(", "1", ",", "2", ",", "0", ")", ")", "# HWC, BGR", "\n", "", "elif", "n_dim", "==", "2", ":", "\n", "        ", "img_np", "=", "tensor", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "'Only support 4D, 3D and 2D tensor. But received with dimension: {:d}'", ".", "format", "(", "n_dim", ")", ")", "\n", "", "if", "out_type", "==", "np", ".", "uint8", ":", "\n", "        ", "img_np", "=", "(", "img_np", "*", "255.0", ")", ".", "round", "(", ")", "\n", "# Important. Unlike matlab, numpy.unit8() WILL NOT round by default.", "\n", "", "return", "img_np", ".", "astype", "(", "out_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.save_img": [[272, 274], ["cv2.imwrite"], "function", ["None"], ["", "def", "save_img", "(", "img", ",", "img_path", ",", "mode", "=", "'RGB'", ")", ":", "\n", "    ", "cv2", ".", "imwrite", "(", "img_path", ",", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.get_activation": [[276, 280], ["None"], "function", ["None"], ["", "def", "get_activation", "(", "name", ",", "activation", ")", ":", "\n", "    ", "def", "hook", "(", "model", ",", "input", ",", "output", ")", ":", "\n", "        ", "activation", "[", "name", "]", "=", "output", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.plot_loss": [[281, 294], ["numpy.linspace", "enumerate", "matplotlib.figure", "matplotlib.title", "matplotlib.plot", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.savefig", "matplotlib.close", "log[].numpy", "os.path.join"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close"], ["", "def", "plot_loss", "(", "args", ",", "loss", ",", "apath", ",", "epoch", ")", ":", "\n", "        ", "axis", "=", "np", ".", "linspace", "(", "1", ",", "epoch", ",", "epoch", ")", "\n", "for", "i", ",", "l", "in", "enumerate", "(", "loss", ")", ":", "\n", "            ", "label", "=", "'{} Loss'", ".", "format", "(", "l", "[", "'type'", "]", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "title", "(", "label", ")", "\n", "plt", ".", "plot", "(", "axis", ",", "log", "[", ":", ",", "i", "]", ".", "numpy", "(", ")", ",", "label", "=", "label", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "apath", ",", "'loss_{}.pdf'", ".", "format", "(", "l", "[", "'type'", "]", ")", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.plot_psnr": [[295, 313], ["numpy.linspace", "enumerate", "matplotlib.figure", "matplotlib.title", "enumerate", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.savefig", "matplotlib.close", "matplotlib.plot", "os.path.join", "log[].numpy"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot"], ["", "", "def", "plot_psnr", "(", "args", ",", "apath", ",", "epoch", ")", ":", "\n", "    ", "axis", "=", "np", ".", "linspace", "(", "1", ",", "epoch", ",", "epoch", ")", "\n", "for", "idx_data", ",", "d", "in", "enumerate", "(", "args", ".", "data_test", ")", ":", "\n", "        ", "label", "=", "'SR on {}'", ".", "format", "(", "d", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "title", "(", "label", ")", "\n", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "args", ".", "scale", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "\n", "axis", ",", "\n", "log", "[", ":", ",", "idx_data", ",", "idx_scale", "]", ".", "numpy", "(", ")", ",", "\n", "label", "=", "'Scale {}'", ".", "format", "(", "scale", ")", "\n", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'PSNR'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "apath", ",", "'test_{}.pdf'", ".", "format", "(", "d", "[", "'type'", "]", ")", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.save_checkpoint": [[315, 321], ["os.path.join", "torch.save", "torch.save", "torch.save", "print", "shutil.copyfile", "os.path.join"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save"], ["", "", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "checkpoint", "=", "'checkpoint'", ",", "filename", "=", "'checkpoint.pth.tar'", ")", ":", "\n", "    ", "filepath", "=", "os", ".", "path", ".", "join", "(", "checkpoint", ",", "filename", ")", "\n", "torch", ".", "save", "(", "state", ",", "filepath", ")", "\n", "print", "(", "'save:'", ",", "filepath", ")", "\n", "if", "is_best", ":", "\n", "        ", "shutil", ".", "copyfile", "(", "filepath", ",", "os", ".", "path", ".", "join", "(", "checkpoint", ",", "'model_best.pth.tar'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.load_check": [[323, 346], ["model.state_dict", "teacher_pretrained_model.keys", "model.state_dict.keys", "range", "teacher_model_key.append", "len", "student_model_key.append", "print"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "", "def", "load_check", "(", "checkpoint", ",", "model", ")", ":", "\n", "    ", "student_model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "teacher_pretrained_model", "=", "checkpoint", "\n", "\n", "if", "teacher_pretrained_model", ":", "\n", "        ", "teacher_model_key", "=", "[", "]", "\n", "student_model_key", "=", "[", "]", "\n", "\n", "for", "tkey", "in", "teacher_pretrained_model", ".", "keys", "(", ")", ":", "\n", "            ", "teacher_model_key", ".", "append", "(", "tkey", ")", "\n", "\n", "", "for", "skey", "in", "student_model_dict", ".", "keys", "(", ")", ":", "\n", "            ", "if", "'alpha'", "not", "in", "skey", "and", "'max_val'", "not", "in", "skey", ":", "\n", "                ", "student_model_key", ".", "append", "(", "skey", ")", "\n", "\n", "", "", "for", "temp", "in", "student_model_key", ":", "\n", "            ", "if", "temp", "not", "in", "teacher_model_key", ":", "\n", "                ", "print", "(", "f'Archive Keys {temp}'", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "student_model_key", ")", ")", ":", "\n", "            ", "student_model_dict", "[", "student_model_key", "[", "i", "]", "]", "=", "teacher_pretrained_model", "[", "teacher_model_key", "[", "i", "]", "]", "\n", "\n", "", "", "return", "student_model_dict", "\n", "", ""]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.__init__": [[11, 15], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "csv_path", "=", "'results.csv'", ",", "log_path", "=", "None", ",", "resume", "=", "False", ")", ":", "\n", "        ", "self", ".", "path", "=", "csv_path", "\n", "self", ".", "figures", "=", "[", "]", "\n", "self", ".", "results", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add": [[16, 22], ["pandas.DataFrame", "logger.Logger.results.append", "logger_dict.values", "logger_dict.keys"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "def", "add", "(", "self", ",", "logger_dict", ")", ":", "\n", "        ", "df", "=", "pd", ".", "DataFrame", "(", "[", "logger_dict", ".", "values", "(", ")", "]", ",", "columns", "=", "logger_dict", ".", "keys", "(", ")", ")", "\n", "if", "self", ".", "results", "is", "None", ":", "\n", "            ", "self", ".", "results", "=", "df", "\n", "", "else", ":", "\n", "            ", "self", ".", "results", "=", "self", ".", "results", ".", "append", "(", "df", ",", "ignore_index", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.save": [[23, 25], ["logger.Logger.results.to_csv"], "methods", ["None"], ["", "", "def", "save", "(", "self", ",", "title", "=", "'Training Results'", ")", ":", "\n", "        ", "self", ".", "results", ".", "to_csv", "(", "self", ".", "path", ",", "index", "=", "False", ",", "index_label", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.load": [[26, 30], ["os.path.isfile", "pandas.read_csv"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "path", "=", "None", ")", ":", "\n", "        ", "path", "=", "path", "or", "self", ".", "path", "\n", "if", "os", ".", "path", ".", "isfile", "(", "path", ")", ":", "\n", "            ", "self", ".", "results", "=", "pd", ".", "read_csv", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.mask_log": [[31, 33], ["None"], "methods", ["None"], ["", "", "def", "mask_log", "(", "self", ")", ":", "\n", "        ", "return", "logging", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.edsr.DDTB_ResBlock.__init__": [[15, 36], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "model.quant_ops.DDTB_quant_act_asym_dynamic_quantized", "model.quant_ops.DDTB_quant_act_asym_dynamic_quantized", "model.quant_ops.DDTB_quant_act_asym_dynamic_quantized", "model.common.ShortCut", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "m.append", "conv", "m.append", "m.append"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "n_feats", ",", "kernel_size", ",", "bias", "=", "False", ",", "\n", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "False", ")", ",", "res_scale", "=", "1", ",", "k_bits", "=", "32", ",", "ema_epoch", "=", "1", ",", "name", "=", "None", ")", ":", "\n", "\n", "        ", "super", "(", "DDTB_ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k_bits", "=", "k_bits", "\n", "\n", "self", ".", "quant_act1", "=", "DDTB_quant_act_asym_dynamic_quantized", "(", "self", ".", "k_bits", ",", "ema_epoch", "=", "ema_epoch", ",", "inplanes", "=", "n_feats", ",", "M", "=", "99", ")", "\n", "self", ".", "quant_act2", "=", "DDTB_quant_act_asym_dynamic_quantized", "(", "self", ".", "k_bits", ",", "ema_epoch", "=", "ema_epoch", ",", "inplanes", "=", "n_feats", ",", "M", "=", "99", ")", "\n", "self", ".", "quant_act3", "=", "DDTB_quant_act_asym_dynamic_quantized", "(", "self", ".", "k_bits", ",", "ema_epoch", "=", "ema_epoch", ",", "inplanes", "=", "n_feats", ",", "M", "=", "99", ")", "\n", "\n", "self", ".", "shortcut", "=", "common", ".", "ShortCut", "(", ")", "\n", "\n", "m", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ",", "k_bits", "=", "self", ".", "k_bits", ",", "bias", "=", "bias", ")", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "m", ".", "append", "(", "act", ")", "\n", "m", ".", "append", "(", "self", ".", "quant_act2", ")", "\n", "\n", "", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.edsr.DDTB_ResBlock.forward": [[37, 45], ["edsr.DDTB_ResBlock.quant_act1", "edsr.DDTB_ResBlock.body().mul", "edsr.DDTB_ResBlock.quant_act3", "edsr.DDTB_ResBlock.shortcut", "edsr.DDTB_ResBlock.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "self", ".", "quant_act1", "(", "self", ".", "shortcut", "(", "x", ")", ")", "\n", "# residual = self.shortcut(x)", "\n", "body", "=", "self", ".", "body", "(", "x", ")", ".", "mul", "(", "self", ".", "res_scale", ")", "\n", "res", "=", "self", ".", "quant_act3", "(", "body", ")", "\n", "res", "+=", "residual", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.edsr.DDTB_EDSR.__init__": [[47, 84], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "model.common.MeanShift", "model.common.MeanShift", "m_body.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.quant_ops.conv3x3", "edsr.DDTB_ResBlock", "model.quant_ops.conv3x3", "model.common.Upsampler", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.conv3x3", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "quant_conv3x3_asym99", ",", "bias", "=", "False", ",", "k_bits", "=", "32", ")", ":", "\n", "        ", "super", "(", "DDTB_EDSR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "n_resblock", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "k_bits", "=", "args", ".", "k_bits", "\n", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ")", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "sign", "=", "1", ")", "\n", "\n", "# define head module", "\n", "m_head", "=", "[", "conv3x3", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ",", "bias", "=", "bias", ")", "]", "\n", "\n", "# define body module", "\n", "m_body", "=", "[", "\n", "DDTB_ResBlock", "(", "\n", "quant_conv3x3_asym99", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", ",", "k_bits", "=", "self", ".", "k_bits", ",", "bias", "=", "bias", ",", "ema_epoch", "=", "args", ".", "ema_epoch", "\n", ")", "for", "i", "in", "range", "(", "n_resblock", ")", "\n", "]", "\n", "\n", "m_body", ".", "append", "(", "conv3x3", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "\n", "# define tail module", "\n", "m_tail", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv3x3", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", "\n", ")", "\n", "]", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "m_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "m_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.edsr.DDTB_EDSR.forward": [[85, 96], ["edsr.DDTB_EDSR.sub_mean", "edsr.DDTB_EDSR.head", "time.time", "edsr.DDTB_EDSR.body", "edsr.DDTB_EDSR.tail", "edsr.DDTB_EDSR.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "out", "=", "res", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "return", "x", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.edsr.DDTB_EDSR.name": [[97, 100], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'edsr'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.__init__": [[22, 25], ["utility.timer.tic"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "=", "0", "\n", "self", ".", "tic", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic": [[26, 28], ["time.time"], "methods", ["None"], ["", "def", "tic", "(", "self", ")", ":", "\n", "        ", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.toc": [[29, 33], ["time.time", "time.time"], "methods", ["None"], ["", "def", "toc", "(", "self", ",", "restart", "=", "False", ")", ":", "\n", "        ", "diff", "=", "time", ".", "time", "(", ")", "-", "self", ".", "t0", "\n", "if", "restart", ":", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.hold": [[34, 36], ["utility.timer.toc"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.toc"], ["", "def", "hold", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "+=", "self", ".", "toc", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.release": [[37, 42], ["None"], "methods", ["None"], ["", "def", "release", "(", "self", ")", ":", "\n", "        ", "ret", "=", "self", ".", "acc", "\n", "self", ".", "acc", "=", "0", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.reset": [[43, 45], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.__init__": [[47, 87], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "datetime.datetime.now().strftime", "os.makedirs", "os.makedirs", "os.makedirs", "open", "open", "os.path.join", "os.path.join", "os.path.exists", "os.system", "utility.checkpoint.get_path", "os.makedirs", "utility.checkpoint.get_path", "os.path.exists", "utility.checkpoint.get_path", "utility.checkpoint.get_path", "open", "f.write", "vars", "f.write", "datetime.datetime.now", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "utility.checkpoint.get_path", "utility.checkpoint.get_path", "utility.checkpoint.get_path", "f.write", "utility.checkpoint.get_path", "len", "getattr"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "ok", "=", "True", "\n", "self", ".", "log", "=", "torch", ".", "Tensor", "(", ")", "\n", "self", ".", "ssim_log", "=", "torch", ".", "Tensor", "(", ")", "\n", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "\n", "if", "not", "args", ".", "load", ":", "\n", "            ", "if", "not", "args", ".", "save", ":", "\n", "                ", "args", ".", "save", "=", "now", "\n", "", "self", ".", "dir", "=", "os", ".", "path", ".", "join", "(", "'..'", ",", "'experiment'", ",", "args", ".", "save", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dir", "=", "os", ".", "path", ".", "join", "(", "'..'", ",", "'experiment'", ",", "args", ".", "load", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", ")", ":", "\n", "                ", "self", ".", "log", "=", "torch", ".", "load", "(", "self", ".", "get_path", "(", "'psnr_log.pt'", ")", ")", "\n", "print", "(", "'Continue from epoch {}...'", ".", "format", "(", "len", "(", "self", ".", "log", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "args", ".", "load", "=", "''", "\n", "\n", "", "", "if", "args", ".", "reset", ":", "\n", "            ", "os", ".", "system", "(", "'rm -rf '", "+", "self", ".", "dir", ")", "\n", "args", ".", "load", "=", "''", "\n", "\n", "", "os", ".", "makedirs", "(", "self", ".", "dir", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "get_path", "(", "'model'", ")", ",", "exist_ok", "=", "True", ")", "\n", "for", "d", "in", "args", ".", "data_test", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "get_path", "(", "'results-{}'", ".", "format", "(", "d", ")", ")", ",", "exist_ok", "=", "True", ")", "\n", "", "os", ".", "makedirs", "(", "self", ".", "get_path", "(", "'run'", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "open_type", "=", "'a'", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "get_path", "(", "'log.txt'", ")", ")", "else", "'w'", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "get_path", "(", "'log.txt'", ")", ",", "open_type", ")", "\n", "self", ".", "eval_file", "=", "open", "(", "self", ".", "get_path", "(", "'eval.txt'", ")", ",", "open_type", ")", "\n", "\n", "with", "open", "(", "self", ".", "get_path", "(", "'config.txt'", ")", ",", "open_type", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "now", "+", "'\\n\\n'", ")", "\n", "for", "arg", "in", "vars", "(", "args", ")", ":", "\n", "                ", "f", ".", "write", "(", "'{}: {}\\n'", ".", "format", "(", "arg", ",", "getattr", "(", "args", ",", "arg", ")", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "\n", "", "self", ".", "n_processes", "=", "8", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path": [[88, 90], ["os.path.join"], "methods", ["None"], ["", "def", "get_path", "(", "self", ",", "*", "subdir", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "*", "subdir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.save": [[91, 99], ["trainer.model.save", "trainer.loss.save", "trainer.loss.plot_loss", "utility.checkpoint.plot_psnr", "trainer.optimizer.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "utility.checkpoint.get_path", "utility.checkpoint.get_path"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.plot_loss", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.plot_psnr", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "def", "save", "(", "self", ",", "trainer", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "trainer", ".", "model", ".", "save", "(", "self", ".", "get_path", "(", "'model'", ")", ",", "epoch", ",", "is_best", "=", "is_best", ")", "\n", "trainer", ".", "loss", ".", "save", "(", "self", ".", "dir", ")", "\n", "trainer", ".", "loss", ".", "plot_loss", "(", "self", ".", "dir", ",", "epoch", ")", "\n", "\n", "self", ".", "plot_psnr", "(", "epoch", ")", "\n", "trainer", ".", "optimizer", ".", "save", "(", "self", ".", "dir", ")", "\n", "torch", ".", "save", "(", "self", ".", "log", ",", "self", ".", "get_path", "(", "'psnr_log.pt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.add_log": [[100, 102], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "add_log", "(", "self", ",", "log", ")", ":", "\n", "        ", "self", ".", "log", "=", "torch", ".", "cat", "(", "[", "self", ".", "log", ",", "log", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log": [[103, 109], ["print", "utility.checkpoint.log_file.write", "utility.checkpoint.log_file.close", "open", "utility.checkpoint.get_path"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "def", "write_log", "(", "self", ",", "log", ",", "refresh", "=", "False", ")", ":", "\n", "        ", "print", "(", "log", ")", "\n", "self", ".", "log_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "if", "refresh", ":", "\n", "            ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "get_path", "(", "'log.txt'", ")", ",", "'a'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_eval": [[110, 112], ["utility.checkpoint.eval_file.write"], "methods", ["None"], ["", "", "def", "write_eval", "(", "self", ",", "log", ")", ":", "\n", "        ", "self", ".", "eval_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.done": [[113, 116], ["utility.checkpoint.log_file.close", "utility.checkpoint.eval_file.close"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close"], ["", "def", "done", "(", "self", ")", ":", "\n", "        ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "self", ".", "eval_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.plot_psnr": [[117, 135], ["numpy.linspace", "enumerate", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "enumerate", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "matplotlib.plot", "matplotlib.plot", "utility.checkpoint.get_path", "utility.checkpoint.log[].numpy"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "def", "plot_psnr", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "axis", "=", "np", ".", "linspace", "(", "1", ",", "epoch", ",", "epoch", ")", "\n", "for", "idx_data", ",", "d", "in", "enumerate", "(", "self", ".", "args", ".", "data_test", ")", ":", "\n", "            ", "label", "=", "'SR on {}'", ".", "format", "(", "d", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "title", "(", "label", ")", "\n", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "args", ".", "scale", ")", ":", "\n", "                ", "plt", ".", "plot", "(", "\n", "axis", ",", "\n", "self", ".", "log", "[", ":", ",", "idx_data", ",", "idx_scale", "]", ".", "numpy", "(", ")", ",", "\n", "label", "=", "'Scale {}'", ".", "format", "(", "scale", ")", "\n", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'PSNR'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "self", ".", "get_path", "(", "'test_{}.pdf'", ".", "format", "(", "d", ")", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.begin_background": [[136, 152], ["multiprocessing.Queue", "multiprocessing.Process", "p.start", "range", "queue.empty", "queue.get", "imageio.imwrite", "tensor.numpy"], "methods", ["None"], ["", "", "def", "begin_background", "(", "self", ")", ":", "\n", "        ", "self", ".", "queue", "=", "Queue", "(", ")", "\n", "\n", "def", "bg_target", "(", "queue", ")", ":", "\n", "            ", "while", "True", ":", "\n", "                ", "if", "not", "queue", ".", "empty", "(", ")", ":", "\n", "                    ", "filename", ",", "tensor", "=", "queue", ".", "get", "(", ")", "\n", "if", "filename", "is", "None", ":", "break", "\n", "imageio", ".", "imwrite", "(", "filename", ",", "tensor", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "", "self", ".", "process", "=", "[", "\n", "Process", "(", "target", "=", "bg_target", ",", "args", "=", "(", "self", ".", "queue", ",", ")", ")", "for", "_", "in", "range", "(", "self", ".", "n_processes", ")", "\n", "]", "\n", "\n", "for", "p", "in", "self", ".", "process", ":", "p", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.end_background": [[153, 157], ["range", "utility.checkpoint.queue.put", "utility.checkpoint.queue.empty", "time.sleep", "p.join"], "methods", ["None"], ["", "def", "end_background", "(", "self", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "self", ".", "n_processes", ")", ":", "self", ".", "queue", ".", "put", "(", "(", "None", ",", "None", ")", ")", "\n", "while", "not", "self", ".", "queue", ".", "empty", "(", ")", ":", "time", ".", "sleep", "(", "1", ")", "\n", "for", "p", "in", "self", ".", "process", ":", "p", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.save_results": [[158, 170], ["utility.checkpoint.get_path", "zip", "v[].mul", "v[].mul.byte().permute().cpu", "utility.checkpoint.queue.put", "v[].mul.byte().permute", "v[].mul.byte"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.get_path"], ["", "def", "save_results", "(", "self", ",", "dataset", ",", "filename", ",", "save_list", ",", "scale", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "save_results", ":", "\n", "            ", "filename", "=", "self", ".", "get_path", "(", "\n", "'results-{}'", ".", "format", "(", "dataset", ".", "dataset", ".", "name", ")", ",", "\n", "'{}_x{}_'", ".", "format", "(", "filename", ",", "scale", ")", "\n", ")", "\n", "\n", "postfix", "=", "(", "'SR'", ",", "'LR'", ",", "'HR'", ")", "\n", "for", "v", ",", "p", "in", "zip", "(", "save_list", ",", "postfix", ")", ":", "\n", "                ", "normalized", "=", "v", "[", "0", "]", ".", "mul", "(", "255", "/", "self", ".", "args", ".", "rgb_range", ")", "\n", "tensor_cpu", "=", "normalized", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", "\n", "self", ".", "queue", ".", "put", "(", "(", "'{}{}.png'", ".", "format", "(", "filename", ",", "p", ")", ",", "tensor_cpu", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.quantize": [[171, 174], ["img.mul().clamp().round().div", "img.mul().clamp().round", "img.mul().clamp", "img.mul"], "function", ["None"], ["", "", "", "", "def", "quantize", "(", "img", ",", "rgb_range", ")", ":", "\n", "    ", "pixel_range", "=", "255", "/", "rgb_range", "\n", "return", "img", ".", "mul", "(", "pixel_range", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "round", "(", ")", ".", "div", "(", "pixel_range", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.calc_psnr": [[175, 191], ["valid.pow().mean", "hr.nelement", "math.log10", "diff.mul().sum.size", "diff.mul().sum.mul().sum", "valid.pow", "diff.mul().sum.new_tensor().view", "diff.mul().sum.mul", "diff.mul().sum.new_tensor"], "function", ["None"], ["", "def", "calc_psnr", "(", "sr", ",", "hr", ",", "scale", ",", "rgb_range", ",", "dataset", "=", "None", ")", ":", "\n", "    ", "if", "hr", ".", "nelement", "(", ")", "==", "1", ":", "return", "0", "\n", "diff", "=", "(", "sr", "-", "hr", ")", "/", "rgb_range", "\n", "if", "dataset", "and", "dataset", ".", "dataset", ".", "benchmark", ":", "\n", "        ", "shave", "=", "scale", "\n", "if", "diff", ".", "size", "(", "1", ")", ">", "1", ":", "\n", "            ", "gray_coeffs", "=", "[", "65.738", ",", "129.057", ",", "25.064", "]", "\n", "convert", "=", "diff", ".", "new_tensor", "(", "gray_coeffs", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", "/", "256", "\n", "diff", "=", "diff", ".", "mul", "(", "convert", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "", "", "else", ":", "\n", "        ", "shave", "=", "scale", "+", "6", "\n", "\n", "", "valid", "=", "diff", "[", "...", ",", "shave", ":", "-", "shave", ",", "shave", ":", "-", "shave", "]", "\n", "mse", "=", "valid", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n", "return", "-", "10", "*", "math", ".", "log10", "(", "mse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.ssim": [[192, 213], ["img1.astype.astype", "img2.astype.astype", "cv2.getGaussianKernel", "numpy.outer", "ssim_map.mean", "cv2.getGaussianKernel.transpose", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D"], "function", ["None"], ["", "def", "ssim", "(", "img1", ",", "img2", ")", ":", "\n", "    ", "C1", "=", "(", "0.01", "*", "255", ")", "**", "2", "\n", "C2", "=", "(", "0.03", "*", "255", ")", "**", "2", "\n", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "kernel", "=", "cv2", ".", "getGaussianKernel", "(", "11", ",", "1.5", ")", "\n", "window", "=", "np", ".", "outer", "(", "kernel", ",", "kernel", ".", "transpose", "(", ")", ")", "\n", "\n", "mu1", "=", "cv2", ".", "filter2D", "(", "img1", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "# valid", "\n", "mu2", "=", "cv2", ".", "filter2D", "(", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "\n", "mu1_sq", "=", "mu1", "**", "2", "\n", "mu2_sq", "=", "mu2", "**", "2", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "sigma1_sq", "=", "cv2", ".", "filter2D", "(", "img1", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_sq", "\n", "sigma2_sq", "=", "cv2", ".", "filter2D", "(", "img2", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu2_sq", "\n", "sigma12", "=", "cv2", ".", "filter2D", "(", "img1", "*", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_mu2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "\n", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "return", "ssim_map", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.bgr2ycbcr": [[214, 236], ["img.astype", "rlt.round.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "bgr2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        uint8, [0, 255]\n        float, [0, 1]\n    '''", "\n", "in_img_type", "=", "img", ".", "dtype", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "in_img_type", "!=", "np", ".", "uint8", ":", "\n", "        ", "img", "*=", "255.", "\n", "# convert", "\n", "", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "24.966", ",", "128.553", ",", "65.481", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "if", "in_img_type", "==", "np", ".", "uint8", ":", "\n", "        ", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "", "else", ":", "\n", "        ", "rlt", "/=", "255.", "\n", "", "return", "rlt", ".", "astype", "(", "in_img_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.tensor2img": [[237, 262], ["tensor.squeeze().float().cpu().clamp_.squeeze().float().cpu().clamp_", "tensor.squeeze().float().cpu().clamp_.dim", "tensor.numpy.astype", "len", "make_grid().numpy", "numpy.transpose", "tensor.squeeze().float().cpu().clamp_.squeeze().float().cpu", "tensor.squeeze().float().cpu().clamp_.numpy", "numpy.transpose", "make_grid", "tensor.squeeze().float().cpu().clamp_.numpy", "TypeError", "tensor.squeeze().float().cpu().clamp_.squeeze().float", "int", "tensor.squeeze().float().cpu().clamp_.squeeze", "math.sqrt"], "function", ["None"], ["", "def", "tensor2img", "(", "tensor", ",", "out_type", "=", "np", ".", "uint8", ",", "min_max", "=", "(", "0", ",", "1", ")", ")", ":", "\n", "    ", "'''\n    Converts a torch Tensor into an image Numpy array\n    Input: 4D(B,(3/1),H,W), 3D(C,H,W), or 2D(H,W), any range, RGB channel order\n    Output: 3D(H,W,C) or 2D(H,W), [0,255], np.uint8 (default)\n    '''", "\n", "tensor", "=", "tensor", ".", "squeeze", "(", ")", ".", "float", "(", ")", ".", "cpu", "(", ")", ".", "clamp_", "(", "*", "min_max", ")", "# clamp", "\n", "tensor", "=", "(", "tensor", "-", "min_max", "[", "0", "]", ")", "/", "(", "min_max", "[", "1", "]", "-", "min_max", "[", "0", "]", ")", "# to range [0,1]", "\n", "n_dim", "=", "tensor", ".", "dim", "(", ")", "\n", "if", "n_dim", "==", "4", ":", "\n", "        ", "n_img", "=", "len", "(", "tensor", ")", "\n", "img_np", "=", "make_grid", "(", "tensor", ",", "nrow", "=", "int", "(", "math", ".", "sqrt", "(", "n_img", ")", ")", ",", "normalize", "=", "False", ")", ".", "numpy", "(", ")", "\n", "img_np", "=", "np", ".", "transpose", "(", "img_np", "[", "[", "2", ",", "1", ",", "0", "]", ",", ":", ",", ":", "]", ",", "(", "1", ",", "2", ",", "0", ")", ")", "# HWC, BGR", "\n", "", "elif", "n_dim", "==", "3", ":", "\n", "        ", "img_np", "=", "tensor", ".", "numpy", "(", ")", "\n", "img_np", "=", "np", ".", "transpose", "(", "img_np", "[", "[", "2", ",", "1", ",", "0", "]", ",", ":", ",", ":", "]", ",", "(", "1", ",", "2", ",", "0", ")", ")", "# HWC, BGR", "\n", "", "elif", "n_dim", "==", "2", ":", "\n", "        ", "img_np", "=", "tensor", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "'Only support 4D, 3D and 2D tensor. But received with dimension: {:d}'", ".", "format", "(", "n_dim", ")", ")", "\n", "", "if", "out_type", "==", "np", ".", "uint8", ":", "\n", "        ", "img_np", "=", "(", "img_np", "*", "255.0", ")", ".", "round", "(", ")", "\n", "# Important. Unlike matlab, numpy.unit8() WILL NOT round by default.", "\n", "", "return", "img_np", ".", "astype", "(", "out_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.calc_ssim": [[263, 296], ["utility.tensor2img", "utility.tensor2img", "utility.bgr2ycbcr", "utility.bgr2ycbcr", "ValueError", "utility.ssim", "ValueError", "range", "numpy.array().mean", "ssims.append", "utility.ssim", "utility.ssim", "numpy.array", "numpy.squeeze", "numpy.squeeze"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.tensor2img", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.tensor2img", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.bgr2ycbcr", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.bgr2ycbcr", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.ssim", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.ssim", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.ssim"], ["", "def", "calc_ssim", "(", "img1", ",", "img2", ",", "scale", ")", ":", "\n", "    ", "'''calculate SSIM\n    the same outputs as MATLAB's\n    img1, img2: [0, 255]\n    '''", "\n", "shave", "=", "scale", "\n", "\n", "img1", "=", "tensor2img", "(", "img1", ")", "/", "255.", "\n", "img2", "=", "tensor2img", "(", "img2", ")", "/", "255.", "\n", "\n", "# print(img1.shape, img2.shape)", "\n", "# img1 = img1[shave:-shave, shave:-shave, :]", "\n", "# img2 = img2[shave:-shave, shave:-shave, :]", "\n", "\n", "img1", "=", "bgr2ycbcr", "(", "img1", ")", "*", "255", "\n", "img2", "=", "bgr2ycbcr", "(", "img2", ")", "*", "255", "\n", "\n", "# print(img1.shape, img2.shape)", "\n", "\n", "if", "not", "img1", ".", "shape", "==", "img2", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "'Input images must have the same dimensions.'", ")", "\n", "", "if", "img1", ".", "ndim", "==", "2", ":", "\n", "        ", "return", "ssim", "(", "img1", ",", "img2", ")", "\n", "", "elif", "img1", ".", "ndim", "==", "3", ":", "\n", "        ", "if", "img1", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "            ", "ssims", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "ssims", ".", "append", "(", "ssim", "(", "img1", ",", "img2", ")", ")", "\n", "", "return", "np", ".", "array", "(", "ssims", ")", ".", "mean", "(", ")", "\n", "", "elif", "img1", ".", "shape", "[", "2", "]", "==", "1", ":", "\n", "            ", "return", "ssim", "(", "np", ".", "squeeze", "(", "img1", ")", ",", "np", ".", "squeeze", "(", "img2", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Wrong input image dimensions.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.make_optimizer": [[298, 352], ["filter", "list", "CustomOptimizer", "CustomOptimizer._register_scheduler", "target.parameters", "map", "args.decay.split", "super().__init__", "scheduler_class", "torch.save", "torch.save", "torch.save", "utility..load_state_dict", "os.path.join", "utility..scheduler.step", "int", "utility..state_dict", "utility..get_dir", "torch.load", "torch.load", "torch.load", "range", "utility..scheduler.get_lr", "utility..get_dir", "utility..scheduler.step"], "function", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step"], ["", "", "def", "make_optimizer", "(", "args", ",", "target", ")", ":", "\n", "    ", "'''\n        make optimizer and scheduler together\n    '''", "\n", "# optimizer", "\n", "trainable", "=", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "target", ".", "parameters", "(", ")", ")", "\n", "kwargs_optimizer", "=", "{", "'lr'", ":", "args", ".", "lr", ",", "'weight_decay'", ":", "args", ".", "weight_decay", "}", "\n", "\n", "if", "args", ".", "optimizer", "==", "'SGD'", ":", "\n", "        ", "optimizer_class", "=", "optim", ".", "SGD", "\n", "kwargs_optimizer", "[", "'momentum'", "]", "=", "args", ".", "momentum", "\n", "", "elif", "args", ".", "optimizer", "==", "'ADAM'", ":", "\n", "        ", "optimizer_class", "=", "optim", ".", "Adam", "\n", "kwargs_optimizer", "[", "'betas'", "]", "=", "args", ".", "betas", "\n", "kwargs_optimizer", "[", "'eps'", "]", "=", "args", ".", "epsilon", "\n", "", "elif", "args", ".", "optimizer", "==", "'RMSprop'", ":", "\n", "        ", "optimizer_class", "=", "optim", ".", "RMSprop", "\n", "kwargs_optimizer", "[", "'eps'", "]", "=", "args", ".", "epsilon", "\n", "\n", "# scheduler", "\n", "", "milestones", "=", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ")", ",", "args", ".", "decay", ".", "split", "(", "'-'", ")", ")", ")", "\n", "kwargs_scheduler", "=", "{", "'milestones'", ":", "milestones", ",", "'gamma'", ":", "args", ".", "gamma", "}", "\n", "scheduler_class", "=", "lrs", ".", "MultiStepLR", "\n", "\n", "class", "CustomOptimizer", "(", "optimizer_class", ")", ":", "\n", "        ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "super", "(", "CustomOptimizer", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "_register_scheduler", "(", "self", ",", "scheduler_class", ",", "**", "kwargs", ")", ":", "\n", "            ", "self", ".", "scheduler", "=", "scheduler_class", "(", "self", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "save", "(", "self", ",", "save_dir", ")", ":", "\n", "            ", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "self", ".", "get_dir", "(", "save_dir", ")", ")", "\n", "\n", "", "def", "load", "(", "self", ",", "load_dir", ",", "epoch", "=", "1", ")", ":", "\n", "            ", "self", ".", "load_state_dict", "(", "torch", ".", "load", "(", "self", ".", "get_dir", "(", "load_dir", ")", ")", ")", "\n", "if", "epoch", ">", "1", ":", "\n", "                ", "for", "_", "in", "range", "(", "epoch", ")", ":", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "", "def", "get_dir", "(", "self", ",", "dir_path", ")", ":", "\n", "            ", "return", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'optimizer.pt'", ")", "\n", "\n", "", "def", "schedule", "(", "self", ")", ":", "\n", "            ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "def", "get_lr", "(", "self", ")", ":", "\n", "            ", "return", "self", ".", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "\n", "", "def", "get_last_epoch", "(", "self", ")", ":", "\n", "            ", "return", "self", ".", "scheduler", ".", "last_epoch", "\n", "\n", "", "", "optimizer", "=", "CustomOptimizer", "(", "trainable", ",", "**", "kwargs_optimizer", ")", "\n", "optimizer", ".", "_register_scheduler", "(", "scheduler_class", ",", "**", "kwargs_scheduler", ")", "\n", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.common.ShortCut.__init__": [[13, 15], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["import", "cv2", "\n", "import", "torch", "\n", "import", "functools", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.common.ShortCut.forward": [[16, 18], ["None"], "methods", ["None"], ["import", "numpy", "as", "np", "\n", "import", "math", "\n", "from", "torchvision", ".", "utils", "import", "make_grid", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.common.MeanShift.__init__": [[20, 30], ["torch.Conv2d.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "common.MeanShift.parameters", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.Tensor.view", "torch.Tensor.view", "torch.Tensor.view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["from", "decimal", "import", "Decimal", "\n", "\n", "import", "matplotlib", "\n", "matplotlib", ".", "use", "(", "'Agg'", ")", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "\n", "class", "AverageMeter", "(", "object", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.common.BasicBlock.__init__": [[32, 43], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential.__init__", "conv", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["\n", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n", "", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "if", "self", ".", "count", ">", "0", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.common.ResBlock.__init__": [[45, 61], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "common.ShortCut", "m.append", "conv", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["\n", "", "", "def", "accumulate", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "sum", "+=", "val", "\n", "self", ".", "count", "+=", "n", "\n", "if", "self", ".", "count", ">", "0", ":", "\n", "            ", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n", "", "", "", "class", "Logger", "(", "object", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "fpath", ",", "title", "=", "None", ",", "resume", "=", "False", ")", ":", "\n", "        ", "self", ".", "file", "=", "None", "\n", "self", ".", "resume", "=", "resume", "\n", "self", ".", "title", "=", "''", "if", "title", "==", "None", "else", "title", "\n", "if", "fpath", "is", "not", "None", ":", "\n", "            ", "if", "resume", ":", "\n", "                ", "self", ".", "file", "=", "open", "(", "fpath", ",", "'r'", ")", "\n", "name", "=", "self", ".", "file", ".", "readline", "(", ")", "\n", "self", ".", "names", "=", "name", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.common.ResBlock.forward": [[62, 68], ["common.ResBlock.shortcut", "common.ResBlock.body().mul", "common.ResBlock.body"], "methods", ["None"], ["self", ".", "numbers", "=", "{", "}", "\n", "for", "_", ",", "name", "in", "enumerate", "(", "self", ".", "names", ")", ":", "\n", "                    ", "self", ".", "numbers", "[", "name", "]", "=", "[", "]", "\n", "\n", "", "for", "numbers", "in", "self", ".", "file", ":", "\n", "                    ", "numbers", "=", "numbers", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "numbers", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.common.Upsampler.__init__": [[70, 97], ["torch.Sequential.__init__", "range", "int", "m.append", "m.append", "m.append", "m.append", "math.log", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "m.append", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "", "self", ".", "file", ".", "close", "(", ")", "\n", "self", ".", "file", "=", "open", "(", "fpath", ",", "'a'", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "file", "=", "open", "(", "fpath", ",", "'w'", ")", "\n", "\n", "", "", "", "def", "set_names", "(", "self", ",", "names", ")", ":", "\n", "        ", "if", "self", ".", "resume", ":", "\n", "            ", "pass", "\n", "# initialize numbers as empty list", "\n", "", "self", ".", "numbers", "=", "{", "}", "\n", "self", ".", "names", "=", "names", "\n", "for", "_", ",", "name", "in", "enumerate", "(", "self", ".", "names", ")", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "name", ")", "\n", "self", ".", "file", ".", "write", "(", "'\\t'", ")", "\n", "self", ".", "numbers", "[", "name", "]", "=", "[", "]", "\n", "", "self", ".", "file", ".", "write", "(", "'\\n'", ")", "\n", "self", ".", "file", ".", "flush", "(", ")", "\n", "\n", "", "def", "append", "(", "self", ",", "numbers", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "names", ")", "==", "len", "(", "numbers", ")", ",", "'Numbers do not match names'", "\n", "for", "index", ",", "num", "in", "enumerate", "(", "numbers", ")", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "\"{0:.6f}\"", ".", "format", "(", "num", ")", ")", "\n", "self", ".", "file", ".", "write", "(", "'\\t'", ")", "\n", "self", ".", "numbers", "[", "self", ".", "names", "[", "index", "]", "]", ".", "append", "(", "num", ")", "\n", "", "self", ".", "file", ".", "write", "(", "'\\n'", ")", "\n", "self", ".", "file", ".", "flush", "(", ")", "\n", "\n", "", "def", "plot", "(", "self", ",", "names", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.common.default_conv": [[7, 11], ["torch.Conv2d"], "function", ["None"], ["import", "shutil", "\n", "import", "torch", ".", "nn", "as", "nn", "\n", "import", "torch", ".", "nn", ".", "functional", "as", "F", "\n", "import", "logging", "\n", "import", "coloredlogs", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn_org.RDB_Conv.__init__": [[9, 16], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inChannels", ",", "growRate", ",", "kSize", "=", "3", ")", ":", "\n", "        ", "super", "(", "RDB_Conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "Cin", "=", "inChannels", "\n", "G", "=", "growRate", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Conv2d", "(", "Cin", ",", "G", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn_org.RDB_Conv.forward": [[18, 21], ["rdn_org.RDB_Conv.conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "torch", ".", "cat", "(", "(", "x", ",", "out", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn_org.RDB.__init__": [[23, 36], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "convs.append", "rdn_org.RDB_Conv"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["    ", "def", "__init__", "(", "self", ",", "growRate0", ",", "growRate", ",", "nConvLayers", ",", "kSize", "=", "3", ")", ":", "\n", "        ", "super", "(", "RDB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "G0", "=", "growRate0", "\n", "G", "=", "growRate", "\n", "C", "=", "nConvLayers", "\n", "\n", "convs", "=", "[", "]", "\n", "for", "c", "in", "range", "(", "C", ")", ":", "\n", "            ", "convs", ".", "append", "(", "RDB_Conv", "(", "G0", "+", "c", "*", "G", ",", "G", ")", ")", "\n", "", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "*", "convs", ")", "\n", "\n", "# Local Feature Fusion", "\n", "self", ".", "LFF", "=", "nn", ".", "Conv2d", "(", "G0", "+", "C", "*", "G", ",", "G0", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn_org.RDB.forward": [[37, 39], ["rdn_org.RDB.LFF", "rdn_org.RDB.convs"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "LFF", "(", "self", ".", "convs", "(", "x", ")", ")", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn_org.RDN.__init__": [[41, 88], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ModuleList", "torch.ModuleList", "range", "torch.Sequential", "torch.Sequential", "rdn_org.RDN.RDBs.append", "torch.Sequential", "torch.Sequential", "rdn_org.RDB", "torch.Sequential", "torch.Sequential", "ValueError", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "is_teacher", "=", "False", ")", ":", "\n", "        ", "super", "(", "RDN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "r", "=", "args", ".", "scale", "[", "0", "]", "\n", "G0", "=", "args", ".", "G0", "\n", "kSize", "=", "args", ".", "RDNkSize", "\n", "self", ".", "is_teacher", "=", "is_teacher", "\n", "\n", "# number of RDB blocks, conv layers, out channels", "\n", "self", ".", "D", ",", "C", ",", "G", "=", "{", "\n", "'A'", ":", "(", "20", ",", "6", ",", "32", ")", ",", "\n", "'B'", ":", "(", "16", ",", "8", ",", "64", ")", ",", "\n", "}", "[", "args", ".", "RDNconfig", "]", "\n", "\n", "# Shallow feature extraction net", "\n", "self", ".", "SFENet1", "=", "nn", ".", "Conv2d", "(", "args", ".", "n_colors", ",", "G0", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", "\n", "self", ".", "SFENet2", "=", "nn", ".", "Conv2d", "(", "G0", ",", "G0", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", "\n", "\n", "# Redidual dense blocks and dense feature fusion", "\n", "self", ".", "RDBs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "D", ")", ":", "\n", "            ", "self", ".", "RDBs", ".", "append", "(", "\n", "RDB", "(", "growRate0", "=", "G0", ",", "growRate", "=", "G", ",", "nConvLayers", "=", "C", ")", "\n", ")", "\n", "\n", "# Global Feature Fusion", "\n", "", "self", ".", "GFF", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Conv2d", "(", "self", ".", "D", "*", "G0", ",", "G0", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "G0", ",", "G0", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", "\n", "]", ")", "\n", "\n", "# Up-sampling net", "\n", "if", "r", "==", "2", "or", "r", "==", "3", ":", "\n", "            ", "self", ".", "UPNet", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Conv2d", "(", "G0", ",", "G", "*", "r", "*", "r", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "r", ")", ",", "\n", "nn", ".", "Conv2d", "(", "G", ",", "args", ".", "n_colors", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", "\n", "]", ")", "\n", "", "elif", "r", "==", "4", ":", "\n", "            ", "self", ".", "UPNet", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Conv2d", "(", "G0", ",", "G", "*", "4", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "G", ",", "G", "*", "4", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "G", ",", "args", ".", "n_colors", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"scale must be 2 or 3 or 4.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn_org.RDN.forward": [[89, 106], ["rdn_org.RDN.SFENet1", "rdn_org.RDN.SFENet2", "range", "rdn_org.RDN.GFF", "rdn_org.RDN.UPNet", "RDBs_out.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rdn_org.RDN.UPNet"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "f__1", "=", "self", ".", "SFENet1", "(", "x", ")", "\n", "x", "=", "self", ".", "SFENet2", "(", "f__1", ")", "\n", "RDBs_out", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "D", ")", ":", "\n", "            ", "x", "=", "self", ".", "RDBs", "[", "i", "]", "(", "x", ")", "\n", "RDBs_out", ".", "append", "(", "x", ")", "\n", "\n", "\n", "", "x", "=", "self", ".", "GFF", "(", "torch", ".", "cat", "(", "RDBs_out", ",", "1", ")", ")", "\n", "x", "+=", "f__1", "\n", "out", "=", "x", "\n", "\n", "if", "self", ".", "is_teacher", ":", "\n", "            ", "return", "self", ".", "UPNet", "(", "x", ")", ",", "out", "\n", "\n", "", "return", "self", ".", "UPNet", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_weight.__init__": [[55, 60], ["torch.Module.__init__", "quant_ops.TorchRound"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.TorchRound"], ["def", "__init__", "(", "self", ",", "k_bits", ")", ":", "\n", "        ", "super", "(", "quant_weight", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k_bits", "=", "k_bits", "\n", "self", ".", "qmax", "=", "2.", "**", "(", "k_bits", "-", "1", ")", "-", "1.", "\n", "self", ".", "round", "=", "TorchRound", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_weight.forward": [[61, 71], ["quant_ops.quant_max", "quant_ops.quant_weight.round"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_max"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "if", "self", ".", "k_bits", "==", "32", ":", "\n", "            ", "return", "input", "\n", "\n", "", "max_val", "=", "quant_max", "(", "input", ")", "\n", "weight", "=", "input", "*", "self", ".", "qmax", "/", "max_val", "\n", "q_weight", "=", "self", ".", "round", "(", "weight", ")", "\n", "q_weight", "=", "q_weight", "*", "max_val", "/", "self", ".", "qmax", "\n", "return", "q_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_weight_asym99.__init__": [[77, 82], ["torch.Module.__init__", "quant_ops.TorchRound"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.TorchRound"], ["def", "__init__", "(", "self", ",", "k_bits", ")", ":", "\n", "        ", "super", "(", "quant_weight_asym99", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k_bits", "=", "k_bits", "\n", "self", ".", "qmax", "=", "2.", "**", "(", "k_bits", "-", "1", ")", "-", "1.", "\n", "self", ".", "round", "=", "TorchRound", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_weight_asym99.forward": [[83, 105], ["torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.max", "torch.max", "torch.max", "torch.max", "quant_ops.quant_weight_asym99.round", "quant_ops.quant_weight_asym99.round", "torch.min", "torch.min", "torch.min", "torch.min", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "numpy.percentile", "numpy.percentile", "torch.max.detach().cpu().numpy", "torch.max.detach().cpu().numpy", "torch.max.detach().cpu().numpy", "torch.max.detach().cpu().numpy", "torch.max.detach().cpu", "torch.max.detach().cpu", "torch.max.detach().cpu", "torch.max.detach().cpu", "torch.max.detach", "torch.max.detach", "torch.max.detach", "torch.max.detach"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "# max_val = torch.max(input)", "\n", "# min_val = torch.min(input)", "\n", "\n", "        ", "if", "self", ".", "k_bits", "==", "32", ":", "\n", "            ", "return", "input", "\n", "\n", "", "max_val", "=", "torch", ".", "tensor", "(", "np", ".", "percentile", "(", "input", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "99", ")", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "min_val", "=", "torch", ".", "tensor", "(", "np", ".", "percentile", "(", "input", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "1", ")", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "input", "=", "torch", ".", "max", "(", "torch", ".", "min", "(", "input", ",", "max_val", ")", ",", "min_val", ")", "\n", "\n", "n", "=", "2", "**", "self", ".", "k_bits", "-", "1", "\n", "scale_factor", "=", "n", "/", "(", "max_val", "-", "min_val", ")", "\n", "zero_point", "=", "scale_factor", "*", "min_val", "\n", "zero_point", "=", "self", ".", "round", "(", "zero_point", ")", "\n", "zero_point", "+=", "2", "**", "(", "self", ".", "k_bits", "-", "1", ")", "\n", "\n", "weight", "=", "scale_factor", "*", "input", "-", "zero_point", "\n", "q_weight", "=", "self", ".", "round", "(", "weight", ")", "\n", "q_weight", "=", "(", "q_weight", "+", "zero_point", ")", "/", "scale_factor", "\n", "\n", "return", "q_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_activation.__init__": [[111, 115], ["torch.Module.__init__", "quant_ops.TorchRound"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.TorchRound"], ["def", "__init__", "(", "self", ",", "k_bits", "=", "8", ")", ":", "\n", "        ", "super", "(", "quant_activation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k_bits", "=", "k_bits", "\n", "self", ".", "round", "=", "TorchRound", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_activation.forward": [[116, 132], ["input.detach", "quant_ops.quant_activation.round", "quant_ops.quant_activation.round", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "act", "=", "input", ".", "detach", "(", ")", "\n", "max_val", ",", "min_val", "=", "torch", ".", "max", "(", "act", ")", ",", "torch", ".", "min", "(", "act", ")", "\n", "\n", "n", "=", "2", "**", "self", ".", "k_bits", "-", "1", "\n", "scale_factor", "=", "n", "/", "(", "max_val", "-", "min_val", ")", "\n", "zero_point", "=", "scale_factor", "*", "min_val", "\n", "\n", "zero_point", "=", "self", ".", "round", "(", "zero_point", ")", "\n", "zero_point", "+=", "2", "**", "(", "self", ".", "k_bits", "-", "1", ")", "\n", "\n", "act", "=", "scale_factor", "*", "act", "-", "zero_point", "\n", "q_act", "=", "self", ".", "round", "(", "act", ")", "\n", "q_act", "=", "(", "q_act", "+", "zero_point", ")", "/", "scale_factor", "\n", "return", "q_act", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act.__init__": [[137, 152], ["torch.Module.__init__", "quant_ops.TorchRound", "torch.Parameter", "torch.Parameter", "quant_ops.DDTB_quant_act.register_buffer", "quant_ops.DDTB_quant_act.reset_parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.TorchRound", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym99.reset_parameter"], ["def", "__init__", "(", "self", ",", "k_bits", ",", "ema_epoch", "=", "1", ",", "decay", "=", "0.9997", ")", ":", "\n", "        ", "super", "(", "DDTB_quant_act", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "decay", "=", "decay", "\n", "self", ".", "k_bits", "=", "k_bits", "\n", "self", ".", "qmax", "=", "2.", "**", "(", "self", ".", "k_bits", "-", "1", ")", "-", "1.", "\n", "self", ".", "round", "=", "TorchRound", "(", ")", "\n", "self", ".", "alpha", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ")", ")", "\n", "self", ".", "ema_epoch", "=", "ema_epoch", "\n", "self", ".", "epoch", "=", "1", "\n", "self", ".", "iteration", "=", "0", "\n", "# self.max_val = 0", "\n", "self", ".", "ema_scale", "=", "1", "\n", "self", ".", "register_buffer", "(", "'max_val'", ",", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "self", ".", "error", "=", "0", "\n", "self", ".", "reset_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act.reset_parameter": [[153, 155], ["torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "reset_parameter", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "alpha", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act._ema": [[156, 165], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "_ema", "(", "self", ",", "x", ")", ":", "\n", "        ", "max_val", "=", "torch", ".", "mean", "(", "torch", ".", "max", "(", "torch", ".", "max", "(", "torch", ".", "max", "(", "torch", ".", "abs", "(", "x", ")", ",", "dim", "=", "1", ")", "[", "0", "]", ",", "dim", "=", "1", ")", "[", "0", "]", ",", "dim", "=", "1", ")", "[", "0", "]", ")", "\n", "# max_val = torch.tensor(np.percentile(x.detach().cpu().numpy(), 99)).cuda().float()", "\n", "if", "self", ".", "epoch", "==", "1", ":", "\n", "# print('aa')", "\n", "            ", "self", ".", "max_val", "=", "max_val", "\n", "", "else", ":", "\n", "# print('xx')", "\n", "            ", "self", ".", "max_val", "=", "(", "1.0", "-", "self", ".", "decay", ")", "*", "max_val", "+", "self", ".", "decay", "*", "self", ".", "max_val", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act.forward": [[166, 191], ["quant_ops.DDTB_quant_act.round", "torch.mean().item", "torch.mean().item", "torch.mean().item", "torch.mean().item", "torch.max", "torch.max", "torch.max", "torch.max", "quant_ops.DDTB_quant_act._ema", "quant_ops.DDTB_quant_act.max_val.unsqueeze", "print", "torch.min", "torch.min", "torch.min", "torch.min", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "quant_ops.DDTB_quant_act._ema", "quant_ops.DDTB_quant_act.max_val.unsqueeze", "quant_ops.DDTB_quant_act.detach", "x.detach"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act_asym_dynamic_quantized._ema", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act_asym_dynamic_quantized._ema"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "if", "self", ".", "k_bits", "==", "32", ":", "\n", "            ", "if", "self", ".", "alpha", "==", "10", ":", "\n", "                ", "self", ".", "_ema", "(", "x", ")", "\n", "self", ".", "alpha", ".", "data", "=", "self", ".", "max_val", ".", "unsqueeze", "(", "0", ")", "\n", "print", "(", "self", ".", "alpha", ")", "\n", "", "return", "x", "\n", "\n", "", "if", "self", ".", "epoch", ">", "self", ".", "ema_epoch", "or", "not", "self", ".", "training", ":", "\n", "            ", "act", "=", "torch", ".", "max", "(", "torch", ".", "min", "(", "x", ",", "self", ".", "alpha", ")", ",", "-", "self", ".", "alpha", ")", "\n", "\n", "", "elif", "self", ".", "epoch", "<=", "self", ".", "ema_epoch", "and", "self", ".", "training", ":", "\n", "            ", "act", "=", "x", "\n", "if", "self", ".", "alpha", "==", "10", ":", "\n", "                ", "self", ".", "_ema", "(", "x", ")", "\n", "self", ".", "alpha", ".", "data", "=", "self", ".", "max_val", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "", "", "act", "=", "act", "*", "self", ".", "qmax", "/", "self", ".", "alpha", "\n", "q_act", "=", "self", ".", "round", "(", "act", ")", "\n", "q_act", "=", "q_act", "*", "self", ".", "alpha", "/", "self", ".", "qmax", "\n", "self", ".", "error", "=", "torch", ".", "mean", "(", "(", "q_act", ".", "detach", "(", ")", "-", "x", ".", "detach", "(", ")", ")", "**", "2", ")", ".", "item", "(", ")", "\n", "\n", "\n", "return", "q_act", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act_asym_dynamic_quantized.__init__": [[198, 233], ["torch.Module.__init__", "quant_ops.TorchRound", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.register_buffer", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.register_buffer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sigmoid", "torch.Sigmoid", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.reset_parameter", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.register_buffer", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "quant_ops.quant_activation", "quant_ops.QuantConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "quant_ops.quant_activation", "quant_ops.QuantConv2d", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.TorchRound", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym99.reset_parameter"], ["def", "__init__", "(", "self", ",", "k_bits", ",", "ema_epoch", "=", "1", ",", "decay", "=", "0.9997", ",", "inplanes", "=", "64", ",", "M", "=", "0", ")", ":", "\n", "        ", "super", "(", "DDTB_quant_act_asym_dynamic_quantized", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "decay", "=", "decay", "\n", "self", ".", "k_bits", "=", "k_bits", "\n", "self", ".", "qmax", "=", "2.", "**", "(", "self", ".", "k_bits", ")", "-", "1.", "\n", "self", ".", "round", "=", "TorchRound", "(", ")", "\n", "self", ".", "alpha_upper", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ")", ")", "\n", "self", ".", "alpha_lower", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ")", ")", "\n", "self", ".", "ema_epoch", "=", "ema_epoch", "\n", "self", ".", "epoch", "=", "1", "\n", "self", ".", "iteration", "=", "0", "\n", "self", ".", "ema_scale", "=", "1", "\n", "self", ".", "register_buffer", "(", "'max_val'", ",", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "self", ".", "register_buffer", "(", "'min_val'", ",", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "self", ".", "M", "=", "M", "\n", "\n", "self", ".", "first_stage_epoch", "=", "None", "\n", "self", ".", "test_only", "=", "False", "\n", "\n", "self", ".", "gate_bit", "=", "2", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "atten_c", "=", "nn", ".", "Sequential", "(", "\n", "quant_activation", "(", "k_bits", "=", "self", ".", "gate_bit", ")", ",", "\n", "QuantConv2d", "(", "inplanes", ",", "32", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ",", "k_bits", "=", "self", ".", "gate_bit", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "quant_activation", "(", "k_bits", "=", "self", ".", "gate_bit", ")", ",", "\n", "QuantConv2d", "(", "32", ",", "2", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ",", "k_bits", "=", "self", ".", "gate_bit", ")", ",", "\n", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "reset_parameter", "(", ")", "\n", "\n", "self", ".", "fp_max_list", "=", "[", "]", "\n", "self", ".", "fp_min_list", "=", "[", "]", "\n", "self", ".", "register_buffer", "(", "'is_dynamic'", ",", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act_asym_dynamic_quantized.reset_parameter": [[234, 237], ["torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "reset_parameter", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "alpha_upper", ",", "10", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "alpha_lower", ",", "-", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act_asym_dynamic_quantized._ema": [[238, 258], ["torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "torch.tensor().cuda().float", "print", "IPython.embed", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "numpy.percentile", "numpy.percentile", "x.detach().cpu().numpy", "x.detach().cpu().numpy", "x.detach().cpu", "x.detach().cpu", "x.detach", "x.detach"], "methods", ["None"], ["", "def", "_ema", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "max_val", "=", "torch", ".", "tensor", "(", "np", ".", "percentile", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "self", ".", "M", ")", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "min_val", "=", "torch", ".", "tensor", "(", "np", ".", "percentile", "(", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "100", "-", "self", ".", "M", ")", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "\n", "if", "max_val", "==", "min_val", ":", "\n", "            ", "print", "(", "'max_val == min_val'", ",", "max_val", ",", "min_val", ")", "\n", "import", "IPython", "\n", "IPython", ".", "embed", "(", ")", "\n", "\n", "\n", "# if self.epoch == 1:", "\n", "", "if", "True", ":", "\n", "# print('aa')", "\n", "            ", "self", ".", "max_val", "=", "max_val", "\n", "self", ".", "min_val", "=", "min_val", "\n", "", "else", ":", "\n", "# print('xx')", "\n", "            ", "self", ".", "max_val", "=", "(", "1.0", "-", "self", ".", "decay", ")", "*", "max_val", "+", "self", ".", "decay", "*", "self", ".", "max_val", "\n", "self", ".", "min_val", "=", "(", "1.0", "-", "self", ".", "decay", ")", "*", "min_val", "+", "self", ".", "decay", "*", "self", ".", "min_val", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act_asym_dynamic_quantized.forward": [[259, 375], ["quant_ops.DDTB_quant_act_asym_dynamic_quantized.fp_max_list.append", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.fp_min_list.append", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.fp_max_list.append", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.fp_min_list.append", "torch.max", "torch.max", "torch.max", "torch.max", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.round", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.round", "torch.any", "torch.any", "torch.any", "torch.any", "torch.max().detach().cpu().numpy", "torch.max().detach().cpu().numpy", "torch.max().detach().cpu().numpy", "torch.max().detach().cpu().numpy", "torch.min().detach().cpu().numpy", "torch.min().detach().cpu().numpy", "torch.min().detach().cpu().numpy", "torch.min().detach().cpu().numpy", "print", "quant_ops.DDTB_quant_act_asym_dynamic_quantized._ema", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.max_val.unsqueeze", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.min_val.unsqueeze", "torch.max().detach().cpu().numpy", "torch.max().detach().cpu().numpy", "torch.max().detach().cpu().numpy", "torch.max().detach().cpu().numpy", "torch.min().detach().cpu().numpy", "torch.min().detach().cpu().numpy", "torch.min().detach().cpu().numpy", "torch.min().detach().cpu().numpy", "torch.min", "torch.min", "torch.min", "torch.min", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "print", "IPython.embed", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.avg_pool", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.atten_c", "torch.max", "torch.max", "torch.max", "torch.max", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.round", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.round", "torch.any", "torch.any", "torch.any", "torch.any", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.avg_pool", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.atten_c", "torch.max", "torch.max", "torch.max", "torch.max", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.round", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.round", "torch.any", "torch.any", "torch.any", "torch.any", "pirnt", "print", "quant_ops.DDTB_quant_act_asym_dynamic_quantized._ema", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.max_val.unsqueeze", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.min_val.unsqueeze", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.round", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.round", "x.detach", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.sigmoid", "torch.min", "torch.min", "torch.min", "torch.min", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "print", "IPython.embed", "x.detach", "quant_ops.DDTB_quant_act_asym_dynamic_quantized.sigmoid", "torch.min", "torch.min", "torch.min", "torch.min", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "print", "IPython.embed", "torch.max().detach().cpu", "torch.max().detach().cpu", "torch.max().detach().cpu", "torch.max().detach().cpu", "torch.min().detach().cpu", "torch.min().detach().cpu", "torch.min().detach().cpu", "torch.min().detach().cpu", "torch.max().detach().cpu", "torch.max().detach().cpu", "torch.max().detach().cpu", "torch.max().detach().cpu", "torch.min().detach().cpu", "torch.min().detach().cpu", "torch.min().detach().cpu", "torch.min().detach().cpu", "torch.max().detach", "torch.max().detach", "torch.max().detach", "torch.max().detach", "torch.min().detach", "torch.min().detach", "torch.min().detach", "torch.min().detach", "torch.max().detach", "torch.max().detach", "torch.max().detach", "torch.max().detach", "torch.min().detach", "torch.min().detach", "torch.min().detach", "torch.min().detach", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act_asym_dynamic_quantized._ema", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.DDTB_quant_act_asym_dynamic_quantized._ema"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "if", "self", ".", "k_bits", "==", "32", ":", "\n", "            ", "self", ".", "fp_max_list", ".", "append", "(", "torch", ".", "max", "(", "x", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "self", ".", "fp_min_list", ".", "append", "(", "torch", ".", "min", "(", "x", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "return", "x", "\n", "", "if", "self", ".", "k_bits", "==", "2", ":", "\n", "# only calibration once", "\n", "            ", "if", "self", ".", "training", "and", "self", ".", "alpha_upper", "==", "10", ":", "\n", "                ", "print", "(", "'clibration!'", ")", "\n", "self", ".", "_ema", "(", "x", ")", "\n", "self", ".", "alpha_upper", ".", "data", "=", "self", ".", "max_val", ".", "unsqueeze", "(", "0", ")", "\n", "self", ".", "alpha_lower", ".", "data", "=", "self", ".", "min_val", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "", "self", ".", "fp_max_list", ".", "append", "(", "torch", ".", "max", "(", "x", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "self", ".", "fp_min_list", ".", "append", "(", "torch", ".", "min", "(", "x", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "\n", "", "if", "not", "self", ".", "is_dynamic", ":", "\n", "            ", "act", "=", "torch", ".", "max", "(", "torch", ".", "min", "(", "x", ",", "self", ".", "alpha_upper", ")", ",", "self", ".", "alpha_lower", ")", "\n", "n", "=", "2", "**", "self", ".", "k_bits", "-", "1", "\n", "\n", "scale_factor", "=", "n", "/", "(", "self", ".", "alpha_upper", "-", "self", ".", "alpha_lower", ")", "\n", "zero_point", "=", "scale_factor", "*", "self", ".", "alpha_lower", "\n", "zero_point", "=", "self", ".", "round", "(", "zero_point", ")", "\n", "zero_point", "+=", "2", "**", "(", "self", ".", "k_bits", "-", "1", ")", "\n", "\n", "act", "=", "scale_factor", "*", "act", "-", "zero_point", "\n", "q_act", "=", "self", ".", "round", "(", "act", ")", "\n", "q_act", "=", "(", "q_act", "+", "zero_point", ")", "/", "scale_factor", "\n", "\n", "if", "torch", ".", "any", "(", "torch", ".", "isnan", "(", "q_act", ")", ")", ":", "\n", "                ", "print", "(", "'nan !'", ")", "\n", "import", "IPython", "\n", "IPython", ".", "embed", "(", ")", "\n", "\n", "", "return", "q_act", "\n", "\n", "", "if", "self", ".", "epoch", ">", "self", ".", "ema_epoch", "or", "not", "self", ".", "training", ":", "\n", "\n", "            ", "if", "self", ".", "epoch", "<", "self", ".", "first_stage_epoch", "and", "not", "self", ".", "test_only", ":", "\n", "                ", "context", "=", "self", ".", "avg_pool", "(", "x", ".", "detach", "(", ")", ")", "# [N, C, 1, 1]", "\n", "# transform", "\n", "c_in", "=", "self", ".", "atten_c", "(", "context", ")", "# [N, 1, 1, 1]", "\n", "# scale", "\n", "scale", "=", "self", ".", "sigmoid", "(", "c_in", ")", "*", "2", "\n", "\n", "self", ".", "sau", "=", "scale", "[", ":", ",", "0", ",", ":", ",", ":", "]", "\n", "self", ".", "sal", "=", "scale", "[", ":", ",", "1", ",", ":", ",", ":", "]", "\n", "\n", "act", "=", "torch", ".", "max", "(", "torch", ".", "min", "(", "x", ",", "self", ".", "alpha_upper", ")", ",", "self", ".", "alpha_lower", ")", "\n", "n", "=", "2", "**", "self", ".", "k_bits", "-", "1", "\n", "\n", "scale_factor", "=", "n", "/", "(", "self", ".", "alpha_upper", "-", "self", ".", "alpha_lower", ")", "\n", "zero_point", "=", "scale_factor", "*", "self", ".", "alpha_lower", "\n", "zero_point", "=", "self", ".", "round", "(", "zero_point", ")", "\n", "zero_point", "+=", "2", "**", "(", "self", ".", "k_bits", "-", "1", ")", "\n", "\n", "act", "=", "scale_factor", "*", "act", "-", "zero_point", "\n", "q_act", "=", "self", ".", "round", "(", "act", ")", "\n", "q_act", "=", "(", "q_act", "+", "zero_point", ")", "/", "scale_factor", "\n", "\n", "if", "torch", ".", "any", "(", "torch", ".", "isnan", "(", "q_act", ")", ")", ":", "\n", "                    ", "print", "(", "'nan !'", ")", "\n", "import", "IPython", "\n", "IPython", ".", "embed", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "                ", "context", "=", "self", ".", "avg_pool", "(", "x", ".", "detach", "(", ")", ")", "# [N, C, 1, 1]", "\n", "# transform", "\n", "c_in", "=", "self", ".", "atten_c", "(", "context", ")", "# [N, 1, 1, 1]", "\n", "# scale", "\n", "scale", "=", "self", ".", "sigmoid", "(", "c_in", ")", "*", "2", "\n", "\n", "self", ".", "sau", "=", "scale", "[", ":", ",", "0", ",", ":", ",", ":", "]", "\n", "self", ".", "sal", "=", "scale", "[", ":", ",", "1", ",", ":", ",", ":", "]", "\n", "\n", "act", "=", "torch", ".", "max", "(", "torch", ".", "min", "(", "x", ",", "(", "scale", "[", ":", ",", "0", ",", ":", ",", ":", "]", "*", "self", ".", "alpha_upper", ")", ".", "unsqueeze", "(", "dim", "=", "1", ")", ")", ",", "\n", "(", "scale", "[", ":", ",", "1", ",", ":", ",", ":", "]", "*", "self", ".", "alpha_lower", ")", ".", "unsqueeze", "(", "dim", "=", "1", ")", ")", "\n", "n", "=", "2", "**", "self", ".", "k_bits", "-", "1", "\n", "\n", "scale_factor", "=", "n", "/", "(", "\n", "scale", "[", ":", ",", "0", ",", ":", ",", ":", "]", "*", "self", ".", "alpha_upper", "-", "scale", "[", ":", ",", "1", ",", ":", ",", ":", "]", "*", "self", ".", "alpha_lower", ")", ".", "unsqueeze", "(", "\n", "dim", "=", "1", ")", "\n", "zero_point", "=", "scale_factor", "*", "(", "scale", "[", ":", ",", "1", ",", ":", ",", ":", "]", "*", "self", ".", "alpha_lower", ")", ".", "unsqueeze", "(", "dim", "=", "1", ")", "\n", "zero_point", "=", "self", ".", "round", "(", "zero_point", ")", "\n", "zero_point", "+=", "2", "**", "(", "self", ".", "k_bits", "-", "1", ")", "\n", "\n", "act", "=", "scale_factor", "*", "act", "-", "zero_point", "\n", "q_act", "=", "self", ".", "round", "(", "act", ")", "\n", "q_act", "=", "(", "q_act", "+", "zero_point", ")", "/", "scale_factor", "\n", "\n", "if", "torch", ".", "any", "(", "torch", ".", "isnan", "(", "q_act", ")", ")", ":", "\n", "                    ", "print", "(", "'nan !'", ")", "\n", "import", "IPython", "\n", "IPython", ".", "embed", "(", ")", "\n", "\n", "", "", "", "elif", "self", ".", "epoch", "<=", "self", ".", "ema_epoch", "and", "self", ".", "training", ":", "\n", "            ", "pirnt", "(", "'xxxxxx'", ")", "\n", "print", "(", "'xxxxxx'", ")", "\n", "act", "=", "x", "\n", "self", ".", "_ema", "(", "x", ")", "\n", "self", ".", "alpha_upper", ".", "data", "=", "self", ".", "max_val", ".", "unsqueeze", "(", "0", ")", "\n", "self", ".", "alpha_lower", ".", "data", "=", "self", ".", "min_val", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "n", "=", "2", "**", "self", ".", "k_bits", "-", "1", "\n", "scale_factor", "=", "n", "/", "(", "self", ".", "alpha_upper", "-", "self", ".", "alpha_lower", ")", "\n", "zero_point", "=", "scale_factor", "*", "self", ".", "alpha_lower", "\n", "zero_point", "=", "self", ".", "round", "(", "zero_point", ")", "\n", "zero_point", "+=", "2", "**", "(", "self", ".", "k_bits", "-", "1", ")", "\n", "\n", "act", "=", "scale_factor", "*", "act", "-", "zero_point", "\n", "q_act", "=", "self", ".", "round", "(", "act", ")", "\n", "q_act", "=", "(", "q_act", "+", "zero_point", ")", "/", "scale_factor", "\n", "\n", "", "return", "q_act", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym.__init__": [[382, 401], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "_pair", "quant_ops.quant_weight_asym", "quant_ops.QuantConv2d_asym.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Parameter", "torch.Parameter", "quant_ops.QuantConv2d_asym.register_parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym99.reset_parameters"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "k_bits", "=", "32", ",", ")", ":", "\n", "        ", "super", "(", "QuantConv2d_asym", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ",", "in_channels", ",", "kernel_size", ",", "kernel_size", ")", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "kernel_size", "=", "_pair", "(", "kernel_size", ")", "\n", "self", ".", "bias_flag", "=", "bias", "\n", "if", "self", ".", "bias_flag", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "", "self", ".", "k_bits", "=", "k_bits", "\n", "self", ".", "quant_weight_asym", "=", "quant_weight_asym", "(", "k_bits", "=", "k_bits", ")", "\n", "self", ".", "output", "=", "None", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym.reset_parameters": [[402, 410], ["quant_ops.QuantConv2d_asym.weight.data.uniform_", "math.sqrt", "quant_ops.QuantConv2d_asym.bias.data.uniform_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "n", "=", "self", ".", "in_channels", "\n", "for", "k", "in", "self", ".", "kernel_size", ":", "\n", "            ", "n", "*=", "k", "\n", "", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "n", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym.reset_parameter": [[411, 416], ["quant_ops.QuantConv2d_asym.weight.data.uniform_", "math.sqrt", "torch.init.constant_", "torch.init.constant_", "quant_ops.QuantConv2d_asym.weight.size"], "methods", ["None"], ["", "", "def", "reset_parameter", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "self", ".", "weight", ".", "size", "(", "0", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias_flag", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "bias", ",", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym.forward": [[417, 419], ["torch.functional.conv2d", "torch.functional.conv2d", "quant_ops.QuantConv2d_asym.quant_weight_asym"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "order", "=", "None", ")", ":", "\n", "        ", "return", "nn", ".", "functional", ".", "conv2d", "(", "input", ",", "self", ".", "quant_weight_asym", "(", "self", ".", "weight", ")", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d.__init__": [[426, 445], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "_pair", "quant_ops.quant_weight", "quant_ops.QuantConv2d.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Parameter", "torch.Parameter", "quant_ops.QuantConv2d.register_parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym99.reset_parameters"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "k_bits", "=", "32", ",", ")", ":", "\n", "        ", "super", "(", "QuantConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ",", "in_channels", ",", "kernel_size", ",", "kernel_size", ")", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "kernel_size", "=", "_pair", "(", "kernel_size", ")", "\n", "self", ".", "bias_flag", "=", "bias", "\n", "if", "self", ".", "bias_flag", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "", "self", ".", "k_bits", "=", "k_bits", "\n", "self", ".", "quant_weight", "=", "quant_weight", "(", "k_bits", "=", "k_bits", ")", "\n", "self", ".", "output", "=", "None", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d.reset_parameters": [[446, 454], ["quant_ops.QuantConv2d.weight.data.uniform_", "math.sqrt", "quant_ops.QuantConv2d.bias.data.uniform_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "n", "=", "self", ".", "in_channels", "\n", "for", "k", "in", "self", ".", "kernel_size", ":", "\n", "            ", "n", "*=", "k", "\n", "", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "n", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d.reset_parameter": [[455, 460], ["quant_ops.QuantConv2d.weight.data.uniform_", "math.sqrt", "torch.init.constant_", "torch.init.constant_", "quant_ops.QuantConv2d.weight.size"], "methods", ["None"], ["", "", "def", "reset_parameter", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "self", ".", "weight", ".", "size", "(", "0", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias_flag", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "bias", ",", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d.forward": [[461, 463], ["torch.functional.conv2d", "torch.functional.conv2d", "quant_ops.QuantConv2d.quant_weight"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "order", "=", "None", ")", ":", "\n", "        ", "return", "nn", ".", "functional", ".", "conv2d", "(", "input", ",", "self", ".", "quant_weight", "(", "self", ".", "weight", ")", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_weight_asym.__init__": [[469, 474], ["torch.Module.__init__", "quant_ops.TorchRound"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.TorchRound"], ["def", "__init__", "(", "self", ",", "k_bits", ")", ":", "\n", "        ", "super", "(", "quant_weight_asym", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k_bits", "=", "k_bits", "\n", "self", ".", "qmax", "=", "2.", "**", "(", "k_bits", "-", "1", ")", "-", "1.", "\n", "self", ".", "round", "=", "TorchRound", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_weight_asym.forward": [[475, 496], ["torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min", "quant_ops.quant_weight_asym.round", "quant_ops.quant_weight_asym.round", "input.detach", "input.detach"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "# max_val = torch.max(input)", "\n", "# min_val = torch.min(input)", "\n", "\n", "        ", "if", "self", ".", "k_bits", "==", "32", ":", "\n", "            ", "return", "input", "\n", "\n", "", "max_val", "=", "torch", ".", "max", "(", "input", ".", "detach", "(", ")", ")", "\n", "min_val", "=", "torch", ".", "min", "(", "input", ".", "detach", "(", ")", ")", "\n", "\n", "n", "=", "2", "**", "self", ".", "k_bits", "-", "1", "\n", "scale_factor", "=", "n", "/", "(", "max_val", "-", "min_val", ")", "\n", "zero_point", "=", "scale_factor", "*", "min_val", "\n", "zero_point", "=", "self", ".", "round", "(", "zero_point", ")", "\n", "zero_point", "+=", "2", "**", "(", "self", ".", "k_bits", "-", "1", ")", "\n", "\n", "weight", "=", "scale_factor", "*", "input", "-", "zero_point", "\n", "q_weight", "=", "self", ".", "round", "(", "weight", ")", "\n", "q_weight", "=", "(", "q_weight", "+", "zero_point", ")", "/", "scale_factor", "\n", "\n", "return", "q_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym99.__init__": [[502, 521], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "_pair", "quant_ops.quant_weight_asym99", "quant_ops.QuantConv2d_asym99.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Parameter", "torch.Parameter", "quant_ops.QuantConv2d_asym99.register_parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym99.reset_parameters"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "k_bits", "=", "32", ",", ")", ":", "\n", "        ", "super", "(", "QuantConv2d_asym99", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ",", "in_channels", ",", "kernel_size", ",", "kernel_size", ")", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "kernel_size", "=", "_pair", "(", "kernel_size", ")", "\n", "self", ".", "bias_flag", "=", "bias", "\n", "if", "self", ".", "bias_flag", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "", "self", ".", "k_bits", "=", "k_bits", "\n", "self", ".", "quant_weight_asym", "=", "quant_weight_asym99", "(", "k_bits", "=", "k_bits", ")", "\n", "self", ".", "output", "=", "None", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym99.reset_parameters": [[522, 530], ["quant_ops.QuantConv2d_asym99.weight.data.uniform_", "math.sqrt", "quant_ops.QuantConv2d_asym99.bias.data.uniform_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "n", "=", "self", ".", "in_channels", "\n", "for", "k", "in", "self", ".", "kernel_size", ":", "\n", "            ", "n", "*=", "k", "\n", "", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "n", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym99.reset_parameter": [[531, 536], ["quant_ops.QuantConv2d_asym99.weight.data.uniform_", "math.sqrt", "torch.init.constant_", "torch.init.constant_", "quant_ops.QuantConv2d_asym99.weight.size"], "methods", ["None"], ["", "", "def", "reset_parameter", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "self", ".", "weight", ".", "size", "(", "0", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias_flag", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "bias", ",", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.QuantConv2d_asym99.forward": [[537, 539], ["torch.functional.conv2d", "torch.functional.conv2d", "quant_ops.QuantConv2d_asym99.quant_weight_asym"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "order", "=", "None", ")", ":", "\n", "        ", "return", "nn", ".", "functional", ".", "conv2d", "(", "input", ",", "self", ".", "quant_weight_asym", "(", "self", ".", "weight", ")", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops._ntuple": [[19, 25], ["isinstance", "tuple", "itertools.repeat"], "function", ["None"], ["def", "_ntuple", "(", "n", ")", ":", "\n", "    ", "def", "parse", "(", "x", ")", ":", "\n", "        ", "if", "isinstance", "(", "x", ",", "collections", ".", "Iterable", ")", ":", "\n", "            ", "return", "x", "\n", "", "return", "tuple", "(", "repeat", "(", "x", ",", "n", ")", ")", "\n", "", "return", "parse", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_max": [[28, 33], ["torch.abs().max", "torch.abs().max", "torch.abs", "torch.abs", "tensor.detach"], "function", ["None"], ["def", "quant_max", "(", "tensor", ")", ":", "\n", "    ", "\"\"\"\n    Returns the max value for symmetric quantization.\n    \"\"\"", "\n", "return", "torch", ".", "abs", "(", "tensor", ".", "detach", "(", ")", ")", ".", "max", "(", ")", "+", "1e-8", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.TorchRound": [[34, 49], ["identity_quant", "torch.round", "torch.round"], "function", ["None"], ["", "def", "TorchRound", "(", ")", ":", "\n", "    ", "\"\"\"\n    Apply STE to clamp function.\n    \"\"\"", "\n", "class", "identity_quant", "(", "torch", ".", "autograd", ".", "Function", ")", ":", "\n", "        ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ")", ":", "\n", "            ", "out", "=", "torch", ".", "round", "(", "input", ")", "\n", "return", "out", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "            ", "return", "grad_output", "\n", "\n", "", "", "return", "identity_quant", "(", ")", ".", "apply", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.conv3x3": [[543, 545], ["torch.Conv2d"], "function", ["None"], ["", "", "def", "conv3x3", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_conv3x3_asym": [[546, 548], ["quant_ops.QuantConv2d_asym"], "function", ["None"], ["", "def", "quant_conv3x3_asym", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "k_bits", "=", "32", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "QuantConv2d_asym", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "k_bits", "=", "k_bits", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_conv3x3_asym99": [[549, 551], ["quant_ops.QuantConv2d_asym99"], "function", ["None"], ["", "def", "quant_conv3x3_asym99", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "k_bits", "=", "32", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "QuantConv2d_asym99", "(", "in_channels", "=", "in_channels", ",", "out_channels", "=", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "k_bits", "=", "k_bits", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.__init__": [[12, 28], ["utility.make_optimizer", "trainer.Trainer.optimizer.load", "len"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.make_optimizer", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "loader", ",", "my_model", ",", "my_loss", ",", "ckp", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n", "self", ".", "ckp", "=", "ckp", "\n", "self", ".", "loader_train", "=", "loader", ".", "loader_train", "\n", "self", ".", "loader_test", "=", "loader", ".", "loader_test", "\n", "self", ".", "model", "=", "my_model", "\n", "self", ".", "loss", "=", "my_loss", "\n", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "args", ",", "self", ".", "model", ")", "\n", "self", ".", "save_name_list", "=", "[", "'comic'", ",", "'barbara'", ",", "'253027'", ",", "'baboon'", ",", "'img005'", ",", "'img010'", ",", "'img062'", ",", "'img016'", "]", "\n", "\n", "if", "self", ".", "args", ".", "load", "!=", "''", ":", "\n", "            ", "self", ".", "optimizer", ".", "load", "(", "ckp", ".", "dir", ",", "epoch", "=", "len", "(", "ckp", ".", "log", ")", ")", "\n", "\n", "", "self", ".", "error_last", "=", "1e8", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.train": [[29, 73], ["trainer.Trainer.loss.step", "trainer.Trainer.optimizer.get_lr", "trainer.Trainer.ckp.write_log", "trainer.Trainer.loss.start_log", "trainer.Trainer.model.train", "enumerate", "trainer.Trainer.loss.end_log", "trainer.Trainer.optimizer.schedule", "trainer.Trainer.optimizer.get_last_epoch", "utility.timer", "utility.timer", "trainer.Trainer.prepare", "timer_data.hold", "timer_model.tic", "trainer.Trainer.optimizer.zero_grad", "trainer.Trainer.model", "trainer.Trainer.loss", "trainer.Trainer.backward", "trainer.Trainer.optimizer.step", "timer_model.hold", "timer_data.tic", "len", "decimal.Decimal", "torch.clip_grad_value_", "torch.clip_grad_value_", "trainer.Trainer.ckp.write_log", "trainer.Trainer.model.parameters", "len", "trainer.Trainer.loss.display_loss", "timer_model.release", "timer_data.release"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.start_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.train", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.end_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.hold", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.hold", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.tic", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.display_loss", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.release", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.release"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "loss", ".", "step", "(", ")", "\n", "epoch", "=", "self", ".", "optimizer", ".", "get_last_epoch", "(", ")", "+", "1", "\n", "lr", "=", "self", ".", "optimizer", ".", "get_lr", "(", ")", "\n", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[Epoch {}]\\tLearning rate: {:.2e}'", ".", "format", "(", "epoch", ",", "Decimal", "(", "lr", ")", ")", "\n", ")", "\n", "self", ".", "loss", ".", "start_log", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "timer_data", ",", "timer_model", "=", "utility", ".", "timer", "(", ")", ",", "utility", ".", "timer", "(", ")", "\n", "for", "batch", ",", "(", "lr", ",", "hr", ",", "_", ",", "idx_scale", ")", "in", "enumerate", "(", "self", ".", "loader_train", ")", ":", "\n", "            ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "timer_data", ".", "hold", "(", ")", "\n", "timer_model", ".", "tic", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "sr", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "\n", "loss", "=", "self", ".", "loss", "(", "sr", ",", "hr", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "if", "self", ".", "args", ".", "gclip", ">", "0", ":", "\n", "                ", "utils", ".", "clip_grad_value_", "(", "\n", "self", ".", "model", ".", "parameters", "(", ")", ",", "\n", "self", ".", "args", ".", "gclip", "\n", ")", "\n", "", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "timer_model", ".", "hold", "(", ")", "\n", "\n", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                ", "self", ".", "ckp", ".", "write_log", "(", "'[{}/{}]\\t{}\\t{:.1f}+{:.1f}s'", ".", "format", "(", "\n", "(", "batch", "+", "1", ")", "*", "self", ".", "args", ".", "batch_size", ",", "\n", "len", "(", "self", ".", "loader_train", ".", "dataset", ")", ",", "\n", "self", ".", "loss", ".", "display_loss", "(", "batch", ")", ",", "\n", "timer_model", ".", "release", "(", ")", ",", "\n", "timer_data", ".", "release", "(", ")", ")", ")", "\n", "\n", "", "timer_data", ".", "tic", "(", ")", "\n", "\n", "", "self", ".", "loss", ".", "end_log", "(", "len", "(", "self", ".", "loader_train", ")", ")", "\n", "self", ".", "error_last", "=", "self", ".", "loss", ".", "log", "[", "-", "1", ",", "-", "1", "]", "\n", "self", ".", "optimizer", ".", "schedule", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.test": [[74, 140], ["torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "trainer.Trainer.optimizer.get_last_epoch", "trainer.Trainer.ckp.write_log", "trainer.Trainer.ckp.add_log", "trainer.Trainer.model.eval", "utility.timer", "enumerate", "trainer.Trainer.ckp.write_log", "trainer.Trainer.ckp.write_log", "trainer.Trainer.ckp.write_log", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "trainer.Trainer.ckp.begin_background", "enumerate", "trainer.Trainer.ckp.end_background", "trainer.Trainer.ckp.save", "len", "len", "d.dataset.set_scale", "tqdm.tqdm.tqdm", "len", "trainer.Trainer.ckp.log.max", "trainer.Trainer.ckp.write_log", "utility.timer.toc", "utility.timer.toc", "trainer.Trainer.prepare", "trainer.Trainer.model", "utility.quantize", "utility.calc_psnr", "len", "save_list.extend", "trainer.Trainer.ckp.save_results", "trainer.Trainer.ckp.write_log", "sum", "len"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.add_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.begin_background", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.end_background", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.MyConcatDataset.set_scale", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.toc", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.toc", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.quantize", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.calc_psnr", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.save_results", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.checkpoint.write_log"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "\n", "epoch", "=", "self", ".", "optimizer", ".", "get_last_epoch", "(", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "'\\nEvaluation:'", ")", "\n", "self", ".", "ckp", ".", "add_log", "(", "\n", "torch", ".", "zeros", "(", "1", ",", "len", "(", "self", ".", "loader_test", ")", ",", "len", "(", "self", ".", "scale", ")", ")", "\n", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "# print(self.args.save_results)", "\n", "timer_test", "=", "utility", ".", "timer", "(", ")", "\n", "if", "self", ".", "args", ".", "save_results", ":", "self", ".", "ckp", ".", "begin_background", "(", ")", "\n", "for", "idx_data", ",", "d", "in", "enumerate", "(", "self", ".", "loader_test", ")", ":", "\n", "            ", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "d", ".", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "ssim_list", "=", "[", "]", "\n", "for", "lr", ",", "hr", ",", "filename", ",", "_", "in", "tqdm", "(", "d", ",", "ncols", "=", "80", ")", ":", "\n", "                    ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "sr", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "sr", "=", "utility", ".", "quantize", "(", "sr", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "save_list", "=", "[", "sr", "]", "\n", "cur_psnr", "=", "utility", ".", "calc_psnr", "(", "\n", "sr", ",", "hr", ",", "scale", ",", "self", ".", "args", ".", "rgb_range", ",", "dataset", "=", "d", "\n", ")", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", "+=", "cur_psnr", "\n", "if", "self", ".", "args", ".", "save_gt", ":", "\n", "                        ", "save_list", ".", "extend", "(", "[", "lr", ",", "hr", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "# print(filename[0])", "\n", "                        ", "self", ".", "ckp", ".", "save_results", "(", "d", ",", "filename", "[", "0", "]", ",", "save_list", ",", "scale", ")", "\n", "\n", "", "if", "filename", "[", "0", "]", "in", "self", ".", "save_name_list", ":", "\n", "                        ", "self", ".", "ckp", ".", "write_log", "(", "f'{filename[0]} PSNR/SSIM: {cur_psnr:.3f}'", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", "/=", "len", "(", "d", ")", "\n", "if", "len", "(", "ssim_list", ")", ">", "0", ":", "\n", "                    ", "ssim", "=", "sum", "(", "ssim_list", ")", "/", "len", "(", "ssim_list", ")", "\n", "", "else", ":", "\n", "                    ", "ssim", "=", "0.0", "\n", "", "best", "=", "self", ".", "ckp", ".", "log", ".", "max", "(", "0", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[{} x{}]\\tPSNR/SSIM: {:.3f}/{:.4f} (Best: {:.3f} @epoch {})'", ".", "format", "(", "\n", "d", ".", "dataset", ".", "name", ",", "\n", "scale", ",", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_data", ",", "idx_scale", "]", ",", "\n", "ssim", ",", "\n", "best", "[", "0", "]", "[", "idx_data", ",", "idx_scale", "]", ",", "\n", "best", "[", "1", "]", "[", "idx_data", ",", "idx_scale", "]", "+", "1", "\n", ")", "\n", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "write_log", "(", "'Forward: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "'Saving...'", ")", "\n", "\n", "if", "self", ".", "args", ".", "save_results", ":", "\n", "            ", "self", ".", "ckp", ".", "end_background", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "ckp", ".", "save", "(", "self", ",", "epoch", ",", "is_best", "=", "(", "best", "[", "1", "]", "[", "0", ",", "0", "]", "+", "1", "==", "epoch", ")", ")", "\n", "\n", "", "self", ".", "ckp", ".", "write_log", "(", "\n", "'Total: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ",", "refresh", "=", "True", "\n", ")", "\n", "\n", "torch", ".", "set_grad_enabled", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.prepare": [[141, 148], ["tensor.half.half.cuda", "trainer.Trainer.prepare._prepare"], "methods", ["None"], ["", "def", "prepare", "(", "self", ",", "*", "args", ")", ":", "\n", "# device = torch.device('cpu' if self.args.cpu else f'cuda:{self.args.gpu_id}')", "\n", "        ", "def", "_prepare", "(", "tensor", ")", ":", "\n", "            ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "cuda", "(", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "a", ")", "for", "a", "in", "args", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.terminate": [[149, 156], ["trainer.Trainer.test", "trainer.Trainer.optimizer.get_last_epoch"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.model.trainer.Trainer.test"], ["", "def", "terminate", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "test", "(", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "epoch", "=", "self", ".", "optimizer", ".", "get_last_epoch", "(", ")", "+", "1", "\n", "return", "epoch", ">=", "self", ".", "args", ".", "epochs", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn.DDTB_RDB_Conv_in.__init__": [[12, 25], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.quant_ops.DDTB_quant_act_asym_dynamic_quantized", "model.quant_ops.quant_conv3x3_asym", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_conv3x3_asym"], ["    ", "def", "__init__", "(", "self", ",", "inChannels", ",", "growRate", ",", "kSize", "=", "3", ",", "k_bits", "=", "32", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "DDTB_RDB_Conv_in", ",", "self", ")", ".", "__init__", "(", ")", "\n", "Cin", "=", "inChannels", "\n", "G", "=", "growRate", "\n", "\n", "self", ".", "k_bits", "=", "k_bits", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "# quant_conv3x3_asym99(Cin, G, kSize, padding=(kSize - 1) // 2, stride=1, k_bits=self.k_bits, bias=True),", "\n", "quant_conv3x3_asym", "(", "Cin", ",", "G", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ",", "k_bits", "=", "self", ".", "k_bits", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "self", ".", "act", "=", "DDTB_quant_act_asym_dynamic_quantized", "(", "self", ".", "k_bits", ",", "inplanes", "=", "Cin", ",", "M", "=", "95", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn.DDTB_RDB_Conv_in.forward": [[26, 32], ["rdn.DDTB_RDB_Conv_in.conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rdn.DDTB_RDB_Conv_in.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "i", ")", ":", "\n", "        ", "if", "i", ">", "0", ":", "\n", "            ", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "return", "torch", ".", "cat", "(", "(", "x", ",", "out", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn.DDTB_RDB.__init__": [[35, 55], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.quant_ops.DDTB_quant_act_asym_dynamic_quantized", "model.quant_ops.DDTB_quant_act_asym_dynamic_quantized", "model.quant_ops.QuantConv2d_asym", "convs.append", "rdn.DDTB_RDB_Conv_in"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["    ", "def", "__init__", "(", "self", ",", "growRate0", ",", "growRate", ",", "nConvLayers", ",", "kSize", "=", "3", ",", "k_bits", "=", "32", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "DDTB_RDB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "G0", "=", "growRate0", "\n", "G", "=", "growRate", "\n", "C", "=", "nConvLayers", "\n", "\n", "self", ".", "k_bits", "=", "k_bits", "\n", "\n", "convs", "=", "[", "]", "\n", "for", "c", "in", "range", "(", "C", ")", ":", "\n", "            ", "convs", ".", "append", "(", "DDTB_RDB_Conv_in", "(", "G0", "+", "c", "*", "G", ",", "G", ",", "kSize", ",", "k_bits", "=", "self", ".", "k_bits", ")", ")", "\n", "", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "*", "convs", ")", "\n", "\n", "self", ".", "act1", "=", "DDTB_quant_act_asym_dynamic_quantized", "(", "self", ".", "k_bits", ",", "inplanes", "=", "G0", ",", "M", "=", "95", ")", "\n", "self", ".", "act2", "=", "DDTB_quant_act_asym_dynamic_quantized", "(", "self", ".", "k_bits", ",", "inplanes", "=", "G0", "+", "C", "*", "G", ",", "M", "=", "95", ")", "\n", "# Local Feature Fusion", "\n", "# self.LFF = QuantConv2d_asym99(in_channels=G0 + C * G, out_channels=G0, kernel_size=1, padding=0,", "\n", "#                             k_bits=self.k_bits, stride=1, bias=True)", "\n", "self", ".", "LFF", "=", "QuantConv2d_asym", "(", "in_channels", "=", "G0", "+", "C", "*", "G", ",", "out_channels", "=", "G0", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "\n", "k_bits", "=", "self", ".", "k_bits", ",", "stride", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn.DDTB_RDB.forward": [[56, 62], ["rdn.DDTB_RDB.act1", "enumerate", "c", "rdn.DDTB_RDB.LFF", "rdn.DDTB_RDB.act2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "act1", "(", "x", ")", "\n", "out", "=", "x", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "self", ".", "convs", ")", ":", "\n", "            ", "out", "=", "c", "(", "out", ",", "i", ")", "\n", "", "return", "self", ".", "LFF", "(", "self", ".", "act2", "(", "out", ")", ")", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn.DDTB_RDB.name": [[63, 66], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'rdb'", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn.DDTB_RDN.__init__": [[69, 122], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "model.quant_ops.DDTB_quant_act_asym_dynamic_quantized", "torch.Sequential", "torch.Sequential", "torch.Sequential", "rdn.DDTB_RDN.RDBs.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "type", "type", "rdn.DDTB_RDB", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ValueError", "range", "model.quant_ops.QuantConv2d_asym", "model.quant_ops.QuantConv2d_asym", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "DDTB_RDN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "r", "=", "args", ".", "scale", "[", "0", "]", "\n", "G0", "=", "args", ".", "G0", "\n", "kSize", "=", "args", ".", "RDNkSize", "\n", "\n", "# number of RDB blocks, conv layers, out channels", "\n", "self", ".", "D", ",", "C", ",", "G", "=", "{", "\n", "'A'", ":", "(", "20", ",", "6", ",", "32", ")", ",", "\n", "'B'", ":", "(", "16", ",", "8", ",", "64", ")", ",", "\n", "}", "[", "args", ".", "RDNconfig", "]", "\n", "\n", "if", "not", "type", "(", "[", "]", ")", "==", "type", "(", "args", ".", "k_bits", ")", ":", "\n", "            ", "self", ".", "k_bits", "=", "[", "args", ".", "k_bits", "for", "_", "in", "range", "(", "self", ".", "D", ")", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "k_bits", "=", "args", ".", "k_bits", "\n", "\n", "# Shallow feature extraction net", "\n", "", "self", ".", "SFENet1", "=", "nn", ".", "Conv2d", "(", "args", ".", "n_colors", ",", "G0", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", "\n", "self", ".", "SFENet2", "=", "nn", ".", "Conv2d", "(", "G0", ",", "G0", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", "\n", "# Redidual dense blocks and dense feature fusion", "\n", "self", ".", "RDBs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "D", ")", ":", "\n", "            ", "self", ".", "RDBs", ".", "append", "(", "\n", "DDTB_RDB", "(", "growRate0", "=", "G0", ",", "growRate", "=", "G", ",", "nConvLayers", "=", "C", ",", "k_bits", "=", "args", ".", "k_bits", ")", "\n", ")", "\n", "", "self", ".", "act", "=", "DDTB_quant_act_asym_dynamic_quantized", "(", "args", ".", "k_bits", ",", "inplanes", "=", "1024", ",", "M", "=", "95", ")", "\n", "\n", "# Global Feature Fusion", "\n", "self", ".", "GFF", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "# QuantConv2d_asym99(self.D * G0, G0, 1, padding=0, stride=1, k_bits=args.k_bits, bias=True),", "\n", "# QuantConv2d_asym99(G0, G0, kSize, padding=(kSize - 1) // 2, stride=1, k_bits=args.k_bits, bias=True)", "\n", "QuantConv2d_asym", "(", "self", ".", "D", "*", "G0", ",", "G0", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "k_bits", "=", "args", ".", "k_bits", ",", "bias", "=", "True", ")", ",", "\n", "QuantConv2d_asym", "(", "G0", ",", "G0", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ",", "k_bits", "=", "args", ".", "k_bits", ",", "bias", "=", "True", ")", "\n", "]", ")", "\n", "\n", "# Up-sampling net", "\n", "if", "r", "==", "2", "or", "r", "==", "3", ":", "\n", "            ", "self", ".", "UPNet", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Conv2d", "(", "G0", ",", "G", "*", "r", "*", "r", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "r", ")", ",", "\n", "nn", ".", "Conv2d", "(", "G", ",", "args", ".", "n_colors", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", "\n", "]", ")", "\n", "", "elif", "r", "==", "4", ":", "\n", "            ", "self", ".", "UPNet", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Conv2d", "(", "G0", ",", "G", "*", "4", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "G", ",", "G", "*", "4", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "G", ",", "args", ".", "n_colors", ",", "kSize", ",", "padding", "=", "(", "kSize", "-", "1", ")", "//", "2", ",", "stride", "=", "1", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"scale must be 2 or 3 or 4.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn.DDTB_RDN.forward": [[123, 136], ["rdn.DDTB_RDN.SFENet1", "rdn.DDTB_RDN.SFENet2", "range", "rdn.DDTB_RDN.GFF", "RDBs_out.append", "rdn.DDTB_RDN.act", "rdn.DDTB_RDN.UPNet", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "f__1", "=", "self", ".", "SFENet1", "(", "x", ")", "\n", "x", "=", "self", ".", "SFENet2", "(", "f__1", ")", "\n", "RDBs_out", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "D", ")", ":", "\n", "            ", "x", "=", "self", ".", "RDBs", "[", "i", "]", "(", "x", ")", "\n", "RDBs_out", ".", "append", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "GFF", "(", "self", ".", "act", "(", "torch", ".", "cat", "(", "RDBs_out", ",", "1", ")", ")", ")", "\n", "x", "+=", "f__1", "\n", "\n", "out", "=", "x", "\n", "return", "self", ".", "UPNet", "(", "x", ")", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.rdn.DDTB_RDN.name": [[137, 140], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'rdn'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.edsr_org.EDSR.__init__": [[14, 47], ["torch.Module.__init__", "torch.ReLU", "model.common.MeanShift", "model.common.MeanShift", "m_body.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "model.common.ResBlock", "conv", "model.common.Upsampler", "conv", "range"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "is_teacher", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "EDSR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "is_teacher", "=", "is_teacher", "\n", "self", ".", "url", "=", "url", "[", "'r{}f{}x{}'", ".", "format", "(", "n_resblocks", ",", "n_feats", ",", "scale", ")", "]", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ")", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "sign", "=", "1", ")", "\n", "\n", "# define head module", "\n", "m_head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "# define body module", "\n", "m_body", "=", "[", "\n", "common", ".", "ResBlock", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", "\n", ")", "for", "_", "in", "range", "(", "n_resblocks", ")", "\n", "]", "\n", "m_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "# define tail module", "\n", "m_tail", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "\n", "]", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "m_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "m_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.edsr_org.EDSR.forward": [[48, 61], ["edsr_org.EDSR.sub_mean", "edsr_org.EDSR.head", "edsr_org.EDSR.body", "edsr_org.EDSR.tail", "edsr_org.EDSR.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "out", "=", "res", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "if", "self", ".", "is_teacher", ":", "\n", "            ", "return", "x", ",", "out", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet_org._Residual_Block.__init__": [[8, 16], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "_Residual_Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "in1", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "relu", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "in2", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet_org._Residual_Block.forward": [[17, 23], ["bnsrresnet_org._Residual_Block.relu", "bnsrresnet_org._Residual_Block.in2", "torch.add", "torch.add", "torch.add", "torch.add", "bnsrresnet_org._Residual_Block.in1", "bnsrresnet_org._Residual_Block.conv2", "bnsrresnet_org._Residual_Block.conv1"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity_data", "=", "x", "\n", "output", "=", "self", ".", "relu", "(", "self", ".", "in1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "output", "=", "self", ".", "in2", "(", "self", ".", "conv2", "(", "output", ")", ")", "\n", "output", "=", "torch", ".", "add", "(", "output", ",", "identity_data", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet_org.SRResNet.__init__": [[25, 62], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "bnsrresnet_org.SRResNet.make_layer", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "bnsrresnet_org.SRResNet.modules", "torch.Sequential", "torch.Sequential", "isinstance", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PReLU", "torch.PReLU", "torch.Sequential", "torch.Sequential", "m.weight.data.normal_", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PReLU", "torch.PReLU", "math.sqrt", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet.DDTB_SRResNet.make_layer"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "is_teacher", "=", "False", ")", ":", "\n", "        ", "super", "(", "SRResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "is_teacher", "=", "is_teacher", "\n", "self", ".", "conv_input", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ",", "padding", "=", "4", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "PReLU", "(", ")", "\n", "\n", "self", ".", "residual", "=", "self", ".", "make_layer", "(", "_Residual_Block", ",", "16", ")", "\n", "\n", "self", ".", "conv_mid", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn_mid", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "\n", "if", "args", ".", "scale", "[", "0", "]", "==", "4", ":", "\n", "            ", "self", ".", "upscale", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "\n", "", "elif", "args", ".", "scale", "[", "0", "]", "==", "2", ":", "# \u76f4\u63a5\u5220\u6389\u4e00\u4e2apixelshuffle ", "\n", "            ", "self", ".", "upscale", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "\n", "", "self", ".", "conv_output", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "3", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ",", "padding", "=", "4", ",", "bias", "=", "False", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet_org.SRResNet.make_layer": [[63, 68], ["range", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "", "", "", "def", "make_layer", "(", "self", ",", "block", ",", "num_of_layer", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_of_layer", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet_org.SRResNet.forward": [[69, 82], ["bnsrresnet_org.SRResNet.relu", "bnsrresnet_org.SRResNet.residual", "bnsrresnet_org.SRResNet.bn_mid", "torch.add", "torch.add", "torch.add", "torch.add", "bnsrresnet_org.SRResNet.upscale", "bnsrresnet_org.SRResNet.conv_output", "bnsrresnet_org.SRResNet.conv_input", "bnsrresnet_org.SRResNet.conv_mid", "bnsrresnet_org.SRResNet.upscale", "bnsrresnet_org.SRResNet.conv_output"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu", "(", "self", ".", "conv_input", "(", "x", ")", ")", "\n", "residual", "=", "out", "\n", "out", "=", "self", ".", "residual", "(", "out", ")", "\n", "out", "=", "self", ".", "bn_mid", "(", "self", ".", "conv_mid", "(", "out", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "residual", ")", "\n", "if", "self", ".", "is_teacher", ":", "\n", "            ", "out1", "=", "self", ".", "upscale", "(", "out", ")", "\n", "out1", "=", "self", ".", "conv_output", "(", "out1", ")", "\n", "return", "out1", ",", "out", "\n", "", "out", "=", "self", ".", "upscale", "(", "out", ")", "\n", "out", "=", "self", ".", "conv_output", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet_org._NetD.__init__": [[84, 140], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "bnsrresnet_org._NetD.modules", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "isinstance", "m.weight.data.normal_", "isinstance", "m.weight.data.normal_", "m.bias.data.fill_"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "_NetD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "\n", "# input is (3) x 96 x 96", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (64) x 96 x 96", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (64) x 96 x 96", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (64) x 48 x 48", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (128) x 48 x 48", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (256) x 24 x 24", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (256) x 12 x 12", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (512) x 12 x 12", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "LeakyReLU", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "512", "*", "6", "*", "6", ",", "1024", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "1024", ",", "1", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet_org._NetD.forward": [[141, 157], ["bnsrresnet_org._NetD.features", "bnsrresnet_org._NetD.view", "bnsrresnet_org._NetD.fc1", "bnsrresnet_org._NetD.LeakyReLU", "bnsrresnet_org._NetD.fc2", "bnsrresnet_org._NetD.sigmoid", "bnsrresnet_org._NetD.view().squeeze", "bnsrresnet_org._NetD.size", "bnsrresnet_org._NetD.view"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "features", "(", "input", ")", "\n", "\n", "# state size. (512) x 6 x 6", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "# state size. (512 x 6 x 6)", "\n", "out", "=", "self", ".", "fc1", "(", "out", ")", "\n", "\n", "# state size. (1024)", "\n", "out", "=", "self", ".", "LeakyReLU", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "out", "=", "self", ".", "sigmoid", "(", "out", ")", "\n", "return", "out", ".", "view", "(", "-", "1", ",", "1", ")", ".", "squeeze", "(", "1", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet._Residual_Block.__init__": [[9, 21], ["torch.Module.__init__", "model.quant_ops.quant_conv3x3_asym99", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "model.quant_ops.quant_conv3x3_asym99", "torch.BatchNorm2d", "torch.BatchNorm2d", "model.quant_ops.DDTB_quant_act_asym_dynamic_quantized", "model.quant_ops.DDTB_quant_act_asym_dynamic_quantized"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_conv3x3_asym99", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.quant_ops.quant_conv3x3_asym99"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "super", "(", "_Residual_Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "quant_conv3x3_asym99", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "k_bits", "=", "args", ".", "k_bits", ")", "\n", "self", ".", "in1", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "relu", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "conv2", "=", "quant_conv3x3_asym99", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "k_bits", "=", "args", ".", "k_bits", ")", "\n", "self", ".", "in2", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "\n", "# quantizatize", "\n", "self", ".", "act1", "=", "DDTB_quant_act_asym_dynamic_quantized", "(", "args", ".", "k_bits", ",", "ema_epoch", "=", "args", ".", "ema_epoch", ",", "inplanes", "=", "64", ",", "M", "=", "99", ")", "\n", "self", ".", "act2", "=", "DDTB_quant_act_asym_dynamic_quantized", "(", "args", ".", "k_bits", ",", "ema_epoch", "=", "args", ".", "ema_epoch", ",", "inplanes", "=", "64", ",", "M", "=", "99", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet._Residual_Block.forward": [[22, 28], ["bnsrresnet._Residual_Block.relu", "bnsrresnet._Residual_Block.in2", "torch.add", "torch.add", "torch.add", "torch.add", "bnsrresnet._Residual_Block.in1", "bnsrresnet._Residual_Block.conv2", "bnsrresnet._Residual_Block.conv1", "bnsrresnet._Residual_Block.act2", "bnsrresnet._Residual_Block.act1"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity_data", "=", "x", "\n", "output", "=", "self", ".", "relu", "(", "self", ".", "in1", "(", "self", ".", "conv1", "(", "self", ".", "act1", "(", "x", ")", ")", ")", ")", "\n", "output", "=", "self", ".", "in2", "(", "self", ".", "conv2", "(", "self", ".", "act2", "(", "output", ")", ")", ")", "\n", "output", "=", "torch", ".", "add", "(", "output", ",", "identity_data", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet.DDTB_SRResNet.__init__": [[30, 66], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "bnsrresnet.DDTB_SRResNet.make_layer", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "bnsrresnet.DDTB_SRResNet.modules", "torch.Sequential", "torch.Sequential", "isinstance", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PReLU", "torch.PReLU", "torch.Sequential", "torch.Sequential", "m.weight.data.normal_", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PReLU", "torch.PReLU", "math.sqrt", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet.DDTB_SRResNet.make_layer"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "DDTB_SRResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_input", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ",", "padding", "=", "4", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "PReLU", "(", ")", "\n", "\n", "self", ".", "residual", "=", "self", ".", "make_layer", "(", "_Residual_Block", ",", "16", ")", "\n", "\n", "self", ".", "conv_mid", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn_mid", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "\n", "if", "args", ".", "scale", "[", "0", "]", "==", "4", ":", "\n", "            ", "self", ".", "upscale", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "\n", "", "elif", "args", ".", "scale", "[", "0", "]", "==", "2", ":", "# \u76f4\u63a5\u5220\u6389\u4e00\u4e2apixelshuffle ", "\n", "            ", "self", ".", "upscale", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", ")", "\n", "\n", "", "self", ".", "conv_output", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "3", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ",", "padding", "=", "4", ",", "bias", "=", "False", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet.DDTB_SRResNet.make_layer": [[67, 72], ["range", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "", "", "", "def", "make_layer", "(", "self", ",", "block", ",", "num_of_layer", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_of_layer", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet.DDTB_SRResNet.forward": [[73, 83], ["bnsrresnet.DDTB_SRResNet.relu", "bnsrresnet.DDTB_SRResNet.residual", "bnsrresnet.DDTB_SRResNet.bn_mid", "torch.add", "torch.add", "torch.add", "torch.add", "bnsrresnet.DDTB_SRResNet.upscale", "bnsrresnet.DDTB_SRResNet.conv_output", "bnsrresnet.DDTB_SRResNet.conv_input", "bnsrresnet.DDTB_SRResNet.conv_mid"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.logger.Logger.add"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu", "(", "self", ".", "conv_input", "(", "x", ")", ")", "\n", "residual", "=", "out", "\n", "out", "=", "self", ".", "residual", "(", "out", ")", "\n", "out", "=", "self", ".", "bn_mid", "(", "self", ".", "conv_mid", "(", "out", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "residual", ")", "\n", "# pdb.set_trace()", "\n", "out1", "=", "self", ".", "upscale", "(", "out", ")", "\n", "out1", "=", "self", ".", "conv_output", "(", "out1", ")", "\n", "return", "out1", ",", "out", "\n", "# out = self.upscale(out)", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet._NetD.__init__": [[88, 144], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "bnsrresnet._NetD.modules", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "isinstance", "m.weight.data.normal_", "isinstance", "m.weight.data.normal_", "m.bias.data.fill_"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "_NetD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "\n", "# input is (3) x 96 x 96", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (64) x 96 x 96", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (64) x 96 x 96", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (64) x 48 x 48", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (128) x 48 x 48", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (256) x 24 x 24", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (256) x 12 x 12", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "# state size. (512) x 12 x 12", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "LeakyReLU", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "512", "*", "6", "*", "6", ",", "1024", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "1024", ",", "1", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.model.bnsrresnet._NetD.forward": [[145, 161], ["bnsrresnet._NetD.features", "bnsrresnet._NetD.view", "bnsrresnet._NetD.fc1", "bnsrresnet._NetD.LeakyReLU", "bnsrresnet._NetD.fc2", "bnsrresnet._NetD.sigmoid", "bnsrresnet._NetD.view().squeeze", "bnsrresnet._NetD.size", "bnsrresnet._NetD.view"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "features", "(", "input", ")", "\n", "\n", "# state size. (512) x 6 x 6", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "# state size. (512 x 6 x 6)", "\n", "out", "=", "self", ".", "fc1", "(", "out", ")", "\n", "\n", "# state size. (1024)", "\n", "out", "=", "self", ".", "LeakyReLU", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "out", "=", "self", ".", "sigmoid", "(", "out", ")", "\n", "return", "out", ".", "view", "(", "-", "1", ",", "1", ")", ".", "squeeze", "(", "1", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.demo.Demo.__init__": [[12, 25], ["os.listdir", "demo.Demo.filelist.sort", "demo.Demo.filelist.append", "f.find", "f.find", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "'Demo'", ",", "train", "=", "False", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "train", "=", "False", "\n", "self", ".", "benchmark", "=", "benchmark", "\n", "\n", "self", ".", "filelist", "=", "[", "]", "\n", "for", "f", "in", "os", ".", "listdir", "(", "args", ".", "dir_demo", ")", ":", "\n", "            ", "if", "f", ".", "find", "(", "'.png'", ")", ">=", "0", "or", "f", ".", "find", "(", "'.jp'", ")", ">=", "0", ":", "\n", "                ", "self", ".", "filelist", ".", "append", "(", "os", ".", "path", ".", "join", "(", "args", ".", "dir_demo", ",", "f", ")", ")", "\n", "", "", "self", ".", "filelist", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.demo.Demo.__getitem__": [[26, 33], ["imageio.imread", "data_new.common.set_channel", "data_new.common.np2Tensor", "os.path.splitext", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.set_channel", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.np2Tensor"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "self", ".", "filelist", "[", "idx", "]", ")", ")", "[", "0", "]", "\n", "lr", "=", "imageio", ".", "imread", "(", "self", ".", "filelist", "[", "idx", "]", ")", "\n", "lr", ",", "=", "common", ".", "set_channel", "(", "lr", ",", "n_channels", "=", "self", ".", "args", ".", "n_colors", ")", "\n", "lr_t", ",", "=", "common", ".", "np2Tensor", "(", "lr", ",", "rgb_range", "=", "self", ".", "args", ".", "rgb_range", ")", "\n", "\n", "return", "lr_t", ",", "-", "1", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.demo.Demo.__len__": [[34, 36], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "filelist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.demo.Demo.set_scale": [[37, 39], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData.__init__": [[14, 66], ["srdata.SRData._set_filesystem", "srdata.SRData._scan", "args.ext.find", "os.path.join", "os.makedirs", "args.ext.find", "args.ext.find", "os.makedirs", "enumerate", "len", "len", "max", "srdata.SRData.dir_hr.replace", "os.makedirs", "h.replace", "b.replace.replace.replace", "srdata.SRData.images_hr.append", "srdata.SRData._check_and_load", "os.path.join", "l.replace", "b.replace.replace.replace", "srdata.SRData.images_lr[].append", "srdata.SRData._check_and_load", "srdata.SRData.dir_lr.replace"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.div2k.DIV2K._set_filesystem", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.div2k.DIV2K._scan", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData._check_and_load", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData._check_and_load"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "''", ",", "train", "=", "True", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "split", "=", "'train'", "if", "train", "else", "'test'", "\n", "self", ".", "do_eval", "=", "True", "\n", "self", ".", "benchmark", "=", "benchmark", "\n", "self", ".", "input_large", "=", "(", "args", ".", "model", "==", "'VDSR'", ")", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "\n", "self", ".", "_set_filesystem", "(", "args", ".", "dir_data", ")", "\n", "if", "args", ".", "ext", ".", "find", "(", "'img'", ")", "<", "0", ":", "\n", "            ", "path_bin", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'bin'", ")", "\n", "os", ".", "makedirs", "(", "path_bin", ",", "exist_ok", "=", "True", ")", "\n", "\n", "", "list_hr", ",", "list_lr", "=", "self", ".", "_scan", "(", ")", "\n", "if", "args", ".", "ext", ".", "find", "(", "'img'", ")", ">=", "0", "or", "benchmark", ":", "\n", "            ", "self", ".", "images_hr", ",", "self", ".", "images_lr", "=", "list_hr", ",", "list_lr", "\n", "", "elif", "args", ".", "ext", ".", "find", "(", "'sep'", ")", ">=", "0", ":", "\n", "            ", "os", ".", "makedirs", "(", "\n", "self", ".", "dir_hr", ".", "replace", "(", "self", ".", "apath", ",", "path_bin", ")", ",", "\n", "exist_ok", "=", "True", "\n", ")", "\n", "for", "s", "in", "self", ".", "scale", ":", "\n", "                ", "os", ".", "makedirs", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dir_lr", ".", "replace", "(", "self", ".", "apath", ",", "path_bin", ")", ",", "\n", "'X{}'", ".", "format", "(", "s", ")", "\n", ")", ",", "\n", "exist_ok", "=", "True", "\n", ")", "\n", "\n", "", "self", ".", "images_hr", ",", "self", ".", "images_lr", "=", "[", "]", ",", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "for", "h", "in", "list_hr", ":", "\n", "                ", "b", "=", "h", ".", "replace", "(", "self", ".", "apath", ",", "path_bin", ")", "\n", "b", "=", "b", ".", "replace", "(", "self", ".", "ext", "[", "0", "]", ",", "'.pt'", ")", "\n", "self", ".", "images_hr", ".", "append", "(", "b", ")", "\n", "self", ".", "_check_and_load", "(", "args", ".", "ext", ",", "h", ",", "b", ",", "verbose", "=", "True", ")", "\n", "", "for", "i", ",", "ll", "in", "enumerate", "(", "list_lr", ")", ":", "\n", "                ", "for", "l", "in", "ll", ":", "\n", "                    ", "b", "=", "l", ".", "replace", "(", "self", ".", "apath", ",", "path_bin", ")", "\n", "b", "=", "b", ".", "replace", "(", "self", ".", "ext", "[", "1", "]", ",", "'.pt'", ")", "\n", "self", ".", "images_lr", "[", "i", "]", ".", "append", "(", "b", ")", "\n", "self", ".", "_check_and_load", "(", "args", ".", "ext", ",", "l", ",", "b", ",", "verbose", "=", "True", ")", "\n", "", "", "", "if", "train", ":", "\n", "            ", "n_patches", "=", "args", ".", "batch_size", "*", "args", ".", "test_every", "\n", "n_images", "=", "len", "(", "args", ".", "data_train", ")", "*", "len", "(", "self", ".", "images_hr", ")", "\n", "if", "n_images", "==", "0", ":", "\n", "                ", "self", ".", "repeat", "=", "0", "\n", "", "else", ":", "\n", "                ", "self", ".", "repeat", "=", "max", "(", "n_patches", "//", "n_images", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData._scan": [[68, 83], ["sorted", "glob.glob", "os.path.splitext", "enumerate", "os.path.join", "os.path.basename", "names_lr[].append", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], ["", "", "", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "names_hr", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dir_hr", ",", "'*'", "+", "self", ".", "ext", "[", "0", "]", ")", ")", "\n", ")", "\n", "names_lr", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "for", "f", "in", "names_hr", ":", "\n", "            ", "filename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "f", ")", ")", "\n", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "names_lr", "[", "si", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dir_lr", ",", "'X{}/{}x{}{}'", ".", "format", "(", "\n", "s", ",", "filename", ",", "s", ",", "self", ".", "ext", "[", "1", "]", "\n", ")", "\n", ")", ")", "\n", "\n", "", "", "return", "names_hr", ",", "names_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData._set_filesystem": [[84, 90], ["os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "os", ".", "path", ".", "join", "(", "dir_data", ",", "self", ".", "name", ")", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'HR'", ")", "\n", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'LR_bicubic'", ")", "\n", "if", "self", ".", "input_large", ":", "self", ".", "dir_lr", "+=", "'L'", "\n", "self", ".", "ext", "=", "(", "'.png'", ",", "'.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData._check_and_load": [[91, 97], ["os.path.isfile", "ext.find", "print", "open", "pickle.dump", "imageio.imread"], "methods", ["None"], ["", "def", "_check_and_load", "(", "self", ",", "ext", ",", "img", ",", "f", ",", "verbose", "=", "True", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isfile", "(", "f", ")", "or", "ext", ".", "find", "(", "'reset'", ")", ">=", "0", ":", "\n", "            ", "if", "verbose", ":", "\n", "                ", "print", "(", "'Making a binary: {}'", ".", "format", "(", "f", ")", ")", "\n", "", "with", "open", "(", "f", ",", "'wb'", ")", "as", "_f", ":", "\n", "                ", "pickle", ".", "dump", "(", "imageio", ".", "imread", "(", "img", ")", ",", "_f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData.__getitem__": [[98, 105], ["srdata.SRData._load_file", "srdata.SRData.get_patch", "data_new.common.set_channel", "data_new.common.np2Tensor"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData._load_file", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.get_patch", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.set_channel", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.np2Tensor"], ["", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "lr", ",", "hr", ",", "filename", "=", "self", ".", "_load_file", "(", "idx", ")", "\n", "pair", "=", "self", ".", "get_patch", "(", "lr", ",", "hr", ")", "\n", "pair", "=", "common", ".", "set_channel", "(", "*", "pair", ",", "n_channels", "=", "self", ".", "args", ".", "n_colors", ")", "\n", "pair_t", "=", "common", ".", "np2Tensor", "(", "*", "pair", ",", "rgb_range", "=", "self", ".", "args", ".", "rgb_range", ")", "\n", "\n", "return", "pair_t", "[", "0", "]", ",", "pair_t", "[", "1", "]", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData.__len__": [[106, 111], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "images_hr", ")", "*", "self", ".", "repeat", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "images_hr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData._get_index": [[112, 117], ["len"], "methods", ["None"], ["", "", "def", "_get_index", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "idx", "%", "len", "(", "self", ".", "images_hr", ")", "\n", "", "else", ":", "\n", "            ", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData._load_file": [[118, 134], ["srdata.SRData._get_index", "os.path.splitext", "os.path.basename", "imageio.imread", "imageio.imread", "srdata.SRData.args.ext.find", "open", "pickle.load", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData._get_index", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load"], ["", "", "def", "_load_file", "(", "self", ",", "idx", ")", ":", "\n", "        ", "idx", "=", "self", ".", "_get_index", "(", "idx", ")", "\n", "f_hr", "=", "self", ".", "images_hr", "[", "idx", "]", "\n", "f_lr", "=", "self", ".", "images_lr", "[", "self", ".", "idx_scale", "]", "[", "idx", "]", "\n", "\n", "filename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "f_hr", ")", ")", "\n", "if", "self", ".", "args", ".", "ext", "==", "'img'", "or", "self", ".", "benchmark", ":", "\n", "            ", "hr", "=", "imageio", ".", "imread", "(", "f_hr", ")", "\n", "lr", "=", "imageio", ".", "imread", "(", "f_lr", ")", "\n", "", "elif", "self", ".", "args", ".", "ext", ".", "find", "(", "'sep'", ")", ">=", "0", ":", "\n", "            ", "with", "open", "(", "f_hr", ",", "'rb'", ")", "as", "_f", ":", "\n", "                ", "hr", "=", "pickle", ".", "load", "(", "_f", ")", "\n", "", "with", "open", "(", "f_lr", ",", "'rb'", ")", "as", "_f", ":", "\n", "                ", "lr", "=", "pickle", ".", "load", "(", "_f", ")", "\n", "\n", "", "", "return", "lr", ",", "hr", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData.get_patch": [[135, 151], ["data_new.common.get_patch", "data_new.common.augment", "len"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.get_patch", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.augment"], ["", "def", "get_patch", "(", "self", ",", "lr", ",", "hr", ")", ":", "\n", "        ", "scale", "=", "self", ".", "scale", "[", "self", ".", "idx_scale", "]", "\n", "if", "self", ".", "train", ":", "\n", "            ", "lr", ",", "hr", "=", "common", ".", "get_patch", "(", "\n", "lr", ",", "hr", ",", "\n", "patch_size", "=", "self", ".", "args", ".", "patch_size", ",", "\n", "scale", "=", "scale", ",", "\n", "multi", "=", "(", "len", "(", "self", ".", "scale", ")", ">", "1", ")", ",", "\n", "input_large", "=", "self", ".", "input_large", "\n", ")", "\n", "if", "not", "self", ".", "args", ".", "no_augment", ":", "lr", ",", "hr", "=", "common", ".", "augment", "(", "lr", ",", "hr", ")", "\n", "", "else", ":", "\n", "            ", "ih", ",", "iw", "=", "lr", ".", "shape", "[", ":", "2", "]", "\n", "hr", "=", "hr", "[", "0", ":", "ih", "*", "scale", ",", "0", ":", "iw", "*", "scale", "]", "\n", "\n", "", "return", "lr", ",", "hr", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.srdata.SRData.set_scale": [[152, 157], ["random.randint", "len"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "if", "not", "self", ".", "input_large", ":", "\n", "            ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "", "else", ":", "\n", "            ", "self", ".", "idx_scale", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "scale", ")", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.div2kjpeg.DIV2KJPEG.__init__": [[6, 10], ["int", "data_new.div2k.DIV2K.__init__", "name.replace"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "''", ",", "train", "=", "True", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "self", ".", "q_factor", "=", "int", "(", "name", ".", "replace", "(", "'DIV2K-Q'", ",", "''", ")", ")", "\n", "super", "(", "DIV2KJPEG", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "name", "=", "name", ",", "train", "=", "train", ",", "benchmark", "=", "benchmark", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.div2kjpeg.DIV2KJPEG._set_filesystem": [[12, 20], ["os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "os", ".", "path", ".", "join", "(", "dir_data", ",", "'DIV2K'", ")", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'DIV2K_train_HR'", ")", "\n", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "'DIV2K_Q{}'", ".", "format", "(", "self", ".", "q_factor", ")", "\n", ")", "\n", "if", "self", ".", "input_large", ":", "self", ".", "dir_lr", "+=", "'L'", "\n", "self", ".", "ext", "=", "(", "'.png'", ",", "'.jpg'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.get_patch": [[8, 33], ["random.randrange", "random.randrange"], "function", ["None"], ["import", "torch", ".", "nn", "as", "nn", "\n", "import", "torch", ".", "nn", ".", "functional", "as", "F", "\n", "import", "logging", "\n", "import", "coloredlogs", "\n", "import", "os", "\n", "import", "cv2", "\n", "import", "torch", "\n", "import", "functools", "\n", "import", "numpy", "as", "np", "\n", "import", "math", "\n", "from", "torchvision", ".", "utils", "import", "make_grid", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "from", "decimal", "import", "Decimal", "\n", "\n", "import", "matplotlib", "\n", "matplotlib", ".", "use", "(", "'Agg'", ")", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "\n", "class", "AverageMeter", "(", "object", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n", "", "def", "reset", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.set_channel": [[34, 48], ["common.set_channel._set_channel"], "function", ["None"], ["        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n", "", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "if", "self", ".", "count", ">", "0", ":", "\n", "            ", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n", "", "", "def", "accumulate", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "sum", "+=", "val", "\n", "self", ".", "count", "+=", "n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.np2Tensor": [[49, 58], ["numpy.ascontiguousarray", "torch.from_numpy().float", "torch.from_numpy().float.mul_", "common.np2Tensor._np2Tensor"], "function", ["None"], ["if", "self", ".", "count", ">", "0", ":", "\n", "            ", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n", "", "", "", "class", "Logger", "(", "object", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "fpath", ",", "title", "=", "None", ",", "resume", "=", "False", ")", ":", "\n", "        ", "self", ".", "file", "=", "None", "\n", "self", ".", "resume", "=", "resume", "\n", "self", ".", "title", "=", "''", "if", "title", "==", "None", "else", "title", "\n", "if", "fpath", "is", "not", "None", ":", "\n", "            ", "if", "resume", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.augment": [[59, 72], ["common.augment._augment"], "function", ["None"], ["                ", "self", ".", "file", "=", "open", "(", "fpath", ",", "'r'", ")", "\n", "name", "=", "self", ".", "file", ".", "readline", "(", ")", "\n", "self", ".", "names", "=", "name", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "self", ".", "numbers", "=", "{", "}", "\n", "for", "_", ",", "name", "in", "enumerate", "(", "self", ".", "names", ")", ":", "\n", "                    ", "self", ".", "numbers", "[", "name", "]", "=", "[", "]", "\n", "\n", "", "for", "numbers", "in", "self", ".", "file", ":", "\n", "                    ", "numbers", "=", "numbers", ".", "rstrip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "numbers", ")", ")", ":", "\n", "                        ", "self", ".", "numbers", "[", "self", ".", "names", "[", "i", "]", "]", ".", "append", "(", "numbers", "[", "i", "]", ")", "\n", "", "", "self", ".", "file", ".", "close", "(", ")", "\n", "self", ".", "file", "=", "open", "(", "fpath", ",", "'a'", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.video.Video.__init__": [[13, 26], ["os.path.splitext", "cv2.VideoCapture", "int", "os.path.basename", "video.Video.vidcap.get"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "'Video'", ",", "train", "=", "False", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "train", "=", "False", "\n", "self", ".", "do_eval", "=", "False", "\n", "self", ".", "benchmark", "=", "benchmark", "\n", "\n", "self", ".", "filename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "args", ".", "dir_demo", ")", ")", "\n", "self", ".", "vidcap", "=", "cv2", ".", "VideoCapture", "(", "args", ".", "dir_demo", ")", "\n", "self", ".", "n_frames", "=", "0", "\n", "self", ".", "total_frames", "=", "int", "(", "self", ".", "vidcap", ".", "get", "(", "cv2", ".", "CAP_PROP_FRAME_COUNT", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.video.Video.__getitem__": [[27, 38], ["video.Video.vidcap.read", "data_new.common.set_channel", "data_new.common.np2Tensor", "vidcap.release"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.set_channel", "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.common.np2Tensor", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.timer.release"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "success", ",", "lr", "=", "self", ".", "vidcap", ".", "read", "(", ")", "\n", "if", "success", ":", "\n", "            ", "self", ".", "n_frames", "+=", "1", "\n", "lr", ",", "=", "common", ".", "set_channel", "(", "lr", ",", "n_channels", "=", "self", ".", "args", ".", "n_colors", ")", "\n", "lr_t", ",", "=", "common", ".", "np2Tensor", "(", "lr", ",", "rgb_range", "=", "self", ".", "args", ".", "rgb_range", ")", "\n", "\n", "return", "lr_t", ",", "-", "1", ",", "'{}_{:0>5}'", ".", "format", "(", "self", ".", "filename", ",", "self", ".", "n_frames", ")", "\n", "", "else", ":", "\n", "            ", "vidcap", ".", "release", "(", ")", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.video.Video.__len__": [[39, 41], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total_frames", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.video.Video.set_scale": [[42, 44], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.benchmark.Benchmark.__init__": [[12, 15], ["data_new.srdata.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "''", ",", "train", "=", "True", ",", "benchmark", "=", "True", ")", ":", "\n", "        ", "super", "(", "Benchmark", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "name", "=", "name", ",", "train", "=", "train", ",", "benchmark", "=", "True", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.benchmark.Benchmark._set_filesystem": [[17, 25], ["os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "os", ".", "path", ".", "join", "(", "dir_data", ",", "'benchmark'", ",", "self", ".", "name", ")", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'HR'", ")", "\n", "if", "self", ".", "input_large", ":", "\n", "            ", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'LR_bicubicL'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'LR_bicubic'", ")", "\n", "", "self", ".", "ext", "=", "(", "''", ",", "'.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.div2k.DIV2K.__init__": [[5, 18], ["list", "data_new.srdata.SRData.__init__", "r.split", "map", "args.data_range.split", "len", "int"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "'DIV2K'", ",", "train", "=", "True", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "data_range", "=", "[", "r", ".", "split", "(", "'-'", ")", "for", "r", "in", "args", ".", "data_range", ".", "split", "(", "'/'", ")", "]", "\n", "if", "train", ":", "\n", "            ", "data_range", "=", "data_range", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "if", "args", ".", "test_only", "and", "len", "(", "data_range", ")", "==", "1", ":", "\n", "                ", "data_range", "=", "data_range", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "data_range", "=", "data_range", "[", "1", "]", "\n", "\n", "", "", "self", ".", "begin", ",", "self", ".", "end", "=", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ")", ",", "data_range", ")", ")", "\n", "super", "(", "DIV2K", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "name", "=", "name", ",", "train", "=", "train", ",", "benchmark", "=", "benchmark", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.div2k.DIV2K._scan": [[20, 26], ["super()._scan"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.div2k.DIV2K._scan"], ["", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "names_hr", ",", "names_lr", "=", "super", "(", "DIV2K", ",", "self", ")", ".", "_scan", "(", ")", "\n", "names_hr", "=", "names_hr", "[", "self", ".", "begin", "-", "1", ":", "self", ".", "end", "]", "\n", "names_lr", "=", "[", "n", "[", "self", ".", "begin", "-", "1", ":", "self", ".", "end", "]", "for", "n", "in", "names_lr", "]", "\n", "\n", "return", "names_hr", ",", "names_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.div2k.DIV2K._set_filesystem": [[27, 32], ["super()._set_filesystem", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.div2k.DIV2K._set_filesystem"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "super", "(", "DIV2K", ",", "self", ")", ".", "_set_filesystem", "(", "dir_data", ")", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'DIV2K_train_HR'", ")", "\n", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'DIV2K_train_LR_bicubic'", ")", "\n", "if", "self", ".", "input_large", ":", "self", ".", "dir_lr", "+=", "'L'", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.sr291.SR291.__init__": [[4, 6], ["data.srdata.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "'SR291'", ",", "train", "=", "True", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "super", "(", "SR291", ",", "self", ")", ".", "__init__", "(", "args", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.MyConcatDataset.__init__": [[8, 11], ["torch.utils.data.ConcatDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.MyConcatDataset.set_scale": [[12, 15], ["hasattr", "d.set_scale"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.MyConcatDataset.set_scale"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.data_new.__init__.Data.__init__": [[17, 51], ["torch.utils.data.dataloader.DataLoader", "__init__.Data.loader_test.append", "importlib.import_module", "datasets.append", "__init__.MyConcatDataset", "importlib.import_module", "importlib.import_module", "torch.utils.data.dataloader.DataLoader", "getattr", "getattr", "d.find", "module_name.lower", "getattr", "d.find", "module_name.lower"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.discriminator.Discriminator.__init__": [[9, 49], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "discriminator.Discriminator.__init__._block"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "in_channels", "=", "args", ".", "n_colors", "\n", "out_channels", "=", "64", "\n", "depth", "=", "7", "\n", "\n", "def", "_block", "(", "_in_channels", ",", "_out_channels", ",", "stride", "=", "1", ")", ":", "\n", "            ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "_in_channels", ",", "\n", "_out_channels", ",", "\n", "3", ",", "\n", "padding", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "False", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "_out_channels", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ",", "inplace", "=", "True", ")", "\n", ")", "\n", "\n", "", "m_features", "=", "[", "_block", "(", "in_channels", ",", "out_channels", ")", "]", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "in_channels", "=", "out_channels", "\n", "if", "i", "%", "2", "==", "1", ":", "\n", "                ", "stride", "=", "1", "\n", "out_channels", "*=", "2", "\n", "", "else", ":", "\n", "                ", "stride", "=", "2", "\n", "", "m_features", ".", "append", "(", "_block", "(", "in_channels", ",", "out_channels", ",", "stride", "=", "stride", ")", ")", "\n", "\n", "", "patch_size", "=", "args", ".", "patch_size", "//", "(", "2", "**", "(", "(", "depth", "+", "1", ")", "//", "2", ")", ")", "\n", "m_classifier", "=", "[", "\n", "nn", ".", "Linear", "(", "out_channels", "*", "patch_size", "**", "2", ",", "1024", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "1", ")", "\n", "]", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "m_features", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "*", "m_classifier", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.discriminator.Discriminator.forward": [[50, 55], ["discriminator.Discriminator.features", "discriminator.Discriminator.classifier", "discriminator.Discriminator.view", "discriminator.Discriminator.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "features", "=", "self", ".", "features", "(", "x", ")", "\n", "output", "=", "self", ".", "classifier", "(", "features", ".", "view", "(", "features", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.vgg.VGG.__init__": [[10, 25], ["torch.Module.__init__", "model.common.MeanShift", "vgg.VGG.parameters", "torchvision.vgg19", "conv_index.find", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv_index.find", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_index", "=", "'22'", ",", "rgb_range", "=", "1", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# pdb.set_trace()", "\n", "vgg_features", "=", "models", ".", "vgg19", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "modules", "=", "[", "m", "for", "m", "in", "vgg_features", "]", "\n", "if", "conv_index", ".", "find", "(", "'22'", ")", ">=", "0", ":", "\n", "            ", "self", ".", "vgg", "=", "nn", ".", "Sequential", "(", "*", "modules", "[", ":", "8", "]", ")", "\n", "", "elif", "conv_index", ".", "find", "(", "'54'", ")", ">=", "0", ":", "\n", "            ", "self", ".", "vgg", "=", "nn", ".", "Sequential", "(", "*", "modules", "[", ":", "35", "]", ")", "\n", "\n", "", "vgg_mean", "=", "(", "0.485", ",", "0.456", ",", "0.406", ")", "\n", "vgg_std", "=", "(", "0.229", "*", "rgb_range", ",", "0.224", "*", "rgb_range", ",", "0.225", "*", "rgb_range", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "rgb_range", ",", "vgg_mean", ",", "vgg_std", ")", "\n", "for", "p", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.vgg.VGG.forward": [[26, 39], ["vgg.VGG.forward._forward"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "sr", ",", "hr", ")", ":", "\n", "        ", "def", "_forward", "(", "x", ")", ":", "\n", "            ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "vgg", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "vgg_sr", "=", "_forward", "(", "sr", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "vgg_hr", "=", "_forward", "(", "hr", ".", "detach", "(", ")", ")", "\n", "\n", "", "loss", "=", "F", ".", "mse_loss", "(", "vgg_sr", ",", "vgg_hr", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.__init__": [[13, 34], ["torch.Module.__init__", "loss.discriminator.Discriminator", "utility.make_optimizer", "types.SimpleNamespace"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.model.utility.make_optimizer"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "gan_type", ")", ":", "\n", "        ", "super", "(", "Adversarial", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gan_type", "=", "gan_type", "\n", "self", ".", "gan_k", "=", "args", ".", "gan_k", "\n", "self", ".", "dis", "=", "discriminator", ".", "Discriminator", "(", "args", ")", "\n", "if", "gan_type", "==", "'WGAN_GP'", ":", "\n", "# see https://arxiv.org/pdf/1704.00028.pdf pp.4", "\n", "            ", "optim_dict", "=", "{", "\n", "'optimizer'", ":", "'ADAM'", ",", "\n", "'betas'", ":", "(", "0", ",", "0.9", ")", ",", "\n", "'epsilon'", ":", "1e-8", ",", "\n", "'lr'", ":", "1e-5", ",", "\n", "'weight_decay'", ":", "args", ".", "weight_decay", ",", "\n", "'decay'", ":", "args", ".", "decay", ",", "\n", "'gamma'", ":", "args", ".", "gamma", "\n", "}", "\n", "optim_args", "=", "SimpleNamespace", "(", "**", "optim_dict", ")", "\n", "", "else", ":", "\n", "            ", "optim_args", "=", "args", "\n", "\n", "", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "optim_args", ",", "self", ".", "dis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.forward": [[35, 94], ["fake.detach", "range", "adversarial.Adversarial.dis", "adversarial.Adversarial.optimizer.zero_grad", "adversarial.Adversarial.dis", "adversarial.Adversarial.dis", "adversarial.Adversarial.item", "adversarial.Adversarial.backward", "adversarial.Adversarial.optimizer.step", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "adversarial.Adversarial.bce", "adversarial.Adversarial.dis.parameters", "adversarial.Adversarial.gan_type.find", "adversarial.Adversarial.gan_type.find", "p.data.clamp_", "adversarial.Adversarial.mean", "adversarial.Adversarial.bce", "adversarial.Adversarial.gan_type.find", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "adversarial.Adversarial.dis", "gradients.view.view.view", "gradients.view.view.norm", "adversarial.Adversarial.bce", "adversarial.Adversarial.mean", "adversarial.Adversarial.mean", "fake.detach.mul", "real.mul", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "gradients.view.view.size", "gradients.view.norm.sub().pow().mean", "adversarial.Adversarial.mean", "adversarial.Adversarial.mean", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "adversarial.Adversarial.sum", "gradients.view.norm.sub().pow", "gradients.view.norm.sub"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.bce", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.bce", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.bce"], ["", "def", "forward", "(", "self", ",", "fake", ",", "real", ")", ":", "\n", "# updating discriminator...", "\n", "        ", "self", ".", "loss", "=", "0", "\n", "fake_detach", "=", "fake", ".", "detach", "(", ")", "# do not backpropagate through G", "\n", "for", "_", "in", "range", "(", "self", ".", "gan_k", ")", ":", "\n", "            ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "# d: B x 1 tensor", "\n", "d_fake", "=", "self", ".", "dis", "(", "fake_detach", ")", "\n", "d_real", "=", "self", ".", "dis", "(", "real", ")", "\n", "retain_graph", "=", "False", "\n", "if", "self", ".", "gan_type", "==", "'GAN'", ":", "\n", "                ", "loss_d", "=", "self", ".", "bce", "(", "d_real", ",", "d_fake", ")", "\n", "", "elif", "self", ".", "gan_type", ".", "find", "(", "'WGAN'", ")", ">=", "0", ":", "\n", "                ", "loss_d", "=", "(", "d_fake", "-", "d_real", ")", ".", "mean", "(", ")", "\n", "if", "self", ".", "gan_type", ".", "find", "(", "'GP'", ")", ">=", "0", ":", "\n", "                    ", "epsilon", "=", "torch", ".", "rand_like", "(", "fake", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "hat", "=", "fake_detach", ".", "mul", "(", "1", "-", "epsilon", ")", "+", "real", ".", "mul", "(", "epsilon", ")", "\n", "hat", ".", "requires_grad", "=", "True", "\n", "d_hat", "=", "self", ".", "dis", "(", "hat", ")", "\n", "gradients", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "outputs", "=", "d_hat", ".", "sum", "(", ")", ",", "inputs", "=", "hat", ",", "\n", "retain_graph", "=", "True", ",", "create_graph", "=", "True", ",", "only_inputs", "=", "True", "\n", ")", "[", "0", "]", "\n", "gradients", "=", "gradients", ".", "view", "(", "gradients", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "gradient_norm", "=", "gradients", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "\n", "gradient_penalty", "=", "10", "*", "gradient_norm", ".", "sub", "(", "1", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "loss_d", "+=", "gradient_penalty", "\n", "# from ESRGAN: Enhanced Super-Resolution Generative Adversarial Networks", "\n", "", "", "elif", "self", ".", "gan_type", "==", "'RGAN'", ":", "\n", "                ", "better_real", "=", "d_real", "-", "d_fake", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "better_fake", "=", "d_fake", "-", "d_real", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "loss_d", "=", "self", ".", "bce", "(", "better_real", ",", "better_fake", ")", "\n", "retain_graph", "=", "True", "\n", "\n", "# Discriminator update", "\n", "", "self", ".", "loss", "+=", "loss_d", ".", "item", "(", ")", "\n", "loss_d", ".", "backward", "(", "retain_graph", "=", "retain_graph", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "self", ".", "gan_type", "==", "'WGAN'", ":", "\n", "                ", "for", "p", "in", "self", ".", "dis", ".", "parameters", "(", ")", ":", "\n", "                    ", "p", ".", "data", ".", "clamp_", "(", "-", "1", ",", "1", ")", "\n", "\n", "", "", "", "self", ".", "loss", "/=", "self", ".", "gan_k", "\n", "\n", "# updating generator...", "\n", "d_fake_bp", "=", "self", ".", "dis", "(", "fake", ")", "# for backpropagation, use fake as it is", "\n", "if", "self", ".", "gan_type", "==", "'GAN'", ":", "\n", "            ", "label_real", "=", "torch", ".", "ones_like", "(", "d_fake_bp", ")", "\n", "loss_g", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "d_fake_bp", ",", "label_real", ")", "\n", "", "elif", "self", ".", "gan_type", ".", "find", "(", "'WGAN'", ")", ">=", "0", ":", "\n", "            ", "loss_g", "=", "-", "d_fake_bp", ".", "mean", "(", ")", "\n", "", "elif", "self", ".", "gan_type", "==", "'RGAN'", ":", "\n", "            ", "better_real", "=", "d_real", "-", "d_fake_bp", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "better_fake", "=", "d_fake_bp", "-", "d_real", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "loss_g", "=", "self", ".", "bce", "(", "better_fake", ",", "better_real", ")", "\n", "\n", "# Generator loss", "\n", "", "return", "loss_g", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict": [[95, 100], ["adversarial.Adversarial.dis.state_dict", "adversarial.Adversarial.optimizer.state_dict", "dict"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict"], ["", "def", "state_dict", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "state_discriminator", "=", "self", ".", "dis", ".", "state_dict", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "state_optimizer", "=", "self", ".", "optimizer", ".", "state_dict", "(", ")", "\n", "\n", "return", "dict", "(", "**", "state_discriminator", ",", "**", "state_optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.bce": [[101, 108], ["torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits"], "methods", ["None"], ["", "def", "bce", "(", "self", ",", "real", ",", "fake", ")", ":", "\n", "        ", "label_real", "=", "torch", ".", "ones_like", "(", "real", ")", "\n", "label_fake", "=", "torch", ".", "zeros_like", "(", "fake", ")", "\n", "bce_real", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "real", ",", "label_real", ")", "\n", "bce_fake", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "fake", ",", "label_fake", ")", "\n", "bce_loss", "=", "bce_real", "+", "bce_fake", "\n", "return", "bce_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__": [[17, 72], ["super().__init__", "print", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "args.loss.split", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "__init__.Loss.loss_module.to", "loss.split", "__init__.Loss.loss.append", "len", "__init__.Loss.loss.append", "len", "__init__.Loss.loss_module.half", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "__init__.Loss.load", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "loss_type.find", "__init__.Loss.loss.append", "print", "__init__.Loss.loss_module.append", "range", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss", "float", "loss_type.find", "importlib.import_module", "getattr", "loss_type.find", "importlib.import_module", "getattr"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.forward": [[73, 91], ["enumerate", "sum", "len", "sum.item", "losses.append", "effective_loss.item"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step": [[92, 96], ["__init__.Loss.get_loss_module", "hasattr", "l.scheduler.step"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.get_loss_module", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.start_log": [[97, 99], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.end_log": [[100, 102], ["__init__.Loss.log[].div_"], "methods", ["None"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.display_loss": [[103, 110], ["zip", "log.append"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.append"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.plot_loss": [[111, 124], ["numpy.linspace", "enumerate", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "__init__.Loss.log[].numpy", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.plot", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close", "home.repos.pwc.inspect_result.zysxmu_ddtb.utils.common.Logger.close"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.get_loss_module": [[125, 130], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save": [[131, 134], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Loss.state_dict", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.adversarial.Adversarial.state_dict"], []], "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load": [[135, 149], ["__init__.Loss.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "__init__.Loss.get_loss_module", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "hasattr", "os.path.join", "range", "len", "l.scheduler.step"], "methods", ["home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.get_loss_module", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.zysxmu_ddtb.loss.__init__.Loss.step"], []]}