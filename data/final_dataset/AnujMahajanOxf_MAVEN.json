{"home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.main.my_main": [[26, 35], ["numpy.random.seed", "torch.manual_seed", "run.run"], "function", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.seed", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.run"], ["@", "ex", ".", "main", "\n", "def", "my_main", "(", "_run", ",", "_config", ",", "_log", ",", "env_args", ")", ":", "\n", "# Setting the random seed throughout the modules", "\n", "    ", "np", ".", "random", ".", "seed", "(", "_config", "[", "\"seed\"", "]", ")", "\n", "th", ".", "manual_seed", "(", "_config", "[", "\"seed\"", "]", ")", "\n", "env_args", "[", "'seed'", "]", "=", "_config", "[", "\"seed\"", "]", "\n", "\n", "# run the framework", "\n", "run", "(", "_run", ",", "_config", ",", "_log", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.main._get_config": [[37, 52], ["enumerate", "open", "_v.split", "_v.split", "os.path.join", "yaml.load", "os.path.dirname"], "function", ["None"], ["", "def", "_get_config", "(", "params", ",", "arg_name", ",", "subfolder", ")", ":", "\n", "    ", "config_name", "=", "None", "\n", "for", "_i", ",", "_v", "in", "enumerate", "(", "params", ")", ":", "\n", "        ", "if", "_v", ".", "split", "(", "\"=\"", ")", "[", "0", "]", "==", "arg_name", ":", "\n", "            ", "config_name", "=", "_v", ".", "split", "(", "\"=\"", ")", "[", "1", "]", "\n", "del", "params", "[", "_i", "]", "\n", "break", "\n", "\n", "", "", "if", "config_name", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "\"config\"", ",", "subfolder", ",", "\"{}.yaml\"", ".", "format", "(", "config_name", ")", ")", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "try", ":", "\n", "                ", "config_dict", "=", "yaml", ".", "load", "(", "f", ")", "\n", "", "except", "yaml", ".", "YAMLError", "as", "exc", ":", "\n", "                ", "assert", "False", ",", "\"{}.yaml error: {}\"", ".", "format", "(", "config_name", ",", "exc", ")", "\n", "", "", "return", "config_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.main.recursive_dict_update": [[54, 61], ["u.items", "isinstance", "main.recursive_dict_update", "d.get"], "function", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.main.recursive_dict_update"], ["", "", "def", "recursive_dict_update", "(", "d", ",", "u", ")", ":", "\n", "    ", "for", "k", ",", "v", "in", "u", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "v", ",", "collections", ".", "Mapping", ")", ":", "\n", "            ", "d", "[", "k", "]", "=", "recursive_dict_update", "(", "d", ".", "get", "(", "k", ",", "{", "}", ")", ",", "v", ")", "\n", "", "else", ":", "\n", "            ", "d", "[", "k", "]", "=", "v", "\n", "", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.run.run": [[19, 64], ["run.args_sanity_check", "types.SimpleNamespace", "utils.logging.Logger", "_log.info", "pprint.pformat", "_log.info", "utils.logging.Logger.setup_sacred", "run.run_sequential", "print", "print", "threading.enumerate", "print", "os._exit", "datetime.datetime.now().strftime", "os.path.join", "os.path.join().format", "utils.logging.Logger.setup_tb", "os.path.dirname", "print", "t.join", "print", "datetime.datetime.now", "os.path.dirname", "os.path.join", "os.path.abspath"], "function", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.run.args_sanity_check", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.setup_sacred", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.run.run_sequential", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.setup_tb"], ["def", "run", "(", "_run", ",", "_config", ",", "_log", ")", ":", "\n", "\n", "# check args sanity", "\n", "    ", "_config", "=", "args_sanity_check", "(", "_config", ",", "_log", ")", "\n", "\n", "args", "=", "SN", "(", "**", "_config", ")", "\n", "args", ".", "device", "=", "\"cuda\"", "if", "args", ".", "use_cuda", "else", "\"cpu\"", "\n", "\n", "# setup loggers", "\n", "logger", "=", "Logger", "(", "_log", ")", "\n", "\n", "_log", ".", "info", "(", "\"Experiment Parameters:\"", ")", "\n", "experiment_params", "=", "pprint", ".", "pformat", "(", "_config", ",", "\n", "indent", "=", "4", ",", "\n", "width", "=", "1", ")", "\n", "_log", ".", "info", "(", "\"\\n\\n\"", "+", "experiment_params", "+", "\"\\n\"", ")", "\n", "\n", "# configure tensorboard logger", "\n", "unique_token", "=", "\"{}__{}\"", ".", "format", "(", "args", ".", "name", ",", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%Y-%m-%d_%H-%M-%S\"", ")", ")", "\n", "args", ".", "unique_token", "=", "unique_token", "\n", "if", "args", ".", "use_tensorboard", ":", "\n", "        ", "tb_logs_direc", "=", "os", ".", "path", ".", "join", "(", "dirname", "(", "dirname", "(", "abspath", "(", "__file__", ")", ")", ")", ",", "\"results\"", ",", "\"tb_logs\"", ")", "\n", "tb_exp_direc", "=", "os", ".", "path", ".", "join", "(", "tb_logs_direc", ",", "\"{}\"", ")", ".", "format", "(", "unique_token", ")", "\n", "logger", ".", "setup_tb", "(", "tb_exp_direc", ")", "\n", "\n", "# sacred is on by default", "\n", "", "logger", ".", "setup_sacred", "(", "_run", ")", "\n", "\n", "# Run and train", "\n", "run_sequential", "(", "args", "=", "args", ",", "logger", "=", "logger", ")", "\n", "\n", "# Clean up after finishing", "\n", "print", "(", "\"Exiting Main\"", ")", "\n", "\n", "print", "(", "\"Stopping all threads\"", ")", "\n", "for", "t", "in", "threading", ".", "enumerate", "(", ")", ":", "\n", "        ", "if", "t", ".", "name", "!=", "\"MainThread\"", ":", "\n", "            ", "print", "(", "\"Thread {} is alive! Is daemon: {}\"", ".", "format", "(", "t", ".", "name", ",", "t", ".", "daemon", ")", ")", "\n", "t", ".", "join", "(", "timeout", "=", "1", ")", "\n", "print", "(", "\"Thread joined\"", ")", "\n", "\n", "", "", "print", "(", "\"Exiting script\"", ")", "\n", "\n", "# Making sure framework really exits", "\n", "os", ".", "_exit", "(", "os", ".", "EX_OK", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.run.evaluate_sequential": [[66, 75], ["range", "runner.close_env", "runner.run", "runner.save_replay"], "function", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.close_env", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.run", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.save_replay"], ["", "def", "evaluate_sequential", "(", "args", ",", "runner", ")", ":", "\n", "\n", "    ", "for", "_", "in", "range", "(", "args", ".", "test_nepisode", ")", ":", "\n", "        ", "runner", ".", "run", "(", "test_mode", "=", "True", ")", "\n", "\n", "", "if", "args", ".", "save_replay", ":", "\n", "        ", "runner", ".", "save_replay", "(", ")", "\n", "\n", "", "runner", ".", "close_env", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.run.run_sequential": [[76, 220], ["runner.get_env_info", "components.episode_buffer.ReplayBuffer", "runner.setup", "time.time", "logger.console_logger.info", "runner.close_env", "logger.console_logger.info", "learner.cuda", "runner.cuda", "os.listdir", "os.path.join", "logger.console_logger.info", "learner.load_models", "runner.run", "components.episode_buffer.ReplayBuffer.insert_episode_batch", "components.episode_buffer.ReplayBuffer.can_sample", "max", "os.path.isdir", "logger.console_logger.info", "os.path.join", "max", "min", "str", "run.evaluate_sequential", "components.episode_buffer.ReplayBuffer.sample", "buffer.sample.max_t_filled", "learner.train", "logger.console_logger.info", "logger.console_logger.info", "time.time", "range", "os.path.join", "os.makedirs", "logger.console_logger.info", "learner.save_models", "runner.save_models", "logger.log_stat", "logger.print_recent_stats", "components.transforms.OneHot", "os.path.isdir", "name.isdigit", "timesteps.append", "buffer.sample.to", "runner.run", "range", "str", "int", "utils.timehelper.time_left", "utils.timehelper.time_str", "runner.run", "abs", "time.time"], "function", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.get_env_info", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.setup", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.close_env", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_models", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.run", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.ReplayBuffer.insert_episode_batch", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.ReplayBuffer.can_sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.run.evaluate_sequential", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.max_t_filled", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner.train", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.save_models", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.save_models", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.print_recent_stats", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.run", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.timehelper.time_left", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.timehelper.time_str", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.run"], ["", "def", "run_sequential", "(", "args", ",", "logger", ")", ":", "\n", "\n", "# Init runner so we can get env info", "\n", "    ", "runner", "=", "r_REGISTRY", "[", "args", ".", "runner", "]", "(", "args", "=", "args", ",", "logger", "=", "logger", ")", "\n", "\n", "# Set up schemes and groups here", "\n", "env_info", "=", "runner", ".", "get_env_info", "(", ")", "\n", "args", ".", "n_agents", "=", "env_info", "[", "\"n_agents\"", "]", "\n", "args", ".", "n_actions", "=", "env_info", "[", "\"n_actions\"", "]", "\n", "args", ".", "state_shape", "=", "env_info", "[", "\"state_shape\"", "]", "\n", "\n", "# Default/Base scheme", "\n", "scheme", "=", "{", "\n", "\"state\"", ":", "{", "\"vshape\"", ":", "env_info", "[", "\"state_shape\"", "]", "}", ",", "\n", "\"obs\"", ":", "{", "\"vshape\"", ":", "env_info", "[", "\"obs_shape\"", "]", ",", "\"group\"", ":", "\"agents\"", "}", ",", "\n", "\"actions\"", ":", "{", "\"vshape\"", ":", "(", "1", ",", ")", ",", "\"group\"", ":", "\"agents\"", ",", "\"dtype\"", ":", "th", ".", "long", "}", ",", "\n", "\"avail_actions\"", ":", "{", "\"vshape\"", ":", "(", "env_info", "[", "\"n_actions\"", "]", ",", ")", ",", "\"group\"", ":", "\"agents\"", ",", "\"dtype\"", ":", "th", ".", "int", "}", ",", "\n", "\"reward\"", ":", "{", "\"vshape\"", ":", "(", "1", ",", ")", "}", ",", "\n", "\"terminated\"", ":", "{", "\"vshape\"", ":", "(", "1", ",", ")", ",", "\"dtype\"", ":", "th", ".", "uint8", "}", ",", "\n", "\"noise\"", ":", "{", "\"vshape\"", ":", "(", "args", ".", "noise_dim", ",", ")", "}", "\n", "}", "\n", "groups", "=", "{", "\n", "\"agents\"", ":", "args", ".", "n_agents", "\n", "}", "\n", "preprocess", "=", "{", "\n", "\"actions\"", ":", "(", "\"actions_onehot\"", ",", "[", "OneHot", "(", "out_dim", "=", "args", ".", "n_actions", ")", "]", ")", "\n", "}", "\n", "\n", "buffer", "=", "ReplayBuffer", "(", "scheme", ",", "groups", ",", "args", ".", "buffer_size", ",", "env_info", "[", "\"episode_limit\"", "]", "+", "1", ",", "\n", "preprocess", "=", "preprocess", ",", "\n", "device", "=", "\"cpu\"", "if", "args", ".", "buffer_cpu_only", "else", "args", ".", "device", ")", "\n", "\n", "# Setup multiagent controller here", "\n", "mac", "=", "mac_REGISTRY", "[", "args", ".", "mac", "]", "(", "buffer", ".", "scheme", ",", "groups", ",", "args", ")", "\n", "\n", "# Give runner the scheme", "\n", "runner", ".", "setup", "(", "scheme", "=", "scheme", ",", "groups", "=", "groups", ",", "preprocess", "=", "preprocess", ",", "mac", "=", "mac", ")", "\n", "\n", "# Learner", "\n", "learner", "=", "le_REGISTRY", "[", "args", ".", "learner", "]", "(", "mac", ",", "buffer", ".", "scheme", ",", "logger", ",", "args", ")", "\n", "\n", "if", "args", ".", "use_cuda", ":", "\n", "        ", "learner", ".", "cuda", "(", ")", "\n", "runner", ".", "cuda", "(", ")", "\n", "\n", "", "if", "args", ".", "checkpoint_path", "!=", "\"\"", ":", "\n", "\n", "        ", "timesteps", "=", "[", "]", "\n", "timestep_to_load", "=", "0", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "args", ".", "checkpoint_path", ")", ":", "\n", "            ", "logger", ".", "console_logger", ".", "info", "(", "\"Checkpoint directiory {} doesn't exist\"", ".", "format", "(", "args", ".", "checkpoint_path", ")", ")", "\n", "return", "\n", "\n", "# Go through all files in args.checkpoint_path", "\n", "", "for", "name", "in", "os", ".", "listdir", "(", "args", ".", "checkpoint_path", ")", ":", "\n", "            ", "full_name", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoint_path", ",", "name", ")", "\n", "# Check if they are dirs the names of which are numbers", "\n", "if", "os", ".", "path", ".", "isdir", "(", "full_name", ")", "and", "name", ".", "isdigit", "(", ")", ":", "\n", "                ", "timesteps", ".", "append", "(", "int", "(", "name", ")", ")", "\n", "\n", "", "", "if", "args", ".", "load_step", "==", "0", ":", "\n", "# choose the max timestep", "\n", "            ", "timestep_to_load", "=", "max", "(", "timesteps", ")", "\n", "", "else", ":", "\n", "# choose the timestep closest to load_step", "\n", "            ", "timestep_to_load", "=", "min", "(", "timesteps", ",", "key", "=", "lambda", "x", ":", "abs", "(", "x", "-", "args", ".", "load_step", ")", ")", "\n", "\n", "", "model_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoint_path", ",", "str", "(", "timestep_to_load", ")", ")", "\n", "\n", "logger", ".", "console_logger", ".", "info", "(", "\"Loading model from {}\"", ".", "format", "(", "model_path", ")", ")", "\n", "learner", ".", "load_models", "(", "model_path", ")", "\n", "runner", ".", "t_env", "=", "timestep_to_load", "\n", "\n", "if", "args", ".", "evaluate", "or", "args", ".", "save_replay", ":", "\n", "            ", "evaluate_sequential", "(", "args", ",", "runner", ")", "\n", "return", "\n", "\n", "# start training", "\n", "", "", "episode", "=", "0", "\n", "last_test_T", "=", "-", "args", ".", "test_interval", "-", "1", "\n", "last_log_T", "=", "0", "\n", "model_save_time", "=", "0", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "last_time", "=", "start_time", "\n", "\n", "logger", ".", "console_logger", ".", "info", "(", "\"Beginning training for {} timesteps\"", ".", "format", "(", "args", ".", "t_max", ")", ")", "\n", "\n", "while", "runner", ".", "t_env", "<=", "args", ".", "t_max", ":", "\n", "\n", "# Run for a whole episode at a time", "\n", "        ", "episode_batch", "=", "runner", ".", "run", "(", "test_mode", "=", "False", ")", "\n", "buffer", ".", "insert_episode_batch", "(", "episode_batch", ")", "\n", "\n", "if", "buffer", ".", "can_sample", "(", "args", ".", "batch_size", ")", ":", "\n", "            ", "episode_sample", "=", "buffer", ".", "sample", "(", "args", ".", "batch_size", ")", "\n", "\n", "# Truncate batch to only filled timesteps", "\n", "max_ep_t", "=", "episode_sample", ".", "max_t_filled", "(", ")", "\n", "episode_sample", "=", "episode_sample", "[", ":", ",", ":", "max_ep_t", "]", "\n", "\n", "if", "episode_sample", ".", "device", "!=", "args", ".", "device", ":", "\n", "                ", "episode_sample", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "", "learner", ".", "train", "(", "episode_sample", ",", "runner", ".", "t_env", ",", "episode", ")", "\n", "\n", "# Execute test runs once in a while", "\n", "", "n_test_runs", "=", "max", "(", "1", ",", "args", ".", "test_nepisode", "//", "runner", ".", "batch_size", ")", "\n", "if", "(", "runner", ".", "t_env", "-", "last_test_T", ")", "/", "args", ".", "test_interval", ">=", "1.0", ":", "\n", "\n", "            ", "logger", ".", "console_logger", ".", "info", "(", "\"t_env: {} / {}\"", ".", "format", "(", "runner", ".", "t_env", ",", "args", ".", "t_max", ")", ")", "\n", "logger", ".", "console_logger", ".", "info", "(", "\"Estimated time left: {}. Time passed: {}\"", ".", "format", "(", "\n", "time_left", "(", "last_time", ",", "last_test_T", ",", "runner", ".", "t_env", ",", "args", ".", "t_max", ")", ",", "time_str", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", ")", "\n", "last_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "last_test_T", "=", "runner", ".", "t_env", "\n", "for", "_", "in", "range", "(", "n_test_runs", ")", ":", "\n", "                ", "runner", ".", "run", "(", "test_mode", "=", "True", ")", "\n", "\n", "", "if", "args", ".", "noise_bandit", ":", "\n", "                ", "for", "_", "in", "range", "(", "n_test_runs", ")", ":", "\n", "                    ", "runner", ".", "run", "(", "test_mode", "=", "True", ",", "test_uniform", "=", "True", ")", "\n", "\n", "", "", "", "if", "args", ".", "save_model", "and", "(", "runner", ".", "t_env", "-", "model_save_time", ">=", "args", ".", "save_model_interval", "or", "model_save_time", "==", "0", ")", ":", "\n", "            ", "model_save_time", "=", "runner", ".", "t_env", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "local_results_path", ",", "\"models\"", ",", "args", ".", "unique_token", ",", "str", "(", "runner", ".", "t_env", ")", ")", "\n", "os", ".", "makedirs", "(", "save_path", ",", "exist_ok", "=", "True", ")", "\n", "logger", ".", "console_logger", ".", "info", "(", "\"Saving models to {}\"", ".", "format", "(", "save_path", ")", ")", "\n", "\n", "# learner should handle saving/loading -- delegate actor save/load to mac,", "\n", "# use appropriate filenames to do critics, optimizer states", "\n", "learner", ".", "save_models", "(", "save_path", ")", "\n", "runner", ".", "save_models", "(", "save_path", ")", "\n", "\n", "", "episode", "+=", "args", ".", "batch_size_run", "\n", "\n", "if", "(", "runner", ".", "t_env", "-", "last_log_T", ")", ">=", "args", ".", "log_interval", ":", "\n", "            ", "logger", ".", "log_stat", "(", "\"episode\"", ",", "episode", ",", "runner", ".", "t_env", ")", "\n", "logger", ".", "print_recent_stats", "(", ")", "\n", "last_log_T", "=", "runner", ".", "t_env", "\n", "\n", "", "", "runner", ".", "close_env", "(", ")", "\n", "logger", ".", "console_logger", ".", "info", "(", "\"Finished Training\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.src.run.args_sanity_check": [[222, 234], ["_log.warning", "torch.cuda.is_available"], "function", ["None"], ["", "def", "args_sanity_check", "(", "config", ",", "_log", ")", ":", "\n", "\n", "    ", "if", "config", "[", "\"use_cuda\"", "]", "and", "not", "th", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "config", "[", "\"use_cuda\"", "]", "=", "False", "\n", "_log", ".", "warning", "(", "\"CUDA flag use_cuda was switched OFF automatically because no CUDA devices are available!\"", ")", "\n", "\n", "", "if", "config", "[", "\"test_nepisode\"", "]", "<", "config", "[", "\"batch_size_run\"", "]", ":", "\n", "        ", "config", "[", "\"test_nepisode\"", "]", "=", "config", "[", "\"batch_size_run\"", "]", "\n", "", "else", ":", "\n", "        ", "config", "[", "\"test_nepisode\"", "]", "=", "(", "config", "[", "\"test_nepisode\"", "]", "//", "config", "[", "\"batch_size_run\"", "]", ")", "*", "config", "[", "\"batch_size_run\"", "]", "\n", "\n", "", "return", "config", "\n", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.rl_utils.build_td_lambda_targets__old": [[4, 20], ["rewards.size", "rewards.size", "rewards.new().zero_", "terminated.float.float", "reversed", "rewards.new().zero_", "range", "rewards.new", "rewards.new", "target_qs.size"], "function", ["None"], ["def", "build_td_lambda_targets__old", "(", "rewards", ",", "terminated", ",", "mask", ",", "target_qs", ",", "n_agents", ",", "gamma", ",", "td_lambda", ")", ":", "\n", "    ", "bs", "=", "rewards", ".", "size", "(", "0", ")", "\n", "max_t", "=", "rewards", ".", "size", "(", "1", ")", "\n", "targets", "=", "rewards", ".", "new", "(", "target_qs", ".", "size", "(", ")", ")", ".", "zero_", "(", ")", "[", ":", ",", ":", "-", "1", "]", "# Produce 1 less target than the inputted Q-Values", "\n", "running_target", "=", "rewards", ".", "new", "(", "bs", ",", "n_agents", ")", ".", "zero_", "(", ")", "\n", "terminated", "=", "terminated", ".", "float", "(", ")", "\n", "for", "t", "in", "reversed", "(", "range", "(", "max_t", ")", ")", ":", "\n", "        ", "if", "t", "==", "max_t", "-", "1", ":", "\n", "            ", "running_target", "=", "mask", "[", ":", ",", "t", "]", "*", "(", "rewards", "[", ":", ",", "t", "]", "+", "gamma", "*", "(", "1", "-", "terminated", "[", ":", ",", "t", "]", ")", "*", "target_qs", "[", ":", ",", "t", "]", ")", "\n", "", "else", ":", "\n", "            ", "running_target", "=", "mask", "[", ":", ",", "t", "]", "*", "(", "\n", "terminated", "[", ":", ",", "t", "]", "*", "rewards", "[", ":", ",", "t", "]", "# Just the reward if the env terminates", "\n", "+", "(", "1", "-", "terminated", "[", ":", ",", "t", "]", ")", "*", "(", "rewards", "[", ":", ",", "t", "]", "+", "gamma", "*", "(", "td_lambda", "*", "running_target", "+", "(", "1", "-", "td_lambda", ")", "*", "target_qs", "[", ":", ",", "t", "]", ")", ")", "\n", ")", "\n", "", "targets", "[", ":", ",", "t", ",", ":", "]", "=", "running_target", "\n", "", "return", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.rl_utils.build_td_lambda_targets": [[22, 33], ["target_qs.new_zeros", "range", "torch.sum"], "function", ["None"], ["", "def", "build_td_lambda_targets", "(", "rewards", ",", "terminated", ",", "mask", ",", "target_qs", ",", "n_agents", ",", "gamma", ",", "td_lambda", ")", ":", "\n", "# Assumes  <target_qs > in B*T*A and <reward >, <terminated >, <mask > in (at least) B*T-1*1", "\n", "# Initialise  last  lambda -return  for  not  terminated  episodes", "\n", "    ", "ret", "=", "target_qs", ".", "new_zeros", "(", "*", "target_qs", ".", "shape", ")", "\n", "ret", "[", ":", ",", "-", "1", "]", "=", "target_qs", "[", ":", ",", "-", "1", "]", "*", "(", "1", "-", "th", ".", "sum", "(", "terminated", ",", "dim", "=", "1", ")", ")", "\n", "# Backwards  recursive  update  of the \"forward  view\"", "\n", "for", "t", "in", "range", "(", "ret", ".", "shape", "[", "1", "]", "-", "2", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "        ", "ret", "[", ":", ",", "t", "]", "=", "td_lambda", "*", "gamma", "*", "ret", "[", ":", ",", "t", "+", "1", "]", "+", "mask", "[", ":", ",", "t", "]", "*", "(", "rewards", "[", ":", ",", "t", "]", "+", "(", "1", "-", "td_lambda", ")", "*", "gamma", "*", "target_qs", "[", ":", ",", "t", "+", "1", "]", "*", "(", "1", "-", "terminated", "[", ":", ",", "t", "]", ")", ")", "\n", "# Returns lambda-return from t=0 to t=T-1, i.e. in B*T-1*A", "\n", "", "return", "ret", "[", ":", ",", "0", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.__init__": [[6, 14], ["collections.defaultdict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "console_logger", ")", ":", "\n", "        ", "self", ".", "console_logger", "=", "console_logger", "\n", "\n", "self", ".", "use_tb", "=", "False", "\n", "self", ".", "use_sacred", "=", "False", "\n", "self", ".", "use_hdf", "=", "False", "\n", "\n", "self", ".", "stats", "=", "defaultdict", "(", "lambda", ":", "[", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.setup_tb": [[15, 20], ["configure"], "methods", ["None"], ["", "def", "setup_tb", "(", "self", ",", "directory_name", ")", ":", "\n", "        ", "from", "tensorboard_logger", "import", "configure", ",", "log_value", "\n", "configure", "(", "directory_name", ")", "\n", "self", ".", "tb_logger", "=", "log_value", "\n", "self", ".", "use_tb", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.setup_sacred": [[21, 24], ["None"], "methods", ["None"], ["", "def", "setup_sacred", "(", "self", ",", "sacred_run_dict", ")", ":", "\n", "        ", "self", ".", "sacred_info", "=", "sacred_run_dict", ".", "info", "\n", "self", ".", "use_sacred", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat": [[25, 38], ["logging.Logger.stats[].append", "logging.Logger.tb_logger", "logging.Logger.sacred_info[].append", "logging.Logger.sacred_info[].append"], "methods", ["None"], ["", "def", "log_stat", "(", "self", ",", "key", ",", "value", ",", "t", ",", "to_sacred", "=", "True", ")", ":", "\n", "        ", "self", ".", "stats", "[", "key", "]", ".", "append", "(", "(", "t", ",", "value", ")", ")", "\n", "\n", "if", "self", ".", "use_tb", ":", "\n", "            ", "self", ".", "tb_logger", "(", "key", ",", "value", ",", "t", ")", "\n", "\n", "", "if", "self", ".", "use_sacred", "and", "to_sacred", ":", "\n", "            ", "if", "key", "in", "self", ".", "sacred_info", ":", "\n", "                ", "self", ".", "sacred_info", "[", "\"{}_T\"", ".", "format", "(", "key", ")", "]", ".", "append", "(", "t", ")", "\n", "self", ".", "sacred_info", "[", "key", "]", ".", "append", "(", "value", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "sacred_info", "[", "\"{}_T\"", ".", "format", "(", "key", ")", "]", "=", "[", "t", "]", "\n", "self", ".", "sacred_info", "[", "key", "]", "=", "[", "value", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.print_recent_stats": [[39, 51], ["sorted", "logging.Logger.console_logger.info", "logging.Logger.stats.items", "numpy.mean"], "methods", ["None"], ["", "", "", "def", "print_recent_stats", "(", "self", ")", ":", "\n", "        ", "log_str", "=", "\"Recent Stats | t_env: {:>10} | Episode: {:>8}\\n\"", ".", "format", "(", "*", "self", ".", "stats", "[", "\"episode\"", "]", "[", "-", "1", "]", ")", "\n", "i", "=", "0", "\n", "for", "(", "k", ",", "v", ")", "in", "sorted", "(", "self", ".", "stats", ".", "items", "(", ")", ")", ":", "\n", "            ", "if", "k", "==", "\"episode\"", ":", "\n", "                ", "continue", "\n", "", "i", "+=", "1", "\n", "window", "=", "5", "if", "k", "!=", "\"epsilon\"", "else", "1", "\n", "item", "=", "\"{:.4f}\"", ".", "format", "(", "np", ".", "mean", "(", "[", "x", "[", "1", "]", "for", "x", "in", "self", ".", "stats", "[", "k", "]", "[", "-", "window", ":", "]", "]", ")", ")", "\n", "log_str", "+=", "\"{:<25}{:>8}\"", ".", "format", "(", "k", "+", "\":\"", ",", "item", ")", "\n", "log_str", "+=", "\"\\n\"", "if", "i", "%", "4", "==", "0", "else", "\"\\t\"", "\n", "", "self", ".", "console_logger", ".", "info", "(", "log_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.get_logger": [[53, 63], ["logging.getLogger", "logging.StreamHandler", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "logging.getLogger.setLevel"], "function", ["None"], ["", "", "def", "get_logger", "(", ")", ":", "\n", "    ", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "logger", ".", "handlers", "=", "[", "]", "\n", "ch", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'[%(levelname)s %(asctime)s] %(name)s %(message)s'", ",", "'%H:%M:%S'", ")", "\n", "ch", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "ch", ")", "\n", "logger", ".", "setLevel", "(", "'DEBUG'", ")", "\n", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.dict2namedtuple.convert": [[2, 4], ["collections.namedtuple", "dictionary.keys"], "function", ["None"], ["def", "convert", "(", "dictionary", ")", ":", "\n", "    ", "return", "namedtuple", "(", "'GenericDict'", ",", "dictionary", ".", "keys", "(", ")", ")", "(", "**", "dictionary", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.timehelper.print_time": [[5, 15], ["max", "min", "print", "time.time", "len", "numpy.mean", "timehelper.time_str", "timehelper.time_str"], "function", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.timehelper.time_str", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.timehelper.time_str"], ["def", "print_time", "(", "start_time", ",", "T", ",", "t_max", ",", "episode", ",", "episode_rewards", ")", ":", "\n", "    ", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "T", "=", "max", "(", "1", ",", "T", ")", "\n", "time_left", "=", "time_elapsed", "*", "(", "t_max", "-", "T", ")", "/", "T", "\n", "# Just in case its over 100 days", "\n", "time_left", "=", "min", "(", "time_left", ",", "60", "*", "60", "*", "24", "*", "100", ")", "\n", "last_reward", "=", "\"N\\A\"", "\n", "if", "len", "(", "episode_rewards", ")", ">", "5", ":", "\n", "        ", "last_reward", "=", "\"{:.2f}\"", ".", "format", "(", "np", ".", "mean", "(", "episode_rewards", "[", "-", "50", ":", "]", ")", ")", "\n", "", "print", "(", "\"\\033[F\\033[F\\x1b[KEp: {:,}, T: {:,}/{:,}, Reward: {}, \\n\\x1b[KElapsed: {}, Left: {}\\n\"", ".", "format", "(", "episode", ",", "T", ",", "t_max", ",", "last_reward", ",", "time_str", "(", "time_elapsed", ")", ",", "time_str", "(", "time_left", ")", ")", ",", "\" \"", "*", "10", ",", "end", "=", "\"\\r\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.timehelper.time_left": [[16, 25], ["max", "min", "timehelper.time_str", "time.time"], "function", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.timehelper.time_str"], ["", "def", "time_left", "(", "start_time", ",", "t_start", ",", "t_current", ",", "t_max", ")", ":", "\n", "    ", "if", "t_current", ">=", "t_max", ":", "\n", "        ", "return", "\"-\"", "\n", "", "time_elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "t_current", "=", "max", "(", "1", ",", "t_current", ")", "\n", "time_left", "=", "time_elapsed", "*", "(", "t_max", "-", "t_current", ")", "/", "(", "t_current", "-", "t_start", ")", "\n", "# Just in case its over 100 days", "\n", "time_left", "=", "min", "(", "time_left", ",", "60", "*", "60", "*", "24", "*", "100", ")", "\n", "return", "time_str", "(", "time_left", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.timehelper.time_str": [[26, 42], ["divmod", "divmod", "divmod", "int", "int", "int", "int", "timehelper.time_left", "timehelper.time_left"], "function", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.timehelper.time_left", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.timehelper.time_left"], ["", "def", "time_str", "(", "s", ")", ":", "\n", "    ", "\"\"\"\n    Convert seconds to a nicer string showing days, hours, minutes and seconds\n    \"\"\"", "\n", "days", ",", "remainder", "=", "divmod", "(", "s", ",", "60", "*", "60", "*", "24", ")", "\n", "hours", ",", "remainder", "=", "divmod", "(", "remainder", ",", "60", "*", "60", ")", "\n", "minutes", ",", "seconds", "=", "divmod", "(", "remainder", ",", "60", ")", "\n", "string", "=", "\"\"", "\n", "if", "days", ">", "0", ":", "\n", "        ", "string", "+=", "\"{:d} days, \"", ".", "format", "(", "int", "(", "days", ")", ")", "\n", "", "if", "hours", ">", "0", ":", "\n", "        ", "string", "+=", "\"{:d} hours, \"", ".", "format", "(", "int", "(", "hours", ")", ")", "\n", "", "if", "minutes", ">", "0", ":", "\n", "        ", "string", "+=", "\"{:d} minutes, \"", ".", "format", "(", "int", "(", "minutes", ")", ")", "\n", "", "string", "+=", "\"{:d} seconds\"", ".", "format", "(", "int", "(", "seconds", ")", ")", "\n", "return", "string", "\n", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.transforms.Transform.transform": [[5, 7], ["None"], "methods", ["None"], ["    ", "def", "transform", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.transforms.Transform.infer_output_info": [[8, 10], ["None"], "methods", ["None"], ["", "def", "infer_output_info", "(", "self", ",", "vshape_in", ",", "dtype_in", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.transforms.OneHot.__init__": [[12, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "out_dim", ")", ":", "\n", "        ", "self", ".", "out_dim", "=", "out_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.transforms.OneHot.transform": [[15, 19], ["tensor.new().zero_", "tensor.new().zero_.scatter_", "tensor.new().zero_.float", "tensor.long", "tensor.new"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "y_onehot", "=", "tensor", ".", "new", "(", "*", "tensor", ".", "shape", "[", ":", "-", "1", "]", ",", "self", ".", "out_dim", ")", ".", "zero_", "(", ")", "\n", "y_onehot", ".", "scatter_", "(", "-", "1", ",", "tensor", ".", "long", "(", ")", ",", "1", ")", "\n", "return", "y_onehot", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.transforms.OneHot.infer_output_info": [[20, 22], ["None"], "methods", ["None"], ["", "def", "infer_output_info", "(", "self", ",", "vshape_in", ",", "dtype_in", ")", ":", "\n", "        ", "return", "(", "self", ".", "out_dim", ",", ")", ",", "th", ".", "float32", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.action_selectors.MultinomialActionSelector.__init__": [[12, 19], ["epsilon_schedules.DecayThenFlatSchedule", "action_selectors.MultinomialActionSelector.schedule.eval", "getattr"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.epsilon_schedules.DecayThenFlatSchedule.eval"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "schedule", "=", "DecayThenFlatSchedule", "(", "args", ".", "epsilon_start", ",", "args", ".", "epsilon_finish", ",", "args", ".", "epsilon_anneal_time", ",", "\n", "decay", "=", "\"linear\"", ")", "\n", "self", ".", "epsilon", "=", "self", ".", "schedule", ".", "eval", "(", "0", ")", "\n", "self", ".", "test_greedy", "=", "getattr", "(", "args", ",", "\"test_greedy\"", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.action_selectors.MultinomialActionSelector.select_action": [[20, 32], ["agent_inputs.clone", "action_selectors.MultinomialActionSelector.schedule.eval", "torch.distributions.Categorical().sample().long", "agent_inputs.clone.max", "torch.distributions.Categorical().sample", "torch.distributions.Categorical"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.epsilon_schedules.DecayThenFlatSchedule.eval", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample"], ["", "def", "select_action", "(", "self", ",", "agent_inputs", ",", "avail_actions", ",", "t_env", ",", "test_mode", "=", "False", ")", ":", "\n", "        ", "masked_policies", "=", "agent_inputs", ".", "clone", "(", ")", "\n", "masked_policies", "[", "avail_actions", "==", "0.0", "]", "=", "0.0", "\n", "\n", "self", ".", "epsilon", "=", "self", ".", "schedule", ".", "eval", "(", "t_env", ")", "\n", "\n", "if", "test_mode", "and", "self", ".", "test_greedy", ":", "\n", "            ", "picked_actions", "=", "masked_policies", ".", "max", "(", "dim", "=", "2", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "picked_actions", "=", "Categorical", "(", "masked_policies", ")", ".", "sample", "(", ")", ".", "long", "(", ")", "\n", "\n", "", "return", "picked_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.action_selectors.EpsilonGreedyActionSelector.__init__": [[38, 43], ["epsilon_schedules.DecayThenFlatSchedule", "action_selectors.EpsilonGreedyActionSelector.schedule.eval"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.epsilon_schedules.DecayThenFlatSchedule.eval"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "schedule", "=", "DecayThenFlatSchedule", "(", "args", ".", "epsilon_start", ",", "args", ".", "epsilon_finish", ",", "args", ".", "epsilon_anneal_time", ",", "decay", "=", "\"linear\"", ")", "\n", "self", ".", "epsilon", "=", "self", ".", "schedule", ".", "eval", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.action_selectors.EpsilonGreedyActionSelector.select_action": [[44, 63], ["action_selectors.EpsilonGreedyActionSelector.schedule.eval", "agent_inputs.clone", "torch.rand_like", "torch.distributions.Categorical().sample().long", "float", "torch.distributions.Categorical().sample", "agent_inputs.clone.max", "torch.distributions.Categorical", "avail_actions.float"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.epsilon_schedules.DecayThenFlatSchedule.eval", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample"], ["", "def", "select_action", "(", "self", ",", "agent_inputs", ",", "avail_actions", ",", "t_env", ",", "test_mode", "=", "False", ")", ":", "\n", "\n", "# Assuming agent_inputs is a batch of Q-Values for each agent bav", "\n", "        ", "self", ".", "epsilon", "=", "self", ".", "schedule", ".", "eval", "(", "t_env", ")", "\n", "\n", "if", "test_mode", ":", "\n", "# Greedy action selection only", "\n", "            ", "self", ".", "epsilon", "=", "0.0", "\n", "\n", "# mask actions that are excluded from selection", "\n", "", "masked_q_values", "=", "agent_inputs", ".", "clone", "(", ")", "\n", "masked_q_values", "[", "avail_actions", "==", "0.0", "]", "=", "-", "float", "(", "\"inf\"", ")", "# should never be selected!", "\n", "\n", "random_numbers", "=", "th", ".", "rand_like", "(", "agent_inputs", "[", ":", ",", ":", ",", "0", "]", ")", "\n", "pick_random", "=", "(", "random_numbers", "<", "self", ".", "epsilon", ")", ".", "long", "(", ")", "\n", "random_actions", "=", "Categorical", "(", "avail_actions", ".", "float", "(", ")", ")", ".", "sample", "(", ")", ".", "long", "(", ")", "\n", "\n", "picked_actions", "=", "pick_random", "*", "random_actions", "+", "(", "1", "-", "pick_random", ")", "*", "masked_q_values", ".", "max", "(", "dim", "=", "2", ")", "[", "1", "]", "\n", "return", "picked_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.epsilon_schedules.DecayThenFlatSchedule.__init__": [[5, 19], ["numpy.log"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.StatsAggregator.log"], ["    ", "def", "__init__", "(", "self", ",", "\n", "start", ",", "\n", "finish", ",", "\n", "time_length", ",", "\n", "decay", "=", "\"exp\"", ")", ":", "\n", "\n", "        ", "self", ".", "start", "=", "start", "\n", "self", ".", "finish", "=", "finish", "\n", "self", ".", "time_length", "=", "time_length", "\n", "self", ".", "delta", "=", "(", "self", ".", "start", "-", "self", ".", "finish", ")", "/", "self", ".", "time_length", "\n", "self", ".", "decay", "=", "decay", "\n", "\n", "if", "self", ".", "decay", "in", "[", "\"exp\"", "]", ":", "\n", "            ", "self", ".", "exp_scaling", "=", "(", "-", "1", ")", "*", "self", ".", "time_length", "/", "np", ".", "log", "(", "self", ".", "finish", ")", "if", "self", ".", "finish", ">", "0", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.epsilon_schedules.DecayThenFlatSchedule.eval": [[20, 25], ["max", "min", "max", "numpy.exp"], "methods", ["None"], ["", "", "def", "eval", "(", "self", ",", "T", ")", ":", "\n", "        ", "if", "self", ".", "decay", "in", "[", "\"linear\"", "]", ":", "\n", "            ", "return", "max", "(", "self", ".", "finish", ",", "self", ".", "start", "-", "self", ".", "delta", "*", "T", ")", "\n", "", "elif", "self", ".", "decay", "in", "[", "\"exp\"", "]", ":", "\n", "            ", "return", "min", "(", "self", ".", "start", ",", "max", "(", "self", ".", "finish", ",", "np", ".", "exp", "(", "-", "T", "/", "self", ".", "exp_scaling", ")", ")", ")", "\n", "", "", "pass", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.__init__": [[7, 29], ["scheme.copy", "types.SimpleNamespace", "episode_buffer.EpisodeBatch._setup_data"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._setup_data"], ["    ", "def", "__init__", "(", "self", ",", "\n", "scheme", ",", "\n", "groups", ",", "\n", "batch_size", ",", "\n", "max_seq_length", ",", "\n", "data", "=", "None", ",", "\n", "preprocess", "=", "None", ",", "\n", "device", "=", "\"cpu\"", ")", ":", "\n", "        ", "self", ".", "scheme", "=", "scheme", ".", "copy", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "max_seq_length", "=", "max_seq_length", "\n", "self", ".", "preprocess", "=", "{", "}", "if", "preprocess", "is", "None", "else", "preprocess", "\n", "self", ".", "device", "=", "device", "\n", "\n", "if", "data", "is", "not", "None", ":", "\n", "            ", "self", ".", "data", "=", "data", "\n", "", "else", ":", "\n", "            ", "self", ".", "data", "=", "SN", "(", ")", "\n", "self", ".", "data", ".", "transition_data", "=", "{", "}", "\n", "self", ".", "data", ".", "episode_data", "=", "{", "}", "\n", "self", ".", "_setup_data", "(", "self", ".", "scheme", ",", "self", ".", "groups", ",", "batch_size", ",", "max_seq_length", ",", "self", ".", "preprocess", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._setup_data": [[30, 76], ["scheme.update", "scheme.items", "field_info.get", "field_info.get", "field_info.get", "isinstance", "torch.zeros", "torch.zeros", "transform.infer_output_info"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.transforms.OneHot.infer_output_info"], ["", "", "def", "_setup_data", "(", "self", ",", "scheme", ",", "groups", ",", "batch_size", ",", "max_seq_length", ",", "preprocess", ")", ":", "\n", "        ", "if", "preprocess", "is", "not", "None", ":", "\n", "            ", "for", "k", "in", "preprocess", ":", "\n", "                ", "assert", "k", "in", "scheme", "\n", "new_k", "=", "preprocess", "[", "k", "]", "[", "0", "]", "\n", "transforms", "=", "preprocess", "[", "k", "]", "[", "1", "]", "\n", "\n", "vshape", "=", "self", ".", "scheme", "[", "k", "]", "[", "\"vshape\"", "]", "\n", "dtype", "=", "self", ".", "scheme", "[", "k", "]", "[", "\"dtype\"", "]", "\n", "for", "transform", "in", "transforms", ":", "\n", "                    ", "vshape", ",", "dtype", "=", "transform", ".", "infer_output_info", "(", "vshape", ",", "dtype", ")", "\n", "\n", "", "self", ".", "scheme", "[", "new_k", "]", "=", "{", "\n", "\"vshape\"", ":", "vshape", ",", "\n", "\"dtype\"", ":", "dtype", "\n", "}", "\n", "if", "\"group\"", "in", "self", ".", "scheme", "[", "k", "]", ":", "\n", "                    ", "self", ".", "scheme", "[", "new_k", "]", "[", "\"group\"", "]", "=", "self", ".", "scheme", "[", "k", "]", "[", "\"group\"", "]", "\n", "", "if", "\"episode_const\"", "in", "self", ".", "scheme", "[", "k", "]", ":", "\n", "                    ", "self", ".", "scheme", "[", "new_k", "]", "[", "\"episode_const\"", "]", "=", "self", ".", "scheme", "[", "k", "]", "[", "\"episode_const\"", "]", "\n", "\n", "", "", "", "assert", "\"filled\"", "not", "in", "scheme", ",", "'\"filled\" is a reserved key for masking.'", "\n", "scheme", ".", "update", "(", "{", "\n", "\"filled\"", ":", "{", "\"vshape\"", ":", "(", "1", ",", ")", ",", "\"dtype\"", ":", "th", ".", "long", "}", ",", "\n", "}", ")", "\n", "\n", "for", "field_key", ",", "field_info", "in", "scheme", ".", "items", "(", ")", ":", "\n", "            ", "assert", "\"vshape\"", "in", "field_info", ",", "\"Scheme must define vshape for {}\"", ".", "format", "(", "field_key", ")", "\n", "vshape", "=", "field_info", "[", "\"vshape\"", "]", "\n", "episode_const", "=", "field_info", ".", "get", "(", "\"episode_const\"", ",", "False", ")", "\n", "group", "=", "field_info", ".", "get", "(", "\"group\"", ",", "None", ")", "\n", "dtype", "=", "field_info", ".", "get", "(", "\"dtype\"", ",", "th", ".", "float32", ")", "\n", "\n", "if", "isinstance", "(", "vshape", ",", "int", ")", ":", "\n", "                ", "vshape", "=", "(", "vshape", ",", ")", "\n", "\n", "", "if", "group", ":", "\n", "                ", "assert", "group", "in", "groups", ",", "\"Group {} must have its number of members defined in _groups_\"", ".", "format", "(", "group", ")", "\n", "shape", "=", "(", "groups", "[", "group", "]", ",", "*", "vshape", ")", "\n", "", "else", ":", "\n", "                ", "shape", "=", "vshape", "\n", "\n", "", "if", "episode_const", ":", "\n", "                ", "self", ".", "data", ".", "episode_data", "[", "field_key", "]", "=", "th", ".", "zeros", "(", "(", "batch_size", ",", "*", "shape", ")", ",", "dtype", "=", "dtype", ",", "device", "=", "self", ".", "device", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "data", ".", "transition_data", "[", "field_key", "]", "=", "th", ".", "zeros", "(", "(", "batch_size", ",", "max_seq_length", ",", "*", "shape", ")", ",", "dtype", "=", "dtype", ",", "device", "=", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.extend": [[77, 79], ["episode_buffer.EpisodeBatch._setup_data"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._setup_data"], ["", "", "", "def", "extend", "(", "self", ",", "scheme", ",", "groups", "=", "None", ")", ":", "\n", "        ", "self", ".", "_setup_data", "(", "scheme", ",", "self", ".", "groups", "if", "groups", "is", "None", "else", "groups", ",", "self", ".", "batch_size", ",", "self", ".", "max_seq_length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to": [[80, 86], ["episode_buffer.EpisodeBatch.data.transition_data.items", "episode_buffer.EpisodeBatch.data.episode_data.items", "v.to", "v.to"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to"], ["", "def", "to", "(", "self", ",", "device", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "self", ".", "data", ".", "transition_data", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "data", ".", "transition_data", "[", "k", "]", "=", "v", ".", "to", "(", "device", ")", "\n", "", "for", "k", ",", "v", "in", "self", ".", "data", ".", "episode_data", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "data", ".", "episode_data", "[", "k", "]", "=", "v", ".", "to", "(", "device", ")", "\n", "", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update": [[87, 113], ["slice", "slice", "episode_buffer.EpisodeBatch._parse_slices", "data.items", "episode_buffer.EpisodeBatch.scheme[].get", "torch.tensor", "episode_buffer.EpisodeBatch._check_safe_view", "transform.transform.view_as", "transform.transform.view_as", "KeyError", "transform.transform"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._parse_slices", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._check_safe_view", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.transforms.OneHot.transform"], ["", "def", "update", "(", "self", ",", "data", ",", "bs", "=", "slice", "(", "None", ")", ",", "ts", "=", "slice", "(", "None", ")", ",", "mark_filled", "=", "True", ")", ":", "\n", "        ", "slices", "=", "self", ".", "_parse_slices", "(", "(", "bs", ",", "ts", ")", ")", "\n", "for", "k", ",", "v", "in", "data", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "self", ".", "data", ".", "transition_data", ":", "\n", "                ", "target", "=", "self", ".", "data", ".", "transition_data", "\n", "if", "mark_filled", ":", "\n", "                    ", "target", "[", "\"filled\"", "]", "[", "slices", "]", "=", "1", "\n", "mark_filled", "=", "False", "\n", "", "_slices", "=", "slices", "\n", "", "elif", "k", "in", "self", ".", "data", ".", "episode_data", ":", "\n", "                ", "target", "=", "self", ".", "data", ".", "episode_data", "\n", "_slices", "=", "slices", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "raise", "KeyError", "(", "\"{} not found in transition or episode data\"", ".", "format", "(", "k", ")", ")", "\n", "\n", "", "dtype", "=", "self", ".", "scheme", "[", "k", "]", ".", "get", "(", "\"dtype\"", ",", "th", ".", "float32", ")", "\n", "v", "=", "th", ".", "tensor", "(", "v", ",", "dtype", "=", "dtype", ",", "device", "=", "self", ".", "device", ")", "\n", "self", ".", "_check_safe_view", "(", "v", ",", "target", "[", "k", "]", "[", "_slices", "]", ")", "\n", "target", "[", "k", "]", "[", "_slices", "]", "=", "v", ".", "view_as", "(", "target", "[", "k", "]", "[", "_slices", "]", ")", "\n", "\n", "if", "k", "in", "self", ".", "preprocess", ":", "\n", "                ", "new_k", "=", "self", ".", "preprocess", "[", "k", "]", "[", "0", "]", "\n", "v", "=", "target", "[", "k", "]", "[", "_slices", "]", "\n", "for", "transform", "in", "self", ".", "preprocess", "[", "k", "]", "[", "1", "]", ":", "\n", "                    ", "v", "=", "transform", ".", "transform", "(", "v", ")", "\n", "", "target", "[", "new_k", "]", "[", "_slices", "]", "=", "v", ".", "view_as", "(", "target", "[", "new_k", "]", "[", "_slices", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._check_safe_view": [[114, 122], ["len", "ValueError"], "methods", ["None"], ["", "", "", "def", "_check_safe_view", "(", "self", ",", "v", ",", "dest", ")", ":", "\n", "        ", "idx", "=", "len", "(", "v", ".", "shape", ")", "-", "1", "\n", "for", "s", "in", "dest", ".", "shape", "[", ":", ":", "-", "1", "]", ":", "\n", "            ", "if", "v", ".", "shape", "[", "idx", "]", "!=", "s", ":", "\n", "                ", "if", "s", "!=", "1", ":", "\n", "                    ", "raise", "ValueError", "(", "\"Unsafe reshape of {} to {}\"", ".", "format", "(", "v", ".", "shape", ",", "dest", ".", "shape", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "idx", "-=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.__getitem__": [[123, 160], ["isinstance", "isinstance", "all", "episode_buffer.EpisodeBatch._new_data_sn", "episode_buffer.EpisodeBatch", "episode_buffer.EpisodeBatch._parse_slices", "episode_buffer.EpisodeBatch._new_data_sn", "episode_buffer.EpisodeBatch.data.transition_data.items", "episode_buffer.EpisodeBatch.data.episode_data.items", "episode_buffer.EpisodeBatch._get_num_items", "episode_buffer.EpisodeBatch._get_num_items", "episode_buffer.EpisodeBatch", "isinstance", "KeyError"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._new_data_sn", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._parse_slices", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._new_data_sn", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._get_num_items", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._get_num_items"], ["", "", "", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "isinstance", "(", "item", ",", "str", ")", ":", "\n", "            ", "if", "item", "in", "self", ".", "data", ".", "episode_data", ":", "\n", "                ", "return", "self", ".", "data", ".", "episode_data", "[", "item", "]", "\n", "", "elif", "item", "in", "self", ".", "data", ".", "transition_data", ":", "\n", "                ", "return", "self", ".", "data", ".", "transition_data", "[", "item", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "\n", "", "", "elif", "isinstance", "(", "item", ",", "tuple", ")", "and", "all", "(", "[", "isinstance", "(", "it", ",", "str", ")", "for", "it", "in", "item", "]", ")", ":", "\n", "            ", "new_data", "=", "self", ".", "_new_data_sn", "(", ")", "\n", "for", "key", "in", "item", ":", "\n", "                ", "if", "key", "in", "self", ".", "data", ".", "transition_data", ":", "\n", "                    ", "new_data", ".", "transition_data", "[", "key", "]", "=", "self", ".", "data", ".", "transition_data", "[", "key", "]", "\n", "", "elif", "key", "in", "self", ".", "data", ".", "episode_data", ":", "\n", "                    ", "new_data", ".", "episode_data", "[", "key", "]", "=", "self", ".", "data", ".", "episode_data", "[", "key", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "KeyError", "(", "\"Unrecognised key {}\"", ".", "format", "(", "key", ")", ")", "\n", "\n", "# Update the scheme to only have the requested keys", "\n", "", "", "new_scheme", "=", "{", "key", ":", "self", ".", "scheme", "[", "key", "]", "for", "key", "in", "item", "}", "\n", "new_groups", "=", "{", "self", ".", "scheme", "[", "key", "]", "[", "\"group\"", "]", ":", "self", ".", "groups", "[", "self", ".", "scheme", "[", "key", "]", "[", "\"group\"", "]", "]", "\n", "for", "key", "in", "item", "if", "\"group\"", "in", "self", ".", "scheme", "[", "key", "]", "}", "\n", "ret", "=", "EpisodeBatch", "(", "new_scheme", ",", "new_groups", ",", "self", ".", "batch_size", ",", "self", ".", "max_seq_length", ",", "data", "=", "new_data", ",", "device", "=", "self", ".", "device", ")", "\n", "return", "ret", "\n", "", "else", ":", "\n", "            ", "item", "=", "self", ".", "_parse_slices", "(", "item", ")", "\n", "new_data", "=", "self", ".", "_new_data_sn", "(", ")", "\n", "for", "k", ",", "v", "in", "self", ".", "data", ".", "transition_data", ".", "items", "(", ")", ":", "\n", "                ", "new_data", ".", "transition_data", "[", "k", "]", "=", "v", "[", "item", "]", "\n", "", "for", "k", ",", "v", "in", "self", ".", "data", ".", "episode_data", ".", "items", "(", ")", ":", "\n", "                ", "new_data", ".", "episode_data", "[", "k", "]", "=", "v", "[", "item", "[", "0", "]", "]", "\n", "\n", "", "ret_bs", "=", "self", ".", "_get_num_items", "(", "item", "[", "0", "]", ",", "self", ".", "batch_size", ")", "\n", "ret_max_t", "=", "self", ".", "_get_num_items", "(", "item", "[", "1", "]", ",", "self", ".", "max_seq_length", ")", "\n", "\n", "ret", "=", "EpisodeBatch", "(", "self", ".", "scheme", ",", "self", ".", "groups", ",", "ret_bs", ",", "ret_max_t", ",", "data", "=", "new_data", ",", "device", "=", "self", ".", "device", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._get_num_items": [[161, 167], ["isinstance", "isinstance", "len", "isinstance", "indexing_item.indices"], "methods", ["None"], ["", "", "def", "_get_num_items", "(", "self", ",", "indexing_item", ",", "max_size", ")", ":", "\n", "        ", "if", "isinstance", "(", "indexing_item", ",", "list", ")", "or", "isinstance", "(", "indexing_item", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "return", "len", "(", "indexing_item", ")", "\n", "", "elif", "isinstance", "(", "indexing_item", ",", "slice", ")", ":", "\n", "            ", "_range", "=", "indexing_item", ".", "indices", "(", "max_size", ")", "\n", "return", "1", "+", "(", "_range", "[", "1", "]", "-", "_range", "[", "0", "]", "-", "1", ")", "//", "_range", "[", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._new_data_sn": [[168, 173], ["types.SimpleNamespace"], "methods", ["None"], ["", "", "def", "_new_data_sn", "(", "self", ")", ":", "\n", "        ", "new_data", "=", "SN", "(", ")", "\n", "new_data", ".", "transition_data", "=", "{", "}", "\n", "new_data", ".", "episode_data", "=", "{", "}", "\n", "return", "new_data", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch._parse_slices": [[174, 195], ["isinstance", "isinstance", "isinstance", "isinstance", "IndexError", "isinstance", "slice", "parsed.append", "parsed.append", "slice"], "methods", ["None"], ["", "def", "_parse_slices", "(", "self", ",", "items", ")", ":", "\n", "        ", "parsed", "=", "[", "]", "\n", "# Only batch slice given, add full time slice", "\n", "if", "(", "isinstance", "(", "items", ",", "slice", ")", "# slice a:b", "\n", "or", "isinstance", "(", "items", ",", "int", ")", "# int i", "\n", "or", "(", "isinstance", "(", "items", ",", "(", "list", ",", "np", ".", "ndarray", ",", "th", ".", "LongTensor", ",", "th", ".", "cuda", ".", "LongTensor", ")", ")", ")", "# [a,b,c]", "\n", ")", ":", "\n", "            ", "items", "=", "(", "items", ",", "slice", "(", "None", ")", ")", "\n", "\n", "# Need the time indexing to be contiguous", "\n", "", "if", "isinstance", "(", "items", "[", "1", "]", ",", "list", ")", ":", "\n", "            ", "raise", "IndexError", "(", "\"Indexing across Time must be contiguous\"", ")", "\n", "\n", "", "for", "item", "in", "items", ":", "\n", "            ", "if", "isinstance", "(", "item", ",", "int", ")", ":", "\n", "# Convert single indices to slices", "\n", "                ", "parsed", ".", "append", "(", "slice", "(", "item", ",", "item", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "# Leave slices and lists as is", "\n", "                ", "parsed", ".", "append", "(", "item", ")", "\n", "", "", "return", "parsed", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.max_t_filled": [[196, 198], ["torch.sum().max", "torch.sum"], "methods", ["None"], ["", "def", "max_t_filled", "(", "self", ")", ":", "\n", "        ", "return", "th", ".", "sum", "(", "self", ".", "data", ".", "transition_data", "[", "\"filled\"", "]", ",", "1", ")", ".", "max", "(", "0", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.__repr__": [[199, 204], ["episode_buffer.EpisodeBatch.scheme.keys", "episode_buffer.EpisodeBatch.groups.keys"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"EpisodeBatch. Batch Size:{} Max_seq_len:{} Keys:{} Groups:{}\"", ".", "format", "(", "self", ".", "batch_size", ",", "\n", "self", ".", "max_seq_length", ",", "\n", "self", ".", "scheme", ".", "keys", "(", ")", ",", "\n", "self", ".", "groups", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.ReplayBuffer.__init__": [[206, 211], ["episode_buffer.EpisodeBatch.__init__"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scheme", ",", "groups", ",", "buffer_size", ",", "max_seq_length", ",", "preprocess", "=", "None", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "        ", "super", "(", "ReplayBuffer", ",", "self", ")", ".", "__init__", "(", "scheme", ",", "groups", ",", "buffer_size", ",", "max_seq_length", ",", "preprocess", "=", "preprocess", ",", "device", "=", "device", ")", "\n", "self", ".", "buffer_size", "=", "buffer_size", "# same as self.batch_size but more explicit", "\n", "self", ".", "buffer_index", "=", "0", "\n", "self", ".", "episodes_in_buffer", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.ReplayBuffer.insert_episode_batch": [[212, 228], ["episode_buffer.ReplayBuffer.update", "episode_buffer.ReplayBuffer.update", "max", "episode_buffer.ReplayBuffer.insert_episode_batch", "episode_buffer.ReplayBuffer.insert_episode_batch", "slice", "slice", "slice"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.ReplayBuffer.insert_episode_batch", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.ReplayBuffer.insert_episode_batch"], ["", "def", "insert_episode_batch", "(", "self", ",", "ep_batch", ")", ":", "\n", "        ", "if", "self", ".", "buffer_index", "+", "ep_batch", ".", "batch_size", "<=", "self", ".", "buffer_size", ":", "\n", "            ", "self", ".", "update", "(", "ep_batch", ".", "data", ".", "transition_data", ",", "\n", "slice", "(", "self", ".", "buffer_index", ",", "self", ".", "buffer_index", "+", "ep_batch", ".", "batch_size", ")", ",", "\n", "slice", "(", "0", ",", "ep_batch", ".", "max_seq_length", ")", ",", "\n", "mark_filled", "=", "False", ")", "\n", "self", ".", "update", "(", "ep_batch", ".", "data", ".", "episode_data", ",", "\n", "slice", "(", "self", ".", "buffer_index", ",", "self", ".", "buffer_index", "+", "ep_batch", ".", "batch_size", ")", ")", "\n", "self", ".", "buffer_index", "=", "(", "self", ".", "buffer_index", "+", "ep_batch", ".", "batch_size", ")", "\n", "self", ".", "episodes_in_buffer", "=", "max", "(", "self", ".", "episodes_in_buffer", ",", "self", ".", "buffer_index", ")", "\n", "self", ".", "buffer_index", "=", "self", ".", "buffer_index", "%", "self", ".", "buffer_size", "\n", "assert", "self", ".", "buffer_index", "<", "self", ".", "buffer_size", "\n", "", "else", ":", "\n", "            ", "buffer_left", "=", "self", ".", "buffer_size", "-", "self", ".", "buffer_index", "\n", "self", ".", "insert_episode_batch", "(", "ep_batch", "[", "0", ":", "buffer_left", ",", ":", "]", ")", "\n", "self", ".", "insert_episode_batch", "(", "ep_batch", "[", "buffer_left", ":", ",", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.ReplayBuffer.can_sample": [[229, 231], ["None"], "methods", ["None"], ["", "", "def", "can_sample", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "return", "self", ".", "episodes_in_buffer", ">=", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.ReplayBuffer.sample": [[232, 240], ["episode_buffer.ReplayBuffer.can_sample", "numpy.random.choice"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.ReplayBuffer.can_sample"], ["", "def", "sample", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "assert", "self", ".", "can_sample", "(", "batch_size", ")", "\n", "if", "self", ".", "episodes_in_buffer", "==", "batch_size", ":", "\n", "            ", "return", "self", "[", ":", "batch_size", "]", "\n", "", "else", ":", "\n", "# Uniform sampling only atm", "\n", "            ", "ep_ids", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "episodes_in_buffer", ",", "batch_size", ",", "replace", "=", "False", ")", "\n", "return", "self", "[", "ep_ids", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.ReplayBuffer.__repr__": [[241, 246], ["episode_buffer.ReplayBuffer.scheme.keys", "episode_buffer.ReplayBuffer.groups.keys"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"ReplayBuffer. {}/{} episodes. Keys:{} Groups:{}\"", ".", "format", "(", "self", ".", "episodes_in_buffer", ",", "\n", "self", ".", "buffer_size", ",", "\n", "self", ".", "scheme", ".", "keys", "(", ")", ",", "\n", "self", ".", "groups", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.noise_q_learner.QLearner.__init__": [[12, 49], ["list", "torch.nn.CrossEntropyLoss", "torch.optim.RMSprop", "copy.deepcopy", "mac.parameters", "list", "copy.deepcopy", "numpy.prod", "noise_q_learner.RNNAggregator", "noise_q_learner.Discrim", "list", "list", "noise_q_learner.Discrim", "list", "modules.mixers.vdn.VDNMixer", "noise_q_learner.QLearner.mixer.parameters", "noise_q_learner.QLearner.discrim.parameters", "noise_q_learner.QLearner.rnn_agg.parameters", "noise_q_learner.QLearner.discrim.parameters", "modules.mixers.noise_mix.QMixer", "ValueError"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters"], ["    ", "def", "__init__", "(", "self", ",", "mac", ",", "scheme", ",", "logger", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "mac", "=", "mac", "\n", "self", ".", "logger", "=", "logger", "\n", "\n", "self", ".", "params", "=", "list", "(", "mac", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "last_target_update_episode", "=", "0", "\n", "\n", "self", ".", "mixer", "=", "None", "\n", "if", "args", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "if", "args", ".", "mixer", "==", "\"vdn\"", ":", "\n", "                ", "self", ".", "mixer", "=", "VDNMixer", "(", ")", "\n", "", "elif", "args", ".", "mixer", "==", "\"qmix\"", ":", "\n", "                ", "self", ".", "mixer", "=", "NoiseQMixer", "(", "args", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"Mixer {} not recognised.\"", ".", "format", "(", "args", ".", "mixer", ")", ")", "\n", "", "self", ".", "params", "+=", "list", "(", "self", ".", "mixer", ".", "parameters", "(", ")", ")", "\n", "self", ".", "target_mixer", "=", "copy", ".", "deepcopy", "(", "self", ".", "mixer", ")", "\n", "\n", "", "discrim_input", "=", "np", ".", "prod", "(", "self", ".", "args", ".", "state_shape", ")", "+", "self", ".", "args", ".", "n_agents", "*", "self", ".", "args", ".", "n_actions", "\n", "\n", "if", "self", ".", "args", ".", "rnn_discrim", ":", "\n", "            ", "self", ".", "rnn_agg", "=", "RNNAggregator", "(", "discrim_input", ",", "args", ")", "\n", "self", ".", "discrim", "=", "Discrim", "(", "args", ".", "rnn_agg_size", ",", "self", ".", "args", ".", "noise_dim", ",", "args", ")", "\n", "self", ".", "params", "+=", "list", "(", "self", ".", "discrim", ".", "parameters", "(", ")", ")", "\n", "self", ".", "params", "+=", "list", "(", "self", ".", "rnn_agg", ".", "parameters", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "discrim", "=", "Discrim", "(", "discrim_input", ",", "self", ".", "args", ".", "noise_dim", ",", "args", ")", "\n", "self", ".", "params", "+=", "list", "(", "self", ".", "discrim", ".", "parameters", "(", ")", ")", "\n", "", "self", ".", "discrim_loss", "=", "th", ".", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "\"none\"", ")", "\n", "\n", "self", ".", "optimiser", "=", "RMSprop", "(", "params", "=", "self", ".", "params", ",", "lr", "=", "args", ".", "lr", ",", "alpha", "=", "args", ".", "optim_alpha", ",", "eps", "=", "args", ".", "optim_eps", ")", "\n", "\n", "self", ".", "target_mac", "=", "copy", ".", "deepcopy", "(", "mac", ")", "\n", "\n", "self", ".", "log_stats_t", "=", "-", "self", ".", "args", ".", "learner_log_interval", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.noise_q_learner.QLearner.train": [[50, 183], ["[].float", "[].float", "[].unsqueeze().repeat", "noise_q_learner.QLearner.mac.init_hidden", "range", "torch.stack", "torch.gather().squeeze", "noise_q_learner.QLearner.target_mac.init_hidden", "range", "torch.stack", "torch.nn.functional.softmax", "torch.nn.functional.softmax.reshape", "torch.cat", "noise_q_learner.QLearner.discrim", "[].unsqueeze().repeat().reshape", "noise_q_learner.QLearner.discrim_loss", "noise_q_learner.QLearner.logger.log_stat", "mask.expand_as.expand_as.expand_as", "noise_q_learner.QLearner.optimiser.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_norm_", "noise_q_learner.QLearner.optimiser.step", "noise_q_learner.QLearner.mac.forward", "torch.stack.append", "noise_q_learner.QLearner.target_mac.forward", "torch.stack.append", "torch.gather().squeeze", "noise_q_learner.QLearner.mixer", "noise_q_learner.QLearner.target_mixer", "torch.zeros_like", "torch.zeros_like.scatter_", "torch.zeros().to", "torch.ones_like", "range", "torch.cat.reshape", "s_and_softa_reshaped.detach.detach.detach", "noise_q_learner.QLearner.mean", "noise_q_learner.QLearner.mean.item", "targets.detach", "mask.expand_as.expand_as.sum", "noise_q_learner.QLearner._update_targets", "noise_q_learner.QLearner.logger.log_stat", "noise_q_learner.QLearner.logger.log_stat", "mask.expand_as.expand_as.sum().item", "noise_q_learner.QLearner.logger.log_stat", "noise_q_learner.QLearner.logger.log_stat", "noise_q_learner.QLearner.logger.log_stat", "[].unsqueeze", "torch.gather", "mac_out[].max", "torch.stack.max", "torch.max", "noise_q_learner.QLearner.rnn_agg", "range", "[].unsqueeze().repeat", "mask.expand_as.expand_as.reshape", "masked_discrim_loss.sum", "mask.expand_as.expand_as.sum", "loss.item", "torch.gather", "torch.zeros", "noise_q_learner.QLearner.view_as", "mask.expand_as.expand_as.sum", "masked_td_error.abs().sum().item", "[].unsqueeze", "masked_td_error.abs().sum", "[].long().detach().max", "masked_td_error.abs", "[].long().detach", "[].long"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner._update_targets", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat"], ["", "def", "train", "(", "self", ",", "batch", ":", "EpisodeBatch", ",", "t_env", ":", "int", ",", "episode_num", ":", "int", ")", ":", "\n", "# Get the relevant quantities", "\n", "        ", "rewards", "=", "batch", "[", "\"reward\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "actions", "=", "batch", "[", "\"actions\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "terminated", "=", "batch", "[", "\"terminated\"", "]", "[", ":", ",", ":", "-", "1", "]", ".", "float", "(", ")", "\n", "mask", "=", "batch", "[", "\"filled\"", "]", "[", ":", ",", ":", "-", "1", "]", ".", "float", "(", ")", "\n", "mask", "[", ":", ",", "1", ":", "]", "=", "mask", "[", ":", ",", "1", ":", "]", "*", "(", "1", "-", "terminated", "[", ":", ",", ":", "-", "1", "]", ")", "\n", "avail_actions", "=", "batch", "[", "\"avail_actions\"", "]", "\n", "noise", "=", "batch", "[", "\"noise\"", "]", "[", ":", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "rewards", ".", "shape", "[", "1", "]", ",", "1", ")", "\n", "\n", "# Calculate estimated Q-Values", "\n", "mac_out", "=", "[", "]", "\n", "self", ".", "mac", ".", "init_hidden", "(", "batch", ".", "batch_size", ")", "\n", "for", "t", "in", "range", "(", "batch", ".", "max_seq_length", ")", ":", "\n", "            ", "agent_outs", "=", "self", ".", "mac", ".", "forward", "(", "batch", ",", "t", "=", "t", ")", "\n", "mac_out", ".", "append", "(", "agent_outs", ")", "\n", "", "mac_out", "=", "th", ".", "stack", "(", "mac_out", ",", "dim", "=", "1", ")", "# Concat over time", "\n", "\n", "# Pick the Q-Values for the actions taken by each agent", "\n", "chosen_action_qvals", "=", "th", ".", "gather", "(", "mac_out", "[", ":", ",", ":", "-", "1", "]", ",", "dim", "=", "3", ",", "index", "=", "actions", ")", ".", "squeeze", "(", "3", ")", "# Remove the last dim", "\n", "\n", "# Calculate the Q-Values necessary for the target", "\n", "target_mac_out", "=", "[", "]", "\n", "self", ".", "target_mac", ".", "init_hidden", "(", "batch", ".", "batch_size", ")", "\n", "for", "t", "in", "range", "(", "batch", ".", "max_seq_length", ")", ":", "\n", "            ", "target_agent_outs", "=", "self", ".", "target_mac", ".", "forward", "(", "batch", ",", "t", "=", "t", ")", "\n", "target_mac_out", ".", "append", "(", "target_agent_outs", ")", "\n", "\n", "# We don't need the first timesteps Q-Value estimate for calculating targets", "\n", "", "target_mac_out", "=", "th", ".", "stack", "(", "target_mac_out", "[", "1", ":", "]", ",", "dim", "=", "1", ")", "# Concat across time", "\n", "\n", "# Mask out unavailable actions", "\n", "target_mac_out", "[", "avail_actions", "[", ":", ",", "1", ":", "]", "==", "0", "]", "=", "-", "9999999", "# From OG deepmarl", "\n", "\n", "# Max over target Q-Values", "\n", "if", "self", ".", "args", ".", "double_q", ":", "\n", "# Get actions that maximise live Q (for double q-learning)", "\n", "            ", "mac_out", "[", "avail_actions", "==", "0", "]", "=", "-", "9999999", "\n", "cur_max_actions", "=", "mac_out", "[", ":", ",", "1", ":", "]", ".", "max", "(", "dim", "=", "3", ",", "keepdim", "=", "True", ")", "[", "1", "]", "\n", "target_max_qvals", "=", "th", ".", "gather", "(", "target_mac_out", ",", "3", ",", "cur_max_actions", ")", ".", "squeeze", "(", "3", ")", "\n", "", "else", ":", "\n", "            ", "target_max_qvals", "=", "target_mac_out", ".", "max", "(", "dim", "=", "3", ")", "[", "0", "]", "\n", "\n", "# Mix", "\n", "", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "chosen_action_qvals", "=", "self", ".", "mixer", "(", "chosen_action_qvals", ",", "batch", "[", "\"state\"", "]", "[", ":", ",", ":", "-", "1", "]", ",", "noise", ")", "\n", "target_max_qvals", "=", "self", ".", "target_mixer", "(", "target_max_qvals", ",", "batch", "[", "\"state\"", "]", "[", ":", ",", "1", ":", "]", ",", "noise", ")", "\n", "\n", "# Discriminator", "\n", "", "mac_out", "[", "avail_actions", "==", "0", "]", "=", "-", "9999999", "\n", "q_softmax_actions", "=", "th", ".", "nn", ".", "functional", ".", "softmax", "(", "mac_out", "[", ":", ",", ":", "-", "1", "]", ",", "dim", "=", "3", ")", "\n", "\n", "if", "self", ".", "args", ".", "hard_qs", ":", "\n", "            ", "maxs", "=", "th", ".", "max", "(", "mac_out", "[", ":", ",", ":", "-", "1", "]", ",", "dim", "=", "3", ",", "keepdim", "=", "True", ")", "[", "1", "]", "\n", "zeros", "=", "th", ".", "zeros_like", "(", "q_softmax_actions", ")", "\n", "zeros", ".", "scatter_", "(", "dim", "=", "3", ",", "index", "=", "maxs", ",", "value", "=", "1", ")", "\n", "q_softmax_actions", "=", "zeros", "\n", "\n", "", "q_softmax_agents", "=", "q_softmax_actions", ".", "reshape", "(", "q_softmax_actions", ".", "shape", "[", "0", "]", ",", "q_softmax_actions", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "\n", "states", "=", "batch", "[", "\"state\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "state_and_softactions", "=", "th", ".", "cat", "(", "[", "q_softmax_agents", ",", "states", "]", ",", "dim", "=", "2", ")", "\n", "\n", "if", "self", ".", "args", ".", "rnn_discrim", ":", "\n", "            ", "h_to_use", "=", "th", ".", "zeros", "(", "size", "=", "(", "batch", ".", "batch_size", ",", "self", ".", "args", ".", "rnn_agg_size", ")", ")", ".", "to", "(", "states", ".", "device", ")", "\n", "hs", "=", "th", ".", "ones_like", "(", "h_to_use", ")", "\n", "for", "t", "in", "range", "(", "batch", ".", "max_seq_length", "-", "1", ")", ":", "\n", "                ", "hs", "=", "self", ".", "rnn_agg", "(", "state_and_softactions", "[", ":", ",", "t", "]", ",", "hs", ")", "\n", "for", "b", "in", "range", "(", "batch", ".", "batch_size", ")", ":", "\n", "                    ", "if", "t", "==", "batch", ".", "max_seq_length", "-", "2", "or", "(", "mask", "[", "b", ",", "t", "]", "==", "1", "and", "mask", "[", "b", ",", "t", "+", "1", "]", "==", "0", ")", ":", "\n", "# This is the last timestep of the sequence", "\n", "                        ", "h_to_use", "[", "b", "]", "=", "hs", "[", "b", "]", "\n", "", "", "", "s_and_softa_reshaped", "=", "h_to_use", "\n", "", "else", ":", "\n", "            ", "s_and_softa_reshaped", "=", "state_and_softactions", ".", "reshape", "(", "-", "1", ",", "state_and_softactions", ".", "shape", "[", "-", "1", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "mi_intrinsic", ":", "\n", "            ", "s_and_softa_reshaped", "=", "s_and_softa_reshaped", ".", "detach", "(", ")", "\n", "\n", "", "discrim_prediction", "=", "self", ".", "discrim", "(", "s_and_softa_reshaped", ")", "\n", "\n", "# Cross-Entropy", "\n", "target_repeats", "=", "1", "\n", "if", "not", "self", ".", "args", ".", "rnn_discrim", ":", "\n", "            ", "target_repeats", "=", "q_softmax_actions", ".", "shape", "[", "1", "]", "\n", "", "discrim_target", "=", "batch", "[", "\"noise\"", "]", "[", ":", ",", "0", "]", ".", "long", "(", ")", ".", "detach", "(", ")", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "target_repeats", ")", ".", "reshape", "(", "-", "1", ")", "\n", "discrim_loss", "=", "self", ".", "discrim_loss", "(", "discrim_prediction", ",", "discrim_target", ")", "\n", "\n", "if", "self", ".", "args", ".", "rnn_discrim", ":", "\n", "            ", "averaged_discrim_loss", "=", "discrim_loss", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "            ", "masked_discrim_loss", "=", "discrim_loss", "*", "mask", ".", "reshape", "(", "-", "1", ")", "\n", "averaged_discrim_loss", "=", "masked_discrim_loss", ".", "sum", "(", ")", "/", "mask", ".", "sum", "(", ")", "\n", "", "self", ".", "logger", ".", "log_stat", "(", "\"discrim_loss\"", ",", "averaged_discrim_loss", ".", "item", "(", ")", ",", "t_env", ")", "\n", "\n", "\n", "# Calculate 1-step Q-Learning targets", "\n", "targets", "=", "rewards", "+", "self", ".", "args", ".", "gamma", "*", "(", "1", "-", "terminated", ")", "*", "target_max_qvals", "\n", "if", "self", ".", "args", ".", "mi_intrinsic", ":", "\n", "            ", "assert", "self", ".", "args", ".", "rnn_discrim", "is", "False", "\n", "targets", "=", "targets", "+", "self", ".", "args", ".", "mi_scaler", "*", "discrim_loss", ".", "view_as", "(", "rewards", ")", "\n", "\n", "# Td-error", "\n", "", "td_error", "=", "(", "chosen_action_qvals", "-", "targets", ".", "detach", "(", ")", ")", "\n", "\n", "mask", "=", "mask", ".", "expand_as", "(", "td_error", ")", "\n", "\n", "# 0-out the targets that came from padded data", "\n", "masked_td_error", "=", "td_error", "*", "mask", "\n", "\n", "# Normal L2 loss, take mean over actual data", "\n", "loss", "=", "(", "masked_td_error", "**", "2", ")", ".", "sum", "(", ")", "/", "mask", ".", "sum", "(", ")", "\n", "\n", "loss", "=", "loss", "+", "self", ".", "args", ".", "mi_loss", "*", "averaged_discrim_loss", "\n", "\n", "# Optimise", "\n", "self", ".", "optimiser", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "grad_norm", "=", "th", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "params", ",", "self", ".", "args", ".", "grad_norm_clip", ")", "\n", "self", ".", "optimiser", ".", "step", "(", ")", "\n", "\n", "if", "(", "episode_num", "-", "self", ".", "last_target_update_episode", ")", "/", "self", ".", "args", ".", "target_update_interval", ">=", "1.0", ":", "\n", "            ", "self", ".", "_update_targets", "(", ")", "\n", "self", ".", "last_target_update_episode", "=", "episode_num", "\n", "\n", "", "if", "t_env", "-", "self", ".", "log_stats_t", ">=", "self", ".", "args", ".", "learner_log_interval", ":", "\n", "            ", "self", ".", "logger", ".", "log_stat", "(", "\"loss\"", ",", "loss", ".", "item", "(", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"grad_norm\"", ",", "grad_norm", ",", "t_env", ")", "\n", "mask_elems", "=", "mask", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"td_error_abs\"", ",", "(", "masked_td_error", ".", "abs", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"q_taken_mean\"", ",", "(", "chosen_action_qvals", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "(", "mask_elems", "*", "self", ".", "args", ".", "n_agents", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"target_mean\"", ",", "(", "targets", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "(", "mask_elems", "*", "self", ".", "args", ".", "n_agents", ")", ",", "t_env", ")", "\n", "self", ".", "log_stats_t", "=", "t_env", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.noise_q_learner.QLearner._update_targets": [[184, 189], ["noise_q_learner.QLearner.target_mac.load_state", "noise_q_learner.QLearner.logger.console_logger.info", "noise_q_learner.QLearner.target_mixer.load_state_dict", "noise_q_learner.QLearner.mixer.state_dict"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_state"], ["", "", "def", "_update_targets", "(", "self", ")", ":", "\n", "        ", "self", ".", "target_mac", ".", "load_state", "(", "self", ".", "mac", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "self", ".", "target_mixer", ".", "load_state_dict", "(", "self", ".", "mixer", ".", "state_dict", "(", ")", ")", "\n", "", "self", ".", "logger", ".", "console_logger", ".", "info", "(", "\"Updated target network\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.noise_q_learner.QLearner.cuda": [[190, 199], ["noise_q_learner.QLearner.mac.cuda", "noise_q_learner.QLearner.target_mac.cuda", "noise_q_learner.QLearner.discrim.cuda", "noise_q_learner.QLearner.rnn_agg.cuda", "noise_q_learner.QLearner.mixer.cuda", "noise_q_learner.QLearner.target_mixer.cuda"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "self", ".", "mac", ".", "cuda", "(", ")", "\n", "self", ".", "target_mac", ".", "cuda", "(", ")", "\n", "self", ".", "discrim", ".", "cuda", "(", ")", "\n", "if", "self", ".", "args", ".", "rnn_discrim", ":", "\n", "            ", "self", ".", "rnn_agg", ".", "cuda", "(", ")", "\n", "", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "self", ".", "mixer", ".", "cuda", "(", ")", "\n", "self", ".", "target_mixer", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.noise_q_learner.QLearner.save_models": [[200, 205], ["noise_q_learner.QLearner.mac.save_models", "torch.save", "torch.save", "noise_q_learner.QLearner.optimiser.state_dict", "noise_q_learner.QLearner.mixer.state_dict"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.save_models"], ["", "", "def", "save_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "mac", ".", "save_models", "(", "path", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "th", ".", "save", "(", "self", ".", "mixer", ".", "state_dict", "(", ")", ",", "\"{}/mixer.th\"", ".", "format", "(", "path", ")", ")", "\n", "", "th", ".", "save", "(", "self", ".", "optimiser", ".", "state_dict", "(", ")", ",", "\"{}/opt.th\"", ".", "format", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.noise_q_learner.QLearner.load_models": [[206, 212], ["noise_q_learner.QLearner.mac.load_models", "noise_q_learner.QLearner.target_mac.load_models", "noise_q_learner.QLearner.optimiser.load_state_dict", "noise_q_learner.QLearner.mixer.load_state_dict", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_models", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_models"], ["", "def", "load_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "mac", ".", "load_models", "(", "path", ")", "\n", "self", ".", "target_mac", ".", "load_models", "(", "path", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "self", ".", "mixer", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/mixer.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "self", ".", "optimiser", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/opt.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.noise_q_learner.Discrim.__init__": [[216, 225], ["super().__init__", "range", "layers.append", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.ReLU", "layers.append", "layers.append", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "layers", "=", "[", "th", ".", "nn", ".", "Linear", "(", "input_size", ",", "self", ".", "args", ".", "discrim_size", ")", ",", "th", ".", "nn", ".", "ReLU", "(", ")", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "args", ".", "discrim_layers", "-", "1", ")", ":", "\n", "            ", "layers", ".", "append", "(", "th", ".", "nn", ".", "Linear", "(", "self", ".", "args", ".", "discrim_size", ",", "self", ".", "args", ".", "discrim_size", ")", ")", "\n", "layers", ".", "append", "(", "th", ".", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "layers", ".", "append", "(", "th", ".", "nn", ".", "Linear", "(", "self", ".", "args", ".", "discrim_size", ",", "output_size", ")", ")", "\n", "self", ".", "model", "=", "th", ".", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.noise_q_learner.Discrim.forward": [[226, 228], ["noise_q_learner.Discrim.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.noise_q_learner.RNNAggregator.__init__": [[232, 238], ["super().__init__", "torch.nn.GRUCell"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "input_size", "=", "input_size", "\n", "output_size", "=", "args", ".", "rnn_agg_size", "\n", "self", ".", "rnn", "=", "th", ".", "nn", ".", "GRUCell", "(", "input_size", ",", "output_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.noise_q_learner.RNNAggregator.forward": [[239, 241], ["noise_q_learner.RNNAggregator.rnn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "h", ")", ":", "\n", "        ", "return", "self", ".", "rnn", "(", "x", ",", "h", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.actor_critic_learner.ActorCriticLearner.__init__": [[11, 59], ["list", "torch.optim.RMSprop", "copy.deepcopy", "list", "torch.optim.RMSprop", "mac.parameters", "modules.critics.coma.COMACritic", "actor_critic_learner.ActorCriticLearner.critic.parameters", "copy.deepcopy", "list", "torch.optim.RMSprop", "modules.critics.centralV.CentralVCritic", "modules.critics.coma.COMACritic", "actor_critic_learner.ActorCriticLearner.baseline_critic.parameters", "modules.critics.centralV.CentralVCritic"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters"], ["    ", "def", "__init__", "(", "self", ",", "mac", ",", "scheme", ",", "logger", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "n_agents", "=", "args", ".", "n_agents", "\n", "self", ".", "n_actions", "=", "args", ".", "n_actions", "\n", "self", ".", "logger", "=", "logger", "\n", "\n", "self", ".", "mac", "=", "mac", "\n", "self", ".", "agent_params", "=", "list", "(", "mac", ".", "parameters", "(", ")", ")", "\n", "self", ".", "agent_optimiser", "=", "RMSprop", "(", "params", "=", "self", ".", "agent_params", ",", "lr", "=", "args", ".", "lr", ",", "alpha", "=", "args", ".", "optim_alpha", ",", "eps", "=", "args", ".", "optim_eps", ")", "\n", "self", ".", "params", "=", "self", ".", "agent_params", "\n", "\n", "\n", "if", "args", ".", "critic_q_fn", "==", "\"coma\"", ":", "\n", "            ", "self", ".", "critic", "=", "COMACritic", "(", "scheme", ",", "args", ")", "\n", "", "elif", "args", ".", "critic_q_fn", "==", "\"centralV\"", ":", "\n", "            ", "self", ".", "critic", "=", "CentralVCritic", "(", "scheme", ",", "args", ")", "\n", "", "self", ".", "target_critic", "=", "copy", ".", "deepcopy", "(", "self", ".", "critic", ")", "\n", "\n", "self", ".", "critic_params", "=", "list", "(", "self", ".", "critic", ".", "parameters", "(", ")", ")", "\n", "self", ".", "params", "+=", "self", ".", "critic_params", "\n", "self", ".", "critic_optimiser", "=", "RMSprop", "(", "params", "=", "self", ".", "critic_params", ",", "lr", "=", "args", ".", "critic_lr", ",", "alpha", "=", "args", ".", "optim_alpha", ",", "\n", "eps", "=", "args", ".", "optim_eps", ")", "\n", "\n", "self", ".", "separate_baseline_critic", "=", "False", "\n", "if", "args", ".", "critic_q_fn", "!=", "args", ".", "critic_baseline_fn", ":", "\n", "            ", "self", ".", "separate_baseline_critic", "=", "True", "\n", "if", "args", ".", "critic_baseline_fn", "==", "\"coma\"", ":", "\n", "                ", "self", ".", "baseline_critic", "=", "COMACritic", "(", "scheme", ",", "args", ")", "\n", "", "elif", "args", ".", "critic_baseline_fn", "==", "\"centralV\"", ":", "\n", "                ", "self", ".", "baseline_critic", "=", "CentralVCritic", "(", "scheme", ",", "args", ")", "\n", "", "self", ".", "target_baseline_critic", "=", "copy", ".", "deepcopy", "(", "self", ".", "baseline_critic", ")", "\n", "\n", "self", ".", "baseline_critic_params", "=", "list", "(", "self", ".", "baseline_critic", ".", "parameters", "(", ")", ")", "\n", "self", ".", "params", "+=", "self", ".", "baseline_critic_params", "\n", "self", ".", "baseline_critic_optimiser", "=", "RMSprop", "(", "params", "=", "self", ".", "baseline_critic_params", ",", "lr", "=", "args", ".", "critic_lr", ",", "\n", "alpha", "=", "args", ".", "optim_alpha", ",", "\n", "eps", "=", "args", ".", "optim_eps", ")", "\n", "\n", "", "if", "args", ".", "critic_train_mode", "==", "\"seq\"", ":", "\n", "            ", "self", ".", "critic_train_fn", "=", "self", ".", "train_critic_sequential", "\n", "", "elif", "args", ".", "critic_train_mode", "==", "\"batch\"", ":", "\n", "            ", "self", ".", "critic_train_fn", "=", "self", ".", "train_critic_batched", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "self", ".", "last_target_update_step", "=", "0", "\n", "self", ".", "critic_training_steps", "=", "0", "\n", "self", ".", "log_stats_t", "=", "-", "self", ".", "args", ".", "learner_log_interval", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.actor_critic_learner.ActorCriticLearner.train": [[60, 152], ["[].float", "[].float", "mask.repeat.repeat.repeat", "mask.repeat.repeat.clone", "mask.repeat.repeat.clone", "actor_critic_learner.ActorCriticLearner.mac.init_hidden", "range", "torch.stack", "range", "actor_critic_learner.ActorCriticLearner.nstep_returns", "torch.gather().squeeze", "torch.log", "actor_critic_learner.ActorCriticLearner.agent_optimiser.zero_grad", "pg_loss.backward", "torch.nn.utils.clip_grad_norm_", "actor_critic_learner.ActorCriticLearner.agent_optimiser.step", "mask.repeat.repeat.sum", "actor_critic_learner.ActorCriticLearner.logger.log_stat", "actor_critic_learner.ActorCriticLearner.logger.console_logger.error", "actor_critic_learner.ActorCriticLearner.mac.forward", "torch.stack.append", "torch.stack.sum", "actor_critic_learner.ActorCriticLearner.critic_train_fn", "range", "torch.gather().squeeze", "mask.repeat.repeat.sum", "actor_critic_learner.ActorCriticLearner._update_targets", "len", "actor_critic_learner.ActorCriticLearner.logger.log_stat", "actor_critic_learner.ActorCriticLearner.logger.log_stat", "actor_critic_learner.ActorCriticLearner.logger.log_stat", "actor_critic_learner.ActorCriticLearner.logger.log_stat", "actor_critic_learner.ActorCriticLearner.critic_train_fn", "q_sa.mean().expand.mean().expand.mean().expand", "torch.gather", "actor_critic_learner.ActorCriticLearner.logger.log_stat", "pg_loss.item", "torch.gather", "mask.repeat.repeat.sum().item", "mask.repeat.repeat.sum().item", "q_sa.mean().expand.mean().expand.mean", "sum", "mask.repeat.repeat.sum", "mask.repeat.repeat.sum", "pi.max"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.actor_critic_learner.ActorCriticLearner.nstep_returns", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.StatsAggregator.log", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner._update_targets", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat"], ["", "def", "train", "(", "self", ",", "batch", ":", "EpisodeBatch", ",", "t_env", ":", "int", ",", "episode_num", ":", "int", ")", ":", "\n", "# Get the relevant quantities", "\n", "\n", "        ", "rewards", "=", "batch", "[", "\"reward\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "actions", "=", "batch", "[", "\"actions\"", "]", "[", ":", ",", ":", "]", "\n", "terminated", "=", "batch", "[", "\"terminated\"", "]", "[", ":", ",", ":", "-", "1", "]", ".", "float", "(", ")", "\n", "mask", "=", "batch", "[", "\"filled\"", "]", "[", ":", ",", ":", "-", "1", "]", ".", "float", "(", ")", "\n", "mask", "[", ":", ",", "1", ":", "]", "=", "mask", "[", ":", ",", "1", ":", "]", "*", "(", "1", "-", "terminated", "[", ":", ",", ":", "-", "1", "]", ")", "\n", "avail_actions", "=", "batch", "[", "\"avail_actions\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "# No experiences to train on in this minibatch", "\n", "if", "mask", ".", "sum", "(", ")", "==", "0", ":", "\n", "            ", "self", ".", "logger", ".", "log_stat", "(", "\"Mask_Sum_Zero\"", ",", "1", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "console_logger", ".", "error", "(", "\"Actor Critic Learner: mask.sum() == 0 at t_env {}\"", ".", "format", "(", "t_env", ")", ")", "\n", "return", "\n", "\n", "", "mask", "=", "mask", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ")", "\n", "\n", "critic_mask", "=", "mask", ".", "clone", "(", ")", "\n", "baseline_critic_mask", "=", "mask", ".", "clone", "(", ")", "\n", "\n", "mac_out", "=", "[", "]", "\n", "self", ".", "mac", ".", "init_hidden", "(", "batch", ".", "batch_size", ")", "\n", "for", "t", "in", "range", "(", "batch", ".", "max_seq_length", "-", "1", ")", ":", "\n", "            ", "agent_outs", "=", "self", ".", "mac", ".", "forward", "(", "batch", ",", "t", "=", "t", ")", "\n", "mac_out", ".", "append", "(", "agent_outs", ")", "\n", "", "mac_out", "=", "th", ".", "stack", "(", "mac_out", ",", "dim", "=", "1", ")", "# Concat over time", "\n", "\n", "# Mask out unavailable actions, renormalise (as in action selection)", "\n", "mac_out", "[", "avail_actions", "==", "0", "]", "=", "0", "\n", "mac_out", "=", "mac_out", "/", "mac_out", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "mac_out", "[", "avail_actions", "==", "0", "]", "=", "0", "\n", "\n", "pi", "=", "mac_out", "\n", "\n", "for", "_", "in", "range", "(", "self", ".", "args", ".", "critic_train_reps", ")", ":", "\n", "            ", "q_sa", ",", "v_s", ",", "critic_train_stats", "=", "self", ".", "critic_train_fn", "(", "self", ".", "critic", ",", "self", ".", "target_critic", ",", "self", ".", "critic_optimiser", ",", "batch", ",", "\n", "rewards", ",", "terminated", ",", "actions", ",", "avail_actions", ",", "critic_mask", ")", "\n", "\n", "", "if", "self", ".", "separate_baseline_critic", ":", "\n", "            ", "for", "_", "in", "range", "(", "self", ".", "args", ".", "critic_train_reps", ")", ":", "\n", "                ", "q_sa_baseline", ",", "v_s_baseline", ",", "critic_train_stats_baseline", "=", "self", ".", "critic_train_fn", "(", "self", ".", "baseline_critic", ",", "self", ".", "target_baseline_critic", ",", "self", ".", "baseline_critic_optimiser", ",", "\n", "batch", ",", "rewards", ",", "terminated", ",", "actions", ",", "avail_actions", ",", "baseline_critic_mask", ")", "\n", "", "if", "self", ".", "args", ".", "critic_baseline_fn", "==", "\"coma\"", ":", "\n", "                ", "baseline", "=", "(", "q_sa_baseline", "*", "pi", ")", ".", "sum", "(", "-", "1", ")", ".", "detach", "(", ")", "\n", "", "else", ":", "\n", "                ", "baseline", "=", "v_s_baseline", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "args", ".", "critic_baseline_fn", "==", "\"coma\"", ":", "\n", "                ", "baseline", "=", "(", "q_sa", "*", "pi", ")", ".", "sum", "(", "-", "1", ")", ".", "detach", "(", ")", "\n", "", "else", ":", "\n", "                ", "baseline", "=", "v_s", "\n", "\n", "", "", "actions", "=", "actions", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "if", "self", ".", "critic", ".", "output_type", "==", "\"q\"", ":", "\n", "            ", "q_sa", "=", "th", ".", "gather", "(", "q_sa", ",", "dim", "=", "3", ",", "index", "=", "actions", ")", ".", "squeeze", "(", "3", ")", "\n", "if", "self", ".", "args", ".", "critic_q_fn", "==", "\"coma\"", "and", "self", ".", "args", ".", "coma_mean_q", ":", "\n", "                ", "q_sa", "=", "q_sa", ".", "mean", "(", "2", ",", "keepdim", "=", "True", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "self", ".", "n_agents", ")", "\n", "", "", "q_sa", "=", "self", ".", "nstep_returns", "(", "rewards", ",", "mask", ",", "q_sa", ",", "self", ".", "args", ".", "q_nstep", ")", "\n", "\n", "advantages", "=", "(", "q_sa", "-", "baseline", ")", ".", "detach", "(", ")", ".", "squeeze", "(", ")", "\n", "\n", "# Calculate policy grad with mask", "\n", "\n", "pi_taken", "=", "th", ".", "gather", "(", "pi", ",", "dim", "=", "3", ",", "index", "=", "actions", ")", ".", "squeeze", "(", "3", ")", "\n", "pi_taken", "[", "mask", "==", "0", "]", "=", "1.0", "\n", "log_pi_taken", "=", "th", ".", "log", "(", "pi_taken", ")", "\n", "\n", "pg_loss", "=", "-", "(", "(", "advantages", "*", "log_pi_taken", ")", "*", "mask", ")", ".", "sum", "(", ")", "/", "mask", ".", "sum", "(", ")", "\n", "\n", "# Optimise agents", "\n", "self", ".", "agent_optimiser", ".", "zero_grad", "(", ")", "\n", "pg_loss", ".", "backward", "(", ")", "\n", "grad_norm", "=", "th", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "agent_params", ",", "self", ".", "args", ".", "grad_norm_clip", ")", "\n", "self", ".", "agent_optimiser", ".", "step", "(", ")", "\n", "\n", "if", "(", "self", ".", "critic_training_steps", "-", "self", ".", "last_target_update_step", ")", "/", "self", ".", "args", ".", "target_update_interval", ">=", "1.0", ":", "\n", "            ", "self", ".", "_update_targets", "(", ")", "\n", "self", ".", "last_target_update_step", "=", "self", ".", "critic_training_steps", "\n", "\n", "", "if", "t_env", "-", "self", ".", "log_stats_t", ">=", "self", ".", "args", ".", "learner_log_interval", ":", "\n", "            ", "ts_logged", "=", "len", "(", "critic_train_stats", "[", "\"critic_loss\"", "]", ")", "\n", "for", "key", "in", "[", "\"critic_loss\"", ",", "\"critic_grad_norm\"", ",", "\"td_error_abs\"", ",", "\"q_taken_mean\"", ",", "\"target_mean\"", "]", ":", "\n", "                ", "self", ".", "logger", ".", "log_stat", "(", "key", ",", "sum", "(", "critic_train_stats", "[", "key", "]", ")", "/", "ts_logged", ",", "t_env", ")", "\n", "\n", "", "self", ".", "logger", ".", "log_stat", "(", "\"advantage_mean\"", ",", "(", "advantages", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask", ".", "sum", "(", ")", ".", "item", "(", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"pg_loss\"", ",", "pg_loss", ".", "item", "(", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"agent_grad_norm\"", ",", "grad_norm", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"pi_max\"", ",", "(", "pi", ".", "max", "(", "dim", "=", "-", "1", ")", "[", "0", "]", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask", ".", "sum", "(", ")", ".", "item", "(", ")", ",", "t_env", ")", "\n", "self", ".", "log_stats_t", "=", "t_env", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.actor_critic_learner.ActorCriticLearner.train_critic_sequential": [[153, 222], ["target_critic", "torch.zeros_like", "torch.gather.squeeze", "utils.rl_utils.build_td_lambda_targets", "reversed", "torch.gather", "range", "critic", "vals_t.squeeze().squeeze.squeeze().squeeze.squeeze", "optimiser.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_norm_", "optimiser.step", "running_log[].append", "running_log[].append", "mask_t.sum().item", "running_log[].append", "running_log[].append", "running_log[].append", "all_vals[].squeeze", "all_vals[].squeeze", "rewards.size", "mask_t.sum", "torch.gather().squeeze().squeeze", "vals_t.squeeze().squeeze.squeeze().squeeze.squeeze().squeeze", "targets_t.detach", "mask_t.sum", "loss.item", "rewards.size", "mask_t.sum", "masked_td_error.abs().sum().item", "torch.gather().squeeze", "vals_t.squeeze().squeeze.squeeze().squeeze.squeeze", "masked_td_error.abs().sum", "torch.gather", "masked_td_error.abs"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.rl_utils.build_td_lambda_targets", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step"], ["", "", "def", "train_critic_sequential", "(", "self", ",", "critic", ",", "target_critic", ",", "optimiser", ",", "batch", ",", "rewards", ",", "terminated", ",", "actions", ",", "\n", "avail_actions", ",", "mask", ")", ":", "\n", "# Optimise critic", "\n", "        ", "target_vals", "=", "target_critic", "(", "batch", ")", "\n", "\n", "all_vals", "=", "th", ".", "zeros_like", "(", "target_vals", ")", "\n", "\n", "if", "critic", ".", "output_type", "==", "'q'", ":", "\n", "            ", "target_vals", "=", "th", ".", "gather", "(", "target_vals", ",", "dim", "=", "3", ",", "index", "=", "actions", ")", "\n", "# target_vals = th.cat([target_vals[:, 1:], th.zeros_like(target_vals[:, 0:1])], dim=1)", "\n", "", "target_vals", "=", "target_vals", ".", "squeeze", "(", "3", ")", "\n", "\n", "# Calculate td-lambda targets", "\n", "targets", "=", "build_td_lambda_targets", "(", "rewards", ",", "terminated", ",", "mask", ",", "target_vals", ",", "self", ".", "n_agents", ",", "\n", "self", ".", "args", ".", "gamma", ",", "self", ".", "args", ".", "td_lambda", ")", "\n", "\n", "running_log", "=", "{", "\n", "\"critic_loss\"", ":", "[", "]", ",", "\n", "\"critic_grad_norm\"", ":", "[", "]", ",", "\n", "\"td_error_abs\"", ":", "[", "]", ",", "\n", "\"target_mean\"", ":", "[", "]", ",", "\n", "\"q_taken_mean\"", ":", "[", "]", ",", "\n", "}", "\n", "\n", "for", "t", "in", "reversed", "(", "range", "(", "rewards", ".", "size", "(", "1", ")", "+", "1", ")", ")", ":", "\n", "            ", "vals_t", "=", "critic", "(", "batch", ",", "t", ")", "\n", "all_vals", "[", ":", ",", "t", "]", "=", "vals_t", ".", "squeeze", "(", "1", ")", "\n", "\n", "if", "t", "==", "rewards", ".", "size", "(", "1", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "mask_t", "=", "mask", "[", ":", ",", "t", "]", "\n", "if", "mask_t", ".", "sum", "(", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "critic", ".", "output_type", "==", "\"q\"", ":", "\n", "                ", "vals_t", "=", "th", ".", "gather", "(", "vals_t", ",", "dim", "=", "3", ",", "index", "=", "actions", "[", ":", ",", "t", ":", "t", "+", "1", "]", ")", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "1", ")", "\n", "", "else", ":", "\n", "                ", "vals_t", "=", "vals_t", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "1", ")", "\n", "", "targets_t", "=", "targets", "[", ":", ",", "t", "]", "\n", "\n", "td_error", "=", "(", "vals_t", "-", "targets_t", ".", "detach", "(", ")", ")", "\n", "\n", "# 0-out the targets that came from padded data", "\n", "masked_td_error", "=", "td_error", "*", "mask_t", "\n", "\n", "# Normal L2 loss, take mean over actual data", "\n", "loss", "=", "(", "masked_td_error", "**", "2", ")", ".", "sum", "(", ")", "/", "mask_t", ".", "sum", "(", ")", "# Not dividing by number of agents, only # valid timesteps", "\n", "optimiser", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "grad_norm", "=", "th", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "optimiser", ".", "param_groups", "[", "0", "]", "[", "\"params\"", "]", ",", "self", ".", "args", ".", "grad_norm_clip", ")", "\n", "optimiser", ".", "step", "(", ")", "\n", "self", ".", "critic_training_steps", "+=", "1", "\n", "\n", "running_log", "[", "\"critic_loss\"", "]", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "running_log", "[", "\"critic_grad_norm\"", "]", ".", "append", "(", "grad_norm", ")", "\n", "mask_elems", "=", "mask_t", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "running_log", "[", "\"td_error_abs\"", "]", ".", "append", "(", "(", "masked_td_error", ".", "abs", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", ")", "\n", "running_log", "[", "\"q_taken_mean\"", "]", ".", "append", "(", "(", "vals_t", "*", "mask_t", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", "\n", "running_log", "[", "\"target_mean\"", "]", ".", "append", "(", "(", "targets_t", "*", "mask_t", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", "\n", "\n", "", "if", "critic", ".", "output_type", "==", "'q'", ":", "\n", "            ", "q_vals", "=", "all_vals", "[", ":", ",", ":", "-", "1", "]", "\n", "v_s", "=", "None", "\n", "", "else", ":", "\n", "            ", "q_vals", "=", "all_vals", "[", ":", ",", ":", "-", "1", "]", ".", "squeeze", "(", "3", ")", "\n", "v_s", "=", "all_vals", "[", ":", ",", ":", "-", "1", "]", ".", "squeeze", "(", "3", ")", "\n", "\n", "", "return", "q_vals", ",", "v_s", ",", "running_log", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.actor_critic_learner.ActorCriticLearner.nstep_returns": [[223, 239], ["torch.zeros_like", "range", "rewards.size", "torch.zeros_like", "range", "rewards.size", "rewards.size"], "methods", ["None"], ["", "def", "nstep_returns", "(", "self", ",", "rewards", ",", "mask", ",", "values", ",", "nsteps", ")", ":", "\n", "        ", "nstep_values", "=", "th", ".", "zeros_like", "(", "values", ")", "\n", "for", "t_start", "in", "range", "(", "rewards", ".", "size", "(", "1", ")", ")", ":", "\n", "            ", "nstep_return_t", "=", "th", ".", "zeros_like", "(", "values", "[", ":", ",", "0", "]", ")", "\n", "for", "step", "in", "range", "(", "nsteps", "+", "1", ")", ":", "\n", "                ", "t", "=", "t_start", "+", "step", "\n", "if", "t", ">=", "rewards", ".", "size", "(", "1", ")", ":", "\n", "                    ", "break", "\n", "", "elif", "step", "==", "nsteps", ":", "\n", "                    ", "nstep_return_t", "+=", "self", ".", "args", ".", "gamma", "**", "(", "step", ")", "*", "values", "[", ":", ",", "t", "]", "*", "mask", "[", ":", ",", "t", "]", "\n", "", "elif", "t", "==", "rewards", ".", "size", "(", "1", ")", "-", "1", ":", "\n", "                    ", "nstep_return_t", "+=", "self", ".", "args", ".", "gamma", "**", "(", "step", ")", "*", "values", "[", ":", ",", "t", "]", "*", "mask", "[", ":", ",", "t", "]", "\n", "", "else", ":", "\n", "                    ", "nstep_return_t", "+=", "self", ".", "args", ".", "gamma", "**", "(", "step", ")", "*", "rewards", "[", ":", ",", "t", "]", "*", "mask", "[", ":", ",", "t", "]", "\n", "", "", "nstep_values", "[", ":", ",", "t_start", ",", ":", "]", "=", "nstep_return_t", "\n", "", "return", "nstep_values", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.actor_critic_learner.ActorCriticLearner.train_critic_batched": [[240, 300], ["target_critic", "torch.cat.squeeze", "utils.rl_utils.build_td_lambda_targets", "critic", "torch.gather.squeeze", "optimiser.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_norm_", "optimiser.step", "running_log[].append", "running_log[].append", "mask.sum().item", "running_log[].append", "running_log[].append", "running_log[].append", "torch.gather", "torch.cat", "critic.clone", "torch.gather", "utils.rl_utils.build_td_lambda_targets.detach", "mask.sum", "loss.item", "utils.rl_utils.build_td_lambda_targets", "mask.sum", "masked_td_error.abs().sum().item", "torch.zeros_like", "critic.squeeze", "masked_td_error.abs().sum", "masked_td_error.abs"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.rl_utils.build_td_lambda_targets", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.rl_utils.build_td_lambda_targets"], ["", "def", "train_critic_batched", "(", "self", ",", "critic", ",", "target_critic", ",", "optimiser", ",", "batch", ",", "rewards", ",", "terminated", ",", "actions", ",", "\n", "avail_actions", ",", "mask", ")", ":", "\n", "# Optimise critic", "\n", "        ", "target_vals", "=", "target_critic", "(", "batch", ")", "\n", "\n", "target_vals", "=", "target_vals", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "if", "critic", ".", "output_type", "==", "'q'", ":", "\n", "            ", "target_vals", "=", "th", ".", "gather", "(", "target_vals", ",", "dim", "=", "3", ",", "index", "=", "actions", ")", "\n", "target_vals", "=", "th", ".", "cat", "(", "[", "target_vals", "[", ":", ",", "1", ":", "]", ",", "th", ".", "zeros_like", "(", "target_vals", "[", ":", ",", "0", ":", "1", "]", ")", "]", ",", "dim", "=", "1", ")", "\n", "", "target_vals", "=", "target_vals", ".", "squeeze", "(", "3", ")", "\n", "\n", "# Calculate td-lambda targets", "\n", "targets", "=", "build_td_lambda_targets", "(", "rewards", ",", "terminated", ",", "mask", ",", "target_vals", ",", "self", ".", "n_agents", ",", "\n", "self", ".", "args", ".", "gamma", ",", "self", ".", "args", ".", "td_lambda", ")", "\n", "\n", "running_log", "=", "{", "\n", "\"critic_loss\"", ":", "[", "]", ",", "\n", "\"critic_grad_norm\"", ":", "[", "]", ",", "\n", "\"td_error_abs\"", ":", "[", "]", ",", "\n", "\"target_mean\"", ":", "[", "]", ",", "\n", "\"q_taken_mean\"", ":", "[", "]", ",", "\n", "}", "\n", "\n", "all_vals", "=", "critic", "(", "batch", ")", "\n", "vals", "=", "all_vals", ".", "clone", "(", ")", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "if", "critic", ".", "output_type", "==", "\"q\"", ":", "\n", "            ", "vals", "=", "th", ".", "gather", "(", "vals", ",", "dim", "=", "3", ",", "index", "=", "actions", ")", "\n", "", "vals", "=", "vals", ".", "squeeze", "(", "3", ")", "\n", "\n", "td_error", "=", "(", "vals", "-", "targets", ".", "detach", "(", ")", ")", "\n", "\n", "# 0-out the targets that came from padded data", "\n", "masked_td_error", "=", "td_error", "*", "mask", "\n", "\n", "# Normal L2 loss, take mean over actual data", "\n", "loss", "=", "(", "masked_td_error", "**", "2", ")", ".", "sum", "(", ")", "/", "mask", ".", "sum", "(", ")", "\n", "optimiser", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "grad_norm", "=", "th", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "optimiser", ".", "param_groups", "[", "0", "]", "[", "\"params\"", "]", ",", "self", ".", "args", ".", "grad_norm_clip", ")", "\n", "optimiser", ".", "step", "(", ")", "\n", "self", ".", "critic_training_steps", "+=", "1", "\n", "\n", "running_log", "[", "\"critic_loss\"", "]", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "running_log", "[", "\"critic_grad_norm\"", "]", ".", "append", "(", "grad_norm", ")", "\n", "mask_elems", "=", "mask", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "running_log", "[", "\"td_error_abs\"", "]", ".", "append", "(", "(", "masked_td_error", ".", "abs", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", ")", "\n", "running_log", "[", "\"q_taken_mean\"", "]", ".", "append", "(", "(", "vals", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", "\n", "running_log", "[", "\"target_mean\"", "]", ".", "append", "(", "(", "targets", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", "\n", "\n", "if", "critic", ".", "output_type", "==", "'q'", ":", "\n", "            ", "q_vals", "=", "all_vals", "[", ":", ",", ":", "-", "1", "]", "\n", "v_s", "=", "None", "\n", "", "else", ":", "\n", "            ", "q_vals", "=", "build_td_lambda_targets", "(", "rewards", ",", "terminated", ",", "mask", ",", "all_vals", ".", "squeeze", "(", "3", ")", "[", ":", ",", "1", ":", "]", ",", "self", ".", "n_agents", ",", "\n", "self", ".", "args", ".", "gamma", ",", "self", ".", "args", ".", "td_lambda", ")", "\n", "v_s", "=", "vals", "\n", "\n", "", "return", "q_vals", ",", "v_s", ",", "running_log", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.actor_critic_learner.ActorCriticLearner._update_targets": [[301, 306], ["actor_critic_learner.ActorCriticLearner.target_critic.load_state_dict", "actor_critic_learner.ActorCriticLearner.logger.console_logger.info", "actor_critic_learner.ActorCriticLearner.critic.state_dict", "actor_critic_learner.ActorCriticLearner.target_baseline_critic.load_state_dict", "actor_critic_learner.ActorCriticLearner.baseline_critic.state_dict"], "methods", ["None"], ["", "def", "_update_targets", "(", "self", ")", ":", "\n", "        ", "self", ".", "target_critic", ".", "load_state_dict", "(", "self", ".", "critic", ".", "state_dict", "(", ")", ")", "\n", "if", "self", ".", "separate_baseline_critic", ":", "\n", "            ", "self", ".", "target_baseline_critic", ".", "load_state_dict", "(", "self", ".", "baseline_critic", ".", "state_dict", "(", ")", ")", "\n", "", "self", ".", "logger", ".", "console_logger", ".", "info", "(", "\"Updated target network\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.actor_critic_learner.ActorCriticLearner.cuda": [[307, 314], ["actor_critic_learner.ActorCriticLearner.mac.cuda", "actor_critic_learner.ActorCriticLearner.critic.cuda", "actor_critic_learner.ActorCriticLearner.target_critic.cuda", "actor_critic_learner.ActorCriticLearner.baseline_critic.cuda", "actor_critic_learner.ActorCriticLearner.target_baseline_critic.cuda"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "self", ".", "mac", ".", "cuda", "(", ")", "\n", "self", ".", "critic", ".", "cuda", "(", ")", "\n", "self", ".", "target_critic", ".", "cuda", "(", ")", "\n", "if", "self", ".", "separate_baseline_critic", ":", "\n", "            ", "self", ".", "baseline_critic", ".", "cuda", "(", ")", "\n", "self", ".", "target_baseline_critic", ".", "cuda", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.coma_learner.COMALearner.__init__": [[10, 31], ["modules.critics.coma.COMACritic", "copy.deepcopy", "list", "list", "torch.optim.RMSprop", "torch.optim.RMSprop", "mac.parameters", "coma_learner.COMALearner.critic.parameters"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters"], ["    ", "def", "__init__", "(", "self", ",", "mac", ",", "scheme", ",", "logger", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "n_agents", "=", "args", ".", "n_agents", "\n", "self", ".", "n_actions", "=", "args", ".", "n_actions", "\n", "self", ".", "mac", "=", "mac", "\n", "self", ".", "logger", "=", "logger", "\n", "\n", "self", ".", "last_target_update_step", "=", "0", "\n", "self", ".", "critic_training_steps", "=", "0", "\n", "\n", "self", ".", "log_stats_t", "=", "-", "self", ".", "args", ".", "learner_log_interval", "-", "1", "\n", "\n", "self", ".", "critic", "=", "COMACritic", "(", "scheme", ",", "args", ")", "\n", "self", ".", "target_critic", "=", "copy", ".", "deepcopy", "(", "self", ".", "critic", ")", "\n", "\n", "self", ".", "agent_params", "=", "list", "(", "mac", ".", "parameters", "(", ")", ")", "\n", "self", ".", "critic_params", "=", "list", "(", "self", ".", "critic", ".", "parameters", "(", ")", ")", "\n", "self", ".", "params", "=", "self", ".", "agent_params", "+", "self", ".", "critic_params", "\n", "\n", "self", ".", "agent_optimiser", "=", "RMSprop", "(", "params", "=", "self", ".", "agent_params", ",", "lr", "=", "args", ".", "lr", ",", "alpha", "=", "args", ".", "optim_alpha", ",", "eps", "=", "args", ".", "optim_eps", ")", "\n", "self", ".", "critic_optimiser", "=", "RMSprop", "(", "params", "=", "self", ".", "critic_params", ",", "lr", "=", "args", ".", "critic_lr", ",", "alpha", "=", "args", ".", "optim_alpha", ",", "eps", "=", "args", ".", "optim_eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.coma_learner.COMALearner.train": [[32, 99], ["[].float", "[].float", "mask.repeat().view.repeat().view.clone", "mask.repeat().view.repeat().view.repeat().view", "coma_learner.COMALearner._train_critic", "coma_learner.COMALearner.mac.init_hidden", "range", "torch.stack", "q_vals.reshape.reshape.reshape", "torch.stack.view", "torch.gather().squeeze", "torch.gather().squeeze", "torch.log", "coma_learner.COMALearner.agent_optimiser.zero_grad", "coma_loss.backward", "torch.nn.utils.clip_grad_norm_", "coma_learner.COMALearner.agent_optimiser.step", "coma_learner.COMALearner.mac.forward", "torch.stack.append", "torch.stack.sum", "mask.repeat().view.repeat().view.sum", "coma_learner.COMALearner._update_targets", "len", "coma_learner.COMALearner.logger.log_stat", "coma_learner.COMALearner.logger.log_stat", "coma_learner.COMALearner.logger.log_stat", "coma_learner.COMALearner.logger.log_stat", "mask.repeat().view.repeat().view.repeat", "torch.gather", "torch.gather", "coma_learner.COMALearner.logger.log_stat", "coma_loss.item", "mask.repeat().view.repeat().view.sum().item", "mask.repeat().view.repeat().view.sum().item", "actions.reshape", "actions.reshape", "sum", "mask.repeat().view.repeat().view.sum", "mask.repeat().view.repeat().view.sum", "th.stack.view.max"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.coma_learner.COMALearner._train_critic", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.StatsAggregator.log", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner._update_targets", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat"], ["", "def", "train", "(", "self", ",", "batch", ":", "EpisodeBatch", ",", "t_env", ":", "int", ",", "episode_num", ":", "int", ")", ":", "\n", "# Get the relevant quantities", "\n", "        ", "bs", "=", "batch", ".", "batch_size", "\n", "max_t", "=", "batch", ".", "max_seq_length", "\n", "rewards", "=", "batch", "[", "\"reward\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "actions", "=", "batch", "[", "\"actions\"", "]", "[", ":", ",", ":", "]", "\n", "terminated", "=", "batch", "[", "\"terminated\"", "]", "[", ":", ",", ":", "-", "1", "]", ".", "float", "(", ")", "\n", "mask", "=", "batch", "[", "\"filled\"", "]", "[", ":", ",", ":", "-", "1", "]", ".", "float", "(", ")", "\n", "mask", "[", ":", ",", "1", ":", "]", "=", "mask", "[", ":", ",", "1", ":", "]", "*", "(", "1", "-", "terminated", "[", ":", ",", ":", "-", "1", "]", ")", "\n", "avail_actions", "=", "batch", "[", "\"avail_actions\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "critic_mask", "=", "mask", ".", "clone", "(", ")", "\n", "\n", "mask", "=", "mask", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "q_vals", ",", "critic_train_stats", "=", "self", ".", "_train_critic", "(", "batch", ",", "rewards", ",", "terminated", ",", "actions", ",", "avail_actions", ",", "\n", "critic_mask", ",", "bs", ",", "max_t", ")", "\n", "\n", "actions", "=", "actions", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "mac_out", "=", "[", "]", "\n", "self", ".", "mac", ".", "init_hidden", "(", "batch", ".", "batch_size", ")", "\n", "for", "t", "in", "range", "(", "batch", ".", "max_seq_length", "-", "1", ")", ":", "\n", "            ", "agent_outs", "=", "self", ".", "mac", ".", "forward", "(", "batch", ",", "t", "=", "t", ")", "\n", "mac_out", ".", "append", "(", "agent_outs", ")", "\n", "", "mac_out", "=", "th", ".", "stack", "(", "mac_out", ",", "dim", "=", "1", ")", "# Concat over time", "\n", "\n", "# Mask out unavailable actions, renormalise (as in action selection)", "\n", "mac_out", "[", "avail_actions", "==", "0", "]", "=", "0", "\n", "mac_out", "=", "mac_out", "/", "mac_out", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "mac_out", "[", "avail_actions", "==", "0", "]", "=", "0", "\n", "\n", "# Calculated baseline", "\n", "q_vals", "=", "q_vals", ".", "reshape", "(", "-", "1", ",", "self", ".", "n_actions", ")", "\n", "pi", "=", "mac_out", ".", "view", "(", "-", "1", ",", "self", ".", "n_actions", ")", "\n", "baseline", "=", "(", "pi", "*", "q_vals", ")", ".", "sum", "(", "-", "1", ")", ".", "detach", "(", ")", "\n", "\n", "# Calculate policy grad with mask", "\n", "q_taken", "=", "th", ".", "gather", "(", "q_vals", ",", "dim", "=", "1", ",", "index", "=", "actions", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "pi_taken", "=", "th", ".", "gather", "(", "pi", ",", "dim", "=", "1", ",", "index", "=", "actions", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "pi_taken", "[", "mask", "==", "0", "]", "=", "1.0", "\n", "log_pi_taken", "=", "th", ".", "log", "(", "pi_taken", ")", "\n", "\n", "advantages", "=", "(", "q_taken", "-", "baseline", ")", ".", "detach", "(", ")", "\n", "\n", "coma_loss", "=", "-", "(", "(", "advantages", "*", "log_pi_taken", ")", "*", "mask", ")", ".", "sum", "(", ")", "/", "mask", ".", "sum", "(", ")", "\n", "\n", "# Optimise agents", "\n", "self", ".", "agent_optimiser", ".", "zero_grad", "(", ")", "\n", "coma_loss", ".", "backward", "(", ")", "\n", "grad_norm", "=", "th", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "agent_params", ",", "self", ".", "args", ".", "grad_norm_clip", ")", "\n", "self", ".", "agent_optimiser", ".", "step", "(", ")", "\n", "\n", "if", "(", "self", ".", "critic_training_steps", "-", "self", ".", "last_target_update_step", ")", "/", "self", ".", "args", ".", "target_update_interval", ">=", "1.0", ":", "\n", "            ", "self", ".", "_update_targets", "(", ")", "\n", "self", ".", "last_target_update_step", "=", "self", ".", "critic_training_steps", "\n", "\n", "", "if", "t_env", "-", "self", ".", "log_stats_t", ">=", "self", ".", "args", ".", "learner_log_interval", ":", "\n", "            ", "ts_logged", "=", "len", "(", "critic_train_stats", "[", "\"critic_loss\"", "]", ")", "\n", "for", "key", "in", "[", "\"critic_loss\"", ",", "\"critic_grad_norm\"", ",", "\"td_error_abs\"", ",", "\"q_taken_mean\"", ",", "\"target_mean\"", "]", ":", "\n", "                ", "self", ".", "logger", ".", "log_stat", "(", "key", ",", "sum", "(", "critic_train_stats", "[", "key", "]", ")", "/", "ts_logged", ",", "t_env", ")", "\n", "\n", "", "self", ".", "logger", ".", "log_stat", "(", "\"advantage_mean\"", ",", "(", "advantages", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask", ".", "sum", "(", ")", ".", "item", "(", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"coma_loss\"", ",", "coma_loss", ".", "item", "(", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"agent_grad_norm\"", ",", "grad_norm", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"pi_max\"", ",", "(", "pi", ".", "max", "(", "dim", "=", "1", ")", "[", "0", "]", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask", ".", "sum", "(", ")", ".", "item", "(", ")", ",", "t_env", ")", "\n", "self", ".", "log_stats_t", "=", "t_env", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.coma_learner.COMALearner._train_critic": [[100, 148], ["torch.gather().squeeze", "utils.rl_utils.build_td_lambda_targets", "reversed", "coma_learner.COMALearner.target_critic", "torch.zeros_like", "range", "mask[].expand", "coma_learner.COMALearner.critic", "coma_learner.COMALearner.view", "torch.gather().squeeze().squeeze", "coma_learner.COMALearner.critic_optimiser.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_norm_", "coma_learner.COMALearner.critic_optimiser.step", "running_log[].append", "running_log[].append", "mask[].expand.sum().item", "running_log[].append", "running_log[].append", "running_log[].append", "torch.gather", "rewards.size", "mask[].expand.sum", "targets_t.detach", "mask[].expand.sum", "loss.item", "torch.gather().squeeze", "mask[].expand.sum", "masked_td_error.abs().sum().item", "torch.gather", "masked_td_error.abs().sum", "masked_td_error.abs"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.rl_utils.build_td_lambda_targets", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step"], ["", "", "def", "_train_critic", "(", "self", ",", "batch", ",", "rewards", ",", "terminated", ",", "actions", ",", "avail_actions", ",", "mask", ",", "bs", ",", "max_t", ")", ":", "\n", "# Optimise critic", "\n", "        ", "target_q_vals", "=", "self", ".", "target_critic", "(", "batch", ")", "[", ":", ",", ":", "]", "\n", "targets_taken", "=", "th", ".", "gather", "(", "target_q_vals", ",", "dim", "=", "3", ",", "index", "=", "actions", ")", ".", "squeeze", "(", "3", ")", "\n", "\n", "# Calculate td-lambda targets", "\n", "targets", "=", "build_td_lambda_targets", "(", "rewards", ",", "terminated", ",", "mask", ",", "targets_taken", ",", "self", ".", "n_agents", ",", "self", ".", "args", ".", "gamma", ",", "self", ".", "args", ".", "td_lambda", ")", "\n", "q_vals", "=", "th", ".", "zeros_like", "(", "target_q_vals", ")", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "running_log", "=", "{", "\n", "\"critic_loss\"", ":", "[", "]", ",", "\n", "\"critic_grad_norm\"", ":", "[", "]", ",", "\n", "\"td_error_abs\"", ":", "[", "]", ",", "\n", "\"target_mean\"", ":", "[", "]", ",", "\n", "\"q_taken_mean\"", ":", "[", "]", ",", "\n", "}", "\n", "\n", "for", "t", "in", "reversed", "(", "range", "(", "rewards", ".", "size", "(", "1", ")", ")", ")", ":", "\n", "            ", "mask_t", "=", "mask", "[", ":", ",", "t", "]", ".", "expand", "(", "-", "1", ",", "self", ".", "n_agents", ")", "\n", "if", "mask_t", ".", "sum", "(", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "q_t", "=", "self", ".", "critic", "(", "batch", ",", "t", ")", "\n", "q_vals", "[", ":", ",", "t", "]", "=", "q_t", ".", "view", "(", "bs", ",", "self", ".", "n_agents", ",", "self", ".", "n_actions", ")", "\n", "q_taken", "=", "th", ".", "gather", "(", "q_t", ",", "dim", "=", "3", ",", "index", "=", "actions", "[", ":", ",", "t", ":", "t", "+", "1", "]", ")", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "1", ")", "\n", "targets_t", "=", "targets", "[", ":", ",", "t", "]", "\n", "\n", "td_error", "=", "(", "q_taken", "-", "targets_t", ".", "detach", "(", ")", ")", "\n", "\n", "# 0-out the targets that came from padded data", "\n", "masked_td_error", "=", "td_error", "*", "mask_t", "\n", "\n", "# Normal L2 loss, take mean over actual data", "\n", "loss", "=", "(", "masked_td_error", "**", "2", ")", ".", "sum", "(", ")", "/", "mask_t", ".", "sum", "(", ")", "\n", "self", ".", "critic_optimiser", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "grad_norm", "=", "th", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "critic_params", ",", "self", ".", "args", ".", "grad_norm_clip", ")", "\n", "self", ".", "critic_optimiser", ".", "step", "(", ")", "\n", "self", ".", "critic_training_steps", "+=", "1", "\n", "\n", "running_log", "[", "\"critic_loss\"", "]", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "running_log", "[", "\"critic_grad_norm\"", "]", ".", "append", "(", "grad_norm", ")", "\n", "mask_elems", "=", "mask_t", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "running_log", "[", "\"td_error_abs\"", "]", ".", "append", "(", "(", "masked_td_error", ".", "abs", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", ")", "\n", "running_log", "[", "\"q_taken_mean\"", "]", ".", "append", "(", "(", "q_taken", "*", "mask_t", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", "\n", "running_log", "[", "\"target_mean\"", "]", ".", "append", "(", "(", "targets_t", "*", "mask_t", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", "\n", "\n", "", "return", "q_vals", ",", "running_log", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.coma_learner.COMALearner._update_targets": [[149, 152], ["coma_learner.COMALearner.target_critic.load_state_dict", "coma_learner.COMALearner.logger.console_logger.info", "coma_learner.COMALearner.critic.state_dict"], "methods", ["None"], ["", "def", "_update_targets", "(", "self", ")", ":", "\n", "        ", "self", ".", "target_critic", ".", "load_state_dict", "(", "self", ".", "critic", ".", "state_dict", "(", ")", ")", "\n", "self", ".", "logger", ".", "console_logger", ".", "info", "(", "\"Updated target network\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.coma_learner.COMALearner.cuda": [[153, 157], ["coma_learner.COMALearner.mac.cuda", "coma_learner.COMALearner.critic.cuda", "coma_learner.COMALearner.target_critic.cuda"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "self", ".", "mac", ".", "cuda", "(", ")", "\n", "self", ".", "critic", ".", "cuda", "(", ")", "\n", "self", ".", "target_critic", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.coma_learner.COMALearner.save_models": [[158, 163], ["coma_learner.COMALearner.mac.save_models", "torch.save", "torch.save", "torch.save", "coma_learner.COMALearner.critic.state_dict", "coma_learner.COMALearner.agent_optimiser.state_dict", "coma_learner.COMALearner.critic_optimiser.state_dict"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.save_models"], ["", "def", "save_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "mac", ".", "save_models", "(", "path", ")", "\n", "th", ".", "save", "(", "self", ".", "critic", ".", "state_dict", "(", ")", ",", "\"{}/critic.th\"", ".", "format", "(", "path", ")", ")", "\n", "th", ".", "save", "(", "self", ".", "agent_optimiser", ".", "state_dict", "(", ")", ",", "\"{}/agent_opt.th\"", ".", "format", "(", "path", ")", ")", "\n", "th", ".", "save", "(", "self", ".", "critic_optimiser", ".", "state_dict", "(", ")", ",", "\"{}/critic_opt.th\"", ".", "format", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.coma_learner.COMALearner.load_models": [[164, 170], ["coma_learner.COMALearner.mac.load_models", "coma_learner.COMALearner.critic.load_state_dict", "coma_learner.COMALearner.target_critic.load_state_dict", "coma_learner.COMALearner.agent_optimiser.load_state_dict", "coma_learner.COMALearner.critic_optimiser.load_state_dict", "torch.load", "coma_learner.COMALearner.critic.state_dict", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_models"], ["", "def", "load_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "mac", ".", "load_models", "(", "path", ")", "\n", "self", ".", "critic", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/critic.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "self", ".", "target_critic", ".", "load_state_dict", "(", "self", ".", "critic", ".", "state_dict", "(", ")", ")", "\n", "self", ".", "agent_optimiser", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/agent_opt.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "self", ".", "critic_optimiser", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/critic_opt.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.qtran_learner.QLearner.__init__": [[9, 31], ["list", "modules.mixers.qtran.QTran", "list", "copy.deepcopy", "torch.optim.RMSprop", "copy.deepcopy", "mac.parameters", "qtran_learner.QLearner.mixer.parameters"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters"], ["    ", "def", "__init__", "(", "self", ",", "mac", ",", "scheme", ",", "logger", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "mac", "=", "mac", "\n", "self", ".", "logger", "=", "logger", "\n", "\n", "self", ".", "params", "=", "list", "(", "mac", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "last_target_update_episode", "=", "0", "\n", "\n", "self", ".", "mixer", "=", "None", "\n", "assert", "args", ".", "mixer", "==", "\"qtran_alt\"", "\n", "self", ".", "mixer", "=", "QTranAlt", "(", "args", ")", "\n", "\n", "self", ".", "params", "+=", "list", "(", "self", ".", "mixer", ".", "parameters", "(", ")", ")", "\n", "self", ".", "target_mixer", "=", "copy", ".", "deepcopy", "(", "self", ".", "mixer", ")", "\n", "\n", "self", ".", "optimiser", "=", "RMSprop", "(", "params", "=", "self", ".", "params", ",", "lr", "=", "args", ".", "lr", ",", "alpha", "=", "args", ".", "optim_alpha", ",", "eps", "=", "args", ".", "optim_eps", ")", "\n", "\n", "# a little wasteful to deepcopy (e.g. duplicates action selector), but should work for any MAC", "\n", "self", ".", "target_mac", "=", "copy", ".", "deepcopy", "(", "mac", ")", "\n", "\n", "self", ".", "log_stats_t", "=", "-", "self", ".", "args", ".", "learner_log_interval", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.qtran_learner.QLearner.train": [[32, 139], ["[].float", "[].float", "qtran_learner.QLearner.mac.init_hidden", "range", "torch.stack", "torch.gather().squeeze", "qtran_learner.QLearner.target_mac.init_hidden", "range", "torch.stack", "torch.stack.clone().detach", "mac_out_maxs[].max", "qtran_learner.QLearner.mixer", "torch.zeros", "torch.zeros.scatter", "th.zeros.scatter.repeat", "agent_mask.view().repeat.view().repeat.view().repeat", "masked_actions.view.view.view", "qtran_learner.QLearner.target_mixer", "target_counter_qs.gather", "counter_qs.gather", "[].float.repeat().view", "torch.zeros", "torch.zeros.scatter", "th.zeros.scatter.repeat", "agent_mask.view().repeat.view().repeat.view().repeat", "opt_masked_actions.view.view.view", "qtran_learner.QLearner.mixer", "torch.gather().squeeze.clone().unsqueeze().repeat().view", "torch.tensor().repeat", "th.gather().squeeze.clone().unsqueeze().repeat().view.scatter", "qtran_learner.QLearner.optimiser.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_norm_", "qtran_learner.QLearner.optimiser.step", "qtran_learner.QLearner.mac.forward", "torch.stack.append", "qtran_learner.QLearner.target_mac.forward", "torch.stack.append", "torch.stack.max", "torch.eye", "agent_mask.view().repeat.view().repeat.unsqueeze().unsqueeze", "cur_max_actions.view", "actions.contiguous().view", "rewards.repeat().view", "td_targets.detach", "[].float.repeat().view.sum", "torch.eye", "agent_mask.view().repeat.view().repeat.unsqueeze().unsqueeze", "[].float.repeat().view.sum", "torch.tensor().repeat.unsqueeze", "torch.min", "[].float.repeat().view.sum", "qtran_learner.QLearner._update_targets", "qtran_learner.QLearner.logger.log_stat", "qtran_learner.QLearner.logger.log_stat", "[].float.sum().item", "qtran_learner.QLearner.logger.log_stat", "qtran_learner.QLearner.logger.log_stat", "qtran_learner.QLearner.logger.log_stat", "torch.gather", "torch.stack.clone", "agent_mask.view().repeat.view().repeat.view", "[].float.repeat", "agent_mask.view().repeat.view().repeat.view", "max_actions_qvals.squeeze().sum().repeat().view", "opt_target_qs.gather().detach", "torch.gather().squeeze.clone().unsqueeze().repeat", "torch.tensor", "counter_qs.detach", "loss.item", "agent_mask.view().repeat.view().repeat.unsqueeze", "actions.contiguous", "rewards.repeat", "agent_mask.view().repeat.view().repeat.unsqueeze", "mac_out[].contiguous().view", "th.gather().squeeze.clone().unsqueeze().repeat().view.sum", "[].float.sum", "masked_td_error.abs().sum().item", "[].float.repeat().view.sum().item", "[].float.repeat().view", "max_actions_qvals.squeeze().sum().repeat", "opt_target_qs.gather", "torch.gather().squeeze.clone().unsqueeze", "max_actions_current.view", "range", "mac_out[].contiguous", "masked_td_error.abs().sum", "[].float.repeat().view.sum", "[].float.repeat", "max_actions_qvals.squeeze().sum", "torch.gather().squeeze.clone", "masked_td_error.abs", "max_actions_qvals.squeeze"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner._update_targets", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat"], ["", "def", "train", "(", "self", ",", "batch", ":", "EpisodeBatch", ",", "t_env", ":", "int", ",", "episode_num", ":", "int", ")", ":", "\n", "# Get the relevant quantities", "\n", "        ", "rewards", "=", "batch", "[", "\"reward\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "actions", "=", "batch", "[", "\"actions\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "terminated", "=", "batch", "[", "\"terminated\"", "]", "[", ":", ",", ":", "-", "1", "]", ".", "float", "(", ")", "\n", "mask", "=", "batch", "[", "\"filled\"", "]", "[", ":", ",", ":", "-", "1", "]", ".", "float", "(", ")", "\n", "mask", "[", ":", ",", "1", ":", "]", "=", "mask", "[", ":", ",", "1", ":", "]", "*", "(", "1", "-", "terminated", "[", ":", ",", ":", "-", "1", "]", ")", "\n", "avail_actions", "=", "batch", "[", "\"avail_actions\"", "]", "\n", "\n", "# Calculate estimated Q-Values", "\n", "mac_out", "=", "[", "]", "\n", "self", ".", "mac", ".", "init_hidden", "(", "batch", ".", "batch_size", ")", "\n", "for", "t", "in", "range", "(", "batch", ".", "max_seq_length", ")", ":", "\n", "            ", "agent_outs", "=", "self", ".", "mac", ".", "forward", "(", "batch", ",", "t", "=", "t", ")", "\n", "mac_out", ".", "append", "(", "agent_outs", ")", "\n", "", "mac_out", "=", "th", ".", "stack", "(", "mac_out", ",", "dim", "=", "1", ")", "# Concat over time", "\n", "\n", "# Pick the Q-Values for the actions taken by each agent", "\n", "chosen_action_qvals", "=", "th", ".", "gather", "(", "mac_out", "[", ":", ",", ":", "-", "1", "]", ",", "dim", "=", "3", ",", "index", "=", "actions", ")", ".", "squeeze", "(", "3", ")", "# Remove the last dim", "\n", "\n", "# Calculate the Q-Values necessary for the target", "\n", "target_mac_out", "=", "[", "]", "\n", "self", ".", "target_mac", ".", "init_hidden", "(", "batch", ".", "batch_size", ")", "\n", "for", "t", "in", "range", "(", "batch", ".", "max_seq_length", ")", ":", "\n", "            ", "target_agent_outs", "=", "self", ".", "target_mac", ".", "forward", "(", "batch", ",", "t", "=", "t", ")", "\n", "target_mac_out", ".", "append", "(", "target_agent_outs", ")", "\n", "\n", "# We don't need the first timesteps Q-Value estimate for calculating targets", "\n", "", "target_mac_out", "=", "th", ".", "stack", "(", "target_mac_out", "[", "1", ":", "]", ",", "dim", "=", "1", ")", "# Concat across time", "\n", "\n", "# Mask out unavailable actions", "\n", "target_mac_out", "[", "avail_actions", "[", ":", ",", "1", ":", "]", "==", "0", "]", "=", "-", "9999999", "# From OG deepmarl", "\n", "mac_out_maxs", "=", "mac_out", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "mac_out_maxs", "[", "avail_actions", "==", "0", "]", "=", "-", "9999999", "\n", "\n", "# Best joint action computed by target agents", "\n", "cur_max_actions", "=", "target_mac_out", ".", "max", "(", "dim", "=", "3", ",", "keepdim", "=", "True", ")", "[", "1", "]", "\n", "# Best joint-action computed by regular agents", "\n", "max_actions_qvals", ",", "max_actions_current", "=", "mac_out_maxs", "[", ":", ",", ":", "-", "1", "]", ".", "max", "(", "dim", "=", "3", ",", "keepdim", "=", "True", ")", "\n", "\n", "counter_qs", ",", "vs", "=", "self", ".", "mixer", "(", "batch", "[", ":", ",", ":", "-", "1", "]", ")", "\n", "\n", "# Need to argmax across the target agents' actions", "\n", "# Convert cur_max_actions to one hot", "\n", "max_actions", "=", "th", ".", "zeros", "(", "size", "=", "(", "batch", ".", "batch_size", ",", "batch", ".", "max_seq_length", "-", "1", ",", "self", ".", "args", ".", "n_agents", ",", "self", ".", "args", ".", "n_actions", ")", ",", "device", "=", "batch", ".", "device", ")", "\n", "max_actions_onehot", "=", "max_actions", ".", "scatter", "(", "3", ",", "cur_max_actions", ",", "1", ")", "\n", "max_actions_onehot_repeat", "=", "max_actions_onehot", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "args", ".", "n_agents", ",", "1", ")", "\n", "agent_mask", "=", "(", "1", "-", "th", ".", "eye", "(", "self", ".", "args", ".", "n_agents", ",", "device", "=", "batch", ".", "device", ")", ")", "\n", "agent_mask", "=", "agent_mask", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "args", ".", "n_actions", ")", "#.view(self.n_agents, -1)", "\n", "masked_actions", "=", "max_actions_onehot_repeat", "*", "agent_mask", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "masked_actions", "=", "masked_actions", ".", "view", "(", "-", "1", ",", "self", ".", "args", ".", "n_agents", "*", "self", ".", "args", ".", "n_actions", ")", "\n", "target_counter_qs", ",", "target_vs", "=", "self", ".", "target_mixer", "(", "batch", "[", ":", ",", "1", ":", "]", ",", "masked_actions", ")", "\n", "\n", "# Td loss", "\n", "td_target_qs", "=", "target_counter_qs", ".", "gather", "(", "1", ",", "cur_max_actions", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "td_chosen_qs", "=", "counter_qs", ".", "gather", "(", "1", ",", "actions", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "td_targets", "=", "rewards", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "args", ".", "n_agents", ")", ".", "view", "(", "-", "1", ",", "1", ")", "+", "self", ".", "args", ".", "gamma", "*", "(", "1", "-", "terminated", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "args", ".", "n_agents", ")", ".", "view", "(", "-", "1", ",", "1", ")", ")", "*", "td_target_qs", "\n", "td_error", "=", "(", "td_chosen_qs", "-", "td_targets", ".", "detach", "(", ")", ")", "\n", "\n", "td_mask", "=", "mask", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "args", ".", "n_agents", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "masked_td_error", "=", "td_error", "*", "td_mask", "\n", "\n", "td_loss", "=", "(", "masked_td_error", "**", "2", ")", ".", "sum", "(", ")", "/", "td_mask", ".", "sum", "(", ")", "\n", "\n", "# Opt loss", "\n", "# Computing the targets", "\n", "opt_max_actions", "=", "th", ".", "zeros", "(", "size", "=", "(", "batch", ".", "batch_size", ",", "batch", ".", "max_seq_length", "-", "1", ",", "self", ".", "args", ".", "n_agents", ",", "self", ".", "args", ".", "n_actions", ")", ",", "device", "=", "batch", ".", "device", ")", "\n", "opt_max_actions_onehot", "=", "opt_max_actions", ".", "scatter", "(", "3", ",", "max_actions_current", ",", "1", ")", "\n", "opt_max_actions_onehot_repeat", "=", "opt_max_actions_onehot", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "args", ".", "n_agents", ",", "1", ")", "\n", "agent_mask", "=", "(", "1", "-", "th", ".", "eye", "(", "self", ".", "args", ".", "n_agents", ",", "device", "=", "batch", ".", "device", ")", ")", "\n", "agent_mask", "=", "agent_mask", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "args", ".", "n_actions", ")", "\n", "opt_masked_actions", "=", "opt_max_actions_onehot_repeat", "*", "agent_mask", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "opt_masked_actions", "=", "opt_masked_actions", ".", "view", "(", "-", "1", ",", "self", ".", "args", ".", "n_agents", "*", "self", ".", "args", ".", "n_actions", ")", "\n", "\n", "opt_target_qs", ",", "opt_vs", "=", "self", ".", "mixer", "(", "batch", "[", ":", ",", ":", "-", "1", "]", ",", "opt_masked_actions", ")", "\n", "\n", "opt_error", "=", "max_actions_qvals", ".", "squeeze", "(", "3", ")", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "args", ".", "n_agents", ")", ".", "view", "(", "-", "1", ",", "1", ")", "-", "opt_target_qs", ".", "gather", "(", "1", ",", "max_actions_current", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "detach", "(", ")", "+", "opt_vs", "\n", "opt_loss", "=", "(", "(", "opt_error", "*", "td_mask", ")", "**", "2", ")", ".", "sum", "(", ")", "/", "td_mask", ".", "sum", "(", ")", "\n", "\n", "# NOpt loss", "\n", "qsums", "=", "chosen_action_qvals", ".", "clone", "(", ")", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "args", ".", "n_agents", ",", "1", ")", ".", "view", "(", "-", "1", ",", "self", ".", "args", ".", "n_agents", ")", "\n", "ids_to_zero", "=", "th", ".", "tensor", "(", "[", "i", "for", "i", "in", "range", "(", "self", ".", "args", ".", "n_agents", ")", "]", ",", "device", "=", "batch", ".", "device", ")", ".", "repeat", "(", "batch", ".", "batch_size", "*", "(", "batch", ".", "max_seq_length", "-", "1", ")", ")", "\n", "qsums", ".", "scatter", "(", "1", ",", "ids_to_zero", ".", "unsqueeze", "(", "1", ")", ",", "0", ")", "\n", "nopt_error", "=", "mac_out", "[", ":", ",", ":", "-", "1", "]", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "self", ".", "args", ".", "n_actions", ")", "+", "qsums", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "-", "counter_qs", ".", "detach", "(", ")", "+", "vs", "\n", "min_nopt_error", "=", "th", ".", "min", "(", "nopt_error", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "nopt_loss", "=", "(", "(", "min_nopt_error", "*", "td_mask", ")", "**", "2", ")", ".", "sum", "(", ")", "/", "td_mask", ".", "sum", "(", ")", "\n", "\n", "loss", "=", "td_loss", "+", "self", ".", "args", ".", "opt_loss", "*", "opt_loss", "+", "self", ".", "args", ".", "nopt_min_loss", "*", "nopt_loss", "\n", "\n", "# Optimise", "\n", "self", ".", "optimiser", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "grad_norm", "=", "th", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "params", ",", "self", ".", "args", ".", "grad_norm_clip", ")", "\n", "self", ".", "optimiser", ".", "step", "(", ")", "\n", "\n", "if", "(", "episode_num", "-", "self", ".", "last_target_update_episode", ")", "/", "self", ".", "args", ".", "target_update_interval", ">=", "1.0", ":", "\n", "            ", "self", ".", "_update_targets", "(", ")", "\n", "self", ".", "last_target_update_episode", "=", "episode_num", "\n", "\n", "", "if", "t_env", "-", "self", ".", "log_stats_t", ">=", "self", ".", "args", ".", "learner_log_interval", ":", "\n", "            ", "self", ".", "logger", ".", "log_stat", "(", "\"loss\"", ",", "loss", ".", "item", "(", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"grad_norm\"", ",", "grad_norm", ",", "t_env", ")", "\n", "mask_elems", "=", "mask", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"td_error_abs\"", ",", "(", "masked_td_error", ".", "abs", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"q_taken_mean\"", ",", "(", "chosen_action_qvals", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "(", "mask_elems", "*", "self", ".", "args", ".", "n_agents", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"target_mean\"", ",", "(", "td_targets", "*", "td_mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "td_mask", ".", "sum", "(", ")", ".", "item", "(", ")", ",", "t_env", ")", "\n", "self", ".", "log_stats_t", "=", "t_env", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.qtran_learner.QLearner._update_targets": [[140, 145], ["qtran_learner.QLearner.target_mac.load_state", "qtran_learner.QLearner.logger.console_logger.info", "qtran_learner.QLearner.target_mixer.load_state_dict", "qtran_learner.QLearner.mixer.state_dict"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_state"], ["", "", "def", "_update_targets", "(", "self", ")", ":", "\n", "        ", "self", ".", "target_mac", ".", "load_state", "(", "self", ".", "mac", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "self", ".", "target_mixer", ".", "load_state_dict", "(", "self", ".", "mixer", ".", "state_dict", "(", ")", ")", "\n", "", "self", ".", "logger", ".", "console_logger", ".", "info", "(", "\"Updated target network\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.qtran_learner.QLearner.cuda": [[146, 152], ["qtran_learner.QLearner.mac.cuda", "qtran_learner.QLearner.target_mac.cuda", "qtran_learner.QLearner.mixer.cuda", "qtran_learner.QLearner.target_mixer.cuda"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "self", ".", "mac", ".", "cuda", "(", ")", "\n", "self", ".", "target_mac", ".", "cuda", "(", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "self", ".", "mixer", ".", "cuda", "(", ")", "\n", "self", ".", "target_mixer", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.qtran_learner.QLearner.save_models": [[153, 158], ["qtran_learner.QLearner.mac.save_models", "torch.save", "torch.save", "qtran_learner.QLearner.optimiser.state_dict", "qtran_learner.QLearner.mixer.state_dict"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.save_models"], ["", "", "def", "save_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "mac", ".", "save_models", "(", "path", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "th", ".", "save", "(", "self", ".", "mixer", ".", "state_dict", "(", ")", ",", "\"{}/mixer.th\"", ".", "format", "(", "path", ")", ")", "\n", "", "th", ".", "save", "(", "self", ".", "optimiser", ".", "state_dict", "(", ")", ",", "\"{}/opt.th\"", ".", "format", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.qtran_learner.QLearner.load_models": [[159, 166], ["qtran_learner.QLearner.mac.load_models", "qtran_learner.QLearner.target_mac.load_models", "qtran_learner.QLearner.optimiser.load_state_dict", "qtran_learner.QLearner.mixer.load_state_dict", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_models", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_models"], ["", "def", "load_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "mac", ".", "load_models", "(", "path", ")", "\n", "# Not quite right but I don't want to save target networks", "\n", "self", ".", "target_mac", ".", "load_models", "(", "path", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "self", ".", "mixer", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/mixer.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "self", ".", "optimiser", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/opt.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner.__init__": [[10, 35], ["list", "torch.optim.RMSprop", "copy.deepcopy", "mac.parameters", "list", "copy.deepcopy", "modules.mixers.vdn.VDNMixer", "q_learner.QLearner.mixer.parameters", "modules.mixers.qmix.QMixer", "ValueError"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters"], ["    ", "def", "__init__", "(", "self", ",", "mac", ",", "scheme", ",", "logger", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "mac", "=", "mac", "\n", "self", ".", "logger", "=", "logger", "\n", "\n", "self", ".", "params", "=", "list", "(", "mac", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "last_target_update_episode", "=", "0", "\n", "\n", "self", ".", "mixer", "=", "None", "\n", "if", "args", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "if", "args", ".", "mixer", "==", "\"vdn\"", ":", "\n", "                ", "self", ".", "mixer", "=", "VDNMixer", "(", ")", "\n", "", "elif", "args", ".", "mixer", "==", "\"qmix\"", ":", "\n", "                ", "self", ".", "mixer", "=", "QMixer", "(", "args", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"Mixer {} not recognised.\"", ".", "format", "(", "args", ".", "mixer", ")", ")", "\n", "", "self", ".", "params", "+=", "list", "(", "self", ".", "mixer", ".", "parameters", "(", ")", ")", "\n", "self", ".", "target_mixer", "=", "copy", ".", "deepcopy", "(", "self", ".", "mixer", ")", "\n", "\n", "", "self", ".", "optimiser", "=", "RMSprop", "(", "params", "=", "self", ".", "params", ",", "lr", "=", "args", ".", "lr", ",", "alpha", "=", "args", ".", "optim_alpha", ",", "eps", "=", "args", ".", "optim_eps", ")", "\n", "\n", "self", ".", "target_mac", "=", "copy", ".", "deepcopy", "(", "mac", ")", "\n", "\n", "self", ".", "log_stats_t", "=", "-", "self", ".", "args", ".", "learner_log_interval", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner.train": [[36, 115], ["[].float", "[].float", "q_learner.QLearner.mac.init_hidden", "range", "torch.stack", "torch.gather().squeeze", "q_learner.QLearner.target_mac.init_hidden", "range", "torch.stack", "mask.expand_as.expand_as.expand_as", "q_learner.QLearner.optimiser.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_norm_", "q_learner.QLearner.optimiser.step", "q_learner.QLearner.mac.forward", "torch.stack.append", "q_learner.QLearner.target_mac.forward", "torch.stack.append", "torch.gather().squeeze", "q_learner.QLearner.mixer", "q_learner.QLearner.target_mixer", "targets.detach", "mask.expand_as.expand_as.sum", "q_learner.QLearner._update_targets", "q_learner.QLearner.logger.log_stat", "q_learner.QLearner.logger.log_stat", "mask.expand_as.expand_as.sum().item", "q_learner.QLearner.logger.log_stat", "q_learner.QLearner.logger.log_stat", "q_learner.QLearner.logger.log_stat", "torch.gather", "mac_out[].max", "torch.stack.max", "loss.item", "torch.gather", "mask.expand_as.expand_as.sum", "masked_td_error.abs().sum().item", "masked_td_error.abs().sum", "masked_td_error.abs"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner._update_targets", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat"], ["", "def", "train", "(", "self", ",", "batch", ":", "EpisodeBatch", ",", "t_env", ":", "int", ",", "episode_num", ":", "int", ")", ":", "\n", "# Get the relevant quantities", "\n", "        ", "rewards", "=", "batch", "[", "\"reward\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "actions", "=", "batch", "[", "\"actions\"", "]", "[", ":", ",", ":", "-", "1", "]", "\n", "terminated", "=", "batch", "[", "\"terminated\"", "]", "[", ":", ",", ":", "-", "1", "]", ".", "float", "(", ")", "\n", "mask", "=", "batch", "[", "\"filled\"", "]", "[", ":", ",", ":", "-", "1", "]", ".", "float", "(", ")", "\n", "mask", "[", ":", ",", "1", ":", "]", "=", "mask", "[", ":", ",", "1", ":", "]", "*", "(", "1", "-", "terminated", "[", ":", ",", ":", "-", "1", "]", ")", "\n", "avail_actions", "=", "batch", "[", "\"avail_actions\"", "]", "\n", "\n", "# Calculate estimated Q-Values", "\n", "mac_out", "=", "[", "]", "\n", "self", ".", "mac", ".", "init_hidden", "(", "batch", ".", "batch_size", ")", "\n", "for", "t", "in", "range", "(", "batch", ".", "max_seq_length", ")", ":", "\n", "            ", "agent_outs", "=", "self", ".", "mac", ".", "forward", "(", "batch", ",", "t", "=", "t", ")", "\n", "mac_out", ".", "append", "(", "agent_outs", ")", "\n", "", "mac_out", "=", "th", ".", "stack", "(", "mac_out", ",", "dim", "=", "1", ")", "# Concat over time", "\n", "\n", "# Pick the Q-Values for the actions taken by each agent", "\n", "chosen_action_qvals", "=", "th", ".", "gather", "(", "mac_out", "[", ":", ",", ":", "-", "1", "]", ",", "dim", "=", "3", ",", "index", "=", "actions", ")", ".", "squeeze", "(", "3", ")", "# Remove the last dim", "\n", "\n", "# Calculate the Q-Values necessary for the target", "\n", "target_mac_out", "=", "[", "]", "\n", "self", ".", "target_mac", ".", "init_hidden", "(", "batch", ".", "batch_size", ")", "\n", "for", "t", "in", "range", "(", "batch", ".", "max_seq_length", ")", ":", "\n", "            ", "target_agent_outs", "=", "self", ".", "target_mac", ".", "forward", "(", "batch", ",", "t", "=", "t", ")", "\n", "target_mac_out", ".", "append", "(", "target_agent_outs", ")", "\n", "\n", "# We don't need the first timesteps Q-Value estimate for calculating targets", "\n", "", "target_mac_out", "=", "th", ".", "stack", "(", "target_mac_out", "[", "1", ":", "]", ",", "dim", "=", "1", ")", "# Concat across time", "\n", "\n", "# Mask out unavailable actions", "\n", "target_mac_out", "[", "avail_actions", "[", ":", ",", "1", ":", "]", "==", "0", "]", "=", "-", "9999999", "# From OG deepmarl", "\n", "\n", "# Max over target Q-Values", "\n", "if", "self", ".", "args", ".", "double_q", ":", "\n", "# Get actions that maximise live Q (for double q-learning)", "\n", "            ", "mac_out", "[", "avail_actions", "==", "0", "]", "=", "-", "9999999", "\n", "cur_max_actions", "=", "mac_out", "[", ":", ",", "1", ":", "]", ".", "max", "(", "dim", "=", "3", ",", "keepdim", "=", "True", ")", "[", "1", "]", "\n", "target_max_qvals", "=", "th", ".", "gather", "(", "target_mac_out", ",", "3", ",", "cur_max_actions", ")", ".", "squeeze", "(", "3", ")", "\n", "", "else", ":", "\n", "            ", "target_max_qvals", "=", "target_mac_out", ".", "max", "(", "dim", "=", "3", ")", "[", "0", "]", "\n", "\n", "# Mix", "\n", "", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "chosen_action_qvals", "=", "self", ".", "mixer", "(", "chosen_action_qvals", ",", "batch", "[", "\"state\"", "]", "[", ":", ",", ":", "-", "1", "]", ")", "\n", "target_max_qvals", "=", "self", ".", "target_mixer", "(", "target_max_qvals", ",", "batch", "[", "\"state\"", "]", "[", ":", ",", "1", ":", "]", ")", "\n", "\n", "# Calculate 1-step Q-Learning targets", "\n", "", "targets", "=", "rewards", "+", "self", ".", "args", ".", "gamma", "*", "(", "1", "-", "terminated", ")", "*", "target_max_qvals", "\n", "\n", "# Td-error", "\n", "td_error", "=", "(", "chosen_action_qvals", "-", "targets", ".", "detach", "(", ")", ")", "\n", "\n", "mask", "=", "mask", ".", "expand_as", "(", "td_error", ")", "\n", "\n", "# 0-out the targets that came from padded data", "\n", "masked_td_error", "=", "td_error", "*", "mask", "\n", "\n", "# Normal L2 loss, take mean over actual data", "\n", "loss", "=", "(", "masked_td_error", "**", "2", ")", ".", "sum", "(", ")", "/", "mask", ".", "sum", "(", ")", "\n", "\n", "# Optimise", "\n", "self", ".", "optimiser", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "grad_norm", "=", "th", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "params", ",", "self", ".", "args", ".", "grad_norm_clip", ")", "\n", "self", ".", "optimiser", ".", "step", "(", ")", "\n", "\n", "if", "(", "episode_num", "-", "self", ".", "last_target_update_episode", ")", "/", "self", ".", "args", ".", "target_update_interval", ">=", "1.0", ":", "\n", "            ", "self", ".", "_update_targets", "(", ")", "\n", "self", ".", "last_target_update_episode", "=", "episode_num", "\n", "\n", "", "if", "t_env", "-", "self", ".", "log_stats_t", ">=", "self", ".", "args", ".", "learner_log_interval", ":", "\n", "            ", "self", ".", "logger", ".", "log_stat", "(", "\"loss\"", ",", "loss", ".", "item", "(", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"grad_norm\"", ",", "grad_norm", ",", "t_env", ")", "\n", "mask_elems", "=", "mask", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"td_error_abs\"", ",", "(", "masked_td_error", ".", "abs", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "mask_elems", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"q_taken_mean\"", ",", "(", "chosen_action_qvals", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "(", "mask_elems", "*", "self", ".", "args", ".", "n_agents", ")", ",", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"target_mean\"", ",", "(", "targets", "*", "mask", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "(", "mask_elems", "*", "self", ".", "args", ".", "n_agents", ")", ",", "t_env", ")", "\n", "self", ".", "log_stats_t", "=", "t_env", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner._update_targets": [[116, 121], ["q_learner.QLearner.target_mac.load_state", "q_learner.QLearner.logger.console_logger.info", "q_learner.QLearner.target_mixer.load_state_dict", "q_learner.QLearner.mixer.state_dict"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_state"], ["", "", "def", "_update_targets", "(", "self", ")", ":", "\n", "        ", "self", ".", "target_mac", ".", "load_state", "(", "self", ".", "mac", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "self", ".", "target_mixer", ".", "load_state_dict", "(", "self", ".", "mixer", ".", "state_dict", "(", ")", ")", "\n", "", "self", ".", "logger", ".", "console_logger", ".", "info", "(", "\"Updated target network\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner.cuda": [[122, 128], ["q_learner.QLearner.mac.cuda", "q_learner.QLearner.target_mac.cuda", "q_learner.QLearner.mixer.cuda", "q_learner.QLearner.target_mixer.cuda"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "self", ".", "mac", ".", "cuda", "(", ")", "\n", "self", ".", "target_mac", ".", "cuda", "(", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "self", ".", "mixer", ".", "cuda", "(", ")", "\n", "self", ".", "target_mixer", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner.save_models": [[129, 134], ["q_learner.QLearner.mac.save_models", "torch.save", "torch.save", "q_learner.QLearner.optimiser.state_dict", "q_learner.QLearner.mixer.state_dict"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.save_models"], ["", "", "def", "save_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "mac", ".", "save_models", "(", "path", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "th", ".", "save", "(", "self", ".", "mixer", ".", "state_dict", "(", ")", ",", "\"{}/mixer.th\"", ".", "format", "(", "path", ")", ")", "\n", "", "th", ".", "save", "(", "self", ".", "optimiser", ".", "state_dict", "(", ")", ",", "\"{}/opt.th\"", ".", "format", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.learners.q_learner.QLearner.load_models": [[135, 141], ["q_learner.QLearner.mac.load_models", "q_learner.QLearner.target_mac.load_models", "q_learner.QLearner.optimiser.load_state_dict", "q_learner.QLearner.mixer.load_state_dict", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_models", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_models"], ["", "def", "load_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "mac", ".", "load_models", "(", "path", ")", "\n", "self", ".", "target_mac", ".", "load_models", "(", "path", ")", "\n", "if", "self", ".", "mixer", "is", "not", "None", ":", "\n", "            ", "self", ".", "mixer", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/mixer.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "self", ".", "optimiser", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/opt.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC.__init__": [[8, 18], ["basic_controller.BasicMAC._get_input_shape", "basic_controller.BasicMAC._build_agents"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic._get_input_shape", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC._build_agents"], ["    ", "def", "__init__", "(", "self", ",", "scheme", ",", "groups", ",", "args", ")", ":", "\n", "        ", "self", ".", "n_agents", "=", "args", ".", "n_agents", "\n", "self", ".", "args", "=", "args", "\n", "input_shape", "=", "self", ".", "_get_input_shape", "(", "scheme", ")", "\n", "self", ".", "_build_agents", "(", "input_shape", ")", "\n", "self", ".", "agent_output_type", "=", "args", ".", "agent_output_type", "\n", "\n", "self", ".", "action_selector", "=", "action_REGISTRY", "[", "args", ".", "action_selector", "]", "(", "args", ")", "\n", "\n", "self", ".", "hidden_states", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC.select_actions": [[19, 25], ["slice", "basic_controller.BasicMAC.forward", "basic_controller.BasicMAC.action_selector.select_action"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.action_selectors.EpsilonGreedyActionSelector.select_action"], ["", "def", "select_actions", "(", "self", ",", "ep_batch", ",", "t_ep", ",", "t_env", ",", "bs", "=", "slice", "(", "None", ")", ",", "test_mode", "=", "False", ")", ":", "\n", "# Only select actions for the selected batch elements in bs", "\n", "        ", "avail_actions", "=", "ep_batch", "[", "\"avail_actions\"", "]", "[", ":", ",", "t_ep", "]", "\n", "agent_outputs", "=", "self", ".", "forward", "(", "ep_batch", ",", "t_ep", ",", "test_mode", "=", "test_mode", ")", "\n", "chosen_actions", "=", "self", ".", "action_selector", ".", "select_action", "(", "agent_outputs", "[", "bs", "]", ",", "avail_actions", "[", "bs", "]", ",", "t_env", ",", "test_mode", "=", "test_mode", ")", "\n", "return", "chosen_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC.forward": [[26, 54], ["basic_controller.BasicMAC._build_inputs", "basic_controller.BasicMAC.agent", "torch.nn.functional.softmax.view", "getattr", "torch.nn.functional.softmax", "avail_actions.reshape", "torch.nn.functional.softmax.size", "getattr", "getattr", "avail_actions.reshape.sum().float", "avail_actions.reshape.sum", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic._build_inputs"], ["", "def", "forward", "(", "self", ",", "ep_batch", ",", "t", ",", "test_mode", "=", "False", ")", ":", "\n", "        ", "agent_inputs", "=", "self", ".", "_build_inputs", "(", "ep_batch", ",", "t", ")", "\n", "avail_actions", "=", "ep_batch", "[", "\"avail_actions\"", "]", "[", ":", ",", "t", "]", "\n", "agent_outs", ",", "self", ".", "hidden_states", "=", "self", ".", "agent", "(", "agent_inputs", ",", "self", ".", "hidden_states", ")", "\n", "\n", "if", "self", ".", "agent_output_type", "==", "\"pi_logits\"", ":", "\n", "\n", "            ", "if", "getattr", "(", "self", ".", "args", ",", "\"mask_before_softmax\"", ",", "True", ")", ":", "\n", "# Make the logits for unavailable actions very negative to minimise their affect on the softmax", "\n", "                ", "reshaped_avail_actions", "=", "avail_actions", ".", "reshape", "(", "ep_batch", ".", "batch_size", "*", "self", ".", "n_agents", ",", "-", "1", ")", "\n", "agent_outs", "[", "reshaped_avail_actions", "==", "0", "]", "=", "-", "1e10", "\n", "\n", "", "agent_outs", "=", "th", ".", "nn", ".", "functional", ".", "softmax", "(", "agent_outs", ",", "dim", "=", "-", "1", ")", "\n", "if", "not", "test_mode", ":", "\n", "# Epsilon floor", "\n", "                ", "epsilon_action_num", "=", "agent_outs", ".", "size", "(", "-", "1", ")", "\n", "if", "getattr", "(", "self", ".", "args", ",", "\"mask_before_softmax\"", ",", "True", ")", ":", "\n", "# With probability epsilon, we will pick an available action uniformly", "\n", "                    ", "epsilon_action_num", "=", "reshaped_avail_actions", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "float", "(", ")", "\n", "\n", "", "agent_outs", "=", "(", "(", "1", "-", "self", ".", "action_selector", ".", "epsilon", ")", "*", "agent_outs", "\n", "+", "th", ".", "ones_like", "(", "agent_outs", ")", "*", "self", ".", "action_selector", ".", "epsilon", "/", "epsilon_action_num", ")", "\n", "\n", "if", "getattr", "(", "self", ".", "args", ",", "\"mask_before_softmax\"", ",", "True", ")", ":", "\n", "# Zero out the unavailable actions", "\n", "                    ", "agent_outs", "[", "reshaped_avail_actions", "==", "0", "]", "=", "0.0", "\n", "\n", "", "", "", "return", "agent_outs", ".", "view", "(", "ep_batch", ".", "batch_size", ",", "self", ".", "n_agents", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC.init_hidden": [[55, 57], ["basic_controller.BasicMAC.agent.init_hidden().unsqueeze().expand", "basic_controller.BasicMAC.agent.init_hidden().unsqueeze", "basic_controller.BasicMAC.agent.init_hidden"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden"], ["", "def", "init_hidden", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "self", ".", "hidden_states", "=", "self", ".", "agent", ".", "init_hidden", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "batch_size", ",", "self", ".", "n_agents", ",", "-", "1", ")", "# bav", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC.parameters": [[58, 60], ["basic_controller.BasicMAC.agent.parameters"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters"], ["", "def", "parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "agent", ".", "parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC.load_state": [[61, 63], ["basic_controller.BasicMAC.agent.load_state_dict", "other_mac.agent.state_dict"], "methods", ["None"], ["", "def", "load_state", "(", "self", ",", "other_mac", ")", ":", "\n", "        ", "self", ".", "agent", ".", "load_state_dict", "(", "other_mac", ".", "agent", ".", "state_dict", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC.cuda": [[64, 66], ["basic_controller.BasicMAC.agent.cuda"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "self", ".", "agent", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC.save_models": [[67, 69], ["torch.save", "basic_controller.BasicMAC.agent.state_dict"], "methods", ["None"], ["", "def", "save_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "th", ".", "save", "(", "self", ".", "agent", ".", "state_dict", "(", ")", ",", "\"{}/agent.th\"", ".", "format", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC.load_models": [[70, 72], ["basic_controller.BasicMAC.agent.load_state_dict", "torch.load"], "methods", ["None"], ["", "def", "load_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "agent", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/agent.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC._build_agents": [[73, 75], ["None"], "methods", ["None"], ["", "def", "_build_agents", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "self", ".", "agent", "=", "agent_REGISTRY", "[", "self", ".", "args", ".", "agent", "]", "(", "input_shape", ",", "self", ".", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC._build_inputs": [[76, 92], ["torch.cat.append", "torch.cat", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.eye().unsqueeze().expand", "x.reshape", "torch.zeros_like", "torch.eye().unsqueeze", "torch.eye"], "methods", ["None"], ["", "def", "_build_inputs", "(", "self", ",", "batch", ",", "t", ")", ":", "\n", "# Assumes homogenous agents with flat observations.", "\n", "# Other MACs might want to e.g. delegate building inputs to each agent", "\n", "        ", "bs", "=", "batch", ".", "batch_size", "\n", "inputs", "=", "[", "]", "\n", "inputs", ".", "append", "(", "batch", "[", "\"obs\"", "]", "[", ":", ",", "t", "]", ")", "# b1av", "\n", "if", "self", ".", "args", ".", "obs_last_action", ":", "\n", "            ", "if", "t", "==", "0", ":", "\n", "                ", "inputs", ".", "append", "(", "th", ".", "zeros_like", "(", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "t", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "inputs", ".", "append", "(", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "t", "-", "1", "]", ")", "\n", "", "", "if", "self", ".", "args", ".", "obs_agent_id", ":", "\n", "            ", "inputs", ".", "append", "(", "th", ".", "eye", "(", "self", ".", "n_agents", ",", "device", "=", "batch", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "bs", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "\n", "", "inputs", "=", "th", ".", "cat", "(", "[", "x", ".", "reshape", "(", "bs", "*", "self", ".", "n_agents", ",", "-", "1", ")", "for", "x", "in", "inputs", "]", ",", "dim", "=", "1", ")", "\n", "return", "inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.basic_controller.BasicMAC._get_input_shape": [[93, 101], ["None"], "methods", ["None"], ["", "def", "_get_input_shape", "(", "self", ",", "scheme", ")", ":", "\n", "        ", "input_shape", "=", "scheme", "[", "\"obs\"", "]", "[", "\"vshape\"", "]", "\n", "if", "self", ".", "args", ".", "obs_last_action", ":", "\n", "            ", "input_shape", "+=", "scheme", "[", "\"actions_onehot\"", "]", "[", "\"vshape\"", "]", "[", "0", "]", "\n", "", "if", "self", ".", "args", ".", "obs_agent_id", ":", "\n", "            ", "input_shape", "+=", "self", ".", "n_agents", "\n", "\n", "", "return", "input_shape", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.__init__": [[8, 18], ["noise_controller.NoiseMAC._get_input_shape", "noise_controller.NoiseMAC._build_agents"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic._get_input_shape", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC._build_agents"], ["    ", "def", "__init__", "(", "self", ",", "scheme", ",", "groups", ",", "args", ")", ":", "\n", "        ", "self", ".", "n_agents", "=", "args", ".", "n_agents", "\n", "self", ".", "args", "=", "args", "\n", "input_shape", "=", "self", ".", "_get_input_shape", "(", "scheme", ")", "\n", "self", ".", "_build_agents", "(", "input_shape", ")", "\n", "self", ".", "agent_output_type", "=", "args", ".", "agent_output_type", "\n", "\n", "self", ".", "action_selector", "=", "action_REGISTRY", "[", "args", ".", "action_selector", "]", "(", "args", ")", "\n", "\n", "self", ".", "hidden_states", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.select_actions": [[19, 25], ["slice", "noise_controller.NoiseMAC.forward", "noise_controller.NoiseMAC.action_selector.select_action"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.action_selectors.EpsilonGreedyActionSelector.select_action"], ["", "def", "select_actions", "(", "self", ",", "ep_batch", ",", "t_ep", ",", "t_env", ",", "bs", "=", "slice", "(", "None", ")", ",", "test_mode", "=", "False", ")", ":", "\n", "# Only select actions for the selected batch elements in bs", "\n", "        ", "avail_actions", "=", "ep_batch", "[", "\"avail_actions\"", "]", "[", ":", ",", "t_ep", "]", "\n", "agent_outputs", "=", "self", ".", "forward", "(", "ep_batch", ",", "t_ep", ",", "test_mode", "=", "test_mode", ")", "\n", "chosen_actions", "=", "self", ".", "action_selector", ".", "select_action", "(", "agent_outputs", "[", "bs", "]", ",", "avail_actions", "[", "bs", "]", ",", "t_env", ",", "test_mode", "=", "test_mode", ")", "\n", "return", "chosen_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.forward": [[26, 55], ["noise_controller.NoiseMAC._build_inputs", "noise_controller.NoiseMAC.agent", "torch.nn.functional.softmax.view", "getattr", "torch.nn.functional.softmax", "avail_actions.reshape", "torch.nn.functional.softmax.size", "getattr", "getattr", "avail_actions.reshape.sum().float", "avail_actions.reshape.sum", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic._build_inputs"], ["", "def", "forward", "(", "self", ",", "ep_batch", ",", "t", ",", "test_mode", "=", "False", ")", ":", "\n", "        ", "agent_inputs", "=", "self", ".", "_build_inputs", "(", "ep_batch", ",", "t", ")", "\n", "avail_actions", "=", "ep_batch", "[", "\"avail_actions\"", "]", "[", ":", ",", "t", "]", "\n", "noise_vector", "=", "ep_batch", "[", "\"noise\"", "]", "[", ":", ",", "0", "]", "\n", "agent_outs", ",", "self", ".", "hidden_states", "=", "self", ".", "agent", "(", "agent_inputs", ",", "self", ".", "hidden_states", ",", "noise_vector", ")", "\n", "\n", "if", "self", ".", "agent_output_type", "==", "\"pi_logits\"", ":", "\n", "\n", "            ", "if", "getattr", "(", "self", ".", "args", ",", "\"mask_before_softmax\"", ",", "True", ")", ":", "\n", "# Make the logits for unavailable actions very negative to minimise their affect on the softmax", "\n", "                ", "reshaped_avail_actions", "=", "avail_actions", ".", "reshape", "(", "ep_batch", ".", "batch_size", "*", "self", ".", "n_agents", ",", "-", "1", ")", "\n", "agent_outs", "[", "reshaped_avail_actions", "==", "0", "]", "=", "-", "1e10", "\n", "\n", "", "agent_outs", "=", "th", ".", "nn", ".", "functional", ".", "softmax", "(", "agent_outs", ",", "dim", "=", "-", "1", ")", "\n", "if", "not", "test_mode", ":", "\n", "# Epsilon floor", "\n", "                ", "epsilon_action_num", "=", "agent_outs", ".", "size", "(", "-", "1", ")", "\n", "if", "getattr", "(", "self", ".", "args", ",", "\"mask_before_softmax\"", ",", "True", ")", ":", "\n", "# With probability epsilon, we will pick an available action uniformly", "\n", "                    ", "epsilon_action_num", "=", "reshaped_avail_actions", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "float", "(", ")", "\n", "\n", "", "agent_outs", "=", "(", "(", "1", "-", "self", ".", "action_selector", ".", "epsilon", ")", "*", "agent_outs", "\n", "+", "th", ".", "ones_like", "(", "agent_outs", ")", "*", "self", ".", "action_selector", ".", "epsilon", "/", "epsilon_action_num", ")", "\n", "\n", "if", "getattr", "(", "self", ".", "args", ",", "\"mask_before_softmax\"", ",", "True", ")", ":", "\n", "# Zero out the unavailable actions", "\n", "                    ", "agent_outs", "[", "reshaped_avail_actions", "==", "0", "]", "=", "0.0", "\n", "\n", "", "", "", "return", "agent_outs", ".", "view", "(", "ep_batch", ".", "batch_size", ",", "self", ".", "n_agents", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.init_hidden": [[56, 58], ["noise_controller.NoiseMAC.agent.init_hidden().unsqueeze().expand", "noise_controller.NoiseMAC.agent.init_hidden().unsqueeze", "noise_controller.NoiseMAC.agent.init_hidden"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden"], ["", "def", "init_hidden", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "self", ".", "hidden_states", "=", "self", ".", "agent", ".", "init_hidden", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "batch_size", ",", "self", ".", "n_agents", ",", "-", "1", ")", "# bav", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters": [[59, 61], ["noise_controller.NoiseMAC.agent.parameters"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters"], ["", "def", "parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "agent", ".", "parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_state": [[62, 64], ["noise_controller.NoiseMAC.agent.load_state_dict", "other_mac.agent.state_dict"], "methods", ["None"], ["", "def", "load_state", "(", "self", ",", "other_mac", ")", ":", "\n", "        ", "self", ".", "agent", ".", "load_state_dict", "(", "other_mac", ".", "agent", ".", "state_dict", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.cuda": [[65, 67], ["noise_controller.NoiseMAC.agent.cuda"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "self", ".", "agent", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.save_models": [[68, 70], ["torch.save", "noise_controller.NoiseMAC.agent.state_dict"], "methods", ["None"], ["", "def", "save_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "th", ".", "save", "(", "self", ".", "agent", ".", "state_dict", "(", ")", ",", "\"{}/agent.th\"", ".", "format", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.load_models": [[71, 73], ["noise_controller.NoiseMAC.agent.load_state_dict", "torch.load"], "methods", ["None"], ["", "def", "load_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "agent", ".", "load_state_dict", "(", "th", ".", "load", "(", "\"{}/agent.th\"", ".", "format", "(", "path", ")", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC._build_agents": [[74, 76], ["None"], "methods", ["None"], ["", "def", "_build_agents", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "self", ".", "agent", "=", "agent_REGISTRY", "[", "self", ".", "args", ".", "agent", "]", "(", "input_shape", ",", "self", ".", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC._build_inputs": [[77, 93], ["torch.cat.append", "torch.cat", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.eye().unsqueeze().expand", "x.reshape", "torch.zeros_like", "torch.eye().unsqueeze", "torch.eye"], "methods", ["None"], ["", "def", "_build_inputs", "(", "self", ",", "batch", ",", "t", ")", ":", "\n", "# Assumes homogenous agents with flat observations.", "\n", "# Other MACs might want to e.g. delegate building inputs to each agent", "\n", "        ", "bs", "=", "batch", ".", "batch_size", "\n", "inputs", "=", "[", "]", "\n", "inputs", ".", "append", "(", "batch", "[", "\"obs\"", "]", "[", ":", ",", "t", "]", ")", "# b1av", "\n", "if", "self", ".", "args", ".", "obs_last_action", ":", "\n", "            ", "if", "t", "==", "0", ":", "\n", "                ", "inputs", ".", "append", "(", "th", ".", "zeros_like", "(", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "t", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "inputs", ".", "append", "(", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "t", "-", "1", "]", ")", "\n", "", "", "if", "self", ".", "args", ".", "obs_agent_id", ":", "\n", "            ", "inputs", ".", "append", "(", "th", ".", "eye", "(", "self", ".", "n_agents", ",", "device", "=", "batch", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "bs", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "\n", "", "inputs", "=", "th", ".", "cat", "(", "[", "x", ".", "reshape", "(", "bs", "*", "self", ".", "n_agents", ",", "-", "1", ")", "for", "x", "in", "inputs", "]", ",", "dim", "=", "1", ")", "\n", "return", "inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC._get_input_shape": [[94, 102], ["None"], "methods", ["None"], ["", "def", "_get_input_shape", "(", "self", ",", "scheme", ")", ":", "\n", "        ", "input_shape", "=", "scheme", "[", "\"obs\"", "]", "[", "\"vshape\"", "]", "\n", "if", "self", ".", "args", ".", "obs_last_action", ":", "\n", "            ", "input_shape", "+=", "scheme", "[", "\"actions_onehot\"", "]", "[", "\"vshape\"", "]", "[", "0", "]", "\n", "", "if", "self", ".", "args", ".", "obs_agent_id", ":", "\n", "            ", "input_shape", "+=", "self", ".", "n_agents", "\n", "\n", "", "return", "input_shape", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.rnn_agent.RNNAgent.__init__": [[6, 13], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.GRUCell", "torch.GRUCell", "torch.GRUCell", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_shape", ",", "args", ")", ":", "\n", "        ", "super", "(", "RNNAgent", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_shape", ",", "args", ".", "rnn_hidden_dim", ")", "\n", "self", ".", "rnn", "=", "nn", ".", "GRUCell", "(", "args", ".", "rnn_hidden_dim", ",", "args", ".", "rnn_hidden_dim", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "args", ".", "rnn_hidden_dim", ",", "args", ".", "n_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.rnn_agent.RNNAgent.init_hidden": [[14, 17], ["rnn_agent.RNNAgent.fc1.weight.new().zero_", "rnn_agent.RNNAgent.fc1.weight.new"], "methods", ["None"], ["", "def", "init_hidden", "(", "self", ")", ":", "\n", "# make hidden states on same device as model", "\n", "        ", "return", "self", ".", "fc1", ".", "weight", ".", "new", "(", "1", ",", "self", ".", "args", ".", "rnn_hidden_dim", ")", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.rnn_agent.RNNAgent.forward": [[18, 24], ["torch.relu", "torch.relu", "torch.relu", "hidden_state.reshape", "rnn_agent.RNNAgent.rnn", "rnn_agent.RNNAgent.fc2", "rnn_agent.RNNAgent.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "hidden_state", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "inputs", ")", ")", "\n", "h_in", "=", "hidden_state", ".", "reshape", "(", "-", "1", ",", "self", ".", "args", ".", "rnn_hidden_dim", ")", "\n", "h", "=", "self", ".", "rnn", "(", "x", ",", "h_in", ")", "\n", "q", "=", "self", ".", "fc2", "(", "h", ")", "\n", "return", "q", ",", "h", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.noise_rnn_agent.RNNAgent.__init__": [[6, 20], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.GRUCell", "torch.GRUCell", "torch.GRUCell", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_shape", ",", "args", ")", ":", "\n", "        ", "super", "(", "RNNAgent", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_shape", ",", "args", ".", "rnn_hidden_dim", ")", "\n", "self", ".", "rnn", "=", "nn", ".", "GRUCell", "(", "args", ".", "rnn_hidden_dim", ",", "args", ".", "rnn_hidden_dim", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "args", ".", "rnn_hidden_dim", ",", "args", ".", "n_actions", ")", "\n", "\n", "self", ".", "noise_fc1", "=", "nn", ".", "Linear", "(", "args", ".", "noise_dim", "+", "args", ".", "n_agents", ",", "args", ".", "noise_embedding_dim", ")", "\n", "self", ".", "noise_fc2", "=", "nn", ".", "Linear", "(", "args", ".", "noise_embedding_dim", ",", "args", ".", "noise_embedding_dim", ")", "\n", "self", ".", "noise_fc3", "=", "nn", ".", "Linear", "(", "args", ".", "noise_embedding_dim", ",", "args", ".", "n_actions", ")", "\n", "\n", "self", ".", "hyper", "=", "True", "\n", "self", ".", "hyper_noise_fc1", "=", "nn", ".", "Linear", "(", "args", ".", "noise_dim", "+", "args", ".", "n_agents", ",", "args", ".", "rnn_hidden_dim", "*", "args", ".", "n_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.noise_rnn_agent.RNNAgent.init_hidden": [[21, 24], ["noise_rnn_agent.RNNAgent.fc1.weight.new().zero_", "noise_rnn_agent.RNNAgent.fc1.weight.new"], "methods", ["None"], ["", "def", "init_hidden", "(", "self", ")", ":", "\n", "# make hidden states on same device as model", "\n", "        ", "return", "self", ".", "fc1", ".", "weight", ".", "new", "(", "1", ",", "self", ".", "args", ".", "rnn_hidden_dim", ")", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.noise_rnn_agent.RNNAgent.forward": [[25, 47], ["torch.eye().repeat", "torch.eye().repeat", "torch.eye().repeat", "noise.repeat().reshape", "torch.relu", "torch.relu", "torch.relu", "hidden_state.reshape", "noise_rnn_agent.RNNAgent.rnn", "noise_rnn_agent.RNNAgent.fc2", "torch.cat", "torch.cat", "torch.cat", "noise_rnn_agent.RNNAgent.fc1", "noise_rnn_agent.RNNAgent.hyper_noise_fc1().reshape", "torch.bmm", "torch.bmm", "torch.bmm", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "noise_rnn_agent.RNNAgent.noise_fc3", "torch.eye", "torch.eye", "torch.eye", "noise.repeat", "noise_rnn_agent.RNNAgent.unsqueeze", "noise_rnn_agent.RNNAgent.noise_fc1", "noise_rnn_agent.RNNAgent.noise_fc2", "noise_rnn_agent.RNNAgent.hyper_noise_fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "hidden_state", ",", "noise", ")", ":", "\n", "        ", "agent_ids", "=", "th", ".", "eye", "(", "self", ".", "args", ".", "n_agents", ",", "device", "=", "inputs", ".", "device", ")", ".", "repeat", "(", "noise", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "noise_repeated", "=", "noise", ".", "repeat", "(", "1", ",", "self", ".", "args", ".", "n_agents", ")", ".", "reshape", "(", "agent_ids", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "inputs", ")", ")", "\n", "h_in", "=", "hidden_state", ".", "reshape", "(", "-", "1", ",", "self", ".", "args", ".", "rnn_hidden_dim", ")", "\n", "h", "=", "self", ".", "rnn", "(", "x", ",", "h_in", ")", "\n", "q", "=", "self", ".", "fc2", "(", "h", ")", "\n", "\n", "noise_input", "=", "th", ".", "cat", "(", "[", "noise_repeated", ",", "agent_ids", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n", "if", "self", ".", "hyper", ":", "\n", "            ", "W", "=", "self", ".", "hyper_noise_fc1", "(", "noise_input", ")", ".", "reshape", "(", "-", "1", ",", "self", ".", "args", ".", "n_actions", ",", "self", ".", "args", ".", "rnn_hidden_dim", ")", "\n", "wq", "=", "th", ".", "bmm", "(", "W", ",", "h", ".", "unsqueeze", "(", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "z", "=", "F", ".", "tanh", "(", "self", ".", "noise_fc1", "(", "noise_input", ")", ")", "\n", "z", "=", "F", ".", "tanh", "(", "self", ".", "noise_fc2", "(", "z", ")", ")", "\n", "wz", "=", "self", ".", "noise_fc3", "(", "z", ")", "\n", "\n", "wq", "=", "q", "*", "wz", "\n", "\n", "", "return", "wq", ",", "h", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.__init__": [[6, 13], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_shape", ",", "args", ")", ":", "\n", "        ", "super", "(", "FFAgent", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_shape", ",", "args", ".", "rnn_hidden_dim", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "args", ".", "rnn_hidden_dim", ",", "args", ".", "rnn_hidden_dim", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "args", ".", "rnn_hidden_dim", ",", "args", ".", "n_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden": [[14, 17], ["ff_agent.FFAgent.fc1.weight.new().zero_", "ff_agent.FFAgent.fc1.weight.new"], "methods", ["None"], ["", "def", "init_hidden", "(", "self", ")", ":", "\n", "# make hidden states on same device as model", "\n", "        ", "return", "self", ".", "fc1", ".", "weight", ".", "new", "(", "1", ",", "self", ".", "args", ".", "rnn_hidden_dim", ")", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.forward": [[18, 23], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "ff_agent.FFAgent.fc3", "ff_agent.FFAgent.fc1", "ff_agent.FFAgent.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "hidden_state", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "inputs", ")", ")", "\n", "h", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "q", "=", "self", ".", "fc3", "(", "h", ")", "\n", "return", "q", ",", "h", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.centralV.CentralVCritic.__init__": [[7, 21], ["torch.Module.__init__", "centralV.CentralVCritic._get_input_shape", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic._get_input_shape"], ["    ", "def", "__init__", "(", "self", ",", "scheme", ",", "args", ")", ":", "\n", "        ", "super", "(", "CentralVCritic", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "n_actions", "=", "args", ".", "n_actions", "\n", "self", ".", "n_agents", "=", "args", ".", "n_agents", "\n", "\n", "input_shape", "=", "self", ".", "_get_input_shape", "(", "scheme", ")", "\n", "self", ".", "output_type", "=", "\"v\"", "\n", "\n", "# Set up network layers", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_shape", ",", "128", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "128", ",", "128", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "128", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.centralV.CentralVCritic.forward": [[22, 28], ["centralV.CentralVCritic._build_inputs", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "centralV.CentralVCritic.fc3", "centralV.CentralVCritic.view().repeat", "centralV.CentralVCritic.fc1", "centralV.CentralVCritic.fc2", "centralV.CentralVCritic.view"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic._build_inputs"], ["", "def", "forward", "(", "self", ",", "batch", ",", "t", "=", "None", ")", ":", "\n", "        ", "inputs", ",", "bs", ",", "max_t", "=", "self", ".", "_build_inputs", "(", "batch", ",", "t", "=", "t", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "inputs", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "q", "=", "self", ".", "fc3", "(", "x", ")", "\n", "return", "q", ".", "view", "(", "bs", ",", "max_t", ",", "1", ",", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.centralV.CentralVCritic._build_inputs": [[29, 52], ["torch.cat.append", "torch.cat.append", "torch.cat", "torch.cat", "torch.cat", "slice", "slice", "[].view", "torch.cat.append", "isinstance", "torch.zeros_like().view", "torch.zeros_like().view", "torch.zeros_like().view", "torch.cat.append", "torch.cat", "torch.cat", "torch.cat", "last_actions.view.view.view", "torch.cat.append", "x.reshape", "[].view", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "slice"], "methods", ["None"], ["", "def", "_build_inputs", "(", "self", ",", "batch", ",", "t", "=", "None", ")", ":", "\n", "        ", "bs", "=", "batch", ".", "batch_size", "\n", "max_t", "=", "batch", ".", "max_seq_length", "if", "t", "is", "None", "else", "1", "\n", "ts", "=", "slice", "(", "None", ")", "if", "t", "is", "None", "else", "slice", "(", "t", ",", "t", "+", "1", ")", "\n", "inputs", "=", "[", "]", "\n", "# state", "\n", "inputs", ".", "append", "(", "batch", "[", "\"state\"", "]", "[", ":", ",", "ts", "]", ")", "\n", "\n", "# observations", "\n", "inputs", ".", "append", "(", "batch", "[", "\"obs\"", "]", "[", ":", ",", "ts", "]", ".", "view", "(", "bs", ",", "max_t", ",", "-", "1", ")", ")", "\n", "\n", "# last actions", "\n", "if", "t", "==", "0", ":", "\n", "            ", "inputs", ".", "append", "(", "th", ".", "zeros_like", "(", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "0", ":", "1", "]", ")", ".", "view", "(", "bs", ",", "max_t", ",", "1", ",", "-", "1", ")", ")", "\n", "", "elif", "isinstance", "(", "t", ",", "int", ")", ":", "\n", "            ", "inputs", ".", "append", "(", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "slice", "(", "t", "-", "1", ",", "t", ")", "]", ".", "view", "(", "bs", ",", "max_t", ",", "1", ",", "-", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "last_actions", "=", "th", ".", "cat", "(", "[", "th", ".", "zeros_like", "(", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "0", ":", "1", "]", ")", ",", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", ":", "-", "1", "]", "]", ",", "dim", "=", "1", ")", "\n", "last_actions", "=", "last_actions", ".", "view", "(", "bs", ",", "max_t", ",", "1", ",", "-", "1", ")", "\n", "inputs", ".", "append", "(", "last_actions", ")", "\n", "\n", "", "inputs", "=", "th", ".", "cat", "(", "[", "x", ".", "reshape", "(", "bs", "*", "max_t", ",", "-", "1", ")", "for", "x", "in", "inputs", "]", ",", "dim", "=", "1", ")", "\n", "return", "inputs", ",", "bs", ",", "max_t", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.centralV.CentralVCritic._get_input_shape": [[53, 61], ["None"], "methods", ["None"], ["", "def", "_get_input_shape", "(", "self", ",", "scheme", ")", ":", "\n", "# state", "\n", "        ", "input_shape", "=", "scheme", "[", "\"state\"", "]", "[", "\"vshape\"", "]", "\n", "# observations", "\n", "input_shape", "+=", "scheme", "[", "\"obs\"", "]", "[", "\"vshape\"", "]", "*", "self", ".", "n_agents", "\n", "# last actions", "\n", "input_shape", "+=", "scheme", "[", "\"actions_onehot\"", "]", "[", "\"vshape\"", "]", "[", "0", "]", "*", "self", ".", "n_agents", "\n", "return", "input_shape", "", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic.__init__": [[7, 28], ["torch.Module.__init__", "coma.COMACritic._get_input_shape", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.GRU", "torch.GRU", "torch.GRU"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic._get_input_shape"], ["    ", "def", "__init__", "(", "self", ",", "scheme", ",", "args", ")", ":", "\n", "        ", "super", "(", "COMACritic", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "n_actions", "=", "args", ".", "n_actions", "\n", "self", ".", "n_agents", "=", "args", ".", "n_agents", "\n", "\n", "input_shape", "=", "self", ".", "_get_input_shape", "(", "scheme", ")", "\n", "self", ".", "output_type", "=", "\"q\"", "\n", "\n", "# Set up network layers", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_shape", ",", "128", ")", "\n", "\n", "if", "args", ".", "recurrent_critic", ":", "\n", "            ", "self", ".", "rnn", "=", "nn", ".", "GRU", "(", "128", ",", "128", ",", "batch_first", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "rnn", "=", "None", "\n", "\n", "", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "128", ",", "128", ")", "\n", "# self.v_head = nn.Linear(128, 1)", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "128", ",", "self", ".", "n_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic.forward": [[29, 44], ["coma.COMACritic._build_inputs", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "coma.COMACritic.fc3", "coma.COMACritic.fc1", "coma.COMACritic.fc2", "x.reshape().permute.reshape().permute.permute().reshape", "coma.COMACritic.rnn", "x.reshape().permute.reshape().permute.reshape().permute", "x.reshape().permute.reshape().permute.permute", "x.reshape().permute.reshape().permute.reshape"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic._build_inputs"], ["", "def", "forward", "(", "self", ",", "batch", ",", "t", "=", "None", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "_build_inputs", "(", "batch", ",", "t", "=", "t", ")", "\n", "bs", ",", "max_t", ",", "n_agents", ",", "vdim", "=", "inputs", ".", "shape", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "inputs", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "\n", "if", "self", ".", "rnn", "is", "not", "None", ":", "\n", "            ", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", ".", "reshape", "(", "bs", "*", "n_agents", ",", "max_t", ",", "-", "1", ")", "\n", "x", ",", "h_out", "=", "self", ".", "rnn", "(", "x", ")", "# h0 defaults to 0 if not provided", "\n", "x", "=", "x", ".", "reshape", "(", "bs", ",", "n_agents", ",", "max_t", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "\n", "", "q", "=", "self", ".", "fc3", "(", "x", ")", "\n", "# v = self.v_head(x)", "\n", "# q = adv - adv.mean(-1, keepdim=True).expand_as(adv) + v.expand_as(adv)", "\n", "return", "q", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic._build_inputs": [[45, 76], ["torch.cat.append", "torch.cat.append", "[].view().repeat", "agent_mask.view().repeat().view.view().repeat().view.view().repeat().view", "torch.cat.append", "torch.cat.append", "torch.cat", "torch.cat", "torch.cat", "slice", "slice", "[].unsqueeze().repeat", "torch.eye", "torch.eye", "torch.eye", "torch.cat.append", "isinstance", "torch.eye().unsqueeze().unsqueeze().expand", "torch.eye().unsqueeze().unsqueeze().expand", "torch.eye().unsqueeze().unsqueeze().expand", "[].view", "agent_mask.view().repeat().view.view().repeat().view.view().repeat", "agent_mask.view().repeat().view.view().repeat().view.unsqueeze().unsqueeze", "torch.zeros_like().view().repeat", "torch.zeros_like().view().repeat", "torch.zeros_like().view().repeat", "torch.cat.append", "torch.cat", "torch.cat", "torch.cat", "last_actions.view().repeat.view().repeat.view().repeat", "torch.cat.append", "x.reshape", "[].unsqueeze", "[].view().repeat", "torch.eye().unsqueeze().unsqueeze", "torch.eye().unsqueeze().unsqueeze", "torch.eye().unsqueeze().unsqueeze", "agent_mask.view().repeat().view.view().repeat().view.view", "agent_mask.view().repeat().view.view().repeat().view.unsqueeze", "torch.zeros_like().view", "torch.zeros_like().view", "torch.zeros_like().view", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "last_actions.view().repeat.view().repeat.view", "[].view", "torch.eye().unsqueeze", "torch.eye().unsqueeze", "torch.eye().unsqueeze", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.eye", "torch.eye", "torch.eye", "slice"], "methods", ["None"], ["", "def", "_build_inputs", "(", "self", ",", "batch", ",", "t", "=", "None", ")", ":", "\n", "        ", "bs", "=", "batch", ".", "batch_size", "\n", "max_t", "=", "batch", ".", "max_seq_length", "if", "t", "is", "None", "else", "1", "\n", "ts", "=", "slice", "(", "None", ")", "if", "t", "is", "None", "else", "slice", "(", "t", ",", "t", "+", "1", ")", "\n", "inputs", "=", "[", "]", "\n", "# state", "\n", "inputs", ".", "append", "(", "batch", "[", "\"state\"", "]", "[", ":", ",", "ts", "]", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ",", "1", ")", ")", "\n", "\n", "# observation", "\n", "inputs", ".", "append", "(", "batch", "[", "\"obs\"", "]", "[", ":", ",", "ts", "]", ")", "\n", "\n", "# actions (masked out by agent)", "\n", "actions", "=", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "ts", "]", ".", "view", "(", "bs", ",", "max_t", ",", "1", ",", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ",", "1", ")", "\n", "agent_mask", "=", "(", "1", "-", "th", ".", "eye", "(", "self", ".", "n_agents", ",", "device", "=", "batch", ".", "device", ")", ")", "\n", "agent_mask", "=", "agent_mask", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "n_actions", ")", ".", "view", "(", "self", ".", "n_agents", ",", "-", "1", ")", "\n", "inputs", ".", "append", "(", "actions", "*", "agent_mask", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ")", "\n", "\n", "# last actions", "\n", "if", "t", "==", "0", ":", "\n", "            ", "inputs", ".", "append", "(", "th", ".", "zeros_like", "(", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "0", ":", "1", "]", ")", ".", "view", "(", "bs", ",", "max_t", ",", "1", ",", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ",", "1", ")", ")", "\n", "", "elif", "isinstance", "(", "t", ",", "int", ")", ":", "\n", "            ", "inputs", ".", "append", "(", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "slice", "(", "t", "-", "1", ",", "t", ")", "]", ".", "view", "(", "bs", ",", "max_t", ",", "1", ",", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "last_actions", "=", "th", ".", "cat", "(", "[", "th", ".", "zeros_like", "(", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", "0", ":", "1", "]", ")", ",", "batch", "[", "\"actions_onehot\"", "]", "[", ":", ",", ":", "-", "1", "]", "]", ",", "dim", "=", "1", ")", "\n", "last_actions", "=", "last_actions", ".", "view", "(", "bs", ",", "max_t", ",", "1", ",", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ",", "1", ")", "\n", "inputs", ".", "append", "(", "last_actions", ")", "\n", "\n", "", "inputs", ".", "append", "(", "th", ".", "eye", "(", "self", ".", "n_agents", ",", "device", "=", "batch", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "bs", ",", "max_t", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "\n", "inputs", "=", "th", ".", "cat", "(", "[", "x", ".", "reshape", "(", "bs", ",", "max_t", ",", "self", ".", "n_agents", ",", "-", "1", ")", "for", "x", "in", "inputs", "]", ",", "dim", "=", "-", "1", ")", "\n", "return", "inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.critics.coma.COMACritic._get_input_shape": [[77, 87], ["None"], "methods", ["None"], ["", "def", "_get_input_shape", "(", "self", ",", "scheme", ")", ":", "\n", "# state", "\n", "        ", "input_shape", "=", "scheme", "[", "\"state\"", "]", "[", "\"vshape\"", "]", "\n", "# observation", "\n", "input_shape", "+=", "scheme", "[", "\"obs\"", "]", "[", "\"vshape\"", "]", "\n", "# actions and last actions", "\n", "input_shape", "+=", "scheme", "[", "\"actions_onehot\"", "]", "[", "\"vshape\"", "]", "[", "0", "]", "*", "self", ".", "n_agents", "*", "2", "\n", "# agent id", "\n", "input_shape", "+=", "self", ".", "n_agents", "\n", "return", "input_shape", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.const_lr.Constant_Lr.__init__": [[7, 13], ["range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "lr", "=", "args", ".", "noise_bandit_lr", "\n", "self", ".", "returns", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "args", ".", "noise_dim", ")", "]", "\n", "self", ".", "epsilon", "=", "args", ".", "noise_bandit_epsilon", "\n", "self", ".", "noise_dim", "=", "self", ".", "args", ".", "noise_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.const_lr.Constant_Lr.sample": [[14, 28], ["range", "torch.stack", "torch.zeros", "noise_vector.append", "numpy.random.randint", "numpy.argmax", "numpy.random.random"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "test_mode", ")", ":", "\n", "        ", "noise_vector", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "args", ".", "batch_size_run", ")", ":", "\n", "            ", "noise", "=", "0", "\n", "# During training we are epsilon greedy.", "\n", "# During testing we are uniform so that we can gather info about all noise seeds", "\n", "if", "test_mode", "or", "np", ".", "random", ".", "random", "(", ")", "<", "self", ".", "epsilon", ":", "\n", "                ", "noise", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "noise_dim", ")", "\n", "", "else", ":", "\n", "                ", "noise", "=", "np", ".", "argmax", "(", "self", ".", "returns", ")", "\n", "", "one_hot_noise", "=", "th", ".", "zeros", "(", "self", ".", "noise_dim", ")", "\n", "one_hot_noise", "[", "noise", "]", "=", "1", "\n", "noise_vector", ".", "append", "(", "one_hot_noise", ")", "\n", "", "return", "th", ".", "stack", "(", "noise_vector", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.const_lr.Constant_Lr.update_returns": [[29, 36], ["zip", "numpy.argmax"], "methods", ["None"], ["", "def", "update_returns", "(", "self", ",", "noise", ",", "returns", ",", "test_mode", ")", ":", "\n", "        ", "if", "test_mode", ":", "\n", "            ", "return", "# Only update the returns for training.", "\n", "", "for", "n", ",", "r", "in", "zip", "(", "noise", ",", "returns", ")", ":", "\n", "# n is onehot", "\n", "            ", "n_idx", "=", "np", ".", "argmax", "(", "n", ")", "\n", "self", ".", "returns", "[", "n_idx", "]", "=", "self", ".", "lr", "*", "r", "+", "(", "1", "-", "self", ".", "lr", ")", "*", "self", ".", "returns", "[", "n_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.reinforce_hierarchial.Policy.__init__": [[12, 17], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Policy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "affine1", "=", "nn", ".", "Linear", "(", "args", ".", "state_shape", ",", "128", ")", "\n", "self", ".", "affine2", "=", "nn", ".", "Linear", "(", "128", ",", "args", ".", "noise_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.reinforce_hierarchial.Policy.forward": [[18, 24], ["torch.relu.view", "reinforce_hierarchial.Policy.affine1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "reinforce_hierarchial.Policy.affine2", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "args", ".", "state_shape", ")", "\n", "x", "=", "self", ".", "affine1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "action_scores", "=", "self", ".", "affine2", "(", "x", ")", "\n", "return", "F", ".", "softmax", "(", "action_scores", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.reinforce_hierarchial.Z_agent.__init__": [[27, 35], ["reinforce_hierarchial.Policy", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "reinforce_hierarchial.Z_agent.policy.parameters"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "lr", "=", "args", ".", "lr", "\n", "self", ".", "noise_dim", "=", "self", ".", "args", ".", "noise_dim", "\n", "# size of state vector", "\n", "self", ".", "state_shape", "=", "self", ".", "args", ".", "state_shape", "\n", "self", ".", "policy", "=", "Policy", "(", "args", ")", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "policy", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.reinforce_hierarchial.Z_agent.sample": [[36, 41], ["reinforce_hierarchial.Z_agent.policy", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample"], ["", "def", "sample", "(", "self", ",", "state", ")", ":", "\n", "        ", "probs", "=", "self", ".", "policy", "(", "state", ")", "\n", "m", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "probs", ")", "\n", "action", "=", "m", ".", "sample", "(", ")", "\n", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.reinforce_hierarchial.Z_agent.update_returns": [[42, 52], ["reinforce_hierarchial.Z_agent.policy", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob", "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob", "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob", "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob", "reinforce_hierarchial.Z_agent.optimizer.zero_grad", "policy_loss.backward", "reinforce_hierarchial.Z_agent.optimizer.step", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step"], ["", "def", "update_returns", "(", "self", ",", "states", ",", "actions", ",", "returns", ",", "test_mode", ")", ":", "\n", "        ", "if", "test_mode", ":", "\n", "            ", "return", "\n", "", "probs", "=", "self", ".", "policy", "(", "states", ")", "\n", "m", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "probs", ")", "\n", "log_probs", "=", "m", ".", "log_prob", "(", "actions", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "policy_loss", "=", "-", "torch", ".", "dot", "(", "log_probs", ",", "returns", ")", "\n", "policy_loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.reinforce_hierarchial.EZ_agent.__init__": [[55, 71], ["reinforce_hierarchial.Policy", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "collections.deque", "reinforce_hierarchial.EZ_agent.policy.parameters", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "range"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "logger", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "lr", "=", "args", ".", "lr", "\n", "self", ".", "noise_dim", "=", "self", ".", "args", ".", "noise_dim", "\n", "# size of state vector", "\n", "self", ".", "state_shape", "=", "self", ".", "args", ".", "state_shape", "\n", "self", ".", "policy", "=", "Policy", "(", "args", ")", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "policy", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ")", "\n", "# Scaling factor for entropy, would roughly be similar to MI scaling", "\n", "self", ".", "entropy_scaling", "=", "args", ".", "entropy_scaling", "\n", "self", ".", "uniform_distrib", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "torch", ".", "tensor", "(", "[", "1", "/", "self", ".", "args", ".", "noise_dim", "for", "_", "in", "range", "(", "self", ".", "args", ".", "noise_dim", ")", "]", ")", ".", "repeat", "(", "self", ".", "args", ".", "batch_size_run", ",", "1", ")", ")", "\n", "\n", "self", ".", "buffer", "=", "deque", "(", "maxlen", "=", "self", ".", "args", ".", "bandit_buffer", ")", "\n", "self", ".", "epsilon_floor", "=", "args", ".", "bandit_epsilon", "\n", "\n", "self", ".", "logger", "=", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.reinforce_hierarchial.EZ_agent.sample": [[72, 81], ["reinforce_hierarchial.EZ_agent.uniform_distrib.sample", "reinforce_hierarchial.EZ_agent.policy", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical.sample().cpu", "torch.distributions.one_hot_categorical.OneHotCategorical.sample().cpu", "torch.distributions.one_hot_categorical.OneHotCategorical.sample().cpu", "torch.distributions.one_hot_categorical.OneHotCategorical.sample().cpu", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample"], ["", "def", "sample", "(", "self", ",", "state", ",", "test_mode", ")", ":", "\n", "# During testing we just sample uniformly", "\n", "        ", "if", "test_mode", ":", "\n", "            ", "return", "self", ".", "uniform_distrib", ".", "sample", "(", ")", "\n", "", "else", ":", "\n", "            ", "probs", "=", "self", ".", "policy", "(", "state", ")", "\n", "m", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "probs", ")", "\n", "action", "=", "m", ".", "sample", "(", ")", ".", "cpu", "(", ")", "\n", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.reinforce_hierarchial.EZ_agent.update_returns": [[82, 106], ["zip", "range", "torch.distributions.one_hot_categorical.OneHotCategorical.entropy().mean", "torch.distributions.one_hot_categorical.OneHotCategorical.entropy().mean", "torch.distributions.one_hot_categorical.OneHotCategorical.entropy().mean", "torch.distributions.one_hot_categorical.OneHotCategorical.entropy().mean", "reinforce_hierarchial.EZ_agent.logger.log_stat", "reinforce_hierarchial.EZ_agent.buffer.append", "numpy.random.randint", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "reinforce_hierarchial.EZ_agent.policy", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob", "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob", "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob", "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob", "reinforce_hierarchial.EZ_agent.optimizer.zero_grad", "policy_loss.backward", "reinforce_hierarchial.EZ_agent.optimizer.step", "torch.distributions.one_hot_categorical.OneHotCategorical.entropy().mean.item", "len", "torch.stack().to.to", "torch.stack().to.to", "torch.stack().to.to", "torch.stack().to.to", "torch.distributions.one_hot_categorical.OneHotCategorical.entropy", "torch.distributions.one_hot_categorical.OneHotCategorical.entropy", "torch.distributions.one_hot_categorical.OneHotCategorical.entropy", "torch.distributions.one_hot_categorical.OneHotCategorical.entropy", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob.sum", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to"], ["", "", "def", "update_returns", "(", "self", ",", "states", ",", "actions", ",", "returns", ",", "test_mode", ",", "t", ")", ":", "\n", "        ", "if", "test_mode", ":", "\n", "            ", "return", "\n", "\n", "", "for", "s", ",", "a", ",", "r", "in", "zip", "(", "states", ",", "actions", ",", "returns", ")", ":", "\n", "            ", "self", ".", "buffer", ".", "append", "(", "(", "s", ",", "a", ",", "torch", ".", "tensor", "(", "r", ",", "dtype", "=", "torch", ".", "float", ")", ")", ")", "\n", "\n", "", "for", "_", "in", "range", "(", "self", ".", "args", ".", "bandit_iters", ")", ":", "\n", "            ", "idxs", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "buffer", ")", ",", "size", "=", "self", ".", "args", ".", "bandit_batch", ")", "\n", "batch_elems", "=", "[", "self", ".", "buffer", "[", "i", "]", "for", "i", "in", "idxs", "]", "\n", "states_", "=", "torch", ".", "stack", "(", "[", "x", "[", "0", "]", "for", "x", "in", "batch_elems", "]", ")", ".", "to", "(", "states", ".", "device", ")", "\n", "actions_", "=", "torch", ".", "stack", "(", "[", "x", "[", "1", "]", "for", "x", "in", "batch_elems", "]", ")", ".", "to", "(", "states", ".", "device", ")", "\n", "returns_", "=", "torch", ".", "stack", "(", "[", "x", "[", "2", "]", "for", "x", "in", "batch_elems", "]", ")", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "probs", "=", "self", ".", "policy", "(", "states_", ")", "\n", "m", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "probs", ")", "\n", "log_probs", "=", "m", ".", "log_prob", "(", "actions_", ".", "to", "(", "probs", ".", "device", ")", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "policy_loss", "=", "-", "torch", ".", "dot", "(", "log_probs", ",", "torch", ".", "tensor", "(", "returns_", ",", "device", "=", "log_probs", ".", "device", ")", ".", "float", "(", ")", ")", "+", "self", ".", "entropy_scaling", "*", "log_probs", ".", "sum", "(", ")", "\n", "policy_loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "mean_entropy", "=", "m", ".", "entropy", "(", ")", ".", "mean", "(", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"bandit_entropy\"", ",", "mean_entropy", ".", "item", "(", ")", ",", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.reinforce_hierarchial.EZ_agent.cuda": [[108, 110], ["reinforce_hierarchial.EZ_agent.policy.cuda"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "self", ".", "policy", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.reinforce_hierarchial.EZ_agent.save_model": [[111, 113], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "reinforce_hierarchial.EZ_agent.policy.state_dict"], "methods", ["None"], ["", "def", "save_model", "(", "self", ",", "path", ")", ":", "\n", "        ", "torch", ".", "save", "(", "self", ".", "policy", ".", "state_dict", "(", ")", ",", "\"{}/ez_bandit_policy.th\"", ".", "format", "(", "path", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.returns_bandit.Net.__init__": [[12, 19], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "affine1", "=", "nn", ".", "Linear", "(", "args", ".", "state_shape", ",", "256", ")", "\n", "self", ".", "affine2", "=", "nn", ".", "Linear", "(", "256", ",", "256", ")", "\n", "self", ".", "affine3", "=", "nn", ".", "Linear", "(", "256", ",", "args", ".", "noise_dim", ")", "\n", "self", ".", "output_scale", "=", "self", ".", "args", ".", "bandit_reward_scaling", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.returns_bandit.Net.forward": [[20, 28], ["torch.relu.view", "returns_bandit.Net.affine1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "returns_bandit.Net.affine2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "returns_bandit.Net.affine3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "args", ".", "state_shape", ")", "\n", "x", "=", "self", ".", "affine1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "affine2", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "returns", "=", "self", ".", "affine3", "(", "x", ")", "\n", "return", "returns", "*", "self", ".", "output_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.returns_bandit.ReturnsBandit.__init__": [[31, 45], ["returns_bandit.Net", "torch.RMSprop", "torch.RMSprop", "torch.RMSprop", "torch.RMSprop", "collections.deque", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "returns_bandit.ReturnsBandit.net.parameters", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor().repeat", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "range"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.parameters"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "logger", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "lr", "=", "args", ".", "lr", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "noise_dim", "=", "self", ".", "args", ".", "noise_dim", "\n", "# size of state vector", "\n", "self", ".", "state_shape", "=", "self", ".", "args", ".", "state_shape", "\n", "self", ".", "net", "=", "Net", "(", "args", ")", "\n", "self", ".", "optimizer", "=", "optim", ".", "RMSprop", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ")", "\n", "\n", "self", ".", "buffer", "=", "deque", "(", "maxlen", "=", "self", ".", "args", ".", "bandit_buffer", ")", "\n", "self", ".", "epsilon_floor", "=", "args", ".", "bandit_epsilon", "\n", "\n", "self", ".", "uniform_noise", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "torch", ".", "tensor", "(", "[", "1", "/", "self", ".", "args", ".", "noise_dim", "for", "_", "in", "range", "(", "self", ".", "args", ".", "noise_dim", ")", "]", ")", ".", "repeat", "(", "self", ".", "args", ".", "batch_size_run", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.returns_bandit.ReturnsBandit.sample": [[46, 56], ["returns_bandit.ReturnsBandit.uniform_noise.sample", "returns_bandit.ReturnsBandit.net", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical.sample().cpu", "torch.distributions.one_hot_categorical.OneHotCategorical.sample().cpu", "torch.distributions.one_hot_categorical.OneHotCategorical.sample().cpu", "torch.distributions.one_hot_categorical.OneHotCategorical.sample().cpu", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.sample"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample"], ["", "def", "sample", "(", "self", ",", "state", ",", "test_mode", ")", ":", "\n", "        ", "if", "test_mode", ":", "\n", "            ", "return", "self", ".", "uniform_noise", ".", "sample", "(", ")", "\n", "", "else", ":", "\n", "            ", "estimated_returns", "=", "self", ".", "net", "(", "state", ")", "\n", "probs", "=", "F", ".", "softmax", "(", "estimated_returns", ",", "dim", "=", "-", "1", ")", "\n", "probs_eps", "=", "(", "1", "-", "self", ".", "epsilon_floor", ")", "*", "probs", "+", "self", ".", "epsilon_floor", "/", "self", ".", "noise_dim", "\n", "m", "=", "torch", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "probs_eps", ")", "\n", "action", "=", "m", ".", "sample", "(", ")", ".", "cpu", "(", ")", "\n", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.returns_bandit.ReturnsBandit.update_returns": [[57, 92], ["zip", "range", "returns_bandit.ReturnsBandit.logger.log_stat", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical", "torch.distributions.OneHotCategorical.entropy().mean", "torch.distributions.OneHotCategorical.entropy().mean", "torch.distributions.OneHotCategorical.entropy().mean", "torch.distributions.OneHotCategorical.entropy().mean", "returns_bandit.ReturnsBandit.logger.log_stat", "[].mean().item", "[].mean().item", "returns_bandit.ReturnsBandit.mean().item", "returns_bandit.ReturnsBandit.logger.log_stat", "returns_bandit.ReturnsBandit.logger.log_stat", "returns_bandit.ReturnsBandit.logger.log_stat", "returns_bandit.ReturnsBandit.buffer.append", "numpy.random.randint", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "torch.stack().to", "returns_bandit.ReturnsBandit.net", "returns_bandit.ReturnsBandit.optimizer.zero_grad", "loss.backward", "returns_bandit.ReturnsBandit.optimizer.step", "loss.item", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.distributions.OneHotCategorical.entropy().mean.item", "len", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.distributions.OneHotCategorical.entropy", "torch.distributions.OneHotCategorical.entropy", "torch.distributions.OneHotCategorical.entropy", "torch.distributions.OneHotCategorical.entropy", "[].mean", "[].mean", "returns_bandit.ReturnsBandit.mean", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "returns_bandit.ReturnsBandit.min", "returns_bandit.ReturnsBandit.max"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step"], ["", "", "def", "update_returns", "(", "self", ",", "states", ",", "actions", ",", "returns", ",", "test_mode", ",", "t", ")", ":", "\n", "        ", "if", "test_mode", ":", "\n", "            ", "return", "\n", "\n", "", "for", "s", ",", "a", ",", "r", "in", "zip", "(", "states", ",", "actions", ",", "returns", ")", ":", "\n", "            ", "self", ".", "buffer", ".", "append", "(", "(", "s", ",", "a", ",", "torch", ".", "tensor", "(", "r", ",", "dtype", "=", "torch", ".", "float", ")", ")", ")", "\n", "\n", "", "for", "_", "in", "range", "(", "self", ".", "args", ".", "bandit_iters", ")", ":", "\n", "            ", "idxs", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "buffer", ")", ",", "size", "=", "self", ".", "args", ".", "bandit_batch", ")", "\n", "batch_elems", "=", "[", "self", ".", "buffer", "[", "i", "]", "for", "i", "in", "idxs", "]", "\n", "states_", "=", "torch", ".", "stack", "(", "[", "x", "[", "0", "]", "for", "x", "in", "batch_elems", "]", ")", ".", "to", "(", "states", ".", "device", ")", "\n", "actions_", "=", "torch", ".", "stack", "(", "[", "x", "[", "1", "]", "for", "x", "in", "batch_elems", "]", ")", ".", "to", "(", "states", ".", "device", ")", "\n", "returns_", "=", "torch", ".", "stack", "(", "[", "x", "[", "2", "]", "for", "x", "in", "batch_elems", "]", ")", ".", "to", "(", "states", ".", "device", ")", "\n", "\n", "if", "not", "self", ".", "args", ".", "bandit_use_state", ":", "\n", "                ", "states_", "=", "torch", ".", "ones_like", "(", "states_", ")", "\n", "\n", "", "estimated_returns_all", "=", "self", ".", "net", "(", "states_", ")", "\n", "estimated_returns", "=", "(", "estimated_returns_all", "*", "actions_", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "loss", "=", "(", "returns_", "-", "estimated_returns", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Log info about the last iteration", "\n", "", "self", ".", "logger", ".", "log_stat", "(", "\"bandit_loss\"", ",", "loss", ".", "item", "(", ")", ",", "t", ")", "\n", "action_distrib", "=", "torch", ".", "distributions", ".", "OneHotCategorical", "(", "F", ".", "softmax", "(", "estimated_returns_all", ",", "dim", "=", "1", ")", ")", "\n", "mean_entropy", "=", "action_distrib", ".", "entropy", "(", ")", ".", "mean", "(", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"bandit_entropy\"", ",", "mean_entropy", ".", "item", "(", ")", ",", "t", ")", "\n", "mins", "=", "estimated_returns_all", ".", "min", "(", "dim", "=", "1", ")", "[", "0", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "maxs", "=", "estimated_returns_all", ".", "max", "(", "dim", "=", "1", ")", "[", "0", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "means", "=", "estimated_returns_all", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"min_returns\"", ",", "mins", ",", "t", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"max_returns\"", ",", "maxs", ",", "t", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"mean_returns\"", ",", "means", ",", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.returns_bandit.ReturnsBandit.cuda": [[93, 95], ["returns_bandit.ReturnsBandit.net.cuda"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "self", ".", "net", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.returns_bandit.ReturnsBandit.save_model": [[96, 98], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "returns_bandit.ReturnsBandit.net.state_dict"], "methods", ["None"], ["", "def", "save_model", "(", "self", ",", "path", ")", ":", "\n", "        ", "torch", ".", "save", "(", "self", ".", "net", ".", "state_dict", "(", ")", ",", "\"{}/returns_bandit_net.th\"", ".", "format", "(", "path", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.__init__": [[6, 9], ["torch.distributions.one_hot_categorical.OneHotCategorical", "torch.tensor().repeat", "torch.tensor", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "noise_distrib", "=", "th", ".", "distributions", ".", "one_hot_categorical", ".", "OneHotCategorical", "(", "th", ".", "tensor", "(", "[", "1", "/", "self", ".", "args", ".", "noise_dim", "for", "_", "in", "range", "(", "self", ".", "args", ".", "noise_dim", ")", "]", ")", ".", "repeat", "(", "self", ".", "args", ".", "batch_size_run", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample": [[10, 12], ["uniform.Uniform.noise_distrib.sample"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample"], ["", "def", "sample", "(", "self", ",", "state", ",", "test_mode", ")", ":", "\n", "        ", "return", "self", ".", "noise_distrib", ".", "sample", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.update_returns": [[13, 15], ["None"], "methods", ["None"], ["", "def", "update_returns", "(", "self", ",", "state", ",", "noise", ",", "returns", ",", "test_mode", ",", "t", ")", ":", "\n", "        ", "pass", "", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.qtran.QTran.__init__": [[8, 51], ["torch.Module.__init__", "int", "numpy.prod", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "QTran", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "n_agents", "=", "args", ".", "n_agents", "\n", "self", ".", "n_actions", "=", "args", ".", "n_actions", "\n", "self", ".", "state_dim", "=", "int", "(", "np", ".", "prod", "(", "args", ".", "state_shape", ")", ")", "\n", "\n", "self", ".", "embed_dim", "=", "args", ".", "mixing_embed_dim", "\n", "\n", "# Q(s,-,u-i)", "\n", "# Q takes [state, u-i, i] as input", "\n", "q_input_size", "=", "self", ".", "state_dim", "+", "(", "self", ".", "n_agents", "*", "self", ".", "n_actions", ")", "+", "self", ".", "n_agents", "\n", "\n", "if", "self", ".", "args", ".", "network_size", "==", "\"small\"", ":", "\n", "            ", "self", ".", "Q", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "q_input_size", ",", "self", ".", "embed_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "self", ".", "embed_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "self", ".", "n_actions", ")", ")", "\n", "\n", "# V(s)", "\n", "self", ".", "V", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "embed_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "1", ")", ")", "\n", "", "elif", "self", ".", "args", ".", "network_size", "==", "\"big\"", ":", "\n", "# Adding another layer", "\n", "             ", "self", ".", "Q", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "q_input_size", ",", "self", ".", "embed_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "self", ".", "embed_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "self", ".", "embed_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "self", ".", "n_actions", ")", ")", "\n", "# V(s)", "\n", "self", ".", "V", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "embed_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "self", ".", "embed_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.qtran.QTran.forward": [[52, 75], ["batch[].repeat().view", "torch.eye().unsqueeze().unsqueeze().repeat().view", "torch.eye().unsqueeze().unsqueeze().repeat().view", "torch.eye().unsqueeze().unsqueeze().repeat().view", "torch.cat", "torch.cat", "torch.cat", "qtran.QTran.Q", "batch[].repeat().view", "qtran.QTran.V", "batch[].repeat", "agent_mask.view().repeat.view().repeat.view().repeat", "masked_actions.view.view.view", "batch[].repeat", "torch.eye", "torch.eye", "torch.eye", "agent_mask.view().repeat.view().repeat.unsqueeze().unsqueeze", "torch.eye().unsqueeze().unsqueeze().repeat", "torch.eye().unsqueeze().unsqueeze().repeat", "torch.eye().unsqueeze().unsqueeze().repeat", "batch[].repeat", "agent_mask.view().repeat.view().repeat.view", "agent_mask.view().repeat.view().repeat.unsqueeze", "torch.eye().unsqueeze().unsqueeze", "torch.eye().unsqueeze().unsqueeze", "torch.eye().unsqueeze().unsqueeze", "torch.eye().unsqueeze", "torch.eye().unsqueeze", "torch.eye().unsqueeze", "torch.eye", "torch.eye", "torch.eye"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "batch", ",", "masked_actions", "=", "None", ")", ":", "\n", "        ", "bs", "=", "batch", ".", "batch_size", "\n", "ts", "=", "batch", ".", "max_seq_length", "\n", "# Repeat each state n_agents times", "\n", "repeated_states", "=", "batch", "[", "\"state\"", "]", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ")", ".", "view", "(", "-", "1", ",", "self", ".", "state_dim", ")", "\n", "\n", "if", "masked_actions", "is", "None", ":", "\n", "            ", "actions", "=", "batch", "[", "\"actions_onehot\"", "]", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ",", "1", ")", "\n", "agent_mask", "=", "(", "1", "-", "th", ".", "eye", "(", "self", ".", "n_agents", ",", "device", "=", "batch", ".", "device", ")", ")", "\n", "agent_mask", "=", "agent_mask", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "n_actions", ")", "#.view(self.n_agents, -1)", "\n", "masked_actions", "=", "actions", "*", "agent_mask", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "masked_actions", "=", "masked_actions", ".", "view", "(", "-", "1", ",", "self", ".", "n_agents", "*", "self", ".", "n_actions", ")", "\n", "\n", "", "agent_ids", "=", "th", ".", "eye", "(", "self", ".", "n_agents", ",", "device", "=", "batch", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "bs", ",", "ts", ",", "1", ",", "1", ")", ".", "view", "(", "-", "1", ",", "self", ".", "n_agents", ")", "\n", "\n", "inputs", "=", "th", ".", "cat", "(", "[", "repeated_states", ",", "masked_actions", ",", "agent_ids", "]", ",", "dim", "=", "1", ")", "\n", "\n", "q_outputs", "=", "self", ".", "Q", "(", "inputs", ")", "\n", "\n", "states", "=", "batch", "[", "\"state\"", "]", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "n_agents", ")", ".", "view", "(", "-", "1", ",", "self", ".", "state_dim", ")", "\n", "v_outputs", "=", "self", ".", "V", "(", "states", ")", "\n", "\n", "return", "q_outputs", ",", "v_outputs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.noise_mix.QMixer.__init__": [[8, 40], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "int", "noise_mix.QMixer.hyper_w_1.weight.data.normal_", "noise_mix.QMixer.hyper_w_1.bias.data.normal_", "noise_mix.QMixer.hyper_w_final.weight.data.normal_", "noise_mix.QMixer.hyper_w_final.bias.data.normal_", "torch.Linear", "torch.Linear", "torch.Linear", "noise_mix.QMixer.skip_connections.bias.data.fill_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "numpy.prod"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "QMixer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "n_agents", "=", "args", ".", "n_agents", "\n", "self", ".", "state_dim", "=", "int", "(", "np", ".", "prod", "(", "args", ".", "state_shape", ")", ")", "+", "args", ".", "noise_dim", "\n", "\n", "self", ".", "embed_dim", "=", "args", ".", "mixing_embed_dim", "\n", "\n", "self", ".", "hyper_w_1", "=", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "embed_dim", "*", "self", ".", "n_agents", ")", "\n", "self", ".", "hyper_w_final", "=", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "embed_dim", ")", "\n", "\n", "# Initialise the hyper networks with a fixed variance, if specified", "\n", "if", "self", ".", "args", ".", "hyper_initialization_nonzeros", ">", "0", ":", "\n", "            ", "std", "=", "self", ".", "args", ".", "hyper_initialization_nonzeros", "**", "-", "0.5", "\n", "self", ".", "hyper_w_1", ".", "weight", ".", "data", ".", "normal_", "(", "std", "=", "std", ")", "\n", "self", ".", "hyper_w_1", ".", "bias", ".", "data", ".", "normal_", "(", "std", "=", "std", ")", "\n", "self", ".", "hyper_w_final", ".", "weight", ".", "data", ".", "normal_", "(", "std", "=", "std", ")", "\n", "self", ".", "hyper_w_final", ".", "bias", ".", "data", ".", "normal_", "(", "std", "=", "std", ")", "\n", "\n", "# Initialise the hyper-network of the skip-connections, such that the result is close to VDN", "\n", "", "if", "self", ".", "args", ".", "skip_connections", ":", "\n", "            ", "self", ".", "skip_connections", "=", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "args", ".", "n_agents", ",", "bias", "=", "True", ")", "\n", "self", ".", "skip_connections", ".", "bias", ".", "data", ".", "fill_", "(", "1.0", ")", "# bias produces initial VDN weights", "\n", "\n", "# State dependent bias for hidden layer", "\n", "", "self", ".", "hyper_b_1", "=", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "embed_dim", ")", "\n", "\n", "# V(s) instead of a bias for the last layers", "\n", "self", ".", "V", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "embed_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.noise_mix.QMixer.forward": [[41, 67], ["agent_qs.view.view.size", "torch.cat", "torch.cat", "torch.cat", "states.reshape.reshape.reshape", "agent_qs.view.view.view", "torch.abs", "torch.abs", "torch.abs", "noise_mix.QMixer.hyper_b_1", "w1.view.view.view", "b1.view.view.view", "torch.elu", "torch.elu", "torch.elu", "torch.abs", "torch.abs", "torch.abs", "w_final.view.view.view", "noise_mix.QMixer.V().view", "y.view", "noise_mix.QMixer.hyper_w_1", "noise_mix.QMixer.hyper_w_final", "torch.abs().view", "torch.abs().view", "torch.abs().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "noise_mix.QMixer.V", "torch.bmm", "torch.bmm", "torch.bmm", "torch.abs", "torch.abs", "torch.abs", "noise_mix.QMixer.skip_connections"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "agent_qs", ",", "states", ",", "noise", ")", ":", "\n", "        ", "bs", "=", "agent_qs", ".", "size", "(", "0", ")", "\n", "states", "=", "th", ".", "cat", "(", "[", "states", ",", "noise", "]", ",", "dim", "=", "-", "1", ")", "\n", "states", "=", "states", ".", "reshape", "(", "-", "1", ",", "self", ".", "state_dim", ")", "\n", "agent_qs", "=", "agent_qs", ".", "view", "(", "-", "1", ",", "1", ",", "self", ".", "n_agents", ")", "\n", "# First layer", "\n", "w1", "=", "th", ".", "abs", "(", "self", ".", "hyper_w_1", "(", "states", ")", ")", "\n", "b1", "=", "self", ".", "hyper_b_1", "(", "states", ")", "\n", "w1", "=", "w1", ".", "view", "(", "-", "1", ",", "self", ".", "n_agents", ",", "self", ".", "embed_dim", ")", "\n", "b1", "=", "b1", ".", "view", "(", "-", "1", ",", "1", ",", "self", ".", "embed_dim", ")", "\n", "hidden", "=", "F", ".", "elu", "(", "th", ".", "bmm", "(", "agent_qs", ",", "w1", ")", "+", "b1", ")", "\n", "# Second layer", "\n", "w_final", "=", "th", ".", "abs", "(", "self", ".", "hyper_w_final", "(", "states", ")", ")", "\n", "w_final", "=", "w_final", ".", "view", "(", "-", "1", ",", "self", ".", "embed_dim", ",", "1", ")", "\n", "# State-dependent bias", "\n", "v", "=", "self", ".", "V", "(", "states", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "# Skip connections", "\n", "s", "=", "0", "\n", "if", "self", ".", "args", ".", "skip_connections", ":", "\n", "            ", "ws", "=", "th", ".", "abs", "(", "self", ".", "skip_connections", "(", "states", ")", ")", ".", "view", "(", "-", "1", ",", "self", ".", "n_agents", ",", "1", ")", "\n", "s", "=", "th", ".", "bmm", "(", "agent_qs", ",", "ws", ")", "\n", "# Compute final output", "\n", "", "y", "=", "th", ".", "bmm", "(", "hidden", ",", "w_final", ")", "+", "v", "+", "s", "\n", "# Reshape and return", "\n", "q_tot", "=", "y", ".", "view", "(", "bs", ",", "-", "1", ",", "1", ")", "\n", "return", "q_tot", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.qmix.QMixer.__init__": [[8, 40], ["torch.Module.__init__", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "numpy.prod", "qmix.QMixer.hyper_w_1.weight.data.normal_", "qmix.QMixer.hyper_w_1.bias.data.normal_", "qmix.QMixer.hyper_w_final.weight.data.normal_", "qmix.QMixer.hyper_w_final.bias.data.normal_", "torch.Linear", "torch.Linear", "torch.Linear", "qmix.QMixer.skip_connections.bias.data.fill_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "QMixer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "n_agents", "=", "args", ".", "n_agents", "\n", "self", ".", "state_dim", "=", "int", "(", "np", ".", "prod", "(", "args", ".", "state_shape", ")", ")", "\n", "\n", "self", ".", "embed_dim", "=", "args", ".", "mixing_embed_dim", "\n", "\n", "self", ".", "hyper_w_1", "=", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "embed_dim", "*", "self", ".", "n_agents", ")", "\n", "self", ".", "hyper_w_final", "=", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "embed_dim", ")", "\n", "\n", "# Initialise the hyper networks with a fixed variance, if specified", "\n", "if", "self", ".", "args", ".", "hyper_initialization_nonzeros", ">", "0", ":", "\n", "            ", "std", "=", "self", ".", "args", ".", "hyper_initialization_nonzeros", "**", "-", "0.5", "\n", "self", ".", "hyper_w_1", ".", "weight", ".", "data", ".", "normal_", "(", "std", "=", "std", ")", "\n", "self", ".", "hyper_w_1", ".", "bias", ".", "data", ".", "normal_", "(", "std", "=", "std", ")", "\n", "self", ".", "hyper_w_final", ".", "weight", ".", "data", ".", "normal_", "(", "std", "=", "std", ")", "\n", "self", ".", "hyper_w_final", ".", "bias", ".", "data", ".", "normal_", "(", "std", "=", "std", ")", "\n", "\n", "# Initialise the hyper-network of the skip-connections, such that the result is close to VDN", "\n", "", "if", "self", ".", "args", ".", "skip_connections", ":", "\n", "            ", "self", ".", "skip_connections", "=", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "args", ".", "n_agents", ",", "bias", "=", "True", ")", "\n", "self", ".", "skip_connections", ".", "bias", ".", "data", ".", "fill_", "(", "1.0", ")", "# bias produces initial VDN weights", "\n", "\n", "# State dependent bias for hidden layer", "\n", "", "self", ".", "hyper_b_1", "=", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "embed_dim", ")", "\n", "\n", "# V(s) instead of a bias for the last layers", "\n", "self", ".", "V", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "self", ".", "state_dim", ",", "self", ".", "embed_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.qmix.QMixer.forward": [[41, 66], ["agent_qs.view.view.size", "states.reshape.reshape.reshape", "agent_qs.view.view.view", "torch.abs", "torch.abs", "torch.abs", "qmix.QMixer.hyper_b_1", "w1.view.view.view", "b1.view.view.view", "torch.elu", "torch.elu", "torch.elu", "torch.abs", "torch.abs", "torch.abs", "w_final.view.view.view", "qmix.QMixer.V().view", "y.view", "qmix.QMixer.hyper_w_1", "qmix.QMixer.hyper_w_final", "torch.abs().view", "torch.abs().view", "torch.abs().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "qmix.QMixer.V", "torch.bmm", "torch.bmm", "torch.bmm", "torch.abs", "torch.abs", "torch.abs", "qmix.QMixer.skip_connections"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "agent_qs", ",", "states", ")", ":", "\n", "        ", "bs", "=", "agent_qs", ".", "size", "(", "0", ")", "\n", "states", "=", "states", ".", "reshape", "(", "-", "1", ",", "self", ".", "state_dim", ")", "\n", "agent_qs", "=", "agent_qs", ".", "view", "(", "-", "1", ",", "1", ",", "self", ".", "n_agents", ")", "\n", "# First layer", "\n", "w1", "=", "th", ".", "abs", "(", "self", ".", "hyper_w_1", "(", "states", ")", ")", "\n", "b1", "=", "self", ".", "hyper_b_1", "(", "states", ")", "\n", "w1", "=", "w1", ".", "view", "(", "-", "1", ",", "self", ".", "n_agents", ",", "self", ".", "embed_dim", ")", "\n", "b1", "=", "b1", ".", "view", "(", "-", "1", ",", "1", ",", "self", ".", "embed_dim", ")", "\n", "hidden", "=", "F", ".", "elu", "(", "th", ".", "bmm", "(", "agent_qs", ",", "w1", ")", "+", "b1", ")", "\n", "# Second layer", "\n", "w_final", "=", "th", ".", "abs", "(", "self", ".", "hyper_w_final", "(", "states", ")", ")", "\n", "w_final", "=", "w_final", ".", "view", "(", "-", "1", ",", "self", ".", "embed_dim", ",", "1", ")", "\n", "# State-dependent bias", "\n", "v", "=", "self", ".", "V", "(", "states", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "# Skip connections", "\n", "s", "=", "0", "\n", "if", "self", ".", "args", ".", "skip_connections", ":", "\n", "            ", "ws", "=", "th", ".", "abs", "(", "self", ".", "skip_connections", "(", "states", ")", ")", ".", "view", "(", "-", "1", ",", "self", ".", "n_agents", ",", "1", ")", "\n", "s", "=", "th", ".", "bmm", "(", "agent_qs", ",", "ws", ")", "\n", "# Compute final output", "\n", "", "y", "=", "th", ".", "bmm", "(", "hidden", ",", "w_final", ")", "+", "v", "+", "s", "\n", "# Reshape and return", "\n", "q_tot", "=", "y", ".", "view", "(", "bs", ",", "-", "1", ",", "1", ")", "\n", "return", "q_tot", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.__init__": [[6, 8], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "VDNMixer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.mixers.vdn.VDNMixer.forward": [[9, 11], ["torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "agent_qs", ",", "batch", ")", ":", "\n", "        ", "return", "th", ".", "sum", "(", "agent_qs", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.step": [[3, 6], ["None"], "methods", ["None"], ["    ", "def", "step", "(", "self", ",", "actions", ")", ":", "\n", "        ", "\"\"\" Returns reward, terminated, info \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_obs": [[7, 10], ["None"], "methods", ["None"], ["", "def", "get_obs", "(", "self", ")", ":", "\n", "        ", "\"\"\" Returns all agent observations in a list \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_obs_agent": [[11, 14], ["None"], "methods", ["None"], ["", "def", "get_obs_agent", "(", "self", ",", "agent_id", ")", ":", "\n", "        ", "\"\"\" Returns observation for agent_id \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_obs_size": [[15, 18], ["None"], "methods", ["None"], ["", "def", "get_obs_size", "(", "self", ")", ":", "\n", "        ", "\"\"\" Returns the shape of the observation \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_state": [[19, 21], ["None"], "methods", ["None"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_state_size": [[22, 25], ["None"], "methods", ["None"], ["", "def", "get_state_size", "(", "self", ")", ":", "\n", "        ", "\"\"\" Returns the shape of the state\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_avail_actions": [[26, 28], ["None"], "methods", ["None"], ["", "def", "get_avail_actions", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_avail_agent_actions": [[29, 32], ["None"], "methods", ["None"], ["", "def", "get_avail_agent_actions", "(", "self", ",", "agent_id", ")", ":", "\n", "        ", "\"\"\" Returns the available actions for agent_id \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_total_actions": [[33, 36], ["None"], "methods", ["None"], ["", "def", "get_total_actions", "(", "self", ")", ":", "\n", "        ", "\"\"\" Returns the total number of actions an agent could ever take \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_stats": [[37, 39], ["None"], "methods", ["None"], ["", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_agg_stats": [[40, 42], ["None"], "methods", ["None"], ["", "def", "get_agg_stats", "(", "self", ",", "stats", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.reset": [[43, 46], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\" Returns initial observations and states\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.render": [[47, 49], ["None"], "methods", ["None"], ["", "def", "render", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.close": [[50, 52], ["None"], "methods", ["None"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.seed": [[53, 55], ["None"], "methods", ["None"], ["", "def", "seed", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.save_replay": [[56, 58], ["None"], "methods", ["None"], ["", "def", "save_replay", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.multiagentenv.MultiAgentEnv.get_env_info": [[59, 66], ["multiagentenv.MultiAgentEnv.get_state_size", "multiagentenv.MultiAgentEnv.get_obs_size", "multiagentenv.MultiAgentEnv.get_total_actions"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_state_size", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs_size", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_total_actions"], ["", "def", "get_env_info", "(", "self", ")", ":", "\n", "        ", "env_info", "=", "{", "\"state_shape\"", ":", "self", ".", "get_state_size", "(", ")", ",", "\n", "\"obs_shape\"", ":", "self", ".", "get_obs_size", "(", ")", ",", "\n", "\"n_actions\"", ":", "self", ".", "get_total_actions", "(", ")", ",", "\n", "\"n_agents\"", ":", "self", ".", "n_agents", ",", "\n", "\"episode_limit\"", ":", "self", ".", "episode_limit", "}", "\n", "return", "env_info", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.envs.__init__.env_fn": [[6, 8], ["env"], "function", ["None"], []], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.__init__": [[7, 31], ["isinstance", "len", "utils.dict2namedtuple.convert", "range"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.dict2namedtuple.convert"], ["    ", "def", "__init__", "(", "self", ",", "batch_size", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "# Unpack arguments from sacred", "\n", "        ", "args", "=", "kwargs", "[", "\"env_args\"", "]", "\n", "if", "isinstance", "(", "args", ",", "dict", ")", ":", "\n", "            ", "args", "=", "convert", "(", "args", ")", "\n", "\n", "# Define the agents", "\n", "", "self", ".", "n_agents", "=", "2", "\n", "\n", "self", ".", "episode_limit", "=", "args", ".", "steps", "\n", "\n", "# Define the internal state", "\n", "self", ".", "steps", "=", "0", "\n", "\n", "r_matrix", "=", "[", "[", "1", ",", "1", "]", ",", "[", "1", ",", "1", "]", "]", "\n", "self", ".", "payoff_values", "=", "[", "r_matrix", "for", "_", "in", "range", "(", "self", ".", "episode_limit", ")", "]", "\n", "self", ".", "final_step_diff", "=", "[", "[", "1", ",", "1", "]", ",", "[", "1", ",", "4", "]", "]", "\n", "\n", "self", ".", "branches", "=", "4", "\n", "self", ".", "branch", "=", "0", "\n", "\n", "self", ".", "n_actions", "=", "len", "(", "self", ".", "payoff_values", "[", "0", "]", ")", "\n", "\n", "self", ".", "good_branches", "=", "args", ".", "good_branches", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.reset": [[32, 37], ["nstep_matrix_game.NStepMatrixGame.get_obs", "nstep_matrix_game.NStepMatrixGame.get_state"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_state"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\" Returns initial observations and states\"\"\"", "\n", "self", ".", "steps", "=", "0", "\n", "self", ".", "branch", "=", "0", "\n", "return", "self", ".", "get_obs", "(", ")", ",", "self", ".", "get_state", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.step": [[38, 93], ["Exception"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "actions", ")", ":", "\n", "        ", "\"\"\" Returns reward, terminated, info \"\"\"", "\n", "current_branch", "=", "0", "\n", "if", "(", "actions", "[", "0", "]", ",", "actions", "[", "1", "]", ")", "==", "(", "0", ",", "0", ")", ":", "\n", "            ", "current_branch", "=", "0", "\n", "", "if", "(", "actions", "[", "0", "]", ",", "actions", "[", "1", "]", ")", "==", "(", "0", ",", "1", ")", ":", "\n", "            ", "current_branch", "=", "1", "\n", "", "if", "(", "actions", "[", "0", "]", ",", "actions", "[", "1", "]", ")", "==", "(", "1", ",", "0", ")", ":", "\n", "            ", "current_branch", "=", "2", "\n", "", "if", "(", "actions", "[", "0", "]", ",", "actions", "[", "1", "]", ")", "==", "(", "1", ",", "1", ")", ":", "\n", "            ", "current_branch", "=", "3", "\n", "\n", "", "if", "self", ".", "steps", "==", "0", ":", "\n", "            ", "self", ".", "branch", "=", "current_branch", "\n", "\n", "", "info", "=", "{", "}", "\n", "\n", "info", "[", "\"good_payoff\"", "]", "=", "0", "\n", "info", "[", "\"branch\"", "]", "=", "self", ".", "branch", "\n", "\n", "if", "self", ".", "good_branches", "==", "4", ":", "\n", "            ", "reward", "=", "1", "if", "self", ".", "branch", "==", "current_branch", "else", "0", "# Need to follow your branch", "\n", "", "elif", "self", ".", "good_branches", "==", "2", ":", "\n", "            ", "reward", "=", "1", "if", "self", ".", "branch", "in", "[", "0", ",", "3", "]", "and", "self", ".", "branch", "==", "current_branch", "else", "0", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Environment not setup to handle {} good branches\"", ".", "format", "(", "self", ".", "good_branches", ")", ")", "\n", "\n", "", "if", "self", ".", "episode_limit", ">", "1", "and", "self", ".", "steps", "==", "self", ".", "episode_limit", "-", "1", "and", "self", ".", "branch", "==", "0", ":", "\n", "            ", "info", "[", "\"good_payoff\"", "]", "=", "1", "\n", "reward", "=", "self", ".", "final_step_diff", "[", "actions", "[", "0", "]", "]", "[", "actions", "[", "1", "]", "]", "\n", "\n", "", "self", ".", "steps", "+=", "1", "\n", "\n", "if", "self", ".", "steps", "<", "self", ".", "episode_limit", "and", "reward", ">", "0", ":", "\n", "            ", "terminated", "=", "False", "\n", "", "else", ":", "\n", "            ", "terminated", "=", "True", "\n", "\n", "", "info", "[", "\"episode_limit\"", "]", "=", "False", "\n", "\n", "# How often the joint-actions are taken", "\n", "info", "[", "\"action_00\"", "]", "=", "0", "\n", "info", "[", "\"action_01\"", "]", "=", "0", "\n", "info", "[", "\"action_10\"", "]", "=", "0", "\n", "info", "[", "\"action_11\"", "]", "=", "0", "\n", "if", "(", "actions", "[", "0", "]", ",", "actions", "[", "1", "]", ")", "==", "(", "0", ",", "0", ")", ":", "\n", "            ", "info", "[", "\"action_00\"", "]", "=", "1", "\n", "", "if", "(", "actions", "[", "0", "]", ",", "actions", "[", "1", "]", ")", "==", "(", "0", ",", "1", ")", ":", "\n", "            ", "info", "[", "\"action_01\"", "]", "=", "1", "\n", "", "if", "(", "actions", "[", "0", "]", ",", "actions", "[", "1", "]", ")", "==", "(", "1", ",", "0", ")", ":", "\n", "            ", "info", "[", "\"action_10\"", "]", "=", "1", "\n", "", "if", "(", "actions", "[", "0", "]", ",", "actions", "[", "1", "]", ")", "==", "(", "1", ",", "1", ")", ":", "\n", "            ", "info", "[", "\"action_11\"", "]", "=", "1", "\n", "\n", "", "return", "reward", ",", "terminated", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.get_obs": [[94, 104], ["numpy.zeros", "numpy.zeros", "numpy.copy", "range"], "methods", ["None"], ["", "def", "get_obs", "(", "self", ")", ":", "\n", "        ", "\"\"\" Returns all agent observations in a list \"\"\"", "\n", "if", "self", ".", "episode_limit", "==", "1", ":", "\n", "            ", "one_hot_step", "=", "np", ".", "zeros", "(", "self", ".", "episode_limit", "+", "1", ")", "\n", "one_hot_step", "[", "self", ".", "steps", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "one_hot_step", "=", "np", ".", "zeros", "(", "self", ".", "episode_limit", "+", "1", "+", "self", ".", "branches", ")", "\n", "one_hot_step", "[", "self", ".", "steps", "]", "=", "1", "\n", "one_hot_step", "[", "self", ".", "episode_limit", "+", "1", "+", "self", ".", "branch", "]", "=", "1", "\n", "", "return", "[", "np", ".", "copy", "(", "one_hot_step", ")", "for", "_", "in", "range", "(", "self", ".", "n_agents", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.get_obs_agent": [[105, 108], ["nstep_matrix_game.NStepMatrixGame.get_obs"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs"], ["", "def", "get_obs_agent", "(", "self", ",", "agent_id", ")", ":", "\n", "        ", "\"\"\" Returns observation for agent_id \"\"\"", "\n", "return", "self", ".", "get_obs", "(", ")", "[", "agent_id", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.get_obs_size": [[109, 112], ["len", "nstep_matrix_game.NStepMatrixGame.get_obs_agent"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs_agent"], ["", "def", "get_obs_size", "(", "self", ")", ":", "\n", "        ", "\"\"\" Returns the shape of the observation \"\"\"", "\n", "return", "len", "(", "self", ".", "get_obs_agent", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.get_state": [[113, 115], ["nstep_matrix_game.NStepMatrixGame.get_obs_agent"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs_agent"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get_obs_agent", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.get_state_size": [[116, 119], ["nstep_matrix_game.NStepMatrixGame.get_obs_size"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs_size"], ["", "def", "get_state_size", "(", "self", ")", ":", "\n", "        ", "\"\"\" Returns the shape of the state\"\"\"", "\n", "return", "self", ".", "get_obs_size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.get_avail_actions": [[120, 126], ["range", "nstep_matrix_game.NStepMatrixGame.get_avail_agent_actions", "avail_actions.append"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_agent_actions"], ["", "def", "get_avail_actions", "(", "self", ")", ":", "\n", "        ", "avail_actions", "=", "[", "]", "\n", "for", "agent_id", "in", "range", "(", "self", ".", "n_agents", ")", ":", "\n", "            ", "avail_agent", "=", "self", ".", "get_avail_agent_actions", "(", "agent_id", ")", "\n", "avail_actions", ".", "append", "(", "avail_agent", ")", "\n", "", "return", "avail_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.get_avail_agent_actions": [[127, 130], ["numpy.ones"], "methods", ["None"], ["", "def", "get_avail_agent_actions", "(", "self", ",", "agent_id", ")", ":", "\n", "        ", "\"\"\" Returns the available actions for agent_id \"\"\"", "\n", "return", "np", ".", "ones", "(", "self", ".", "n_actions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.get_total_actions": [[131, 134], ["None"], "methods", ["None"], ["", "def", "get_total_actions", "(", "self", ")", ":", "\n", "        ", "\"\"\" Returns the total number of actions an agent could ever take \"\"\"", "\n", "return", "self", ".", "n_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.get_stats": [[135, 137], ["None"], "methods", ["None"], ["", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.render": [[138, 140], ["None"], "methods", ["None"], ["", "def", "render", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.close": [[141, 143], ["None"], "methods", ["None"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.matrix_game.nstep_matrix_game.NStepMatrixGame.seed": [[144, 146], ["None"], "methods", ["None"], ["", "def", "seed", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.map_params.get_map_params": [[309, 311], ["None"], "function", ["None"], ["def", "get_map_params", "(", "map_name", ")", ":", "\n", "    ", "return", "map_param_registry", "[", "map_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.map_params.map_present": [[312, 314], ["None"], "function", ["None"], ["", "def", "map_present", "(", "map_name", ")", ":", "\n", "    ", "return", "map_name", "in", "map_param_registry", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.__init__": [[69, 188], ["isinstance", "utils.dict2namedtuple.convert.map_present", "utils.dict2namedtuple.convert", "starcraft2.SC2._launch", "starcraft2.SC2.controller.game_info", "numpy.flip", "utils.dict2namedtuple.convert", "utils.dict2namedtuple.convert.get_map_params", "os.path.join", "numpy.transpose", "numpy.array().reshape", "numpy.transpose", "numpy.invert", "copy.deepcopy", "os.getcwd", "numpy.array().reshape", "int", "numpy.array", "numpy.flip", "numpy.array", "numpy.transpose", "numpy.array", "list", "numpy.array().reshape", "list", "range", "numpy.array", "list"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.map_params.map_present", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.dict2namedtuple.convert", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2._launch", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.dict2namedtuple.convert", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.map_params.get_map_params"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "\n", "        ", "args", "=", "kwargs", "[", "\"env_args\"", "]", "\n", "if", "isinstance", "(", "args", ",", "dict", ")", ":", "\n", "            ", "args", "=", "convert", "(", "args", ")", "\n", "# Read arguments", "\n", "", "self", ".", "map_name", "=", "args", ".", "map_name", "\n", "assert", "map_present", "(", "self", ".", "map_name", ")", ",", "\"map {} not in map registry! please add.\"", ".", "format", "(", "self", ".", "map_name", ")", "\n", "map_params", "=", "convert", "(", "get_map_params", "(", "self", ".", "map_name", ")", ")", "\n", "self", ".", "n_agents", "=", "map_params", ".", "n_agents", "\n", "self", ".", "n_enemies", "=", "map_params", ".", "n_enemies", "\n", "self", ".", "episode_limit", "=", "map_params", ".", "limit", "\n", "self", ".", "_move_amount", "=", "args", ".", "move_amount", "\n", "self", ".", "_step_mul", "=", "args", ".", "step_mul", "\n", "self", ".", "difficulty", "=", "args", ".", "difficulty", "\n", "# Observations and state", "\n", "self", ".", "obs_own_health", "=", "args", ".", "obs_own_health", "\n", "self", ".", "obs_all_health", "=", "args", ".", "obs_all_health", "\n", "self", ".", "obs_instead_of_state", "=", "args", ".", "obs_instead_of_state", "\n", "self", ".", "obs_last_action", "=", "args", ".", "obs_last_action", "\n", "self", ".", "obs_pathing_grid", "=", "args", ".", "obs_pathing_grid", "\n", "self", ".", "obs_terrain_height", "=", "args", ".", "obs_terrain_height", "\n", "self", ".", "state_last_action", "=", "args", ".", "state_last_action", "\n", "if", "self", ".", "obs_all_health", ":", "\n", "            ", "self", ".", "obs_own_health", "=", "True", "\n", "", "self", ".", "n_obs_pathing", "=", "8", "\n", "self", ".", "n_obs_height", "=", "9", "\n", "# Rewards args", "\n", "self", ".", "reward_sparse", "=", "args", ".", "reward_sparse", "\n", "self", ".", "reward_only_positive", "=", "args", ".", "reward_only_positive", "\n", "self", ".", "reward_negative_scale", "=", "args", ".", "reward_negative_scale", "\n", "self", ".", "reward_death_value", "=", "args", ".", "reward_death_value", "\n", "self", ".", "reward_win", "=", "args", ".", "reward_win", "\n", "self", ".", "reward_defeat", "=", "args", ".", "reward_defeat", "\n", "self", ".", "reward_scale", "=", "args", ".", "reward_scale", "\n", "self", ".", "reward_scale_rate", "=", "args", ".", "reward_scale_rate", "\n", "# Other", "\n", "self", ".", "continuing_episode", "=", "args", ".", "continuing_episode", "\n", "self", ".", "seed", "=", "args", ".", "seed", "\n", "self", ".", "heuristic", "=", "args", ".", "heuristic", "\n", "self", ".", "window_size", "=", "(", "2560", ",", "1600", ")", "\n", "self", ".", "save_replay_prefix", "=", "args", ".", "save_replay_prefix", "\n", "self", ".", "restrict_actions", "=", "args", ".", "restrict_actions", "\n", "\n", "# For sanity check", "\n", "self", ".", "debug_inputs", "=", "False", "\n", "self", ".", "debug_rewards", "=", "False", "\n", "\n", "# Map info", "\n", "self", ".", "_agent_race", "=", "map_params", ".", "a_race", "\n", "self", ".", "_bot_race", "=", "map_params", ".", "b_race", "\n", "self", ".", "shield_bits_ally", "=", "1", "if", "self", ".", "_agent_race", "==", "\"P\"", "else", "0", "\n", "self", ".", "shield_bits_enemy", "=", "1", "if", "self", ".", "_bot_race", "==", "\"P\"", "else", "0", "\n", "self", ".", "unit_type_bits", "=", "map_params", ".", "unit_type_bits", "\n", "self", ".", "map_type", "=", "map_params", ".", "map_type", "\n", "\n", "# Actions", "\n", "self", ".", "n_actions_no_attack", "=", "6", "\n", "self", ".", "n_actions_move", "=", "4", "\n", "if", "self", ".", "map_type", "==", "'bunker'", ":", "\n", "            ", "self", ".", "n_actions_no_attack", "+=", "2", "# enter & leave bunker", "\n", "self", ".", "bunker_enter_range", "=", "args", ".", "bunker_enter_range", "\n", "self", ".", "bunker_open", "=", "0", "\n", "", "self", ".", "n_actions", "=", "self", ".", "n_actions_no_attack", "+", "self", ".", "n_enemies", "\n", "\n", "if", "sys", ".", "platform", "==", "'linux'", ":", "\n", "            ", "os", ".", "environ", "[", "'SC2PATH'", "]", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "\"3rdparty\"", ",", "'StarCraftII'", ")", "\n", "self", ".", "game_version", "=", "args", ".", "game_version", "\n", "", "else", ":", "\n", "# Can be derived automatically", "\n", "            ", "self", ".", "game_version", "=", "\"4.6.2\"", "\n", "\n", "# Launch the game", "\n", "", "self", ".", "_launch", "(", ")", "\n", "\n", "self", ".", "max_reward", "=", "self", ".", "n_enemies", "*", "self", ".", "reward_death_value", "+", "self", ".", "reward_win", "\n", "self", ".", "_game_info", "=", "self", ".", "controller", ".", "game_info", "(", ")", "\n", "self", ".", "_map_info", "=", "self", ".", "_game_info", ".", "start_raw", "\n", "self", ".", "map_x", "=", "self", ".", "_map_info", ".", "map_size", ".", "x", "\n", "self", ".", "map_y", "=", "self", ".", "_map_info", ".", "map_size", ".", "y", "\n", "self", ".", "map_play_area_min", "=", "self", ".", "_map_info", ".", "playable_area", ".", "p0", "\n", "self", ".", "map_play_area_max", "=", "self", ".", "_map_info", ".", "playable_area", ".", "p1", "\n", "self", ".", "max_distance_x", "=", "self", ".", "map_play_area_max", ".", "x", "-", "self", ".", "map_play_area_min", ".", "x", "\n", "self", ".", "max_distance_y", "=", "self", ".", "map_play_area_max", ".", "y", "-", "self", ".", "map_play_area_min", ".", "y", "\n", "self", ".", "terrain_height", "=", "np", ".", "flip", "(", "np", ".", "transpose", "(", "np", ".", "array", "(", "list", "(", "self", ".", "_map_info", ".", "terrain_height", ".", "data", ")", ")", ".", "reshape", "(", "self", ".", "map_x", ",", "self", ".", "map_y", ")", ")", ",", "1", ")", "\n", "if", "self", ".", "_map_info", ".", "pathing_grid", ".", "bits_per_pixel", "==", "1", ":", "\n", "            ", "vals", "=", "np", ".", "array", "(", "list", "(", "self", ".", "_map_info", ".", "pathing_grid", ".", "data", ")", ")", ".", "reshape", "(", "\n", "self", ".", "map_x", ",", "int", "(", "self", ".", "map_y", "/", "8", ")", ")", "\n", "self", ".", "pathing_grid", "=", "np", ".", "transpose", "(", "np", ".", "array", "(", "[", "\n", "[", "(", "b", ">>", "i", ")", "&", "1", "for", "b", "in", "row", "for", "i", "in", "range", "(", "7", ",", "-", "1", ",", "-", "1", ")", "]", "\n", "for", "row", "in", "vals", "]", ",", "dtype", "=", "np", ".", "bool", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "pathing_grid", "=", "np", ".", "invert", "(", "np", ".", "flip", "(", "np", ".", "transpose", "(", "np", ".", "array", "(", "\n", "list", "(", "self", ".", "_map_info", ".", "pathing_grid", ".", "data", ")", ",", "dtype", "=", "np", ".", "bool", ")", ".", "reshape", "(", "\n", "self", ".", "map_y", ",", "self", ".", "map_x", ")", ")", ",", "axis", "=", "1", ")", ")", "\n", "\n", "#print(self.pathing_grid.shape)", "\n", "#for x in self.pathing_grid:", "\n", "#    string = ''", "\n", "#    for y in x:", "\n", "#        string += '+' if y else \"-\"", "\n", "#    print(string)", "\n", "#print(self.map_x)", "\n", "#print(self.map_y)", "\n", "\n", "", "if", "'2_corridors'", "in", "self", ".", "map_name", ":", "\n", "            ", "self", ".", "pathing_grid_orig", "=", "deepcopy", "(", "self", ".", "pathing_grid", ")", "\n", "self", ".", "corridor", "=", "0", "\n", "\n", "", "self", ".", "_episode_count", "=", "0", "\n", "self", ".", "_total_steps", "=", "0", "\n", "\n", "self", ".", "battles_won", "=", "0", "\n", "self", ".", "battles_game", "=", "0", "\n", "self", ".", "timeouts", "=", "0", "\n", "self", ".", "force_restarts", "=", "0", "\n", "\n", "self", ".", "last_stats", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.init_ally_unit_types": [[200, 227], ["None"], "methods", ["None"], ["", "def", "init_ally_unit_types", "(", "self", ",", "min_unit_type", ")", ":", "\n", "# This should be called once from the init_units function", "\n", "\n", "        ", "self", ".", "stalker_id", "=", "self", ".", "sentry_id", "=", "self", ".", "zealot_id", "=", "self", ".", "colossus_id", "=", "0", "\n", "self", ".", "marine_id", "=", "self", ".", "marauder_id", "=", "self", ".", "medivac_id", "=", "0", "\n", "self", ".", "hydralisk_id", "=", "self", ".", "zergling_id", "=", "self", ".", "baneling_id", "=", "0", "\n", "\n", "self", ".", "min_unit_type", "=", "min_unit_type", "\n", "\n", "if", "self", ".", "map_type", "==", "'sz'", "or", "self", ".", "map_type", "==", "'s_v_z'", ":", "\n", "            ", "self", ".", "stalker_id", "=", "min_unit_type", "\n", "self", ".", "zealot_id", "=", "min_unit_type", "+", "1", "\n", "", "elif", "self", ".", "map_type", "==", "'MMM'", ":", "\n", "            ", "self", ".", "marauder_id", "=", "min_unit_type", "\n", "self", ".", "marine_id", "=", "min_unit_type", "+", "1", "\n", "self", ".", "medivac_id", "=", "min_unit_type", "+", "2", "\n", "", "elif", "self", ".", "map_type", "==", "'zealots'", ":", "\n", "            ", "self", ".", "zealot_id", "=", "min_unit_type", "\n", "", "elif", "self", ".", "map_type", "==", "'focus_fire'", ":", "\n", "            ", "self", ".", "hydralisk_id", "=", "min_unit_type", "\n", "", "elif", "self", ".", "map_type", "==", "'retarget'", ":", "\n", "            ", "self", ".", "stalker_id", "=", "min_unit_type", "\n", "", "elif", "self", ".", "map_type", "==", "'colossus'", ":", "\n", "            ", "self", ".", "colossus_id", "=", "min_unit_type", "\n", "", "elif", "self", ".", "map_type", "==", "'ze_ba'", ":", "\n", "            ", "self", ".", "baneling_id", "=", "min_unit_type", "\n", "self", ".", "zergling_id", "=", "min_unit_type", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2._launch": [[228, 252], ["pysc2.run_configs.get", "pysc2.maps.get", "s2clientprotocol.sc2api_pb2.InterfaceOptions", "starcraft2.SC2._run_config.start", "s2clientprotocol.sc2api_pb2.RequestCreateGame", "s2clientprotocol.sc2api_pb2.RequestCreateGame.player_setup.add", "s2clientprotocol.sc2api_pb2.RequestCreateGame.player_setup.add", "starcraft2.SC2.controller.create_game", "s2clientprotocol.sc2api_pb2.RequestJoinGame", "starcraft2.SC2.controller.join_game", "s2clientprotocol.sc2api_pb2.LocalMap", "starcraft2.SC2._run_config.map_data"], "methods", ["None"], ["", "", "def", "_launch", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "_run_config", "=", "run_configs", ".", "get", "(", ")", "\n", "self", ".", "_map", "=", "maps", ".", "get", "(", "self", ".", "map_name", ")", "\n", "\n", "# Setting up the interface", "\n", "self", ".", "interface", "=", "sc_pb", ".", "InterfaceOptions", "(", "\n", "raw", "=", "True", ",", "# raw, feature-level data", "\n", "score", "=", "True", ")", "\n", "\n", "self", ".", "_sc2_proc", "=", "self", ".", "_run_config", ".", "start", "(", "version", "=", "self", ".", "game_version", ",", "window_size", "=", "self", ".", "window_size", ")", "\n", "self", ".", "controller", "=", "self", ".", "_sc2_proc", ".", "controller", "\n", "\n", "# Create the game.", "\n", "create", "=", "sc_pb", ".", "RequestCreateGame", "(", "realtime", "=", "False", ",", "\n", "random_seed", "=", "self", ".", "seed", ",", "\n", "local_map", "=", "sc_pb", ".", "LocalMap", "(", "map_path", "=", "self", ".", "_map", ".", "path", ",", "map_data", "=", "self", ".", "_run_config", ".", "map_data", "(", "self", ".", "_map", ".", "path", ")", ")", ")", "\n", "create", ".", "player_setup", ".", "add", "(", "type", "=", "sc_pb", ".", "Participant", ")", "\n", "create", ".", "player_setup", ".", "add", "(", "type", "=", "sc_pb", ".", "Computer", ",", "race", "=", "races", "[", "self", ".", "_bot_race", "]", ",", "\n", "difficulty", "=", "difficulties", "[", "self", ".", "difficulty", "]", ")", "\n", "self", ".", "controller", ".", "create_game", "(", "create", ")", "\n", "\n", "join", "=", "sc_pb", ".", "RequestJoinGame", "(", "race", "=", "races", "[", "self", ".", "_agent_race", "]", ",", "options", "=", "self", ".", "interface", ")", "\n", "self", ".", "controller", ".", "join_game", "(", "join", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.save_replay": [[253, 257], ["starcraft2.SC2._run_config.save_replay", "print", "starcraft2.SC2.controller.save_replay"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.save_replay", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.save_replay"], ["", "def", "save_replay", "(", "self", ")", ":", "\n", "        ", "prefix", "=", "self", ".", "save_replay_prefix", "or", "self", ".", "map_name", "\n", "replay_path", "=", "self", ".", "_run_config", ".", "save_replay", "(", "self", ".", "controller", ".", "save_replay", "(", ")", ",", "replay_dir", "=", "''", ",", "prefix", "=", "prefix", ")", "\n", "print", "(", "\"Replay saved at: %s\"", "%", "replay_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.reset": [[258, 293], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "print", "starcraft2.SC2._restart", "starcraft2.SC2.controller.observe", "starcraft2.SC2.init_units", "starcraft2.SC2.get_obs", "starcraft2.SC2.get_state", "starcraft2.SC2.full_restart", "starcraft2.SC2.full_restart"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2._restart", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.init_units", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_state", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.full_restart", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.full_restart"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"Start a new episode.\"\"\"", "\n", "\n", "if", "self", ".", "debug_inputs", "or", "self", ".", "debug_rewards", ":", "\n", "            ", "print", "(", "'------------>> RESET <<------------'", ")", "\n", "\n", "", "self", ".", "_episode_steps", "=", "0", "\n", "if", "self", ".", "_episode_count", ">", "0", ":", "\n", "# No need to restart for the first episode.", "\n", "            ", "self", ".", "_restart", "(", ")", "\n", "\n", "", "self", ".", "_episode_count", "+=", "1", "\n", "\n", "if", "self", ".", "heuristic", ":", "\n", "            ", "self", ".", "heuristic_targets", "=", "[", "0", "]", "*", "self", ".", "n_agents", "\n", "\n", "# Information kept for counting the reward", "\n", "", "self", ".", "death_tracker_ally", "=", "np", ".", "zeros", "(", "self", ".", "n_agents", ")", "\n", "self", ".", "death_tracker_enemy", "=", "np", ".", "zeros", "(", "self", ".", "n_enemies", ")", "\n", "self", ".", "previous_agent_units", "=", "None", "\n", "self", ".", "previous_enemy_units", "=", "None", "\n", "self", ".", "win_counted", "=", "False", "\n", "self", ".", "defeat_counted", "=", "False", "\n", "\n", "self", ".", "last_action", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_agents", ",", "self", ".", "n_actions", ")", ")", "\n", "\n", "try", ":", "\n", "            ", "self", ".", "_obs", "=", "self", ".", "controller", ".", "observe", "(", ")", "\n", "self", ".", "init_units", "(", ")", "\n", "", "except", "protocol", ".", "ProtocolError", ":", "\n", "            ", "self", ".", "full_restart", "(", ")", "\n", "", "except", "protocol", ".", "ConnectionError", ":", "\n", "            ", "self", ".", "full_restart", "(", ")", "\n", "\n", "", "return", "self", ".", "get_obs", "(", ")", ",", "self", ".", "get_state", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2._restart": [[294, 304], ["starcraft2.SC2.kill_all_units", "starcraft2.SC2.controller.step", "starcraft2.SC2.full_restart", "starcraft2.SC2.full_restart"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.kill_all_units", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.full_restart", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.full_restart"], ["", "def", "_restart", "(", "self", ")", ":", "\n", "\n", "# Kill and restore all units", "\n", "        ", "try", ":", "\n", "            ", "self", ".", "kill_all_units", "(", ")", "\n", "self", ".", "controller", ".", "step", "(", "2", ")", "\n", "", "except", "protocol", ".", "ProtocolError", ":", "\n", "            ", "self", ".", "full_restart", "(", ")", "\n", "", "except", "protocol", ".", "ConnectionError", ":", "\n", "            ", "self", ".", "full_restart", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.full_restart": [[305, 310], ["starcraft2.SC2._sc2_proc.close", "starcraft2.SC2._launch"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.close", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2._launch"], ["", "", "def", "full_restart", "(", "self", ")", ":", "\n", "# End episode and restart a new one", "\n", "        ", "self", ".", "_sc2_proc", ".", "close", "(", ")", "\n", "self", ".", "_launch", "(", ")", "\n", "self", ".", "force_restarts", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.one_hot": [[311, 315], ["numpy.array().reshape", "numpy.eye", "numpy.array"], "methods", ["None"], ["", "def", "one_hot", "(", "self", ",", "data", ",", "nb_classes", ")", ":", "\n", "        ", "\"\"\"Convert an iterable of indices to one-hot encoded labels.\"\"\"", "\n", "targets", "=", "np", ".", "array", "(", "data", ")", ".", "reshape", "(", "-", "1", ")", "\n", "return", "np", ".", "eye", "(", "nb_classes", ")", "[", "targets", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step": [[316, 418], ["starcraft2.SC2.one_hot", "enumerate", "s2clientprotocol.sc2api_pb2.RequestAction", "starcraft2.SC2.update_units", "starcraft2.SC2.reward_battle", "int", "starcraft2.SC2.controller.actions", "starcraft2.SC2.controller.step", "starcraft2.SC2.controller.observe", "print", "starcraft2.SC2.get_agent_action", "starcraft2.SC2.get_agent_action_heuristic", "sc_actions.append", "starcraft2.SC2.full_restart", "starcraft2.SC2.full_restart", "len", "starcraft2.SC2.zealot_tags.index", "starcraft2.SC2.enemies.items"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.one_hot", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.update_units", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.reward_battle", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_agent_action", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_agent_action_heuristic", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.full_restart", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.full_restart"], ["", "def", "step", "(", "self", ",", "actions", ")", ":", "\n", "\n", "        ", "actions", "=", "[", "int", "(", "a", ")", "for", "a", "in", "actions", "]", "\n", "\n", "self", ".", "last_action", "=", "self", ".", "one_hot", "(", "actions", ",", "self", ".", "n_actions", ")", "\n", "\n", "# Collect individual actions", "\n", "sc_actions", "=", "[", "]", "\n", "for", "a_id", ",", "action", "in", "enumerate", "(", "actions", ")", ":", "\n", "            ", "if", "not", "self", ".", "heuristic", ":", "\n", "                ", "agent_action", "=", "self", ".", "get_agent_action", "(", "a_id", ",", "action", ")", "\n", "", "else", ":", "\n", "                ", "agent_action", "=", "self", ".", "get_agent_action_heuristic", "(", "a_id", ",", "action", ")", "\n", "", "if", "agent_action", ":", "\n", "              ", "sc_actions", ".", "append", "(", "agent_action", ")", "\n", "# Send action request", "\n", "", "", "req_actions", "=", "sc_pb", ".", "RequestAction", "(", "actions", "=", "sc_actions", ")", "\n", "\n", "try", ":", "\n", "            ", "res_actions", "=", "self", ".", "controller", ".", "actions", "(", "req_actions", ")", "\n", "# Make step in SC2, i.e. apply actions", "\n", "self", ".", "controller", ".", "step", "(", "self", ".", "_step_mul", ")", "\n", "# Observe here so that we know if the episode is over.", "\n", "self", ".", "_obs", "=", "self", ".", "controller", ".", "observe", "(", ")", "\n", "", "except", "protocol", ".", "ProtocolError", ":", "\n", "            ", "self", ".", "full_restart", "(", ")", "\n", "return", "0", ",", "True", ",", "{", "}", "\n", "", "except", "protocol", ".", "ConnectionError", ":", "\n", "            ", "self", ".", "full_restart", "(", ")", "\n", "return", "0", ",", "True", ",", "{", "}", "\n", "\n", "", "self", ".", "_total_steps", "+=", "1", "\n", "self", ".", "_episode_steps", "+=", "1", "\n", "\n", "# Update what we know about units", "\n", "end_game", "=", "self", ".", "update_units", "(", ")", "\n", "\n", "terminated", "=", "False", "\n", "reward", "=", "self", ".", "reward_battle", "(", ")", "\n", "info", "=", "{", "\"battle_won\"", ":", "False", "}", "\n", "\n", "if", "self", ".", "map_type", "==", "'2step'", ":", "\n", "            ", "dead_zealots", "=", "[", "unit", ".", "tag", "for", "_", ",", "unit", "in", "self", ".", "enemies", ".", "items", "(", ")", "if", "unit", ".", "unit_type", "==", "73", "and", "unit", ".", "health", "==", "0", "]", "\n", "if", "len", "(", "dead_zealots", ")", ">", "0", ":", "\n", "                ", "end_game", "=", "1", "\n", "tag", "=", "dead_zealots", "[", "0", "]", "\n", "index", "=", "self", ".", "zealot_tags", ".", "index", "(", "tag", ")", "\n", "if", "index", "==", "0", ":", "\n", "                    ", "reward", "+=", "self", ".", "reward_win", "\n", "\n", "", "", "", "elif", "self", ".", "map_type", "==", "'3step'", ":", "\n", "            ", "if", "self", ".", "map_name", "==", "'3step'", "and", "self", ".", "agents", "[", "0", "]", ".", "pos", ".", "y", "<", "20", "and", "self", ".", "agents", "[", "1", "]", ".", "pos", ".", "y", "<", "20", ":", "\n", "                ", "end_game", "=", "1", "\n", "x1", "=", "self", ".", "agents", "[", "0", "]", ".", "pos", ".", "x", "\n", "x2", "=", "self", ".", "agents", "[", "1", "]", ".", "pos", ".", "x", "\n", "\n", "if", "21", "<", "x1", "<", "34", "and", "21", "<", "x2", "<", "34", ":", "\n", "                    ", "reward", "+=", "0.2", "*", "self", ".", "max_reward", "\n", "\n", "", "", "if", "self", ".", "map_name", "==", "'4step'", "and", "self", ".", "agents", "[", "0", "]", ".", "pos", ".", "y", "<", "11", "and", "self", ".", "agents", "[", "1", "]", ".", "pos", ".", "y", "<", "11", ":", "\n", "                ", "end_game", "=", "1", "\n", "x1", "=", "self", ".", "agents", "[", "0", "]", ".", "pos", ".", "x", "\n", "x2", "=", "self", ".", "agents", "[", "1", "]", ".", "pos", ".", "x", "\n", "\n", "if", "20", "<", "x1", "<", "28", "and", "20", "<", "x2", "<", "28", ":", "\n", "                    ", "reward", "+=", "0.2", "*", "self", ".", "max_reward", "\n", "\n", "", "", "", "if", "end_game", "is", "not", "None", ":", "\n", "# Battle is over", "\n", "            ", "terminated", "=", "True", "\n", "self", ".", "battles_game", "+=", "1", "\n", "if", "end_game", "==", "1", "and", "not", "self", ".", "win_counted", ":", "\n", "                ", "self", ".", "battles_won", "+=", "1", "\n", "self", ".", "win_counted", "=", "True", "\n", "info", "[", "\"battle_won\"", "]", "=", "True", "\n", "if", "not", "self", ".", "reward_sparse", ":", "\n", "                    ", "reward", "+=", "self", ".", "reward_win", "\n", "", "else", ":", "\n", "                    ", "reward", "=", "1", "\n", "\n", "", "", "elif", "end_game", "==", "-", "1", "and", "not", "self", ".", "defeat_counted", ":", "\n", "                ", "self", ".", "defeat_counted", "=", "True", "\n", "if", "not", "self", ".", "reward_sparse", ":", "\n", "                    ", "reward", "+=", "self", ".", "reward_defeat", "\n", "", "else", ":", "\n", "                    ", "reward", "=", "-", "1", "\n", "\n", "", "", "", "elif", "self", ".", "episode_limit", ">", "0", "and", "self", ".", "_episode_steps", ">=", "self", ".", "episode_limit", ":", "\n", "# Episode limit reached", "\n", "            ", "terminated", "=", "True", "\n", "if", "self", ".", "continuing_episode", ":", "\n", "                ", "info", "[", "\"episode_limit\"", "]", "=", "True", "\n", "", "self", ".", "battles_game", "+=", "1", "\n", "self", ".", "timeouts", "+=", "1", "\n", "\n", "", "if", "self", ".", "debug_inputs", "or", "self", ".", "debug_rewards", ":", "\n", "            ", "print", "(", "\"Total Reward = %.f \\n ---------------------\"", "%", "reward", ")", "\n", "\n", "", "if", "self", ".", "reward_scale", ":", "\n", "            ", "reward", "/=", "(", "self", ".", "max_reward", "/", "self", ".", "reward_scale_rate", ")", "\n", "\n", "", "return", "reward", ",", "terminated", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_agent_action": [[419, 522], ["starcraft2.SC2.get_unit_by_id", "starcraft2.SC2.get_avail_agent_actions", "s2clientprotocol.sc2api_pb2.Action", "print", "s2clientprotocol.raw_pb2.ActionRawUnitCommand", "s2clientprotocol.raw_pb2.ActionRaw", "print", "s2clientprotocol.raw_pb2.ActionRawUnitCommand", "print", "s2clientprotocol.raw_pb2.ActionRawUnitCommand", "s2clientprotocol.common_pb2.Point2D", "print", "s2clientprotocol.raw_pb2.ActionRawUnitCommand", "s2clientprotocol.common_pb2.Point2D", "print", "s2clientprotocol.raw_pb2.ActionRawUnitCommand", "s2clientprotocol.common_pb2.Point2D", "print", "s2clientprotocol.raw_pb2.ActionRawUnitCommand", "s2clientprotocol.common_pb2.Point2D", "print", "s2clientprotocol.raw_pb2.ActionRawUnitCommand", "s2clientprotocol.raw_pb2.ActionRawUnitCommand", "print", "print"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_by_id", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_agent_actions"], ["", "def", "get_agent_action", "(", "self", ",", "a_id", ",", "action", ")", ":", "\n", "\n", "        ", "unit", "=", "self", ".", "get_unit_by_id", "(", "a_id", ")", "\n", "tag", "=", "unit", ".", "tag", "\n", "x", "=", "unit", ".", "pos", ".", "x", "\n", "y", "=", "unit", ".", "pos", ".", "y", "\n", "\n", "true_avail_actions", "=", "self", ".", "get_avail_agent_actions", "(", "a_id", ")", "\n", "if", "true_avail_actions", "[", "action", "]", "==", "0", ":", "\n", "            ", "action", "=", "1", "\n", "\n", "", "if", "action", "==", "0", ":", "\n", "# no-op (valid only when dead)", "\n", "            ", "assert", "unit", ".", "health", "==", "0", ",", "\"No-op chosen but the agent's unit is not dead\"", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "                ", "print", "(", "\"Agent %d: Dead\"", "%", "a_id", ")", "\n", "", "return", "None", "\n", "", "elif", "action", "==", "1", ":", "\n", "# stop", "\n", "            ", "cmd", "=", "r_pb", ".", "ActionRawUnitCommand", "(", "ability_id", "=", "action_stop_id", ",", "\n", "unit_tags", "=", "[", "tag", "]", ",", "\n", "queue_command", "=", "False", ")", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "                ", "print", "(", "\"Agent %d: Stop\"", "%", "a_id", ")", "\n", "\n", "", "", "elif", "action", "==", "2", ":", "\n", "# north", "\n", "            ", "cmd", "=", "r_pb", ".", "ActionRawUnitCommand", "(", "ability_id", "=", "action_move_id", ",", "\n", "target_world_space_pos", "=", "sc_common", ".", "Point2D", "(", "x", "=", "x", ",", "y", "=", "y", "+", "self", ".", "_move_amount", ")", ",", "\n", "unit_tags", "=", "[", "tag", "]", ",", "\n", "queue_command", "=", "False", ")", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "                ", "print", "(", "\"Agent %d: North\"", "%", "a_id", ")", "\n", "\n", "", "", "elif", "action", "==", "3", ":", "\n", "# south", "\n", "            ", "cmd", "=", "r_pb", ".", "ActionRawUnitCommand", "(", "ability_id", "=", "action_move_id", ",", "\n", "target_world_space_pos", "=", "sc_common", ".", "Point2D", "(", "x", "=", "x", ",", "y", "=", "y", "-", "self", ".", "_move_amount", ")", ",", "\n", "unit_tags", "=", "[", "tag", "]", ",", "\n", "queue_command", "=", "False", ")", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "                ", "print", "(", "\"Agent %d: South\"", "%", "a_id", ")", "\n", "\n", "", "", "elif", "action", "==", "4", ":", "\n", "# east", "\n", "            ", "cmd", "=", "r_pb", ".", "ActionRawUnitCommand", "(", "ability_id", "=", "action_move_id", ",", "\n", "target_world_space_pos", "=", "sc_common", ".", "Point2D", "(", "x", "=", "x", "+", "self", ".", "_move_amount", ",", "y", "=", "y", ")", ",", "\n", "unit_tags", "=", "[", "tag", "]", ",", "\n", "queue_command", "=", "False", ")", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "                ", "print", "(", "\"Agent %d: East\"", "%", "a_id", ")", "\n", "\n", "", "", "elif", "action", "==", "5", ":", "\n", "# west", "\n", "            ", "cmd", "=", "r_pb", ".", "ActionRawUnitCommand", "(", "ability_id", "=", "action_move_id", ",", "\n", "target_world_space_pos", "=", "sc_common", ".", "Point2D", "(", "x", "=", "x", "-", "self", ".", "_move_amount", ",", "y", "=", "y", ")", ",", "\n", "unit_tags", "=", "[", "tag", "]", ",", "\n", "queue_command", "=", "False", ")", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "                ", "print", "(", "\"Agent %d: West\"", "%", "a_id", ")", "\n", "\n", "", "", "elif", "self", ".", "map_type", "==", "'bunker'", "and", "action", "==", "6", ":", "\n", "# enter bunker", "\n", "            ", "cmd", "=", "r_pb", ".", "ActionRawUnitCommand", "(", "ability_id", "=", "action_enter_bunker_id", ",", "\n", "target_unit_tag", "=", "tag", ",", "\n", "unit_tags", "=", "[", "self", ".", "bunker", ".", "tag", "]", ",", "\n", "queue_command", "=", "False", ")", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "                ", "print", "(", "\"Agent %d: Enter Bunker\"", "%", "a_id", ")", "\n", "\n", "", "", "elif", "self", ".", "map_type", "==", "'bunker'", "and", "action", "==", "7", ":", "\n", "# leave bunker", "\n", "            ", "cmd", "=", "r_pb", ".", "ActionRawUnitCommand", "(", "ability_id", "=", "action_leave_bunker_id", ",", "\n", "unit_tags", "=", "[", "self", ".", "bunker", ".", "tag", "]", ",", "\n", "queue_command", "=", "False", ")", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "                ", "print", "(", "\"Agent %d: Leave Bunker\"", "%", "a_id", ")", "\n", "", "", "else", ":", "\n", "# attack/heal units that are in range", "\n", "            ", "target_id", "=", "action", "-", "self", ".", "n_actions_no_attack", "\n", "if", "self", ".", "map_type", "==", "'MMM'", "and", "unit", ".", "unit_type", "==", "self", ".", "medivac_id", ":", "\n", "                ", "target_unit", "=", "self", ".", "agents", "[", "target_id", "]", "\n", "action_id", "=", "action_heal_id", "\n", "", "elif", "self", ".", "map_type", "==", "'bunker'", "and", "tag", "==", "self", ".", "bunker_chief", ":", "\n", "# choose buner as tag", "\n", "                ", "tag", "=", "self", ".", "bunker", ".", "tag", "\n", "target_unit", "=", "self", ".", "enemies", "[", "target_id", "]", "\n", "action_id", "=", "action_attack_bunker_id", "\n", "", "else", ":", "\n", "                ", "target_unit", "=", "self", ".", "enemies", "[", "target_id", "]", "\n", "action_id", "=", "action_attack_id", "\n", "", "target_tag", "=", "target_unit", ".", "tag", "\n", "\n", "cmd", "=", "r_pb", ".", "ActionRawUnitCommand", "(", "ability_id", "=", "action_id", ",", "\n", "target_unit_tag", "=", "target_tag", ",", "\n", "unit_tags", "=", "[", "tag", "]", ",", "\n", "queue_command", "=", "False", ")", "\n", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "                ", "print", "(", "\"Agent %d attacks enemy # %d\"", "%", "(", "a_id", ",", "target_id", ")", ")", "\n", "\n", "", "", "sc_action", "=", "sc_pb", ".", "Action", "(", "action_raw", "=", "r_pb", ".", "ActionRaw", "(", "unit_command", "=", "cmd", ")", ")", "\n", "return", "sc_action", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_agent_action_heuristic": [[523, 538], ["starcraft2.SC2.get_unit_by_id", "s2clientprotocol.raw_pb2.ActionRawUnitCommand", "s2clientprotocol.sc2api_pb2.Action", "s2clientprotocol.raw_pb2.ActionRaw"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_by_id"], ["", "def", "get_agent_action_heuristic", "(", "self", ",", "a_id", ",", "action", ")", ":", "\n", "\n", "        ", "unit", "=", "self", ".", "get_unit_by_id", "(", "a_id", ")", "\n", "tag", "=", "unit", ".", "tag", "\n", "\n", "target_tag", "=", "self", ".", "enemies", "[", "self", ".", "heuristic_targets", "[", "a_id", "]", "]", ".", "tag", "\n", "action_id", "=", "action_attack_id", "\n", "\n", "cmd", "=", "r_pb", ".", "ActionRawUnitCommand", "(", "ability_id", "=", "action_id", ",", "\n", "target_unit_tag", "=", "target_tag", ",", "\n", "unit_tags", "=", "[", "tag", "]", ",", "\n", "queue_command", "=", "False", ")", "\n", "\n", "sc_action", "=", "sc_pb", ".", "Action", "(", "action_raw", "=", "r_pb", ".", "ActionRaw", "(", "unit_command", "=", "cmd", ")", ")", "\n", "return", "sc_action", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.reward_battle": [[539, 610], ["starcraft2.SC2.agents.items", "starcraft2.SC2.enemies.items", "range", "print", "range", "abs", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print"], "methods", ["None"], ["", "def", "reward_battle", "(", "self", ")", ":", "\n", "\n", "        ", "if", "self", ".", "reward_sparse", ":", "\n", "            ", "return", "0", "\n", "\n", "#  delta health - delta enemies + delta deaths where value:", "\n", "#   if enemy unit dies, add reward_death_value per dead unit", "\n", "#   if own unit dies, subtract reward_death_value per dead unit", "\n", "\n", "", "reward", "=", "0", "\n", "delta_deaths", "=", "0", "\n", "delta_ally", "=", "0", "\n", "delta_enemy", "=", "0", "\n", "\n", "neg_scale", "=", "self", ".", "reward_negative_scale", "\n", "\n", "if", "self", ".", "debug_rewards", ":", "\n", "            ", "for", "al_id", "in", "range", "(", "self", ".", "n_agents", ")", ":", "\n", "                ", "print", "(", "\"Agent %d: diff HP = %.f, diff shield = %.f\"", "%", "(", "al_id", ",", "self", ".", "previous_agent_units", "[", "al_id", "]", ".", "health", "-", "self", ".", "agents", "[", "al_id", "]", ".", "health", ",", "self", ".", "previous_agent_units", "[", "al_id", "]", ".", "shield", "-", "self", ".", "agents", "[", "al_id", "]", ".", "shield", ")", ")", "\n", "", "print", "(", "'---------------------'", ")", "\n", "for", "al_id", "in", "range", "(", "self", ".", "n_enemies", ")", ":", "\n", "                ", "print", "(", "\"Enemy %d: diff HP = %.f, diff shield = %.f\"", "%", "(", "al_id", ",", "self", ".", "previous_enemy_units", "[", "al_id", "]", ".", "health", "-", "self", ".", "enemies", "[", "al_id", "]", ".", "health", ",", "self", ".", "previous_enemy_units", "[", "al_id", "]", ".", "shield", "-", "self", ".", "enemies", "[", "al_id", "]", ".", "shield", ")", ")", "\n", "\n", "# update deaths", "\n", "", "", "for", "al_id", ",", "al_unit", "in", "self", ".", "agents", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "self", ".", "death_tracker_ally", "[", "al_id", "]", ":", "\n", "# did not die so far", "\n", "                ", "prev_health", "=", "self", ".", "previous_agent_units", "[", "al_id", "]", ".", "health", "+", "self", ".", "previous_agent_units", "[", "al_id", "]", ".", "shield", "\n", "if", "al_unit", ".", "health", "==", "0", ":", "\n", "# just died", "\n", "                    ", "self", ".", "death_tracker_ally", "[", "al_id", "]", "=", "1", "\n", "if", "not", "self", ".", "reward_only_positive", ":", "\n", "                        ", "delta_deaths", "-=", "self", ".", "reward_death_value", "*", "neg_scale", "\n", "", "delta_ally", "+=", "prev_health", "*", "neg_scale", "\n", "", "else", ":", "\n", "# still alive", "\n", "                    ", "delta_ally", "+=", "(", "prev_health", "-", "al_unit", ".", "health", "-", "al_unit", ".", "shield", ")", "*", "neg_scale", "\n", "\n", "", "", "", "for", "e_id", ",", "e_unit", "in", "self", ".", "enemies", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "self", ".", "death_tracker_enemy", "[", "e_id", "]", ":", "\n", "                ", "prev_health", "=", "self", ".", "previous_enemy_units", "[", "e_id", "]", ".", "health", "+", "self", ".", "previous_enemy_units", "[", "e_id", "]", ".", "shield", "\n", "if", "e_unit", ".", "health", "==", "0", ":", "\n", "                    ", "self", ".", "death_tracker_enemy", "[", "e_id", "]", "=", "1", "\n", "delta_deaths", "+=", "self", ".", "reward_death_value", "\n", "delta_enemy", "+=", "prev_health", "\n", "", "else", ":", "\n", "                    ", "delta_enemy", "+=", "prev_health", "-", "e_unit", ".", "health", "-", "e_unit", ".", "shield", "\n", "\n", "", "", "", "if", "self", ".", "reward_only_positive", ":", "\n", "\n", "            ", "if", "self", ".", "debug_rewards", ":", "\n", "                ", "print", "(", "\"--------------------------\"", ")", "\n", "print", "(", "\"Delta enemy: \"", ",", "delta_enemy", ")", "\n", "print", "(", "\"Delta deaths: \"", ",", "delta_deaths", ")", "\n", "print", "(", "\"Reward: \"", ",", "delta_enemy", "+", "delta_deaths", ")", "\n", "print", "(", "\"--------------------------\"", ")", "\n", "\n", "", "reward", "=", "delta_enemy", "+", "delta_deaths", "\n", "reward", "=", "abs", "(", "reward", ")", "# shield regeration", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "debug_rewards", ":", "\n", "                ", "print", "(", "\"--------------------------\"", ")", "\n", "print", "(", "\"Delta enemy: \"", ",", "delta_enemy", ")", "\n", "print", "(", "\"Delta deaths: \"", ",", "delta_deaths", ")", "\n", "print", "(", "\"Delta ally: \"", ",", "-", "delta_ally", ")", "\n", "print", "(", "\"Reward: \"", ",", "delta_enemy", "+", "delta_deaths", ")", "\n", "print", "(", "\"--------------------------\"", ")", "\n", "\n", "", "reward", "=", "delta_enemy", "+", "delta_deaths", "-", "delta_ally", "\n", "\n", "", "return", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_total_actions": [[611, 613], ["None"], "methods", ["None"], ["", "def", "get_total_actions", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.distance": [[614, 616], ["math.hypot"], "methods", ["None"], ["", "def", "distance", "(", "self", ",", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ":", "\n", "        ", "return", "math", ".", "hypot", "(", "x2", "-", "x1", ",", "y2", "-", "y1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_shoot_range": [[617, 619], ["None"], "methods", ["None"], ["", "def", "unit_shoot_range", "(", "self", ",", "agent_id", ")", ":", "\n", "        ", "return", "6", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_sight_range": [[620, 622], ["None"], "methods", ["None"], ["", "def", "unit_sight_range", "(", "self", ",", "agent_id", ")", ":", "\n", "        ", "return", "9", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_max_cooldown": [[623, 650], ["starcraft2.SC2.get_unit_by_id"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_by_id"], ["", "def", "unit_max_cooldown", "(", "self", ",", "agent_id", ")", ":", "\n", "\n", "        ", "if", "self", ".", "map_type", "in", "[", "'marines'", ",", "'bunker'", ",", "'2step'", ",", "'3step'", "]", ":", "\n", "            ", "return", "15", "\n", "\n", "", "unit", "=", "self", ".", "get_unit_by_id", "(", "agent_id", ")", "\n", "if", "unit", ".", "unit_type", "==", "self", ".", "marine_id", ":", "\n", "            ", "return", "15", "\n", "", "if", "unit", ".", "unit_type", "==", "self", ".", "marauder_id", ":", "\n", "            ", "return", "25", "\n", "", "if", "unit", ".", "unit_type", "==", "self", ".", "medivac_id", ":", "\n", "            ", "return", "200", "\n", "\n", "", "if", "unit", ".", "unit_type", "==", "self", ".", "stalker_id", ":", "\n", "            ", "return", "35", "\n", "", "if", "unit", ".", "unit_type", "==", "self", ".", "zealot_id", ":", "\n", "            ", "return", "22", "\n", "", "if", "unit", ".", "unit_type", "==", "self", ".", "colossus_id", ":", "\n", "            ", "return", "24", "\n", "", "if", "unit", ".", "unit_type", "==", "self", ".", "sentry_id", ":", "\n", "            ", "return", "13", "\n", "", "if", "unit", ".", "unit_type", "==", "self", ".", "hydralisk_id", ":", "\n", "            ", "return", "10", "\n", "", "if", "unit", ".", "unit_type", "==", "self", ".", "zergling_id", ":", "\n", "            ", "return", "11", "\n", "", "if", "unit", ".", "unit_type", "==", "self", ".", "baneling_id", ":", "\n", "            ", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_max_shield": [[651, 662], ["None"], "methods", ["None"], ["", "", "def", "unit_max_shield", "(", "self", ",", "unit", ")", ":", "\n", "\n", "        ", "if", "unit", ".", "unit_type", "==", "74", "or", "unit", ".", "unit_type", "==", "self", ".", "stalker_id", ":", "# Protoss's Stalker", "\n", "            ", "return", "80", "\n", "", "if", "unit", ".", "unit_type", "==", "73", "or", "unit", ".", "unit_type", "==", "self", ".", "zealot_id", ":", "# Protoss's Zaelot", "\n", "            ", "return", "50", "\n", "", "if", "unit", ".", "unit_type", "==", "77", "or", "unit", ".", "unit_type", "==", "self", ".", "sentry_id", ":", "# Protoss's Sentry", "\n", "            ", "return", "40", "\n", "", "if", "unit", ".", "unit_type", "==", "4", "or", "unit", ".", "unit_type", "==", "self", ".", "colossus_id", ":", "# Protoss's Colossus", "\n", "            ", "return", "150", "\n", "", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.can_move": [[663, 680], ["starcraft2.SC2.check_bounds", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.check_bounds"], ["", "def", "can_move", "(", "self", ",", "unit", ",", "direction", ")", ":", "\n", "\n", "        ", "m", "=", "self", ".", "_move_amount", "/", "2", "\n", "\n", "if", "direction", "==", "0", ":", "# north", "\n", "            ", "x", ",", "y", "=", "int", "(", "unit", ".", "pos", ".", "x", ")", ",", "int", "(", "unit", ".", "pos", ".", "y", "+", "m", ")", "\n", "", "elif", "direction", "==", "1", ":", "# south", "\n", "            ", "x", ",", "y", "=", "int", "(", "unit", ".", "pos", ".", "x", ")", ",", "int", "(", "unit", ".", "pos", ".", "y", "-", "m", ")", "\n", "", "elif", "direction", "==", "2", ":", "# east", "\n", "            ", "x", ",", "y", "=", "int", "(", "unit", ".", "pos", ".", "x", "+", "m", ")", ",", "int", "(", "unit", ".", "pos", ".", "y", ")", "\n", "", "else", ":", "# west", "\n", "            ", "x", ",", "y", "=", "int", "(", "unit", ".", "pos", ".", "x", "-", "m", ")", ",", "int", "(", "unit", ".", "pos", ".", "y", ")", "\n", "\n", "", "if", "self", ".", "check_bounds", "(", "x", ",", "y", ")", "and", "self", ".", "pathing_grid", "[", "x", ",", "y", "]", ":", "\n", "            ", "return", "True", "\n", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.circle_grid_coords": [[681, 694], ["int", "int", "range", "int", "range", "math.sqrt", "points.append", "abs"], "methods", ["None"], ["", "def", "circle_grid_coords", "(", "self", ",", "unit", ",", "radius", ")", ":", "\n", "# Generates coordinates in grid that lie within a circle", "\n", "\n", "        ", "r", "=", "radius", "\n", "x_floor", "=", "int", "(", "unit", ".", "pos", ".", "x", ")", "\n", "y_floor", "=", "int", "(", "unit", ".", "pos", ".", "y", ")", "\n", "\n", "points", "=", "[", "]", "\n", "for", "x", "in", "range", "(", "-", "r", ",", "r", "+", "1", ")", ":", "\n", "            ", "Y", "=", "int", "(", "math", ".", "sqrt", "(", "abs", "(", "r", "*", "r", "-", "x", "*", "x", ")", ")", ")", "# bound for y given x", "\n", "for", "y", "in", "range", "(", "-", "Y", ",", "+", "Y", "+", "1", ")", ":", "\n", "                ", "points", ".", "append", "(", "(", "x_floor", "+", "x", ",", "y_floor", "+", "y", ")", ")", "\n", "", "", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_surrounding_points": [[695, 713], ["int", "int", "points.append"], "methods", ["None"], ["", "def", "get_surrounding_points", "(", "self", ",", "unit", ",", "include_self", "=", "False", ")", ":", "\n", "\n", "        ", "x", "=", "int", "(", "unit", ".", "pos", ".", "x", ")", "\n", "y", "=", "int", "(", "unit", ".", "pos", ".", "y", ")", "\n", "\n", "ma", "=", "self", ".", "_move_amount", "\n", "\n", "points", "=", "[", "\n", "(", "x", ",", "y", "+", "2", "*", "ma", ")", ",", "(", "x", ",", "y", "-", "2", "*", "ma", ")", ",", "\n", "(", "x", "+", "2", "*", "ma", ",", "y", ")", ",", "(", "x", "-", "2", "*", "ma", ",", "y", ")", ",", "\n", "(", "x", "+", "ma", ",", "y", "+", "ma", ")", ",", "(", "x", "-", "ma", ",", "y", "-", "ma", ")", ",", "\n", "(", "x", "+", "ma", ",", "y", "-", "ma", ")", ",", "(", "x", "-", "ma", ",", "y", "+", "ma", ")", "\n", "]", "\n", "\n", "if", "include_self", ":", "\n", "            ", "points", ".", "append", "(", "(", "x", ",", "y", ")", ")", "\n", "\n", "", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.check_bounds": [[714, 716], ["None"], "methods", ["None"], ["", "def", "check_bounds", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "return", "x", ">=", "0", "and", "y", ">=", "0", "and", "x", "<", "self", ".", "map_x", "and", "y", "<", "self", ".", "map_y", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_surrounding_pathing": [[717, 722], ["starcraft2.SC2.get_surrounding_points", "starcraft2.SC2.check_bounds"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_surrounding_points", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.check_bounds"], ["", "def", "get_surrounding_pathing", "(", "self", ",", "unit", ")", ":", "\n", "\n", "        ", "points", "=", "self", ".", "get_surrounding_points", "(", "unit", ",", "include_self", "=", "False", ")", "\n", "vals", "=", "[", "self", ".", "pathing_grid", "[", "x", ",", "y", "]", "/", "255", "if", "self", ".", "check_bounds", "(", "x", ",", "y", ")", "else", "1", "for", "x", ",", "y", "in", "points", "]", "\n", "return", "vals", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_surrounding_height": [[723, 728], ["starcraft2.SC2.get_surrounding_points", "starcraft2.SC2.check_bounds"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_surrounding_points", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.check_bounds"], ["", "def", "get_surrounding_height", "(", "self", ",", "unit", ")", ":", "\n", "\n", "        ", "points", "=", "self", ".", "get_surrounding_points", "(", "unit", ",", "include_self", "=", "True", ")", "\n", "vals", "=", "[", "self", ".", "terrain_height", "[", "x", ",", "y", "]", "/", "255", "if", "self", ".", "check_bounds", "(", "x", ",", "y", ")", "else", "1", "for", "x", ",", "y", "in", "points", "]", "\n", "return", "vals", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs_agent": [[729, 899], ["starcraft2.SC2.get_unit_by_id", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.concatenate", "starcraft2.SC2.unit_sight_range", "starcraft2.SC2.get_avail_agent_actions", "range", "starcraft2.SC2.enemies.items", "enumerate", "print", "print", "print", "print", "print", "print", "print", "print", "starcraft2.SC2.get_surrounding_pathing", "starcraft2.SC2.get_surrounding_height", "starcraft2.SC2.distance", "starcraft2.SC2.get_unit_by_id", "starcraft2.SC2.distance", "starcraft2.SC2.get_unit_type_id", "numpy.zeros.flatten", "numpy.zeros.flatten", "numpy.zeros.flatten", "numpy.zeros.flatten", "starcraft2.SC2.get_avail_agent_actions", "range", "starcraft2.SC2.unit_max_shield", "starcraft2.SC2.distance", "starcraft2.SC2.get_unit_type_id", "starcraft2.SC2.get_unit_type_id", "starcraft2.SC2.unit_max_shield", "starcraft2.SC2.unit_max_shield"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_by_id", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_sight_range", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_agent_actions", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_surrounding_pathing", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_surrounding_height", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.distance", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_by_id", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.distance", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_type_id", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_agent_actions", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_max_shield", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.distance", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_type_id", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_type_id", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_max_shield", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_max_shield"], ["", "def", "get_obs_agent", "(", "self", ",", "agent_id", ")", ":", "\n", "\n", "        ", "unit", "=", "self", ".", "get_unit_by_id", "(", "agent_id", ")", "\n", "\n", "nf_al", "=", "4", "+", "self", ".", "unit_type_bits", "\n", "nf_en", "=", "4", "+", "self", ".", "unit_type_bits", "\n", "\n", "if", "self", ".", "obs_all_health", ":", "\n", "            ", "nf_al", "+=", "1", "+", "self", ".", "shield_bits_ally", "\n", "nf_en", "+=", "1", "+", "self", ".", "shield_bits_enemy", "\n", "\n", "", "if", "self", ".", "obs_last_action", ":", "\n", "            ", "nf_al", "+=", "self", ".", "n_actions", "\n", "\n", "", "nf_own", "=", "self", ".", "unit_type_bits", "\n", "if", "self", ".", "obs_own_health", ":", "\n", "            ", "nf_own", "+=", "1", "+", "self", ".", "shield_bits_ally", "\n", "", "if", "self", ".", "map_type", "==", "'bunker'", ":", "\n", "            ", "nf_own", "+=", "7", "# accessible + location + location(3 bits) + inside + chief", "\n", "\n", "", "move_feats_len", "=", "self", ".", "n_actions_move", "\n", "if", "self", ".", "obs_pathing_grid", ":", "\n", "            ", "move_feats_len", "+=", "self", ".", "n_obs_pathing", "\n", "", "if", "self", ".", "obs_terrain_height", ":", "\n", "            ", "move_feats_len", "+=", "self", ".", "n_obs_height", "\n", "", "if", "'2_corridors'", "in", "self", ".", "map_name", ":", "\n", "            ", "move_feats_len", "+=", "1", "\n", "\n", "", "move_feats", "=", "np", ".", "zeros", "(", "move_feats_len", ",", "dtype", "=", "np", ".", "float32", ")", "# exclude no-op & stop", "\n", "enemy_feats", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_enemies", ",", "nf_en", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "ally_feats", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_agents", "-", "1", ",", "nf_al", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "own_feats", "=", "np", ".", "zeros", "(", "nf_own", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "if", "unit", ".", "health", ">", "0", ":", "# otherwise dead, return all zeros", "\n", "            ", "x", "=", "unit", ".", "pos", ".", "x", "\n", "y", "=", "unit", ".", "pos", ".", "y", "\n", "sight_range", "=", "self", ".", "unit_sight_range", "(", "agent_id", ")", "\n", "\n", "# Movement features", "\n", "avail_actions", "=", "self", ".", "get_avail_agent_actions", "(", "agent_id", ")", "\n", "for", "m", "in", "range", "(", "self", ".", "n_actions_move", ")", ":", "\n", "                ", "move_feats", "[", "m", "]", "=", "avail_actions", "[", "m", "+", "2", "]", "\n", "\n", "", "ind", "=", "self", ".", "n_actions_move", "\n", "\n", "if", "self", ".", "obs_pathing_grid", ":", "\n", "                ", "move_feats", "[", "ind", ":", "ind", "+", "self", ".", "n_obs_pathing", "]", "=", "self", ".", "get_surrounding_pathing", "(", "unit", ")", "\n", "ind", "+=", "self", ".", "n_obs_pathing", "\n", "\n", "", "if", "self", ".", "obs_terrain_height", ":", "\n", "                ", "move_feats", "[", "ind", ":", "]", "=", "self", ".", "get_surrounding_height", "(", "unit", ")", "\n", "\n", "", "if", "'2_corridors'", "in", "self", ".", "map_name", ":", "\n", "                ", "move_feats", "[", "-", "1", "]", "=", "self", ".", "corridor", "\n", "\n", "# Enemy features", "\n", "", "for", "e_id", ",", "e_unit", "in", "self", ".", "enemies", ".", "items", "(", ")", ":", "\n", "                ", "e_x", "=", "e_unit", ".", "pos", ".", "x", "\n", "e_y", "=", "e_unit", ".", "pos", ".", "y", "\n", "dist", "=", "self", ".", "distance", "(", "x", ",", "y", ",", "e_x", ",", "e_y", ")", "\n", "\n", "if", "dist", "<", "sight_range", "and", "e_unit", ".", "health", ">", "0", ":", "# visible and alive", "\n", "# Sight range > shoot range", "\n", "                    ", "enemy_feats", "[", "e_id", ",", "0", "]", "=", "avail_actions", "[", "self", ".", "n_actions_no_attack", "+", "e_id", "]", "# available", "\n", "enemy_feats", "[", "e_id", ",", "1", "]", "=", "dist", "/", "sight_range", "# distance", "\n", "enemy_feats", "[", "e_id", ",", "2", "]", "=", "(", "e_x", "-", "x", ")", "/", "sight_range", "# relative X", "\n", "enemy_feats", "[", "e_id", ",", "3", "]", "=", "(", "e_y", "-", "y", ")", "/", "sight_range", "# relative Y", "\n", "\n", "ind", "=", "4", "\n", "if", "self", ".", "obs_all_health", ":", "\n", "                        ", "enemy_feats", "[", "e_id", ",", "ind", "]", "=", "e_unit", ".", "health", "/", "e_unit", ".", "health_max", "# health", "\n", "ind", "+=", "1", "\n", "if", "self", ".", "shield_bits_enemy", ">", "0", ":", "\n", "                            ", "max_shield", "=", "self", ".", "unit_max_shield", "(", "e_unit", ")", "\n", "enemy_feats", "[", "e_id", ",", "ind", "]", "=", "e_unit", ".", "shield", "/", "max_shield", "# shield", "\n", "ind", "+=", "1", "\n", "\n", "", "", "if", "self", ".", "unit_type_bits", ">", "0", ":", "\n", "                        ", "type_id", "=", "self", ".", "get_unit_type_id", "(", "e_unit", ",", "False", ")", "\n", "enemy_feats", "[", "e_id", ",", "ind", "+", "type_id", "]", "=", "1", "# unit type", "\n", "\n", "# Ally features", "\n", "", "", "", "al_ids", "=", "[", "al_id", "for", "al_id", "in", "range", "(", "self", ".", "n_agents", ")", "if", "al_id", "!=", "agent_id", "]", "\n", "for", "i", ",", "al_id", "in", "enumerate", "(", "al_ids", ")", ":", "\n", "\n", "# if unit is not in bunker but the ally is", "\n", "                ", "if", "(", "self", ".", "map_type", "==", "'bunker'", "and", "\n", "unit", ".", "tag", "not", "in", "self", ".", "bunker_passengers", "and", "\n", "al_id", "in", "self", ".", "bunker_passengers", ")", ":", "\n", "                    ", "continue", "# can't see", "\n", "\n", "", "al_unit", "=", "self", ".", "get_unit_by_id", "(", "al_id", ")", "\n", "al_x", "=", "al_unit", ".", "pos", ".", "x", "\n", "al_y", "=", "al_unit", ".", "pos", ".", "y", "\n", "dist", "=", "self", ".", "distance", "(", "x", ",", "y", ",", "al_x", ",", "al_y", ")", "\n", "\n", "if", "dist", "<", "sight_range", "and", "al_unit", ".", "health", ">", "0", ":", "# visible and alive", "\n", "                    ", "ally_feats", "[", "i", ",", "0", "]", "=", "1", "# visible", "\n", "ally_feats", "[", "i", ",", "1", "]", "=", "dist", "/", "sight_range", "# distance", "\n", "ally_feats", "[", "i", ",", "2", "]", "=", "(", "al_x", "-", "x", ")", "/", "sight_range", "# relative X", "\n", "ally_feats", "[", "i", ",", "3", "]", "=", "(", "al_y", "-", "y", ")", "/", "sight_range", "# relative Y", "\n", "\n", "ind", "=", "4", "\n", "if", "self", ".", "obs_all_health", ":", "\n", "                        ", "ally_feats", "[", "i", ",", "ind", "]", "=", "al_unit", ".", "health", "/", "al_unit", ".", "health_max", "# health", "\n", "ind", "+=", "1", "\n", "if", "self", ".", "shield_bits_ally", ">", "0", ":", "\n", "                            ", "max_shield", "=", "self", ".", "unit_max_shield", "(", "al_unit", ")", "\n", "ally_feats", "[", "i", ",", "ind", "]", "=", "al_unit", ".", "shield", "/", "max_shield", "# shield", "\n", "ind", "+=", "1", "\n", "\n", "", "", "if", "self", ".", "unit_type_bits", ">", "0", ":", "\n", "                        ", "type_id", "=", "self", ".", "get_unit_type_id", "(", "al_unit", ",", "True", ")", "\n", "ally_feats", "[", "i", ",", "ind", "+", "type_id", "]", "=", "1", "\n", "ind", "+=", "self", ".", "unit_type_bits", "\n", "\n", "", "if", "self", ".", "obs_last_action", ":", "\n", "                        ", "ally_feats", "[", "i", ",", "ind", ":", "]", "=", "self", ".", "last_action", "[", "al_id", "]", "\n", "\n", "# Own features", "\n", "", "", "", "ind", "=", "0", "\n", "if", "self", ".", "obs_own_health", ":", "\n", "                ", "own_feats", "[", "ind", "]", "=", "unit", ".", "health", "/", "unit", ".", "health_max", "\n", "ind", "+=", "1", "\n", "if", "self", ".", "shield_bits_ally", ">", "0", ":", "\n", "                    ", "max_shield", "=", "self", ".", "unit_max_shield", "(", "unit", ")", "\n", "own_feats", "[", "ind", "]", "=", "unit", ".", "shield", "/", "max_shield", "\n", "ind", "+=", "1", "\n", "\n", "", "", "if", "self", ".", "unit_type_bits", ">", "0", ":", "\n", "                ", "type_id", "=", "self", ".", "get_unit_type_id", "(", "unit", ",", "True", ")", "\n", "own_feats", "[", "ind", "+", "type_id", "]", "=", "1", "\n", "ind", "+=", "self", ".", "unit_type_bits", "\n", "\n", "# For Bunker map", "\n", "", "if", "self", ".", "map_type", "==", "'bunker'", "and", "self", ".", "bunker_open", "==", "1", ":", "\n", "                ", "own_feats", "[", "ind", "]", "=", "avail_actions", "[", "6", "]", "# accessibility", "\n", "b_x", "=", "self", ".", "bunker", ".", "pos", ".", "x", "\n", "b_y", "=", "self", ".", "bunker", ".", "pos", ".", "y", "\n", "if", "own_feats", "[", "ind", "]", "==", "1", ":", "\n", "# Not in the bunker and can see it", "\n", "                    ", "own_feats", "[", "ind", "+", "1", "]", "=", "self", ".", "bunker", ".", "health", "/", "self", ".", "bunker", ".", "health_max", "\n", "dist", "=", "self", ".", "distance", "(", "x", ",", "y", ",", "b_x", ",", "b_y", ")", "\n", "own_feats", "[", "ind", "+", "2", "]", "=", "dist", "/", "sight_range", "\n", "own_feats", "[", "ind", "+", "3", "]", "=", "(", "b_x", "-", "x", ")", "/", "sight_range", "\n", "own_feats", "[", "ind", "+", "4", "]", "=", "(", "b_y", "-", "y", ")", "/", "sight_range", "\n", "", "elif", "unit", ".", "tag", "in", "self", ".", "bunker_passengers", ":", "\n", "# inside the bunker", "\n", "                    ", "own_feats", "[", "ind", "+", "1", "]", "=", "self", ".", "bunker", ".", "health", "/", "self", ".", "bunker", ".", "health_max", "\n", "own_feats", "[", "ind", "+", "5", "]", "=", "1", "\n", "if", "unit", ".", "tag", "==", "self", ".", "bunker_chief", ":", "\n", "# inside and cheaf", "\n", "                        ", "own_feats", "[", "ind", "+", "6", "]", "=", "1", "\n", "\n", "", "", "", "", "agent_obs", "=", "np", ".", "concatenate", "(", "(", "move_feats", ".", "flatten", "(", ")", ",", "\n", "enemy_feats", ".", "flatten", "(", ")", ",", "\n", "ally_feats", ".", "flatten", "(", ")", ",", "\n", "own_feats", ".", "flatten", "(", ")", ")", ")", "\n", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "            ", "print", "(", "\"***************************************\"", ")", "\n", "print", "(", "\"Agent: \"", ",", "agent_id", ")", "\n", "print", "(", "\"Available Actions\\n\"", ",", "self", ".", "get_avail_agent_actions", "(", "agent_id", ")", ")", "\n", "print", "(", "\"Move feats\\n\"", ",", "move_feats", ")", "\n", "print", "(", "\"Enemy feats\\n\"", ",", "enemy_feats", ")", "\n", "print", "(", "\"Ally feats\\n\"", ",", "ally_feats", ")", "\n", "print", "(", "\"Own feats\\n\"", ",", "own_feats", ")", "\n", "print", "(", "\"***************************************\"", ")", "\n", "\n", "", "return", "agent_obs", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs": [[900, 903], ["starcraft2.SC2.get_obs_agent", "range"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs_agent"], ["", "def", "get_obs", "(", "self", ")", ":", "\n", "        ", "agents_obs", "=", "[", "self", ".", "get_obs_agent", "(", "i", ")", "for", "i", "in", "range", "(", "self", ".", "n_agents", ")", "]", "\n", "return", "agents_obs", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_state": [[904, 994], ["numpy.zeros", "numpy.zeros", "starcraft2.SC2.agents.items", "starcraft2.SC2.enemies.items", "numpy.append", "numpy.append.astype", "numpy.concatenate().astype", "numpy.zeros.flatten", "numpy.zeros.flatten", "numpy.zeros", "numpy.append", "numpy.append", "print", "print", "print", "print", "print", "starcraft2.SC2.unit_max_cooldown", "starcraft2.SC2.agents.items", "numpy.zeros.flatten", "starcraft2.SC2.last_action.flatten", "print", "print", "print", "numpy.concatenate", "starcraft2.SC2.unit_max_shield", "starcraft2.SC2.get_unit_type_id", "starcraft2.SC2.unit_max_shield", "starcraft2.SC2.get_unit_type_id", "starcraft2.SC2.get_obs"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_max_cooldown", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_max_shield", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_type_id", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_max_shield", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_type_id", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "\n", "        ", "if", "self", ".", "obs_instead_of_state", ":", "\n", "            ", "obs_concat", "=", "np", ".", "concatenate", "(", "self", ".", "get_obs", "(", ")", ",", "axis", "=", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "obs_concat", "\n", "\n", "", "nf_al", "=", "4", "+", "self", ".", "shield_bits_ally", "+", "self", ".", "unit_type_bits", "\n", "nf_en", "=", "3", "+", "self", ".", "shield_bits_enemy", "+", "self", ".", "unit_type_bits", "\n", "\n", "ally_state", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_agents", ",", "nf_al", ")", ")", "\n", "enemy_state", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_enemies", ",", "nf_en", ")", ")", "\n", "\n", "center_x", "=", "self", ".", "map_x", "/", "2", "\n", "center_y", "=", "self", ".", "map_y", "/", "2", "\n", "\n", "for", "al_id", ",", "al_unit", "in", "self", ".", "agents", ".", "items", "(", ")", ":", "\n", "            ", "if", "al_unit", ".", "health", ">", "0", ":", "\n", "                ", "x", "=", "al_unit", ".", "pos", ".", "x", "\n", "y", "=", "al_unit", ".", "pos", ".", "y", "\n", "max_cd", "=", "self", ".", "unit_max_cooldown", "(", "al_id", ")", "\n", "\n", "ally_state", "[", "al_id", ",", "0", "]", "=", "al_unit", ".", "health", "/", "al_unit", ".", "health_max", "# health", "\n", "if", "self", ".", "map_type", "==", "'MMM'", "and", "al_unit", ".", "unit_type", "==", "self", ".", "medivac_id", ":", "\n", "                    ", "ally_state", "[", "al_id", ",", "1", "]", "=", "al_unit", ".", "energy", "/", "max_cd", "# energy", "\n", "", "else", ":", "\n", "                    ", "ally_state", "[", "al_id", ",", "1", "]", "=", "al_unit", ".", "weapon_cooldown", "/", "max_cd", "# cooldown", "\n", "", "ally_state", "[", "al_id", ",", "2", "]", "=", "(", "x", "-", "center_x", ")", "/", "self", ".", "max_distance_x", "# relative X", "\n", "ally_state", "[", "al_id", ",", "3", "]", "=", "(", "y", "-", "center_y", ")", "/", "self", ".", "max_distance_y", "# relative Y", "\n", "\n", "ind", "=", "4", "\n", "if", "self", ".", "shield_bits_ally", ">", "0", ":", "\n", "                    ", "max_shield", "=", "self", ".", "unit_max_shield", "(", "al_unit", ")", "\n", "ally_state", "[", "al_id", ",", "ind", "]", "=", "al_unit", ".", "shield", "/", "max_shield", "# shield", "\n", "ind", "+=", "1", "\n", "\n", "", "if", "self", ".", "unit_type_bits", ">", "0", ":", "\n", "                    ", "type_id", "=", "self", ".", "get_unit_type_id", "(", "al_unit", ",", "True", ")", "\n", "ally_state", "[", "al_id", ",", "ind", "+", "type_id", "]", "=", "1", "\n", "\n", "", "", "", "for", "e_id", ",", "e_unit", "in", "self", ".", "enemies", ".", "items", "(", ")", ":", "\n", "            ", "if", "e_unit", ".", "health", ">", "0", ":", "\n", "                ", "x", "=", "e_unit", ".", "pos", ".", "x", "\n", "y", "=", "e_unit", ".", "pos", ".", "y", "\n", "\n", "enemy_state", "[", "e_id", ",", "0", "]", "=", "e_unit", ".", "health", "/", "e_unit", ".", "health_max", "# health", "\n", "enemy_state", "[", "e_id", ",", "1", "]", "=", "(", "x", "-", "center_x", ")", "/", "self", ".", "max_distance_x", "# relative X", "\n", "enemy_state", "[", "e_id", ",", "2", "]", "=", "(", "y", "-", "center_y", ")", "/", "self", ".", "max_distance_y", "# relative Y", "\n", "\n", "ind", "=", "3", "\n", "if", "self", ".", "shield_bits_enemy", ">", "0", ":", "\n", "                    ", "max_shield", "=", "self", ".", "unit_max_shield", "(", "e_unit", ")", "\n", "enemy_state", "[", "e_id", ",", "ind", "]", "=", "e_unit", ".", "shield", "/", "max_shield", "# shield", "\n", "ind", "+=", "1", "\n", "\n", "", "if", "self", ".", "unit_type_bits", ">", "0", ":", "\n", "                    ", "type_id", "=", "self", ".", "get_unit_type_id", "(", "e_unit", ",", "False", ")", "\n", "enemy_state", "[", "e_id", ",", "ind", "+", "type_id", "]", "=", "1", "\n", "\n", "", "", "", "state", "=", "np", ".", "append", "(", "ally_state", ".", "flatten", "(", ")", ",", "enemy_state", ".", "flatten", "(", ")", ")", "\n", "\n", "if", "self", ".", "map_type", "==", "'bunker'", ":", "\n", "            ", "bunker_feats", "=", "np", ".", "zeros", "(", "1", "+", "2", "*", "self", ".", "n_agents", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "if", "self", ".", "bunker", ".", "health", ">", "0", ":", "\n", "                ", "bunker_feats", "[", "0", "]", "=", "self", ".", "bunker", ".", "health", "/", "self", ".", "bunker", ".", "health_max", "# health", "\n", "for", "al_id", ",", "unit", "in", "self", ".", "agents", ".", "items", "(", ")", ":", "\n", "                    ", "if", "unit", ".", "tag", "in", "self", ".", "bunker_passengers", ":", "\n", "# unit is inside the bunker", "\n", "                        ", "bunker_feats", "[", "1", "+", "al_id", "]", "=", "1", "\n", "if", "unit", ".", "tag", "==", "self", ".", "bunker_chief", ":", "\n", "# unit is the chief", "\n", "                            ", "bunker_feats", "[", "1", "+", "self", ".", "n_agents", "+", "al_id", "]", "=", "1", "\n", "", "", "", "", "state", "=", "np", ".", "append", "(", "state", ",", "bunker_feats", ".", "flatten", "(", ")", ")", "\n", "\n", "", "if", "self", ".", "state_last_action", ":", "\n", "            ", "state", "=", "np", ".", "append", "(", "state", ",", "self", ".", "last_action", ".", "flatten", "(", ")", ")", "\n", "\n", "", "state", "=", "state", ".", "astype", "(", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "            ", "print", "(", "\"------------ STATE ---------------\"", ")", "\n", "print", "(", "\"Ally state\\n\"", ",", "ally_state", ")", "\n", "print", "(", "\"Enemy state\\n\"", ",", "enemy_state", ")", "\n", "print", "(", "\"Last action\\n\"", ",", "self", ".", "last_action", ")", "\n", "if", "self", ".", "map_type", "==", "'bunker'", ":", "\n", "                ", "print", "(", "\"Bunker state\\n\"", ",", "bunker_feats", ")", "\n", "print", "(", "\"Bunker passangers\\n\"", ",", "self", ".", "bunker_passengers", ")", "\n", "print", "(", "\"Bunker chief\\n\"", ",", "self", ".", "bunker_chief", ")", "\n", "", "print", "(", "\"----------------------------------\"", ")", "\n", "\n", "", "return", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_type_id": [[995, 1024], ["None"], "methods", ["None"], ["", "def", "get_unit_type_id", "(", "self", ",", "unit", ",", "ally", ")", ":", "\n", "\n", "        ", "if", "ally", ":", "# we use new SC2 unit types", "\n", "            ", "type_id", "=", "unit", ".", "unit_type", "-", "self", ".", "min_unit_type", "\n", "\n", "", "else", ":", "# 'We use default SC2 unit types'", "\n", "\n", "            ", "if", "self", ".", "map_type", "==", "'sz'", ":", "\n", "# id(Stalker) = 74, id(Zealot) = 73", "\n", "                ", "type_id", "=", "unit", ".", "unit_type", "-", "73", "\n", "", "elif", "self", ".", "map_type", "==", "'ze_ba'", ":", "\n", "                ", "if", "unit", ".", "unit_type", "==", "9", ":", "\n", "                    ", "type_id", "=", "0", "\n", "", "else", ":", "\n", "                    ", "type_id", "=", "1", "\n", "", "", "elif", "self", ".", "map_type", "==", "'2step'", ":", "\n", "                ", "if", "unit", ".", "unit_type", "==", "73", ":", "\n", "                    ", "return", "0", "\n", "", "else", ":", "\n", "                    ", "return", "1", "\n", "", "", "elif", "self", ".", "map_type", "==", "'MMM'", ":", "\n", "                ", "if", "unit", ".", "unit_type", "==", "51", ":", "\n", "                    ", "type_id", "=", "0", "\n", "", "elif", "unit", ".", "unit_type", "==", "48", ":", "\n", "                    ", "type_id", "=", "1", "\n", "", "else", ":", "\n", "                    ", "type_id", "=", "2", "\n", "\n", "", "", "", "return", "type_id", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_state_size": [[1025, 1045], ["starcraft2.SC2.get_obs_size"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs_size"], ["", "def", "get_state_size", "(", "self", ")", ":", "\n", "\n", "        ", "if", "self", ".", "obs_instead_of_state", ":", "\n", "            ", "return", "self", ".", "get_obs_size", "(", ")", "*", "self", ".", "n_agents", "\n", "\n", "", "nf_al", "=", "4", "+", "self", ".", "shield_bits_ally", "+", "self", ".", "unit_type_bits", "\n", "nf_en", "=", "3", "+", "self", ".", "shield_bits_enemy", "+", "self", ".", "unit_type_bits", "\n", "\n", "enemy_state", "=", "self", ".", "n_enemies", "*", "nf_en", "\n", "ally_state", "=", "self", ".", "n_agents", "*", "nf_al", "\n", "\n", "size", "=", "enemy_state", "+", "ally_state", "\n", "\n", "if", "self", ".", "state_last_action", ":", "\n", "            ", "size", "+=", "self", ".", "n_agents", "*", "self", ".", "n_actions", "\n", "\n", "", "if", "self", ".", "map_type", "==", "'bunker'", ":", "\n", "            ", "size", "+=", "1", "+", "2", "*", "self", ".", "n_agents", "\n", "\n", "", "return", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_agent_actions": [[1046, 1102], ["starcraft2.SC2.get_unit_by_id", "starcraft2.SC2.can_move", "starcraft2.SC2.can_move", "starcraft2.SC2.can_move", "starcraft2.SC2.unit_shoot_range", "starcraft2.SC2.enemies.items", "starcraft2.SC2.distance", "starcraft2.SC2.can_move", "starcraft2.SC2.distance", "starcraft2.SC2.agents.items"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_by_id", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.can_move", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.can_move", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.can_move", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.unit_shoot_range", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.distance", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.can_move", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.distance"], ["", "def", "get_avail_agent_actions", "(", "self", ",", "agent_id", ")", ":", "\n", "        ", "unit", "=", "self", ".", "get_unit_by_id", "(", "agent_id", ")", "\n", "if", "unit", ".", "health", ">", "0", ":", "\n", "# cannot do no-op as alife", "\n", "            ", "avail_actions", "=", "[", "0", "]", "*", "self", ".", "n_actions", "\n", "\n", "# stop should be allowed", "\n", "avail_actions", "[", "1", "]", "=", "1", "\n", "\n", "if", "self", ".", "map_type", "==", "'bunker'", "and", "self", ".", "bunker_open", "==", "1", ":", "\n", "                ", "dist", "=", "self", ".", "distance", "(", "unit", ".", "pos", ".", "x", ",", "unit", ".", "pos", ".", "y", ",", "self", ".", "bunker", ".", "pos", ".", "x", ",", "self", ".", "bunker", ".", "pos", ".", "y", ")", "\n", "if", "self", ".", "bunker", ".", "health", ">", "0", "and", "unit", ".", "tag", "not", "in", "self", ".", "bunker_passengers", "and", "dist", "<=", "self", ".", "bunker_enter_range", ":", "\n", "# can see the bunker from outside", "\n", "                    ", "avail_actions", "[", "6", "]", "=", "1", "# can enter the bunker", "\n", "", "elif", "unit", ".", "tag", "in", "self", ".", "bunker_passengers", ":", "\n", "# in the bunker", "\n", "                    ", "avail_actions", "[", "7", "]", "=", "1", "# can leave the bunker", "\n", "if", "unit", ".", "tag", "!=", "self", ".", "bunker_chief", ":", "\n", "# not the chief", "\n", "                        ", "return", "avail_actions", "\n", "\n", "# see if we can move", "\n", "", "", "", "if", "self", ".", "can_move", "(", "unit", ",", "0", ")", "and", "self", ".", "map_type", "!=", "'3step'", ":", "\n", "                ", "avail_actions", "[", "2", "]", "=", "1", "\n", "", "if", "self", ".", "can_move", "(", "unit", ",", "1", ")", ":", "\n", "                ", "avail_actions", "[", "3", "]", "=", "1", "\n", "", "if", "self", ".", "can_move", "(", "unit", ",", "2", ")", ":", "\n", "                ", "avail_actions", "[", "4", "]", "=", "1", "\n", "", "if", "self", ".", "can_move", "(", "unit", ",", "3", ")", ":", "\n", "                ", "avail_actions", "[", "5", "]", "=", "1", "\n", "\n", "# can attack only those who is alife", "\n", "# and in the shooting range", "\n", "\n", "", "shoot_range", "=", "self", ".", "unit_shoot_range", "(", "agent_id", ")", "\n", "if", "self", ".", "map_type", "==", "'bunker'", "and", "self", ".", "bunker_open", "==", "1", "and", "unit", ".", "tag", "==", "self", ".", "bunker_chief", ":", "\n", "# inside the bunker and chief commander", "\n", "                ", "shoot_range", "+=", "3", "\n", "avail_actions", "[", "2", ":", "6", "]", "=", "[", "0", "]", "*", "4", "# can't move", "\n", "\n", "", "target_items", "=", "self", ".", "enemies", ".", "items", "(", ")", "\n", "if", "self", ".", "map_type", "==", "'MMM'", "and", "unit", ".", "unit_type", "==", "self", ".", "medivac_id", ":", "\n", "# Medivacs cannot heal themselves and other flying units", "\n", "                ", "target_items", "=", "[", "(", "t_id", ",", "t_unit", ")", "for", "(", "t_id", ",", "t_unit", ")", "in", "self", ".", "agents", ".", "items", "(", ")", "if", "t_unit", ".", "unit_type", "!=", "self", ".", "medivac_id", "]", "\n", "\n", "", "for", "t_id", ",", "t_unit", "in", "target_items", ":", "\n", "                ", "if", "t_unit", ".", "health", ">", "0", ":", "\n", "                    ", "dist", "=", "self", ".", "distance", "(", "unit", ".", "pos", ".", "x", ",", "unit", ".", "pos", ".", "y", ",", "t_unit", ".", "pos", ".", "x", ",", "t_unit", ".", "pos", ".", "y", ")", "\n", "if", "dist", "<=", "shoot_range", ":", "\n", "                        ", "avail_actions", "[", "t_id", "+", "self", ".", "n_actions_no_attack", "]", "=", "1", "\n", "\n", "", "", "", "return", "avail_actions", "\n", "\n", "", "else", ":", "\n", "# only no-op allowed", "\n", "            ", "return", "[", "1", "]", "+", "[", "0", "]", "*", "(", "self", ".", "n_actions", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unrestricted_actions": [[1103, 1113], ["starcraft2.SC2.get_unit_by_id"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_by_id"], ["", "", "def", "get_unrestricted_actions", "(", "self", ",", "agent_id", ")", ":", "\n", "        ", "unit", "=", "self", ".", "get_unit_by_id", "(", "agent_id", ")", "\n", "if", "unit", ".", "health", ">", "0", ":", "\n", "# cannot do no-op as alife", "\n", "            ", "avail_actions", "=", "[", "1", "]", "*", "self", ".", "n_actions", "\n", "avail_actions", "[", "0", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "avail_actions", "=", "[", "0", "]", "*", "self", ".", "n_actions", "\n", "avail_actions", "[", "0", "]", "=", "1", "\n", "", "return", "avail_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_actions": [[1114, 1126], ["range", "starcraft2.SC2.get_avail_agent_actions", "avail_actions.append", "starcraft2.SC2.get_unrestricted_actions", "avail_actions.append"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_agent_actions", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unrestricted_actions"], ["", "def", "get_avail_actions", "(", "self", ")", ":", "\n", "\n", "        ", "avail_actions", "=", "[", "]", "\n", "for", "agent_id", "in", "range", "(", "self", ".", "n_agents", ")", ":", "\n", "            ", "if", "self", ".", "restrict_actions", ":", "\n", "                ", "avail_agent", "=", "self", ".", "get_avail_agent_actions", "(", "agent_id", ")", "\n", "avail_actions", ".", "append", "(", "avail_agent", ")", "\n", "", "else", ":", "\n", "                ", "avail_agent", "=", "self", ".", "get_unrestricted_actions", "(", "agent_id", ")", "\n", "avail_actions", ".", "append", "(", "avail_agent", ")", "\n", "\n", "", "", "return", "avail_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs_size": [[1127, 1157], ["None"], "methods", ["None"], ["", "def", "get_obs_size", "(", "self", ")", ":", "\n", "\n", "        ", "nf_al", "=", "4", "+", "self", ".", "unit_type_bits", "\n", "nf_en", "=", "4", "+", "self", ".", "unit_type_bits", "\n", "\n", "if", "self", ".", "obs_all_health", ":", "\n", "            ", "nf_al", "+=", "1", "+", "self", ".", "shield_bits_ally", "\n", "nf_en", "+=", "1", "+", "self", ".", "shield_bits_enemy", "\n", "\n", "", "own_feats", "=", "self", ".", "unit_type_bits", "\n", "if", "self", ".", "obs_own_health", ":", "\n", "            ", "own_feats", "+=", "1", "+", "self", ".", "shield_bits_ally", "\n", "", "if", "self", ".", "map_type", "==", "'bunker'", ":", "\n", "            ", "own_feats", "+=", "7", "\n", "\n", "", "if", "self", ".", "obs_last_action", ":", "\n", "            ", "nf_al", "+=", "self", ".", "n_actions", "\n", "\n", "", "move_feats", "=", "self", ".", "n_actions_move", "\n", "if", "self", ".", "obs_pathing_grid", ":", "\n", "            ", "move_feats", "+=", "self", ".", "n_obs_pathing", "\n", "", "if", "self", ".", "obs_terrain_height", ":", "\n", "            ", "move_feats", "+=", "self", ".", "n_obs_height", "\n", "", "if", "'2_corridors'", "in", "self", ".", "map_name", ":", "\n", "            ", "move_feats", "+=", "1", "\n", "\n", "", "enemy_feats", "=", "self", ".", "n_enemies", "*", "nf_en", "\n", "ally_feats", "=", "(", "self", ".", "n_agents", "-", "1", ")", "*", "nf_al", "\n", "\n", "return", "move_feats", "+", "enemy_feats", "+", "ally_feats", "+", "own_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.close": [[1158, 1160], ["starcraft2.SC2._sc2_proc.close"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "_sc2_proc", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.render": [[1161, 1163], ["None"], "methods", ["None"], ["", "def", "render", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.kill_all_units": [[1164, 1171], ["starcraft2.SC2.controller.debug", "s2clientprotocol.debug_pb2.DebugCommand", "starcraft2.SC2.agents.values", "starcraft2.SC2.enemies.values", "s2clientprotocol.debug_pb2.DebugKillUnit"], "methods", ["None"], ["", "def", "kill_all_units", "(", "self", ")", ":", "\n", "        ", "units_alive", "=", "[", "unit", ".", "tag", "for", "unit", "in", "self", ".", "agents", ".", "values", "(", ")", "if", "unit", ".", "health", ">", "0", "]", "+", "[", "unit", ".", "tag", "for", "unit", "in", "self", ".", "enemies", ".", "values", "(", ")", "if", "unit", ".", "health", ">", "0", "]", "\n", "if", "self", ".", "map_type", "==", "'bunker'", "and", "self", ".", "bunker", ".", "health", ">", "0", ":", "\n", "            ", "units_alive", "+=", "[", "self", ".", "bunker", ".", "tag", "]", "\n", "\n", "", "debug_command", "=", "[", "d_pb", ".", "DebugCommand", "(", "kill_unit", "=", "d_pb", ".", "DebugKillUnit", "(", "tag", "=", "units_alive", ")", ")", "]", "\n", "self", ".", "controller", ".", "debug", "(", "debug_command", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.init_units": [[1172, 1221], ["sorted", "range", "sorted.pop", "len", "sorted", "min", "starcraft2.SC2.init_ally_unit_types", "starcraft2.SC2.controller.step", "starcraft2.SC2.controller.observe", "operator.attrgetter", "len", "print", "len", "len", "starcraft2.SC2.full_restart", "starcraft2.SC2.reset", "starcraft2.SC2.full_restart", "starcraft2.SC2.reset", "operator.attrgetter", "len", "starcraft2.SC2.agents.values", "len"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.init_ally_unit_types", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.full_restart", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.reset", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.full_restart", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.reset"], ["", "def", "init_units", "(", "self", ")", ":", "\n", "\n", "# In case controller step fails", "\n", "        ", "while", "True", ":", "\n", "\n", "            ", "self", ".", "agents", "=", "{", "}", "\n", "self", ".", "enemies", "=", "{", "}", "\n", "\n", "ally_units", "=", "[", "unit", "for", "unit", "in", "self", ".", "_obs", ".", "observation", ".", "raw_data", ".", "units", "if", "unit", ".", "owner", "==", "1", "]", "\n", "ally_units_sorted", "=", "sorted", "(", "ally_units", ",", "key", "=", "attrgetter", "(", "'unit_type'", ",", "'pos.x'", ",", "'pos.y'", ")", ",", "reverse", "=", "False", ")", "\n", "\n", "if", "self", ".", "map_type", "==", "'bunker'", "and", "len", "(", "ally_units_sorted", ")", "==", "self", ".", "n_agents", "+", "1", ":", "\n", "                ", "self", ".", "bunker", "=", "ally_units_sorted", ".", "pop", "(", "0", ")", "\n", "self", ".", "bunker_passengers", "=", "[", "]", "\n", "self", ".", "bunker_chief", "=", "None", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "ally_units_sorted", ")", ")", ":", "\n", "                ", "self", ".", "agents", "[", "i", "]", "=", "ally_units_sorted", "[", "i", "]", "\n", "if", "self", ".", "debug_inputs", ":", "\n", "                    ", "print", "(", "\"Unit %d is %d, x = %.1f, y = %1.f\"", "%", "(", "len", "(", "self", ".", "agents", ")", ",", "self", ".", "agents", "[", "i", "]", ".", "unit_type", ",", "self", ".", "agents", "[", "i", "]", ".", "pos", ".", "x", ",", "self", ".", "agents", "[", "i", "]", ".", "pos", ".", "y", ")", ")", "\n", "\n", "", "", "for", "unit", "in", "self", ".", "_obs", ".", "observation", ".", "raw_data", ".", "units", ":", "\n", "                ", "if", "unit", ".", "owner", "==", "2", ":", "\n", "                    ", "self", ".", "enemies", "[", "len", "(", "self", ".", "enemies", ")", "]", "=", "unit", "\n", "if", "self", ".", "_episode_count", "==", "1", ":", "\n", "                        ", "self", ".", "max_reward", "+=", "unit", ".", "health_max", "+", "unit", ".", "shield_max", "\n", "\n", "", "", "", "if", "self", ".", "map_type", "==", "'2step'", ":", "\n", "                ", "zealots", "=", "[", "unit", "for", "unit", "in", "self", ".", "_obs", ".", "observation", ".", "raw_data", ".", "units", "if", "unit", ".", "owner", "==", "2", "and", "unit", ".", "unit_type", "==", "73", "]", "\n", "zealots", "=", "sorted", "(", "zealots", ",", "key", "=", "attrgetter", "(", "'pos.x'", ",", "'pos.y'", ")", ",", "reverse", "=", "False", ")", "\n", "self", ".", "zealot_tags", "=", "[", "unit", ".", "tag", "for", "unit", "in", "zealots", "]", "\n", "\n", "", "if", "self", ".", "_episode_count", "==", "1", ":", "\n", "                ", "min_unit_type", "=", "min", "(", "unit", ".", "unit_type", "for", "unit", "in", "self", ".", "agents", ".", "values", "(", ")", ")", "\n", "self", ".", "init_ally_unit_types", "(", "min_unit_type", ")", "\n", "\n", "", "if", "len", "(", "self", ".", "agents", ")", "==", "self", ".", "n_agents", "and", "len", "(", "self", ".", "enemies", ")", "==", "self", ".", "n_enemies", ":", "\n", "# All good", "\n", "                ", "return", "\n", "\n", "", "try", ":", "\n", "                ", "self", ".", "controller", ".", "step", "(", "1", ")", "\n", "self", ".", "_obs", "=", "self", ".", "controller", ".", "observe", "(", ")", "\n", "", "except", "protocol", ".", "ProtocolError", ":", "\n", "                ", "self", ".", "full_restart", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "", "except", "protocol", ".", "ConnectionError", ":", "\n", "                ", "self", ".", "full_restart", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.update_units": [[1222, 1319], ["copy.deepcopy", "copy.deepcopy", "starcraft2.SC2.agents.items", "starcraft2.SC2.enemies.items", "starcraft2.SC2.agents.items", "starcraft2.SC2.only_medivac_left", "starcraft2.SC2.only_medivac_left", "starcraft2.SC2.enemies.items", "starcraft2.SC2.distance", "numpy.random.choice"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.only_medivac_left", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.only_medivac_left", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.distance"], ["", "", "", "def", "update_units", "(", "self", ")", ":", "\n", "\n", "# This function assumes that self._obs is up-to-date", "\n", "        ", "n_ally_alive", "=", "0", "\n", "n_enemy_alive", "=", "0", "\n", "\n", "# Store previous state", "\n", "self", ".", "previous_agent_units", "=", "deepcopy", "(", "self", ".", "agents", ")", "\n", "self", ".", "previous_enemy_units", "=", "deepcopy", "(", "self", ".", "enemies", ")", "\n", "\n", "#print('=-------------------------=')", "\n", "#print(self._obs.observation.raw_data.units)", "\n", "#print('=-------------------------=')", "\n", "\n", "if", "self", ".", "map_type", "==", "'bunker'", "and", "self", ".", "bunker", ".", "health", ">", "0", ":", "\n", "            ", "updated", "=", "False", "\n", "for", "unit", "in", "self", ".", "_obs", ".", "observation", ".", "raw_data", ".", "units", ":", "\n", "                ", "if", "unit", ".", "tag", "==", "self", ".", "bunker", ".", "tag", ":", "\n", "                    ", "self", ".", "bunker", "=", "unit", "\n", "n_ally_alive", "+=", "self", ".", "bunker", ".", "cargo_space_taken", "\n", "if", "self", ".", "bunker", ".", "cargo_space_taken", ">", "0", ":", "\n", "                        ", "self", ".", "bunker_passengers", "=", "[", "p", ".", "tag", "for", "p", "in", "self", ".", "bunker", ".", "passengers", "]", "\n", "if", "self", ".", "bunker", ".", "cargo_space_taken", "==", "1", ":", "\n", "# single unit inside", "\n", "                            ", "self", ".", "bunker_chief", "=", "self", ".", "bunker_passengers", "[", "0", "]", "\n", "", "elif", "(", "(", "self", ".", "bunker_chief", "is", "None", ")", "\n", "or", "self", ".", "bunker_chief", "is", "not", "None", "and", "self", ".", "bunker_chief", "not", "in", "self", ".", "bunker_passengers", ")", ":", "\n", "# chief left the bunker", "\n", "                            ", "self", ".", "bunker_chief", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "bunker_passengers", ")", "\n", "", "", "else", ":", "\n", "# no one inside", "\n", "                        ", "self", ".", "bunker_passengers", "=", "[", "]", "\n", "self", ".", "bunker_chief", "=", "None", "\n", "\n", "", "updated", "=", "True", "\n", "break", "\n", "\n", "", "", "if", "not", "updated", ":", "\n", "                ", "self", ".", "bunker", ".", "health", "=", "0", "\n", "self", ".", "bunker_passengers", "=", "[", "]", "\n", "self", ".", "bunker_chief", "=", "None", "\n", "\n", "", "", "for", "al_id", ",", "al_unit", "in", "self", ".", "agents", ".", "items", "(", ")", ":", "\n", "\n", "            ", "if", "self", ".", "map_type", "==", "'bunker'", "and", "al_unit", ".", "tag", "in", "self", ".", "bunker_passengers", ":", "\n", "# found the unit!", "\n", "                ", "self", ".", "agents", "[", "al_id", "]", ".", "pos", ".", "x", "=", "self", ".", "bunker", ".", "pos", ".", "x", "\n", "self", ".", "agents", "[", "al_id", "]", ".", "pos", ".", "y", "=", "self", ".", "bunker", ".", "pos", ".", "y", "\n", "continue", "\n", "\n", "", "updated", "=", "False", "\n", "for", "unit", "in", "self", ".", "_obs", ".", "observation", ".", "raw_data", ".", "units", ":", "\n", "                ", "if", "al_unit", ".", "tag", "==", "unit", ".", "tag", ":", "\n", "                    ", "self", ".", "agents", "[", "al_id", "]", "=", "unit", "\n", "updated", "=", "True", "\n", "n_ally_alive", "+=", "1", "\n", "break", "\n", "\n", "", "", "if", "not", "updated", ":", "# means dead", "\n", "                ", "al_unit", ".", "health", "=", "0", "\n", "\n", "", "", "for", "e_id", ",", "e_unit", "in", "self", ".", "enemies", ".", "items", "(", ")", ":", "\n", "            ", "updated", "=", "False", "\n", "for", "unit", "in", "self", ".", "_obs", ".", "observation", ".", "raw_data", ".", "units", ":", "\n", "                ", "if", "e_unit", ".", "tag", "==", "unit", ".", "tag", ":", "\n", "                    ", "self", ".", "enemies", "[", "e_id", "]", "=", "unit", "\n", "updated", "=", "True", "\n", "n_enemy_alive", "+=", "1", "\n", "break", "\n", "\n", "", "", "if", "not", "updated", ":", "# means dead", "\n", "                ", "e_unit", ".", "health", "=", "0", "\n", "\n", "", "", "if", "self", ".", "heuristic", ":", "\n", "            ", "for", "al_id", ",", "al_unit", "in", "self", ".", "agents", ".", "items", "(", ")", ":", "\n", "                ", "current_target", "=", "self", ".", "heuristic_targets", "[", "al_id", "]", "\n", "if", "current_target", "==", "0", "or", "self", ".", "enemies", "[", "current_target", "]", ".", "health", "==", "0", ":", "\n", "                    ", "x", "=", "al_unit", ".", "pos", ".", "x", "\n", "y", "=", "al_unit", ".", "pos", ".", "y", "\n", "min_dist", "=", "32", "\n", "min_id", "=", "-", "1", "\n", "for", "e_id", ",", "e_unit", "in", "self", ".", "enemies", ".", "items", "(", ")", ":", "\n", "                        ", "if", "e_unit", ".", "health", ">", "0", ":", "\n", "                            ", "dist", "=", "self", ".", "distance", "(", "x", ",", "y", ",", "e_unit", ".", "pos", ".", "x", ",", "e_unit", ".", "pos", ".", "y", ")", "\n", "if", "dist", "<", "min_dist", ":", "\n", "                                ", "min_dist", "=", "dist", "\n", "min_id", "=", "e_id", "\n", "", "", "", "self", ".", "heuristic_targets", "[", "al_id", "]", "=", "min_id", "\n", "\n", "", "", "", "if", "(", "n_ally_alive", "==", "0", "and", "n_enemy_alive", ">", "0", ")", "or", "self", ".", "only_medivac_left", "(", "ally", "=", "True", ")", ":", "\n", "            ", "return", "-", "1", "# loss", "\n", "", "if", "(", "n_ally_alive", ">", "0", "and", "n_enemy_alive", "==", "0", ")", "or", "self", ".", "only_medivac_left", "(", "ally", "=", "False", ")", ":", "\n", "            ", "return", "1", "# win", "\n", "", "if", "n_ally_alive", "==", "0", "and", "n_enemy_alive", "==", "0", ":", "\n", "            ", "return", "0", "# tie, not sure if this is possible", "\n", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.only_medivac_left": [[1320, 1334], ["len", "starcraft2.SC2.agents.values", "starcraft2.SC2.enemies.values", "len"], "methods", ["None"], ["", "def", "only_medivac_left", "(", "self", ",", "ally", ")", ":", "\n", "        ", "if", "self", ".", "map_type", "!=", "'MMM'", ":", "\n", "            ", "return", "False", "\n", "\n", "", "if", "ally", ":", "\n", "            ", "units_alive", "=", "[", "a", "for", "a", "in", "self", ".", "agents", ".", "values", "(", ")", "if", "(", "a", ".", "health", ">", "0", "and", "a", ".", "unit_type", "!=", "self", ".", "medivac_id", ")", "]", "\n", "if", "len", "(", "units_alive", ")", "==", "0", ":", "\n", "                ", "return", "True", "\n", "", "return", "False", "\n", "", "else", ":", "\n", "            ", "units_alive", "=", "[", "a", "for", "a", "in", "self", ".", "enemies", ".", "values", "(", ")", "if", "(", "a", ".", "health", ">", "0", "and", "a", ".", "unit_type", "!=", "self", ".", "medivac_id", ")", "]", "\n", "if", "len", "(", "units_alive", ")", "==", "1", "and", "units_alive", "[", "0", "]", ".", "unit_type", "==", "54", ":", "\n", "                ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_unit_by_id": [[1335, 1337], ["None"], "methods", ["None"], ["", "", "def", "get_unit_by_id", "(", "self", ",", "a_id", ")", ":", "\n", "        ", "return", "self", ".", "agents", "[", "a_id", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_stats": [[1338, 1347], ["None"], "methods", ["None"], ["", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "stats", "=", "{", "}", "\n", "stats", "[", "\"battles_won\"", "]", "=", "self", ".", "battles_won", "\n", "stats", "[", "\"battles_game\"", "]", "=", "self", ".", "battles_game", "\n", "stats", "[", "\"battles_draw\"", "]", "=", "self", ".", "timeouts", "\n", "stats", "[", "\"win_rate\"", "]", "=", "self", ".", "battles_won", "/", "self", ".", "battles_game", "\n", "stats", "[", "\"timeouts\"", "]", "=", "self", ".", "timeouts", "\n", "stats", "[", "\"restarts\"", "]", "=", "self", ".", "force_restarts", "\n", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.print_map": [[1348, 1357], ["enumerate", "print", "l.append", "l.append", "map"], "methods", ["None"], ["", "def", "print_map", "(", "self", ")", ":", "\n", "        ", "for", "k", ",", "x", "in", "enumerate", "(", "self", ".", "pathing_grid", ")", ":", "\n", "            ", "l", "=", "[", "]", "\n", "for", "i", "in", "x", ":", "\n", "                ", "if", "i", "==", "255", ":", "\n", "                    ", "l", ".", "append", "(", "'X'", ")", "\n", "", "else", ":", "\n", "                    ", "l", ".", "append", "(", "' '", ")", "\n", "", "", "print", "(", "' '", ".", "join", "(", "map", "(", "str", ",", "l", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.open_bunker": [[1358, 1362], ["None"], "methods", ["None"], ["", "", "def", "open_bunker", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "map_type", "!=", "'bunker'", ":", "\n", "            ", "return", "\n", "", "self", ".", "bunker_open", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.close_bunker": [[1363, 1367], ["None"], "methods", ["None"], ["", "def", "close_bunker", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "map_type", "!=", "'bunker'", ":", "\n", "            ", "return", "\n", "", "self", ".", "bunker_open", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.open_corridor": [[1368, 1373], ["copy.deepcopy"], "methods", ["None"], ["", "def", "open_corridor", "(", "self", ")", ":", "\n", "        ", "if", "'2_corridors'", "not", "in", "self", ".", "map_name", ":", "\n", "            ", "return", "\n", "", "self", ".", "pathing_grid", "=", "deepcopy", "(", "self", ".", "pathing_grid_orig", ")", "\n", "self", ".", "corridor", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.close_corridor": [[1374, 1380], ["range"], "methods", ["None"], ["", "def", "close_corridor", "(", "self", ")", ":", "\n", "        ", "if", "'2_corridors'", "not", "in", "self", ".", "map_name", ":", "\n", "            ", "return", "\n", "", "for", "i", "in", "range", "(", "14", ",", "20", ")", ":", "\n", "            ", "self", ".", "pathing_grid", "[", "0", ":", "16", ",", "i", "]", "=", "[", "255", "]", "*", "16", "\n", "", "self", ".", "corridor", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_agg_stats": [[1381, 1407], ["current_stats.items", "stat.items", "current_stats[].append", "numpy.mean", "numpy.mean", "zip", "zip", "len", "len", "len"], "methods", ["None"], ["", "def", "get_agg_stats", "(", "self", ",", "stats", ")", ":", "\n", "\n", "        ", "current_stats", "=", "{", "}", "\n", "for", "stat", "in", "stats", ":", "\n", "            ", "for", "_k", ",", "_v", "in", "stat", ".", "items", "(", ")", ":", "\n", "                ", "if", "not", "(", "_k", "in", "current_stats", ")", ":", "\n", "                    ", "current_stats", "[", "_k", "]", "=", "[", "]", "\n", "", "if", "_k", "in", "[", "\"win_rate\"", "]", ":", "\n", "                    ", "continue", "\n", "", "current_stats", "[", "_k", "]", ".", "append", "(", "_v", ")", "\n", "\n", "# average over stats", "\n", "", "", "aggregate_stats", "=", "{", "}", "\n", "for", "_k", ",", "_v", "in", "current_stats", ".", "items", "(", ")", ":", "\n", "            ", "if", "_k", "in", "[", "\"win_rate\"", "]", ":", "\n", "                ", "aggregate_stats", "[", "_k", "]", "=", "np", ".", "mean", "(", "[", "(", "_a", "-", "_b", ")", "/", "(", "_c", "-", "_d", ")", "for", "_a", ",", "_b", ",", "_c", ",", "_d", "in", "zip", "(", "current_stats", "[", "\"battles_won\"", "]", ",", "\n", "[", "0", "]", "*", "len", "(", "current_stats", "[", "\"battles_won\"", "]", ")", "if", "self", ".", "last_stats", "is", "None", "else", "self", ".", "last_stats", "[", "\"battles_won\"", "]", ",", "\n", "current_stats", "[", "\"battles_game\"", "]", ",", "\n", "[", "0", "]", "*", "len", "(", "current_stats", "[", "\"battles_game\"", "]", ")", "if", "self", ".", "last_stats", "is", "None", "else", "\n", "self", ".", "last_stats", "[", "\"battles_game\"", "]", ")", "\n", "if", "(", "_c", "-", "_d", ")", "!=", "0.0", "]", ")", "\n", "", "else", ":", "\n", "                ", "aggregate_stats", "[", "_k", "]", "=", "np", ".", "mean", "(", "[", "_a", "-", "_b", "for", "_a", ",", "_b", "in", "zip", "(", "_v", ",", "[", "0", "]", "*", "len", "(", "_v", ")", "if", "self", ".", "last_stats", "is", "None", "else", "self", ".", "last_stats", "[", "_k", "]", ")", "]", ")", "\n", "\n", "", "", "self", ".", "last_stats", "=", "current_stats", "\n", "return", "aggregate_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.StatsAggregator.__init__": [[1412, 1416], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "last_stats", "=", "None", "\n", "self", ".", "stats", "=", "[", "]", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.StatsAggregator.aggregate": [[1417, 1450], ["current_stats.items", "aggregate_stats.items", "starcraft2.StatsAggregator.stats.append", "stat.items", "add_stat_fn", "current_stats[].append", "numpy.mean", "numpy.mean", "zip", "zip", "len", "len", "len"], "methods", ["None"], ["", "def", "aggregate", "(", "self", ",", "stats", ",", "add_stat_fn", ")", ":", "\n", "\n", "        ", "current_stats", "=", "{", "}", "\n", "for", "stat", "in", "stats", ":", "\n", "            ", "for", "_k", ",", "_v", "in", "stat", ".", "items", "(", ")", ":", "\n", "                ", "if", "not", "(", "_k", "in", "current_stats", ")", ":", "\n", "                    ", "current_stats", "[", "_k", "]", "=", "[", "]", "\n", "", "if", "_k", "in", "[", "\"win_rate\"", "]", ":", "\n", "                    ", "continue", "\n", "", "current_stats", "[", "_k", "]", ".", "append", "(", "_v", ")", "\n", "\n", "# average over stats", "\n", "", "", "aggregate_stats", "=", "{", "}", "\n", "for", "_k", ",", "_v", "in", "current_stats", ".", "items", "(", ")", ":", "\n", "            ", "if", "_k", "in", "[", "\"win_rate\"", "]", ":", "\n", "                ", "aggregate_stats", "[", "_k", "]", "=", "np", ".", "mean", "(", "[", "(", "_a", "-", "_b", ")", "/", "(", "_c", "-", "_d", ")", "for", "_a", ",", "_b", ",", "_c", ",", "_d", "in", "zip", "(", "current_stats", "[", "\"battles_won\"", "]", ",", "\n", "[", "0", "]", "*", "len", "(", "current_stats", "[", "\"battles_won\"", "]", ")", "if", "self", ".", "last_stats", "is", "None", "else", "self", ".", "last_stats", "[", "\"battles_won\"", "]", ",", "\n", "current_stats", "[", "\"battles_game\"", "]", ",", "\n", "[", "0", "]", "*", "len", "(", "current_stats", "[", "\"battles_game\"", "]", ")", "if", "self", ".", "last_stats", "is", "None", "else", "\n", "self", ".", "last_stats", "[", "\"battles_game\"", "]", ")", "\n", "if", "(", "_c", "-", "_d", ")", "!=", "0.0", "]", ")", "\n", "", "else", ":", "\n", "                ", "aggregate_stats", "[", "_k", "]", "=", "np", ".", "mean", "(", "[", "_a", "-", "_b", "for", "_a", ",", "_b", "in", "zip", "(", "_v", ",", "[", "0", "]", "*", "len", "(", "_v", ")", "if", "self", ".", "last_stats", "is", "None", "else", "self", ".", "last_stats", "[", "_k", "]", ")", "]", ")", "\n", "\n", "# add stats that have just been produced to tensorboard / sacred", "\n", "", "", "for", "_k", ",", "_v", "in", "aggregate_stats", ".", "items", "(", ")", ":", "\n", "            ", "add_stat_fn", "(", "_k", ",", "_v", ")", "\n", "\n", "# collect stats for logging horizon", "\n", "", "self", ".", "stats", ".", "append", "(", "aggregate_stats", ")", "\n", "# update last stats", "\n", "self", ".", "last_stats", "=", "current_stats", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.StatsAggregator.log": [[1451, 1460], ["_seq_mean", "_seq_mean", "_seq_mean"], "methods", ["None"], ["", "def", "log", "(", "self", ",", "log_directly", "=", "False", ")", ":", "\n", "        ", "assert", "not", "log_directly", ",", "\"log_directly not supported.\"", "\n", "logging_str", "=", "\" Win rate: {}\"", ".", "format", "(", "_seq_mean", "(", "[", "stat", "[", "\"win_rate\"", "]", "for", "stat", "in", "self", ".", "stats", "]", ")", ")", "+", "\" Timeouts: {}\"", ".", "format", "(", "_seq_mean", "(", "[", "stat", "[", "\"timeouts\"", "]", "for", "stat", "in", "self", ".", "stats", "]", ")", ")", "+", "\" Restarts: {}\"", ".", "format", "(", "_seq_mean", "(", "[", "stat", "[", "\"restarts\"", "]", "for", "stat", "in", "self", ".", "stats", "]", ")", ")", "\n", "\n", "# flush stats", "\n", "self", ".", "stats", "=", "[", "]", "\n", "return", "logging_str", "", "", "", ""]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.__init__": [[14, 43], ["zip", "parallel_runner.ParallelRunner.parent_conns[].send", "parallel_runner.ParallelRunner.parent_conns[].recv", "multiprocessing.Process", "p.start", "multiprocessing.Pipe", "range", "parallel_runner.CloudpickleWrapper", "functools.partial"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "logger", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "batch_size", "=", "self", ".", "args", ".", "batch_size_run", "\n", "\n", "# Make subprocesses for the envs", "\n", "self", ".", "parent_conns", ",", "self", ".", "worker_conns", "=", "zip", "(", "*", "[", "Pipe", "(", ")", "for", "_", "in", "range", "(", "self", ".", "batch_size", ")", "]", ")", "\n", "env_fn", "=", "env_REGISTRY", "[", "self", ".", "args", ".", "env", "]", "\n", "self", ".", "ps", "=", "[", "Process", "(", "target", "=", "env_worker", ",", "args", "=", "(", "worker_conn", ",", "CloudpickleWrapper", "(", "partial", "(", "env_fn", ",", "env_args", "=", "self", ".", "args", ".", "env_args", ",", "args", "=", "self", ".", "args", ")", ")", ")", ")", "\n", "for", "worker_conn", "in", "self", ".", "worker_conns", "]", "\n", "\n", "for", "p", "in", "self", ".", "ps", ":", "\n", "            ", "p", ".", "daemon", "=", "True", "\n", "p", ".", "start", "(", ")", "\n", "\n", "", "self", ".", "parent_conns", "[", "0", "]", ".", "send", "(", "(", "\"get_env_info\"", ",", "None", ")", ")", "\n", "self", ".", "env_info", "=", "self", ".", "parent_conns", "[", "0", "]", ".", "recv", "(", ")", "\n", "self", ".", "episode_limit", "=", "self", ".", "env_info", "[", "\"episode_limit\"", "]", "\n", "\n", "self", ".", "t", "=", "0", "\n", "\n", "self", ".", "t_env", "=", "0", "\n", "\n", "self", ".", "train_returns", "=", "[", "]", "\n", "self", ".", "test_returns", "=", "[", "]", "\n", "self", ".", "train_stats", "=", "{", "}", "\n", "self", ".", "test_stats", "=", "{", "}", "\n", "\n", "self", ".", "log_train_stats_t", "=", "-", "100000", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda": [[44, 47], ["parallel_runner.ParallelRunner.noise_distrib.cuda"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.cuda"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "noise_bandit", ":", "\n", "            ", "self", ".", "noise_distrib", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.setup": [[48, 68], ["functools.partial", "modules.bandits.uniform.Uniform", "modules.bandits.reinforce_hierarchial.EZ_agent", "modules.bandits.returns_bandit.ReturnsBandit"], "methods", ["None"], ["", "", "def", "setup", "(", "self", ",", "scheme", ",", "groups", ",", "preprocess", ",", "mac", ")", ":", "\n", "        ", "self", ".", "new_batch", "=", "partial", "(", "EpisodeBatch", ",", "scheme", ",", "groups", ",", "self", ".", "batch_size", ",", "self", ".", "episode_limit", "+", "1", ",", "\n", "preprocess", "=", "preprocess", ",", "device", "=", "self", ".", "args", ".", "device", ")", "\n", "self", ".", "mac", "=", "mac", "\n", "self", ".", "scheme", "=", "scheme", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "preprocess", "=", "preprocess", "\n", "\n", "# Setup the noise distribution sampler", "\n", "if", "self", ".", "args", ".", "noise_bandit", ":", "\n", "            ", "if", "self", ".", "args", ".", "bandit_policy", ":", "\n", "                ", "self", ".", "noise_distrib", "=", "enza", "(", "self", ".", "args", ",", "logger", "=", "self", ".", "logger", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "noise_distrib", "=", "RBandit", "(", "self", ".", "args", ",", "logger", "=", "self", ".", "logger", ")", "\n", "", "", "else", ":", "\n", "           ", "self", ".", "noise_distrib", "=", "Uniform", "(", "self", ".", "args", ")", "\n", "\n", "", "self", ".", "noise_returns", "=", "{", "}", "\n", "self", ".", "noise_test_won", "=", "{", "}", "\n", "self", ".", "noise_train_won", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.get_env_info": [[69, 71], ["None"], "methods", ["None"], ["", "def", "get_env_info", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "env_info", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.save_replay": [[72, 74], ["None"], "methods", ["None"], ["", "def", "save_replay", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.close_env": [[75, 78], ["parent_conn.send"], "methods", ["None"], ["", "def", "close_env", "(", "self", ")", ":", "\n", "        ", "for", "parent_conn", "in", "self", ".", "parent_conns", ":", "\n", "            ", "parent_conn", ".", "send", "(", "(", "\"close\"", ",", "None", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.reset": [[79, 117], ["parallel_runner.ParallelRunner.new_batch", "parallel_runner.ParallelRunner.batch.update", "parallel_runner.ParallelRunner.noise_distrib.sample", "parallel_runner.ParallelRunner.batch.update", "parent_conn.send", "parent_conn.recv", "pre_transition_data[].append", "pre_transition_data[].append", "pre_transition_data[].append", "parent_conn.send", "parent_conn.send"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.sample", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update"], ["", "", "def", "reset", "(", "self", ",", "test_mode", "=", "False", ")", ":", "\n", "        ", "self", ".", "batch", "=", "self", ".", "new_batch", "(", ")", "\n", "\n", "# Reset the envs", "\n", "for", "parent_conn", "in", "self", ".", "parent_conns", ":", "\n", "            ", "parent_conn", ".", "send", "(", "(", "\"reset\"", ",", "None", ")", ")", "\n", "\n", "", "pre_transition_data", "=", "{", "\n", "\"state\"", ":", "[", "]", ",", "\n", "\"avail_actions\"", ":", "[", "]", ",", "\n", "\"obs\"", ":", "[", "]", "\n", "}", "\n", "# Get the obs, state and avail_actions back", "\n", "for", "parent_conn", "in", "self", ".", "parent_conns", ":", "\n", "            ", "data", "=", "parent_conn", ".", "recv", "(", ")", "\n", "pre_transition_data", "[", "\"state\"", "]", ".", "append", "(", "data", "[", "\"state\"", "]", ")", "\n", "pre_transition_data", "[", "\"avail_actions\"", "]", ".", "append", "(", "data", "[", "\"avail_actions\"", "]", ")", "\n", "pre_transition_data", "[", "\"obs\"", "]", ".", "append", "(", "data", "[", "\"obs\"", "]", ")", "\n", "\n", "", "self", ".", "batch", ".", "update", "(", "pre_transition_data", ",", "ts", "=", "0", ")", "\n", "\n", "# Sample the noise at the beginning of the episode", "\n", "self", ".", "noise", "=", "self", ".", "noise_distrib", ".", "sample", "(", "self", ".", "batch", "[", "'state'", "]", "[", ":", ",", "0", "]", ",", "test_mode", ")", "\n", "\n", "self", ".", "batch", ".", "update", "(", "{", "\"noise\"", ":", "self", ".", "noise", "}", ",", "ts", "=", "0", ")", "\n", "\n", "self", ".", "t", "=", "0", "\n", "self", ".", "env_steps_this_run", "=", "0", "\n", "\n", "if", "\"map_name\"", "in", "self", ".", "args", ".", "env_args", "and", "self", ".", "args", ".", "env_args", "[", "\"map_name\"", "]", "==", "\"2_corridors\"", ":", "\n", "            ", "if", "self", ".", "t_env", ">", "5", "*", "1000", "*", "1000", ":", "\n", "                ", "for", "parent_conn", "in", "self", ".", "parent_conns", ":", "\n", "                    ", "parent_conn", ".", "send", "(", "(", "\"close_corridor\"", ",", "None", ")", ")", "\n", "\n", "", "", "", "if", "\"map_name\"", "in", "self", ".", "args", ".", "env_args", "and", "self", ".", "args", ".", "env_args", "[", "\"map_name\"", "]", "==", "\"bunker_vs_6m\"", ":", "\n", "            ", "if", "self", ".", "t_env", ">", "3", "*", "1000", "*", "1000", ":", "\n", "                ", "for", "parent_conn", "in", "self", ".", "parent_conns", ":", "\n", "                    ", "parent_conn", ".", "send", "(", "(", "\"avail_bunker\"", ",", "None", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.run": [[118, 241], ["parallel_runner.ParallelRunner.reset", "parallel_runner.ParallelRunner.mac.init_hidden", "cur_stats.update", "cur_returns.extend", "parallel_runner.ParallelRunner._update_noise_returns", "parallel_runner.ParallelRunner.noise_distrib.update_returns", "parallel_runner.ParallelRunner.mac.select_actions", "parallel_runner.ParallelRunner.to().numpy", "parallel_runner.ParallelRunner.batch.update", "all", "enumerate", "enumerate", "parallel_runner.ParallelRunner.batch.update", "parallel_runner.ParallelRunner.batch.update", "parent_conn.send", "parent_conn.recv", "env_stats.append", "cur_stats.get", "sum", "cur_stats.get", "max", "parallel_runner.ParallelRunner._log_noise_returns", "parallel_runner.ParallelRunner._log", "range", "range", "range", "enumerate", "parallel_runner.ParallelRunner.unsqueeze", "sum", "len", "parallel_runner.ParallelRunner._log_noise_returns", "parallel_runner.ParallelRunner._log", "hasattr", "parallel_runner.ParallelRunner.to", "enumerate", "parent_conn.recv", "post_transition_data[].append", "post_transition_data[].append", "pre_transition_data[].append", "pre_transition_data[].append", "pre_transition_data[].append", "set.union", "parallel_runner.ParallelRunner.logger.log_stat", "parent_conn.send", "final_env_infos.append", "d.get", "data[].get", "set"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.reset", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.extend", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner._update_noise_returns", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.uniform.Uniform.update_returns", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.select_actions", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner._log_noise_returns", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner._log", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner._log_noise_returns", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner._log", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.to", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat"], ["", "", "", "", "def", "run", "(", "self", ",", "test_mode", "=", "False", ",", "test_uniform", "=", "False", ")", ":", "\n", "        ", "self", ".", "reset", "(", "test_uniform", ")", "\n", "\n", "all_terminated", "=", "False", "\n", "episode_returns", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "batch_size", ")", "]", "\n", "episode_lengths", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "batch_size", ")", "]", "\n", "self", ".", "mac", ".", "init_hidden", "(", "batch_size", "=", "self", ".", "batch_size", ")", "\n", "terminated", "=", "[", "False", "for", "_", "in", "range", "(", "self", ".", "batch_size", ")", "]", "\n", "envs_not_terminated", "=", "[", "b_idx", "for", "b_idx", ",", "termed", "in", "enumerate", "(", "terminated", ")", "if", "not", "termed", "]", "\n", "final_env_infos", "=", "[", "]", "\n", "\n", "while", "True", ":", "\n", "\n", "# Pass the entire batch of experiences up till now to the agents", "\n", "# Receive the actions for each agent at this timestep in a batch for each un-terminated env", "\n", "            ", "actions", "=", "self", ".", "mac", ".", "select_actions", "(", "self", ".", "batch", ",", "t_ep", "=", "self", ".", "t", ",", "t_env", "=", "self", ".", "t_env", ",", "bs", "=", "envs_not_terminated", ",", "test_mode", "=", "test_mode", ")", "\n", "cpu_actions", "=", "actions", ".", "to", "(", "\"cpu\"", ")", ".", "numpy", "(", ")", "\n", "\n", "# Update the actions taken", "\n", "actions_chosen", "=", "{", "\n", "\"actions\"", ":", "actions", ".", "unsqueeze", "(", "1", ")", "\n", "}", "\n", "self", ".", "batch", ".", "update", "(", "actions_chosen", ",", "bs", "=", "envs_not_terminated", ",", "ts", "=", "self", ".", "t", ",", "mark_filled", "=", "False", ")", "\n", "\n", "# Update terminated envs after adding post_transition_data", "\n", "envs_not_terminated", "=", "[", "b_idx", "for", "b_idx", ",", "termed", "in", "enumerate", "(", "terminated", ")", "if", "not", "termed", "]", "\n", "all_terminated", "=", "all", "(", "terminated", ")", "\n", "if", "all_terminated", ":", "\n", "                ", "break", "\n", "\n", "# Send actions to each env", "\n", "", "action_idx", "=", "0", "\n", "for", "idx", ",", "parent_conn", "in", "enumerate", "(", "self", ".", "parent_conns", ")", ":", "\n", "                ", "if", "idx", "in", "envs_not_terminated", ":", "# We produced actions for this env", "\n", "                    ", "if", "not", "terminated", "[", "idx", "]", ":", "# Only send the actions to the env if it hasn't terminated", "\n", "                        ", "parent_conn", ".", "send", "(", "(", "\"step\"", ",", "cpu_actions", "[", "action_idx", "]", ")", ")", "\n", "", "action_idx", "+=", "1", "# actions is not a list over every env", "\n", "\n", "# Post step data we will insert for the current timestep", "\n", "", "", "post_transition_data", "=", "{", "\n", "\"reward\"", ":", "[", "]", ",", "\n", "\"terminated\"", ":", "[", "]", "\n", "}", "\n", "# Data for the next step we will insert in order to select an action", "\n", "pre_transition_data", "=", "{", "\n", "\"state\"", ":", "[", "]", ",", "\n", "\"avail_actions\"", ":", "[", "]", ",", "\n", "\"obs\"", ":", "[", "]", "\n", "}", "\n", "\n", "# Receive data back for each unterminated env", "\n", "for", "idx", ",", "parent_conn", "in", "enumerate", "(", "self", ".", "parent_conns", ")", ":", "\n", "                ", "if", "not", "terminated", "[", "idx", "]", ":", "\n", "                    ", "data", "=", "parent_conn", ".", "recv", "(", ")", "\n", "# Remaining data for this current timestep", "\n", "post_transition_data", "[", "\"reward\"", "]", ".", "append", "(", "(", "data", "[", "\"reward\"", "]", ",", ")", ")", "\n", "\n", "episode_returns", "[", "idx", "]", "+=", "data", "[", "\"reward\"", "]", "\n", "episode_lengths", "[", "idx", "]", "+=", "1", "\n", "if", "not", "test_mode", ":", "\n", "                        ", "self", ".", "env_steps_this_run", "+=", "1", "\n", "\n", "", "env_terminated", "=", "False", "\n", "if", "data", "[", "\"terminated\"", "]", ":", "\n", "                        ", "final_env_infos", ".", "append", "(", "data", "[", "\"info\"", "]", ")", "\n", "", "if", "data", "[", "\"terminated\"", "]", "and", "not", "data", "[", "\"info\"", "]", ".", "get", "(", "\"episode_limit\"", ",", "False", ")", ":", "\n", "                        ", "env_terminated", "=", "True", "\n", "", "terminated", "[", "idx", "]", "=", "data", "[", "\"terminated\"", "]", "\n", "post_transition_data", "[", "\"terminated\"", "]", ".", "append", "(", "(", "env_terminated", ",", ")", ")", "\n", "\n", "# Data for the next timestep needed to select an action", "\n", "pre_transition_data", "[", "\"state\"", "]", ".", "append", "(", "data", "[", "\"state\"", "]", ")", "\n", "pre_transition_data", "[", "\"avail_actions\"", "]", ".", "append", "(", "data", "[", "\"avail_actions\"", "]", ")", "\n", "pre_transition_data", "[", "\"obs\"", "]", ".", "append", "(", "data", "[", "\"obs\"", "]", ")", "\n", "\n", "# Add post_transiton data into the batch", "\n", "", "", "self", ".", "batch", ".", "update", "(", "post_transition_data", ",", "bs", "=", "envs_not_terminated", ",", "ts", "=", "self", ".", "t", ",", "mark_filled", "=", "False", ")", "\n", "\n", "# Move onto the next timestep", "\n", "self", ".", "t", "+=", "1", "\n", "\n", "# Add the pre-transition data", "\n", "self", ".", "batch", ".", "update", "(", "pre_transition_data", ",", "bs", "=", "envs_not_terminated", ",", "ts", "=", "self", ".", "t", ",", "mark_filled", "=", "True", ")", "\n", "\n", "", "if", "not", "test_mode", ":", "\n", "            ", "self", ".", "t_env", "+=", "self", ".", "env_steps_this_run", "\n", "\n", "# Get stats back for each env", "\n", "", "for", "parent_conn", "in", "self", ".", "parent_conns", ":", "\n", "            ", "parent_conn", ".", "send", "(", "(", "\"get_stats\"", ",", "None", ")", ")", "\n", "\n", "", "env_stats", "=", "[", "]", "\n", "for", "parent_conn", "in", "self", ".", "parent_conns", ":", "\n", "            ", "env_stat", "=", "parent_conn", ".", "recv", "(", ")", "\n", "env_stats", ".", "append", "(", "env_stat", ")", "\n", "\n", "", "cur_stats", "=", "self", ".", "test_stats", "if", "test_mode", "else", "self", ".", "train_stats", "\n", "cur_returns", "=", "self", ".", "test_returns", "if", "test_mode", "else", "self", ".", "train_returns", "\n", "log_prefix", "=", "\"test_\"", "if", "test_mode", "else", "\"\"", "\n", "if", "test_uniform", ":", "\n", "            ", "log_prefix", "+=", "\"uni_\"", "\n", "", "infos", "=", "[", "cur_stats", "]", "+", "final_env_infos", "\n", "cur_stats", ".", "update", "(", "{", "k", ":", "sum", "(", "d", ".", "get", "(", "k", ",", "0", ")", "for", "d", "in", "infos", ")", "for", "k", "in", "set", ".", "union", "(", "*", "[", "set", "(", "d", ")", "for", "d", "in", "infos", "]", ")", "}", ")", "\n", "cur_stats", "[", "\"n_episodes\"", "]", "=", "self", ".", "batch_size", "+", "cur_stats", ".", "get", "(", "\"n_episodes\"", ",", "0", ")", "\n", "cur_stats", "[", "\"ep_length\"", "]", "=", "sum", "(", "episode_lengths", ")", "+", "cur_stats", ".", "get", "(", "\"ep_length\"", ",", "0", ")", "\n", "\n", "cur_returns", ".", "extend", "(", "episode_returns", ")", "\n", "\n", "self", ".", "_update_noise_returns", "(", "episode_returns", ",", "self", ".", "noise", ",", "final_env_infos", ",", "test_mode", ")", "\n", "self", ".", "noise_distrib", ".", "update_returns", "(", "self", ".", "batch", "[", "'state'", "]", "[", ":", ",", "0", "]", ",", "self", ".", "noise", ",", "episode_returns", ",", "test_mode", ",", "self", ".", "t_env", ")", "\n", "\n", "n_test_runs", "=", "max", "(", "1", ",", "self", ".", "args", ".", "test_nepisode", "//", "self", ".", "batch_size", ")", "*", "self", ".", "batch_size", "\n", "if", "test_mode", "and", "(", "len", "(", "self", ".", "test_returns", ")", "==", "n_test_runs", ")", ":", "\n", "            ", "self", ".", "_log_noise_returns", "(", "test_mode", ",", "test_uniform", ")", "\n", "self", ".", "_log", "(", "cur_returns", ",", "cur_stats", ",", "log_prefix", ")", "\n", "", "elif", "self", ".", "t_env", "-", "self", ".", "log_train_stats_t", ">=", "self", ".", "args", ".", "runner_log_interval", ":", "\n", "            ", "self", ".", "_log_noise_returns", "(", "test_mode", ",", "test_uniform", ")", "\n", "self", ".", "_log", "(", "cur_returns", ",", "cur_stats", ",", "log_prefix", ")", "\n", "if", "hasattr", "(", "self", ".", "mac", ".", "action_selector", ",", "\"epsilon\"", ")", ":", "\n", "                ", "self", ".", "logger", ".", "log_stat", "(", "\"epsilon\"", ",", "self", ".", "mac", ".", "action_selector", ".", "epsilon", ",", "self", ".", "t_env", ")", "\n", "", "self", ".", "log_train_stats_t", "=", "self", ".", "t_env", "\n", "\n", "", "return", "self", ".", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner._log": [[242, 251], ["parallel_runner.ParallelRunner.logger.log_stat", "parallel_runner.ParallelRunner.logger.log_stat", "returns.clear", "stats.items", "stats.clear", "numpy.mean", "numpy.std", "parallel_runner.ParallelRunner.logger.log_stat"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat"], ["", "def", "_log", "(", "self", ",", "returns", ",", "stats", ",", "prefix", ")", ":", "\n", "        ", "self", ".", "logger", ".", "log_stat", "(", "prefix", "+", "\"return_mean\"", ",", "np", ".", "mean", "(", "returns", ")", ",", "self", ".", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "prefix", "+", "\"return_std\"", ",", "np", ".", "std", "(", "returns", ")", ",", "self", ".", "t_env", ")", "\n", "returns", ".", "clear", "(", ")", "\n", "\n", "for", "k", ",", "v", "in", "stats", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "!=", "\"n_episodes\"", ":", "\n", "                ", "self", ".", "logger", ".", "log_stat", "(", "prefix", "+", "k", "+", "\"_mean\"", ",", "v", "/", "stats", "[", "\"n_episodes\"", "]", ",", "self", ".", "t_env", ")", "\n", "", "", "stats", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner._update_noise_returns": [[252, 274], ["zip", "int", "zip", "numpy.argmax", "parallel_runner.ParallelRunner.noise_returns[].append", "int", "numpy.argmax", "noise_won[].append"], "methods", ["None"], ["", "def", "_update_noise_returns", "(", "self", ",", "returns", ",", "noise", ",", "stats", ",", "test_mode", ")", ":", "\n", "        ", "for", "n", ",", "r", "in", "zip", "(", "noise", ",", "returns", ")", ":", "\n", "            ", "n", "=", "int", "(", "np", ".", "argmax", "(", "n", ")", ")", "\n", "if", "n", "in", "self", ".", "noise_returns", ":", "\n", "                ", "self", ".", "noise_returns", "[", "n", "]", ".", "append", "(", "r", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "noise_returns", "[", "n", "]", "=", "[", "r", "]", "\n", "", "", "if", "test_mode", ":", "\n", "            ", "noise_won", "=", "self", ".", "noise_test_won", "\n", "", "else", ":", "\n", "            ", "noise_won", "=", "self", ".", "noise_train_won", "\n", "\n", "", "if", "stats", "!=", "[", "]", "and", "\"battle_won\"", "in", "stats", "[", "0", "]", ":", "\n", "            ", "for", "n", ",", "info", "in", "zip", "(", "noise", ",", "stats", ")", ":", "\n", "                ", "if", "\"battle_won\"", "not", "in", "info", ":", "\n", "                    ", "continue", "\n", "", "bw", "=", "info", "[", "\"battle_won\"", "]", "\n", "n", "=", "int", "(", "np", ".", "argmax", "(", "n", ")", ")", "\n", "if", "n", "in", "noise_won", ":", "\n", "                    ", "noise_won", "[", "n", "]", ".", "append", "(", "bw", ")", "\n", "", "else", ":", "\n", "                    ", "noise_won", "[", "n", "]", "=", "[", "bw", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner._log_noise_returns": [[275, 303], ["parallel_runner.ParallelRunner.noise_returns.items", "parallel_runner.ParallelRunner.logger.log_stat", "len", "noise_won.items", "parallel_runner.ParallelRunner.logger.log_stat", "float", "max", "parallel_runner.ParallelRunner.logger.log_stat", "noise_won.keys", "float", "max", "parallel_runner.ParallelRunner.logger.log_stat", "numpy.mean", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat"], ["", "", "", "", "def", "_log_noise_returns", "(", "self", ",", "test_mode", ",", "test_uniform", ")", ":", "\n", "        ", "if", "test_mode", ":", "\n", "            ", "max_noise_return", "=", "-", "100000", "\n", "for", "n", ",", "rs", "in", "self", ".", "noise_returns", ".", "items", "(", ")", ":", "\n", "                ", "n_item", "=", "n", "\n", "r_mean", "=", "float", "(", "np", ".", "mean", "(", "rs", ")", ")", "\n", "max_noise_return", "=", "max", "(", "r_mean", ",", "max_noise_return", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"{}_noise_test_ret_u_{:1}\"", ".", "format", "(", "n_item", ",", "test_uniform", ")", ",", "r_mean", ",", "self", ".", "t_env", ")", "\n", "", "self", ".", "logger", ".", "log_stat", "(", "\"max_noise_test_ret_u_{:1}\"", ".", "format", "(", "test_uniform", ")", ",", "max_noise_return", ",", "self", ".", "t_env", ")", "\n", "\n", "", "noise_won", "=", "self", ".", "noise_test_won", "\n", "prefix", "=", "\"test\"", "\n", "if", "test_uniform", ":", "\n", "            ", "prefix", "+=", "\"_uni\"", "\n", "", "if", "not", "test_mode", ":", "\n", "            ", "noise_won", "=", "self", ".", "noise_train_won", "\n", "prefix", "=", "\"train\"", "\n", "", "if", "len", "(", "noise_won", ".", "keys", "(", ")", ")", ">", "0", ":", "\n", "            ", "max_test_won", "=", "0", "\n", "for", "n", ",", "rs", "in", "noise_won", ".", "items", "(", ")", ":", "\n", "                ", "n_item", "=", "n", "#int(np.argmax(n))", "\n", "r_mean", "=", "float", "(", "np", ".", "mean", "(", "rs", ")", ")", "\n", "max_test_won", "=", "max", "(", "r_mean", ",", "max_test_won", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "\"{}_noise_{}_won\"", ".", "format", "(", "n_item", ",", "prefix", ")", ",", "r_mean", ",", "self", ".", "t_env", ")", "\n", "", "self", ".", "logger", ".", "log_stat", "(", "\"max_noise_{}_won\"", ".", "format", "(", "prefix", ")", ",", "max_test_won", ",", "self", ".", "t_env", ")", "\n", "", "self", ".", "noise_returns", "=", "{", "}", "\n", "self", ".", "noise_test_won", "=", "{", "}", "\n", "self", ".", "noise_train_won", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.ParallelRunner.save_models": [[304, 307], ["parallel_runner.ParallelRunner.noise_distrib.save_model"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.bandits.returns_bandit.ReturnsBandit.save_model"], ["", "def", "save_models", "(", "self", ",", "path", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "noise_bandit", ":", "\n", "            ", "self", ".", "noise_distrib", ".", "save_model", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.CloudpickleWrapper.__init__": [[359, 361], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "x", ")", ":", "\n", "        ", "self", ".", "x", "=", "x", "\n", "", "def", "__getstate__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.CloudpickleWrapper.__getstate__": [[361, 364], ["cloudpickle.dumps"], "methods", ["None"], ["", "def", "__getstate__", "(", "self", ")", ":", "\n", "        ", "import", "cloudpickle", "\n", "return", "cloudpickle", ".", "dumps", "(", "self", ".", "x", ")", "\n", "", "def", "__setstate__", "(", "self", ",", "ob", ")", ":", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.CloudpickleWrapper.__setstate__": [[364, 367], ["pickle.loads"], "methods", ["None"], ["", "def", "__setstate__", "(", "self", ",", "ob", ")", ":", "\n", "        ", "import", "pickle", "\n", "self", ".", "x", "=", "pickle", ".", "loads", "(", "ob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.parallel_runner.env_worker": [[309, 353], ["env_fn.x", "remote.recv", "env_fn.x.step", "env_fn.x.get_state", "env_fn.x.get_avail_actions", "env_fn.x.get_obs", "remote.send", "env_fn.x.reset", "remote.send", "env_fn.x.close", "remote.close", "env_fn.x.get_state", "env_fn.x.get_avail_actions", "env_fn.x.get_obs", "remote.send", "env_fn.x.get_env_info", "remote.send", "env_fn.x.get_stats", "env_fn.x.close_corridor", "env_fn.x.open_bunker"], "function", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_state", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_actions", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.reset", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.close", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.close", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_state", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_actions", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.get_env_info", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_stats", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.close_corridor", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.open_bunker"], ["", "", "", "def", "env_worker", "(", "remote", ",", "env_fn", ")", ":", "\n", "# Make environment", "\n", "    ", "env", "=", "env_fn", ".", "x", "(", ")", "\n", "while", "True", ":", "\n", "        ", "cmd", ",", "data", "=", "remote", ".", "recv", "(", ")", "\n", "if", "cmd", "==", "\"step\"", ":", "\n", "            ", "actions", "=", "data", "\n", "# Take a step in the environment", "\n", "reward", ",", "terminated", ",", "env_info", "=", "env", ".", "step", "(", "actions", ")", "\n", "# Return the observations, avail_actions and state to make the next action", "\n", "state", "=", "env", ".", "get_state", "(", ")", "\n", "avail_actions", "=", "env", ".", "get_avail_actions", "(", ")", "\n", "obs", "=", "env", ".", "get_obs", "(", ")", "\n", "remote", ".", "send", "(", "{", "\n", "# Data for the next timestep needed to pick an action", "\n", "\"state\"", ":", "state", ",", "\n", "\"avail_actions\"", ":", "avail_actions", ",", "\n", "\"obs\"", ":", "obs", ",", "\n", "# Rest of the data for the current timestep", "\n", "\"reward\"", ":", "reward", ",", "\n", "\"terminated\"", ":", "terminated", ",", "\n", "\"info\"", ":", "env_info", "\n", "}", ")", "\n", "", "elif", "cmd", "==", "\"reset\"", ":", "\n", "            ", "env", ".", "reset", "(", ")", "\n", "remote", ".", "send", "(", "{", "\n", "\"state\"", ":", "env", ".", "get_state", "(", ")", ",", "\n", "\"avail_actions\"", ":", "env", ".", "get_avail_actions", "(", ")", ",", "\n", "\"obs\"", ":", "env", ".", "get_obs", "(", ")", "\n", "}", ")", "\n", "", "elif", "cmd", "==", "\"close\"", ":", "\n", "            ", "env", ".", "close", "(", ")", "\n", "remote", ".", "close", "(", ")", "\n", "break", "\n", "", "elif", "cmd", "==", "\"get_env_info\"", ":", "\n", "            ", "remote", ".", "send", "(", "env", ".", "get_env_info", "(", ")", ")", "\n", "", "elif", "cmd", "==", "\"get_stats\"", ":", "\n", "            ", "remote", ".", "send", "(", "env", ".", "get_stats", "(", ")", ")", "\n", "", "elif", "cmd", "==", "\"close_corridor\"", ":", "\n", "            ", "env", ".", "close_corridor", "(", ")", "\n", "", "elif", "cmd", "==", "\"avail_bunker\"", ":", "\n", "            ", "env", ".", "open_bunker", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.__init__": [[9, 28], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "logger", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "batch_size", "=", "self", ".", "args", ".", "batch_size_run", "\n", "assert", "self", ".", "batch_size", "==", "1", "\n", "\n", "self", ".", "env", "=", "env_REGISTRY", "[", "self", ".", "args", ".", "env", "]", "(", "env_args", "=", "self", ".", "args", ".", "env_args", ",", "args", "=", "args", ")", "\n", "self", ".", "episode_limit", "=", "self", ".", "env", ".", "episode_limit", "\n", "self", ".", "t", "=", "0", "\n", "\n", "self", ".", "t_env", "=", "0", "\n", "\n", "self", ".", "train_returns", "=", "[", "]", "\n", "self", ".", "test_returns", "=", "[", "]", "\n", "self", ".", "train_stats", "=", "{", "}", "\n", "self", ".", "test_stats", "=", "{", "}", "\n", "\n", "# Log the first run", "\n", "self", ".", "log_train_stats_t", "=", "-", "1000000", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.setup": [[29, 33], ["functools.partial"], "methods", ["None"], ["", "def", "setup", "(", "self", ",", "scheme", ",", "groups", ",", "preprocess", ",", "mac", ")", ":", "\n", "        ", "self", ".", "new_batch", "=", "partial", "(", "EpisodeBatch", ",", "scheme", ",", "groups", ",", "self", ".", "batch_size", ",", "self", ".", "episode_limit", "+", "1", ",", "\n", "preprocess", "=", "preprocess", ",", "device", "=", "self", ".", "args", ".", "device", ")", "\n", "self", ".", "mac", "=", "mac", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.get_env_info": [[34, 36], ["episode_runner.EpisodeRunner.env.get_env_info"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.get_env_info"], ["", "def", "get_env_info", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "get_env_info", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.save_replay": [[37, 39], ["episode_runner.EpisodeRunner.env.save_replay"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.save_replay"], ["", "def", "save_replay", "(", "self", ")", ":", "\n", "        ", "self", ".", "env", ".", "save_replay", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.close_env": [[40, 42], ["episode_runner.EpisodeRunner.env.close"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.close"], ["", "def", "close_env", "(", "self", ")", ":", "\n", "        ", "self", ".", "env", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.reset": [[43, 47], ["episode_runner.EpisodeRunner.new_batch", "episode_runner.EpisodeRunner.env.reset"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "batch", "=", "self", ".", "new_batch", "(", ")", "\n", "self", ".", "env", ".", "reset", "(", ")", "\n", "self", ".", "t", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.run": [[48, 114], ["episode_runner.EpisodeRunner.reset", "episode_runner.EpisodeRunner.mac.init_hidden", "episode_runner.EpisodeRunner.batch.update", "episode_runner.EpisodeRunner.mac.select_actions", "episode_runner.EpisodeRunner.batch.update", "cur_stats.update", "cur_returns.append", "episode_runner.EpisodeRunner.batch.update", "episode_runner.EpisodeRunner.mac.select_actions", "episode_runner.EpisodeRunner.env.step", "episode_runner.EpisodeRunner.batch.update", "cur_stats.get", "cur_stats.get", "episode_runner.EpisodeRunner._log", "episode_runner.EpisodeRunner.env.get_state", "episode_runner.EpisodeRunner.env.get_avail_actions", "episode_runner.EpisodeRunner.env.get_obs", "len", "episode_runner.EpisodeRunner._log", "hasattr", "episode_runner.EpisodeRunner.env.get_state", "episode_runner.EpisodeRunner.env.get_avail_actions", "episode_runner.EpisodeRunner.env.get_obs", "cur_stats.get", "env_info.get", "episode_runner.EpisodeRunner.logger.log_stat", "set", "set", "env_info.get"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner.reset", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.agents.ff_agent.FFAgent.init_hidden", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.select_actions", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.controllers.noise_controller.NoiseMAC.select_actions", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.step", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.components.episode_buffer.EpisodeBatch.update", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner._log", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_state", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_actions", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner._log", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_state", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_avail_actions", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.starcraft2.starcraft2.SC2.get_obs", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat"], ["", "def", "run", "(", "self", ",", "test_mode", "=", "False", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n", "terminated", "=", "False", "\n", "episode_return", "=", "0", "\n", "self", ".", "mac", ".", "init_hidden", "(", "batch_size", "=", "self", ".", "batch_size", ")", "\n", "\n", "while", "not", "terminated", ":", "\n", "\n", "            ", "pre_transition_data", "=", "{", "\n", "\"state\"", ":", "[", "self", ".", "env", ".", "get_state", "(", ")", "]", ",", "\n", "\"avail_actions\"", ":", "[", "self", ".", "env", ".", "get_avail_actions", "(", ")", "]", ",", "\n", "\"obs\"", ":", "[", "self", ".", "env", ".", "get_obs", "(", ")", "]", "\n", "}", "\n", "\n", "self", ".", "batch", ".", "update", "(", "pre_transition_data", ",", "ts", "=", "self", ".", "t", ")", "\n", "\n", "# Pass the entire batch of experiences up till now to the agents", "\n", "# Receive the actions for each agent at this timestep in a batch of size 1", "\n", "actions", "=", "self", ".", "mac", ".", "select_actions", "(", "self", ".", "batch", ",", "t_ep", "=", "self", ".", "t", ",", "t_env", "=", "self", ".", "t_env", ",", "test_mode", "=", "test_mode", ")", "\n", "\n", "reward", ",", "terminated", ",", "env_info", "=", "self", ".", "env", ".", "step", "(", "actions", "[", "0", "]", ")", "\n", "episode_return", "+=", "reward", "\n", "\n", "post_transition_data", "=", "{", "\n", "\"actions\"", ":", "actions", ",", "\n", "\"reward\"", ":", "[", "(", "reward", ",", ")", "]", ",", "\n", "\"terminated\"", ":", "[", "(", "terminated", "!=", "env_info", ".", "get", "(", "\"episode_limit\"", ",", "False", ")", ",", ")", "]", ",", "\n", "}", "\n", "\n", "self", ".", "batch", ".", "update", "(", "post_transition_data", ",", "ts", "=", "self", ".", "t", ")", "\n", "\n", "self", ".", "t", "+=", "1", "\n", "\n", "", "last_data", "=", "{", "\n", "\"state\"", ":", "[", "self", ".", "env", ".", "get_state", "(", ")", "]", ",", "\n", "\"avail_actions\"", ":", "[", "self", ".", "env", ".", "get_avail_actions", "(", ")", "]", ",", "\n", "\"obs\"", ":", "[", "self", ".", "env", ".", "get_obs", "(", ")", "]", "\n", "}", "\n", "self", ".", "batch", ".", "update", "(", "last_data", ",", "ts", "=", "self", ".", "t", ")", "\n", "\n", "# Select actions in the last stored state", "\n", "actions", "=", "self", ".", "mac", ".", "select_actions", "(", "self", ".", "batch", ",", "t_ep", "=", "self", ".", "t", ",", "t_env", "=", "self", ".", "t_env", ",", "test_mode", "=", "test_mode", ")", "\n", "self", ".", "batch", ".", "update", "(", "{", "\"actions\"", ":", "actions", "}", ",", "ts", "=", "self", ".", "t", ")", "\n", "\n", "cur_stats", "=", "self", ".", "test_stats", "if", "test_mode", "else", "self", ".", "train_stats", "\n", "cur_returns", "=", "self", ".", "test_returns", "if", "test_mode", "else", "self", ".", "train_returns", "\n", "log_prefix", "=", "\"test_\"", "if", "test_mode", "else", "\"\"", "\n", "cur_stats", ".", "update", "(", "{", "k", ":", "cur_stats", ".", "get", "(", "k", ",", "0", ")", "+", "env_info", ".", "get", "(", "k", ",", "0", ")", "for", "k", "in", "set", "(", "cur_stats", ")", "|", "set", "(", "env_info", ")", "}", ")", "\n", "cur_stats", "[", "\"n_episodes\"", "]", "=", "1", "+", "cur_stats", ".", "get", "(", "\"n_episodes\"", ",", "0", ")", "\n", "cur_stats", "[", "\"ep_length\"", "]", "=", "self", ".", "t", "+", "cur_stats", ".", "get", "(", "\"ep_length\"", ",", "0", ")", "\n", "\n", "if", "not", "test_mode", ":", "\n", "            ", "self", ".", "t_env", "+=", "self", ".", "t", "\n", "\n", "", "cur_returns", ".", "append", "(", "episode_return", ")", "\n", "\n", "if", "test_mode", "and", "(", "len", "(", "self", ".", "test_returns", ")", "==", "self", ".", "args", ".", "test_nepisode", ")", ":", "\n", "            ", "self", ".", "_log", "(", "cur_returns", ",", "cur_stats", ",", "log_prefix", ")", "\n", "", "elif", "self", ".", "t_env", "-", "self", ".", "log_train_stats_t", ">=", "self", ".", "args", ".", "runner_log_interval", ":", "\n", "            ", "self", ".", "_log", "(", "cur_returns", ",", "cur_stats", ",", "log_prefix", ")", "\n", "if", "hasattr", "(", "self", ".", "mac", ".", "action_selector", ",", "\"epsilon\"", ")", ":", "\n", "                ", "self", ".", "logger", ".", "log_stat", "(", "\"epsilon\"", ",", "self", ".", "mac", ".", "action_selector", ".", "epsilon", ",", "self", ".", "t_env", ")", "\n", "", "self", ".", "log_train_stats_t", "=", "self", ".", "t_env", "\n", "\n", "", "return", "self", ".", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.runners.episode_runner.EpisodeRunner._log": [[115, 124], ["episode_runner.EpisodeRunner.logger.log_stat", "episode_runner.EpisodeRunner.logger.log_stat", "returns.clear", "stats.items", "stats.clear", "numpy.mean", "numpy.std", "episode_runner.EpisodeRunner.logger.log_stat"], "methods", ["home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat", "home.repos.pwc.inspect_result.AnujMahajanOxf_MAVEN.utils.logging.Logger.log_stat"], ["", "def", "_log", "(", "self", ",", "returns", ",", "stats", ",", "prefix", ")", ":", "\n", "        ", "self", ".", "logger", ".", "log_stat", "(", "prefix", "+", "\"return_mean\"", ",", "np", ".", "mean", "(", "returns", ")", ",", "self", ".", "t_env", ")", "\n", "self", ".", "logger", ".", "log_stat", "(", "prefix", "+", "\"return_std\"", ",", "np", ".", "std", "(", "returns", ")", ",", "self", ".", "t_env", ")", "\n", "returns", ".", "clear", "(", ")", "\n", "\n", "for", "k", ",", "v", "in", "stats", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "!=", "\"n_episodes\"", ":", "\n", "                ", "self", ".", "logger", ".", "log_stat", "(", "prefix", "+", "k", "+", "\"_mean\"", ",", "v", "/", "stats", "[", "\"n_episodes\"", "]", ",", "self", ".", "t_env", ")", "\n", "", "", "stats", ".", "clear", "(", ")", "\n", "", "", ""]]}