{"home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_spatial_val.experiments.__init__": [[60, 62], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset_name", ")", ":", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_spatial_val.experiments.run_seed": [[63, 111], ["utils.load_dataset_signal_addr", "list", "tqdm.tqdm.tqdm", "utils.load_dataset_signal_addr.values", "range", "numpy.zeros", "numpy.zeros", "rich.progress.track", "numpy.mean", "numpy.mean", "utils.save_spatial_val_result", "range", "range", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "spatial_embedding.spatial_features().embedding", "sklearn.model_selection.KFold", "sklearn.model_selection.KFold.split", "data_train_addr.format", "data_test_addr.format", "label_train_addr.format", "label_test_addr.format", "model.spatial_information.spatial_info_stream", "numpy.mean", "numpy.mean", "spatial_embedding.spatial_features", "sklearn.metrics.accuracy_score", "sklearn.metrics.cohen_kappa_score", "numpy.argmax", "numpy.argmax"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_signal_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_spatial_val_result", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.embedding", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_information.spatial_info_stream"], ["", "def", "run_seed", "(", "self", ")", ":", "\n", "\n", "        ", "addr_dict", "=", "load_dataset_signal_addr", "(", "self", ".", "dataset_name", ")", "\n", "data_train_addr", ",", "data_test_addr", ",", "label_train_addr", ",", "label_test_addr", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "'''\n        Parameters search: rank of EEG\n        '''", "\n", "for", "rank_num", "in", "tqdm", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Channel_No'", "]", ")", ")", ":", "\n", "            ", "Fold_No", "=", "3", "\n", "val_acc_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Session_No'", "]", ",", "Fold_No", ")", ")", "\n", "val_kap_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Session_No'", "]", ",", "Fold_No", ")", ")", "\n", "\n", "for", "subject_num", "in", "track", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", "+", "1", ")", ")", ":", "\n", "                ", "for", "session_num", "in", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Session_No'", "]", "+", "1", ")", ":", "\n", "#____________________LOAD DATA____________________#", "\n", "                    ", "X_train", "=", "np", ".", "load", "(", "data_train_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "X_test", "=", "np", ".", "load", "(", "data_test_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "Y_train", "=", "np", ".", "load", "(", "label_train_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "Y_test", "=", "np", ".", "load", "(", "label_test_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "####################################################", "\n", "train_embed", ",", "test_embed", "=", "spatial_features", "(", "config", ",", "self", ".", "dataset_name", ",", "args", ".", "riemannian_dist", ",", "rank_num", ")", ".", "embedding", "(", "X_train", ",", "X_test", ")", "\n", "\n", "kfold", "=", "KFold", "(", "Fold_No", ",", "True", ",", "1", ")", "\n", "\n", "\n", "Fold_count", "=", "1", "\n", "train_label", "=", "Y_train", "\n", "\n", "for", "train_index", ",", "test_index", "in", "kfold", ".", "split", "(", "train_embed", ")", ":", "\n", "\n", "                        ", "X_train", ",", "X_val", ",", "Y_train", ",", "Y_val", "=", "train_embed", "[", "train_index", "]", ",", "train_embed", "[", "test_index", "]", ",", "train_label", "[", "train_index", "]", ",", "train_label", "[", "test_index", "]", "\n", "\n", "X_test", "=", "test_embed", "\n", "\n", "\n", "Y_pred", "=", "spatial_info_stream", "(", "X_train", ",", "X_val", ",", "X_test", ",", "Y_train", ",", "Y_val", ",", "Y_test", ",", "self", ".", "dataset_name", ",", "net_params", ")", "\n", "\n", "val_acc_mlp", "=", "np", ".", "mean", "(", "accuracy_score", "(", "Y_val", ",", "np", ".", "argmax", "(", "Y_pred", ",", "axis", "=", "-", "1", ")", ")", ")", "\n", "val_kap_mlp", "=", "np", ".", "mean", "(", "cohen_kappa_score", "(", "Y_val", ",", "np", ".", "argmax", "(", "Y_pred", ",", "axis", "=", "-", "1", ")", ")", ")", "\n", "\n", "val_acc_result", "[", "subject_num", "-", "1", ",", "session_num", "-", "1", ",", "Fold_No", "-", "1", "]", "=", "val_acc_mlp", "\n", "val_kap_result", "[", "subject_num", "-", "1", ",", "session_num", "-", "1", ",", "Fold_No", "-", "1", "]", "=", "val_kap_mlp", "\n", "\n", "Fold_count", "+=", "1", "\n", "\n", "", "", "", "val_acc_result", "=", "np", ".", "mean", "(", "val_acc_result", ",", "axis", "=", "2", ")", "\n", "val_kap_result", "=", "np", ".", "mean", "(", "val_kap_result", ",", "axis", "=", "2", ")", "\n", "save_spatial_val_result", "(", "self", ".", "dataset_name", ",", "val_acc_result", ",", "val_kap_result", ",", "rank_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_spatial_val.experiments.run_seed_vig": [[113, 195], ["utils.load_dataset_signal_addr", "list", "tqdm.tqdm.tqdm", "utils.load_dataset_signal_addr.values", "range", "numpy.zeros", "numpy.zeros", "rich.progress.track", "utils.save_spatial_val_result", "range", "numpy.load", "numpy.load", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "sklearn.model_selection.KFold", "sklearn.model_selection.KFold.split", "load_data_addr.format", "load_label_addr.format", "print", "sklearn.model_selection.KFold", "spatial_embedding.spatial_features().embedding", "numpy.zeros", "numpy.zeros", "sklearn.model_selection.KFold.split", "numpy.ravel", "numpy.ravel", "utils.root_mean_squared_error_numpy", "scipy.stats.pearsonr", "model.spatial_information.spatial_info_stream", "numpy.vstack", "numpy.vstack", "spatial_embedding.spatial_features"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_signal_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_spatial_val_result", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.embedding", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.root_mean_squared_error_numpy", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_information.spatial_info_stream"], ["", "", "def", "run_seed_vig", "(", "self", ")", ":", "\n", "\n", "        ", "addr_dict", "=", "load_dataset_signal_addr", "(", "self", ".", "dataset_name", ")", "\n", "load_data_addr", ",", "load_label_addr", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "\n", "val_Fold_No", "=", "3", "\n", "test_Fold_No", "=", "config", "[", "self", ".", "dataset_name", "]", "[", "'Fold_No'", "]", "\n", "\n", "for", "rank_num", "in", "tqdm", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Channel_No'", "]", ")", ")", ":", "\n", "            ", "val_rmse_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", ",", "val_Fold_No", ")", ")", "\n", "val_corr_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", ",", "val_Fold_No", ")", ")", "\n", "\n", "\n", "for", "subject_num", "in", "track", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", "+", "1", ")", ")", ":", "\n", "#____________________LOAD DATA____________________#", "\n", "                ", "X", "=", "np", ".", "load", "(", "load_data_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "Y", "=", "np", ".", "load", "(", "load_label_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "####################################################", "\n", "\n", "\n", "test_Fold_count", "=", "1", "\n", "\n", "Y_test_total", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ")", "\n", "Y_pred_total", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "\n", "rmse_array", "=", "np", ".", "zeros", "(", "(", "[", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", "]", ")", ")", "\n", "corr_array", "=", "np", ".", "zeros", "(", "(", "[", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", "]", ")", ")", "\n", "\n", "\n", "# kfold_test = KFold(test_Fold_No, True, 1)", "\n", "kfold_test", "=", "KFold", "(", "test_Fold_No", ",", "False", ",", "None", ")", "\n", "\n", "\n", "for", "train_index", ",", "test_index", "in", "kfold_test", ".", "split", "(", "X", ")", ":", "\n", "\n", "                    ", "print", "(", "\"KFold No.\"", ",", "test_Fold_count", ")", "\n", "\n", "X_train", ",", "X_test", ",", "Y_train", ",", "Y_test", "=", "X", "[", "train_index", "]", ",", "X", "[", "test_index", "]", ",", "Y", "[", "train_index", "]", ",", "Y", "[", "test_index", "]", "\n", "\n", "\n", "kfold_val", "=", "KFold", "(", "val_Fold_No", ",", "True", ",", "1", ")", "\n", "\n", "val_Fold_count", "=", "1", "\n", "train_label", "=", "Y_train", "\n", "\n", "train_embed", ",", "test_embed", "=", "spatial_features", "(", "config", ",", "self", ".", "dataset_name", ",", "args", ".", "riemannian_dist", ",", "rank_num", ")", ".", "embedding", "(", "X_train", ",", "X_test", ")", "\n", "\n", "\n", "Y_val_total", "=", "np", ".", "zeros", "(", "(", "0", ",", "1", ")", ")", "\n", "Y_pred_total", "=", "np", ".", "zeros", "(", "(", "0", ",", "1", ")", ")", "\n", "\n", "for", "train_index", ",", "test_index", "in", "kfold_val", ".", "split", "(", "train_embed", ")", ":", "\n", "\n", "                        ", "X_train", ",", "X_val", ",", "Y_train", ",", "Y_val", "=", "train_embed", "[", "train_index", "]", ",", "train_embed", "[", "test_index", "]", ",", "train_label", "[", "train_index", "]", ",", "train_label", "[", "test_index", "]", "\n", "\n", "X_test", "=", "test_embed", "\n", "\n", "Y_pred", "=", "spatial_info_stream", "(", "X_train", ",", "X_val", ",", "X_test", ",", "Y_train", ",", "Y_val", ",", "Y_test", ",", "self", ".", "dataset_name", ",", "net_params", ")", "\n", "\n", "\n", "temp_Y_val", "=", "Y_val", "\n", "temp_Y_pred", "=", "Y_pred", "\n", "\n", "Y_val_total", "=", "np", ".", "vstack", "(", "(", "Y_val_total", ",", "temp_Y_val", ")", ")", "\n", "Y_pred_total", "=", "np", ".", "vstack", "(", "(", "Y_pred_total", ",", "temp_Y_pred", ")", ")", "\n", "\n", "val_Fold_count", "+=", "1", "\n", "\n", "\n", "", "Y_val_total", "=", "np", ".", "ravel", "(", "Y_val_total", ")", "\n", "Y_pred_total", "=", "np", ".", "ravel", "(", "Y_pred_total", ")", "\n", "\n", "rmse_value", "=", "root_mean_squared_error_numpy", "(", "Y_val_total", ",", "Y_pred_total", ")", "# RMSE value for all 885 samples", "\n", "corcoeff_value", ",", "_", "=", "pearsonr", "(", "Y_val_total", ",", "Y_pred_total", ")", "\n", "\n", "test_Fold_count", "+=", "1", "\n", "\n", "", "", "rmse_array", "[", "subject_num", "-", "1", ",", "test_Fold_No", "-", "1", "]", "=", "rmse_value", "\n", "corr_array", "[", "subject_num", "-", "1", ",", "test_Fold_No", "-", "1", "]", "=", "corcoeff_value", "\n", "\n", "save_spatial_val_result", "(", "self", ".", "dataset_name", ",", "val_acc_result", ",", "val_kap_result", ",", "rank_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_spatial_val.experiments.run_bci": [[198, 263], ["utils.load_dataset_signal_addr", "list", "tqdm.tqdm.tqdm", "utils.load_dataset_signal_addr.values", "range", "numpy.zeros", "numpy.zeros", "rich.progress.track", "utils.save_spatial_val_result", "range", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "utils.parse_valid_data", "utils.parse_valid_data", "spatial_embedding.spatial_features().embedding", "sklearn.model_selection.KFold", "sklearn.model_selection.KFold.split", "data_train_addr.format", "label_train_addr.format", "data_test_addr.format", "label_test_addr.format", "numpy.expand_dims", "numpy.expand_dims", "model.spatial_information.spatial_info_stream", "numpy.mean", "numpy.mean", "spatial_embedding.spatial_features", "numpy.argmax", "numpy.round", "Y_val.squeeze.squeeze.squeeze", "sklearn.metrics.accuracy_score", "sklearn.metrics.cohen_kappa_score"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_signal_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_spatial_val_result", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.parse_valid_data", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.parse_valid_data", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.embedding", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_information.spatial_info_stream"], ["", "", "def", "run_bci", "(", "self", ")", ":", "\n", "\n", "        ", "addr_dict", "=", "load_dataset_signal_addr", "(", "self", ".", "dataset_name", ")", "\n", "\n", "data_train_addr", ",", "data_test_addr", ",", "label_train_addr", ",", "label_test_addr", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "\n", "'''\n        Parameters search: rank of EEG\n        '''", "\n", "\n", "for", "rank_num", "in", "tqdm", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Channel_No'", "]", "+", "1", ")", ")", ":", "\n", "\n", "            ", "Fold_No", "=", "5", "\n", "val_acc_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "Fold_No", ")", ")", "\n", "val_kap_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "Fold_No", ")", ")", "\n", "\n", "for", "subject_num", "in", "track", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", "+", "1", ")", ")", ":", "\n", "#____________________LOAD DATA____________________#", "\n", "                ", "X_train", "=", "np", ".", "load", "(", "data_train_addr", ".", "format", "(", "subject_num", ")", ")", "#  trials, frequency_band, channel, signal", "\n", "Y_train", "=", "np", ".", "load", "(", "label_train_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "X_test", "=", "np", ".", "load", "(", "data_test_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "Y_test", "=", "np", ".", "load", "(", "label_test_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "Y_train", "=", "np", ".", "expand_dims", "(", "Y_train", ",", "axis", "=", "1", ")", "-", "1", "#1,2,3,4 ---> 0,1,2,3", "\n", "Y_test", "=", "np", ".", "expand_dims", "(", "Y_test", ",", "axis", "=", "1", ")", "-", "1", "#1,2,3,4 ---> 0,1,2,3", "\n", "####################################################", "\n", "\n", "X_train", ",", "Y_train", "=", "parse_valid_data", "(", "X_train", ",", "Y_train", ")", "\n", "X_test", ",", "Y_test", "=", "parse_valid_data", "(", "X_test", ",", "Y_test", ")", "\n", "\n", "train_embed", ",", "test_embed", "=", "spatial_features", "(", "config", ",", "self", ".", "dataset_name", ",", "args", ".", "riemannian_dist", ",", "rank_num", ")", ".", "embedding", "(", "X_train", ",", "X_test", ")", "\n", "\n", "\n", "kfold", "=", "KFold", "(", "Fold_No", ",", "False", ",", "None", ")", "\n", "\n", "\n", "Fold_count", "=", "1", "\n", "train_label", "=", "Y_train", "\n", "\n", "for", "train_index", ",", "test_index", "in", "kfold", ".", "split", "(", "train_embed", ")", ":", "\n", "\n", "                    ", "X_train", ",", "X_val", ",", "Y_train", ",", "Y_val", "=", "train_embed", "[", "train_index", "]", ",", "train_embed", "[", "test_index", "]", ",", "train_label", "[", "train_index", "]", ",", "train_label", "[", "test_index", "]", "\n", "\n", "X_test", "=", "test_embed", "\n", "\n", "Y_pred", "=", "spatial_info_stream", "(", "X_train", ",", "X_val", ",", "X_test", ",", "Y_train", ",", "Y_val", ",", "Y_test", ",", "self", ".", "dataset_name", ",", "net_params", ")", "\n", "\n", "'''\n                    2a output label in one-hot form, 2b output label in range (0,1)\n                    '''", "\n", "if", "'2a'", "in", "self", ".", "dataset_name", ":", "\n", "                        ", "Y_pred", "=", "np", ".", "argmax", "(", "Y_pred", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "                        ", "Y_pred", "=", "np", ".", "round", "(", "Y_pred", ")", "\n", "Y_val", "=", "Y_val", ".", "squeeze", "(", "1", ")", "\n", "\n", "", "val_acc_mlp", "=", "np", ".", "mean", "(", "accuracy_score", "(", "Y_val", ",", "Y_pred", ")", ")", "\n", "val_kap_mlp", "=", "np", ".", "mean", "(", "cohen_kappa_score", "(", "Y_val", ",", "Y_pred", ")", ")", "\n", "\n", "\n", "val_acc_result", "[", "subject_num", "-", "1", ",", "Fold_count", "-", "1", "]", "=", "val_acc_mlp", "\n", "val_kap_result", "[", "subject_num", "-", "1", ",", "Fold_count", "-", "1", "]", "=", "val_kap_mlp", "\n", "\n", "Fold_count", "+=", "1", "\n", "\n", "", "", "save_spatial_val_result", "(", "self", ".", "dataset_name", ",", "val_acc_result", ",", "val_kap_result", ",", "rank_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_spatial_val.experiments.run": [[265, 275], ["main_spatial_val.experiments.run_bci", "main_spatial_val.experiments.run_seed", "main_spatial_val.experiments.run_seed_vig", "Exception"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_bci", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_seed", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_seed_vig"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "\n", "        ", "if", "'BCI'", "in", "self", ".", "dataset_name", ":", "\n", "            ", "self", ".", "run_bci", "(", ")", "\n", "", "elif", "self", ".", "dataset_name", "==", "'SEED'", ":", "\n", "            ", "self", ".", "run_seed", "(", ")", "\n", "", "elif", "self", ".", "dataset_name", "==", "'SEED_VIG'", ":", "\n", "            ", "self", ".", "run_seed_vig", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Datasets Name Error'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_spatial_val.load_config": [[49, 54], ["open", "yaml.safe_load", "os.path.join"], "function", ["None"], ["def", "load_config", "(", "name", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "sys", ".", "path", "[", "0", "]", ",", "name", ")", ")", "as", "file", ":", "\n", "        ", "config", "=", "yaml", ".", "safe_load", "(", "file", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main.experiments.__init__": [[59, 61], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset_name", ")", ":", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main.experiments.run_seed": [[67, 109], ["utils.load_dataset_signal_addr", "list", "utils.load_dataset_feature_addr", "list", "numpy.zeros", "numpy.zeros", "rich.progress.track", "numpy.mean", "numpy.mean", "utils.save_test_result", "utils.load_dataset_feature_addr.values", "utils.load_dataset_feature_addr.values", "range", "range", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "spatial_embedding.spatial_features().embedding", "model.spatial_temporal_information.spatial_temporal_info_stream", "numpy.mean", "numpy.mean", "signal_train_addr.format", "signal_test_addr.format", "features_train_addr.format", "features_test_addr.format", "label_train_addr.format", "label_test_addr.format", "sklearn.metrics.accuracy_score", "sklearn.metrics.cohen_kappa_score", "spatial_embedding.spatial_features", "numpy.argmax", "numpy.argmax"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_signal_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_feature_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_test_result", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.embedding", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.spatial_temporal_info_stream"], ["def", "run_seed", "(", "self", ")", ":", "\n", "        ", "'''\n        Address of filtered EEG in each frequency band and extracted features (DE, PSD)\n        '''", "\n", "addr_dict", "=", "load_dataset_signal_addr", "(", "self", ".", "dataset_name", ")", "\n", "signal_train_addr", ",", "signal_test_addr", ",", "label_train_addr", ",", "label_test_addr", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "\n", "addr_dict", "=", "load_dataset_feature_addr", "(", "self", ".", "dataset_name", ")", "\n", "features_train_addr", ",", "features_test_addr", ",", "_", ",", "_", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "\n", "\n", "test_acc_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Session_No'", "]", ")", ")", "\n", "test_kap_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Session_No'", "]", ")", ")", "\n", "\n", "\n", "for", "subject_num", "in", "track", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", "+", "1", ")", ")", ":", "\n", "            ", "for", "session_num", "in", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Session_No'", "]", "+", "1", ")", ":", "\n", "#____________________LOAD DATA____________________#", "\n", "                ", "X_train_signal", "=", "np", ".", "load", "(", "signal_train_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "X_test_signal", "=", "np", ".", "load", "(", "signal_test_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "X_train_features", "=", "np", ".", "load", "(", "features_train_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "X_test_features", "=", "np", ".", "load", "(", "features_test_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "Y_train", "=", "np", ".", "load", "(", "label_train_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "Y_test", "=", "np", ".", "load", "(", "label_test_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "####################################################", "\n", "\n", "\n", "train_embed", ",", "test_embed", "=", "spatial_features", "(", "config", ",", "self", ".", "dataset_name", ",", "args", ".", "riemannian_dist", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'params'", "]", "[", "'Rank_No'", "]", ")", ".", "embedding", "(", "X_train_signal", ",", "X_test_signal", ")", "\n", "\n", "Y_pred", "=", "spatial_temporal_info_stream", "(", "train_embed", ",", "test_embed", ",", "X_train_features", ",", "X_test_features", ",", "Y_train", ",", "Y_test", ",", "seld", ".", "dataset_name", ",", "net_params", ")", "\n", "\n", "test_acc_mlp", "=", "np", ".", "mean", "(", "accuracy_score", "(", "Y_test", ",", "np", ".", "argmax", "(", "Y_pred", ",", "axis", "=", "-", "1", ")", ")", ")", "\n", "test_kap_mlp", "=", "np", ".", "mean", "(", "cohen_kappa_score", "(", "Y_test", ",", "np", ".", "argmax", "(", "Y_pred", ",", "axis", "=", "-", "1", ")", ")", ")", "\n", "\n", "test_acc_result", "[", "subject_num", "-", "1", ",", "session_num", "-", "1", "]", "=", "test_acc_mlp", "\n", "test_kap_result", "[", "subject_num", "-", "1", ",", "session_num", "-", "1", "]", "=", "test_kap_mlp", "\n", "\n", "\n", "", "", "test_acc_result", "=", "np", ".", "mean", "(", "test_acc_result", ",", "axis", "=", "2", ")", "\n", "test_kap_result", "=", "np", ".", "mean", "(", "test_kap_result", ",", "axis", "=", "2", ")", "\n", "\n", "save_test_result", "(", "self", ".", "dataset_name", ",", "test_acc_result", ",", "test_kap_result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main.experiments.run_seed_vig": [[111, 184], ["utils.load_dataset_signal_addr", "list", "utils.load_dataset_feature_addr", "list", "numpy.zeros", "numpy.zeros", "rich.progress.track", "utils.load_dataset_feature_addr.values", "utils.load_dataset_feature_addr.values", "range", "numpy.load", "numpy.load", "numpy.load", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "sklearn.model_selection.KFold", "numpy.zeros", "numpy.zeros", "sklearn.model_selection.KFold.split", "numpy.ravel", "numpy.ravel", "print", "utils.root_mean_squared_error_numpy", "scipy.stats.pearsonr", "utils.save_test_result", "signal_addr.format", "features_addr.format", "label_addr.format", "print", "spatial_embedding.spatial_features().embedding", "model.spatial_temporal_information.spatial_temporal_info_stream", "numpy.vstack", "numpy.vstack", "spatial_embedding.spatial_features"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_signal_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_feature_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.root_mean_squared_error_numpy", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_test_result", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.embedding", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.spatial_temporal_info_stream"], ["", "def", "run_seed_vig", "(", "self", ")", ":", "\n", "        ", "'''\n        Address of filtered EEG in each frequency band and extracted features (DE, PSD)\n        '''", "\n", "addr_dict", "=", "load_dataset_signal_addr", "(", "self", ".", "dataset_name", ")", "\n", "signal_addr", ",", "label_addr", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "\n", "addr_dict", "=", "load_dataset_feature_addr", "(", "self", ".", "dataset_name", ")", "\n", "features_addr", ",", "_", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "\n", "\n", "test_Fold_No", "=", "config", "[", "self", ".", "dataset_name", "]", "[", "'Fold_No'", "]", "\n", "test_rmse_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", ")", ")", "\n", "test_corr_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", ")", ")", "\n", "\n", "\n", "for", "subject_num", "in", "track", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", "+", "1", ")", ")", ":", "\n", "#____________________LOAD DATA____________________#", "\n", "            ", "X_signal", "=", "np", ".", "load", "(", "signal_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "X_features", "=", "np", ".", "load", "(", "features_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "Y", "=", "np", ".", "load", "(", "label_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "####################################################", "\n", "\n", "test_Fold_count", "=", "1", "\n", "\n", "Y_test_total", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ")", "\n", "Y_pred_total", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "\n", "rmse_array", "=", "np", ".", "zeros", "(", "(", "[", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", "]", ")", ")", "\n", "corr_array", "=", "np", ".", "zeros", "(", "(", "[", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", "]", ")", ")", "\n", "\n", "\n", "kfold_test", "=", "KFold", "(", "test_Fold_No", ",", "True", ",", "1", ")", "\n", "# kfold_test = KFold(Fold_No_test, False, None)", "\n", "\n", "\n", "Y_test_total", "=", "np", ".", "zeros", "(", "(", "0", ",", "1", ")", ")", "\n", "Y_pred_total", "=", "np", ".", "zeros", "(", "(", "0", ",", "1", ")", ")", "\n", "\n", "for", "train_index", ",", "test_index", "in", "kfold_test", ".", "split", "(", "X_signal", ")", ":", "\n", "\n", "                ", "print", "(", "\"KFold No.\"", ",", "test_Fold_count", ")", "\n", "\n", "X_train_signal", ",", "X_test_signal", ",", "X_train_features", ",", "X_test_features", ",", "Y_train", ",", "Y_test", "=", "X_signal", "[", "train_index", "]", ",", "X_signal", "[", "test_index", "]", ",", "X_features", "[", "train_index", "]", ",", "X_features", "[", "test_index", "]", ",", "Y", "[", "train_index", "]", ",", "Y", "[", "test_index", "]", "\n", "\n", "\n", "train_embed", ",", "test_embed", "=", "spatial_features", "(", "config", ",", "self", ".", "dataset_name", ",", "args", ".", "riemannian_dist", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'params'", "]", "[", "'Rank_No'", "]", ")", ".", "embedding", "(", "X_train_signal", ",", "X_test_signal", ")", "\n", "\n", "\n", "Y_pred", "=", "spatial_temporal_info_stream", "(", "train_embed", ",", "test_embed", ",", "X_train_features", ",", "X_test_features", ",", "Y_train", ",", "Y_test", ",", "self", ".", "dataset_name", ",", "net_params", ")", "\n", "\n", "\n", "temp_Y_test", "=", "Y_test", "\n", "temp_Y_pred", "=", "Y_pred", "\n", "\n", "Y_test_total", "=", "np", ".", "vstack", "(", "(", "Y_test_total", ",", "temp_Y_test", ")", ")", "\n", "Y_pred_total", "=", "np", ".", "vstack", "(", "(", "Y_pred_total", ",", "temp_Y_pred", ")", ")", "\n", "\n", "", "Y_test_total", "=", "np", ".", "ravel", "(", "Y_test_total", ")", "\n", "Y_pred_total", "=", "np", ".", "ravel", "(", "Y_pred_total", ")", "\n", "print", "(", "Y_test_total", ".", "shape", ",", "Y_pred_total", ".", "shape", ")", "\n", "test_Fold_count", "+=", "1", "\n", "\n", "\n", "rmse_value", "=", "root_mean_squared_error_numpy", "(", "Y_test_total", ",", "Y_pred_total", ")", "# RMSE value for all 885 samples", "\n", "corcoeff_value", ",", "_", "=", "pearsonr", "(", "Y_test_total", ",", "Y_pred_total", ")", "\n", "\n", "\n", "rmse_array", "[", "subject_num", "-", "1", ",", "test_Fold_No", "-", "1", "]", "=", "rmse_value", "\n", "corr_array", "[", "subject_num", "-", "1", ",", "test_Fold_No", "-", "1", "]", "=", "corcoeff_value", "\n", "\n", "save_test_result", "(", "self", ".", "dataset_name", ",", "test_acc_result", ",", "test_kap_result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main.experiments.run_bci": [[187, 244], ["utils.load_dataset_signal_addr", "list", "utils.load_dataset_feature_addr", "list", "numpy.zeros", "numpy.zeros", "rich.progress.track", "utils.load_dataset_feature_addr.values", "utils.load_dataset_feature_addr.values", "range", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "utils.parse_valid_data_all", "utils.parse_valid_data_all", "spatial_embedding.spatial_features().embedding", "model.spatial_temporal_information.spatial_temporal_info_stream", "numpy.mean", "numpy.mean", "utils.save_test_result", "signal_train_addr.format", "signal_test_addr.format", "features_train_addr.format", "features_test_addr.format", "label_train_addr.format", "label_test_addr.format", "numpy.expand_dims", "numpy.expand_dims", "numpy.argmax", "numpy.round", "Y_test.squeeze.squeeze.squeeze", "sklearn.metrics.accuracy_score", "sklearn.metrics.cohen_kappa_score", "spatial_embedding.spatial_features"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_signal_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_feature_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.parse_valid_data_all", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.parse_valid_data_all", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.embedding", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.spatial_temporal_info_stream", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_test_result"], ["", "", "def", "run_bci", "(", "self", ")", ":", "\n", "\n", "        ", "'''\n        Address of filtered EEG in each frequency band and extracted features (DE, PSD)\n        '''", "\n", "addr_dict", "=", "load_dataset_signal_addr", "(", "self", ".", "dataset_name", ")", "\n", "signal_train_addr", ",", "signal_test_addr", ",", "label_train_addr", ",", "label_test_addr", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "\n", "addr_dict", "=", "load_dataset_feature_addr", "(", "self", ".", "dataset_name", ")", "\n", "features_train_addr", ",", "features_test_addr", ",", "_", ",", "_", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "\n", "\n", "test_acc_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ")", ")", "\n", "test_kap_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ")", ")", "\n", "\n", "\n", "\n", "for", "subject_num", "in", "track", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", "+", "1", ")", ")", ":", "\n", "# for subject_num in track(range(1, 2)):", "\n", "\n", "#____________________LOAD DATA____________________#", "\n", "            ", "X_train_signal", "=", "np", ".", "load", "(", "signal_train_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "X_test_signal", "=", "np", ".", "load", "(", "signal_test_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "X_train_features", "=", "np", ".", "load", "(", "features_train_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "X_test_features", "=", "np", ".", "load", "(", "features_test_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "Y_train", "=", "np", ".", "load", "(", "label_train_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "Y_test", "=", "np", ".", "load", "(", "label_test_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "Y_train", "=", "np", ".", "expand_dims", "(", "Y_train", ",", "axis", "=", "1", ")", "-", "1", "#1,2,3,4 ---> 0,1,2,3", "\n", "Y_test", "=", "np", ".", "expand_dims", "(", "Y_test", ",", "axis", "=", "1", ")", "-", "1", "#1,2,3,4 ---> 0,1,2,3", "\n", "####################################################", "\n", "\n", "X_train_signal", ",", "X_train_features", ",", "Y_train", "=", "parse_valid_data_all", "(", "X_train_signal", ",", "X_train_features", ",", "Y_train", ")", "\n", "X_test_signal", ",", "X_test_features", ",", "Y_test", "=", "parse_valid_data_all", "(", "X_test_signal", ",", "X_test_features", ",", "Y_test", ")", "\n", "\n", "train_embed", ",", "test_embed", "=", "spatial_features", "(", "config", ",", "self", ".", "dataset_name", ",", "args", ".", "riemannian_dist", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'params'", "]", "[", "'Rank_No'", "]", ")", ".", "embedding", "(", "X_train_signal", ",", "X_test_signal", ")", "\n", "\n", "\n", "Y_pred", "=", "spatial_temporal_info_stream", "(", "train_embed", ",", "test_embed", ",", "X_train_features", ",", "X_test_features", ",", "Y_train", ",", "Y_test", ",", "self", ".", "dataset_name", ",", "net_params", ")", "\n", "\n", "\n", "'''\n            2a output label in one-hot form, 2b output label in range (0,1)\n            '''", "\n", "if", "'2a'", "in", "self", ".", "dataset_name", ":", "\n", "                ", "Y_pred", "=", "np", ".", "argmax", "(", "Y_pred", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "Y_pred", "=", "np", ".", "round", "(", "Y_pred", ")", "\n", "Y_test", "=", "Y_test", ".", "squeeze", "(", "1", ")", "\n", "\n", "", "test_acc_mlp", "=", "np", ".", "mean", "(", "accuracy_score", "(", "Y_test", ",", "Y_pred", ")", ")", "\n", "test_kap_mlp", "=", "np", ".", "mean", "(", "cohen_kappa_score", "(", "Y_test", ",", "Y_pred", ")", ")", "\n", "\n", "\n", "test_acc_result", "[", "subject_num", "-", "1", "]", "=", "test_acc_mlp", "\n", "test_kap_result", "[", "subject_num", "-", "1", "]", "=", "test_kap_mlp", "\n", "\n", "save_test_result", "(", "self", ".", "dataset_name", ",", "test_acc_result", ",", "test_kap_result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main.experiments.run": [[246, 256], ["main.experiments.run_bci", "main.experiments.run_seed", "main.experiments.run_seed_vig", "Exception"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_bci", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_seed", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_seed_vig"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "\n", "        ", "if", "'BCI'", "in", "self", ".", "dataset_name", ":", "\n", "            ", "self", ".", "run_bci", "(", ")", "\n", "", "elif", "self", ".", "dataset_name", "==", "'SEED'", ":", "\n", "            ", "self", ".", "run_seed", "(", ")", "\n", "", "elif", "self", ".", "dataset_name", "==", "'SEED_VIG'", ":", "\n", "            ", "self", ".", "run_seed_vig", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Datasets Name Error'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main.load_config": [[46, 51], ["open", "yaml.safe_load", "os.path.join"], "function", ["None"], ["def", "load_config", "(", "name", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "sys", ".", "path", "[", "0", "]", ",", "name", ")", ")", "as", "file", ":", "\n", "        ", "config", "=", "yaml", ".", "safe_load", "(", "file", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.__init__": [[59, 61], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset_name", ")", ":", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_seed": [[62, 110], ["utils.load_dataset_feature_addr", "list", "numpy.zeros", "numpy.zeros", "rich.progress.track", "numpy.mean", "numpy.mean", "utils.save_temporal_val_result", "utils.load_dataset_feature_addr.values", "range", "range", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "sklearn.model_selection.KFold", "sklearn.model_selection.KFold.split", "data_train_addr.format", "data_test_addr.format", "label_train_addr.format", "label_test_addr.format", "model.temporal_information.temporal_info_stream", "numpy.mean", "numpy.mean", "sklearn.metrics.accuracy_score", "sklearn.metrics.cohen_kappa_score", "numpy.argmax", "numpy.argmax"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_feature_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_temporal_val_result", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.temporal_information.temporal_info_stream"], ["", "def", "run_seed", "(", "self", ")", ":", "\n", "\n", "        ", "addr_dict", "=", "load_dataset_feature_addr", "(", "self", ".", "dataset_name", ")", "\n", "data_train_addr", ",", "data_test_addr", ",", "label_train_addr", ",", "label_test_addr", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "'''\n        Parameters search: rank of EEG\n        '''", "\n", "\n", "Fold_No", "=", "3", "\n", "val_acc_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Session_No'", "]", ",", "Fold_No", ")", ")", "\n", "val_kap_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Session_No'", "]", ",", "Fold_No", ")", ")", "\n", "\n", "for", "subject_num", "in", "track", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", "+", "1", ")", ")", ":", "\n", "            ", "for", "session_num", "in", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Session_No'", "]", "+", "1", ")", ":", "\n", "#____________________LOAD DATA____________________#", "\n", "                ", "X_train", "=", "np", ".", "load", "(", "data_train_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "X_test", "=", "np", ".", "load", "(", "data_test_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "Y_train", "=", "np", ".", "load", "(", "label_train_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "Y_test", "=", "np", ".", "load", "(", "label_test_addr", ".", "format", "(", "subject_num", ",", "session_num", ")", ")", "\n", "####################################################", "\n", "train_embed", ",", "train_label", "=", "X_train", ",", "Y_train", "\n", "\n", "\n", "kfold", "=", "KFold", "(", "Fold_No", ",", "True", ",", "1", ")", "\n", "\n", "\n", "Fold_count", "=", "1", "\n", "train_label", "=", "Y_train", "\n", "\n", "for", "train_index", ",", "test_index", "in", "kfold", ".", "split", "(", "train_embed", ")", ":", "\n", "\n", "                    ", "X_train", ",", "X_val", ",", "Y_train", ",", "Y_val", "=", "train_embed", "[", "train_index", "]", ",", "train_embed", "[", "test_index", "]", ",", "train_label", "[", "train_index", "]", ",", "train_label", "[", "test_index", "]", "\n", "\n", "\n", "Y_pred", "=", "temporal_info_stream", "(", "X_train", ",", "X_val", ",", "X_test", ",", "Y_train", ",", "Y_val", ",", "Y_test", ",", "self", ".", "dataset_name", ",", "net_params", ")", "\n", "\n", "val_acc_mlp", "=", "np", ".", "mean", "(", "accuracy_score", "(", "Y_val", ",", "np", ".", "argmax", "(", "Y_pred", ",", "axis", "=", "-", "1", ")", ")", ")", "\n", "val_kap_mlp", "=", "np", ".", "mean", "(", "cohen_kappa_score", "(", "Y_val", ",", "np", ".", "argmax", "(", "Y_pred", ",", "axis", "=", "-", "1", ")", ")", ")", "\n", "\n", "val_acc_result", "[", "subject_num", "-", "1", ",", "session_num", "-", "1", ",", "Fold_No", "-", "1", "]", "=", "val_acc_mlp", "\n", "val_kap_result", "[", "subject_num", "-", "1", ",", "session_num", "-", "1", ",", "Fold_No", "-", "1", "]", "=", "val_kap_mlp", "\n", "\n", "Fold_count", "+=", "1", "\n", "\n", "", "", "", "val_acc_result", "=", "np", ".", "mean", "(", "val_acc_result", ",", "axis", "=", "2", ")", "\n", "val_kap_result", "=", "np", ".", "mean", "(", "val_kap_result", ",", "axis", "=", "2", ")", "\n", "\n", "save_temporal_val_result", "(", "self", ".", "dataset_name", ",", "val_acc_result", ",", "val_kap_result", ",", "args", ".", "BiLSTM", ",", "args", ".", "layer_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_seed_vig": [[113, 195], ["utils.load_dataset_feature_addr", "list", "numpy.zeros", "numpy.zeros", "rich.progress.track", "utils.save_temporal_val_result", "utils.load_dataset_feature_addr.values", "range", "numpy.load", "numpy.load", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "sklearn.model_selection.KFold", "sklearn.model_selection.KFold.split", "load_data_addr.format", "load_label_addr.format", "print", "sklearn.model_selection.KFold", "numpy.zeros", "numpy.zeros", "sklearn.model_selection.KFold.split", "numpy.ravel", "numpy.ravel", "utils.root_mean_squared_error_numpy", "scipy.stats.pearsonr", "model.temporal_information.temporal_info_stream", "numpy.vstack", "numpy.vstack"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_feature_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_temporal_val_result", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.root_mean_squared_error_numpy", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.temporal_information.temporal_info_stream"], ["", "def", "run_seed_vig", "(", "self", ")", ":", "\n", "\n", "        ", "addr_dict", "=", "load_dataset_feature_addr", "(", "self", ".", "dataset_name", ")", "\n", "load_data_addr", ",", "load_label_addr", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "\n", "val_Fold_No", "=", "3", "\n", "test_Fold_No", "=", "config", "[", "self", ".", "dataset_name", "]", "[", "'Fold_No'", "]", "\n", "\n", "\n", "val_rmse_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", ",", "val_Fold_No", ")", ")", "\n", "val_corr_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", ",", "val_Fold_No", ")", ")", "\n", "\n", "\n", "for", "subject_num", "in", "track", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", "+", "1", ")", ")", ":", "\n", "#____________________LOAD DATA____________________#", "\n", "            ", "X", "=", "np", ".", "load", "(", "load_data_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "Y", "=", "np", ".", "load", "(", "load_label_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "####################################################", "\n", "\n", "\n", "test_Fold_count", "=", "1", "\n", "\n", "Y_test_total", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ")", "\n", "Y_pred_total", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "\n", "rmse_array", "=", "np", ".", "zeros", "(", "(", "[", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", "]", ")", ")", "\n", "corr_array", "=", "np", ".", "zeros", "(", "(", "[", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "test_Fold_No", "]", ")", ")", "\n", "\n", "\n", "# kfold_test = KFold(test_Fold_No, True, 1)", "\n", "kfold_test", "=", "KFold", "(", "test_Fold_No", ",", "False", ",", "None", ")", "\n", "\n", "\n", "for", "train_index", ",", "test_index", "in", "kfold_test", ".", "split", "(", "X", ")", ":", "\n", "\n", "                ", "print", "(", "\"KFold No.\"", ",", "test_Fold_count", ")", "\n", "\n", "X_train", ",", "X_test", ",", "Y_train", ",", "Y_test", "=", "X", "[", "train_index", "]", ",", "X", "[", "test_index", "]", ",", "Y", "[", "train_index", "]", ",", "Y", "[", "test_index", "]", "\n", "\n", "\n", "kfold_val", "=", "KFold", "(", "val_Fold_No", ",", "True", ",", "1", ")", "\n", "\n", "val_Fold_count", "=", "1", "\n", "\n", "train_embed", ",", "train_label", "=", "X_train", ",", "Y_train", "\n", "\n", "\n", "\n", "Y_val_total", "=", "np", ".", "zeros", "(", "(", "0", ",", "1", ")", ")", "\n", "Y_pred_total", "=", "np", ".", "zeros", "(", "(", "0", ",", "1", ")", ")", "\n", "\n", "for", "train_index", ",", "test_index", "in", "kfold_val", ".", "split", "(", "train_embed", ")", ":", "\n", "\n", "                    ", "X_train", ",", "X_val", ",", "Y_train", ",", "Y_val", "=", "train_embed", "[", "train_index", "]", ",", "train_embed", "[", "test_index", "]", ",", "train_label", "[", "train_index", "]", ",", "train_label", "[", "test_index", "]", "\n", "\n", "\n", "Y_pred", "=", "temporal_info_stream", "(", "X_train", ",", "X_val", ",", "X_test", ",", "Y_train", ",", "Y_val", ",", "Y_test", ",", "self", ".", "dataset_name", ",", "net_params", ")", "\n", "\n", "\n", "temp_Y_val", "=", "Y_val", "\n", "temp_Y_pred", "=", "Y_pred", "\n", "\n", "Y_val_total", "=", "np", ".", "vstack", "(", "(", "Y_val_total", ",", "temp_Y_val", ")", ")", "\n", "Y_pred_total", "=", "np", ".", "vstack", "(", "(", "Y_pred_total", ",", "temp_Y_pred", ")", ")", "\n", "\n", "val_Fold_count", "+=", "1", "\n", "\n", "\n", "", "Y_val_total", "=", "np", ".", "ravel", "(", "Y_val_total", ")", "\n", "Y_pred_total", "=", "np", ".", "ravel", "(", "Y_pred_total", ")", "\n", "\n", "rmse_value", "=", "root_mean_squared_error_numpy", "(", "Y_val_total", ",", "Y_pred_total", ")", "# RMSE value for all 885 samples", "\n", "corcoeff_value", ",", "_", "=", "pearsonr", "(", "Y_val_total", ",", "Y_pred_total", ")", "\n", "\n", "test_Fold_count", "+=", "1", "\n", "\n", "", "", "rmse_array", "[", "subject_num", "-", "1", ",", "test_Fold_No", "-", "1", "]", "=", "rmse_value", "\n", "corr_array", "[", "subject_num", "-", "1", ",", "test_Fold_No", "-", "1", "]", "=", "corcoeff_value", "\n", "\n", "\n", "save_temporal_val_result", "(", "self", ".", "dataset_name", ",", "val_acc_result", ",", "val_kap_result", ",", "args", ".", "BiLSTM", ",", "args", ".", "layer_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_bci": [[198, 261], ["utils.load_dataset_feature_addr", "list", "numpy.zeros", "numpy.zeros", "rich.progress.track", "utils.load_dataset_feature_addr.values", "range", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "utils.parse_valid_data", "utils.parse_valid_data", "sklearn.model_selection.KFold", "sklearn.model_selection.KFold.split", "utils.save_temporal_val_result", "data_train_addr.format", "label_train_addr.format", "data_test_addr.format", "label_test_addr.format", "numpy.expand_dims", "numpy.expand_dims", "model.temporal_information.temporal_info_stream", "numpy.mean", "numpy.mean", "numpy.argmax", "numpy.round", "Y_val.squeeze.squeeze.squeeze", "sklearn.metrics.accuracy_score", "sklearn.metrics.cohen_kappa_score"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_feature_addr", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.parse_valid_data", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.parse_valid_data", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_temporal_val_result", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.temporal_information.temporal_info_stream"], ["", "def", "run_bci", "(", "self", ")", ":", "\n", "\n", "        ", "addr_dict", "=", "load_dataset_feature_addr", "(", "self", ".", "dataset_name", ")", "\n", "\n", "data_train_addr", ",", "data_test_addr", ",", "label_train_addr", ",", "label_test_addr", "=", "list", "(", "addr_dict", ".", "values", "(", ")", ")", "\n", "\n", "'''\n        Parameters search: rank of EEG\n        '''", "\n", "\n", "Fold_No", "=", "5", "\n", "val_acc_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "Fold_No", ")", ")", "\n", "val_kap_result", "=", "np", ".", "zeros", "(", "(", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", ",", "Fold_No", ")", ")", "\n", "\n", "for", "subject_num", "in", "track", "(", "range", "(", "1", ",", "config", "[", "self", ".", "dataset_name", "]", "[", "'Subject_No'", "]", "+", "1", ")", ")", ":", "\n", "#____________________LOAD DATA____________________#", "\n", "            ", "X_train", "=", "np", ".", "load", "(", "data_train_addr", ".", "format", "(", "subject_num", ")", ")", "#  trials, frequency_band, channel, signal", "\n", "Y_train", "=", "np", ".", "load", "(", "label_train_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "X_test", "=", "np", ".", "load", "(", "data_test_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "Y_test", "=", "np", ".", "load", "(", "label_test_addr", ".", "format", "(", "subject_num", ")", ")", "\n", "Y_train", "=", "np", ".", "expand_dims", "(", "Y_train", ",", "axis", "=", "1", ")", "-", "1", "#1,2,3,4 ---> 0,1,2,3", "\n", "Y_test", "=", "np", ".", "expand_dims", "(", "Y_test", ",", "axis", "=", "1", ")", "-", "1", "#1,2,3,4 ---> 0,1,2,3", "\n", "####################################################", "\n", "\n", "X_train", ",", "Y_train", "=", "parse_valid_data", "(", "X_train", ",", "Y_train", ")", "\n", "X_test", ",", "Y_test", "=", "parse_valid_data", "(", "X_test", ",", "Y_test", ")", "\n", "\n", "train_embed", ",", "train_label", "=", "X_train", ",", "Y_train", "\n", "\n", "\n", "kfold", "=", "KFold", "(", "Fold_No", ",", "False", ",", "None", ")", "\n", "\n", "\n", "Fold_count", "=", "1", "\n", "train_label", "=", "Y_train", "\n", "\n", "for", "train_index", ",", "test_index", "in", "kfold", ".", "split", "(", "train_embed", ")", ":", "\n", "\n", "                ", "X_train", ",", "X_val", ",", "Y_train", ",", "Y_val", "=", "train_embed", "[", "train_index", "]", ",", "train_embed", "[", "test_index", "]", ",", "train_label", "[", "train_index", "]", ",", "train_label", "[", "test_index", "]", "\n", "\n", "\n", "Y_pred", "=", "temporal_info_stream", "(", "X_train", ",", "X_val", ",", "X_test", ",", "Y_train", ",", "Y_val", ",", "Y_test", ",", "self", ".", "dataset_name", ",", "net_params", ")", "\n", "\n", "\n", "'''\n                2a output label in one-hot form, 2b output label in range (0,1)\n                '''", "\n", "if", "'2a'", "in", "self", ".", "dataset_name", ":", "\n", "                    ", "Y_pred", "=", "np", ".", "argmax", "(", "Y_pred", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "                    ", "Y_pred", "=", "np", ".", "round", "(", "Y_pred", ")", "\n", "Y_val", "=", "Y_val", ".", "squeeze", "(", "1", ")", "\n", "\n", "", "val_acc_mlp", "=", "np", ".", "mean", "(", "accuracy_score", "(", "Y_val", ",", "Y_pred", ")", ")", "\n", "val_kap_mlp", "=", "np", ".", "mean", "(", "cohen_kappa_score", "(", "Y_val", ",", "Y_pred", ")", ")", "\n", "\n", "\n", "val_acc_result", "[", "subject_num", "-", "1", ",", "Fold_count", "-", "1", "]", "=", "val_acc_mlp", "\n", "val_kap_result", "[", "subject_num", "-", "1", ",", "Fold_count", "-", "1", "]", "=", "val_kap_mlp", "\n", "\n", "Fold_count", "+=", "1", "\n", "\n", "", "save_temporal_val_result", "(", "self", ".", "dataset_name", ",", "val_acc_result", ",", "val_kap_result", ",", "args", ".", "BiLSTM", ",", "args", ".", "layer_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run": [[263, 273], ["main_temporal_val.experiments.run_bci", "main_temporal_val.experiments.run_seed", "main_temporal_val.experiments.run_seed_vig", "Exception"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_bci", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_seed", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.experiments.run_seed_vig"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "\n", "        ", "if", "'BCI'", "in", "self", ".", "dataset_name", ":", "\n", "            ", "self", ".", "run_bci", "(", ")", "\n", "", "elif", "self", ".", "dataset_name", "==", "'SEED'", ":", "\n", "            ", "self", ".", "run_seed", "(", ")", "\n", "", "elif", "self", ".", "dataset_name", "==", "'SEED_VIG'", ":", "\n", "            ", "self", ".", "run_seed_vig", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Datasets Name Error'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.main_temporal_val.load_config": [[48, 53], ["open", "yaml.safe_load", "os.path.join"], "function", ["None"], ["def", "load_config", "(", "name", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "sys", ".", "path", "[", "0", "]", ",", "name", ")", ")", "as", "file", ":", "\n", "        ", "config", "=", "yaml", ".", "safe_load", "(", "file", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.preprocessing.bci_iv_2a": [[16, 57], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "range", "load_data.load_data", "range", "numpy.array", "numpy.save", "numpy.save", "numpy.save", "load_data.load_data", "range", "numpy.array", "numpy.save", "numpy.save", "numpy.save", "np.array.append", "os.path.join.format", "os.path.join.format", "os.path.join.format", "np.array.append", "os.path.join.format", "os.path.join.format", "os.path.join.format", "library.signal_filtering.signal_filtering", "library.signal_filtering.signal_filtering"], "function", ["None"], ["def", "bci_iv_2a", "(", "self", ")", ":", "\n", "    ", "PATH", "=", "'/media/patrick/DATA/BCI_Competition/'", "\n", "data_train_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/data_{}'", ")", "# subject", "\n", "data_test_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/data_{}'", ")", "# subject", "\n", "\n", "label_train_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/label_{}'", ")", "# subject", "\n", "label_test_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/label_{}'", ")", "# subject", "\n", "\n", "data_train_filter_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/filter_data_{}'", ")", "# subject", "\n", "data_test_filter_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/filter_data_{}'", ")", "# subject", "\n", "\n", "for", "subject_No", "in", "(", "range", "(", "1", ",", "10", ")", ")", ":", "\n", "\n", "#_________________training_data_________________________#", "\n", "        ", "data", ",", "label", "=", "load_data", "(", "subject_No", ",", "True", ",", "PATH", ")", "\n", "\n", "filter_data", "=", "[", "]", "\n", "\n", "for", "trial_No", "in", "range", "(", "data", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "data_trial", "=", "data", "[", "trial_No", "]", "\n", "filter_data", ".", "append", "(", "signal_filtering", "(", "data_trial", ")", ")", "\n", "\n", "", "filter_data", "=", "np", ".", "array", "(", "filter_data", ")", "\n", "np", ".", "save", "(", "data_train_filter_addr", ".", "format", "(", "subject_No", ")", ",", "filter_data", ")", "\n", "\n", "np", ".", "save", "(", "data_train_addr", ".", "format", "(", "subject_No", ")", ",", "data", ")", "\n", "np", ".", "save", "(", "label_train_addr", ".", "format", "(", "subject_No", ")", ",", "label", ")", "\n", "\n", "\n", "#_________________testing_data_________________________#", "\n", "data", ",", "label", "=", "load_data", "(", "subject_No", ",", "False", ",", "PATH", ")", "\n", "filter_data", "=", "[", "]", "\n", "for", "trial_No", "in", "range", "(", "data", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "data_trial", "=", "data", "[", "trial_No", "]", "\n", "filter_data", ".", "append", "(", "signal_filtering", "(", "data_trial", ")", ")", "\n", "\n", "", "filter_data", "=", "np", ".", "array", "(", "filter_data", ")", "\n", "np", ".", "save", "(", "data_test_filter_addr", ".", "format", "(", "subject_No", ")", ",", "filter_data", ")", "\n", "\n", "np", ".", "save", "(", "data_test_addr", ".", "format", "(", "subject_No", ")", ",", "data", ")", "\n", "np", ".", "save", "(", "label_test_addr", ".", "format", "(", "subject_No", ")", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.preprocessing.bci_iv_2b": [[61, 104], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "range", "load_data.load_data", "range", "numpy.array", "numpy.save", "numpy.save", "numpy.save", "load_data.load_data", "range", "numpy.array", "numpy.save", "numpy.save", "numpy.save", "np.array.append", "os.path.join.format", "os.path.join.format", "os.path.join.format", "np.array.append", "os.path.join.format", "os.path.join.format", "os.path.join.format", "library.signal_filtering.signal_filtering", "library.signal_filtering.signal_filtering"], "function", ["None"], ["", "", "def", "bci_iv_2b", "(", "self", ")", ":", "\n", "\n", "    ", "D_PATH", "=", "'/media/patrick/DATA/BCICIV_2b/'", "\n", "L_PATH", "=", "os", ".", "path", ".", "join", "(", "D_PATH", ",", "'true_label/'", ")", "\n", "fs", "=", "250", "\n", "data_train_addr", "=", "os", ".", "path", ".", "join", "(", "D_PATH", ",", "'train/data_{}'", ")", "# subject", "\n", "data_test_addr", "=", "os", ".", "path", ".", "join", "(", "D_PATH", ",", "'test/data_{}'", ")", "# subject", "\n", "\n", "label_train_addr", "=", "os", ".", "path", ".", "join", "(", "D_PATH", ",", "'train/label_{}'", ")", "# subject", "\n", "label_test_addr", "=", "os", ".", "path", ".", "join", "(", "D_PATH", ",", "'test/label_{}'", ")", "# subject", "\n", "\n", "data_train_filter_addr", "=", "os", ".", "path", ".", "join", "(", "D_PATH", ",", "'train/filter_data_{}'", ")", "# subject", "\n", "data_test_filter_addr", "=", "os", ".", "path", ".", "join", "(", "D_PATH", ",", "'test/filter_data_{}'", ")", "# subject", "\n", "\n", "for", "subject_No", "in", "(", "range", "(", "1", ",", "10", ")", ")", ":", "\n", "\n", "#_________________training_data_________________________#", "\n", "\n", "        ", "data", ",", "label", "=", "load_data", "(", "subject_No", ",", "True", ",", "D_PATH", ",", "L_PATH", ")", "\n", "filter_data", "=", "[", "]", "\n", "for", "trial_No", "in", "range", "(", "data", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "data_trial", "=", "data", "[", "trial_No", "]", "\n", "filter_data", ".", "append", "(", "signal_filtering", "(", "data_trial", ")", ")", "\n", "\n", "", "filter_data", "=", "np", ".", "array", "(", "filter_data", ")", "\n", "np", ".", "save", "(", "data_train_filter_addr", ".", "format", "(", "subject_No", ")", ",", "filter_data", ")", "\n", "\n", "np", ".", "save", "(", "data_train_addr", ".", "format", "(", "subject_No", ")", ",", "data", ")", "\n", "np", ".", "save", "(", "label_train_addr", ".", "format", "(", "subject_No", ")", ",", "label", ")", "\n", "\n", "\n", "#_________________testing_data_________________________#", "\n", "data", ",", "label", "=", "load_data", "(", "subject_No", ",", "False", ",", "D_PATH", ",", "L_PATH", ")", "\n", "filter_data", "=", "[", "]", "\n", "for", "trial_No", "in", "range", "(", "data", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "data_trial", "=", "data", "[", "trial_No", "]", "\n", "filter_data", ".", "append", "(", "signal_filtering", "(", "data_trial", ")", ")", "\n", "\n", "", "filter_data", "=", "np", ".", "array", "(", "filter_data", ")", "\n", "np", ".", "save", "(", "data_test_filter_addr", ".", "format", "(", "subject_No", ")", ",", "filter_data", ")", "\n", "\n", "np", ".", "save", "(", "data_test_addr", ".", "format", "(", "subject_No", ")", ",", "data", ")", "#Use Only at the first run of this script", "\n", "np", ".", "save", "(", "label_test_addr", ".", "format", "(", "subject_No", ")", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.__init__": [[12, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "dataset", ",", "rieman_flag", ",", "rank_num", ")", ":", "\n", "        ", "self", ".", "rieman_flag", "=", "rieman_flag", "# Use Riemannian or Not", "\n", "self", ".", "rank_num", "=", "rank_num", "# rank of a convariance matrix", "\n", "self", ".", "dataset", "=", "dataset", "# Dataset name", "\n", "self", ".", "config", "=", "config", "# Dataset specfic configuration dictionary", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.tangentspace_learning": [[18, 27], ["library.featuring.Riemann().transform", "sklearn.preprocessing.StandardScaler", "sklearn.preprocessing.StandardScaler.fit", "sklearn.preprocessing.StandardScaler.transform", "library.featuring.Riemann"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.fit", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform"], ["", "def", "tangentspace_learning", "(", "self", ",", "spoc", ")", ":", "\n", "\n", "        ", "''' Learning Processing: from Riemannian Space to Tangent Space '''", "\n", "\n", "geom", "=", "Riemann", "(", "n_fb", "=", "1", ",", "metric", "=", "'riemann'", ")", ".", "transform", "(", "spoc", ")", "\n", "scaler", "=", "StandardScaler", "(", ")", "\n", "scaler", ".", "fit", "(", "geom", ")", "\n", "sc", "=", "scaler", ".", "transform", "(", "geom", ")", "\n", "return", "sc", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.projection": [[28, 60], ["pyriemann.estimation.Covariances().transform", "pyriemann.estimation.Covariances().transform", "NaiveVec().transform", "NaiveVec().transform", "library.spfiltering.ProjCommonSpace", "library.spfiltering.ProjCommonSpace.fit().transform", "library.spfiltering.ProjCommonSpace.fit().transform", "spatial_embedding.spatial_features.tangentspace_learning", "spatial_embedding.spatial_features.tangentspace_learning", "pyriemann.estimation.Covariances", "pyriemann.estimation.Covariances", "NaiveVec", "NaiveVec", "library.spfiltering.ProjCommonSpace.fit", "library.spfiltering.ProjCommonSpace.fit"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.tangentspace_learning", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.tangentspace_learning", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.fit", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.fit"], ["", "def", "projection", "(", "self", ",", "X_train", ",", "X_test", ",", "rieman_flag", ",", "rank_num", ")", ":", "\n", "\n", "\n", "        ", "'''Estimation of covariance matrix'''", "\n", "\n", "cov_train", "=", "Covariances", "(", "'oas'", ")", ".", "transform", "(", "X_train", ")", "\n", "cov_train", "=", "cov_train", "[", ":", ",", "None", ",", ":", ",", ":", "]", "\n", "cov_test", "=", "Covariances", "(", "'oas'", ")", ".", "transform", "(", "X_test", ")", "\n", "cov_test", "=", "cov_test", "[", ":", ",", "None", ",", ":", ",", ":", "]", "\n", "\n", "if", "self", ".", "rieman_flag", "==", "False", ":", "\n", "            ", "''' Direct vectorization of spatial covariance matrices without Riemannian '''", "\n", "\n", "sc_train", "=", "NaiveVec", "(", "method", "=", "'upper'", ")", ".", "transform", "(", "cov_train", ")", "\n", "sc_test", "=", "NaiveVec", "(", "method", "=", "'upper'", ")", ".", "transform", "(", "cov_test", ")", "\n", "", "else", ":", "\n", "# spoc = ProjSPoCSpace(n_compo=n_compo, scale='auto')", "\n", "            ", "'''Dimensionality Reduction'''", "\n", "\n", "spoc", "=", "ProjCommonSpace", "(", "rank_num", "=", "rank_num", ")", "\n", "# spoc = ProjSPoCSpace(rank_num=rank_num, scale='auto')", "\n", "\n", "spoc_train", "=", "spoc", ".", "fit", "(", "cov_train", ")", ".", "transform", "(", "cov_train", ")", "\n", "spoc_test", "=", "spoc", ".", "fit", "(", "cov_train", ")", ".", "transform", "(", "cov_test", ")", "\n", "\n", "# sc_train = spoc_train[:,0,:,:]", "\n", "# sc_test  = spoc_test[:,0,:,:]", "\n", "'''Dimensionality Reduction'''", "\n", "sc_train", "=", "self", ".", "tangentspace_learning", "(", "spoc_train", ")", "\n", "sc_test", "=", "self", ".", "tangentspace_learning", "(", "spoc_test", ")", "\n", "\n", "", "return", "sc_train", ",", "sc_test", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.embedding": [[62, 88], ["range", "numpy.asarray", "numpy.asarray", "numpy.transpose", "numpy.transpose", "numpy.reshape", "numpy.reshape", "spatial_embedding.spatial_features.projection", "numpy.reshape.append", "numpy.reshape.append"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.spatial_embedding.spatial_features.projection"], ["", "def", "embedding", "(", "self", ",", "X_train", ",", "X_test", ")", ":", "\n", "        ", "train_embed", "=", "[", "]", "\n", "test_embed", "=", "[", "]", "\n", "\n", "'''\n        Concatenate spatial embeddings from each frequency band\n        '''", "\n", "\n", "for", "freqband_band", "in", "range", "(", "0", ",", "self", ".", "config", "[", "self", ".", "dataset", "]", "[", "'Band_No'", "]", ")", ":", "\n", "\n", "            ", "X_training", "=", "X_train", "[", ":", ",", "freqband_band", ",", ":", ",", ":", "]", "\n", "X_testing", "=", "X_test", "[", ":", ",", "freqband_band", ",", ":", ",", ":", "]", "\n", "\n", "train_embedding", ",", "test_embedding", "=", "self", ".", "projection", "(", "X_training", ",", "X_testing", ",", "self", ".", "rieman_flag", ",", "self", ".", "rank_num", ")", "\n", "\n", "train_embed", ".", "append", "(", "train_embedding", ")", "\n", "test_embed", ".", "append", "(", "test_embedding", ")", "\n", "\n", "", "train_embed", "=", "np", ".", "asarray", "(", "train_embed", ")", "\n", "test_embed", "=", "np", ".", "asarray", "(", "test_embed", ")", "\n", "train_embed", "=", "np", ".", "transpose", "(", "train_embed", ",", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "test_embed", "=", "np", ".", "transpose", "(", "test_embed", ",", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "train_embed", "=", "np", ".", "reshape", "(", "train_embed", ",", "(", "train_embed", ".", "shape", "[", "0", "]", ",", "train_embed", ".", "shape", "[", "1", "]", "*", "train_embed", ".", "shape", "[", "2", "]", ")", ")", "# concatenate feature from different EEG bandds", "\n", "test_embed", "=", "np", ".", "reshape", "(", "test_embed", ",", "(", "test_embed", ".", "shape", "[", "0", "]", ",", "test_embed", ".", "shape", "[", "1", "]", "*", "test_embed", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "return", "train_embed", ",", "test_embed", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_config": [[6, 11], ["open", "yaml.safe_load", "os.path.join"], "function", ["None"], ["def", "load_config", "(", "name", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "sys", ".", "path", "[", "0", "]", ",", "name", ")", ")", "as", "file", ":", "\n", "        ", "config", "=", "yaml", ".", "safe_load", "(", "file", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.root_mean_squared_error_numpy": [[15, 17], ["numpy.sqrt", "numpy.mean", "numpy.square"], "function", ["None"], ["def", "root_mean_squared_error_numpy", "(", "y_true", ",", "y_pred", ")", ":", "# numpy not tensor, used for EMSE calculation in SEED_VIG dataset", "\n", "    ", "return", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "np", ".", "square", "(", "y_pred", "-", "y_true", ")", ",", "axis", "=", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_signal_addr": [[20, 65], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "str", "str", "str", "str", "os.path.join", "os.path.join", "Exception", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "Exception", "str", "str"], "function", ["None"], ["", "def", "load_dataset_signal_addr", "(", "dataset", ")", ":", "\n", "    ", "'''\n    Load address of processed EEG signal from filter banks into dictionary\n    '''", "\n", "\n", "if", "'VIG'", "not", "in", "dataset", ":", "\n", "        ", "if", "'BCI'", "in", "dataset", ":", "\n", "            ", "PATH", "=", "config", "[", "dataset", "]", "[", "'PATH'", "]", "\n", "\n", "data_train_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/'", "+", "'EEG/filter_data_{}.npy'", ")", "# subject", "\n", "data_test_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/'", "+", "'EEG/filter_data_{}.npy'", ")", "# subject", "\n", "label_train_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/label_{}.npy'", ")", "# subject", "\n", "label_test_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/label_{}.npy'", ")", "# subject", "\n", "\n", "", "elif", "'SEED'", "in", "dataset", ":", "\n", "            ", "PATH", "=", "config", "[", "dataset", "]", "[", "'PATH'", "]", "\n", "\n", "data_train_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/'", "+", "'EEG/filter_data_{}_{}.npy'", ")", "# subject, session", "\n", "data_test_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/'", "+", "'EEG/filter_data_{}_{}.npy'", ")", "# subject, session", "\n", "label_train_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/label_{}_{}.npy'", ")", "# subject, session", "\n", "label_test_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/label_{}_{}.npy'", ")", "# subject, session", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Datasets Name Error'", ")", "\n", "\n", "", "addr_dict", "=", "{", "str", "(", "data_train_addr", ")", ":", "data_train_addr", ",", "\n", "str", "(", "data_test_addr", ")", ":", "data_test_addr", ",", "\n", "str", "(", "label_train_addr", ")", ":", "label_train_addr", ",", "\n", "str", "(", "label_test_addr", ")", ":", "label_test_addr", "}", "\n", "\n", "", "elif", "dataset", "==", "'SEED_VIG'", ":", "\n", "        ", "PATH", "=", "config", "[", "dataset", "]", "[", "'PATH'", "]", "\n", "\n", "data_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'EEG/filter_data_{}.npy'", ")", "# subject", "\n", "# data_addr    = os.path.join(PATH, 'New/filtered_signal/data_{}.npy') # subject", "\n", "\n", "label_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'Labels/{}.npy'", ")", "# subject", "\n", "\n", "addr_dict", "=", "{", "str", "(", "data_addr", ")", ":", "data_addr", ",", "\n", "str", "(", "label_addr", ")", ":", "label_addr", "}", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Datasets Name Error'", ")", "\n", "\n", "", "return", "addr_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.load_dataset_feature_addr": [[67, 110], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "str", "str", "str", "str", "os.path.join", "os.path.join", "Exception", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "Exception", "str", "str"], "function", ["None"], ["", "def", "load_dataset_feature_addr", "(", "dataset", ")", ":", "\n", "    ", "'''\n    Load address of extracted features (DE and PSD) into dictionary\n    '''", "\n", "\n", "if", "'VIG'", "not", "in", "dataset", ":", "\n", "        ", "if", "'BCI'", "in", "dataset", ":", "\n", "            ", "PATH", "=", "config", "[", "dataset", "]", "[", "'PATH'", "]", "\n", "\n", "data_train_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/'", "+", "'Extracted Features/features_{}.npy'", ")", "# subject", "\n", "data_test_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/'", "+", "'Extracted Features/features_{}.npy'", ")", "# subject", "\n", "label_train_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/label_{}.npy'", ")", "# subject", "\n", "label_test_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/label_{}.npy'", ")", "# subject", "\n", "\n", "", "elif", "'SEED'", "in", "dataset", ":", "\n", "            ", "PATH", "=", "config", "[", "dataset", "]", "[", "'PATH'", "]", "\n", "\n", "data_train_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/'", "+", "'Extracted Features/features_{}_{}.npy'", ")", "# subject, session", "\n", "data_test_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/'", "+", "'Extracted Features/features_{}_{}.npy'", ")", "# subject, session", "\n", "label_train_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'train/label_{}_{}.npy'", ")", "# subject, session", "\n", "label_test_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'test/label_{}_{}.npy'", ")", "# subject, session", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Datasets Name Error'", ")", "\n", "\n", "", "addr_dict", "=", "{", "str", "(", "data_train_addr", ")", ":", "data_train_addr", ",", "\n", "str", "(", "data_test_addr", ")", ":", "data_test_addr", ",", "\n", "str", "(", "label_train_addr", ")", ":", "label_train_addr", ",", "\n", "str", "(", "label_test_addr", ")", ":", "label_test_addr", "}", "\n", "\n", "", "elif", "dataset", "==", "'SEED_VIG'", ":", "\n", "        ", "PATH", "=", "config", "[", "dataset", "]", "[", "'PATH'", "]", "\n", "\n", "data_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'Extracted Features/features_{}.npy'", ")", "# subject", "\n", "label_addr", "=", "os", ".", "path", ".", "join", "(", "PATH", ",", "'Labels/{}.npy'", ")", "# subject", "\n", "\n", "addr_dict", "=", "{", "str", "(", "data_addr", ")", ":", "data_addr", ",", "\n", "str", "(", "label_addr", ")", ":", "label_addr", "}", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Datasets Name Error'", ")", "\n", "\n", "", "return", "addr_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.parse_valid_data": [[114, 125], ["numpy.any", "numpy.unique", "numpy.delete", "numpy.delete", "numpy.isnan", "numpy.argwhere", "numpy.isnan"], "function", ["None"], ["", "def", "parse_valid_data", "(", "x", ",", "y", ")", ":", "\n", "    ", "'''\n    check if any data trial contains nan of EEG signal\n    '''", "\n", "if", "np", ".", "any", "(", "np", ".", "isnan", "(", "x", ")", ")", "==", "True", ":", "\n", "        ", "row", "=", "np", ".", "argwhere", "(", "np", ".", "isnan", "(", "x", ")", ")", "[", ":", ",", "0", "]", "\n", "row", "=", "np", ".", "unique", "(", "row", ")", "\n", "x", "=", "np", ".", "delete", "(", "x", ",", "row", ",", "axis", "=", "0", ")", "\n", "y", "=", "np", ".", "delete", "(", "y", ",", "row", ",", "axis", "=", "0", ")", "\n", "\n", "", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.parse_valid_data_all": [[128, 142], ["numpy.any", "numpy.unique", "numpy.delete", "numpy.delete", "numpy.delete", "numpy.isnan", "numpy.argwhere", "numpy.isnan"], "function", ["None"], ["", "def", "parse_valid_data_all", "(", "x_eeg", ",", "x_features", ",", "y", ")", ":", "\n", "    ", "'''\n    Remove any data trial contains nan of EEG signal\n    and synchronize the index of new EEG signal and extracted features\n    '''", "\n", "if", "np", ".", "any", "(", "np", ".", "isnan", "(", "x_eeg", ")", ")", "==", "True", ":", "\n", "        ", "row", "=", "np", ".", "argwhere", "(", "np", ".", "isnan", "(", "x_eeg", ")", ")", "[", ":", ",", "0", "]", "\n", "row", "=", "np", ".", "unique", "(", "row", ")", "\n", "\n", "x_eeg", "=", "np", ".", "delete", "(", "x_eeg", ",", "row", ",", "axis", "=", "0", ")", "\n", "x_features", "=", "np", ".", "delete", "(", "x_features", ",", "row", ",", "axis", "=", "0", ")", "\n", "y", "=", "np", ".", "delete", "(", "y", ",", "row", ",", "axis", "=", "0", ")", "\n", "\n", "", "return", "x_eeg", ",", "x_features", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_spatial_val_result": [[146, 173], ["os.path.join", "numpy.savetxt", "numpy.savetxt", "os.path.exists", "os.path.join", "os.path.join", "os.makedirs"], "function", ["None"], ["", "def", "save_spatial_val_result", "(", "dataset", ",", "metrics_1_value", ",", "metrics_2_value", ",", "rank_num", ")", ":", "\n", "    ", "'''\n    Save the validation result using only spatial stream of our model\n    '''", "\n", "if", "'VIG'", "in", "dataset", ":", "\n", "        ", "metrics_1_name", "=", "'rmse'", "\n", "metrics_2_name", "=", "'corr'", "\n", "", "else", ":", "\n", "        ", "metrics_1_name", "=", "'acc'", "\n", "metrics_2_name", "=", "'kap'", "\n", "\n", "\n", "\n", "", "result_path", "=", "'./'", "+", "dataset", "+", "'_result/spatial/'", "\n", "checkpoint_save_path", "=", "os", ".", "path", ".", "join", "(", "result_path", ",", "'rank_{}/'", ".", "format", "(", "rank_num", ")", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "checkpoint_save_path", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "checkpoint_save_path", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "                ", "raise", "\n", "", "pass", "\n", "\n", "\n", "", "", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "checkpoint_save_path", ",", "metrics_1_name", "+", "'.csv'", ")", ",", "metrics_1_value", ",", "delimiter", "=", "\",\"", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "checkpoint_save_path", ",", "metrics_2_name", "+", "'.csv'", ")", ",", "metrics_2_value", ",", "delimiter", "=", "\",\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_temporal_val_result": [[176, 207], ["os.path.join", "numpy.savetxt", "numpy.savetxt", "os.path.exists", "os.path.join", "os.path.join", "os.makedirs"], "function", ["None"], ["", "def", "save_temporal_val_result", "(", "dataset", ",", "metrics_1_value", ",", "metrics_2_value", ",", "bidirectional_flag", ",", "layer_num", ")", ":", "\n", "    ", "'''\n    Save the validation result using only temporal stream of our model\n    '''", "\n", "if", "'VIG'", "in", "dataset", ":", "\n", "        ", "metrics_1_name", "=", "'rmse'", "\n", "metrics_2_name", "=", "'corr'", "\n", "", "else", ":", "\n", "        ", "metrics_1_name", "=", "'acc'", "\n", "metrics_2_name", "=", "'kap'", "\n", "\n", "\n", "", "result_path", "=", "'./'", "+", "dataset", "+", "'_result/temporal/'", "\n", "if", "bidirectional_flag", "==", "False", ":", "\n", "        ", "result_path", "=", "result_path", "+", "'LSTM/'", "\n", "", "else", ":", "\n", "        ", "result_path", "=", "result_path", "+", "'BiLSTM/'", "\n", "\n", "", "checkpoint_save_path", "=", "os", ".", "path", ".", "join", "(", "result_path", ",", "'layer_{}/'", ".", "format", "(", "layer_num", ")", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "checkpoint_save_path", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "checkpoint_save_path", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "                ", "raise", "\n", "", "pass", "\n", "\n", "\n", "", "", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "checkpoint_save_path", ",", "metrics_1_name", "+", "'.csv'", ")", ",", "metrics_1_value", ",", "delimiter", "=", "\",\"", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "checkpoint_save_path", ",", "metrics_2_name", "+", "'.csv'", ")", ",", "metrics_2_value", ",", "delimiter", "=", "\",\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.code.utils.save_test_result": [[212, 238], ["numpy.savetxt", "numpy.savetxt", "os.path.exists", "os.path.join", "os.path.join", "os.makedirs"], "function", ["None"], ["", "def", "save_test_result", "(", "dataset", ",", "metrics_1_value", ",", "metrics_2_value", ")", ":", "\n", "    ", "'''\n    Save the test result using our model\n    '''", "\n", "if", "'VIG'", "in", "dataset", ":", "\n", "        ", "metrics_1_name", "=", "'rmse'", "\n", "metrics_2_name", "=", "'corr'", "\n", "", "else", ":", "\n", "        ", "metrics_1_name", "=", "'acc'", "\n", "metrics_2_name", "=", "'kap'", "\n", "\n", "", "result_path", "=", "'./'", "+", "dataset", "+", "'_result/test/'", "\n", "\n", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_path", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "result_path", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "                ", "raise", "\n", "", "pass", "\n", "\n", "\n", "", "", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "result_path", ",", "metrics_1_name", "+", "'.csv'", ")", ",", "metrics_1_value", ",", "delimiter", "=", "\",\"", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "result_path", ",", "metrics_2_name", "+", "'.csv'", ")", ",", "metrics_2_value", ",", "delimiter", "=", "\",\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.temporal_information.load_config": [[10, 15], ["open", "yaml.safe_load", "os.path.join"], "function", ["None"], ["def", "load_config", "(", "name", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "sys", ".", "path", "[", "0", "]", ",", "name", ")", ")", "as", "file", ":", "\n", "        ", "config", "=", "yaml", ".", "safe_load", "(", "file", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.temporal_information.to_categorical": [[18, 22], ["len", "numpy.unique", "numpy.eye", "y.astype"], "function", ["None"], ["def", "to_categorical", "(", "y", ")", ":", "\n", "    ", "\"\"\" 1-hot encodes a tensor \"\"\"", "\n", "num_classes", "=", "len", "(", "np", ".", "unique", "(", "y", ")", ")", "\n", "return", "np", ".", "eye", "(", "num_classes", ",", "dtype", "=", "'uint8'", ")", "[", "y", ".", "astype", "(", "int", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.temporal_information.attention_3d_block": [[23, 38], ["int", "tensorflow.keras.layers.Permute", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Permute", "tensorflow.keras.layers.Multiply", "tensorflow.keras.layers.Lambda", "tensorflow.math.reduce_sum"], "function", ["None"], ["", "def", "attention_3d_block", "(", "inputs", ",", "timestep", ")", ":", "\n", "    ", "input_dim", "=", "int", "(", "inputs", ".", "shape", "[", "2", "]", ")", "\n", "a", "=", "tf", ".", "keras", ".", "layers", ".", "Permute", "(", "(", "2", ",", "1", ")", ")", "(", "inputs", ")", "\n", "a", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "timestep", ",", "activation", "=", "'tanh'", ")", "(", "a", ")", "\n", "a", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "timestep", ",", "activation", "=", "'softmax'", ")", "(", "a", ")", "\n", "#a = Lambda(lambda x: K.mean(x, axis=1), name='dim_reduction')(a)", "\n", "#a = RepeatVector(input_dim)(a)_train, X_test, Y_train, Y_test)", "\n", "a_probs", "=", "tf", ".", "keras", ".", "layers", ".", "Permute", "(", "(", "2", ",", "1", ")", ")", "(", "a", ")", "\n", "#output_attention_mul = merge([inputs, a_probs], name='attention_mul')", "\n", "#a_probs     = Permute((2, 1), name='attention_vec')(a)", "\n", "#output_attention_mul = merge([inputs, a_probs], name='attention_mul', mode='mul')", "\n", "output_attention_mul", "=", "tf", ".", "keras", ".", "layers", ".", "Multiply", "(", ")", "(", "[", "inputs", ",", "a_probs", "]", ")", "\n", "output_attention_mul", "=", "tf", ".", "keras", ".", "layers", ".", "Lambda", "(", "lambda", "z", ":", "tf", ".", "math", ".", "reduce_sum", "(", "z", ",", "axis", "=", "1", ")", ")", "(", "output_attention_mul", ")", "\n", "\n", "return", "output_attention_mul", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.temporal_information.corcoeff": [[41, 45], ["tensorflow.reduce_sum", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], "function", ["None"], ["", "def", "corcoeff", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "num", "=", "tf", ".", "reduce_sum", "(", "(", "y_true", "-", "tf", ".", "reduce_mean", "(", "y_true", ")", ")", "*", "(", "y_pred", "-", "tf", ".", "reduce_mean", "(", "y_pred", ")", ")", ")", "\n", "den", "=", "tf", ".", "square", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "y_true", "-", "tf", ".", "reduce_mean", "(", "y_true", ")", ")", ")", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "y_pred", "-", "tf", ".", "reduce_mean", "(", "y_pred", ")", ")", ")", ")", "\n", "return", "num", "/", "den", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.temporal_information.temporal_info_stream": [[47, 185], ["numpy.vstack", "numpy.transpose", "numpy.reshape", "numpy.reshape", "sklearn.preprocessing.MinMaxScaler", "sklearn.preprocessing.MinMaxScaler.fit", "sklearn.preprocessing.MinMaxScaler.transform", "numpy.reshape", "to_categorical.squeeze", "to_categorical.squeeze", "to_categorical.squeeze", "tensorflow.keras.Sequential", "tensorflow.keras.Input", "print", "range", "temporal_information.attention_3d_block", "tensorflow.keras.Model", "print", "os.path.join", "tf.keras.Model.fit", "tf.keras.Model.load_weights", "tf.keras.Model.predict", "temporal_information.to_categorical", "temporal_information.to_categorical", "temporal_information.to_categorical", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tf.keras.Model.compile", "tf.keras.Model.summary", "tensorflow.keras.callbacks.EarlyStopping", "tensorflow.keras.callbacks.ModelCheckpoint", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.LeakyReLU", "tf.keras.Model.compile", "tensorflow.keras.losses.CategoricalCrossentropy", "tensorflow.keras.optimizers.Adam", "tf.keras.Model.compile", "Exception", "tensorflow.keras.layers.LSTM", "tf.keras.Sequential.", "tensorflow.keras.layers.LSTM", "tf.keras.Sequential.", "tensorflow.keras.layers.Bidirectional", "tf.keras.Sequential.", "tensorflow.keras.layers.Bidirectional", "tf.keras.Sequential.", "tensorflow.keras.metrics.CategoricalAccuracy", "tensorflow.keras.losses.BinaryCrossentropy", "tensorflow.keras.optimizers.Adam", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.LSTM", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.LSTM", "tensorflow.keras.layers.Dropout", "tensorflow.keras.metrics.BinaryAccuracy", "tensorflow.keras.losses.MeanSquaredError", "tensorflow.keras.optimizers.Adam"], "function", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.fit", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.attention_3d_block", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.fit", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.to_categorical", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.to_categorical", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.to_categorical"], ["", "def", "temporal_info_stream", "(", "X_train", ",", "X_val", ",", "X_test", ",", "Y_train", ",", "Y_val", ",", "Y_test", ",", "dataset", ",", "net_params", ")", ":", "\n", "\n", "    ", "X", "=", "np", ".", "vstack", "(", "(", "X_train", ",", "X_val", ",", "X_test", ")", ")", "\n", "X", "=", "np", ".", "transpose", "(", "X", ",", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "#trial, timestep, channel, features", "\n", "\n", "X", "=", "np", ".", "reshape", "(", "X", ",", "(", "X", ".", "shape", "[", "0", "]", ",", "X", ".", "shape", "[", "1", "]", ",", "X", ".", "shape", "[", "2", "]", "*", "X", ".", "shape", "[", "3", "]", ")", ")", "#trial, timestep, channel*features", "\n", "X_new", "=", "np", ".", "reshape", "(", "X", ",", "(", "X", ".", "shape", "[", "0", "]", "*", "X", ".", "shape", "[", "1", "]", ",", "X", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "scalar", "=", "MinMaxScaler", "(", "feature_range", "=", "(", "-", "1", ",", "1", ")", ",", "copy", "=", "True", ")", "\n", "scalar", ".", "fit", "(", "X_new", ")", "\n", "X_new", "=", "scalar", ".", "transform", "(", "X_new", ")", "\n", "\n", "X", "=", "np", ".", "reshape", "(", "X_new", ",", "(", "X", ".", "shape", "[", "0", "]", ",", "X", ".", "shape", "[", "1", "]", ",", "X", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "X_train", "=", "X", "[", "0", ":", "X_train", ".", "shape", "[", "0", "]", "]", "\n", "X_val", "=", "X", "[", "X_train", ".", "shape", "[", "0", "]", ":", "-", "X_test", ".", "shape", "[", "0", "]", "]", "\n", "X_test", "=", "X", "[", "-", "X_test", ".", "shape", "[", "0", "]", ":", "]", "\n", "\n", "\n", "\n", "if", "dataset", "==", "'SEED'", "or", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "        ", "Y_train", "=", "to_categorical", "(", "Y_train", ")", "\n", "Y_val", "=", "to_categorical", "(", "Y_val", ")", "\n", "Y_test", "=", "to_categorical", "(", "Y_test", ")", "\n", "\n", "", "Y_train", "=", "Y_train", ".", "squeeze", "(", ")", "\n", "Y_val", "=", "Y_val", ".", "squeeze", "(", ")", "\n", "Y_test", "=", "Y_test", ".", "squeeze", "(", ")", "\n", "\n", "batch_norm_module", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "momentum", "=", "0.99", ",", "epsilon", "=", "0.001", ",", "\n", "beta_initializer", "=", "\"zeros\"", ",", "\n", "gamma_initializer", "=", "\"ones\"", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "LeakyReLU", "(", "alpha", "=", "0.3", ")", ",", "\n", "]", "\n", ")", "\n", "\n", "\n", "\n", "inputs", "=", "tf", ".", "keras", ".", "Input", "(", "shape", "=", "(", "X", ".", "shape", "[", "1", "]", ",", "X", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "print", "(", "inputs", ".", "shape", ")", "\n", "for", "layer_num", "in", "range", "(", "1", ",", "net_params", "[", "'layer_num'", "]", "+", "1", ")", ":", "\n", "        ", "if", "net_params", "[", "'bidirectional_flag'", "]", "==", "False", ":", "\n", "            ", "if", "layer_num", "==", "1", ":", "\n", "                ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "LSTM", "(", "units", "=", "256", ",", "return_sequences", "=", "True", ",", "activation", "=", "\"tanh\"", ",", "\n", "recurrent_activation", "=", "\"sigmoid\"", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "\"glorot_uniform\"", ",", "\n", "recurrent_initializer", "=", "\"orthogonal\"", ",", "\n", "bias_initializer", "=", "\"zeros\"", ")", "(", "inputs", ")", "\n", "if", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "                    ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "0.0", ")", "(", "lstm_out", ")", "\n", "", "else", ":", "\n", "                    ", "lstm_out", "=", "batch_norm_module", "(", "lstm_out", ")", "\n", "\n", "\n", "", "", "else", ":", "\n", "                ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "LSTM", "(", "units", "=", "256", ",", "return_sequences", "=", "True", ",", "activation", "=", "\"tanh\"", ",", "\n", "recurrent_activation", "=", "\"sigmoid\"", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "\"glorot_uniform\"", ",", "\n", "recurrent_initializer", "=", "\"orthogonal\"", ",", "\n", "bias_initializer", "=", "\"zeros\"", ")", "(", "lstm_out", ")", "\n", "if", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "                    ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "0.0", ")", "(", "lstm_out", ")", "\n", "", "else", ":", "\n", "                    ", "lstm_out", "=", "batch_norm_module", "(", "lstm_out", ")", "\n", "", "", "", "else", ":", "\n", "\n", "            ", "if", "layer_num", "==", "1", ":", "\n", "                ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Bidirectional", "(", "tf", ".", "keras", ".", "layers", ".", "LSTM", "(", "units", "=", "256", ",", "return_sequences", "=", "True", ",", "activation", "=", "\"tanh\"", ",", "\n", "recurrent_activation", "=", "\"sigmoid\"", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "\"glorot_uniform\"", ",", "\n", "recurrent_initializer", "=", "\"orthogonal\"", ",", "\n", "bias_initializer", "=", "\"zeros\"", ")", ")", "(", "inputs", ")", "\n", "if", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "                    ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "0.0", ")", "(", "lstm_out", ")", "\n", "", "else", ":", "\n", "                    ", "lstm_out", "=", "batch_norm_module", "(", "lstm_out", ")", "\n", "\n", "\n", "", "", "else", ":", "\n", "                ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Bidirectional", "(", "tf", ".", "keras", ".", "layers", ".", "LSTM", "(", "units", "=", "256", ",", "return_sequences", "=", "True", ",", "activation", "=", "\"tanh\"", ",", "\n", "recurrent_activation", "=", "\"sigmoid\"", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "\"glorot_uniform\"", ",", "\n", "recurrent_initializer", "=", "\"orthogonal\"", ",", "\n", "bias_initializer", "=", "\"zeros\"", ")", ")", "(", "lstm_out", ")", "\n", "if", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "                    ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "0.0", ")", "(", "lstm_out", ")", "\n", "", "else", ":", "\n", "                    ", "lstm_out", "=", "batch_norm_module", "(", "lstm_out", ")", "\n", "\n", "\n", "\n", "", "", "", "", "attention_mul", "=", "attention_3d_block", "(", "lstm_out", ",", "timestep", "=", "config", "[", "dataset", "]", "[", "'timestep'", "]", ")", "\n", "attention_mul", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "64", ",", "activation", "=", "'relu'", ")", "(", "attention_mul", ")", "\n", "\n", "\n", "output", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "config", "[", "dataset", "]", "[", "'output_unit'", "]", ",", "activation", "=", "config", "[", "dataset", "]", "[", "'act_func'", "]", ")", "(", "attention_mul", ")", "\n", "model", "=", "tf", ".", "keras", ".", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "output", ")", "\n", "\n", "if", "dataset", "==", "'SEED'", "or", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "        ", "model", ".", "compile", "(", "loss", "=", "tf", ".", "keras", ".", "losses", ".", "CategoricalCrossentropy", "(", ")", ",", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", ")", ",", "\n", "metrics", "=", "[", "tf", ".", "keras", ".", "metrics", ".", "CategoricalAccuracy", "(", ")", "]", ")", "\n", "", "elif", "dataset", "==", "'BCI_IV_2b'", ":", "\n", "        ", "model", ".", "compile", "(", "loss", "=", "tf", ".", "keras", ".", "losses", ".", "BinaryCrossentropy", "(", ")", ",", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", ")", ",", "\n", "metrics", "=", "[", "tf", ".", "keras", ".", "metrics", ".", "BinaryAccuracy", "(", ")", "]", ")", "\n", "", "elif", "dataset", "==", "'SEED_VIG'", ":", "\n", "        ", "model", ".", "compile", "(", "loss", "=", "tf", ".", "keras", ".", "losses", ".", "MeanSquaredError", "(", ")", ",", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", ")", ",", "\n", "metrics", "=", "[", "corcoeff", "]", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Datasets Name Error'", ")", "\n", "\n", "", "print", "(", "model", ".", "summary", "(", ")", ")", "\n", "\n", "\n", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "config", "[", "dataset", "]", "[", "'PATH'", "]", ",", "'ckpt/val_temporal_model.ckpt'", ")", "\n", "\n", "'''\n    Early stopping strategy based on validation loss\n    '''", "\n", "callbacks", "=", "[", "tf", ".", "keras", ".", "callbacks", ".", "EarlyStopping", "(", "monitor", "=", "'val_loss'", ",", "mode", "=", "'auto'", ",", "patience", "=", "net_params", "[", "'early_stopping'", "]", ")", ",", "\n", "tf", ".", "keras", ".", "callbacks", ".", "ModelCheckpoint", "(", "filepath", "=", "checkpoint_path", ",", "monitor", "=", "'val_loss'", ",", "mode", "=", "'auto'", ",", "save_weights_only", "=", "True", ",", "save_best_only", "=", "True", ")", "]", "\n", "\n", "\n", "\n", "history", "=", "model", ".", "fit", "(", "X_train", ",", "Y_train", ",", "epochs", "=", "net_params", "[", "'epochs'", "]", ",", "batch_size", "=", "net_params", "[", "'batch_size'", "]", ",", "verbose", "=", "1", ",", "shuffle", "=", "True", ",", "\n", "validation_data", "=", "(", "X_val", ",", "Y_val", ")", ",", "callbacks", "=", "callbacks", ")", "\n", "\n", "\n", "model", ".", "load_weights", "(", "checkpoint_path", ")", "\n", "Y_pred", "=", "model", ".", "predict", "(", "X_val", ")", "\n", "\n", "\n", "return", "Y_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_information.load_config": [[10, 15], ["open", "yaml.safe_load", "os.path.join"], "function", ["None"], ["def", "load_config", "(", "name", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "sys", ".", "path", "[", "0", "]", ",", "name", ")", ")", "as", "file", ":", "\n", "        ", "config", "=", "yaml", ".", "safe_load", "(", "file", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_information.to_categorical": [[18, 22], ["len", "numpy.unique", "numpy.eye", "y.astype"], "function", ["None"], ["def", "to_categorical", "(", "y", ")", ":", "\n", "    ", "\"\"\" 1-hot encodes a tensor \"\"\"", "\n", "num_classes", "=", "len", "(", "np", ".", "unique", "(", "y", ")", ")", "\n", "return", "np", ".", "eye", "(", "num_classes", ",", "dtype", "=", "'uint8'", ")", "[", "y", ".", "astype", "(", "int", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_information.corcoeff": [[25, 29], ["tensorflow.reduce_sum", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], "function", ["None"], ["", "def", "corcoeff", "(", "y_true", ",", "y_pred", ")", ":", "# tensor", "\n", "    ", "num", "=", "tf", ".", "reduce_sum", "(", "(", "y_true", "-", "tf", ".", "reduce_mean", "(", "y_true", ")", ")", "*", "(", "y_pred", "-", "tf", ".", "reduce_mean", "(", "y_pred", ")", ")", ")", "\n", "den", "=", "tf", ".", "square", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "y_true", "-", "tf", ".", "reduce_mean", "(", "y_true", ")", ")", ")", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "y_pred", "-", "tf", ".", "reduce_mean", "(", "y_pred", ")", ")", ")", ")", "\n", "return", "num", "/", "den", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_information.spatial_info_stream": [[31, 101], ["numpy.vstack", "to_categorical.squeeze", "to_categorical.squeeze", "to_categorical.squeeze", "tensorflow.keras.Input", "tensorflow.keras.Model", "print", "os.path.join", "tf.keras.Model.fit", "tf.keras.Model.load_weights", "tf.keras.Model.predict", "numpy.mean", "spatial_information.to_categorical", "spatial_information.to_categorical", "spatial_information.to_categorical", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tf.keras.Model.compile", "tf.keras.Model.summary", "tensorflow.keras.callbacks.EarlyStopping", "tensorflow.keras.callbacks.ModelCheckpoint", "tf.keras.Model.compile", "numpy.std", "tensorflow.keras.losses.CategoricalCrossentropy", "tensorflow.keras.optimizers.Adam", "tf.keras.Model.compile", "Exception", "tensorflow.keras.metrics.CategoricalAccuracy", "tensorflow.keras.losses.BinaryCrossentropy", "tensorflow.keras.optimizers.Adam", "tensorflow.keras.metrics.BinaryAccuracy", "tensorflow.keras.losses.MeanSquaredError", "tensorflow.keras.optimizers.Adam"], "function", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.fit", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.to_categorical", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.to_categorical", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.to_categorical"], ["", "def", "spatial_info_stream", "(", "X_train", ",", "X_val", ",", "X_test", ",", "Y_train", ",", "Y_val", ",", "Y_test", ",", "dataset", ",", "net_params", ")", ":", "\n", "\n", "    ", "X", "=", "np", ".", "vstack", "(", "(", "X_train", ",", "X_val", ",", "X_test", ")", ")", "\n", "# scaler = StandardScaler()", "\n", "# scaler.fit(X)", "\n", "# X = scaler.transform(X)", "\n", "X", "=", "X", "-", "np", ".", "mean", "(", "X", ",", "keepdims", "=", "True", ")", "\n", "X", "=", "2", "*", "(", "X", "/", "np", ".", "std", "(", "X", ",", "keepdims", "=", "True", ")", ")", "-", "1", "\n", "# X = np.expand_dims(X, axis=3)", "\n", "X_train", "=", "X", "[", "0", ":", "X_train", ".", "shape", "[", "0", "]", "]", "\n", "X_val", "=", "X", "[", "X_train", ".", "shape", "[", "0", "]", ":", "-", "X_test", ".", "shape", "[", "0", "]", "]", "\n", "X_test", "=", "X", "[", "-", "X_test", ".", "shape", "[", "0", "]", ":", "]", "\n", "\n", "if", "dataset", "==", "'SEED'", "or", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "        ", "Y_train", "=", "to_categorical", "(", "Y_train", ")", "\n", "Y_val", "=", "to_categorical", "(", "Y_val", ")", "\n", "Y_test", "=", "to_categorical", "(", "Y_test", ")", "\n", "\n", "", "Y_train", "=", "Y_train", ".", "squeeze", "(", ")", "\n", "Y_val", "=", "Y_val", ".", "squeeze", "(", ")", "\n", "Y_test", "=", "Y_test", ".", "squeeze", "(", ")", "\n", "\n", "inputs", "=", "tf", ".", "keras", ".", "Input", "(", "shape", "=", "(", "X_train", ".", "shape", "[", "1", "]", ",", ")", ")", "\n", "\n", "MLP", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "512", ",", "activation", "=", "'relu'", ")", "(", "inputs", ")", "\n", "MLP", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "0.5", ")", "(", "MLP", ")", "\n", "MLP", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "64", ",", "activation", "=", "'relu'", ")", "(", "MLP", ")", "\n", "MLP", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "0.5", ")", "(", "MLP", ")", "\n", "\n", "output", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "config", "[", "dataset", "]", "[", "'output_unit'", "]", ",", "activation", "=", "config", "[", "dataset", "]", "[", "'act_func'", "]", ")", "(", "MLP", ")", "\n", "model", "=", "tf", ".", "keras", ".", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "output", ")", "\n", "\n", "if", "dataset", "==", "'SEED'", "or", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "        ", "model", ".", "compile", "(", "loss", "=", "tf", ".", "keras", ".", "losses", ".", "CategoricalCrossentropy", "(", ")", ",", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", ")", ",", "\n", "metrics", "=", "[", "tf", ".", "keras", ".", "metrics", ".", "CategoricalAccuracy", "(", ")", "]", ")", "\n", "", "elif", "dataset", "==", "'BCI_IV_2b'", ":", "\n", "        ", "model", ".", "compile", "(", "loss", "=", "tf", ".", "keras", ".", "losses", ".", "BinaryCrossentropy", "(", ")", ",", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", ")", ",", "\n", "metrics", "=", "[", "tf", ".", "keras", ".", "metrics", ".", "BinaryAccuracy", "(", ")", "]", ")", "\n", "", "elif", "dataset", "==", "'SEED_VIG'", ":", "\n", "        ", "model", ".", "compile", "(", "loss", "=", "tf", ".", "keras", ".", "losses", ".", "MeanSquaredError", "(", ")", ",", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", ")", ",", "\n", "metrics", "=", "[", "corcoeff", "]", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Datasets Name Error'", ")", "\n", "\n", "", "print", "(", "model", ".", "summary", "(", ")", ")", "\n", "\n", "\n", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "config", "[", "dataset", "]", "[", "'PATH'", "]", ",", "'ckpt/val_spatial_model.ckpt'", ")", "\n", "\n", "'''\n    Early stopping strategy based on validation loss\n    '''", "\n", "callbacks", "=", "[", "tf", ".", "keras", ".", "callbacks", ".", "EarlyStopping", "(", "monitor", "=", "'val_loss'", ",", "mode", "=", "'auto'", ",", "patience", "=", "net_params", "[", "'early_stopping'", "]", ")", ",", "\n", "tf", ".", "keras", ".", "callbacks", ".", "ModelCheckpoint", "(", "filepath", "=", "checkpoint_path", ",", "monitor", "=", "'val_loss'", ",", "mode", "=", "'auto'", ",", "save_weights_only", "=", "True", ",", "save_best_only", "=", "True", ")", "]", "\n", "\n", "\n", "\n", "history", "=", "model", ".", "fit", "(", "X_train", ",", "Y_train", ",", "epochs", "=", "net_params", "[", "'epochs'", "]", ",", "batch_size", "=", "net_params", "[", "'batch_size'", "]", ",", "verbose", "=", "0", ",", "shuffle", "=", "True", ",", "\n", "validation_data", "=", "(", "X_val", ",", "Y_val", ")", ",", "callbacks", "=", "callbacks", ")", "\n", "\n", "\n", "model", ".", "load_weights", "(", "checkpoint_path", ")", "\n", "Y_pred", "=", "model", ".", "predict", "(", "X_val", ")", "\n", "\n", "\n", "\n", "return", "Y_pred", "\n", "", ""]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.load_config": [[12, 17], ["open", "yaml.safe_load", "os.path.join"], "function", ["None"], ["def", "load_config", "(", "name", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "sys", ".", "path", "[", "0", "]", ",", "name", ")", ")", "as", "file", ":", "\n", "        ", "config", "=", "yaml", ".", "safe_load", "(", "file", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.to_categorical": [[20, 24], ["len", "numpy.unique", "numpy.eye", "y.astype"], "function", ["None"], ["def", "to_categorical", "(", "y", ")", ":", "\n", "    ", "\"\"\" 1-hot encodes a tensor \"\"\"", "\n", "num_classes", "=", "len", "(", "np", ".", "unique", "(", "y", ")", ")", "\n", "return", "np", ".", "eye", "(", "num_classes", ",", "dtype", "=", "'uint8'", ")", "[", "y", ".", "astype", "(", "int", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.attention_3d_block": [[26, 47], ["int", "tensorflow.keras.layers.Permute", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Permute", "tensorflow.keras.layers.Permute", "tensorflow.keras.layers.Multiply", "tensorflow.keras.layers.Lambda", "tensorflow.math.reduce_sum"], "function", ["None"], ["", "def", "attention_3d_block", "(", "inputs", ",", "timestep", ")", ":", "\n", "    ", "input_dim", "=", "int", "(", "inputs", ".", "shape", "[", "2", "]", ")", "\n", "a", "=", "tf", ".", "keras", ".", "layers", ".", "Permute", "(", "(", "2", ",", "1", ")", ")", "(", "inputs", ")", "\n", "a", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "timestep", ",", "activation", "=", "'tanh'", ")", "(", "a", ")", "\n", "a", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "timestep", ",", "activation", "=", "'softmax'", ")", "(", "a", ")", "\n", "\n", "\n", "b", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "timestep", ",", "activation", "=", "'tanh'", ")", "(", "inputs", ")", "\n", "b", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "timestep", ",", "activation", "=", "'softmax'", ")", "(", "b", ")", "\n", "\n", "#a = Lambda(lambda x: K.mean(x, axis=1), name='dim_reduction')(a)", "\n", "#a = RepeatVector(input_dim)(a)_train, X_test, Y_train, Y_test)", "\n", "a_probs", "=", "tf", ".", "keras", ".", "layers", ".", "Permute", "(", "(", "2", ",", "1", ")", ")", "(", "a", ")", "\n", "b_probs", "=", "tf", ".", "keras", ".", "layers", ".", "Permute", "(", "(", "2", ",", "1", ")", ",", "name", "=", "'prob'", ")", "(", "b", ")", "\n", "#output_attention_mul = merge([inputs, a_probs], name='attention_mul')", "\n", "#a_probs     = Permute((2, 1), name='attention_vec')(a)", "\n", "#output_attention_mul = merge([inputs, a_probs], name='attention_mul', mode='mul')", "\n", "output_attention_mul", "=", "tf", ".", "keras", ".", "layers", ".", "Multiply", "(", ")", "(", "[", "inputs", ",", "a_probs", "]", ")", "\n", "output_attention_mul", "=", "tf", ".", "keras", ".", "layers", ".", "Lambda", "(", "lambda", "z", ":", "tf", ".", "math", ".", "reduce_sum", "(", "z", ",", "axis", "=", "1", ")", ")", "(", "output_attention_mul", ")", "\n", "\n", "return", "b_probs", ",", "output_attention_mul", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.corcoeff": [[48, 52], ["tensorflow.reduce_sum", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], "function", ["None"], ["", "def", "corcoeff", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "num", "=", "tf", ".", "reduce_sum", "(", "(", "y_true", "-", "tf", ".", "reduce_mean", "(", "y_true", ")", ")", "*", "(", "y_pred", "-", "tf", ".", "reduce_mean", "(", "y_pred", ")", ")", ")", "\n", "den", "=", "tf", ".", "square", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "y_true", "-", "tf", ".", "reduce_mean", "(", "y_true", ")", ")", ")", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "y_pred", "-", "tf", ".", "reduce_mean", "(", "y_pred", ")", ")", ")", ")", "\n", "return", "num", "/", "den", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.spatial_temporal_info_stream": [[57, 259], ["numpy.vstack", "to_categorical.squeeze", "to_categorical.squeeze", "tensorflow.keras.Input", "numpy.vstack", "numpy.transpose", "numpy.reshape", "numpy.reshape", "numpy.reshape", "tensorflow.keras.Sequential", "tensorflow.keras.Input", "print", "range", "spatial_temporal_information.attention_3d_block", "tensorflow.keras.layers.concatenate", "spatial_temporal_information.attention_3d_block", "tensorflow.keras.layers.concatenate", "tensorflow.keras.Model", "print", "tf.keras.Model.load_weights", "tf.keras.Model.predict", "numpy.mean", "spatial_temporal_information.to_categorical", "spatial_temporal_information.to_categorical", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "sklearn.preprocessing.MinMaxScaler", "sklearn.preprocessing.MinMaxScaler.fit", "sklearn.preprocessing.MinMaxScaler.transform", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Lambda", "tensorflow.keras.layers.Lambda", "tensorflow.keras.layers.Lambda", "tensorflow.keras.layers.Lambda", "tensorflow.keras.layers.Multiply", "tensorflow.keras.layers.Multiply", "tensorflow.keras.layers.Dense", "tf.keras.Model.compile", "tf.keras.Model.summary", "os.path.join", "os.path.join", "tf.keras.Model.fit", "numpy.std", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.LeakyReLU", "tf.keras.Model.compile", "tensorflow.keras.callbacks.EarlyStopping", "tensorflow.keras.callbacks.ModelCheckpoint", "numpy.std", "numpy.mean", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.keras.losses.CategoricalCrossentropy", "tensorflow.keras.optimizers.Adam", "tf.keras.Model.compile", "Exception", "tensorflow.keras.layers.LSTM", "tf.keras.Sequential.", "tensorflow.keras.layers.LSTM", "tf.keras.Sequential.", "tensorflow.keras.layers.Bidirectional", "tf.keras.Sequential.", "tensorflow.keras.layers.Bidirectional", "tf.keras.Sequential.", "tensorflow.keras.metrics.CategoricalAccuracy", "tensorflow.keras.losses.BinaryCrossentropy", "tensorflow.keras.optimizers.Adam", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.LSTM", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.LSTM", "tensorflow.keras.layers.Dropout", "tensorflow.keras.metrics.BinaryAccuracy", "tensorflow.keras.losses.MeanSquaredError", "tensorflow.keras.optimizers.Adam"], "function", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.attention_3d_block", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.attention_3d_block", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.to_categorical", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.model.spatial_temporal_information.to_categorical", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.fit", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.fit"], ["", "def", "spatial_temporal_info_stream", "(", "train_embed", ",", "test_embed", ",", "X_train_features", ",", "X_test_features", ",", "Y_train", ",", "Y_test", ",", "dataset", ",", "net_params", ")", ":", "\n", "\n", "\n", "    ", "'''\n    Spatal Info Stream\n    '''", "\n", "\n", "embed", "=", "np", ".", "vstack", "(", "(", "train_embed", ",", "test_embed", ")", ")", "\n", "# scaler = StandardScaler()", "\n", "# scaler.fit(X)", "\n", "# X = scaler.transform(X)", "\n", "embed", "=", "embed", "-", "np", ".", "mean", "(", "embed", ",", "keepdims", "=", "True", ")", "\n", "embed", "=", "2", "*", "(", "embed", "/", "np", ".", "std", "(", "embed", ",", "keepdims", "=", "True", ")", ")", "-", "1", "\n", "# X = np.expand_dims(X, axis=3)", "\n", "train_embed", "=", "embed", "[", "0", ":", "train_embed", ".", "shape", "[", "0", "]", "]", "\n", "test_embed", "=", "embed", "[", "-", "test_embed", ".", "shape", "[", "0", "]", ":", "]", "\n", "\n", "\n", "if", "dataset", "==", "'SEED'", "or", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "        ", "Y_train", "=", "to_categorical", "(", "Y_train", ")", "\n", "Y_test", "=", "to_categorical", "(", "Y_test", ")", "\n", "\n", "", "Y_train", "=", "Y_train", ".", "squeeze", "(", ")", "\n", "Y_test", "=", "Y_test", ".", "squeeze", "(", ")", "\n", "\n", "\n", "\n", "inputs_spatial", "=", "tf", ".", "keras", ".", "Input", "(", "shape", "=", "(", "embed", ".", "shape", "[", "1", "]", ",", ")", ")", "\n", "\n", "MLP", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "512", ",", "activation", "=", "'relu'", ")", "(", "inputs_spatial", ")", "\n", "MLP", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "0.5", ")", "(", "MLP", ")", "\n", "MLP", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "64", ",", "activation", "=", "'relu'", ")", "(", "MLP", ")", "\n", "MLP", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "0.5", ")", "(", "MLP", ")", "\n", "\n", "MLP_F", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "1", ",", "activation", "=", "'relu'", ")", "(", "MLP", ")", "\n", "\n", "\n", "'''\n    Temporal Info Stream\n    '''", "\n", "\n", "X", "=", "np", ".", "vstack", "(", "(", "X_train_features", ",", "X_test_features", ")", ")", "\n", "X", "=", "np", ".", "transpose", "(", "X", ",", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "#trial, timestep, channel, features", "\n", "\n", "X", "=", "np", ".", "reshape", "(", "X", ",", "(", "X", ".", "shape", "[", "0", "]", ",", "X", ".", "shape", "[", "1", "]", ",", "X", ".", "shape", "[", "2", "]", "*", "X", ".", "shape", "[", "3", "]", ")", ")", "#trial, timestep, channel*features", "\n", "X_new", "=", "np", ".", "reshape", "(", "X", ",", "(", "X", ".", "shape", "[", "0", "]", "*", "X", ".", "shape", "[", "1", "]", ",", "X", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "if", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "        ", "X_new", "=", "(", "X_new", "-", "np", ".", "mean", "(", "X_new", ")", ")", "/", "np", ".", "std", "(", "X_new", ")", "\n", "", "else", ":", "\n", "        ", "scalar", "=", "MinMaxScaler", "(", "feature_range", "=", "(", "-", "1", ",", "1", ")", ",", "copy", "=", "True", ")", "\n", "scalar", ".", "fit", "(", "X_new", ")", "\n", "X_new", "=", "scalar", ".", "transform", "(", "X_new", ")", "\n", "\n", "", "X", "=", "np", ".", "reshape", "(", "X_new", ",", "(", "X", ".", "shape", "[", "0", "]", ",", "X", ".", "shape", "[", "1", "]", ",", "X", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "X_train_features", "=", "X", "[", "0", ":", "X_train_features", ".", "shape", "[", "0", "]", "]", "\n", "X_test_features", "=", "X", "[", "-", "X_test_features", ".", "shape", "[", "0", "]", ":", "]", "\n", "\n", "\n", "batch_norm_module", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", "momentum", "=", "0.99", ",", "epsilon", "=", "0.001", ",", "\n", "beta_initializer", "=", "\"zeros\"", ",", "\n", "gamma_initializer", "=", "\"ones\"", ",", "name", "=", "'batchnorm'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "LeakyReLU", "(", "alpha", "=", "0.3", ")", ",", "\n", "]", "\n", ")", "\n", "\n", "\n", "inputs_temporal", "=", "tf", ".", "keras", ".", "Input", "(", "shape", "=", "(", "X", ".", "shape", "[", "1", "]", ",", "X", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "print", "(", "dataset", ",", "config", "[", "dataset", "]", "[", "'params'", "]", "[", "'LSTM_Layer_No'", "]", ")", "\n", "dropout", "=", "[", "0.2", ",", "0.1", ",", "0.1", "]", "\n", "for", "layer_num", "in", "range", "(", "1", ",", "config", "[", "dataset", "]", "[", "'params'", "]", "[", "'LSTM_Layer_No'", "]", "+", "1", ")", ":", "\n", "\n", "        ", "if", "config", "[", "dataset", "]", "[", "'params'", "]", "[", "'Bi_LSTM'", "]", "==", "False", ":", "\n", "            ", "if", "layer_num", "==", "1", ":", "\n", "                ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "LSTM", "(", "units", "=", "256", ",", "return_sequences", "=", "True", ",", "activation", "=", "\"tanh\"", ",", "\n", "recurrent_activation", "=", "\"sigmoid\"", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "\"glorot_uniform\"", ",", "\n", "recurrent_initializer", "=", "\"orthogonal\"", ",", "\n", "bias_initializer", "=", "\"zeros\"", ")", "(", "inputs_temporal", ")", "\n", "if", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "                    ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", "[", "layer_num", "-", "1", "]", ")", "(", "lstm_out", ")", "\n", "", "else", ":", "\n", "                    ", "lstm_out", "=", "batch_norm_module", "(", "lstm_out", ")", "\n", "\n", "\n", "", "", "else", ":", "\n", "                ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "LSTM", "(", "units", "=", "256", ",", "return_sequences", "=", "True", ",", "activation", "=", "\"tanh\"", ",", "\n", "recurrent_activation", "=", "\"sigmoid\"", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "\"glorot_uniform\"", ",", "\n", "recurrent_initializer", "=", "\"orthogonal\"", ",", "\n", "bias_initializer", "=", "\"zeros\"", ")", "(", "lstm_out", ")", "\n", "if", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "                    ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", "[", "layer_num", "-", "1", "]", ")", "(", "lstm_out", ")", "\n", "", "else", ":", "\n", "                    ", "lstm_out", "=", "batch_norm_module", "(", "lstm_out", ")", "\n", "\n", "", "", "", "else", ":", "\n", "\n", "            ", "if", "layer_num", "==", "1", ":", "\n", "                ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Bidirectional", "(", "tf", ".", "keras", ".", "layers", ".", "LSTM", "(", "units", "=", "256", ",", "return_sequences", "=", "True", ",", "activation", "=", "\"tanh\"", ",", "\n", "recurrent_activation", "=", "\"sigmoid\"", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "\"glorot_uniform\"", ",", "\n", "recurrent_initializer", "=", "\"orthogonal\"", ",", "\n", "bias_initializer", "=", "\"zeros\"", ")", ")", "(", "inputs_temporal", ")", "\n", "if", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "                    ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", "[", "layer_num", "-", "1", "]", ")", "(", "lstm_out", ")", "\n", "", "else", ":", "\n", "                    ", "lstm_out", "=", "batch_norm_module", "(", "lstm_out", ")", "\n", "\n", "\n", "", "", "else", ":", "\n", "                ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Bidirectional", "(", "tf", ".", "keras", ".", "layers", ".", "LSTM", "(", "units", "=", "256", ",", "return_sequences", "=", "True", ",", "activation", "=", "\"tanh\"", ",", "\n", "recurrent_activation", "=", "\"sigmoid\"", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "\"glorot_uniform\"", ",", "\n", "recurrent_initializer", "=", "\"orthogonal\"", ",", "\n", "bias_initializer", "=", "\"zeros\"", ")", ")", "(", "lstm_out", ")", "\n", "if", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "                    ", "lstm_out", "=", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", "[", "layer_num", "-", "1", "]", ")", "(", "lstm_out", ")", "\n", "", "else", ":", "\n", "                    ", "lstm_out", "=", "batch_norm_module", "(", "lstm_out", ")", "\n", "\n", "\n", "\n", "\n", "", "", "", "", "_", ",", "attention_mul", "=", "attention_3d_block", "(", "lstm_out", ",", "timestep", "=", "config", "[", "dataset", "]", "[", "'timestep'", "]", ")", "\n", "attention_mul", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "64", ",", "activation", "=", "'relu'", ")", "(", "attention_mul", ")", "\n", "\n", "\n", "attention_mul_F", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "1", ",", "activation", "=", "'relu'", ")", "(", "attention_mul", ")", "\n", "\n", "\n", "'''\n    Feature usion with attention mechanism\n    '''", "\n", "\n", "attention_score", "=", "tf", ".", "keras", ".", "layers", ".", "concatenate", "(", "[", "MLP_F", ",", "attention_mul_F", "]", ")", "\n", "attention_score", "=", "tf", ".", "keras", ".", "layers", ".", "Lambda", "(", "lambda", "x", ":", "tf", ".", "expand_dims", "(", "x", ",", "axis", "=", "2", ")", ",", "name", "=", "'dim_expansion'", ")", "(", "attention_score", ")", "\n", "attention_score", "=", "tf", ".", "keras", ".", "layers", ".", "Lambda", "(", "lambda", "x", ":", "tf", ".", "transpose", "(", "x", ",", "(", "0", ",", "2", ",", "1", ")", ")", ",", "name", "=", "'dim_permute'", ")", "(", "attention_score", ")", "\n", "attention_score", ",", "_", "=", "attention_3d_block", "(", "attention_score", ",", "2", ")", "\n", "# attention_score  = Lambda(lambda x: x, name='weight_score')(attention_score)", "\n", "\n", "attention_score_MLP", "=", "tf", ".", "keras", ".", "layers", ".", "Lambda", "(", "lambda", "x", ":", "x", "[", ":", ",", "0", "]", "+", "1", ",", "name", "=", "'value_fetch_1'", ")", "(", "attention_score", ")", "\n", "attention_score_att", "=", "tf", ".", "keras", ".", "layers", ".", "Lambda", "(", "lambda", "x", ":", "x", "[", ":", ",", "1", "]", "+", "1", ",", "name", "=", "'value_fetch_2'", ")", "(", "attention_score", ")", "\n", "attention_score_MLP", "=", "tf", ".", "keras", ".", "layers", ".", "Multiply", "(", ")", "(", "[", "attention_score_MLP", ",", "MLP", "]", ")", "\n", "attention_score_att", "=", "tf", ".", "keras", ".", "layers", ".", "Multiply", "(", ")", "(", "[", "attention_score_att", ",", "attention_mul", "]", ")", "\n", "attention_score_final", "=", "tf", ".", "keras", ".", "layers", ".", "concatenate", "(", "[", "attention_score_MLP", ",", "attention_score_att", "]", ")", "\n", "\n", "\n", "\n", "output", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "config", "[", "dataset", "]", "[", "'output_unit'", "]", ",", "activation", "=", "config", "[", "dataset", "]", "[", "'act_func'", "]", ")", "(", "attention_score_final", ")", "\n", "model", "=", "tf", ".", "keras", ".", "Model", "(", "inputs", "=", "[", "inputs_spatial", ",", "inputs_temporal", "]", ",", "outputs", "=", "output", ")", "\n", "\n", "if", "dataset", "==", "'SEED'", "or", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "        ", "model", ".", "compile", "(", "loss", "=", "tf", ".", "keras", ".", "losses", ".", "CategoricalCrossentropy", "(", ")", ",", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", ")", ",", "\n", "metrics", "=", "[", "tf", ".", "keras", ".", "metrics", ".", "CategoricalAccuracy", "(", ")", "]", ")", "\n", "", "elif", "dataset", "==", "'BCI_IV_2b'", ":", "\n", "        ", "model", ".", "compile", "(", "loss", "=", "tf", ".", "keras", ".", "losses", ".", "BinaryCrossentropy", "(", ")", ",", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", ")", ",", "\n", "metrics", "=", "[", "tf", ".", "keras", ".", "metrics", ".", "BinaryAccuracy", "(", ")", "]", ")", "\n", "", "elif", "dataset", "==", "'SEED_VIG'", ":", "\n", "        ", "model", ".", "compile", "(", "loss", "=", "tf", ".", "keras", ".", "losses", ".", "MeanSquaredError", "(", ")", ",", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", ")", ",", "\n", "metrics", "=", "[", "corcoeff", "]", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Datasets Name Error'", ")", "\n", "\n", "", "print", "(", "model", ".", "summary", "(", ")", ")", "\n", "\n", "\n", "if", "net_params", "[", "'saved_ckpt_flag'", "]", "==", "True", ":", "\n", "        ", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "config", "[", "dataset", "]", "[", "'PATH'", "]", ",", "'saved_ckpt/test_spatial_temporal_model.ckpt'", ")", "\n", "\n", "", "else", ":", "\n", "\n", "        ", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "config", "[", "dataset", "]", "[", "'PATH'", "]", ",", "'ckpt/test_spatial_temporal_model.ckpt'", ")", "\n", "\n", "'''\n        Early stopping strategy based on training loss\n        '''", "\n", "callbacks", "=", "[", "tf", ".", "keras", ".", "callbacks", ".", "EarlyStopping", "(", "monitor", "=", "'loss'", ",", "mode", "=", "'auto'", ",", "patience", "=", "net_params", "[", "'early_stopping'", "]", ")", ",", "\n", "tf", ".", "keras", ".", "callbacks", ".", "ModelCheckpoint", "(", "filepath", "=", "checkpoint_path", ",", "monitor", "=", "'loss'", ",", "mode", "=", "'auto'", ",", "save_weights_only", "=", "True", ",", "save_best_only", "=", "True", ")", "]", "\n", "\n", "\n", "\n", "history", "=", "model", ".", "fit", "(", "[", "train_embed", ",", "X_train_features", "]", ",", "Y_train", ",", "epochs", "=", "net_params", "[", "'epochs'", "]", ",", "batch_size", "=", "net_params", "[", "'batch_size'", "]", ",", "verbose", "=", "1", ",", "shuffle", "=", "True", ",", "\n", "validation_data", "=", "(", "[", "test_embed", ",", "X_test_features", "]", ",", "Y_test", ")", ",", "callbacks", "=", "callbacks", ")", "\n", "\n", "\n", "\n", "\n", "", "model", ".", "load_weights", "(", "checkpoint_path", ")", "\n", "\n", "Y_pred", "=", "model", ".", "predict", "(", "[", "test_embed", ",", "X_test_features", "]", ")", "\n", "\n", "\n", "\n", "return", "Y_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.feature_extraction.feature_extraction": [[24, 59], ["scipy.signal.periodogram", "numpy.zeros", "range", "numpy.zeros", "range", "np.zeros.tolist", "numpy.log10", "numpy.hstack", "numpy.zeros", "scipy.integrate.simps", "library.signal_filtering.butter_bandpass_filter", "numpy.argmax", "numpy.argmax", "numpy.log", "numpy.var", "numpy.exp"], "function", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.signal_filtering.butter_bandpass_filter"], ["def", "feature_extraction", "(", "data", ")", ":", "# data is current channel, temp_data are all 23 channels under the same frame", "\n", "\n", "    ", "sf", "=", "fs", "\n", "win", "=", "sf", "\n", "# freqs, psd = signal.welch(data, sf, nperseg=win, scaling='density')", "\n", "freqs", ",", "psd", "=", "signal", ".", "periodogram", "(", "data", ",", "sf", ",", "window", "=", "'hann'", ",", "scaling", "=", "'density'", ",", "detrend", "=", "'constant'", ")", "\n", "\n", "\n", "psd_all", "=", "np", ".", "zeros", "(", "(", "25", ",", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "25", ")", ":", "\n", "        ", "low", ",", "high", "=", "i", "*", "2", "+", "0.5", ",", "(", "i", "+", "1", ")", "*", "2", "+", "0.5", "\n", "idx_min", "=", "np", ".", "argmax", "(", "freqs", ">", "low", ")", "-", "1", "\n", "idx_max", "=", "np", ".", "argmax", "(", "freqs", ">", "high", ")", "-", "1", "\n", "# print(freqs)", "\n", "idx", "=", "np", ".", "zeros", "(", "dtype", "=", "bool", ",", "shape", "=", "freqs", ".", "shape", ")", "\n", "idx", "[", "idx_min", ":", "idx_max", "]", "=", "True", "\n", "# print('idx_max', idx_min, idx_max)", "\n", "psd_all", "[", "i", "]", "=", "simps", "(", "psd", "[", "idx", "]", ",", "freqs", "[", "idx", "]", ")", "\n", "\n", "\n", "", "DE_all", "=", "np", ".", "zeros", "(", "(", "25", ",", ")", ")", "\n", "\n", "for", "m", "in", "range", "(", "0", ",", "25", ")", ":", "#frequency band", "\n", "            ", "new_data", "=", "butter_bandpass_filter", "(", "data", ",", "lowcut", "=", "0.5", "+", "m", "*", "2", ",", "highcut", "=", "0.5", "+", "(", "m", "+", "1", ")", "*", "2", ",", "fs", "=", "250", ",", "order", "=", "4", ")", "\n", "\n", "DE_all", "[", "m", "]", "=", "0.5", "*", "np", ".", "log", "(", "2", "*", "np", ".", "pi", "*", "np", ".", "exp", "(", "1", ")", "*", "np", ".", "var", "(", "new_data", ")", ")", "\n", "\n", "", "features_1", "=", "psd_all", ".", "tolist", "(", ")", "\n", "features_1", "=", "np", ".", "log10", "(", "features_1", ")", "\n", "\n", "features_2", "=", "DE_all", "\n", "\n", "features", "=", "np", ".", "hstack", "(", "(", "features_1", ",", "features_2", ")", ")", "\n", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjIdentitySpace.__init__": [[28, 30], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjIdentitySpace.fit": [[31, 33], ["None"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "X", ",", "y", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjIdentitySpace.transform": [[34, 36], ["None"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "X", ")", ":", "\n", "        ", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjLWSpace.__init__": [[39, 41], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "shrink", ")", ":", "\n", "        ", "self", ".", "shrink", "=", "shrink", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjLWSpace.fit": [[42, 44], ["None"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "X", ",", "y", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjLWSpace.transform": [[45, 52], ["numpy.empty", "range", "range", "spfiltering.shrink"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.shrink"], ["", "def", "transform", "(", "self", ",", "X", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "p", ",", "_", "=", "X", ".", "shape", "\n", "Xout", "=", "np", ".", "empty", "(", "(", "n_sub", ",", "n_fb", ",", "p", ",", "p", ")", ")", "\n", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "            ", "for", "sub", "in", "range", "(", "n_sub", ")", ":", "\n", "                ", "Xout", "[", "sub", ",", "fb", "]", "=", "shrink", "(", "X", "[", "sub", ",", "fb", "]", ",", "self", ".", "shrink", ")", "\n", "", "", "return", "Xout", "# (sub , fb, compo, compo)", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjCommonWassSpace.__init__": [[56, 58], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "rank_num", "=", "50", ")", ":", "\n", "        ", "self", ".", "rank_num", "=", "rank_num", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjCommonWassSpace.fit": [[59, 71], ["range", "spfiltering.mean_covs", "scipy.linalg.eigh", "spfiltering.ProjCommonWassSpace.filters_.append", "numpy.argsort", "numpy.abs"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.mean_covs"], ["", "def", "fit", "(", "self", ",", "X", ",", "y", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "_", ",", "_", "=", "X", ".", "shape", "\n", "self", ".", "filters_", "=", "[", "]", "\n", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "            ", "covsfb", "=", "X", "[", ":", ",", "fb", "]", "\n", "C", "=", "mean_covs", "(", "covsfb", ",", "self", ".", "rank_num", ")", "\n", "eigvals", ",", "eigvecs", "=", "eigh", "(", "C", ")", "\n", "ix", "=", "np", ".", "argsort", "(", "np", ".", "abs", "(", "eigvals", ")", ")", "[", ":", ":", "-", "1", "]", "\n", "evecs", "=", "eigvecs", "[", ":", ",", "ix", "]", "\n", "evecs", "=", "evecs", "[", ":", ",", ":", "self", ".", "rank_num", "]", ".", "T", "\n", "self", ".", "filters_", ".", "append", "(", "evecs", ")", "# (fb, compo, chan) row vec", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjCommonWassSpace.transform": [[72, 80], ["numpy.empty", "range", "range"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "X", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "_", ",", "_", "=", "X", ".", "shape", "\n", "Xout", "=", "np", ".", "empty", "(", "(", "n_sub", ",", "n_fb", ",", "self", ".", "rank_num", ",", "self", ".", "rank_num", ")", ")", "\n", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "            ", "filters", "=", "self", ".", "filters_", "[", "fb", "]", "# (compo, chan)", "\n", "for", "sub", "in", "range", "(", "n_sub", ")", ":", "\n", "                ", "Xout", "[", "sub", ",", "fb", "]", "=", "filters", "@", "X", "[", "sub", ",", "fb", "]", "@", "filters", ".", "T", "\n", "", "", "return", "Xout", "# (sub , fb, compo, compo)", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjCommonSpace.__init__": [[83, 87], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "scale", "=", "1", ",", "rank_num", "=", "60", ",", "reg", "=", "1e-7", ")", ":", "\n", "        ", "self", ".", "scale", "=", "scale", "\n", "self", ".", "rank_num", "=", "rank_num", "\n", "self", ".", "reg", "=", "reg", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjCommonSpace.fit": [[88, 104], ["spfiltering._get_scale", "range", "covsfb.mean", "scipy.linalg.eigh", "spfiltering.ProjCommonSpace.filters_.append", "spfiltering.ProjCommonSpace.patterns_.append", "numpy.argsort", "numpy.abs", "scipy.linalg.pinv"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering._get_scale"], ["", "def", "fit", "(", "self", ",", "X", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "_", ",", "_", "=", "X", ".", "shape", "\n", "self", ".", "scale_", "=", "_get_scale", "(", "X", ",", "self", ".", "scale", ")", "\n", "self", ".", "filters_", "=", "[", "]", "\n", "self", ".", "patterns_", "=", "[", "]", "\n", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "            ", "covsfb", "=", "X", "[", ":", ",", "fb", "]", "\n", "C", "=", "covsfb", ".", "mean", "(", "axis", "=", "0", ")", "\n", "eigvals", ",", "eigvecs", "=", "eigh", "(", "C", ")", "\n", "\n", "ix", "=", "np", ".", "argsort", "(", "np", ".", "abs", "(", "eigvals", ")", ")", "[", ":", ":", "-", "1", "]", "\n", "evecs", "=", "eigvecs", "[", ":", ",", "ix", "]", "\n", "evecs", "=", "evecs", "[", ":", ",", ":", "self", ".", "rank_num", "]", ".", "T", "#Top R eigenvalues", "\n", "self", ".", "filters_", ".", "append", "(", "evecs", ")", "# (fb, compo, chan) row vec", "\n", "self", ".", "patterns_", ".", "append", "(", "pinv", "(", "evecs", ")", ".", "T", ")", "# (fb, compo, chan)", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjCommonSpace.transform": [[105, 115], ["numpy.empty", "range", "range", "numpy.eye"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "X", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "_", ",", "_", "=", "X", ".", "shape", "\n", "Xout", "=", "np", ".", "empty", "(", "(", "n_sub", ",", "n_fb", ",", "self", ".", "rank_num", ",", "self", ".", "rank_num", ")", ")", "\n", "Xs", "=", "self", ".", "scale_", "*", "X", "\n", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "            ", "filters", "=", "self", ".", "filters_", "[", "fb", "]", "# (compo, chan)", "\n", "for", "sub", "in", "range", "(", "n_sub", ")", ":", "\n", "                ", "Xout", "[", "sub", ",", "fb", "]", "=", "filters", "@", "Xs", "[", "sub", ",", "fb", "]", "@", "filters", ".", "T", "\n", "Xout", "[", "sub", ",", "fb", "]", "+=", "self", ".", "reg", "*", "np", ".", "eye", "(", "self", ".", "rank_num", ")", "\n", "", "", "return", "Xout", "# (sub , fb, compo, compo)", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjSPoCSpace.__init__": [[118, 123], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "shrink", "=", "0", ",", "scale", "=", "1", ",", "rank_num", "=", "50", ",", "reg", "=", "1e-7", ")", ":", "\n", "        ", "self", ".", "shrink", "=", "shrink", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "rank_num", "=", "rank_num", "\n", "self", ".", "reg", "=", "reg", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjSPoCSpace.fit": [[124, 143], ["spfiltering.fstd", "spfiltering._get_scale", "range", "covsfb.mean", "numpy.mean", "spfiltering.shrink", "scipy.linalg.eigh", "spfiltering.ProjSPoCSpace.filters_.append", "spfiltering.ProjSPoCSpace.patterns_.append", "numpy.argsort", "numpy.linalg.norm", "numpy.abs", "scipy.linalg.pinv"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.fstd", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering._get_scale", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.shrink"], ["", "def", "fit", "(", "self", ",", "X", ",", "y", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "_", ",", "_", "=", "X", ".", "shape", "\n", "target", "=", "fstd", "(", "y", ")", "\n", "self", ".", "scale_", "=", "_get_scale", "(", "X", ",", "self", ".", "scale", ")", "\n", "self", ".", "filters_", "=", "[", "]", "\n", "self", ".", "patterns_", "=", "[", "]", "\n", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "            ", "covsfb", "=", "X", "[", ":", ",", "fb", "]", "\n", "C", "=", "covsfb", ".", "mean", "(", "axis", "=", "0", ")", "\n", "Cz", "=", "np", ".", "mean", "(", "covsfb", "*", "target", "[", ":", ",", "None", ",", "None", "]", ",", "axis", "=", "0", ")", "\n", "C", "=", "shrink", "(", "C", ",", "self", ".", "shrink", ")", "\n", "eigvals", ",", "eigvecs", "=", "eigh", "(", "Cz", ",", "C", ")", "\n", "ix", "=", "np", ".", "argsort", "(", "np", ".", "abs", "(", "eigvals", ")", ")", "[", ":", ":", "-", "1", "]", "\n", "evecs", "=", "eigvecs", "[", ":", ",", "ix", "]", "\n", "evecs", "=", "evecs", "[", ":", ",", ":", "self", ".", "rank_num", "]", ".", "T", "\n", "evecs", "/=", "np", ".", "linalg", ".", "norm", "(", "evecs", ",", "axis", "=", "1", ")", "[", ":", ",", "None", "]", "\n", "self", ".", "filters_", ".", "append", "(", "evecs", ")", "# (fb, compo, chan) row vec", "\n", "self", ".", "patterns_", ".", "append", "(", "pinv", "(", "evecs", ")", ".", "T", ")", "# (fb, compo, chan)", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.ProjSPoCSpace.transform": [[144, 154], ["numpy.empty", "range", "range", "numpy.eye"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "X", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "_", ",", "_", "=", "X", ".", "shape", "\n", "Xout", "=", "np", ".", "empty", "(", "(", "n_sub", ",", "n_fb", ",", "self", ".", "rank_num", ",", "self", ".", "rank_num", ")", ")", "\n", "Xs", "=", "self", ".", "scale_", "*", "X", "\n", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "            ", "filters", "=", "self", ".", "filters_", "[", "fb", "]", "# (compo, chan)", "\n", "for", "sub", "in", "range", "(", "n_sub", ")", ":", "\n", "                ", "Xout", "[", "sub", ",", "fb", "]", "=", "filters", "@", "Xs", "[", "sub", ",", "fb", "]", "@", "filters", ".", "T", "\n", "Xout", "[", "sub", ",", "fb", "]", "+=", "self", ".", "reg", "*", "np", ".", "eye", "(", "self", ".", "rank_num", ")", "\n", "", "", "return", "Xout", "# (sub, fb, compo, compo)", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.shrink": [[8, 12], ["len", "numpy.eye", "numpy.trace"], "function", ["None"], ["def", "shrink", "(", "cov", ",", "alpha", ")", ":", "\n", "    ", "n", "=", "len", "(", "cov", ")", "\n", "shrink_cov", "=", "(", "1", "-", "alpha", ")", "*", "cov", "+", "alpha", "*", "np", ".", "trace", "(", "cov", ")", "*", "np", ".", "eye", "(", "n", ")", "/", "n", "\n", "return", "shrink_cov", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.fstd": [[14, 19], ["y.astype.astype", "y.astype.mean", "y.astype.std"], "function", ["None"], ["", "def", "fstd", "(", "y", ")", ":", "\n", "    ", "y", "=", "y", ".", "astype", "(", "np", ".", "float32", ")", "\n", "y", "-=", "y", ".", "mean", "(", "axis", "=", "0", ")", "\n", "y", "/=", "y", ".", "std", "(", "axis", "=", "0", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering._get_scale": [[21, 25], ["numpy.mean", "numpy.trace"], "function", ["None"], ["", "def", "_get_scale", "(", "X", ",", "scale", ")", ":", "\n", "    ", "if", "scale", "==", "'auto'", ":", "\n", "        ", "scale", "=", "1", "/", "np", ".", "mean", "(", "[", "[", "np", ".", "trace", "(", "y", ")", "for", "y", "in", "x", "]", "for", "x", "in", "X", "]", ")", "\n", "", "return", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.mean_covs": [[156, 182], ["spfiltering.sqrtm", "numpy.dot", "numpy.ones", "numpy.mean", "numpy.finfo", "numpy.zeros", "enumerate", "spfiltering.sqrtm", "numpy.linalg.norm", "print", "numpy.dot", "numpy.dot", "spfiltering.sqrtm"], "function", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.sqrtm", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.sqrtm", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.sqrtm"], ["", "", "def", "mean_covs", "(", "covmats", ",", "rank", ",", "tol", "=", "10e-4", ",", "maxiter", "=", "50", ",", "init", "=", "None", ",", "\n", "sample_weight", "=", "None", ")", ":", "\n", "    ", "Nt", ",", "Ne", ",", "Ne", "=", "covmats", ".", "shape", "\n", "if", "sample_weight", "is", "None", ":", "\n", "        ", "sample_weight", "=", "np", ".", "ones", "(", "Nt", ")", "\n", "", "if", "init", "is", "None", ":", "\n", "        ", "C", "=", "np", ".", "mean", "(", "covmats", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "        ", "C", "=", "init", "\n", "", "k", "=", "0", "\n", "K", "=", "sqrtm", "(", "C", ",", "rank", ")", "\n", "crit", "=", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "max", "\n", "# stop when J<10^-9 or max iteration = 50", "\n", "while", "(", "crit", ">", "tol", ")", "and", "(", "k", "<", "maxiter", ")", ":", "\n", "        ", "k", "=", "k", "+", "1", "\n", "J", "=", "np", ".", "zeros", "(", "(", "Ne", ",", "Ne", ")", ")", "\n", "for", "index", ",", "Ci", "in", "enumerate", "(", "covmats", ")", ":", "\n", "            ", "tmp", "=", "np", ".", "dot", "(", "np", ".", "dot", "(", "K", ",", "Ci", ")", ",", "K", ")", "\n", "J", "+=", "sample_weight", "[", "index", "]", "*", "sqrtm", "(", "tmp", ")", "\n", "", "Knew", "=", "sqrtm", "(", "J", ",", "rank", ")", "\n", "crit", "=", "np", ".", "linalg", ".", "norm", "(", "Knew", "-", "K", ",", "ord", "=", "'fro'", ")", "\n", "K", "=", "Knew", "\n", "", "if", "k", "==", "maxiter", ":", "\n", "        ", "print", "(", "'Max iter reach'", ")", "\n", "", "C", "=", "np", ".", "dot", "(", "K", ",", "K", ")", "\n", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.spfiltering.sqrtm": [[184, 191], ["numpy.linalg.eigh", "numpy.dot", "numpy.sqrt", "numpy.abs"], "function", ["None"], ["", "def", "sqrtm", "(", "C", ",", "rank", "=", "None", ")", ":", "\n", "    ", "if", "rank", "is", "None", ":", "\n", "        ", "rank", "=", "C", ".", "shape", "[", "0", "]", "\n", "", "d", ",", "U", "=", "np", ".", "linalg", ".", "eigh", "(", "C", ")", "\n", "U", "=", "U", "[", ":", ",", "-", "rank", ":", "]", "\n", "d", "=", "d", "[", "-", "rank", ":", "]", "\n", "return", "np", ".", "dot", "(", "U", ",", "np", ".", "sqrt", "(", "np", ".", "abs", "(", "d", ")", ")", "[", ":", ",", "None", "]", "*", "U", ".", "T", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.signal_filtering.signal_filtering.__init__": [[58, 60], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.signal_filtering.signal_filtering.main": [[62, 104], ["numpy.zeros", "range", "new_data.tolist.tolist.tolist", "numpy.arange", "signal_filtering.butter_bandpass_filter", "int", "int"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.signal_filtering.butter_bandpass_filter"], ["", "def", "main", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "dataset", "==", "'BCI_IV_2a'", ":", "\n", "            ", "start_point", ",", "end_point", "=", "2.0", ",", "6.0", "\n", "channel_num", "=", "22", "\n", "", "if", "self", ".", "dataset", "==", "'BCI_IV_2b'", ":", "\n", "            ", "start_point", ",", "end_point", "=", "3.4", ",", "7.5", "\n", "channel_num", "=", "3", "\n", "# plt.plot(data.T)", "\n", "# plt.show()", "\n", "", "data", "=", "data", "[", ":", ",", "int", "(", "fs", "*", "start_point", ")", ":", "int", "(", "fs", "*", "end_point", ")", "]", "\n", "\n", "# for channel in range(data.shape[0]):", "\n", "#     data[channel] = (data[channel] - np.min(data[channel]))/ (np.max(data[channel])-np.min(data[channel]))", "\n", "\n", "new_data", "=", "np", ".", "zeros", "(", "(", "25", ",", "data", ".", "shape", "[", "0", "]", ",", "data", ".", "shape", "[", "1", "]", ")", ")", "#frequency_band, channels, time-series", "\n", "# plt.plot(data[2])", "\n", "# plt.show()", "\n", "for", "m", "in", "range", "(", "0", ",", "25", ")", ":", "#frequency band", "\n", "            ", "for", "k", "in", "np", ".", "arange", "(", "0", ",", "channel_num", ")", ":", "\n", "                ", "new_data", "[", "m", ",", "k", "]", "=", "butter_bandpass_filter", "(", "data", "[", "k", "]", ",", "lowcut", "=", "0.5", "+", "m", "*", "2", ",", "highcut", "=", "0.5", "+", "(", "m", "+", "1", ")", "*", "2", ",", "fs", "=", "250", ",", "order", "=", "order", ")", "\n", "\n", "# if m == 0:", "\n", "#     new_data[m, k,:] = butter_bandpass_filter(data[k,:], lowcut= 0.5 , highcut= 2.0, fs=250, order=order)", "\n", "# elif m == 1:", "\n", "#     new_data[m, k,:] = butter_bandpass_filter(data[k,:], lowcut= 2.0 , highcut= 4.0, fs=250, order=order)", "\n", "# elif m == 2:", "\n", "#     new_data[m, k,:] = butter_bandpass_filter(data[k,:], lowcut= 4.0,  highcut= 10.0, fs=250, order=order)", "\n", "# elif m == 3:", "\n", "#     new_data[m, k,:] = butter_bandpass_filter(data[k,:], lowcut= 10.0 ,  highcut= 20, fs=250, order=order)", "\n", "# else:", "\n", "#     new_data[m, k,:] = butter_bandpass_filter(data[k,:], lowcut= 20.0 ,  highcut= 40, fs=250, order=order)", "\n", "#", "\n", "#         plt.plot(new_data[m,k])", "\n", "#         plt.show()", "\n", "# exit(0)", "\n", "# new_data[m, k,:] = (new_data[m, k,:] - min(new_data[m, k,:]))/ (max(new_data[m, k,:])-min(new_data[m, k,:]))", "\n", "# for channel in range(new_data.shape[0]):", "\n", "#     new_data[channel] = (new_data[channel] - np.min(new_data[channel]))/ (np.max(new_data[channel])-np.min(new_data[channel]))", "\n", "\n", "", "", "new_data", "=", "new_data", ".", "tolist", "(", ")", "\n", "\n", "return", "new_data", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.signal_filtering.butter_bandpass": [[35, 41], ["scipy.signal.butter"], "function", ["None"], ["def", "butter_bandpass", "(", "lowcut", ",", "highcut", ",", "fs", ",", "order", "=", "5", ")", ":", "\n", "    ", "nyq", "=", "0.5", "*", "fs", "\n", "low", "=", "lowcut", "/", "nyq", "\n", "high", "=", "highcut", "/", "nyq", "\n", "sos", "=", "butter", "(", "order", ",", "[", "low", ",", "high", "]", ",", "analog", "=", "False", ",", "btype", "=", "'band'", ",", "output", "=", "'sos'", ")", "\n", "return", "sos", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.signal_filtering.butter_bandpass_filter": [[50, 55], ["signal_filtering.butter_bandpass", "scipy.signal.sosfilt"], "function", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.signal_filtering.butter_bandpass"], ["", "def", "butter_bandpass_filter", "(", "data", ",", "lowcut", ",", "highcut", ",", "fs", ",", "order", "=", "5", ")", ":", "\n", "    ", "sos", "=", "butter_bandpass", "(", "lowcut", ",", "highcut", ",", "fs", ",", "order", "=", "order", ")", "\n", "y", "=", "sosfilt", "(", "sos", ",", "data", ")", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.Riemann.__init__": [[8, 11], ["pyriemann.tangentspace.TangentSpace", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_fb", "=", "9", ",", "metric", "=", "'riemann'", ")", ":", "\n", "        ", "self", ".", "n_fb", "=", "n_fb", "\n", "self", ".", "ts", "=", "[", "TangentSpace", "(", "metric", "=", "metric", ")", "for", "fb", "in", "range", "(", "n_fb", ")", "]", "# Tangent Space Learning", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.Riemann.fit": [[12, 16], ["range", "featuring.Riemann.ts[].fit"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.fit"], ["", "def", "fit", "(", "self", ",", "X", ",", "y", ")", ":", "\n", "        ", "for", "fb", "in", "range", "(", "self", ".", "n_fb", ")", ":", "\n", "            ", "self", ".", "ts", "[", "fb", "]", ".", "fit", "(", "X", "[", ":", ",", "fb", ",", ":", ",", ":", "]", ")", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.Riemann.transform": [[17, 23], ["numpy.empty", "range", "numpy.empty.reshape", "featuring.Riemann.ts[].transform"], "methods", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform"], ["", "def", "transform", "(", "self", ",", "X", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "p", ",", "_", "=", "X", ".", "shape", "\n", "Xout", "=", "np", ".", "empty", "(", "(", "n_sub", ",", "n_fb", ",", "p", "*", "(", "p", "+", "1", ")", "//", "2", ")", ")", "\n", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "            ", "Xout", "[", ":", ",", "fb", ",", ":", "]", "=", "self", ".", "ts", "[", "fb", "]", ".", "transform", "(", "X", "[", ":", ",", "fb", ",", ":", ",", ":", "]", ")", "\n", "", "return", "Xout", ".", "reshape", "(", "n_sub", ",", "-", "1", ")", "# (sub, fb * c*(c+1)/2)", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.Diag.__init__": [[26, 28], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.Diag.fit": [[29, 31], ["None"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "X", ",", "y", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.Diag.transform": [[32, 39], ["numpy.empty", "range", "numpy.empty.reshape", "range", "numpy.diag"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "X", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "n_compo", ",", "_", "=", "X", ".", "shape", "\n", "Xout", "=", "np", ".", "empty", "(", "(", "n_sub", ",", "n_fb", ",", "n_compo", ")", ")", "\n", "for", "sub", "in", "range", "(", "n_sub", ")", ":", "\n", "            ", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "                ", "Xout", "[", "sub", ",", "fb", "]", "=", "np", ".", "diag", "(", "X", "[", "sub", ",", "fb", "]", ")", "\n", "", "", "return", "Xout", ".", "reshape", "(", "n_sub", ",", "-", "1", ")", "# (sub, fb * n_compo)", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.LogDiag.__init__": [[42, 44], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.LogDiag.fit": [[45, 47], ["None"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "X", ",", "y", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.LogDiag.transform": [[48, 55], ["numpy.empty", "range", "numpy.empty.reshape", "range", "numpy.log10", "numpy.diag"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "X", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "n_compo", ",", "_", "=", "X", ".", "shape", "\n", "Xout", "=", "np", ".", "empty", "(", "(", "n_sub", ",", "n_fb", ",", "n_compo", ")", ")", "\n", "for", "sub", "in", "range", "(", "n_sub", ")", ":", "\n", "            ", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "                ", "Xout", "[", "sub", ",", "fb", "]", "=", "np", ".", "log10", "(", "np", ".", "diag", "(", "X", "[", "sub", ",", "fb", "]", ")", ")", "\n", "", "", "return", "Xout", ".", "reshape", "(", "n_sub", ",", "-", "1", ")", "# (sub, fb * n_compo)", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.__init__": [[58, 61], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "method", ")", ":", "\n", "        ", "self", ".", "method", "=", "method", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.fit": [[62, 64], ["None"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "X", ",", "y", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.NaiveVec.transform": [[65, 81], ["int", "numpy.empty", "range", "numpy.empty.reshape", "range", "scipy.linalg.logm", "numpy.triu_indices", "numpy.log10", "numpy.concatenate", "numpy.triu_indices", "numpy.diag", "numpy.triu_indices"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "X", ")", ":", "\n", "        ", "n_sub", ",", "n_fb", ",", "n_compo", ",", "_", "=", "X", ".", "shape", "\n", "q", "=", "int", "(", "n_compo", "*", "(", "n_compo", "+", "1", ")", "/", "2", ")", "\n", "Xout", "=", "np", ".", "empty", "(", "(", "n_sub", ",", "n_fb", ",", "q", ")", ")", "\n", "for", "sub", "in", "range", "(", "n_sub", ")", ":", "\n", "            ", "for", "fb", "in", "range", "(", "n_fb", ")", ":", "\n", "                ", "if", "self", ".", "method", "==", "'upper'", ":", "\n", "                    ", "Xout", "[", "sub", ",", "fb", "]", "=", "X", "[", "sub", ",", "fb", "]", "[", "np", ".", "triu_indices", "(", "n_compo", ")", "]", "\n", "", "elif", "self", ".", "method", "==", "'upperlog'", ":", "\n", "                    ", "logmat", "=", "logm", "(", "X", "[", "sub", ",", "fb", "]", ")", "\n", "Xout", "[", "sub", ",", "fb", "]", "=", "logmat", "[", "np", ".", "triu_indices", "(", "n_compo", ")", "]", "\n", "", "elif", "self", ".", "method", "==", "'logdiag+upper'", ":", "\n", "                    ", "logdiag", "=", "np", ".", "log10", "(", "np", ".", "diag", "(", "X", "[", "sub", ",", "fb", "]", ")", ")", "\n", "upper", "=", "X", "[", "sub", ",", "fb", "]", "[", "np", ".", "triu_indices", "(", "n_compo", ",", "k", "=", "1", ")", "]", "\n", "Xout", "[", "sub", ",", "fb", "]", "=", "np", ".", "concatenate", "(", "(", "logdiag", ",", "upper", ")", ",", "axis", "=", "None", ")", "\n", "", "", "", "return", "Xout", ".", "reshape", "(", "n_sub", ",", "-", "1", ")", "# (sub, fb * c*(c+1)/2)", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.to_quotient": [[84, 90], ["numpy.linalg.eigh", "numpy.sqrt"], "function", ["None"], ["", "", "def", "to_quotient", "(", "C", ",", "rank", ")", ":", "\n", "    ", "d", ",", "U", "=", "np", ".", "linalg", ".", "eigh", "(", "C", ")", "\n", "U", "=", "U", "[", ":", ",", "-", "rank", ":", "]", "\n", "d", "=", "d", "[", "-", "rank", ":", "]", "\n", "Y", "=", "U", "*", "np", ".", "sqrt", "(", "d", ")", "\n", "return", "Y", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.distance2": [[92, 96], ["featuring.sqrtm", "featuring.sqrtm", "numpy.dot", "numpy.dot", "numpy.trace", "numpy.trace", "numpy.trace"], "function", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.sqrtm", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.sqrtm"], ["", "def", "distance2", "(", "S1", ",", "S2", ",", "rank", "=", "None", ")", ":", "\n", "    ", "Sq", "=", "sqrtm", "(", "S1", ",", "rank", ")", "\n", "P", "=", "sqrtm", "(", "np", ".", "dot", "(", "Sq", ",", "np", ".", "dot", "(", "S2", ",", "Sq", ")", ")", ",", "rank", ")", "\n", "return", "np", ".", "trace", "(", "S1", ")", "+", "np", ".", "trace", "(", "S2", ")", "-", "2", "*", "np", ".", "trace", "(", "P", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.mean_covs": [[98, 124], ["featuring.sqrtm", "numpy.dot", "numpy.ones", "numpy.mean", "numpy.finfo", "numpy.zeros", "enumerate", "featuring.sqrtm", "numpy.linalg.norm", "print", "numpy.dot", "numpy.dot", "featuring.sqrtm"], "function", ["home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.sqrtm", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.sqrtm", "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.sqrtm"], ["", "def", "mean_covs", "(", "covmats", ",", "rank", ",", "tol", "=", "10e-4", ",", "maxiter", "=", "50", ",", "init", "=", "None", ",", "\n", "sample_weight", "=", "None", ")", ":", "\n", "    ", "Nt", ",", "Ne", ",", "Ne", "=", "covmats", ".", "shape", "\n", "if", "sample_weight", "is", "None", ":", "\n", "        ", "sample_weight", "=", "np", ".", "ones", "(", "Nt", ")", "\n", "", "if", "init", "is", "None", ":", "\n", "        ", "C", "=", "np", ".", "mean", "(", "covmats", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "        ", "C", "=", "init", "\n", "", "k", "=", "0", "\n", "K", "=", "sqrtm", "(", "C", ",", "rank", ")", "\n", "crit", "=", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "max", "\n", "# stop when J<10^-9 or max iteration = 50", "\n", "while", "(", "crit", ">", "tol", ")", "and", "(", "k", "<", "maxiter", ")", ":", "\n", "        ", "k", "=", "k", "+", "1", "\n", "J", "=", "np", ".", "zeros", "(", "(", "Ne", ",", "Ne", ")", ")", "\n", "for", "index", ",", "Ci", "in", "enumerate", "(", "covmats", ")", ":", "\n", "            ", "tmp", "=", "np", ".", "dot", "(", "np", ".", "dot", "(", "K", ",", "Ci", ")", ",", "K", ")", "\n", "J", "+=", "sample_weight", "[", "index", "]", "*", "sqrtm", "(", "tmp", ")", "\n", "", "Knew", "=", "sqrtm", "(", "J", ",", "rank", ")", "\n", "crit", "=", "np", ".", "linalg", ".", "norm", "(", "Knew", "-", "K", ",", "ord", "=", "'fro'", ")", "\n", "K", "=", "Knew", "\n", "", "if", "k", "==", "maxiter", ":", "\n", "        ", "print", "(", "'Max iter reach'", ")", "\n", "", "C", "=", "np", ".", "dot", "(", "K", ",", "K", ")", "\n", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.sqrtm": [[126, 133], ["numpy.linalg.eigh", "numpy.dot", "numpy.sqrt", "numpy.abs"], "function", ["None"], ["", "def", "sqrtm", "(", "C", ",", "rank", "=", "None", ")", ":", "\n", "    ", "if", "rank", "is", "None", ":", "\n", "        ", "rank", "=", "C", ".", "shape", "[", "0", "]", "\n", "", "d", ",", "U", "=", "np", ".", "linalg", ".", "eigh", "(", "C", ")", "\n", "U", "=", "U", "[", ":", ",", "-", "rank", ":", "]", "\n", "d", "=", "d", "[", "-", "rank", ":", "]", "\n", "return", "np", ".", "dot", "(", "U", ",", "np", ".", "sqrt", "(", "np", ".", "abs", "(", "d", ")", ")", "[", ":", ",", "None", "]", "*", "U", ".", "T", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guangyizhangbci_eeg_riemannian.library.featuring.logarithm_": [[135, 140], ["numpy.dot", "numpy.linalg.svd", "numpy.dot", "numpy.dot"], "function", ["None"], ["", "def", "logarithm_", "(", "Y", ",", "Y_ref", ")", ":", "\n", "    ", "prod", "=", "np", ".", "dot", "(", "Y_ref", ".", "T", ",", "Y", ")", "\n", "U", ",", "D", ",", "V", "=", "np", ".", "linalg", ".", "svd", "(", "prod", ",", "full_matrices", "=", "False", ")", "\n", "Q", "=", "np", ".", "dot", "(", "U", ",", "V", ")", ".", "T", "\n", "return", "np", ".", "dot", "(", "Y", ",", "Q", ")", "-", "Y_ref", "\n", "", ""]]}