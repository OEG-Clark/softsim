{"home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.main.backprop_kernel_indices": [[44, 139], ["len", "list", "list", "torch.avg_pool3d().squeeze().squeeze().squeeze", "torch.avg_pool3d().squeeze().squeeze().squeeze", "torch.mul", "torch.mul", "torch.min", "torch.min", "torch.FloatTensor", "torch.FloatTensor", "sum", "sum", "len", "[].size", "a_l1[].size", "torch.cat", "torch.cat", "len", "torch.FloatTensor.sum().expand_as", "torch.max", "torch.max", "values.sort", "enumerate", "enumerate", "torch.avg_pool3d().squeeze().squeeze", "torch.avg_pool3d().squeeze().squeeze", "enumerate", "k.repeat", "torch.FloatTensor.sum", "enumerate", "enumerate", "enumerate", "torch.avg_pool3d().squeeze", "torch.avg_pool3d().squeeze", "torch.avg_pool3d", "torch.avg_pool3d"], "function", ["None"], ["def", "backprop_kernel_indices", "(", "indices_l", ",", "k_l", ",", "a_l1", ",", "thres", ",", "topn", "=", "None", ")", ":", "\n", "#Initialisation", "\n", "    ", "indices_l1", "=", "{", "}", "\n", "\n", "# Special architectures that include either; cross-channel convolutions, seperate branches or fibres.", "\n", "if", "(", "len", "(", "k_l", ")", ">", "1", ")", ":", "\n", "# Get shape(s) of all kenel inputs for layer", "\n", "        ", "kernels_shapes_0", "=", "[", "k", ".", "shape", "[", "0", "]", "for", "k", "in", "k_l", "]", "\n", "kernels_shapes_1", "=", "[", "k", ".", "shape", "[", "1", "]", "for", "k", "in", "k_l", "]", "\n", "\n", "# Create corresponding kernel shapes - output shape", "\n", "kernels_out_list", "=", "[", "sum", "(", "kernels_shapes_0", "[", ":", "idx", "+", "1", "]", ")", "for", "idx", ",", "k", "in", "enumerate", "(", "kernels_shapes_0", ")", "]", "\n", "kernels_out_list", "=", "[", "0", "]", "+", "kernels_out_list", "\n", "\n", "# Create corresponding kernel shapes - input shape", "\n", "kernels_in_list", "=", "[", "sum", "(", "kernels_shapes_1", "[", ":", "idx", "+", "1", "]", ")", "for", "idx", ",", "k", "in", "enumerate", "(", "kernels_shapes_1", ")", "]", "\n", "kernels_in_list", "=", "[", "0", "]", "+", "kernels_in_list", "\n", "\n", "", "else", ":", "\n", "# Create corresponding kernel shapes - output/input shape", "\n", "        ", "kernels_out_list", "=", "[", "0", ",", "k_l", "[", "0", "]", ".", "shape", "[", "0", "]", "]", "\n", "kernels_in_list", "=", "[", "0", ",", "k_l", "[", "0", "]", ".", "shape", "[", "1", "]", "]", "\n", "\n", "\n", "\n", "# Start by computing activation map a^k_l(i)_l1 for each k_l(i), where i in indices", "\n", "", "for", "i", "in", "indices_l", ":", "\n", "\n", "        ", "tmp", "=", "i", "\n", "\n", "# Normal convolutions over entire activation maps", "\n", "if", "(", "len", "(", "k_l", ")", "==", "1", ")", ":", "\n", "            ", "kernel_indx", "=", "0", "\n", "\n", "# Convolutions with various channels sizes", "\n", "", "else", ":", "\n", "            ", "kernel_indx", "=", "[", "id", "for", "id", ",", "ki", "in", "enumerate", "(", "kernels_shapes_0", ")", "if", "(", "kernels_out_list", "[", "id", "+", "1", "]", "-", "i", ")", ">", "0", "]", "\n", "kernel_indx", "=", "kernel_indx", "[", "0", "]", "\n", "tmp", "=", "i", "-", "kernels_out_list", "[", "kernel_indx", "]", "\n", "\n", "\n", "# pointwise multiplication for activation a(l1) and the ith kernel in k_l", "\n", "#print(\"Kernel shape: \",k_l[i].shape)", "\n", "#print(\"Activation_shape: \",a_l1[0].shape)", "\n", "\n", "# Downsample the spatio-temporal dimension to create a global representation of the activation map and kernel.", "\n", "", "_", ",", "dk", ",", "hk", ",", "wk", "=", "list", "(", "k_l", "[", "kernel_indx", "]", "[", "tmp", "]", ".", "size", "(", ")", ")", "\n", "_", ",", "da", ",", "ha", ",", "wa", "=", "list", "(", "a_l1", "[", "0", "]", ".", "size", "(", ")", ")", "\n", "kernel", "=", "F", ".", "avg_pool3d", "(", "k_l", "[", "kernel_indx", "]", "[", "tmp", "]", ",", "(", "dk", ",", "hk", ",", "wk", ")", ")", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "act_map", "=", "F", ".", "avg_pool3d", "(", "a_l1", "[", "0", "]", ",", "(", "da", ",", "ha", ",", "wa", ")", ")", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "\n", "# If group convolutions, increase the kernel size", "\n", "groups", "=", "act_map", ".", "shape", "[", "0", "]", "//", "kernels_in_list", "[", "-", "1", "]", "\n", "\n", "# Inflate kernels to represent all kernels in the same feature space as the input", "\n", "if", "groups", ">", "1", ":", "\n", "# Kernel inflation form [out_channels, in_channels/groups] -> [out_channels, in_channels]", "\n", "            ", "kernel", "=", "torch", ".", "cat", "(", "[", "k", ".", "repeat", "(", "groups", ")", "for", "k", "in", "kernel", "]", ",", "0", ")", "\n", "\n", "\n", "\n", "# Select activations for corresponding kernel channels - special architectures", "\n", "", "if", "(", "len", "(", "k_l", ")", ">", "1", ")", ":", "\n", "            ", "lower_lim", "=", "kernels_in_list", "[", "kernel_indx", "]", "\n", "upper_lim", "=", "kernels_in_list", "[", "kernel_indx", "+", "1", "]", "\n", "act_map", "=", "act_map", "[", "lower_lim", ":", "upper_lim", "]", "\n", "\n", "\n", "", "pooled", "=", "torch", ".", "mul", "(", "kernel", ",", "act_map", ")", "\n", "\n", "pooled", "=", "pooled", "/", "pooled", ".", "sum", "(", "0", ")", ".", "expand_as", "(", "pooled", ")", "\n", "\n", "base", "=", "torch", ".", "min", "(", "pooled", ")", "\n", "pooled_range", "=", "torch", ".", "max", "(", "pooled", ")", "-", "base", "\n", "pooled", "=", "torch", ".", "FloatTensor", "(", "[", "(", "x", "-", "base", ")", "/", "pooled_range", "for", "x", "in", "pooled", "]", ")", "\n", "\n", "# Iterate over the pooled volume and find the indices that have a value larger than the threshold", "\n", "if", "topn", "is", "None", ":", "\n", "            ", "indices_l1_i", "=", "[", "j", "for", "j", ",", "feat", "in", "enumerate", "(", "pooled", ")", "if", "feat", ">=", "thres", "]", "\n", "", "else", ":", "\n", "# Get all values above threshold", "\n", "            ", "values", "=", "[", "value", "for", "value", "in", "enumerate", "(", "pooled", ")", "if", "value", ">=", "thres", "]", "\n", "# accending order sort", "\n", "values", ".", "sort", "(", ")", "\n", "# select n values", "\n", "values", "=", "values", "[", "-", "topn", ":", "]", "\n", "# find top n value indices in pooled tensor", "\n", "indices_l1_i", "=", "[", "j", "for", "j", ",", "feat", "in", "enumerate", "(", "pooled", ")", "if", "feat", "in", "values", "]", "\n", "\n", "\n", "# Append indices to dictionary", "\n", "", "indices_l1", "[", "i", "]", "=", "indices_l1_i", "\n", "\n", "", "return", "indices_l1", "\n", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.main.generate_indices": [[179, 205], ["print", "layers_dict.keys", "print", "print", "isinstance", "layers_dict.keys", "isinstance", "print", "main.generate_indices", "main.backprop_kernel_indices", "main.backprop_kernel_indices"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.calc_utils.generate_indices", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.calc_utils.backprop_kernel_indices", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.calc_utils.backprop_kernel_indices"], ["def", "generate_indices", "(", "layers_dict", ",", "kernels", ",", "activations", ",", "threshold", ",", "index", ",", "max_depth", ",", "vis_depth", ",", "vis_num_kernels", ")", ":", "\n", "    ", "print", "(", "'Backstepping to depth -%d of maximum -%d'", "%", "(", "index", ",", "max_depth", ")", ")", "\n", "\n", "# Function termination after maximum depth is reached", "\n", "if", "(", "index", ">=", "max_depth", ")", ":", "\n", "        ", "print", "(", "'END OF BRANCH DISCOVERY'", ")", "\n", "return", "layers_dict", "\n", "# Iteration", "\n", "", "for", "key", "in", "layers_dict", ".", "keys", "(", ")", ":", "\n", "        ", "print", "(", "'layerindex:'", ",", "index", ",", "'key:'", ",", "key", ",", "'keys dict:'", ",", "layers_dict", ".", "keys", "(", ")", ",", "'\\n'", ")", "\n", "# Unexplored connection", "\n", "if", "not", "isinstance", "(", "layers_dict", "[", "key", "]", ",", "dict", ")", ":", "\n", "# For layer that only specific kernels are to be visualised", "\n", "            ", "if", "(", "index", "==", "vis_depth", ")", ":", "\n", "                ", "layers_dict", "[", "key", "]", "=", "backprop_kernel_indices", "(", "layers_dict", "[", "key", "]", ",", "kernels", "[", "-", "index", "]", ",", "activations", "[", "-", "index", "-", "1", "]", ",", "threshold", ",", "vis_num_kernels", ")", "\n", "", "else", ":", "\n", "                ", "layers_dict", "[", "key", "]", "=", "backprop_kernel_indices", "(", "layers_dict", "[", "key", "]", ",", "kernels", "[", "-", "index", "]", ",", "activations", "[", "-", "index", "-", "1", "]", ",", "threshold", ")", "\n", "\n", "", "", "if", "(", "index", ">", "max_depth", ")", ":", "\n", "            ", "return", "layers_dict", "\n", "# Recursive step", "\n", "", "if", "isinstance", "(", "layers_dict", "[", "key", "]", ",", "dict", ")", ":", "\n", "            ", "print", "(", "'Backstepping...'", ")", "\n", "layers_dict", "[", "key", "]", "=", "generate_indices", "(", "layers_dict", "[", "key", "]", ",", "kernels", ",", "activations", ",", "threshold", ",", "index", "+", "1", ",", "max_depth", ",", "vis_depth", ",", "vis_num_kernels", ")", "\n", "\n", "", "", "return", "layers_dict", "\n", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.main.layer_visualisations": [[239, 296], ["layers_dict.items", "print", "isinstance", "isinstance", "main.layer_visualisations", "torch.tensor", "torch.tensor", "torch.zeros().cuda", "torch.zeros().cuda", "print", "scipy.ndimage.zoom.squeeze().squeeze", "scipy.ndimage.zoom.cpu().numpy", "scipy.ndimage.zoom", "numpy.min", "os.path.join", "range", "str", "numpy.max", "numpy.min", "str", "cv2.applyColorMap", "tubes.append", "torch.zeros", "torch.zeros", "layerout[].unsqueeze", "scipy.ndimage.zoom.squeeze", "scipy.ndimage.zoom.cpu", "numpy.uint8", "print", "len", "len"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.layer_visualisations"], ["def", "layer_visualisations", "(", "args", ",", "layers_dict", ",", "kernels", ",", "activations", ",", "index", ",", "RGB_video", ",", "tubes_dict", "=", "{", "}", ")", ":", "\n", "# Main Iteration", "\n", "    ", "for", "key", ",", "value", "in", "layers_dict", ".", "items", "(", ")", ":", "\n", "\n", "# Recursive step", "\n", "        ", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "            ", "layers_dict", "[", "key", "]", ",", "tubes_dict", "=", "layer_visualisations", "(", "args", ",", "value", ",", "kernels", ",", "activations", ",", "index", "+", "1", ",", "RGB_vid", ",", "tubes_dict", ")", "\n", "\n", "", "if", "isinstance", "(", "layers_dict", "[", "key", "]", ",", "list", ")", ":", "\n", "\n", "# get output activation map for layer", "\n", "            ", "layerout", "=", "torch", ".", "tensor", "(", "activations", "[", "-", "index", "-", "1", "]", ")", "\n", "\n", "cam", "=", "torch", ".", "zeros", "(", "[", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "0", "]", ",", "1", ",", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "2", "]", ",", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "3", "]", ",", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "4", "]", "]", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "# main loop for selected kernels", "\n", "\n", "print", "(", "'Creating Saliency Tubes for :'", ",", "str", "(", "'layer %d, kernel %d, w/ %d <child> kernels'", "%", "(", "index", ",", "key", ",", "len", "(", "layers_dict", "[", "key", "]", ")", ")", ")", ")", "\n", "\n", "# Apply padding - only to cases that there is a size mis-match", "\n", "\n", "for", "i", "in", "layers_dict", "[", "key", "]", ":", "\n", "                ", "try", ":", "\n", "                    ", "cam", "+=", "layerout", "[", "0", ",", "i", "]", ".", "unsqueeze", "(", "0", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "print", "(", "'-- PREDICTIONS LAYER REACHED ---'", ")", "\n", "\n", "# Resize CAM to frame level (batch,channels,frames,heigh,width) --> (frames, height, width)", "\n", "", "", "cam", "=", "cam", ".", "squeeze", "(", "0", ")", ".", "squeeze", "(", "0", ")", "\n", "t", ",", "h", ",", "w", "=", "cam", ".", "shape", "\n", "_", ",", "clip_len", ",", "clip_height", ",", "clip_width", ",", "_", "=", "RGB_video", ".", "shape", "\n", "\n", "# Tranfer both volumes to the CPU and convert them to numpy arrays", "\n", "cam", "=", "cam", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "cam", "=", "zoom", "(", "cam", ",", "(", "clip_len", "//", "t", ",", "clip_height", "//", "h", ",", "clip_width", "//", "w", ")", ")", "\n", "\n", "# normalise", "\n", "cam", "-=", "np", ".", "min", "(", "cam", ")", "\n", "cam", "/=", "np", ".", "max", "(", "cam", ")", "-", "np", ".", "min", "(", "cam", ")", "\n", "\n", "# make dirs and filenames", "\n", "heatmap_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "base_output_dir", ",", "str", "(", "'layer_%d_kernel_%d_num_kernels_%d'", "%", "(", "index", ",", "key", ",", "len", "(", "layers_dict", "[", "key", "]", ")", ")", ")", ",", "\"heat_tubes\"", ")", "\n", "\n", "# produce heatmap for every frame and activation map", "\n", "tubes", "=", "[", "]", "\n", "for", "frame_num", "in", "range", "(", "cam", ".", "shape", "[", "0", "]", ")", ":", "\n", "#Create colourmap", "\n", "                ", "heatmap", "=", "cv2", ".", "applyColorMap", "(", "np", ".", "uint8", "(", "255", "*", "cam", "[", "frame_num", "]", ")", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "\n", "# Create frame with heatmap", "\n", "heatframe", "=", "heatmap", "//", "2", "+", "RGB_vid", "[", "0", "]", "[", "frame_num", "]", "//", "2", "\n", "tubes", ".", "append", "(", "heatframe", ")", "\n", "\n", "# Append a tuple of the computed heatmap and the kernels used", "\n", "", "tubes_dict", "[", "heatmap_dir", "]", "=", "(", "tubes", ",", "layers_dict", "[", "key", "]", ")", "\n", "\n", "", "", "print", "(", "'End OF SALIENCY TUBE GENERATION IN DEPTH %d WITH KERNELS '", "%", "(", "index", ")", ",", "[", "*", "layers_dict", "]", ")", "\n", "return", "[", "*", "layers_dict", "]", ",", "tubes_dict", "\n", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.main.savetopng": [[322, 422], ["print", "open", "open.write", "open.close", "enumerate", "range", "range", "os.path.exists", "os.makedirs", "os.path.join", "str", "copy.deepcopy.astype", "cv2.resize", "cv2.cvtColor", "numpy.float32", "numpy.float32", "cv2.getAffineTransform", "cv2.warpAffine", "transformed_frames_filenames.append", "transformed_frames_list.append", "os.path.exists", "os.makedirs", "len", "cv2.imwrite", "os.path.exists", "os.makedirs", "len", "enumerate", "cv2.imwrite", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "reversed", "numpy.full", "numpy.full", "range", "copy.deepcopy", "os.path.join", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "copy.deepcopy", "range", "len"], "function", ["None"], ["def", "savetopng", "(", "tubes", ",", "path", ")", ":", "\n", "    ", "print", "(", "'SAVING TUBES FOR :'", ",", "path", ")", "\n", "# Save kernel indices that are visualised into file", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "path", ")", ")", "\n", "", "file", "=", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames.txt'", ")", ",", "'w'", ")", "\n", "file", ".", "write", "(", "str", "(", "tubes", "[", "1", "]", ")", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "transformed_frames_list", "=", "[", "]", "\n", "transformed_frames_filenames", "=", "[", "]", "\n", "\n", "# Iterate over tubes and apply visualisation transforms", "\n", "for", "frame", ",", "image", "in", "enumerate", "(", "tubes", "[", "0", "]", ")", ":", "\n", "# Ensuring that only unsign integers will be used (as expected)", "\n", "        ", "image", "=", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "# Resizing", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "256", ",", "256", ")", ")", "\n", "# Create 4 channel array (used for better frame overlaping)", "\n", "rgba", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_RGB2RGBA", ")", "\n", "rgba", "[", ":", ",", ":", ",", "3", "]", "=", "255", "\n", "\n", "rows", ",", "cols", ",", "ch", "=", "rgba", ".", "shape", "\n", "\n", "# Transforms", "\n", "pts1", "=", "np", ".", "float32", "(", "[", "[", "cols", "/", "15", ",", "rows", "/", "11", "]", ",", "[", "cols", "/", "1.8", ",", "rows", "/", "10", "]", ",", "[", "cols", "/", "8.5", ",", "rows", "/", "1.6", "]", "]", ")", "\n", "pts2", "=", "np", ".", "float32", "(", "[", "[", "cols", "/", "5", ",", "rows", "/", "4", "]", ",", "[", "cols", "/", "1.7", ",", "rows", "/", "4.7", "]", ",", "[", "cols", "/", "5.5", ",", "rows", "/", "2.1", "]", "]", ")", "\n", "M", "=", "cv2", ".", "getAffineTransform", "(", "pts1", ",", "pts2", ")", "\n", "dst1", "=", "cv2", ".", "warpAffine", "(", "rgba", ",", "M", ",", "(", "cols", ",", "rows", ")", ",", "borderValue", "=", "(", "255", ",", "255", ",", "255", ",", "0", ")", ")", "\n", "\n", "# add to list of frames", "\n", "transformed_frames_filenames", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames'", ",", "'frame_00%d.png'", "%", "(", "frame", ")", ")", ")", "\n", "transformed_frames_list", ".", "append", "(", "dst1", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames'", ")", ")", "\n", "\n", "# save frames to corresponding directory", "\n", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "transformed_frames_list", ")", ")", ":", "\n", "        ", "cv2", ".", "imwrite", "(", "transformed_frames_filenames", "[", "i", "]", ",", "transformed_frames_list", "[", "i", "]", ")", "\n", "\n", "\n", "# img2 is to be shifted by `shift` amount", "\n", "", "shift", "=", "(", "80", ",", "0", ")", "\n", "\n", "# Saliency tube directory", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'saliency_tubes'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'saliency_tubes'", ")", ")", "\n", "\n", "# Iterate over each frame(this will be the main frame to be visualised)", "\n", "", "for", "j", "in", "(", "range", "(", "len", "(", "transformed_frames_list", ")", ")", ")", ":", "\n", "        ", "for", "i", ",", "img", "in", "enumerate", "(", "reversed", "(", "transformed_frames_list", ")", ")", ":", "\n", "\n", "#use ~.45 alpha for frames that are no main frame 'j'", "\n", "            ", "tmp", "=", "np", ".", "full", "(", "(", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ",", "4", ")", ",", "(", "255", ",", "255", ",", "255", ",", "0", ")", ")", "\n", "if", "(", "i", "!=", "j", ")", ":", "\n", "# for ih in range(img.shape[0]):", "\n", "#     for iw in range(img.shape[1]):", "\n", "#         if(img[ih,iw,3]>0):", "\n", "#             tmp[ih,iw] = np.array([img[ih,iw][0],img[ih,iw][1],img[ih,iw][2],135])", "\n", "\n", "                ", "tmp", "[", ":", ",", ":", ",", "0", "]", "=", "np", ".", "where", "(", "img", "[", ":", ",", ":", ",", "3", "]", ">", "0", ",", "img", "[", ":", ",", ":", ",", "0", "]", ",", "tmp", "[", ":", ",", ":", ",", "0", "]", ")", "\n", "tmp", "[", ":", ",", ":", ",", "1", "]", "=", "np", ".", "where", "(", "img", "[", ":", ",", ":", ",", "3", "]", ">", "0", ",", "img", "[", ":", ",", ":", ",", "1", "]", ",", "tmp", "[", ":", ",", ":", ",", "1", "]", ")", "\n", "tmp", "[", ":", ",", ":", ",", "2", "]", "=", "np", ".", "where", "(", "img", "[", ":", ",", ":", ",", "3", "]", ">", "0", ",", "img", "[", ":", ",", ":", ",", "2", "]", ",", "tmp", "[", ":", ",", ":", ",", "2", "]", ")", "\n", "tmp", "[", ":", ",", ":", ",", "3", "]", "=", "np", ".", "where", "(", "img", "[", ":", ",", ":", ",", "3", "]", ">", "0", ",", "135", ",", "0", ")", "\n", "", "else", ":", "\n", "                ", "tmp", "=", "copy", ".", "deepcopy", "(", "img", ")", "\n", "\n", "", "if", "(", "i", "==", "0", ")", ":", "\n", "                ", "image", "=", "tmp", "\n", "continue", "\n", "", "new_h", "=", "image", ".", "shape", "[", "0", "]", "+", "shift", "[", "0", "]", "\n", "new_w", "=", "image", ".", "shape", "[", "1", "]", "+", "shift", "[", "1", "]", "\n", "new_image", "=", "np", ".", "full", "(", "(", "new_h", ",", "new_w", ",", "4", ")", ",", "(", "255", ",", "255", ",", "255", ",", "0", ")", ")", "\n", "\n", "new_image", "[", "shift", "[", "0", "]", ":", "image", ".", "shape", "[", "0", "]", "+", "shift", "[", "0", "]", ",", "shift", "[", "1", "]", ":", "image", ".", "shape", "[", "1", "]", "+", "shift", "[", "1", "]", "]", "=", "image", "\n", "\n", "\n", "# alpha = new_image[:256,:256,3] + tmp[:,:,3]", "\n", "# for iii in range(4):", "\n", "#     new_image[:256,:256,iii] = np.where(tmp[:,:,3]>0,", "\n", "#                                 np.where(new_image[:256,:256,3]==0,", "\n", "#                                          tmp[:,:,iii],", "\n", "#                                          new_image[:256,:256,iii]*(new_image[:256,:256,3]/alpha) +", "\n", "#                                          tmp[:,:,iii]*(tmp[:,:,3]/alpha)", "\n", "#                                          ),", "\n", "#                                 new_image[:256,:256,iii])", "\n", "\n", "# Only transfer pixels that are not transparent (i.e. part of the frame rather than the image)", "\n", "for", "ih", "in", "range", "(", "tmp", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "for", "iw", "in", "range", "(", "tmp", ".", "shape", "[", "1", "]", ")", ":", "\n", "                    ", "if", "(", "tmp", "[", "ih", ",", "iw", ",", "3", "]", ">", "0", ")", ":", "\n", "                        ", "if", "(", "new_image", "[", "ih", ",", "iw", ",", "3", "]", "==", "0", ")", ":", "\n", "                            ", "new_image", "[", "ih", ",", "iw", "]", "=", "tmp", "[", "ih", ",", "iw", "]", "\n", "", "else", ":", "\n", "                            ", "alpha", "=", "new_image", "[", "ih", ",", "iw", ",", "3", "]", "+", "tmp", "[", "ih", ",", "iw", ",", "3", "]", "\n", "new_image", "[", "ih", ",", "iw", "]", "=", "new_image", "[", "ih", ",", "iw", "]", "*", "(", "new_image", "[", "ih", ",", "iw", ",", "3", "]", "/", "alpha", ")", "+", "tmp", "[", "ih", ",", "iw", "]", "*", "(", "tmp", "[", "ih", ",", "iw", ",", "3", "]", "/", "alpha", ")", "\n", "\n", "", "", "", "", "image", "=", "copy", ".", "deepcopy", "(", "new_image", ")", "\n", "", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'saliency_tubes'", ",", "'result%d.png'", "%", "(", "len", "(", "transformed_frames_list", ")", "-", "j", ")", ")", ",", "image", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.main.center_crop": [[428, 434], ["int", "int", "round", "round"], "function", ["None"], ["def", "center_crop", "(", "data", ",", "tw", "=", "256", ",", "th", "=", "256", ")", ":", "\n", "    ", "h", ",", "w", ",", "c", "=", "data", ".", "shape", "\n", "x1", "=", "int", "(", "round", "(", "(", "w", "-", "tw", ")", "/", "2.", ")", ")", "\n", "y1", "=", "int", "(", "round", "(", "(", "h", "-", "th", ")", "/", "2.", ")", ")", "\n", "cropped_data", "=", "data", "[", "y1", ":", "(", "y1", "+", "th", ")", ",", "x1", ":", "(", "x1", "+", "tw", ")", ",", ":", "]", "\n", "return", "cropped_data", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.main.load_images": [[435, 480], ["numpy.zeros", "numpy.zeros_like", "sqlite3.connect", "sqlite3.connect.cursor", "os.path.split", "enumerate", "con.cursor.close", "sqlite3.connect.close", "torch.from_numpy", "torch.from_numpy", "zip", "os.path.join", "print", "frame_dir.split", "paths.append", "con.cursor.execute", "main.center_crop", "cv2.resize", "cv2.cvtColor", "np.zeros.transpose", "torch.from_numpy.float", "t.sub_().div_", "numpy.expand_dims", "torch.from_numpy.unsqueeze", "numpy.fromstring", "cv2.imdecode", "t.sub_"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.main.center_crop"], ["", "def", "load_images", "(", "frame_dir", ",", "selected_frames", ")", ":", "\n", "    ", "images", "=", "np", ".", "zeros", "(", "(", "16", ",", "224", ",", "224", ",", "3", ")", ")", "\n", "orig_imgs", "=", "np", ".", "zeros_like", "(", "images", ")", "\n", "\n", "# Establish connection to .db", "\n", "\n", "con", "=", "sqlite3", ".", "connect", "(", "os", ".", "path", ".", "join", "(", "frame_dir", ",", "'frames.db'", ")", ")", "\n", "cur", "=", "con", ".", "cursor", "(", ")", "\n", "if", "cur", "is", "None", ":", "\n", "        ", "print", "(", "\"cursor is empty\"", ")", "\n", "raise", "Exception", "\n", "\n", "", "paths", "=", "[", "]", "\n", "dir", "=", "frame_dir", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "dir_parts", "=", "os", ".", "path", ".", "split", "(", "frame_dir", ")", "\n", "# Get framespaths to load from database", "\n", "for", "index", "in", "selected_frames", ":", "\n", "# paths.append(os.path.join(str(dir),'frame_%05d'%index))", "\n", "        ", "paths", ".", "append", "(", "\"{}/{}\"", ".", "format", "(", "dir_parts", "[", "-", "1", "]", ",", "'frame_%05d'", "%", "index", ")", ")", "\n", "\n", "# for each element in database", "\n", "", "for", "i", ",", "frame_name", "in", "enumerate", "(", "paths", ")", ":", "\n", "        ", "row", "=", "cur", ".", "execute", "(", "'SELECT Objid, frames FROM Images WHERE ObjId=?'", ",", "(", "frame_name", ",", ")", ")", "\n", "for", "ObjId", ",", "item", "in", "row", ":", "\n", "#--- Decode blob", "\n", "            ", "nparr", "=", "np", ".", "fromstring", "(", "item", ",", "np", ".", "uint8", ")", "\n", "img_np", "=", "cv2", ".", "imdecode", "(", "nparr", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "\n", "\n", "", "cropped_img", "=", "center_crop", "(", "img_np", ")", "\n", "scaled_img", "=", "cv2", ".", "resize", "(", "img_np", ",", "(", "224", ",", "224", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "final_img", "=", "cv2", ".", "cvtColor", "(", "scaled_img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "images", "[", "i", "]", "=", "final_img", "\n", "orig_imgs", "[", "i", "]", "=", "scaled_img", "\n", "\n", "", "cur", ".", "close", "(", ")", "\n", "con", ".", "close", "(", ")", "\n", "\n", "torch_imgs", "=", "torch", ".", "from_numpy", "(", "images", ".", "transpose", "(", "3", ",", "0", ",", "1", ",", "2", ")", ")", "\n", "torch_imgs", "=", "torch_imgs", ".", "float", "(", ")", "/", "255.0", "\n", "mean_3d", "=", "[", "124", "/", "255", ",", "117", "/", "255", ",", "104", "/", "255", "]", "\n", "std_3d", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "for", "t", ",", "m", ",", "s", "in", "zip", "(", "torch_imgs", ",", "mean_3d", ",", "std_3d", ")", ":", "\n", "        ", "t", ".", "sub_", "(", "m", ")", ".", "div_", "(", "s", ")", "\n", "", "return", "np", ".", "expand_dims", "(", "orig_imgs", ",", "0", ")", ",", "torch_imgs", ".", "unsqueeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.main._convert_weights_to_dataparallel_i3d": [[482, 488], ["dict", "dict", "weight_dict.items"], "function", ["None"], ["", "def", "_convert_weights_to_dataparallel_i3d", "(", "weight_dict", ")", ":", "\n", "   ", "checkpoint", "=", "dict", "(", ")", "\n", "checkpoint", "[", "'state_dict'", "]", "=", "dict", "(", ")", "\n", "for", "key", ",", "value", "in", "weight_dict", ".", "items", "(", ")", ":", "\n", "       ", "checkpoint", "[", "'state_dict'", "]", "[", "'module.'", "+", "key", "]", "=", "value", "\n", "", "return", "checkpoint", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.main.parse_args": [[489, 503], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.saliency_tubes.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'mfnet-base-parser'", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_classes\"", ",", "type", "=", "int", ")", "# 400", "\n", "parser", ".", "add_argument", "(", "\"--model_weights\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--frame_dir\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--frames_start\"", ",", "type", "=", "int", ")", "# end - start = 16 frames", "\n", "parser", ".", "add_argument", "(", "\"--frames_end\"", ",", "type", "=", "int", ")", "# duration = 16", "\n", "parser", ".", "add_argument", "(", "\"--label\"", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--threshold\"", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "\"--backprop_depth\"", ",", "type", "=", "int", ",", "default", "=", "3", ")", "\n", "parser", ".", "add_argument", "(", "\"--tubes_vis_method\"", ",", "type", "=", "str", ",", "default", "=", "'concat'", ")", "\n", "parser", ".", "add_argument", "(", "\"--visualisation_method\"", ",", "type", "=", "str", ",", "default", "=", "'all'", ")", "\n", "parser", ".", "add_argument", "(", "\"--base_output_dir\"", ",", "type", "=", "str", ",", "default", "=", "r\"visualisations\"", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.saliency_tubes.parse_args": [[12, 30], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.None.saliency_tubes.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'saliency-tubes-base-parser'", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_name\"", ",", "type", "=", "str", ",", "choices", "=", "[", "'resnet50'", ",", "'resnet101'", ",", "'resnet152'", ",", "'resnet200'", ",", "'mfnet'", ",", "\n", "'resnext50'", ",", "'i3d'", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_classes\"", ",", "type", "=", "int", ")", "# 400", "\n", "parser", ".", "add_argument", "(", "\"--model_weights\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--frame_dir\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--frames_start\"", ",", "type", "=", "int", ")", "# end - start = 16 frames", "\n", "parser", ".", "add_argument", "(", "\"--frames_end\"", ",", "type", "=", "int", ")", "# duration = 16", "\n", "parser", ".", "add_argument", "(", "\"--fname_convention\"", ",", "type", "=", "str", ",", "default", "=", "'frame_{:010d}.jpg'", ")", "\n", "parser", ".", "add_argument", "(", "\"--label\"", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--threshold\"", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "\"--backprop_depth\"", ",", "type", "=", "int", ",", "default", "=", "3", ")", "\n", "parser", ".", "add_argument", "(", "\"--tubes_vis_method\"", ",", "type", "=", "str", ",", "default", "=", "'concat'", ")", "\n", "parser", ".", "add_argument", "(", "\"--visualisation_method\"", ",", "type", "=", "str", ",", "default", "=", "'all'", ")", "\n", "parser", ".", "add_argument", "(", "\"--base_output_dir\"", ",", "type", "=", "str", ",", "default", "=", "r\"visualisations\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--only_dep_graph\"", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.define_vis_kernels": [[9, 19], ["int", "int", "print", "[].split", "vis.split", "vis.split"], "function", ["None"], ["def", "define_vis_kernels", "(", "vis", ")", ":", "\n", "    ", "if", "vis", "==", "'all'", ":", "\n", "        ", "layer_num", "=", "kernel_num", "=", "None", "\n", "", "elif", "'top'", "in", "vis", ":", "\n", "        ", "kernel_num", "=", "int", "(", "vis", ".", "split", "(", "'top'", ")", "[", "-", "1", "]", ".", "split", "(", "'_'", ")", "[", "0", "]", ")", "\n", "layer_num", "=", "int", "(", "vis", ".", "split", "(", "'in'", ")", "[", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Non regular visualisation format - visualizing all filters'", ")", "\n", "layer_num", "=", "kernel_num", "=", "None", "\n", "", "return", "layer_num", ",", "kernel_num", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.layer_visualisations": [[44, 108], ["layers_dict.items", "print", "isinstance", "isinstance", "vis_utils.layer_visualisations", "torch.tensor", "torch.zeros().cuda", "print", "scipy.ndimage.zoom.squeeze().squeeze", "scipy.ndimage.zoom.cpu().numpy", "scipy.ndimage.zoom", "numpy.min", "os.path.join", "range", "str", "numpy.max", "numpy.min", "str", "cv2.applyColorMap", "tubes.append", "torch.zeros", "layerout[].unsqueeze", "scipy.ndimage.zoom.squeeze", "scipy.ndimage.zoom.cpu", "numpy.uint8", "print", "len", "len"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.layer_visualisations"], ["def", "layer_visualisations", "(", "base_output_dir", ",", "layers_dict", ",", "kernels", ",", "activations", ",", "index", ",", "RGB_video", ",", "tubes_dict", "=", "{", "}", ")", ":", "\n", "# Main Iteration", "\n", "    ", "for", "key", ",", "value", "in", "layers_dict", ".", "items", "(", ")", ":", "\n", "\n", "# Recursive step", "\n", "        ", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "            ", "layers_dict", "[", "key", "]", ",", "tubes_dict", "=", "layer_visualisations", "(", "base_output_dir", ",", "value", ",", "kernels", ",", "activations", ",", "index", "+", "1", ",", "\n", "RGB_video", ",", "tubes_dict", ")", "\n", "\n", "", "if", "isinstance", "(", "layers_dict", "[", "key", "]", ",", "list", ")", ":", "\n", "\n", "# get output activation map for layer", "\n", "            ", "layerout", "=", "torch", ".", "tensor", "(", "activations", "[", "-", "index", "-", "1", "]", ")", "\n", "\n", "cam", "=", "torch", ".", "zeros", "(", "[", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "0", "]", ",", "\n", "1", ",", "# activations[-index-1].shape[1]", "\n", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "2", "]", ",", "\n", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "3", "]", ",", "\n", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "4", "]", "]", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "# main loop for selected kernels", "\n", "\n", "print", "(", "'Creating Saliency Tubes for :'", ",", "str", "(", "'layer %d, kernel %d, w/ %d <child> kernels'", "%", "(", "index", ",", "key", ",", "len", "(", "layers_dict", "[", "key", "]", ")", ")", ")", ")", "\n", "\n", "# Apply padding - only to cases that there is a size mis-match", "\n", "\n", "for", "i", "in", "layers_dict", "[", "key", "]", ":", "\n", "                ", "try", ":", "\n", "                    ", "cam", "+=", "layerout", "[", "0", ",", "i", "]", ".", "unsqueeze", "(", "0", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "print", "(", "'-- PREDICTIONS LAYER REACHED ---'", ")", "\n", "\n", "# Resize CAM to frame level (batch,channels,frames,heigh,width) --> (frames, height, width)", "\n", "", "", "cam", "=", "cam", ".", "squeeze", "(", "0", ")", ".", "squeeze", "(", "0", ")", "\n", "t", ",", "h", ",", "w", "=", "cam", ".", "shape", "\n", "_", ",", "clip_len", ",", "clip_height", ",", "clip_width", ",", "_", "=", "RGB_video", ".", "shape", "\n", "\n", "# Tranfer both volumes to the CPU and convert them to numpy arrays", "\n", "cam", "=", "cam", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "cam", "=", "zoom", "(", "cam", ",", "(", "clip_len", "//", "t", ",", "clip_height", "//", "h", ",", "clip_width", "//", "w", ")", ")", "\n", "\n", "# normalise", "\n", "cam", "-=", "np", ".", "min", "(", "cam", ")", "\n", "cam", "/=", "np", ".", "max", "(", "cam", ")", "-", "np", ".", "min", "(", "cam", ")", "\n", "\n", "# make dirs and filenames", "\n", "heatmap_dir", "=", "os", ".", "path", ".", "join", "(", "base_output_dir", ",", "\n", "str", "(", "'layer_%d_kernel_%d_num_kernels_%d'", "%", "(", "index", ",", "key", ",", "len", "(", "layers_dict", "[", "key", "]", ")", ")", ")", ",", "\n", "\"heat_tubes\"", ")", "\n", "\n", "# produce heatmap for every frame and activation map", "\n", "tubes", "=", "[", "]", "\n", "for", "frame_num", "in", "range", "(", "cam", ".", "shape", "[", "0", "]", ")", ":", "\n", "#Create colourmap", "\n", "                ", "heatmap", "=", "cv2", ".", "applyColorMap", "(", "np", ".", "uint8", "(", "255", "*", "cam", "[", "frame_num", "]", ")", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "\n", "# Create frame with heatmap", "\n", "heatframe", "=", "heatmap", "//", "2", "+", "RGB_video", "[", "0", "]", "[", "frame_num", "]", "//", "2", "\n", "tubes", ".", "append", "(", "heatframe", ")", "\n", "\n", "# Append a tuple of the computed heatmap and the kernels used", "\n", "", "tubes_dict", "[", "heatmap_dir", "]", "=", "(", "tubes", ",", "layers_dict", "[", "key", "]", ")", "\n", "\n", "", "", "print", "(", "'End OF SALIENCY TUBE GENERATION IN DEPTH %d WITH KERNELS '", "%", "(", "index", ")", ",", "[", "*", "layers_dict", "]", ")", "\n", "return", "[", "*", "layers_dict", "]", ",", "tubes_dict", "\n", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.savetopng": [[131, 232], ["print", "open", "open.write", "open.close", "enumerate", "range", "range", "os.path.exists", "os.makedirs", "os.path.join", "str", "copy.deepcopy.astype", "cv2.resize", "cv2.cvtColor", "numpy.float32", "numpy.float32", "cv2.getAffineTransform", "cv2.warpAffine", "transformed_frames_filenames.append", "transformed_frames_list.append", "os.path.exists", "os.makedirs", "len", "cv2.imwrite", "os.path.exists", "os.makedirs", "len", "enumerate", "cv2.imwrite", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "reversed", "numpy.full", "numpy.full", "range", "copy.deepcopy", "os.path.join", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "copy.deepcopy", "range", "len"], "function", ["None"], ["def", "savetopng", "(", "tubes", ",", "path", ")", ":", "\n", "    ", "print", "(", "'SAVING TUBES FOR :'", ",", "path", ")", "\n", "# Save kernel indices that are visualised into file", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "path", ")", ")", "\n", "", "file", "=", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames.txt'", ")", ",", "'w'", ")", "\n", "file", ".", "write", "(", "str", "(", "tubes", "[", "1", "]", ")", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "transformed_frames_list", "=", "[", "]", "\n", "transformed_frames_filenames", "=", "[", "]", "\n", "\n", "# Iterate over tubes and apply visualisation transforms", "\n", "for", "frame", ",", "image", "in", "enumerate", "(", "tubes", "[", "0", "]", ")", ":", "\n", "# Ensuring that only unsign integers will be used (as expected)", "\n", "        ", "image", "=", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "# Resizing", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "256", ",", "256", ")", ")", "\n", "# Create 4 channel array (used for better frame overlaping)", "\n", "rgba", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_RGB2RGBA", ")", "\n", "rgba", "[", ":", ",", ":", ",", "3", "]", "=", "255", "\n", "\n", "rows", ",", "cols", ",", "ch", "=", "rgba", ".", "shape", "\n", "\n", "# Transforms", "\n", "pts1", "=", "np", ".", "float32", "(", "[", "[", "cols", "/", "15", ",", "rows", "/", "11", "]", ",", "[", "cols", "/", "1.8", ",", "rows", "/", "10", "]", ",", "[", "cols", "/", "8.5", ",", "rows", "/", "1.6", "]", "]", ")", "\n", "pts2", "=", "np", ".", "float32", "(", "[", "[", "cols", "/", "5", ",", "rows", "/", "4", "]", ",", "[", "cols", "/", "1.7", ",", "rows", "/", "4.7", "]", ",", "[", "cols", "/", "5.5", ",", "rows", "/", "2.1", "]", "]", ")", "\n", "M", "=", "cv2", ".", "getAffineTransform", "(", "pts1", ",", "pts2", ")", "\n", "dst1", "=", "cv2", ".", "warpAffine", "(", "rgba", ",", "M", ",", "(", "cols", ",", "rows", ")", ",", "borderValue", "=", "(", "255", ",", "255", ",", "255", ",", "0", ")", ")", "\n", "\n", "# add to list of frames", "\n", "transformed_frames_filenames", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames'", ",", "'frame_00%d.png'", "%", "frame", ")", ")", "\n", "transformed_frames_list", ".", "append", "(", "dst1", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames'", ")", ")", "\n", "\n", "# save frames to corresponding directory", "\n", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "transformed_frames_list", ")", ")", ":", "\n", "        ", "cv2", ".", "imwrite", "(", "transformed_frames_filenames", "[", "i", "]", ",", "transformed_frames_list", "[", "i", "]", ")", "\n", "\n", "\n", "# img2 is to be shifted by `shift` amount", "\n", "", "shift", "=", "(", "80", ",", "0", ")", "\n", "\n", "# Saliency tube directory", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'saliency_tubes'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'saliency_tubes'", ")", ")", "\n", "\n", "# Iterate over each frame(this will be the main frame to be visualised)", "\n", "", "for", "j", "in", "(", "range", "(", "len", "(", "transformed_frames_list", ")", ")", ")", ":", "\n", "        ", "for", "i", ",", "img", "in", "enumerate", "(", "reversed", "(", "transformed_frames_list", ")", ")", ":", "\n", "\n", "# use ~.45 alpha for frames that are no main frame 'j'", "\n", "            ", "tmp", "=", "np", ".", "full", "(", "(", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ",", "4", ")", ",", "(", "255", ",", "255", ",", "255", ",", "0", ")", ")", "\n", "if", "i", "!=", "j", ":", "\n", "# for ih in range(img.shape[0]):", "\n", "#     for iw in range(img.shape[1]):", "\n", "#         if(img[ih,iw,3]>0):", "\n", "#             tmp[ih,iw] = np.array([img[ih,iw][0],img[ih,iw][1],img[ih,iw][2],135])", "\n", "\n", "                ", "tmp", "[", ":", ",", ":", ",", "0", "]", "=", "np", ".", "where", "(", "img", "[", ":", ",", ":", ",", "3", "]", ">", "0", ",", "img", "[", ":", ",", ":", ",", "0", "]", ",", "tmp", "[", ":", ",", ":", ",", "0", "]", ")", "\n", "tmp", "[", ":", ",", ":", ",", "1", "]", "=", "np", ".", "where", "(", "img", "[", ":", ",", ":", ",", "3", "]", ">", "0", ",", "img", "[", ":", ",", ":", ",", "1", "]", ",", "tmp", "[", ":", ",", ":", ",", "1", "]", ")", "\n", "tmp", "[", ":", ",", ":", ",", "2", "]", "=", "np", ".", "where", "(", "img", "[", ":", ",", ":", ",", "3", "]", ">", "0", ",", "img", "[", ":", ",", ":", ",", "2", "]", ",", "tmp", "[", ":", ",", ":", ",", "2", "]", ")", "\n", "tmp", "[", ":", ",", ":", ",", "3", "]", "=", "np", ".", "where", "(", "img", "[", ":", ",", ":", ",", "3", "]", ">", "0", ",", "135", ",", "0", ")", "\n", "", "else", ":", "\n", "                ", "tmp", "=", "copy", ".", "deepcopy", "(", "img", ")", "\n", "\n", "", "if", "i", "==", "0", ":", "\n", "                ", "image", "=", "tmp", "\n", "continue", "\n", "", "new_h", "=", "image", ".", "shape", "[", "0", "]", "+", "shift", "[", "0", "]", "\n", "new_w", "=", "image", ".", "shape", "[", "1", "]", "+", "shift", "[", "1", "]", "\n", "new_image", "=", "np", ".", "full", "(", "(", "new_h", ",", "new_w", ",", "4", ")", ",", "(", "255", ",", "255", ",", "255", ",", "0", ")", ")", "\n", "\n", "new_image", "[", "shift", "[", "0", "]", ":", "image", ".", "shape", "[", "0", "]", "+", "shift", "[", "0", "]", ",", "shift", "[", "1", "]", ":", "image", ".", "shape", "[", "1", "]", "+", "shift", "[", "1", "]", "]", "=", "image", "\n", "\n", "\n", "# alpha = new_image[:256,:256,3] + tmp[:,:,3]", "\n", "# for iii in range(4):", "\n", "#     new_image[:256,:256,iii] = np.where(tmp[:,:,3]>0,", "\n", "#                                 np.where(new_image[:256,:256,3]==0,", "\n", "#                                          tmp[:,:,iii],", "\n", "#                                          new_image[:256,:256,iii]*(new_image[:256,:256,3]/alpha) +", "\n", "#                                          tmp[:,:,iii]*(tmp[:,:,3]/alpha)", "\n", "#                                          ),", "\n", "#                                 new_image[:256,:256,iii])", "\n", "\n", "# Only transfer pixels that are not transparent (i.e. part of the frame rather than the image)", "\n", "for", "ih", "in", "range", "(", "tmp", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "for", "iw", "in", "range", "(", "tmp", ".", "shape", "[", "1", "]", ")", ":", "\n", "                    ", "if", "tmp", "[", "ih", ",", "iw", ",", "3", "]", ">", "0", ":", "\n", "                        ", "if", "new_image", "[", "ih", ",", "iw", ",", "3", "]", "==", "0", ":", "\n", "                            ", "new_image", "[", "ih", ",", "iw", "]", "=", "tmp", "[", "ih", ",", "iw", "]", "\n", "", "else", ":", "\n", "                            ", "alpha", "=", "new_image", "[", "ih", ",", "iw", ",", "3", "]", "+", "tmp", "[", "ih", ",", "iw", ",", "3", "]", "\n", "new_image", "[", "ih", ",", "iw", "]", "=", "new_image", "[", "ih", ",", "iw", "]", "*", "(", "new_image", "[", "ih", ",", "iw", ",", "3", "]", "/", "alpha", ")", "+", "tmp", "[", "ih", ",", "iw", "]", "*", "(", "tmp", "[", "ih", ",", "iw", ",", "3", "]", "/", "alpha", ")", "\n", "\n", "", "", "", "", "image", "=", "copy", ".", "deepcopy", "(", "new_image", ")", "\n", "", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'saliency_tubes'", ",", "'result%d.png'", "%", "(", "len", "(", "transformed_frames_list", ")", "-", "j", ")", ")", ",", "image", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.kernel_heatmaps": [[237, 280], ["list", "layers_dict.items", "print", "isinstance", "isinstance", "vis_utils.kernel_heatmaps", "torch.tensor", "torch.zeros().cuda", "print", "resize_cam.squeeze().squeeze", "resize_cam.detach().cpu().numpy", "vis_utils.resize_cam", "cams_list.append", "str", "torch.zeros", "layerout[].unsqueeze", "resize_cam.squeeze", "resize_cam.detach().cpu", "print", "len", "resize_cam.detach"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.kernel_heatmaps", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.resize_cam"], ["def", "kernel_heatmaps", "(", "layers_dict", ",", "kernels", ",", "activations", ",", "index", ",", "out_size", ",", "cams_list", "=", "list", "(", ")", ")", ":", "\n", "# Main Iteration", "\n", "    ", "for", "key", ",", "value", "in", "layers_dict", ".", "items", "(", ")", ":", "\n", "\n", "# Recursive step", "\n", "        ", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "            ", "layers_dict", "[", "key", "]", ",", "cams_list", "=", "kernel_heatmaps", "(", "value", ",", "kernels", ",", "activations", ",", "index", "+", "1", ",", "out_size", ",", "cams_list", ")", "\n", "\n", "", "if", "isinstance", "(", "layers_dict", "[", "key", "]", ",", "list", ")", ":", "\n", "\n", "# get output activation map for layer", "\n", "            ", "layerout", "=", "torch", ".", "tensor", "(", "activations", "[", "-", "index", "-", "1", "]", ")", "\n", "\n", "cam_shape", "=", "[", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "0", "]", ",", "1", ",", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "2", "]", ",", "\n", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "3", "]", ",", "activations", "[", "-", "index", "-", "1", "]", ".", "shape", "[", "4", "]", "]", "\n", "cam", "=", "torch", ".", "zeros", "(", "cam_shape", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "# main loop for selected kernels", "\n", "\n", "print", "(", "'Creating Saliency Tubes for :'", ",", "\n", "str", "(", "'layer %d, kernel %d, w/ %d <child> kernels'", "%", "(", "index", ",", "key", ",", "len", "(", "layers_dict", "[", "key", "]", ")", ")", ")", ")", "\n", "\n", "# Apply padding - only to cases that there is a size mis-match", "\n", "for", "i", "in", "layers_dict", "[", "key", "]", ":", "\n", "                ", "try", ":", "\n", "                    ", "cam", "+=", "layerout", "[", "0", ",", "i", "]", ".", "unsqueeze", "(", "0", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "print", "(", "'-- PREDICTIONS LAYER REACHED ---'", ")", "\n", "\n", "# Resize CAM to frame level (batch,channels,frames,heigh,width) --> (frames, height, width)", "\n", "", "", "cam", "=", "cam", ".", "squeeze", "(", "0", ")", ".", "squeeze", "(", "0", ")", "\n", "t", ",", "h", ",", "w", "=", "cam", ".", "shape", "\n", "clip_len", ",", "clip_height", ",", "clip_width", "=", "out_size", "\n", "\n", "# Tranfer both volumes to the CPU and convert them to numpy arrays", "\n", "cam", "=", "cam", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "cam", "=", "resize_cam", "(", "cam", ",", "x", "=", "clip_len", "//", "t", ",", "y", "=", "clip_height", "//", "h", ",", "z", "=", "clip_width", "//", "w", ")", "\n", "\n", "# cams_dict[\"{}_{}\".format(index, key)] = cam", "\n", "cams_list", ".", "append", "(", "cam", ")", "\n", "\n", "", "", "print", "(", "'End OF CAM GENERATION IN DEPTH %d WITH KERNELS '", "%", "(", "index", ")", ",", "[", "*", "layers_dict", "]", ")", "\n", "return", "[", "*", "layers_dict", "]", ",", "cams_list", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.resize_cam": [[282, 292], ["scipy.ndimage.zoom", "numpy.min", "numpy.max", "numpy.min"], "function", ["None"], ["", "def", "resize_cam", "(", "cam", ",", "x", "=", "2", ",", "y", "=", "32", ",", "z", "=", "32", ")", ":", "\n", "# Resize CAM to frame level", "\n", "    ", "cam", "=", "zoom", "(", "cam", ",", "(", "x", ",", "y", ",", "z", ")", ")", "\n", "# print(\"Min - max (pre standardization)\")", "\n", "# for i in range(len(cam)):", "\n", "#     print(\"{}: {}, {}\".format(i, np.min(cam[i]), np.max(cam[i])))", "\n", "cam", "-=", "np", ".", "min", "(", "cam", ")", "\n", "cam", "/=", "np", ".", "max", "(", "cam", ")", "-", "np", ".", "min", "(", "cam", ")", "\n", "\n", "return", "cam", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.vis_cams_overlayed_per_branch": [[294, 327], ["len", "os.path.join", "list", "enumerate", "range", "str", "len", "list", "range", "list.append", "cv2.imshow", "cv2.waitKey", "list.append", "heatframe.astype", "len", "cv2.applyColorMap", "numpy.uint8"], "function", ["None"], ["", "def", "vis_cams_overlayed_per_branch", "(", "base_output_dir", ",", "cams", ",", "RGB_video", ")", ":", "\n", "    ", "num_cams", "=", "len", "(", "cams", ")", "\n", "# one colormap per cam. At most 5 cams for visualization", "\n", "cam_colormaps", "=", "[", "cv2", ".", "COLORMAP_JET", ",", "cv2", ".", "COLORMAP_AUTUMN", ",", "cv2", ".", "COLORMAP_HOT", ",", "cv2", ".", "COLORMAP_COOL", ",", "cv2", ".", "COLORMAP_CIVIDIS", "]", "\n", "\n", "# make dirs and filenames", "\n", "cam_dir", "=", "os", ".", "path", ".", "join", "(", "base_output_dir", ",", "\n", "str", "(", "'overlay_cam_branch_{}'", ".", "format", "(", "num_cams", ")", ")", ",", "\n", "\"heat_tubes\"", ")", "\n", "\n", "# first create the colormapped cams", "\n", "if", "num_cams", ">", "len", "(", "cam_colormaps", ")", ":", "# colormaps are not enough to visualize all cams, just keep the 5 first cams", "\n", "        ", "cams", "=", "cams", "[", ":", "len", "(", "cam_colormaps", ")", "]", "\n", "\n", "", "cmap_cams", "=", "list", "(", ")", "\n", "for", "i", ",", "cam", "in", "enumerate", "(", "cams", ")", ":", "\n", "        ", "frames_cmap_cams", "=", "list", "(", ")", "\n", "for", "j", "in", "range", "(", "cam", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "frame_cam", "=", "cam", "[", "j", "]", "\n", "heatmap", "=", "cv2", ".", "applyColorMap", "(", "np", ".", "uint8", "(", "255", "*", "frame_cam", ")", ",", "cam_colormaps", "[", "i", "]", ")", "/", "255", "\n", "frames_cmap_cams", ".", "append", "(", "heatmap", ")", "\n", "", "cmap_cams", ".", "append", "(", "frames_cmap_cams", ")", "\n", "\n", "# aggregate the cams to the original frames", "\n", "\n", "", "for", "frame_num", "in", "range", "(", "RGB_video", ".", "shape", "[", "1", "]", ")", ":", "# usually 16", "\n", "        ", "heatframe", "=", "RGB_video", "[", "0", "]", "[", "frame_num", "]", "//", "3", "\n", "cam_heatframe", "=", "cmap_cams", "[", "0", "]", "[", "frame_num", "]", "\n", "for", "frames_cmap_cams", "in", "cmap_cams", "[", "1", ":", "]", ":", "\n", "             ", "cam_heatframe", "+=", "(", "255", "*", "frames_cmap_cams", "[", "frame_num", "]", ")", "//", "num_cams", "\n", "", "heatframe", "+=", "2", "*", "cam_heatframe", "//", "3", "\n", "cv2", ".", "imshow", "(", "'frames_cam'", ",", "heatframe", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "cv2", ".", "waitKey", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.vis_utils.savetopng_norotation": [[344, 362], ["print", "open", "open.write", "open.close", "enumerate", "os.path.exists", "os.makedirs", "os.path.join", "str", "os.path.exists", "os.makedirs", "image.astype.astype", "cv2.imwrite", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["", "", "def", "savetopng_norotation", "(", "tubes", ",", "path", ")", ":", "\n", "    ", "path", "+=", "\"_orig\"", "\n", "print", "(", "'SAVING TUBES FOR :'", ",", "path", ")", "\n", "# Save kernel indices that are visualised into file", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "path", ")", ")", "\n", "", "file", "=", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames.txt'", ")", ",", "'w'", ")", "\n", "file", ".", "write", "(", "str", "(", "tubes", "[", "1", "]", ")", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames'", ")", ")", "\n", "\n", "# Iterate over tubes and just save without transforms", "\n", "", "for", "frame", ",", "image", "in", "enumerate", "(", "tubes", "[", "0", "]", ")", ":", "\n", "# Ensuring that only unsign integers will be used (as expected)", "\n", "        ", "image", "=", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'frames'", ",", "'frame_00%d.png'", "%", "frame", ")", ",", "image", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.calc_utils.backprop_kernel_indices": [[32, 127], ["len", "list", "list", "torch.functional.F.avg_pool3d().squeeze().squeeze().squeeze", "torch.functional.F.avg_pool3d().squeeze().squeeze().squeeze", "torch.mul", "torch.min", "torch.FloatTensor", "sum", "sum", "len", "[].size", "a_l1[].size", "torch.cat", "len", "torch.FloatTensor.sum().expand_as", "torch.max", "values.sort", "enumerate", "enumerate", "torch.functional.F.avg_pool3d().squeeze().squeeze", "torch.functional.F.avg_pool3d().squeeze().squeeze", "enumerate", "k.repeat", "torch.FloatTensor.sum", "enumerate", "enumerate", "enumerate", "torch.functional.F.avg_pool3d().squeeze", "torch.functional.F.avg_pool3d().squeeze", "torch.functional.F.avg_pool3d", "torch.functional.F.avg_pool3d"], "function", ["None"], ["def", "backprop_kernel_indices", "(", "indices_l", ",", "k_l", ",", "a_l1", ",", "thres", ",", "topn", "=", "None", ")", ":", "\n", "#Initialisation", "\n", "    ", "indices_l1", "=", "{", "}", "\n", "\n", "# Special architectures that include either; cross-channel convolutions, seperate branches or fibres.", "\n", "if", "(", "len", "(", "k_l", ")", ">", "1", ")", ":", "\n", "# Get shape(s) of all kenel inputs for layer", "\n", "        ", "kernels_shapes_0", "=", "[", "k", ".", "shape", "[", "0", "]", "for", "k", "in", "k_l", "]", "\n", "kernels_shapes_1", "=", "[", "k", ".", "shape", "[", "1", "]", "for", "k", "in", "k_l", "]", "\n", "\n", "# Create corresponding kernel shapes - output shape", "\n", "kernels_out_list", "=", "[", "sum", "(", "kernels_shapes_0", "[", ":", "idx", "+", "1", "]", ")", "for", "idx", ",", "k", "in", "enumerate", "(", "kernels_shapes_0", ")", "]", "\n", "kernels_out_list", "=", "[", "0", "]", "+", "kernels_out_list", "\n", "\n", "# Create corresponding kernel shapes - input shape", "\n", "kernels_in_list", "=", "[", "sum", "(", "kernels_shapes_1", "[", ":", "idx", "+", "1", "]", ")", "for", "idx", ",", "k", "in", "enumerate", "(", "kernels_shapes_1", ")", "]", "\n", "kernels_in_list", "=", "[", "0", "]", "+", "kernels_in_list", "\n", "\n", "", "else", ":", "\n", "# Create corresponding kernel shapes - output/input shape", "\n", "        ", "kernels_out_list", "=", "[", "0", ",", "k_l", "[", "0", "]", ".", "shape", "[", "0", "]", "]", "\n", "kernels_in_list", "=", "[", "0", ",", "k_l", "[", "0", "]", ".", "shape", "[", "1", "]", "]", "\n", "\n", "\n", "\n", "# Start by computing activation map a^k_l(i)_l1 for each k_l(i), where i in indices", "\n", "", "for", "i", "in", "indices_l", ":", "\n", "\n", "        ", "tmp", "=", "i", "\n", "\n", "# Normal convolutions over entire activation maps", "\n", "if", "(", "len", "(", "k_l", ")", "==", "1", ")", ":", "\n", "            ", "kernel_indx", "=", "0", "\n", "\n", "# Convolutions with various channels sizes", "\n", "", "else", ":", "\n", "            ", "kernel_indx", "=", "[", "id", "for", "id", ",", "ki", "in", "enumerate", "(", "kernels_shapes_0", ")", "if", "(", "kernels_out_list", "[", "id", "+", "1", "]", "-", "i", ")", ">", "0", "]", "\n", "kernel_indx", "=", "kernel_indx", "[", "0", "]", "\n", "tmp", "=", "i", "-", "kernels_out_list", "[", "kernel_indx", "]", "\n", "\n", "\n", "# pointwise multiplication for activation a(l1) and the ith kernel in k_l", "\n", "#print(\"Kernel shape: \",k_l[i].shape)", "\n", "#print(\"Activation_shape: \",a_l1[0].shape)", "\n", "\n", "# Downsample the spatio-temporal dimension to create a global representation of the activation map and kernel.", "\n", "", "_", ",", "dk", ",", "hk", ",", "wk", "=", "list", "(", "k_l", "[", "kernel_indx", "]", "[", "tmp", "]", ".", "size", "(", ")", ")", "\n", "_", ",", "da", ",", "ha", ",", "wa", "=", "list", "(", "a_l1", "[", "0", "]", ".", "size", "(", ")", ")", "\n", "kernel", "=", "F", ".", "avg_pool3d", "(", "k_l", "[", "kernel_indx", "]", "[", "tmp", "]", ",", "(", "dk", ",", "hk", ",", "wk", ")", ")", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "act_map", "=", "F", ".", "avg_pool3d", "(", "a_l1", "[", "0", "]", ",", "(", "da", ",", "ha", ",", "wa", ")", ")", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "\n", "# If group convolutions, increase the kernel size", "\n", "groups", "=", "act_map", ".", "shape", "[", "0", "]", "//", "kernels_in_list", "[", "-", "1", "]", "\n", "\n", "# Inflate kernels to represent all kernels in the same feature space as the input", "\n", "if", "groups", ">", "1", ":", "\n", "# Kernel inflation form [out_channels, in_channels/groups] -> [out_channels, in_channels]", "\n", "            ", "kernel", "=", "torch", ".", "cat", "(", "[", "k", ".", "repeat", "(", "groups", ")", "for", "k", "in", "kernel", "]", ",", "0", ")", "\n", "\n", "\n", "\n", "# Select activations for corresponding kernel channels - special architectures", "\n", "", "if", "(", "len", "(", "k_l", ")", ">", "1", ")", ":", "\n", "            ", "lower_lim", "=", "kernels_in_list", "[", "kernel_indx", "]", "\n", "upper_lim", "=", "kernels_in_list", "[", "kernel_indx", "+", "1", "]", "\n", "act_map", "=", "act_map", "[", "lower_lim", ":", "upper_lim", "]", "\n", "\n", "\n", "", "pooled", "=", "torch", ".", "mul", "(", "kernel", ",", "act_map", ")", "\n", "\n", "pooled", "=", "pooled", "/", "pooled", ".", "sum", "(", "0", ")", ".", "expand_as", "(", "pooled", ")", "\n", "\n", "base", "=", "torch", ".", "min", "(", "pooled", ")", "\n", "pooled_range", "=", "torch", ".", "max", "(", "pooled", ")", "-", "base", "\n", "pooled", "=", "torch", ".", "FloatTensor", "(", "[", "(", "x", "-", "base", ")", "/", "pooled_range", "for", "x", "in", "pooled", "]", ")", "\n", "\n", "# Iterate over the pooled volume and find the indices that have a value larger than the threshold", "\n", "if", "topn", "is", "None", ":", "\n", "            ", "indices_l1_i", "=", "[", "j", "for", "j", ",", "feat", "in", "enumerate", "(", "pooled", ")", "if", "feat", ">=", "thres", "]", "\n", "", "else", ":", "\n", "# Get all values above threshold", "\n", "            ", "values", "=", "[", "value", "for", "value", "in", "enumerate", "(", "pooled", ")", "if", "value", ">=", "thres", "]", "\n", "# accending order sort", "\n", "values", ".", "sort", "(", ")", "\n", "# select n values", "\n", "values", "=", "values", "[", "-", "topn", ":", "]", "\n", "# find top n value indices in pooled tensor", "\n", "indices_l1_i", "=", "[", "j", "for", "j", ",", "feat", "in", "enumerate", "(", "pooled", ")", "if", "feat", "in", "values", "]", "\n", "\n", "\n", "# Append indices to dictionary", "\n", "", "indices_l1", "[", "i", "]", "=", "indices_l1_i", "\n", "\n", "", "return", "indices_l1", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.calc_utils.generate_indices": [[165, 194], ["print", "print", "layers_dict.keys", "print", "print", "isinstance", "layers_dict.keys", "isinstance", "print", "calc_utils.generate_indices", "calc_utils.backprop_kernel_indices", "calc_utils.backprop_kernel_indices"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.calc_utils.generate_indices", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.calc_utils.backprop_kernel_indices", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.calc_utils.backprop_kernel_indices"], ["def", "generate_indices", "(", "layers_dict", ",", "kernels", ",", "activations", ",", "threshold", ",", "index", ",", "max_depth", ",", "vis_depth", ",", "vis_num_kernels", ")", ":", "\n", "    ", "print", "(", "'Backstepping to depth -%d of maximum -%d'", "%", "(", "index", ",", "max_depth", ")", ")", "\n", "print", "(", "index", ")", "\n", "# Function termination after maximum depth is reached", "\n", "if", "index", ">=", "max_depth", ":", "\n", "        ", "print", "(", "'END OF BRANCH DISCOVERY'", ")", "\n", "return", "layers_dict", "\n", "# Iteration", "\n", "", "for", "key", "in", "layers_dict", ".", "keys", "(", ")", ":", "\n", "        ", "print", "(", "'layerindex:'", ",", "index", ",", "'key:'", ",", "key", ",", "'keys dict:'", ",", "layers_dict", ".", "keys", "(", ")", ",", "'\\n'", ")", "\n", "# Unexplored connection", "\n", "if", "not", "isinstance", "(", "layers_dict", "[", "key", "]", ",", "dict", ")", ":", "\n", "# For layer that only specific kernels are to be visualised", "\n", "            ", "if", "index", "==", "vis_depth", ":", "\n", "                ", "layers_dict", "[", "key", "]", "=", "backprop_kernel_indices", "(", "layers_dict", "[", "key", "]", ",", "kernels", "[", "-", "index", "]", ",", "activations", "[", "-", "index", "-", "1", "]", ",", "\n", "threshold", ",", "vis_num_kernels", ")", "\n", "", "else", ":", "\n", "                ", "layers_dict", "[", "key", "]", "=", "backprop_kernel_indices", "(", "layers_dict", "[", "key", "]", ",", "kernels", "[", "-", "index", "]", ",", "activations", "[", "-", "index", "-", "1", "]", ",", "\n", "threshold", ")", "\n", "\n", "", "", "if", "index", ">", "max_depth", ":", "\n", "            ", "return", "layers_dict", "\n", "# Recursive step", "\n", "", "if", "isinstance", "(", "layers_dict", "[", "key", "]", ",", "dict", ")", ":", "\n", "            ", "print", "(", "'Backstepping...'", ")", "\n", "layers_dict", "[", "key", "]", "=", "generate_indices", "(", "layers_dict", "[", "key", "]", ",", "kernels", ",", "activations", ",", "threshold", ",", "index", "+", "1", ",", "max_depth", ",", "\n", "vis_depth", ",", "vis_num_kernels", ")", "\n", "\n", "", "", "return", "layers_dict", "\n", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._make_torch_images": [[12, 20], ["torch.from_numpy", "zip", "torch.from_numpy.unsqueeze", "images.transpose", "torch.from_numpy.float", "t.sub_().div_", "t.sub_"], "function", ["None"], ["def", "_make_torch_images", "(", "images", ")", ":", "\n", "    ", "torch_images", "=", "torch", ".", "from_numpy", "(", "images", ".", "transpose", "(", "3", ",", "0", ",", "1", ",", "2", ")", ")", "\n", "torch_images", "=", "torch_images", ".", "float", "(", ")", "/", "255.0", "\n", "mean_3d", "=", "[", "124", "/", "255", ",", "117", "/", "255", ",", "104", "/", "255", "]", "\n", "std_3d", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "for", "t", ",", "m", ",", "s", "in", "zip", "(", "torch_images", ",", "mean_3d", ",", "std_3d", ")", ":", "\n", "        ", "t", ".", "sub_", "(", "m", ")", ".", "div_", "(", "s", ")", "\n", "", "return", "torch_images", ".", "unsqueeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._center_crop": [[22, 28], ["int", "int", "round", "round"], "function", ["None"], ["", "def", "_center_crop", "(", "data", ",", "tw", "=", "224", ",", "th", "=", "224", ")", ":", "\n", "    ", "h", ",", "w", ",", "c", "=", "data", ".", "shape", "\n", "x1", "=", "int", "(", "round", "(", "(", "w", "-", "tw", ")", "/", "2.", ")", ")", "\n", "y1", "=", "int", "(", "round", "(", "(", "h", "-", "th", ")", "/", "2.", ")", ")", "\n", "cropped_data", "=", "data", "[", "y1", ":", "(", "y1", "+", "th", ")", ",", "x1", ":", "(", "x1", "+", "tw", ")", ",", ":", "]", "\n", "return", "cropped_data", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._per_frame_transform": [[30, 35], ["cv2.resize", "load_utils._center_crop", "cv2.cvtColor"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._center_crop"], ["", "def", "_per_frame_transform", "(", "next_image", ")", ":", "\n", "    ", "scaled_img", "=", "cv2", ".", "resize", "(", "next_image", ",", "(", "256", ",", "256", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "# resize to 256x256", "\n", "cropped_img", "=", "_center_crop", "(", "scaled_img", ")", "# center crop 224x224", "\n", "final_img", "=", "cv2", ".", "cvtColor", "(", "cropped_img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "return", "cropped_img", ",", "final_img", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils.load_images": [[37, 50], ["os.listdir", "load_utils._load_images_db", "range", "load_utils._load_images_from_frames", "os.path.join", "range", "fname_convention.format"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_images_db", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_images_from_frames"], ["", "def", "load_images", "(", "frame_dir", ",", "frames_start", ",", "frames_end", ",", "fname_convention", ")", ":", "\n", "# choose type of frame loader", "\n", "    ", "files", "=", "os", ".", "listdir", "(", "frame_dir", ")", "\n", "if", "'frames.db'", "in", "files", ":", "\n", "# Create a list of frames based on start and end time", "\n", "        ", "selected_frames", "=", "[", "i", "for", "i", "in", "range", "(", "frames_start", ",", "frames_end", ")", "]", "\n", "rgb_vid", ",", "vid", "=", "_load_images_db", "(", "frame_dir", ",", "selected_frames", "=", "selected_frames", ")", "\n", "", "else", ":", "\n", "        ", "frame_indices", "=", "range", "(", "frames_start", ",", "frames_end", ")", "\n", "selected_frames", "=", "[", "os", ".", "path", ".", "join", "(", "frame_dir", ",", "fname_convention", ".", "format", "(", "x", ")", ")", "for", "x", "in", "frame_indices", "]", "\n", "rgb_vid", ",", "vid", "=", "_load_images_from_frames", "(", "frame_dir", ",", "selected_frames", ")", "\n", "\n", "", "return", "rgb_vid", ",", "vid", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_images_from_frames": [[52, 63], ["np.zeros", "np.zeros_like", "enumerate", "os.path.join", "cv2.imread", "load_utils._per_frame_transform", "np.expand_dims", "load_utils._make_torch_images", "len"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._per_frame_transform", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._make_torch_images"], ["", "def", "_load_images_from_frames", "(", "frame_dir", ",", "selected_frames", ")", ":", "\n", "    ", "final_images", "=", "np", ".", "zeros", "(", "(", "len", "(", "selected_frames", ")", ",", "224", ",", "224", ",", "3", ")", ")", "\n", "orig_images", "=", "np", ".", "zeros_like", "(", "final_images", ")", "\n", "for", "i", ",", "frame_name", "in", "enumerate", "(", "selected_frames", ")", ":", "\n", "        ", "im_name", "=", "os", ".", "path", ".", "join", "(", "frame_dir", ",", "frame_name", ")", "\n", "next_image", "=", "cv2", ".", "imread", "(", "im_name", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "cropped_img", ",", "final_img", "=", "_per_frame_transform", "(", "next_image", ")", "\n", "final_images", "[", "i", "]", "=", "final_img", "\n", "orig_images", "[", "i", "]", "=", "cropped_img", "\n", "\n", "", "return", "np", ".", "expand_dims", "(", "orig_images", ",", "0", ")", ",", "_make_torch_images", "(", "final_images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_images_db": [[65, 110], ["np.zeros", "np.zeros_like", "sqlite3.connect", "sqlite3.connect.cursor", "os.path.split", "enumerate", "con.cursor.close", "sqlite3.connect.close", "torch.from_numpy", "zip", "os.path.join", "print", "frame_dir.split", "paths.append", "con.cursor.execute", "load_utils._center_crop", "cv2.resize", "cv2.cvtColor", "np.zeros.transpose", "torch.from_numpy.float", "t.sub_().div_", "np.expand_dims", "torch.from_numpy.unsqueeze", "np.fromstring", "cv2.imdecode", "t.sub_"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._center_crop"], ["", "def", "_load_images_db", "(", "frame_dir", ",", "selected_frames", ")", ":", "\n", "    ", "images", "=", "np", ".", "zeros", "(", "(", "16", ",", "224", ",", "224", ",", "3", ")", ")", "\n", "orig_imgs", "=", "np", ".", "zeros_like", "(", "images", ")", "\n", "\n", "# Establish connection to .db", "\n", "\n", "con", "=", "sqlite3", ".", "connect", "(", "os", ".", "path", ".", "join", "(", "frame_dir", ",", "'frames.db'", ")", ")", "\n", "cur", "=", "con", ".", "cursor", "(", ")", "\n", "if", "cur", "is", "None", ":", "\n", "        ", "print", "(", "\"cursor is empty\"", ")", "\n", "raise", "Exception", "\n", "\n", "", "paths", "=", "[", "]", "\n", "dir", "=", "frame_dir", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "dir_parts", "=", "os", ".", "path", ".", "split", "(", "frame_dir", ")", "\n", "# Get framespaths to load from database", "\n", "for", "index", "in", "selected_frames", ":", "\n", "# paths.append(os.path.join(str(dir),'frame_%05d'%index))", "\n", "        ", "paths", ".", "append", "(", "\"{}/{}\"", ".", "format", "(", "dir_parts", "[", "-", "1", "]", ",", "'frame_%05d'", "%", "index", ")", ")", "\n", "\n", "# for each element in database", "\n", "", "for", "i", ",", "frame_name", "in", "enumerate", "(", "paths", ")", ":", "\n", "        ", "row", "=", "cur", ".", "execute", "(", "'SELECT Objid, frames FROM Images WHERE ObjId=?'", ",", "(", "frame_name", ",", ")", ")", "\n", "for", "ObjId", ",", "item", "in", "row", ":", "\n", "#--- Decode blob", "\n", "            ", "nparr", "=", "np", ".", "fromstring", "(", "item", ",", "np", ".", "uint8", ")", "\n", "img_np", "=", "cv2", ".", "imdecode", "(", "nparr", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "\n", "\n", "", "cropped_img", "=", "_center_crop", "(", "img_np", ")", "\n", "scaled_img", "=", "cv2", ".", "resize", "(", "img_np", ",", "(", "224", ",", "224", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "final_img", "=", "cv2", ".", "cvtColor", "(", "scaled_img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "images", "[", "i", "]", "=", "final_img", "\n", "orig_imgs", "[", "i", "]", "=", "scaled_img", "\n", "\n", "", "cur", ".", "close", "(", ")", "\n", "con", ".", "close", "(", ")", "\n", "\n", "torch_imgs", "=", "torch", ".", "from_numpy", "(", "images", ".", "transpose", "(", "3", ",", "0", ",", "1", ",", "2", ")", ")", "\n", "torch_imgs", "=", "torch_imgs", ".", "float", "(", ")", "/", "255.0", "\n", "mean_3d", "=", "[", "124", "/", "255", ",", "117", "/", "255", ",", "104", "/", "255", "]", "\n", "std_3d", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "for", "t", ",", "m", ",", "s", "in", "zip", "(", "torch_imgs", ",", "mean_3d", ",", "std_3d", ")", ":", "\n", "        ", "t", ".", "sub_", "(", "m", ")", ".", "div_", "(", "s", ")", "\n", "", "return", "np", ".", "expand_dims", "(", "orig_imgs", ",", "0", ")", ",", "torch_imgs", ".", "unsqueeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_resnext": [[113, 123], ["resnext50", "resnext101"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.resnext50", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.resnext101"], ["", "def", "_load_resnext", "(", "model_name", ",", "num_classes", ",", "duration", ",", "sample_size", "=", "224", ")", ":", "\n", "    ", "if", "model_name", "==", "'resnext50'", ":", "\n", "        ", "model_ft", "=", "resnext50", "(", "sample_size", "=", "sample_size", ",", "sample_duration", "=", "duration", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model_name", "==", "'resnext101'", ":", "\n", "        ", "model_ft", "=", "resnext101", "(", "sample_size", "=", "sample_size", ",", "sample_duration", "=", "duration", ",", "num_classes", "=", "num_classes", ")", "\n", "# elif model_name == 'resnext152':", "\n", "#     model_ft = resnext152(sample_size=sample_size, sample_duration=duration, num_classes=num_classes)", "\n", "", "else", ":", "# dummy case, else is never accessed", "\n", "        ", "model_ft", "=", "None", "\n", "", "return", "model_ft", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_resnet": [[125, 137], ["resnet50", "resnet101", "resnet152", "resnet200"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet50", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet101", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet152", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet200"], ["", "def", "_load_resnet", "(", "model_name", ",", "num_classes", ",", "duration", ",", "sample_size", "=", "224", ")", ":", "\n", "    ", "if", "model_name", "==", "'resnet50'", ":", "\n", "        ", "model_ft", "=", "resnet50", "(", "sample_size", "=", "sample_size", ",", "sample_duration", "=", "duration", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model_name", "==", "'resnet101'", ":", "\n", "        ", "model_ft", "=", "resnet101", "(", "sample_size", "=", "sample_size", ",", "sample_duration", "=", "duration", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model_name", "==", "'resnet152'", ":", "\n", "        ", "model_ft", "=", "resnet152", "(", "sample_size", "=", "sample_size", ",", "sample_duration", "=", "duration", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model_name", "==", "'resnet200'", ":", "\n", "        ", "model_ft", "=", "resnet200", "(", "sample_size", "=", "sample_size", ",", "sample_duration", "=", "duration", ",", "num_classes", "=", "num_classes", ")", "\n", "", "else", ":", "# dummy case, else is never accessed", "\n", "        ", "model_ft", "=", "None", "\n", "", "return", "model_ft", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_mfnet": [[139, 142], ["models.mfnet_3d.MFNET_3D"], "function", ["None"], ["", "def", "_load_mfnet", "(", "num_classes", ")", ":", "\n", "    ", "model_ft", "=", "MFNET_3D", "(", "num_classes", ")", "\n", "return", "model_ft", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_i3d": [[144, 147], ["I3D"], "function", ["None"], ["", "def", "_load_i3d", "(", "num_classes", ")", ":", "\n", "    ", "model_ft", "=", "I3D", "(", "num_classes", ")", "\n", "return", "model_ft", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils.load_network_structure": [[149, 161], ["load_utils._load_resnet", "load_utils._load_resnext", "load_utils._load_mfnet", "load_utils._load_i3d", "Exception"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_resnet", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_resnext", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_mfnet", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._load_i3d"], ["", "def", "load_network_structure", "(", "model_name", ",", "num_classes", ",", "sample_size", ",", "sample_duration", ")", ":", "\n", "    ", "if", "model_name", "in", "[", "'resnet50'", ",", "'resnet101'", ",", "'resnet152'", ",", "'resnet200'", "]", ":", "\n", "        ", "model_ft", "=", "_load_resnet", "(", "model_name", ",", "num_classes", ",", "sample_duration", ",", "sample_size", ")", "\n", "", "elif", "model_name", "in", "[", "'resnext50'", ",", "'resnext101'", ",", "'resnext152'", "]", ":", "\n", "        ", "model_ft", "=", "_load_resnext", "(", "model_name", ",", "num_classes", ",", "sample_duration", ",", "sample_size", ")", "\n", "", "elif", "model_name", "==", "'mfnet'", ":", "\n", "        ", "model_ft", "=", "_load_mfnet", "(", "num_classes", ")", "\n", "", "elif", "model_name", "==", "'i3d'", ":", "\n", "        ", "model_ft", "=", "_load_i3d", "(", "num_classes", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Unsupported model structure: {}'", ".", "format", "(", "model_name", ")", ")", "\n", "", "return", "model_ft", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._convert_weights_to_dataparallel_i3d": [[163, 169], ["dict", "dict", "weight_dict.items"], "function", ["None"], ["", "def", "_convert_weights_to_dataparallel_i3d", "(", "weight_dict", ")", ":", "\n", "    ", "checkpoint", "=", "dict", "(", ")", "\n", "checkpoint", "[", "'state_dict'", "]", "=", "dict", "(", ")", "\n", "for", "key", ",", "value", "in", "weight_dict", ".", "items", "(", ")", ":", "\n", "        ", "checkpoint", "[", "'state_dict'", "]", "[", "'module.'", "+", "key", "]", "=", "value", "\n", "", "return", "checkpoint", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils.prepare_model": [[172, 184], ["torch.nn.DataParallel().cuda", "torch.load", "torch.nn.DataParallel().cuda.load_state_dict", "torch.nn.DataParallel().cuda.eval", "load_utils._convert_weights_to_dataparallel_i3d", "torch.nn.DataParallel"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.utils.load_utils._convert_weights_to_dataparallel_i3d"], ["", "def", "prepare_model", "(", "model_ft", ",", "weights_path", ")", ":", "\n", "# Create parallel model for multi-gpus", "\n", "    ", "model_ft", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model_ft", ")", ".", "cuda", "(", ")", "\n", "# Load checkpoint", "\n", "checkpoint", "=", "torch", ".", "load", "(", "weights_path", ",", "map_location", "=", "{", "'cuda:1'", ":", "'cuda:0'", "}", ")", "\n", "\n", "if", "'state_dict'", "not", "in", "checkpoint", ":", "# case for i3d weights", "\n", "        ", "checkpoint", "=", "_convert_weights_to_dataparallel_i3d", "(", "checkpoint", ")", "\n", "", "model_ft", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ",", "strict", "=", "False", ")", "\n", "# Set to evaluation mode", "\n", "model_ft", ".", "eval", "(", ")", "\n", "return", "model_ft", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.Unit3Dpy.__init__": [[39, 97], ["super().__init__", "i3d.get_padding_shape", "i3d.simplify_padding", "torch.nn.BatchNorm3d", "ValueError", "torch.nn.ConstantPad3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.get_padding_shape", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.simplify_padding"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "activation", "=", "'relu'", ",", "\n", "padding", "=", "'SAME'", ",", "\n", "use_bias", "=", "False", ",", "\n", "use_bn", "=", "True", ")", ":", "\n", "        ", "super", "(", "Unit3Dpy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "if", "padding", "==", "'SAME'", ":", "\n", "            ", "padding_shape", "=", "get_padding_shape", "(", "kernel_size", ",", "stride", ")", "\n", "simplify_pad", ",", "pad_size", "=", "simplify_padding", "(", "padding_shape", ")", "\n", "self", ".", "simplify_pad", "=", "simplify_pad", "\n", "", "elif", "padding", "==", "'VALID'", ":", "\n", "            ", "padding_shape", "=", "0", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'padding should be in [VALID|SAME] but got {}'", ".", "format", "(", "padding", ")", ")", "\n", "\n", "", "if", "padding", "==", "'SAME'", ":", "\n", "            ", "if", "not", "simplify_pad", ":", "\n", "                ", "self", ".", "pad", "=", "torch", ".", "nn", ".", "ConstantPad3d", "(", "padding_shape", ",", "0", ")", "\n", "self", ".", "conv3d", "=", "torch", ".", "nn", ".", "Conv3d", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "use_bias", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv3d", "=", "torch", ".", "nn", ".", "Conv3d", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "pad_size", ",", "\n", "bias", "=", "use_bias", ")", "\n", "", "", "elif", "padding", "==", "'VALID'", ":", "\n", "            ", "self", ".", "conv3d", "=", "torch", ".", "nn", ".", "Conv3d", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "padding_shape", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "use_bias", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'padding should be in [VALID|SAME] but got {}'", ".", "format", "(", "padding", ")", ")", "\n", "\n", "", "if", "self", ".", "use_bn", ":", "\n", "            ", "self", ".", "batch3d", "=", "torch", ".", "nn", ".", "BatchNorm3d", "(", "out_channels", ")", "\n", "\n", "", "if", "activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "activation", "=", "torch", ".", "nn", ".", "functional", ".", "relu", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.Unit3Dpy.forward": [[98, 112], ["i3d.Unit3Dpy.conv3d", "i3d.Unit3Dpy.pad", "i3d.Unit3Dpy.batch3d", "torch.nn.functional.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "\n", "        ", "if", "self", ".", "padding", "==", "'SAME'", "and", "self", ".", "simplify_pad", "is", "False", ":", "\n", "            ", "inp", "=", "self", ".", "pad", "(", "inp", ")", "\n", "", "out", "=", "self", ".", "conv3d", "(", "inp", ")", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "out", "=", "self", ".", "batch3d", "(", "out", ")", "\n", "", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "relu", "(", "out", ")", "\n", "\n", "", "activations", "=", "out", "\n", "weights", "=", "self", ".", "conv3d", ".", "weight", ".", "data", "\n", "\n", "return", "out", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.MaxPool3dTFPadding.__init__": [[115, 122], ["super().__init__", "torch.nn.MaxPool3d", "i3d.get_padding_shape", "torch.nn.ConstantPad3d"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.get_padding_shape"], ["    ", "def", "__init__", "(", "self", ",", "kernel_size", ",", "stride", "=", "None", ",", "padding", "=", "'SAME'", ")", ":", "\n", "        ", "super", "(", "MaxPool3dTFPadding", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "padding", "==", "'SAME'", ":", "\n", "            ", "padding_shape", "=", "get_padding_shape", "(", "kernel_size", ",", "stride", ")", "\n", "self", ".", "padding_shape", "=", "padding_shape", "\n", "self", ".", "pad", "=", "torch", ".", "nn", ".", "ConstantPad3d", "(", "padding_shape", ",", "0", ")", "\n", "", "self", ".", "pool", "=", "torch", ".", "nn", ".", "MaxPool3d", "(", "kernel_size", ",", "stride", ",", "ceil_mode", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.MaxPool3dTFPadding.forward": [[123, 127], ["i3d.MaxPool3dTFPadding.pad", "i3d.MaxPool3dTFPadding.pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "inp", "=", "self", ".", "pad", "(", "inp", ")", "\n", "out", "=", "self", ".", "pool", "(", "inp", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.Mixed.__init__": [[130, 156], ["super().__init__", "i3d.Unit3Dpy", "i3d.Unit3Dpy", "i3d.Unit3Dpy", "torch.nn.Sequential", "i3d.Unit3Dpy", "i3d.Unit3Dpy", "torch.nn.Sequential", "i3d.MaxPool3dTFPadding", "i3d.Unit3Dpy", "torch.nn.Sequential"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "Mixed", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# Branch 0", "\n", "self", ".", "branch_0", "=", "Unit3Dpy", "(", "\n", "in_channels", ",", "out_channels", "[", "0", "]", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "# Branch 1", "\n", "branch_1_conv1", "=", "Unit3Dpy", "(", "\n", "in_channels", ",", "out_channels", "[", "1", "]", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "branch_1_conv2", "=", "Unit3Dpy", "(", "\n", "out_channels", "[", "1", "]", ",", "out_channels", "[", "2", "]", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ")", "\n", "self", ".", "branch_1", "=", "torch", ".", "nn", ".", "Sequential", "(", "branch_1_conv1", ",", "branch_1_conv2", ")", "\n", "\n", "# Branch 2", "\n", "branch_2_conv1", "=", "Unit3Dpy", "(", "\n", "in_channels", ",", "out_channels", "[", "3", "]", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "branch_2_conv2", "=", "Unit3Dpy", "(", "\n", "out_channels", "[", "3", "]", ",", "out_channels", "[", "4", "]", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ")", "\n", "self", ".", "branch_2", "=", "torch", ".", "nn", ".", "Sequential", "(", "branch_2_conv1", ",", "branch_2_conv2", ")", "\n", "\n", "# Branch3", "\n", "branch_3_pool", "=", "MaxPool3dTFPadding", "(", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "'SAME'", ")", "\n", "branch_3_conv2", "=", "Unit3Dpy", "(", "\n", "in_channels", ",", "out_channels", "[", "5", "]", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "branch_3", "=", "torch", ".", "nn", ".", "Sequential", "(", "branch_3_pool", ",", "branch_3_conv2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.Mixed.forward": [[157, 206], ["i3d.Mixed.branch_0", "w_0.append", "a_0.append", "torch.cat", "torch.ones().cuda", "torch.ones().cuda", "layer", "w_1.append", "a_1.append", "layer", "w_2.append", "a_2.append", "torch.cat", "type", "layer", "layer", "w_3.append", "a_3.append", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "\n", "        ", "w_0", "=", "[", "]", "\n", "a_0", "=", "[", "]", "\n", "out_0", "=", "inp", "\n", "\n", "out_0", ",", "w", ",", "a", "=", "self", ".", "branch_0", "(", "out_0", ")", "\n", "w_0", ".", "append", "(", "w", ")", "\n", "a_0", ".", "append", "(", "a", ")", "\n", "\n", "w_1", "=", "[", "]", "\n", "a_1", "=", "[", "]", "\n", "out_1", "=", "inp", "\n", "for", "layer", "in", "self", ".", "branch_1", ":", "\n", "            ", "out_1", ",", "w", ",", "a", "=", "layer", "(", "out_1", ")", "\n", "w_1", ".", "append", "(", "w", ")", "\n", "a_1", ".", "append", "(", "a", ")", "\n", "\n", "\n", "", "w_2", "=", "[", "]", "\n", "a_2", "=", "[", "]", "\n", "out_2", "=", "inp", "\n", "for", "layer", "in", "self", ".", "branch_2", ":", "\n", "            ", "out_2", ",", "w", ",", "a", "=", "layer", "(", "out_2", ")", "\n", "w_2", ".", "append", "(", "w", ")", "\n", "a_2", ".", "append", "(", "a", ")", "\n", "\n", "\n", "", "w_3", "=", "[", "]", "\n", "a_3", "=", "[", "]", "\n", "out_3", "=", "inp", "\n", "for", "layer", "in", "self", ".", "branch_3", ":", "\n", "            ", "if", "(", "type", "(", "layer", ")", "==", "MaxPool3dTFPadding", ")", ":", "\n", "                ", "out", "=", "layer", "(", "out_3", ")", "\n", "", "else", ":", "\n", "                ", "out_3", ",", "w", ",", "a", "=", "layer", "(", "out_3", ")", "\n", "w_3", ".", "append", "(", "w", ")", "\n", "a_3", ".", "append", "(", "a", ")", "\n", "\n", "", "", "out", "=", "torch", ".", "cat", "(", "(", "out_0", ",", "out_1", ",", "out_2", ",", "out_3", ")", ",", "1", ")", "\n", "\n", "activations", "=", "[", "torch", ".", "cat", "(", "(", "a_0", "[", "0", "]", ",", "a_1", "[", "0", "]", ",", "a_2", "[", "0", "]", ",", "a_3", "[", "0", "]", ")", ",", "1", ")", ",", "out", "]", "\n", "\n", "# Create 1s tensors as placeholders for not breaking the structure", "\n", "placeholder_0", "=", "torch", ".", "ones", "(", "[", "w_0", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "w_0", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", "]", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "placeholder_3", "=", "torch", ".", "ones", "(", "[", "w_3", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "w_3", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", "]", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "weights", "=", "[", "[", "w_0", "[", "0", "]", ",", "w_1", "[", "0", "]", ",", "w_2", "[", "0", "]", ",", "w_3", "[", "0", "]", "]", ",", "[", "placeholder_0", ",", "w_1", "[", "1", "]", ",", "w_2", "[", "1", "]", ",", "placeholder_3", "]", "]", "\n", "\n", "return", "out", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.I3D.__init__": [[209, 284], ["super().__init__", "i3d.Unit3Dpy", "i3d.MaxPool3dTFPadding", "i3d.Unit3Dpy", "i3d.Unit3Dpy", "i3d.MaxPool3dTFPadding", "i3d.Mixed", "i3d.Mixed", "i3d.MaxPool3dTFPadding", "i3d.Mixed", "i3d.Mixed", "i3d.Mixed", "i3d.Mixed", "i3d.Mixed", "i3d.MaxPool3dTFPadding", "i3d.Mixed", "i3d.Mixed", "torch.nn.AvgPool3d", "torch.nn.Dropout", "i3d.Unit3Dpy", "torch.nn.Softmax", "ValueError"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "modality", "=", "'rgb'", ",", "\n", "dropout_prob", "=", "0", ",", "\n", "name", "=", "'inception'", ")", ":", "\n", "        ", "super", "(", "I3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "if", "modality", "==", "'rgb'", ":", "\n", "            ", "in_channels", "=", "3", "\n", "", "elif", "modality", "==", "'flow'", ":", "\n", "            ", "in_channels", "=", "2", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'{} not among known modalities [rgb|flow]'", ".", "format", "(", "modality", ")", ")", "\n", "", "self", ".", "modality", "=", "modality", "\n", "\n", "conv3d_1a_7x7", "=", "Unit3Dpy", "(", "\n", "out_channels", "=", "64", ",", "\n", "in_channels", "=", "in_channels", ",", "\n", "kernel_size", "=", "(", "7", ",", "7", ",", "7", ")", ",", "\n", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "'SAME'", ")", "\n", "# 1st conv-pool", "\n", "self", ".", "conv3d_1a_7x7", "=", "conv3d_1a_7x7", "\n", "self", ".", "maxPool3d_2a_3x3", "=", "MaxPool3dTFPadding", "(", "\n", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "'SAME'", ")", "\n", "# conv conv", "\n", "conv3d_2b_1x1", "=", "Unit3Dpy", "(", "\n", "out_channels", "=", "64", ",", "\n", "in_channels", "=", "64", ",", "\n", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "'SAME'", ")", "\n", "self", ".", "conv3d_2b_1x1", "=", "conv3d_2b_1x1", "\n", "conv3d_2c_3x3", "=", "Unit3Dpy", "(", "\n", "out_channels", "=", "192", ",", "\n", "in_channels", "=", "64", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "padding", "=", "'SAME'", ")", "\n", "self", ".", "conv3d_2c_3x3", "=", "conv3d_2c_3x3", "\n", "self", ".", "maxPool3d_3a_3x3", "=", "MaxPool3dTFPadding", "(", "\n", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "# Mixed_3b", "\n", "self", ".", "mixed_3b", "=", "Mixed", "(", "192", ",", "[", "64", ",", "96", ",", "128", ",", "16", ",", "32", ",", "32", "]", ")", "\n", "self", ".", "mixed_3c", "=", "Mixed", "(", "256", ",", "[", "128", ",", "128", ",", "192", ",", "32", ",", "96", ",", "64", "]", ")", "\n", "\n", "self", ".", "maxPool3d_4a_3x3", "=", "MaxPool3dTFPadding", "(", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "# Mixed 4", "\n", "self", ".", "mixed_4b", "=", "Mixed", "(", "480", ",", "[", "192", ",", "96", ",", "208", ",", "16", ",", "48", ",", "64", "]", ")", "\n", "self", ".", "mixed_4c", "=", "Mixed", "(", "512", ",", "[", "160", ",", "112", ",", "224", ",", "24", ",", "64", ",", "64", "]", ")", "\n", "self", ".", "mixed_4d", "=", "Mixed", "(", "512", ",", "[", "128", ",", "128", ",", "256", ",", "24", ",", "64", ",", "64", "]", ")", "\n", "self", ".", "mixed_4e", "=", "Mixed", "(", "512", ",", "[", "112", ",", "144", ",", "288", ",", "32", ",", "64", ",", "64", "]", ")", "\n", "self", ".", "mixed_4f", "=", "Mixed", "(", "528", ",", "[", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", "]", ")", "\n", "\n", "self", ".", "maxPool3d_5a_2x2", "=", "MaxPool3dTFPadding", "(", "\n", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "# Mixed 5", "\n", "self", ".", "mixed_5b", "=", "Mixed", "(", "832", ",", "[", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", "]", ")", "\n", "self", ".", "mixed_5c", "=", "Mixed", "(", "832", ",", "[", "384", ",", "192", ",", "384", ",", "48", ",", "128", ",", "128", "]", ")", "\n", "\n", "self", ".", "avg_pool", "=", "torch", ".", "nn", ".", "AvgPool3d", "(", "(", "2", ",", "4", ",", "4", ")", ",", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout_prob", ")", "\n", "self", ".", "conv3d_0c_1x1", "=", "Unit3Dpy", "(", "\n", "in_channels", "=", "1024", ",", "\n", "out_channels", "=", "self", ".", "num_classes", ",", "\n", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "activation", "=", "None", ",", "\n", "use_bias", "=", "True", ",", "\n", "use_bn", "=", "False", ")", "\n", "self", ".", "softmax", "=", "torch", ".", "nn", ".", "Softmax", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.I3D.forward": [[285, 379], ["i3d.I3D.conv3d_1a_7x7", "activations.append", "weights.append", "i3d.I3D.maxPool3d_2a_3x3", "i3d.I3D.conv3d_2b_1x1", "activations.append", "weights.append", "i3d.I3D.conv3d_2c_3x3", "activations.append", "weights.append", "i3d.I3D.maxPool3d_3a_3x3", "i3d.I3D.mixed_3b", "activations.append", "weights.append", "activations.append", "weights.append", "i3d.I3D.mixed_3c", "activations.append", "weights.append", "activations.append", "weights.append", "i3d.I3D.maxPool3d_4a_3x3", "i3d.I3D.mixed_4b", "activations.append", "weights.append", "activations.append", "weights.append", "i3d.I3D.mixed_4c", "activations.append", "weights.append", "activations.append", "weights.append", "i3d.I3D.mixed_4d", "activations.append", "weights.append", "activations.append", "weights.append", "i3d.I3D.mixed_4e", "activations.append", "weights.append", "activations.append", "weights.append", "i3d.I3D.mixed_4f", "activations.append", "weights.append", "activations.append", "weights.append", "i3d.I3D.maxPool3d_5a_2x2", "i3d.I3D.mixed_5b", "activations.append", "weights.append", "activations.append", "weights.append", "i3d.I3D.mixed_5c", "activations.append", "weights.append", "activations.append", "weights.append", "i3d.I3D.avg_pool", "i3d.I3D.dropout", "i3d.I3D.conv3d_0c_1x1", "activations.append", "weights.append", "i3d.I3D.squeeze", "i3d.I3D.squeeze", "i3d.I3D.mean", "i3d.I3D.softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "# Preprocessing", "\n", "        ", "activations", "=", "[", "]", "\n", "weights", "=", "[", "]", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "conv3d_1a_7x7", "(", "inp", ")", "\n", "activations", ".", "append", "(", "a", ")", "\n", "weights", ".", "append", "(", "[", "w", "]", ")", "\n", "\n", "out", "=", "self", ".", "maxPool3d_2a_3x3", "(", "out", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "conv3d_2b_1x1", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", ")", "\n", "weights", ".", "append", "(", "[", "w", "]", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "conv3d_2c_3x3", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", ")", "\n", "weights", ".", "append", "(", "[", "w", "]", ")", "\n", "\n", "out", "=", "self", ".", "maxPool3d_3a_3x3", "(", "out", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "mixed_3b", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", "[", "0", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "0", "]", ")", "\n", "activations", ".", "append", "(", "a", "[", "1", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "1", "]", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "mixed_3c", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", "[", "0", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "0", "]", ")", "\n", "activations", ".", "append", "(", "a", "[", "1", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "1", "]", ")", "\n", "\n", "out", "=", "self", ".", "maxPool3d_4a_3x3", "(", "out", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "mixed_4b", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", "[", "0", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "0", "]", ")", "\n", "activations", ".", "append", "(", "a", "[", "1", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "1", "]", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "mixed_4c", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", "[", "0", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "0", "]", ")", "\n", "activations", ".", "append", "(", "a", "[", "1", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "1", "]", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "mixed_4d", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", "[", "0", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "0", "]", ")", "\n", "activations", ".", "append", "(", "a", "[", "1", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "1", "]", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "mixed_4e", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", "[", "0", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "0", "]", ")", "\n", "activations", ".", "append", "(", "a", "[", "1", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "1", "]", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "mixed_4f", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", "[", "0", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "0", "]", ")", "\n", "activations", ".", "append", "(", "a", "[", "1", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "1", "]", ")", "\n", "\n", "out", "=", "self", ".", "maxPool3d_5a_2x2", "(", "out", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "mixed_5b", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", "[", "0", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "0", "]", ")", "\n", "activations", ".", "append", "(", "a", "[", "1", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "1", "]", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "mixed_5c", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", "[", "0", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "0", "]", ")", "\n", "activations", ".", "append", "(", "a", "[", "1", "]", ")", "\n", "weights", ".", "append", "(", "w", "[", "1", "]", ")", "\n", "\n", "out", "=", "self", ".", "avg_pool", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "dropout", "(", "out", ")", "\n", "\n", "out", ",", "w", ",", "a", "=", "self", ".", "conv3d_0c_1x1", "(", "out", ")", "\n", "activations", ".", "append", "(", "a", ")", "\n", "weights", ".", "append", "(", "[", "w", "]", ")", "\n", "\n", "out", "=", "out", ".", "squeeze", "(", "3", ")", "\n", "out", "=", "out", ".", "squeeze", "(", "3", ")", "\n", "out", "=", "out", ".", "mean", "(", "2", ")", "\n", "out_logits", "=", "out", "\n", "out", "=", "self", ".", "softmax", "(", "out_logits", ")", "\n", "\n", "return", "out", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.I3D.load_tf_weights": [[380, 425], ["i3d.load_conv3d", "i3d.load_conv3d", "i3d.load_conv3d", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_conv3d", "i3d.I3D.load_state_dict", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_mixed", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_mixed", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_mixed", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_mixed", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_mixed", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_mixed", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_mixed", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_mixed", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_mixed", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d"], ["", "def", "load_tf_weights", "(", "self", ",", "sess", ")", ":", "\n", "        ", "state_dict", "=", "{", "}", "\n", "if", "self", ".", "modality", "==", "'rgb'", ":", "\n", "            ", "prefix", "=", "'RGB/inception_i3d'", "\n", "", "elif", "self", ".", "modality", "==", "'flow'", ":", "\n", "            ", "prefix", "=", "'Flow/inception_i3d'", "\n", "", "load_conv3d", "(", "state_dict", ",", "'conv3d_1a_7x7'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Conv3d_1a_7x7'", ")", ")", "\n", "load_conv3d", "(", "state_dict", ",", "'conv3d_2b_1x1'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Conv3d_2b_1x1'", ")", ")", "\n", "load_conv3d", "(", "state_dict", ",", "'conv3d_2c_3x3'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Conv3d_2c_3x3'", ")", ")", "\n", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_3b'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_3b'", ")", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_3c'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_3c'", ")", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_4b'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_4b'", ")", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_4c'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_4c'", ")", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_4d'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_4d'", ")", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_4e'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_4e'", ")", ")", "\n", "# Here goest to 0.1 max error with tf", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_4f'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_4f'", ")", ")", "\n", "\n", "load_mixed", "(", "\n", "state_dict", ",", "\n", "'mixed_5b'", ",", "\n", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_5b'", ")", ",", "\n", "fix_typo", "=", "True", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_5c'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_5c'", ")", ")", "\n", "load_conv3d", "(", "\n", "state_dict", ",", "\n", "'conv3d_0c_1x1'", ",", "\n", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Logits'", ",", "'Conv3d_0c_1x1'", ")", ",", "\n", "bias", "=", "True", ",", "\n", "bn", "=", "False", ")", "\n", "self", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.get_padding_shape": [[9, 27], ["zip", "padding_shape.pop", "padding_shape.pop", "padding_shape.append", "padding_shape.append", "tuple", "max", "i3d.get_padding_shape._pad_top_bottom"], "function", ["None"], ["def", "get_padding_shape", "(", "filter_shape", ",", "stride", ")", ":", "\n", "    ", "def", "_pad_top_bottom", "(", "filter_dim", ",", "stride_val", ")", ":", "\n", "        ", "pad_along", "=", "max", "(", "filter_dim", "-", "stride_val", ",", "0", ")", "\n", "pad_top", "=", "pad_along", "//", "2", "\n", "pad_bottom", "=", "pad_along", "-", "pad_top", "\n", "return", "pad_top", ",", "pad_bottom", "\n", "\n", "", "padding_shape", "=", "[", "]", "\n", "for", "filter_dim", ",", "stride_val", "in", "zip", "(", "filter_shape", ",", "stride", ")", ":", "\n", "        ", "pad_top", ",", "pad_bottom", "=", "_pad_top_bottom", "(", "filter_dim", ",", "stride_val", ")", "\n", "padding_shape", ".", "append", "(", "pad_top", ")", "\n", "padding_shape", ".", "append", "(", "pad_bottom", ")", "\n", "", "depth_top", "=", "padding_shape", ".", "pop", "(", "0", ")", "\n", "depth_bottom", "=", "padding_shape", ".", "pop", "(", "0", ")", "\n", "padding_shape", ".", "append", "(", "depth_top", ")", "\n", "padding_shape", ".", "append", "(", "depth_bottom", ")", "\n", "\n", "return", "tuple", "(", "padding_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.simplify_padding": [[29, 36], ["None"], "function", ["None"], ["", "def", "simplify_padding", "(", "padding_shapes", ")", ":", "\n", "    ", "all_same", "=", "True", "\n", "padding_init", "=", "padding_shapes", "[", "0", "]", "\n", "for", "pad", "in", "padding_shapes", "[", "1", ":", "]", ":", "\n", "        ", "if", "pad", "!=", "padding_init", ":", "\n", "            ", "all_same", "=", "False", "\n", "", "", "return", "all_same", ",", "padding_init", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.get_conv_params": [[427, 454], ["sess.graph.get_tensor_by_name", "sess.run", "sess.graph.get_operation_by_name", "sess.graph.get_operation_by_name.get_attr", "i3d._get_padding", "sess.graph.get_operation_by_name.get_attr", "os.path.join", "sess.graph.get_tensor_by_name", "sess.run", "os.path.join", "conv_params.append", "os.path.join"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d._get_padding"], ["", "", "def", "get_conv_params", "(", "sess", ",", "name", ",", "bias", "=", "False", ")", ":", "\n", "# Get conv weights", "\n", "    ", "conv_weights_tensor", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "\n", "os", ".", "path", ".", "join", "(", "name", ",", "'w:0'", ")", ")", "\n", "if", "bias", ":", "\n", "        ", "conv_bias_tensor", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "\n", "os", ".", "path", ".", "join", "(", "name", ",", "'b:0'", ")", ")", "\n", "conv_bias", "=", "sess", ".", "run", "(", "conv_bias_tensor", ")", "\n", "", "conv_weights", "=", "sess", ".", "run", "(", "conv_weights_tensor", ")", "\n", "conv_shape", "=", "conv_weights", ".", "shape", "\n", "\n", "kernel_shape", "=", "conv_shape", "[", "0", ":", "3", "]", "\n", "in_channels", "=", "conv_shape", "[", "3", "]", "\n", "out_channels", "=", "conv_shape", "[", "4", "]", "\n", "\n", "conv_op", "=", "sess", ".", "graph", ".", "get_operation_by_name", "(", "\n", "os", ".", "path", ".", "join", "(", "name", ",", "'convolution'", ")", ")", "\n", "padding_name", "=", "conv_op", ".", "get_attr", "(", "'padding'", ")", "\n", "padding", "=", "_get_padding", "(", "padding_name", ",", "kernel_shape", ")", "\n", "all_strides", "=", "conv_op", ".", "get_attr", "(", "'strides'", ")", "\n", "strides", "=", "all_strides", "[", "1", ":", "4", "]", "\n", "conv_params", "=", "[", "\n", "conv_weights", ",", "kernel_shape", ",", "in_channels", ",", "out_channels", ",", "strides", ",", "padding", "\n", "]", "\n", "if", "bias", ":", "\n", "        ", "conv_params", ".", "append", "(", "conv_bias", ")", "\n", "", "return", "conv_params", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.get_bn_params": [[456, 466], ["sess.graph.get_tensor_by_name", "sess.graph.get_tensor_by_name", "sess.graph.get_tensor_by_name", "sess.run", "sess.run", "sess.run", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "get_bn_params", "(", "sess", ",", "name", ")", ":", "\n", "    ", "moving_mean_tensor", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "\n", "os", ".", "path", ".", "join", "(", "name", ",", "'moving_mean:0'", ")", ")", "\n", "moving_var_tensor", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "\n", "os", ".", "path", ".", "join", "(", "name", ",", "'moving_variance:0'", ")", ")", "\n", "beta_tensor", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "os", ".", "path", ".", "join", "(", "name", ",", "'beta:0'", ")", ")", "\n", "moving_mean", "=", "sess", ".", "run", "(", "moving_mean_tensor", ")", "\n", "moving_var", "=", "sess", ".", "run", "(", "moving_var_tensor", ")", "\n", "beta", "=", "sess", ".", "run", "(", "beta_tensor", ")", "\n", "return", "moving_mean", ",", "moving_var", ",", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d._get_padding": [[468, 481], ["padding_name.decode.decode", "ValueError", "math.floor", "math.floor", "math.floor", "int", "int", "int"], "function", ["None"], ["", "def", "_get_padding", "(", "padding_name", ",", "conv_shape", ")", ":", "\n", "    ", "padding_name", "=", "padding_name", ".", "decode", "(", "\"utf-8\"", ")", "\n", "if", "padding_name", "==", "\"VALID\"", ":", "\n", "        ", "return", "[", "0", ",", "0", "]", "\n", "", "elif", "padding_name", "==", "\"SAME\"", ":", "\n", "# return [math.ceil(int(conv_shape[0])/2), math.ceil(int(conv_shape[1])/2)]", "\n", "        ", "return", "[", "\n", "math", ".", "floor", "(", "int", "(", "conv_shape", "[", "0", "]", ")", "/", "2", ")", ",", "\n", "math", ".", "floor", "(", "int", "(", "conv_shape", "[", "1", "]", ")", "/", "2", ")", ",", "\n", "math", ".", "floor", "(", "int", "(", "conv_shape", "[", "2", "]", ")", "/", "2", ")", "\n", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Invalid padding name '", "+", "padding_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d": [[483, 512], ["os.path.join", "i3d.get_conv_params", "numpy.transpose", "torch.from_numpy", "torch.from_numpy", "os.path.join", "i3d.get_bn_params", "torch.ones", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "beta.squeeze", "moving_mean.squeeze", "moving_var.squeeze"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.get_conv_params", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.get_bn_params"], ["", "", "def", "load_conv3d", "(", "state_dict", ",", "name_pt", ",", "sess", ",", "name_tf", ",", "bias", "=", "False", ",", "bn", "=", "True", ")", ":", "\n", "# Transfer convolution params", "\n", "    ", "conv_name_tf", "=", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'conv_3d'", ")", "\n", "conv_params", "=", "get_conv_params", "(", "sess", ",", "conv_name_tf", ",", "bias", "=", "bias", ")", "\n", "if", "bias", ":", "\n", "        ", "conv_weights", ",", "kernel_shape", ",", "in_channels", ",", "out_channels", ",", "strides", ",", "padding", ",", "conv_bias", "=", "conv_params", "\n", "", "else", ":", "\n", "        ", "conv_weights", ",", "kernel_shape", ",", "in_channels", ",", "out_channels", ",", "strides", ",", "padding", "=", "conv_params", "\n", "\n", "", "conv_weights_rs", "=", "np", ".", "transpose", "(", "\n", "conv_weights", ",", "(", "4", ",", "3", ",", "0", ",", "1", ",", "\n", "2", ")", ")", "# to pt format (out_c, in_c, depth, height, width)", "\n", "state_dict", "[", "name_pt", "+", "'.conv3d.weight'", "]", "=", "torch", ".", "from_numpy", "(", "conv_weights_rs", ")", "\n", "if", "bias", ":", "\n", "        ", "state_dict", "[", "name_pt", "+", "'.conv3d.bias'", "]", "=", "torch", ".", "from_numpy", "(", "conv_bias", ")", "\n", "\n", "# Transfer batch norm params", "\n", "", "if", "bn", ":", "\n", "        ", "conv_tf_name", "=", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'batch_norm'", ")", "\n", "moving_mean", ",", "moving_var", ",", "beta", "=", "get_bn_params", "(", "sess", ",", "conv_tf_name", ")", "\n", "\n", "out_planes", "=", "conv_weights_rs", ".", "shape", "[", "0", "]", "\n", "state_dict", "[", "name_pt", "+", "'.batch3d.weight'", "]", "=", "torch", ".", "ones", "(", "out_planes", ")", "\n", "state_dict", "[", "name_pt", "+", "\n", "'.batch3d.bias'", "]", "=", "torch", ".", "from_numpy", "(", "beta", ".", "squeeze", "(", ")", ")", "\n", "state_dict", "[", "name_pt", "\n", "+", "'.batch3d.running_mean'", "]", "=", "torch", ".", "from_numpy", "(", "moving_mean", ".", "squeeze", "(", ")", ")", "\n", "state_dict", "[", "name_pt", "\n", "+", "'.batch3d.running_var'", "]", "=", "torch", ".", "from_numpy", "(", "moving_var", ".", "squeeze", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_mixed": [[514, 538], ["i3d.load_conv3d", "i3d.load_conv3d", "i3d.load_conv3d", "i3d.load_conv3d", "i3d.load_conv3d", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "i3d.load_conv3d", "i3d.load_conv3d", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.i3d.load_conv3d"], ["", "", "def", "load_mixed", "(", "state_dict", ",", "name_pt", ",", "sess", ",", "name_tf", ",", "fix_typo", "=", "False", ")", ":", "\n", "# Branch 0", "\n", "    ", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_0'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_0/Conv3d_0a_1x1'", ")", ")", "\n", "\n", "# Branch .1", "\n", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_1.0'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_1/Conv3d_0a_1x1'", ")", ")", "\n", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_1.1'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_1/Conv3d_0b_3x3'", ")", ")", "\n", "\n", "# Branch 2", "\n", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_2.0'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_2/Conv3d_0a_1x1'", ")", ")", "\n", "if", "fix_typo", ":", "\n", "        ", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_2.1'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_2/Conv3d_0a_3x3'", ")", ")", "\n", "", "else", ":", "\n", "        ", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_2.1'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_2/Conv3d_0b_3x3'", ")", ")", "\n", "\n", "# Branch 3", "\n", "", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_3.1'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_3/Conv3d_0b_1x1'", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.BasicBlock.__init__": [[41, 50], ["torch.Module.__init__", "resnet.conv3x3x3", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet.conv3x3x3", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.conv3x3x3", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.conv3x3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.BasicBlock.forward": [[51, 80], ["isinstance", "resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "activations.append", "weights.append", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "activations.append", "weights.append", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "activations", "=", "[", "]", "\n", "weights", "=", "[", "]", "\n", "\n", "if", "isinstance", "(", "x", ",", "tuple", ")", ":", "\n", "            ", "x", ",", "weights", ",", "activations", "=", "x", "\n", "\n", "", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "activations", ".", "append", "(", "out", ")", "\n", "weights", ".", "append", "(", "[", "self", ".", "conv2", ".", "weight", ".", "data", "]", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "activations", ".", "append", "(", "out", ")", "\n", "weights", ".", "append", "(", "[", "self", ".", "conv2", ".", "weight", ".", "data", "]", ")", "\n", "\n", "return", "out", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.Bottleneck.__init__": [[85, 97], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv3d", "(", "\n", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv3d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm3d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.Bottleneck.forward": [[98, 136], ["isinstance", "resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "activations.append", "weights.append", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "activations.append", "weights.append", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "activations.append", "weights.append", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "activations", "=", "[", "]", "\n", "weights", "=", "[", "]", "\n", "\n", "if", "isinstance", "(", "x", ",", "tuple", ")", ":", "\n", "            ", "x", ",", "weights", ",", "activations", "=", "x", "\n", "\n", "\n", "", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "activations", ".", "append", "(", "out", ")", "\n", "weights", ".", "append", "(", "[", "self", ".", "conv1", ".", "weight", ".", "data", "]", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "activations", ".", "append", "(", "out", ")", "\n", "weights", ".", "append", "(", "[", "self", ".", "conv2", ".", "weight", ".", "data", "]", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "activations", ".", "append", "(", "out", ")", "\n", "weights", ".", "append", "(", "[", "self", ".", "conv3", ".", "weight", ".", "data", "]", ")", "\n", "\n", "\n", "return", "out", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.ResNet.__init__": [[140, 178], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "int", "int", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Linear", "torch.Linear", "torch.Linear", "resnet.ResNet.modules", "math.ceil", "math.ceil", "isinstance", "torch.init.kaiming_normal", "torch.init.kaiming_normal", "torch.init.kaiming_normal", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt._make_layer", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt._make_layer", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt._make_layer", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "\n", "block", ",", "\n", "layers", ",", "\n", "sample_size", ",", "\n", "sample_duration", ",", "\n", "shortcut_type", "=", "'B'", ",", "\n", "num_classes", "=", "400", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "\n", "3", ",", "\n", "64", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "shortcut_type", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "shortcut_type", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "shortcut_type", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "shortcut_type", ",", "stride", "=", "2", ")", "\n", "last_duration", "=", "int", "(", "math", ".", "ceil", "(", "sample_duration", "/", "16", ")", ")", "\n", "last_size", "=", "int", "(", "math", ".", "ceil", "(", "sample_size", "/", "32", ")", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool3d", "(", "\n", "(", "last_duration", ",", "last_size", ",", "last_size", ")", ",", "stride", "=", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "m", ".", "weight", "=", "nn", ".", "init", ".", "kaiming_normal", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.ResNet._make_layer": [[179, 203], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "functools.partial", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "shortcut_type", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "if", "shortcut_type", "==", "'A'", ":", "\n", "                ", "downsample", "=", "partial", "(", "\n", "downsample_basic_block", ",", "\n", "planes", "=", "planes", "*", "block", ".", "expansion", ",", "\n", "stride", "=", "stride", ")", "\n", "", "else", ":", "\n", "                ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm3d", "(", "planes", "*", "block", ".", "expansion", ")", ")", "\n", "\n", "", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.ResNet.forward": [[204, 245], ["resnet.ResNet.conv1", "activations.append", "weights.append", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "activations.append", "resnet.ResNet.view", "resnet.ResNet.fc", "weights.append", "resnet.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "activations", "=", "[", "]", "\n", "weights", "=", "[", "]", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "activations", ".", "append", "(", "x", ")", "\n", "weights", ".", "append", "(", "[", "self", ".", "conv1", ".", "weight", ".", "data", "]", ")", "\n", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", ",", "w", ",", "a", "=", "self", ".", "layer1", "(", "x", ")", "\n", "\n", "weights", "=", "weights", "+", "w", "\n", "activations", "=", "activations", "+", "a", "\n", "\n", "x", ",", "w", ",", "a", "=", "self", ".", "layer2", "(", "x", ")", "\n", "\n", "weights", "=", "weights", "+", "w", "\n", "activations", "=", "activations", "+", "a", "\n", "\n", "x", ",", "w", ",", "a", "=", "self", ".", "layer3", "(", "x", ")", "\n", "\n", "weights", "=", "weights", "+", "w", "\n", "activations", "=", "activations", "+", "a", "\n", "\n", "x", ",", "w", ",", "a", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "weights", "=", "weights", "+", "w", "\n", "activations", "=", "activations", "+", "a", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "activations", ".", "append", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "weights", ".", "append", "(", "[", "self", ".", "fc", ".", "weight", ".", "data", "]", ")", "\n", "\n", "return", "x", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.conv3x3x3": [[14, 23], ["torch.Conv3d"], "function", ["None"], ["def", "conv3x3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "# 3x3x3 convolution with padding", "\n", "    ", "return", "nn", ".", "Conv3d", "(", "\n", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.downsample_basic_block": [[25, 36], ["torch.avg_pool3d", "torch.Tensor().zero_", "torch.Tensor().zero_", "torch.Tensor().zero_", "isinstance", "torch.autograd.Variable", "zero_pads.cuda.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "torch.autograd.Variable.size"], "function", ["None"], ["", "def", "downsample_basic_block", "(", "x", ",", "planes", ",", "stride", ")", ":", "\n", "    ", "out", "=", "F", ".", "avg_pool3d", "(", "x", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ")", "\n", "zero_pads", "=", "torch", ".", "Tensor", "(", "\n", "out", ".", "size", "(", "0", ")", ",", "planes", "-", "out", ".", "size", "(", "1", ")", ",", "out", ".", "size", "(", "2", ")", ",", "out", ".", "size", "(", "3", ")", ",", "\n", "out", ".", "size", "(", "4", ")", ")", ".", "zero_", "(", ")", "\n", "if", "isinstance", "(", "out", ".", "data", ",", "torch", ".", "cuda", ".", "FloatTensor", ")", ":", "\n", "        ", "zero_pads", "=", "zero_pads", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "Variable", "(", "torch", ".", "cat", "(", "[", "out", ".", "data", ",", "zero_pads", "]", ",", "dim", "=", "1", ")", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.get_fine_tuning_parameters": [[247, 266], ["range", "ft_module_names.append", "model.named_parameters", "model.parameters", "ft_module_names.append", "parameters.append", "parameters.append"], "function", ["None"], ["", "", "def", "get_fine_tuning_parameters", "(", "model", ",", "ft_begin_index", ")", ":", "\n", "    ", "if", "ft_begin_index", "==", "0", ":", "\n", "        ", "return", "model", ".", "parameters", "(", ")", "\n", "\n", "", "ft_module_names", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "ft_begin_index", ",", "5", ")", ":", "\n", "        ", "ft_module_names", ".", "append", "(", "'layer{}'", ".", "format", "(", "i", ")", ")", "\n", "", "ft_module_names", ".", "append", "(", "'fc'", ")", "\n", "\n", "parameters", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "for", "ft_module", "in", "ft_module_names", ":", "\n", "            ", "if", "ft_module", "in", "k", ":", "\n", "                ", "parameters", ".", "append", "(", "{", "'params'", ":", "v", "}", ")", "\n", "break", "\n", "", "", "else", ":", "\n", "            ", "parameters", ".", "append", "(", "{", "'params'", ":", "v", ",", "'lr'", ":", "0.0", "}", ")", "\n", "\n", "", "", "return", "parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet10": [[268, 273], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet10", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet18": [[275, 280], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet18", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet34": [[282, 287], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet34", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet50": [[289, 294], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet50", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet101": [[296, 301], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet101", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet152": [[303, 308], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet152", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnet.resnet200": [[310, 315], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnet200", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "24", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet._DenseLayer.__init__": [[73, 95], ["torch.Sequential.__init__", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_input_features", ",", "growth_rate", ",", "bn_size", ",", "drop_rate", ")", ":", "\n", "        ", "super", "(", "_DenseLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_module", "(", "'norm.1'", ",", "nn", ".", "BatchNorm3d", "(", "num_input_features", ")", ")", "\n", "self", ".", "add_module", "(", "'relu.1'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "add_module", "(", "'conv.1'", ",", "\n", "nn", ".", "Conv3d", "(", "\n", "num_input_features", ",", "\n", "bn_size", "*", "growth_rate", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias", "=", "False", ")", ")", "\n", "self", ".", "add_module", "(", "'norm.2'", ",", "nn", ".", "BatchNorm3d", "(", "bn_size", "*", "growth_rate", ")", ")", "\n", "self", ".", "add_module", "(", "'relu.2'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "add_module", "(", "'conv.2'", ",", "\n", "nn", ".", "Conv3d", "(", "\n", "bn_size", "*", "growth_rate", ",", "\n", "growth_rate", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ")", "\n", "self", ".", "drop_rate", "=", "drop_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet._DenseLayer.forward": [[96, 107], ["super().forward", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.dropout", "torch.dropout", "torch.dropout"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "weights", "=", "[", "]", "\n", "activations", "=", "[", "]", "\n", "\n", "new_features", "=", "super", "(", "_DenseLayer", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "weights", "=", "[", "]", "\n", "\n", "if", "self", ".", "drop_rate", ">", "0", ":", "\n", "            ", "new_features", "=", "F", ".", "dropout", "(", "\n", "new_features", ",", "p", "=", "self", ".", "drop_rate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "return", "torch", ".", "cat", "(", "[", "x", ",", "new_features", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet._DenseBlock.__init__": [[111, 118], ["torch.Sequential.__init__", "range", "densenet._DenseLayer", "densenet._DenseBlock.add_module"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "num_input_features", ",", "bn_size", ",", "growth_rate", ",", "\n", "drop_rate", ")", ":", "\n", "        ", "super", "(", "_DenseBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "            ", "layer", "=", "_DenseLayer", "(", "num_input_features", "+", "i", "*", "growth_rate", ",", "\n", "growth_rate", ",", "bn_size", ",", "drop_rate", ")", "\n", "self", ".", "add_module", "(", "'denselayer%d'", "%", "(", "i", "+", "1", ")", ",", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet._Transition.__init__": [[122, 134], ["torch.Sequential.__init__", "densenet._Transition.add_module", "densenet._Transition.add_module", "densenet._Transition.add_module", "densenet._Transition.add_module", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_input_features", ",", "num_output_features", ")", ":", "\n", "        ", "super", "(", "_Transition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_module", "(", "'norm'", ",", "nn", ".", "BatchNorm3d", "(", "num_input_features", ")", ")", "\n", "self", ".", "add_module", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "add_module", "(", "'conv'", ",", "\n", "nn", ".", "Conv3d", "(", "\n", "num_input_features", ",", "\n", "num_output_features", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias", "=", "False", ")", ")", "\n", "self", ".", "add_module", "(", "'pool'", ",", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet.DenseNet.__init__": [[148, 209], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "enumerate", "densenet.DenseNet.features.add_module", "densenet.DenseNet.modules", "torch.Linear", "torch.Linear", "torch.Linear", "collections.OrderedDict", "densenet._DenseBlock", "densenet.DenseNet.features.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "isinstance", "densenet._Transition", "densenet.DenseNet.features.add_module", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "len", "isinstance", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__"], ["def", "__init__", "(", "self", ",", "\n", "sample_size", ",", "\n", "sample_duration", ",", "\n", "growth_rate", "=", "32", ",", "\n", "block_config", "=", "(", "6", ",", "12", ",", "24", ",", "16", ")", ",", "\n", "num_init_features", "=", "64", ",", "\n", "bn_size", "=", "4", ",", "\n", "drop_rate", "=", "0", ",", "\n", "num_classes", "=", "1000", ")", ":", "\n", "\n", "        ", "super", "(", "DenseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "sample_size", "=", "sample_size", "\n", "self", ".", "sample_duration", "=", "sample_duration", "\n", "\n", "# First convolution", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "OrderedDict", "(", "[", "\n", "(", "'conv0'", ",", "\n", "nn", ".", "Conv3d", "(", "\n", "3", ",", "\n", "num_init_features", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "bias", "=", "False", ")", ")", ",", "\n", "(", "'norm0'", ",", "nn", ".", "BatchNorm3d", "(", "num_init_features", ")", ")", ",", "\n", "(", "'relu0'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "(", "'pool0'", ",", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "# Each denseblock", "\n", "num_features", "=", "num_init_features", "\n", "for", "i", ",", "num_layers", "in", "enumerate", "(", "block_config", ")", ":", "\n", "            ", "block", "=", "_DenseBlock", "(", "\n", "num_layers", "=", "num_layers", ",", "\n", "num_input_features", "=", "num_features", ",", "\n", "bn_size", "=", "bn_size", ",", "\n", "growth_rate", "=", "growth_rate", ",", "\n", "drop_rate", "=", "drop_rate", ")", "\n", "self", ".", "features", ".", "add_module", "(", "'denseblock%d'", "%", "(", "i", "+", "1", ")", ",", "block", ")", "\n", "num_features", "=", "num_features", "+", "num_layers", "*", "growth_rate", "\n", "if", "i", "!=", "len", "(", "block_config", ")", "-", "1", ":", "\n", "                ", "trans", "=", "_Transition", "(", "\n", "num_input_features", "=", "num_features", ",", "\n", "num_output_features", "=", "num_features", "//", "2", ")", "\n", "self", ".", "features", ".", "add_module", "(", "'transition%d'", "%", "(", "i", "+", "1", ")", ",", "trans", ")", "\n", "num_features", "=", "num_features", "//", "2", "\n", "\n", "# Final batch norm", "\n", "", "", "self", ".", "features", ".", "add_module", "(", "'norm5'", ",", "nn", ".", "BatchNorm2d", "(", "num_features", ")", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "m", ".", "weight", "=", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "# Linear layer", "\n", "", "", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "num_features", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet.DenseNet.forward": [[210, 220], ["densenet.DenseNet.features", "torch.relu", "torch.relu", "torch.relu", "int", "int", "torch.avg_pool3d().view", "torch.avg_pool3d().view", "torch.avg_pool3d().view", "densenet.DenseNet.classifier", "math.ceil", "math.floor", "densenet.DenseNet.size", "torch.avg_pool3d", "torch.avg_pool3d", "torch.avg_pool3d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "features", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "features", ",", "inplace", "=", "True", ")", "\n", "last_duration", "=", "int", "(", "math", ".", "ceil", "(", "self", ".", "sample_duration", "/", "16", ")", ")", "\n", "last_size", "=", "int", "(", "math", ".", "floor", "(", "self", ".", "sample_size", "/", "32", ")", ")", "\n", "out", "=", "F", ".", "avg_pool3d", "(", "\n", "out", ",", "kernel_size", "=", "(", "last_duration", ",", "last_size", ",", "last_size", ")", ")", ".", "view", "(", "\n", "features", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet.densenet121": [[12, 19], ["densenet.DenseNet"], "function", ["None"], ["def", "densenet121", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", ",", "weights", ",", "activations", "=", "DenseNet", "(", "\n", "num_init_features", "=", "64", ",", "\n", "growth_rate", "=", "32", ",", "\n", "block_config", "=", "(", "6", ",", "12", ",", "24", ",", "16", ")", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet.densenet169": [[21, 28], ["densenet.DenseNet"], "function", ["None"], ["", "def", "densenet169", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", ",", "weights", ",", "activations", "=", "DenseNet", "(", "\n", "num_init_features", "=", "64", ",", "\n", "growth_rate", "=", "32", ",", "\n", "block_config", "=", "(", "6", ",", "12", ",", "32", ",", "32", ")", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet.densenet201": [[30, 37], ["densenet.DenseNet"], "function", ["None"], ["", "def", "densenet201", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", ",", "weights", ",", "activations", "=", "DenseNet", "(", "\n", "num_init_features", "=", "64", ",", "\n", "growth_rate", "=", "32", ",", "\n", "block_config", "=", "(", "6", ",", "12", ",", "48", ",", "32", ")", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet.densenet264": [[39, 46], ["densenet.DenseNet"], "function", ["None"], ["", "def", "densenet264", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", ",", "weights", ",", "activations", "=", "DenseNet", "(", "\n", "num_init_features", "=", "64", ",", "\n", "growth_rate", "=", "32", ",", "\n", "block_config", "=", "(", "6", ",", "12", ",", "64", ",", "48", ")", ",", "\n", "**", "kwargs", ")", "\n", "return", "model", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.densenet.get_fine_tuning_parameters": [[48, 69], ["range", "ft_module_names.append", "ft_module_names.append", "model.named_parameters", "model.parameters", "ft_module_names.append", "ft_module_names.append", "parameters.append", "parameters.append"], "function", ["None"], ["", "def", "get_fine_tuning_parameters", "(", "model", ",", "ft_begin_index", ")", ":", "\n", "    ", "if", "ft_begin_index", "==", "0", ":", "\n", "        ", "return", "model", ".", "parameters", "(", ")", "\n", "\n", "", "ft_module_names", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "ft_begin_index", ",", "5", ")", ":", "\n", "        ", "ft_module_names", ".", "append", "(", "'denseblock{}'", ".", "format", "(", "i", ")", ")", "\n", "ft_module_names", ".", "append", "(", "'transition{}'", ".", "format", "(", "i", ")", ")", "\n", "", "ft_module_names", ".", "append", "(", "'norm5'", ")", "\n", "ft_module_names", ".", "append", "(", "'classifier'", ")", "\n", "\n", "parameters", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "for", "ft_module", "in", "ft_module_names", ":", "\n", "            ", "if", "ft_module", "in", "k", ":", "\n", "                ", "parameters", ".", "append", "(", "{", "'params'", ":", "v", "}", ")", "\n", "break", "\n", "", "", "else", ":", "\n", "            ", "parameters", ".", "append", "(", "{", "'params'", ":", "v", ",", "'lr'", ":", "0.0", "}", ")", "\n", "\n", "", "", "return", "parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.mfnet_3d.BN_AC_CONV3D.__init__": [[42, 48], ["torch.Module.__init__", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_in", ",", "num_filter", ",", "\n", "kernel", "=", "(", "1", ",", "1", ",", "1", ")", ",", "pad", "=", "(", "0", ",", "0", ",", "0", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "g", "=", "1", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "BN_AC_CONV3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "num_in", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "num_in", ",", "num_filter", ",", "kernel_size", "=", "kernel", ",", "padding", "=", "pad", ",", "stride", "=", "stride", ",", "groups", "=", "g", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.mfnet_3d.BN_AC_CONV3D.forward": [[49, 53], ["mfnet_3d.BN_AC_CONV3D.relu", "mfnet_3d.BN_AC_CONV3D.conv", "mfnet_3d.BN_AC_CONV3D.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "self", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", "\n", "h", "=", "self", ".", "conv", "(", "h", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.mfnet_3d.MF_UNIT.__init__": [[57, 73], ["torch.Module.__init__", "int", "mfnet_3d.BN_AC_CONV3D", "mfnet_3d.BN_AC_CONV3D", "mfnet_3d.BN_AC_CONV3D", "mfnet_3d.BN_AC_CONV3D", "mfnet_3d.BN_AC_CONV3D", "mfnet_3d.BN_AC_CONV3D"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_in", ",", "num_mid", ",", "num_out", ",", "g", "=", "1", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "first_block", "=", "False", ",", "use_3d", "=", "True", ")", ":", "\n", "        ", "super", "(", "MF_UNIT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "num_ix", "=", "int", "(", "num_mid", "/", "4", ")", "\n", "kt", ",", "pt", "=", "(", "3", ",", "1", ")", "if", "use_3d", "else", "(", "1", ",", "0", ")", "\n", "# prepare input", "\n", "self", ".", "conv_i1", "=", "BN_AC_CONV3D", "(", "num_in", "=", "num_in", ",", "num_filter", "=", "num_ix", ",", "kernel", "=", "(", "1", ",", "1", ",", "1", ")", ",", "pad", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "conv_i2", "=", "BN_AC_CONV3D", "(", "num_in", "=", "num_ix", ",", "num_filter", "=", "num_in", ",", "kernel", "=", "(", "1", ",", "1", ",", "1", ")", ",", "pad", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "# main part", "\n", "self", ".", "conv_m1", "=", "BN_AC_CONV3D", "(", "num_in", "=", "num_in", ",", "num_filter", "=", "num_mid", ",", "kernel", "=", "(", "kt", ",", "3", ",", "3", ")", ",", "pad", "=", "(", "pt", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "g", "=", "g", ")", "\n", "if", "first_block", ":", "\n", "            ", "self", ".", "conv_m2", "=", "BN_AC_CONV3D", "(", "num_in", "=", "num_mid", ",", "num_filter", "=", "num_out", ",", "kernel", "=", "(", "1", ",", "1", ",", "1", ")", ",", "pad", "=", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv_m2", "=", "BN_AC_CONV3D", "(", "num_in", "=", "num_mid", ",", "num_filter", "=", "num_out", ",", "kernel", "=", "(", "1", ",", "3", ",", "3", ")", ",", "pad", "=", "(", "0", ",", "1", ",", "1", ")", ",", "g", "=", "g", ")", "\n", "# adapter", "\n", "", "if", "first_block", ":", "\n", "            ", "self", ".", "conv_w1", "=", "BN_AC_CONV3D", "(", "num_in", "=", "num_in", ",", "num_filter", "=", "num_out", ",", "kernel", "=", "(", "1", ",", "1", ",", "1", ")", ",", "pad", "=", "(", "0", ",", "0", ",", "0", ")", ",", "stride", "=", "stride", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.mfnet_3d.MF_UNIT.forward": [[74, 105], ["isinstance", "mfnet_3d.MF_UNIT.conv_i1", "_activations.append", "_weights.append", "mfnet_3d.MF_UNIT.conv_i2", "_activations.append", "_weights.append", "mfnet_3d.MF_UNIT.conv_m1", "_activations.append", "_weights.append", "mfnet_3d.MF_UNIT.conv_m2", "hasattr", "_activations.append", "_weights.append", "mfnet_3d.MF_UNIT.conv_w1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "_activations", "=", "[", "]", "\n", "_weights", "=", "[", "]", "\n", "\n", "if", "isinstance", "(", "x", ",", "tuple", ")", ":", "\n", "            ", "x", ",", "_weights", ",", "_activations", "=", "x", "\n", "\n", "", "h", "=", "self", ".", "conv_i1", "(", "x", ")", "\n", "_activations", ".", "append", "(", "h", ")", "\n", "_weights", ".", "append", "(", "[", "self", ".", "conv_i1", ".", "conv", ".", "weight", ".", "data", "]", ")", "\n", "\n", "hi2", "=", "self", ".", "conv_i2", "(", "h", ")", "\n", "_activations", ".", "append", "(", "hi2", ")", "\n", "_weights", ".", "append", "(", "[", "self", ".", "conv_i2", ".", "conv", ".", "weight", ".", "data", "]", ")", "\n", "\n", "x_in", "=", "x", "+", "hi2", "\n", "\n", "h", "=", "self", ".", "conv_m1", "(", "x_in", ")", "\n", "_activations", ".", "append", "(", "h", ")", "\n", "_weights", ".", "append", "(", "[", "self", ".", "conv_m1", ".", "conv", ".", "weight", ".", "data", "]", ")", "\n", "\n", "h", "=", "self", ".", "conv_m2", "(", "h", ")", "\n", "\n", "if", "hasattr", "(", "self", ",", "'conv_w1'", ")", ":", "\n", "            ", "x", "=", "self", ".", "conv_w1", "(", "x", ")", "\n", "\n", "", "h", "=", "h", "+", "x", "\n", "_activations", ".", "append", "(", "h", ")", "\n", "_weights", ".", "append", "(", "[", "self", ".", "conv_m2", ".", "conv", ".", "weight", ".", "data", "]", ")", "\n", "\n", "return", "h", ",", "_weights", ",", "_activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.mfnet_3d.MFNET_3D.__init__": [[109, 195], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "mfnet_3d.xavier", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "collections.OrderedDict", "collections.OrderedDict", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "mfnet_3d.MF_UNIT", "range", "mfnet_3d.MF_UNIT", "range", "mfnet_3d.MF_UNIT", "range", "mfnet_3d.MF_UNIT", "range", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Dropout", "torch.Dropout", "torch.AvgPool3d", "torch.AvgPool3d"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.mfnet_3d.xavier"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "dropout", "=", "None", ",", "pretrained", "=", "False", ",", "pretrained_model", "=", "\"\"", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "MFNET_3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "groups", "=", "16", "\n", "k_sec", "=", "{", "2", ":", "3", ",", "\n", "3", ":", "4", ",", "\n", "4", ":", "6", ",", "\n", "5", ":", "3", "}", "\n", "\n", "# conv1 - x224 (x16)", "\n", "conv1_num_out", "=", "16", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv3d", "(", "3", ",", "conv1_num_out", ",", "kernel_size", "=", "(", "3", ",", "5", ",", "5", ")", ",", "padding", "=", "(", "1", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm3d", "(", "conv1_num_out", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "]", ")", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ")", "\n", "\n", "# conv2 - x56 (x8)", "\n", "num_mid", "=", "96", "\n", "conv2_num_out", "=", "96", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "\"B%02d\"", "%", "i", ",", "MF_UNIT", "(", "num_in", "=", "conv1_num_out", "if", "i", "==", "1", "else", "conv2_num_out", ",", "\n", "num_mid", "=", "num_mid", ",", "\n", "num_out", "=", "conv2_num_out", ",", "\n", "stride", "=", "(", "2", ",", "1", ",", "1", ")", "if", "i", "==", "1", "else", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "g", "=", "groups", ",", "\n", "first_block", "=", "(", "i", "==", "1", ")", ")", ")", "for", "i", "in", "range", "(", "1", ",", "k_sec", "[", "2", "]", "+", "1", ")", "\n", "]", ")", ")", "\n", "\n", "# conv3 - x28 (x8)", "\n", "num_mid", "*=", "2", "\n", "conv3_num_out", "=", "2", "*", "conv2_num_out", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "\"B%02d\"", "%", "i", ",", "MF_UNIT", "(", "num_in", "=", "conv2_num_out", "if", "i", "==", "1", "else", "conv3_num_out", ",", "\n", "num_mid", "=", "num_mid", ",", "\n", "num_out", "=", "conv3_num_out", ",", "\n", "stride", "=", "(", "1", ",", "2", ",", "2", ")", "if", "i", "==", "1", "else", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "g", "=", "groups", ",", "\n", "first_block", "=", "(", "i", "==", "1", ")", ")", ")", "for", "i", "in", "range", "(", "1", ",", "k_sec", "[", "3", "]", "+", "1", ")", "\n", "]", ")", ")", "\n", "\n", "# conv4 - x14 (x8)", "\n", "num_mid", "*=", "2", "\n", "conv4_num_out", "=", "2", "*", "conv3_num_out", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "\"B%02d\"", "%", "i", ",", "MF_UNIT", "(", "num_in", "=", "conv3_num_out", "if", "i", "==", "1", "else", "conv4_num_out", ",", "\n", "num_mid", "=", "num_mid", ",", "\n", "num_out", "=", "conv4_num_out", ",", "\n", "stride", "=", "(", "1", ",", "2", ",", "2", ")", "if", "i", "==", "1", "else", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "g", "=", "groups", ",", "\n", "first_block", "=", "(", "i", "==", "1", ")", ")", ")", "for", "i", "in", "range", "(", "1", ",", "k_sec", "[", "4", "]", "+", "1", ")", "\n", "]", ")", ")", "\n", "\n", "# conv5 - x7 (x8)", "\n", "num_mid", "*=", "2", "\n", "conv5_num_out", "=", "2", "*", "conv4_num_out", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "\"B%02d\"", "%", "i", ",", "MF_UNIT", "(", "num_in", "=", "conv4_num_out", "if", "i", "==", "1", "else", "conv5_num_out", ",", "\n", "num_mid", "=", "num_mid", ",", "\n", "num_out", "=", "conv5_num_out", ",", "\n", "stride", "=", "(", "1", ",", "2", ",", "2", ")", "if", "i", "==", "1", "else", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "g", "=", "groups", ",", "\n", "first_block", "=", "(", "i", "==", "1", ")", ")", ")", "for", "i", "in", "range", "(", "1", ",", "k_sec", "[", "5", "]", "+", "1", ")", "\n", "]", ")", ")", "\n", "\n", "# final", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm3d", "(", "conv5_num_out", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "]", ")", ")", "\n", "\n", "if", "dropout", ":", "\n", "            ", "self", ".", "globalpool", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'avg'", ",", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "8", ",", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ")", ")", ",", "\n", "(", "'dropout'", ",", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", ")", ",", "\n", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "globalpool", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'avg'", ",", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "8", ",", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ")", ")", ",", "\n", "# ('dropout', nn.Dropout(p=0.5)), only for fine-tuning", "\n", "]", ")", ")", "\n", "", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "conv5_num_out", ",", "num_classes", ")", "\n", "\n", "# Initialization", "\n", "xavier", "(", "_net", "=", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.mfnet_3d.MFNET_3D.forward": [[196, 234], ["mfnet_3d.MFNET_3D.conv1", "_activations.append", "_weights.append", "mfnet_3d.MFNET_3D.maxpool", "mfnet_3d.MFNET_3D.conv2", "mfnet_3d.MFNET_3D.conv3", "mfnet_3d.MFNET_3D.conv4", "mfnet_3d.MFNET_3D.conv5", "mfnet_3d.MFNET_3D.tail", "mfnet_3d.MFNET_3D.globalpool", "_activations.append", "mfnet_3d.MFNET_3D.view", "mfnet_3d.MFNET_3D.classifier", "_weights.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "assert", "x", ".", "shape", "[", "2", "]", "==", "16", "\n", "_activations", "=", "[", "]", "\n", "_weights", "=", "[", "]", "\n", "\n", "h", "=", "self", ".", "conv1", "(", "x", ")", "# x224 -> x112", "\n", "_activations", ".", "append", "(", "h", ")", "\n", "_weights", ".", "append", "(", "[", "self", ".", "conv1", ".", "conv", ".", "weight", ".", "data", "]", ")", "\n", "\n", "h", "=", "self", ".", "maxpool", "(", "h", ")", "# x112 ->  x56", "\n", "\n", "h", ",", "w", ",", "a", "=", "self", ".", "conv2", "(", "h", ")", "# x56 ->  x56", "\n", "_weights", "=", "_weights", "+", "w", "\n", "_activations", "=", "_activations", "+", "a", "\n", "\n", "h", ",", "w", ",", "a", "=", "self", ".", "conv3", "(", "h", ")", "# x56 ->  x28", "\n", "_weights", "=", "_weights", "+", "w", "\n", "_activations", "=", "_activations", "+", "a", "\n", "\n", "h", ",", "w", ",", "a", "=", "self", ".", "conv4", "(", "h", ")", "# x28 ->  x14", "\n", "_weights", "=", "_weights", "+", "w", "\n", "_activations", "=", "_activations", "+", "a", "\n", "\n", "h", ",", "w", ",", "a", "=", "self", ".", "conv5", "(", "h", ")", "# x14 ->   x7", "\n", "_weights", "=", "_weights", "+", "w", "\n", "_activations", "=", "_activations", "+", "a", "\n", "\n", "h", "=", "self", ".", "tail", "(", "h", ")", "\n", "# _activations.append(h)", "\n", "_activations", "[", "-", "1", "]", "=", "h", "\n", "h", "=", "self", ".", "globalpool", "(", "h", ")", "\n", "_activations", ".", "append", "(", "h", ")", "\n", "\n", "h", "=", "h", ".", "view", "(", "h", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "h", "=", "self", ".", "classifier", "(", "h", ")", "\n", "_weights", ".", "append", "(", "[", "self", ".", "classifier", ".", "weight", ".", "data", "]", ")", "\n", "\n", "return", "h", ",", "_weights", ",", "_activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.mfnet_3d.xavier": [[16, 38], ["_net.apply", "hasattr", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "classname.find", "m.bias.data.zero_", "classname.find", "m.weight.data.fill_", "m.bias.data.zero_", "classname.find", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "m.bias.data.zero_", "classname.upper", "print"], "function", ["None"], ["def", "xavier", "(", "_net", ")", ":", "\n", "    ", "def", "weights_init", "(", "m", ")", ":", "\n", "        ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", "and", "hasattr", "(", "m", ",", "'weight'", ")", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "1.", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1.0", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "1.", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", "in", "[", "'Sequential'", ",", "'AvgPool3d'", ",", "'MaxPool3d'", ",", "'Dropout'", ",", "'ReLU'", ",", "'Softmax'", ",", "'BnActConv3d'", "]", "or", "'Block'", "in", "classname", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "if", "classname", "!=", "classname", ".", "upper", "(", ")", ":", "\n", "                ", "print", "(", "\"Initializer:: '{}' is uninitialized.\"", ".", "format", "(", "classname", ")", ")", "\n", "", "", "", "_net", ".", "apply", "(", "weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXtBottleneck.__init__": [[38, 59], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "cardinality", ",", "stride", "=", "1", ",", "\n", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNeXtBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "mid_planes", "=", "cardinality", "*", "int", "(", "planes", "/", "32", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "inplanes", ",", "mid_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "mid_planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv3d", "(", "\n", "mid_planes", ",", "\n", "mid_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "groups", "=", "cardinality", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm3d", "(", "mid_planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv3d", "(", "\n", "mid_planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm3d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXtBottleneck.forward": [[60, 98], ["isinstance", "resnext.ResNeXtBottleneck.conv1", "resnext.ResNeXtBottleneck.bn1", "resnext.ResNeXtBottleneck.relu", "activations.append", "weights.append", "resnext.ResNeXtBottleneck.conv2", "resnext.ResNeXtBottleneck.bn2", "resnext.ResNeXtBottleneck.relu", "activations.append", "weights.append", "resnext.ResNeXtBottleneck.conv3", "resnext.ResNeXtBottleneck.bn3", "weights.append", "resnext.ResNeXtBottleneck.relu", "activations.append", "resnext.ResNeXtBottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "if", "isinstance", "(", "x", ",", "tuple", ")", ":", "\n", "            ", "x", ",", "weights", ",", "activations", "=", "x", "\n", "\n", "", "residual", "=", "x", "\n", "\n", "activations", "=", "[", "]", "\n", "weights", "=", "[", "]", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "activations", ".", "append", "(", "out", ")", "\n", "weights", ".", "append", "(", "[", "self", ".", "conv1", ".", "weight", ".", "data", "]", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "activations", ".", "append", "(", "out", ")", "\n", "weights", ".", "append", "(", "[", "self", ".", "conv2", ".", "weight", ".", "data", "]", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "weights", ".", "append", "(", "[", "self", ".", "conv3", ".", "weight", ".", "data", "]", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "activations", ".", "append", "(", "out", ")", "\n", "\n", "return", "out", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__": [[102, 142], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "resnext.ResNeXt._make_layer", "resnext.ResNeXt._make_layer", "resnext.ResNeXt._make_layer", "resnext.ResNeXt._make_layer", "int", "int", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Linear", "torch.Linear", "torch.Linear", "resnext.ResNeXt.modules", "math.ceil", "math.ceil", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.__init__", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt._make_layer", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt._make_layer", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt._make_layer", "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "\n", "block", ",", "\n", "layers", ",", "\n", "sample_size", ",", "\n", "sample_duration", ",", "\n", "shortcut_type", "=", "'B'", ",", "\n", "cardinality", "=", "32", ",", "\n", "num_classes", "=", "400", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNeXt", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "\n", "3", ",", "\n", "64", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "0", "]", ",", "shortcut_type", ",", "\n", "cardinality", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "256", ",", "layers", "[", "1", "]", ",", "shortcut_type", ",", "cardinality", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "512", ",", "layers", "[", "2", "]", ",", "shortcut_type", ",", "cardinality", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "1024", ",", "layers", "[", "3", "]", ",", "shortcut_type", ",", "cardinality", ",", "stride", "=", "2", ")", "\n", "last_duration", "=", "int", "(", "math", ".", "ceil", "(", "sample_duration", "/", "16", ")", ")", "\n", "last_size", "=", "int", "(", "math", ".", "ceil", "(", "sample_size", "/", "32", ")", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool3d", "(", "\n", "(", "last_duration", ",", "last_size", ",", "last_size", ")", ",", "stride", "=", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "cardinality", "*", "32", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "m", ".", "weight", "=", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt._make_layer": [[143, 174], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "functools.partial", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "\n", "block", ",", "\n", "planes", ",", "\n", "blocks", ",", "\n", "shortcut_type", ",", "\n", "cardinality", ",", "\n", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "if", "shortcut_type", "==", "'A'", ":", "\n", "                ", "downsample", "=", "partial", "(", "\n", "downsample_basic_block", ",", "\n", "planes", "=", "planes", "*", "block", ".", "expansion", ",", "\n", "stride", "=", "stride", ")", "\n", "", "else", ":", "\n", "                ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm3d", "(", "planes", "*", "block", ".", "expansion", ")", ")", "\n", "\n", "", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "\n", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "cardinality", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "cardinality", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.ResNeXt.forward": [[175, 218], ["resnext.ResNeXt.conv1", "weights.append", "resnext.ResNeXt.bn1", "resnext.ResNeXt.relu", "activations.append", "resnext.ResNeXt.maxpool", "resnext.ResNeXt.layer1", "resnext.ResNeXt.layer2", "resnext.ResNeXt.layer3", "resnext.ResNeXt.layer4", "resnext.ResNeXt.avgpool", "resnext.ResNeXt.view", "resnext.ResNeXt.fc", "weights.append", "resnext.ResNeXt.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "weights", "=", "[", "]", "\n", "activations", "=", "[", "]", "\n", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "weights", ".", "append", "(", "[", "self", ".", "conv1", ".", "weight", ".", "data", "]", ")", "\n", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "activations", ".", "append", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", ",", "w", ",", "a", "=", "self", ".", "layer1", "(", "x", ")", "\n", "\n", "weights", "=", "weights", "+", "w", "\n", "activations", "=", "activations", "+", "a", "\n", "\n", "x", ",", "w", ",", "a", "=", "self", ".", "layer2", "(", "x", ")", "\n", "\n", "weights", "=", "weights", "+", "w", "\n", "activations", "=", "activations", "+", "a", "\n", "\n", "x", ",", "w", ",", "a", "=", "self", ".", "layer3", "(", "x", ")", "\n", "\n", "weights", "=", "weights", "+", "w", "\n", "activations", "=", "activations", "+", "a", "\n", "\n", "x", ",", "w", ",", "a", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "weights", "=", "weights", "+", "w", "\n", "activations", "=", "activations", "+", "a", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "weights", ".", "append", "(", "[", "self", ".", "fc", ".", "weight", ".", "data", "]", ")", "\n", "\n", "return", "x", ",", "weights", ",", "activations", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.conv3x3x3": [[11, 20], ["torch.Conv3d"], "function", ["None"], ["def", "conv3x3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "# 3x3x3 convolution with padding", "\n", "    ", "return", "nn", ".", "Conv3d", "(", "\n", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.downsample_basic_block": [[22, 33], ["torch.avg_pool3d", "torch.Tensor().zero_", "torch.Tensor().zero_", "torch.Tensor().zero_", "isinstance", "torch.autograd.Variable", "zero_pads.cuda.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "torch.autograd.Variable.size"], "function", ["None"], ["", "def", "downsample_basic_block", "(", "x", ",", "planes", ",", "stride", ")", ":", "\n", "    ", "out", "=", "F", ".", "avg_pool3d", "(", "x", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ")", "\n", "zero_pads", "=", "torch", ".", "Tensor", "(", "\n", "out", ".", "size", "(", "0", ")", ",", "planes", "-", "out", ".", "size", "(", "1", ")", ",", "out", ".", "size", "(", "2", ")", ",", "out", ".", "size", "(", "3", ")", ",", "\n", "out", ".", "size", "(", "4", ")", ")", ".", "zero_", "(", ")", "\n", "if", "isinstance", "(", "out", ".", "data", ",", "torch", ".", "cuda", ".", "FloatTensor", ")", ":", "\n", "        ", "zero_pads", "=", "zero_pads", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "Variable", "(", "torch", ".", "cat", "(", "[", "out", ".", "data", ",", "zero_pads", "]", ",", "dim", "=", "1", ")", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.get_fine_tuning_parameters": [[220, 239], ["range", "ft_module_names.append", "model.named_parameters", "model.parameters", "ft_module_names.append", "parameters.append", "parameters.append"], "function", ["None"], ["", "", "def", "get_fine_tuning_parameters", "(", "model", ",", "ft_begin_index", ")", ":", "\n", "    ", "if", "ft_begin_index", "==", "0", ":", "\n", "        ", "return", "model", ".", "parameters", "(", ")", "\n", "\n", "", "ft_module_names", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "ft_begin_index", ",", "5", ")", ":", "\n", "        ", "ft_module_names", ".", "append", "(", "'layer{}'", ".", "format", "(", "i", ")", ")", "\n", "", "ft_module_names", ".", "append", "(", "'fc'", ")", "\n", "\n", "parameters", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "for", "ft_module", "in", "ft_module_names", ":", "\n", "            ", "if", "ft_module", "in", "k", ":", "\n", "                ", "parameters", ".", "append", "(", "{", "'params'", ":", "v", "}", ")", "\n", "break", "\n", "", "", "else", ":", "\n", "            ", "parameters", ".", "append", "(", "{", "'params'", ":", "v", ",", "'lr'", ":", "0.0", "}", ")", "\n", "\n", "", "", "return", "parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.resnext50": [[241, 246], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "resnext50", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n    \"\"\"", "\n", "model", "=", "ResNeXt", "(", "ResNeXtBottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.resnext101": [[248, 253], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "resnext101", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    \"\"\"", "\n", "model", "=", "ResNeXt", "(", "ResNeXtBottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.alexandrosstergiou_Class_Feature_Visualization_Pyramid.models.resnext.resnext152": [[255, 260], ["resnext.ResNeXt"], "function", ["None"], ["", "def", "resnext152", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    \"\"\"", "\n", "model", "=", "ResNeXt", "(", "ResNeXtBottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]]}