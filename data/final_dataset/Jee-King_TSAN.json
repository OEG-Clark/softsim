{"home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.timer.__init__": [[19, 22], ["utility.timer.tic"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.tic"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "=", "0", "\n", "self", ".", "tic", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.timer.tic": [[23, 25], ["time.time"], "methods", ["None"], ["", "def", "tic", "(", "self", ")", ":", "\n", "        ", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.timer.toc": [[26, 28], ["time.time"], "methods", ["None"], ["", "def", "toc", "(", "self", ")", ":", "\n", "        ", "return", "time", ".", "time", "(", ")", "-", "self", ".", "t0", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.timer.hold": [[29, 31], ["utility.timer.toc"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.toc"], ["", "def", "hold", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "+=", "self", ".", "toc", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.timer.release": [[32, 37], ["None"], "methods", ["None"], ["", "def", "release", "(", "self", ")", ":", "\n", "        ", "ret", "=", "self", ".", "acc", "\n", "self", ".", "acc", "=", "0", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.timer.reset": [[38, 40], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.checkpoint.__init__": [[42, 77], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "datetime.datetime.now().strftime", "utility.checkpoint.__init__._make_dir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "ok", "=", "True", "\n", "self", ".", "log", "=", "torch", ".", "Tensor", "(", ")", "\n", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "\n", "if", "args", ".", "load", "==", "'.'", ":", "\n", "            ", "if", "args", ".", "save", "==", "'.'", ":", "args", ".", "save", "=", "now", "\n", "self", ".", "dir", "=", "'experiment/'", "+", "args", ".", "save", "\n", "", "else", ":", "\n", "            ", "self", ".", "dir", "=", "'experiment/'", "+", "args", ".", "load", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", ")", ":", "\n", "                ", "args", ".", "load", "=", "'.'", "\n", "", "else", ":", "\n", "                ", "self", ".", "log", "=", "torch", ".", "load", "(", "self", ".", "dir", "+", "'/psnr_log.pt'", ")", "\n", "print", "(", "'Continue from epoch {}...'", ".", "format", "(", "len", "(", "self", ".", "log", ")", ")", ")", "\n", "\n", "", "", "if", "args", ".", "reset", ":", "\n", "            ", "os", ".", "system", "(", "'rm -rf '", "+", "self", ".", "dir", ")", "\n", "args", ".", "load", "=", "'.'", "\n", "\n", "", "def", "_make_dir", "(", "path", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "os", ".", "makedirs", "(", "path", ")", "\n", "\n", "", "_make_dir", "(", "self", ".", "dir", ")", "\n", "_make_dir", "(", "self", ".", "dir", "+", "'/model'", ")", "\n", "_make_dir", "(", "self", ".", "dir", "+", "'/results'", ")", "\n", "\n", "open_type", "=", "'a'", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", "+", "'/log.txt'", ")", "else", "'w'", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "dir", "+", "'/log.txt'", ",", "open_type", ")", "\n", "with", "open", "(", "self", ".", "dir", "+", "'/config.txt'", ",", "open_type", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "now", "+", "'\\n\\n'", ")", "\n", "for", "arg", "in", "vars", "(", "args", ")", ":", "\n", "                ", "f", ".", "write", "(", "'{}: {}\\n'", ".", "format", "(", "arg", ",", "getattr", "(", "args", ",", "arg", ")", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.checkpoint.save": [[78, 88], ["trainer.model.save", "trainer.loss.save", "trainer.loss.plot_loss", "utility.checkpoint.plot_psnr", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "trainer.optimizer.state_dict", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.plot_loss", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.plot_psnr", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["", "", "def", "save", "(", "self", ",", "trainer", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "trainer", ".", "model", ".", "save", "(", "self", ".", "dir", ",", "epoch", ",", "is_best", "=", "is_best", ")", "\n", "trainer", ".", "loss", ".", "save", "(", "self", ".", "dir", ")", "\n", "trainer", ".", "loss", ".", "plot_loss", "(", "self", ".", "dir", ",", "epoch", ")", "\n", "\n", "self", ".", "plot_psnr", "(", "epoch", ")", "\n", "torch", ".", "save", "(", "self", ".", "log", ",", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "'psnr_log.pt'", ")", ")", "\n", "torch", ".", "save", "(", "\n", "trainer", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "'optimizer.pt'", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.checkpoint.add_log": [[90, 92], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "add_log", "(", "self", ",", "log", ")", ":", "\n", "        ", "self", ".", "log", "=", "torch", ".", "cat", "(", "[", "self", ".", "log", ",", "log", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.checkpoint.write_log": [[93, 99], ["print", "utility.checkpoint.log_file.write", "utility.checkpoint.log_file.close", "open"], "methods", ["None"], ["", "def", "write_log", "(", "self", ",", "log", ",", "refresh", "=", "False", ")", ":", "\n", "        ", "print", "(", "log", ")", "\n", "self", ".", "log_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "if", "refresh", ":", "\n", "            ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "dir", "+", "'/log.txt'", ",", "'a'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.checkpoint.done": [[100, 102], ["utility.checkpoint.log_file.close"], "methods", ["None"], ["", "", "def", "done", "(", "self", ")", ":", "\n", "        ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.checkpoint.plot_psnr": [[103, 120], ["numpy.linspace", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "enumerate", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "matplotlib.plot", "matplotlib.plot", "utility.checkpoint.log[].numpy"], "methods", ["None"], ["", "def", "plot_psnr", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "axis", "=", "np", ".", "linspace", "(", "1", ",", "epoch", ",", "epoch", ")", "\n", "label", "=", "'SR on {}'", ".", "format", "(", "self", ".", "args", ".", "data_test", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "title", "(", "label", ")", "\n", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "args", ".", "scale", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "\n", "axis", ",", "\n", "self", ".", "log", "[", ":", ",", "idx_scale", "]", ".", "numpy", "(", ")", ",", "\n", "label", "=", "'Scale {}'", ".", "format", "(", "scale", ")", "\n", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'PSNR'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "'{}/test_{}.pdf'", ".", "format", "(", "self", ".", "dir", ",", "self", ".", "args", ".", "data_test", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.checkpoint.save_results": [[121, 128], ["zip", "v[].data.mul", "v[].data.mul.byte().permute().cpu().numpy", "scipy.imsave", "v[].data.mul.byte().permute().cpu", "v[].data.mul.byte().permute", "v[].data.mul.byte"], "methods", ["None"], ["", "def", "save_results", "(", "self", ",", "filename", ",", "save_list", ",", "scale", ")", ":", "\n", "        ", "filename", "=", "'{}/results/{}_x{}_'", ".", "format", "(", "self", ".", "dir", ",", "filename", ",", "scale", ")", "\n", "postfix", "=", "(", "'SR'", ",", "'LR'", ",", "'HR'", ")", "\n", "for", "v", ",", "p", "in", "zip", "(", "save_list", ",", "postfix", ")", ":", "\n", "            ", "normalized", "=", "v", "[", "0", "]", ".", "data", ".", "mul", "(", "255", "/", "self", ".", "args", ".", "rgb_range", ")", "\n", "ndarr", "=", "normalized", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "misc", ".", "imsave", "(", "'{}{}.png'", ".", "format", "(", "filename", ",", "p", ")", ",", "ndarr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.quantize": [[129, 132], ["img.mul().clamp().round().div", "img.mul().clamp().round", "img.mul().clamp", "img.mul"], "function", ["None"], ["", "", "", "def", "quantize", "(", "img", ",", "rgb_range", ")", ":", "\n", "    ", "pixel_range", "=", "255", "/", "rgb_range", "\n", "return", "img", ".", "mul", "(", "pixel_range", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "round", "(", ")", ".", "div", "(", "pixel_range", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.calc_psnr": [[133, 151], ["valid.pow().mean", "math.log10", "diff.sum.size", "diff.sum.new", "diff.sum.mul_().div_", "diff.sum.sum", "valid.pow", "diff.sum.mul_"], "function", ["None"], ["", "def", "calc_psnr", "(", "sr", ",", "hr", ",", "scale", ",", "rgb_range", ",", "benchmark", "=", "False", ")", ":", "\n", "    ", "diff", "=", "(", "sr", "-", "hr", ")", ".", "data", ".", "div", "(", "rgb_range", ")", "\n", "if", "benchmark", ":", "\n", "        ", "shave", "=", "scale", "\n", "if", "diff", ".", "size", "(", "1", ")", ">", "1", ":", "\n", "            ", "convert", "=", "diff", ".", "new", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "convert", "[", "0", ",", "0", ",", "0", ",", "0", "]", "=", "65.738", "\n", "convert", "[", "0", ",", "1", ",", "0", ",", "0", "]", "=", "129.057", "\n", "convert", "[", "0", ",", "2", ",", "0", ",", "0", "]", "=", "25.064", "\n", "diff", ".", "mul_", "(", "convert", ")", ".", "div_", "(", "256", ")", "\n", "diff", "=", "diff", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "", "else", ":", "\n", "        ", "shave", "=", "scale", "+", "6", "\n", "\n", "", "valid", "=", "diff", "[", ":", ",", ":", ",", "shave", ":", "-", "shave", ",", "shave", ":", "-", "shave", "]", "\n", "mse", "=", "valid", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n", "return", "-", "10", "*", "math", ".", "log10", "(", "mse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.make_optimizer": [[152, 172], ["filter", "optimizer_function", "my_model.parameters"], "function", ["None"], ["", "def", "make_optimizer", "(", "args", ",", "my_model", ")", ":", "\n", "    ", "trainable", "=", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "my_model", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "args", ".", "optimizer", "==", "'SGD'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "SGD", "\n", "kwargs", "=", "{", "'momentum'", ":", "args", ".", "momentum", "}", "\n", "", "elif", "args", ".", "optimizer", "==", "'ADAM'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "Adam", "\n", "kwargs", "=", "{", "\n", "'betas'", ":", "(", "args", ".", "beta1", ",", "args", ".", "beta2", ")", ",", "\n", "'eps'", ":", "args", ".", "epsilon", "\n", "}", "\n", "", "elif", "args", ".", "optimizer", "==", "'RMSprop'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "RMSprop", "\n", "kwargs", "=", "{", "'eps'", ":", "args", ".", "epsilon", "}", "\n", "\n", "", "kwargs", "[", "'lr'", "]", "=", "args", ".", "lr", "\n", "kwargs", "[", "'weight_decay'", "]", "=", "args", ".", "weight_decay", "\n", "\n", "return", "optimizer_function", "(", "trainable", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.utility.make_scheduler": [[173, 191], ["torch.StepLR", "args.decay_type.find", "args.decay_type.split", "list.pop", "list", "torch.MultiStepLR", "map", "int"], "function", ["None"], ["", "def", "make_scheduler", "(", "args", ",", "my_optimizer", ")", ":", "\n", "    ", "if", "args", ".", "decay_type", "==", "'step'", ":", "\n", "        ", "scheduler", "=", "lrs", ".", "StepLR", "(", "\n", "my_optimizer", ",", "\n", "step_size", "=", "args", ".", "lr_decay", ",", "\n", "gamma", "=", "args", ".", "gamma", "\n", ")", "\n", "", "elif", "args", ".", "decay_type", ".", "find", "(", "'step'", ")", ">=", "0", ":", "\n", "        ", "milestones", "=", "args", ".", "decay_type", ".", "split", "(", "'_'", ")", "\n", "milestones", ".", "pop", "(", "0", ")", "\n", "milestones", "=", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ")", ",", "milestones", ")", ")", "\n", "scheduler", "=", "lrs", ".", "MultiStepLR", "(", "\n", "my_optimizer", ",", "\n", "milestones", "=", "milestones", ",", "\n", "gamma", "=", "args", ".", "gamma", "\n", ")", "\n", "\n", "", "return", "scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.trainer.Trainer.__init__": [[12, 31], ["utility.make_optimizer", "utility.make_scheduler", "trainer.Trainer.optimizer.load_state_dict", "range", "torch.load", "len", "trainer.Trainer.scheduler.step", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.make_optimizer", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.make_scheduler", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRN.load_state_dict", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "loader", ",", "my_model", ",", "my_loss", ",", "ckp", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n", "self", ".", "ckp", "=", "ckp", "\n", "self", ".", "loader_train", "=", "loader", ".", "loader_train", "\n", "self", ".", "loader_test", "=", "loader", ".", "loader_test", "\n", "self", ".", "model", "=", "my_model", "\n", "self", ".", "loss", "=", "my_loss", "\n", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "args", ",", "self", ".", "model", ")", "\n", "self", ".", "scheduler", "=", "utility", ".", "make_scheduler", "(", "args", ",", "self", ".", "optimizer", ")", "\n", "\n", "if", "self", ".", "args", ".", "load", "!=", "'.'", ":", "\n", "            ", "self", ".", "optimizer", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ckp", ".", "dir", ",", "'optimizer.pt'", ")", ")", "\n", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "ckp", ".", "log", ")", ")", ":", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "self", ".", "error_last", "=", "1e8", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.trainer.Trainer.train": [[32, 80], ["trainer.Trainer.scheduler.step", "trainer.Trainer.loss.step", "trainer.Trainer.ckp.write_log", "trainer.Trainer.loss.start_log", "trainer.Trainer.model.train", "enumerate", "trainer.Trainer.loss.end_log", "trainer.Trainer.scheduler.get_lr", "utility.timer", "utility.timer", "trainer.Trainer.prepare", "timer_data.hold", "timer_model.tic", "trainer.Trainer.optimizer.zero_grad", "trainer.Trainer.model", "trainer.Trainer.loss", "trainer.Trainer.loss", "timer_model.hold", "timer_data.tic", "len", "decimal.Decimal", "loss.item", "loss.backward", "trainer.Trainer.optimizer.step", "print", "trainer.Trainer.ckp.write_log", "loss.item", "len", "trainer.Trainer.loss.display_loss", "timer_model.release", "timer_data.release"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.start_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.train", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.end_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.hold", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.tic", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.hold", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.tic", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.display_loss", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.release", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.release"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "self", ".", "loss", ".", "step", "(", ")", "\n", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "lr", "=", "self", ".", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[Epoch {}]\\tLearning rate: {:.2e}'", ".", "format", "(", "epoch", ",", "Decimal", "(", "lr", ")", ")", "\n", ")", "\n", "self", ".", "loss", ".", "start_log", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "timer_data", ",", "timer_model", "=", "utility", ".", "timer", "(", ")", ",", "utility", ".", "timer", "(", ")", "\n", "for", "batch", ",", "(", "lr", ",", "hr", ",", "_", ",", "idx_scale", ")", "in", "enumerate", "(", "self", ".", "loader_train", ")", ":", "\n", "            ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "timer_data", ".", "hold", "(", ")", "\n", "timer_model", ".", "tic", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "sr1", ",", "sr2", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "loss1", "=", "self", ".", "loss", "(", "sr1", ",", "hr", ")", "\n", "loss2", "=", "self", ".", "loss", "(", "sr2", ",", "hr", ")", "\n", "\n", "loss", "=", "loss1", "+", "loss2", "\n", "\n", "#loss = loss1 + loss2", "\n", "if", "loss", ".", "item", "(", ")", "<", "self", ".", "args", ".", "skip_threshold", "*", "self", ".", "error_last", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Skip this batch {}! (Loss: {})'", ".", "format", "(", "\n", "batch", "+", "1", ",", "loss", ".", "item", "(", ")", "\n", ")", ")", "\n", "\n", "", "timer_model", ".", "hold", "(", ")", "\n", "\n", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                ", "self", ".", "ckp", ".", "write_log", "(", "'[{}/{}]\\t{}\\t{:.1f}+{:.1f}s'", ".", "format", "(", "\n", "(", "batch", "+", "1", ")", "*", "self", ".", "args", ".", "batch_size", ",", "\n", "len", "(", "self", ".", "loader_train", ".", "dataset", ")", ",", "\n", "self", ".", "loss", ".", "display_loss", "(", "batch", ")", ",", "\n", "timer_model", ".", "release", "(", ")", ",", "\n", "timer_data", ".", "release", "(", ")", ")", ")", "\n", "\n", "", "timer_data", ".", "tic", "(", ")", "\n", "\n", "", "self", ".", "loss", ".", "end_log", "(", "len", "(", "self", ".", "loader_train", ")", ")", "\n", "self", ".", "error_last", "=", "self", ".", "loss", ".", "log", "[", "-", "1", ",", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.trainer.Trainer.test": [[81, 132], ["trainer.Trainer.ckp.write_log", "trainer.Trainer.ckp.add_log", "trainer.Trainer.model.eval", "utility.timer", "trainer.Trainer.ckp.write_log", "torch.zeros", "torch.no_grad", "enumerate", "trainer.Trainer.ckp.save", "len", "trainer.Trainer.loader_test.dataset.set_scale", "tqdm.tqdm.tqdm", "enumerate", "trainer.Trainer.ckp.log.max", "trainer.Trainer.ckp.write_log", "utility.timer.toc", "trainer.Trainer.model", "utility.quantize", "len", "hr.nelement", "trainer.Trainer.prepare", "trainer.Trainer.prepare", "utility.calc_psnr", "save_list.extend", "trainer.Trainer.ckp.save_results"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.add_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.set_scale", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.toc", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.quantize", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.calc_psnr", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save_results"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "self", ".", "ckp", ".", "write_log", "(", "'\\nEvaluation:'", ")", "\n", "self", ".", "ckp", ".", "add_log", "(", "torch", ".", "zeros", "(", "1", ",", "len", "(", "self", ".", "scale", ")", ")", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "timer_test", "=", "utility", ".", "timer", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "eval_acc", "=", "0", "\n", "self", ".", "loader_test", ".", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "tqdm_test", "=", "tqdm", "(", "self", ".", "loader_test", ",", "ncols", "=", "80", ")", "\n", "for", "idx_img", ",", "(", "lr", ",", "hr", ",", "filename", ",", "_", ")", "in", "enumerate", "(", "tqdm_test", ")", ":", "\n", "                    ", "filename", "=", "filename", "[", "0", "]", "\n", "no_eval", "=", "(", "hr", ".", "nelement", "(", ")", "==", "1", ")", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "", "else", ":", "\n", "                        ", "lr", ",", "=", "self", ".", "prepare", "(", "lr", ")", "\n", "\n", "", "sr", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "sr", "=", "utility", ".", "quantize", "(", "sr", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "\n", "save_list", "=", "[", "sr", "]", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "eval_acc", "+=", "utility", ".", "calc_psnr", "(", "\n", "sr", ",", "hr", ",", "scale", ",", "self", ".", "args", ".", "rgb_range", ",", "\n", "benchmark", "=", "self", ".", "loader_test", ".", "dataset", ".", "benchmark", "\n", ")", "\n", "save_list", ".", "extend", "(", "[", "lr", ",", "hr", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "                        ", "self", ".", "ckp", ".", "save_results", "(", "filename", ",", "save_list", ",", "scale", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", "=", "eval_acc", "/", "len", "(", "self", ".", "loader_test", ")", "\n", "best", "=", "self", ".", "ckp", ".", "log", ".", "max", "(", "0", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[{} x{}]\\tPSNR: {:.3f} (Best: {:.3f} @epoch {})'", ".", "format", "(", "\n", "self", ".", "args", ".", "data_test", ",", "\n", "scale", ",", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", ",", "\n", "best", "[", "0", "]", "[", "idx_scale", "]", ",", "\n", "best", "[", "1", "]", "[", "idx_scale", "]", "+", "1", "\n", ")", "\n", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "write_log", "(", "\n", "'Total time: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ",", "refresh", "=", "True", "\n", ")", "\n", "if", "not", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "ckp", ".", "save", "(", "self", ",", "epoch", ",", "is_best", "=", "(", "best", "[", "1", "]", "[", "0", "]", "+", "1", "==", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.trainer.Trainer.prepare": [[133, 140], ["torch.device", "tensor.half.half.to", "trainer.Trainer.prepare._prepare"], "methods", ["None"], ["", "", "def", "prepare", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "self", ".", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "def", "_prepare", "(", "tensor", ")", ":", "\n", "            ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "a", ")", "for", "a", "in", "args", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.trainer.Trainer.terminate": [[141, 148], ["trainer.Trainer.test"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.test"], ["", "def", "terminate", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "test", "(", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "return", "epoch", ">=", "self", ".", "args", ".", "epochs", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.imresize.deriveSizeFromScale": [[4, 9], ["range", "output_shape.append", "int", "math.ceil"], "function", ["None"], ["def", "deriveSizeFromScale", "(", "img_shape", ",", "scale", ")", ":", "\n", "    ", "output_shape", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "2", ")", ":", "\n", "        ", "output_shape", ".", "append", "(", "int", "(", "ceil", "(", "scale", "[", "k", "]", "*", "img_shape", "[", "k", "]", ")", ")", ")", "\n", "", "return", "output_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.imresize.deriveScaleFromSize": [[10, 15], ["range", "scale.append"], "function", ["None"], ["", "def", "deriveScaleFromSize", "(", "img_shape_in", ",", "img_shape_out", ")", ":", "\n", "    ", "scale", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "2", ")", ":", "\n", "        ", "scale", ".", "append", "(", "1.0", "*", "img_shape_out", "[", "k", "]", "/", "img_shape_in", "[", "k", "]", ")", "\n", "", "return", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.imresize.cubic": [[16, 23], ["numpy.array().astype", "numpy.absolute", "numpy.multiply", "numpy.multiply", "numpy.multiply", "numpy.multiply", "numpy.array"], "function", ["None"], ["", "def", "cubic", "(", "x", ")", ":", "\n", "    ", "x", "=", "np", ".", "array", "(", "x", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "absx", "=", "np", ".", "absolute", "(", "x", ")", "\n", "absx2", "=", "np", ".", "multiply", "(", "absx", ",", "absx", ")", "\n", "absx3", "=", "np", ".", "multiply", "(", "absx2", ",", "absx", ")", "\n", "f", "=", "np", ".", "multiply", "(", "1.5", "*", "absx3", "-", "2.5", "*", "absx2", "+", "1", ",", "absx", "<=", "1", ")", "+", "np", ".", "multiply", "(", "-", "0.5", "*", "absx3", "+", "2.5", "*", "absx2", "-", "4", "*", "absx", "+", "2", ",", "(", "1", "<", "absx", ")", "&", "(", "absx", "<=", "2", ")", ")", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.imresize.contributions": [[24, 45], ["numpy.arange().astype", "numpy.floor", "ind.astype", "h", "numpy.divide", "numpy.concatenate().astype", "numpy.nonzero", "int", "numpy.expand_dims", "numpy.any", "numpy.arange", "math.ceil", "numpy.expand_dims", "numpy.arange", "numpy.sum", "numpy.concatenate", "numpy.mod", "kernel", "numpy.expand_dims", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "def", "contributions", "(", "in_length", ",", "out_length", ",", "scale", ",", "kernel", ",", "k_width", ")", ":", "\n", "    ", "if", "scale", "<", "1", ":", "\n", "        ", "h", "=", "lambda", "x", ":", "scale", "*", "kernel", "(", "scale", "*", "x", ")", "\n", "kernel_width", "=", "1.0", "*", "k_width", "/", "scale", "\n", "", "else", ":", "\n", "        ", "h", "=", "kernel", "\n", "kernel_width", "=", "k_width", "\n", "", "x", "=", "np", ".", "arange", "(", "1", ",", "out_length", "+", "1", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "u", "=", "x", "/", "scale", "+", "0.5", "*", "(", "1", "-", "1", "/", "scale", ")", "\n", "left", "=", "np", ".", "floor", "(", "u", "-", "kernel_width", "/", "2", ")", "\n", "P", "=", "int", "(", "ceil", "(", "kernel_width", ")", ")", "+", "2", "\n", "ind", "=", "np", ".", "expand_dims", "(", "left", ",", "axis", "=", "1", ")", "+", "np", ".", "arange", "(", "P", ")", "-", "1", "# -1 because indexing from 0", "\n", "indices", "=", "ind", ".", "astype", "(", "np", ".", "int32", ")", "\n", "weights", "=", "h", "(", "np", ".", "expand_dims", "(", "u", ",", "axis", "=", "1", ")", "-", "indices", "-", "1", ")", "# -1 because indexing from 0", "\n", "weights", "=", "np", ".", "divide", "(", "weights", ",", "np", ".", "expand_dims", "(", "np", ".", "sum", "(", "weights", ",", "axis", "=", "1", ")", ",", "axis", "=", "1", ")", ")", "\n", "aux", "=", "np", ".", "concatenate", "(", "(", "np", ".", "arange", "(", "in_length", ")", ",", "np", ".", "arange", "(", "in_length", "-", "1", ",", "-", "1", ",", "step", "=", "-", "1", ")", ")", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "indices", "=", "aux", "[", "np", ".", "mod", "(", "indices", ",", "aux", ".", "size", ")", "]", "\n", "ind2store", "=", "np", ".", "nonzero", "(", "np", ".", "any", "(", "weights", ",", "axis", "=", "0", ")", ")", "\n", "weights", "=", "weights", "[", ":", ",", "ind2store", "]", "\n", "indices", "=", "indices", "[", ":", ",", "ind2store", "]", "\n", "return", "weights", ",", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.imresize.imresizemex": [[46, 71], ["list", "numpy.zeros", "range", "numpy.clip", "numpy.around().astype", "range", "range", "inimg[].astype", "numpy.sum", "range", "numpy.around", "numpy.multiply", "inimg[].astype", "numpy.sum", "numpy.squeeze", "numpy.multiply", "numpy.squeeze"], "function", ["None"], ["", "def", "imresizemex", "(", "inimg", ",", "weights", ",", "indices", ",", "dim", ")", ":", "\n", "    ", "in_shape", "=", "inimg", ".", "shape", "\n", "w_shape", "=", "weights", ".", "shape", "\n", "out_shape", "=", "list", "(", "in_shape", ")", "\n", "out_shape", "[", "dim", "]", "=", "w_shape", "[", "0", "]", "\n", "outimg", "=", "np", ".", "zeros", "(", "out_shape", ")", "\n", "if", "dim", "==", "0", ":", "\n", "        ", "for", "i_img", "in", "range", "(", "in_shape", "[", "1", "]", ")", ":", "\n", "            ", "for", "i_w", "in", "range", "(", "w_shape", "[", "0", "]", ")", ":", "\n", "                ", "w", "=", "weights", "[", "i_w", ",", ":", "]", "\n", "ind", "=", "indices", "[", "i_w", ",", ":", "]", "\n", "im_slice", "=", "inimg", "[", "ind", ",", "i_img", "]", ".", "astype", "(", "np", ".", "float64", ")", "\n", "outimg", "[", "i_w", ",", "i_img", "]", "=", "np", ".", "sum", "(", "np", ".", "multiply", "(", "np", ".", "squeeze", "(", "im_slice", ",", "axis", "=", "0", ")", ",", "w", ".", "T", ")", ",", "axis", "=", "0", ")", "\n", "", "", "", "elif", "dim", "==", "1", ":", "\n", "        ", "for", "i_img", "in", "range", "(", "in_shape", "[", "0", "]", ")", ":", "\n", "            ", "for", "i_w", "in", "range", "(", "w_shape", "[", "0", "]", ")", ":", "\n", "                ", "w", "=", "weights", "[", "i_w", ",", ":", "]", "\n", "ind", "=", "indices", "[", "i_w", ",", ":", "]", "\n", "im_slice", "=", "inimg", "[", "i_img", ",", "ind", "]", ".", "astype", "(", "np", ".", "float64", ")", "\n", "outimg", "[", "i_img", ",", "i_w", "]", "=", "np", ".", "sum", "(", "np", ".", "multiply", "(", "np", ".", "squeeze", "(", "im_slice", ",", "axis", "=", "0", ")", ",", "w", ".", "T", ")", ",", "axis", "=", "0", ")", "\n", "", "", "", "if", "inimg", ".", "dtype", "==", "np", ".", "uint8", ":", "\n", "        ", "outimg", "=", "np", ".", "clip", "(", "outimg", ",", "0", ",", "255", ")", "\n", "return", "np", ".", "around", "(", "outimg", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "        ", "return", "outimg", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.imresize.imresizevec": [[72, 85], ["weights.reshape.reshape", "numpy.sum", "numpy.clip", "numpy.around().astype", "weights.reshape.reshape", "numpy.sum", "inimg[].squeeze().astype", "numpy.around", "inimg[].squeeze().astype", "inimg[].squeeze", "inimg[].squeeze"], "function", ["None"], ["", "", "def", "imresizevec", "(", "inimg", ",", "weights", ",", "indices", ",", "dim", ")", ":", "\n", "    ", "wshape", "=", "weights", ".", "shape", "\n", "if", "dim", "==", "0", ":", "\n", "        ", "weights", "=", "weights", ".", "reshape", "(", "(", "wshape", "[", "0", "]", ",", "wshape", "[", "2", "]", ",", "1", ",", "1", ")", ")", "\n", "outimg", "=", "np", ".", "sum", "(", "weights", "*", "(", "(", "inimg", "[", "indices", "]", ".", "squeeze", "(", "axis", "=", "1", ")", ")", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "axis", "=", "1", ")", "\n", "", "elif", "dim", "==", "1", ":", "\n", "        ", "weights", "=", "weights", ".", "reshape", "(", "(", "1", ",", "wshape", "[", "0", "]", ",", "wshape", "[", "2", "]", ",", "1", ")", ")", "\n", "outimg", "=", "np", ".", "sum", "(", "weights", "*", "(", "(", "inimg", "[", ":", ",", "indices", "]", ".", "squeeze", "(", "axis", "=", "2", ")", ")", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "axis", "=", "2", ")", "\n", "", "if", "inimg", ".", "dtype", "==", "np", ".", "uint8", ":", "\n", "        ", "outimg", "=", "np", ".", "clip", "(", "outimg", ",", "0", ",", "255", ")", "\n", "return", "np", ".", "around", "(", "outimg", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "        ", "return", "outimg", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.imresize.resizeAlongDim": [[86, 92], ["imresize.imresizemex", "imresize.imresizevec"], "function", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.imresizemex", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.imresizevec"], ["", "", "def", "resizeAlongDim", "(", "A", ",", "dim", ",", "weights", ",", "indices", ",", "mode", "=", "\"vec\"", ")", ":", "\n", "    ", "if", "mode", "==", "\"org\"", ":", "\n", "        ", "out", "=", "imresizemex", "(", "A", ",", "weights", ",", "indices", ",", "dim", ")", "\n", "", "else", ":", "\n", "        ", "out", "=", "imresizevec", "(", "A", ",", "weights", ",", "indices", ",", "dim", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.imresize.imresize": [[93, 126], ["numpy.array", "numpy.argsort", "range", "numpy.copy", "range", "float", "imresize.deriveSizeFromScale", "imresize.contributions", "weights.append", "indices.append", "numpy.expand_dims", "imresize.resizeAlongDim", "numpy.squeeze", "imresize.deriveScaleFromSize", "list", "print"], "function", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.deriveSizeFromScale", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.contributions", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.resizeAlongDim", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.deriveScaleFromSize"], ["", "def", "imresize", "(", "I", ",", "scalar_scale", "=", "None", ",", "output_shape", "=", "None", ",", "mode", "=", "\"vec\"", ")", ":", "\n", "    ", "kernel", "=", "cubic", "\n", "kernel_width", "=", "4.0", "\n", "# Fill scale and output_size", "\n", "if", "scalar_scale", "is", "not", "None", ":", "\n", "        ", "scalar_scale", "=", "float", "(", "scalar_scale", ")", "\n", "scale", "=", "[", "scalar_scale", ",", "scalar_scale", "]", "\n", "output_size", "=", "deriveSizeFromScale", "(", "I", ".", "shape", ",", "scale", ")", "\n", "", "elif", "output_shape", "is", "not", "None", ":", "\n", "        ", "scale", "=", "deriveScaleFromSize", "(", "I", ".", "shape", ",", "output_shape", ")", "\n", "output_size", "=", "list", "(", "output_shape", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Error: scalar_scale OR output_shape should be defined!'", ")", "\n", "return", "\n", "", "scale_np", "=", "np", ".", "array", "(", "scale", ")", "\n", "order", "=", "np", ".", "argsort", "(", "scale_np", ")", "\n", "weights", "=", "[", "]", "\n", "indices", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "2", ")", ":", "\n", "        ", "w", ",", "ind", "=", "contributions", "(", "I", ".", "shape", "[", "k", "]", ",", "output_size", "[", "k", "]", ",", "scale", "[", "k", "]", ",", "kernel", ",", "kernel_width", ")", "\n", "weights", ".", "append", "(", "w", ")", "\n", "indices", ".", "append", "(", "ind", ")", "\n", "", "B", "=", "np", ".", "copy", "(", "I", ")", "\n", "flag2D", "=", "False", "\n", "if", "B", ".", "ndim", "==", "2", ":", "\n", "        ", "B", "=", "np", ".", "expand_dims", "(", "B", ",", "axis", "=", "2", ")", "\n", "flag2D", "=", "True", "\n", "", "for", "k", "in", "range", "(", "2", ")", ":", "\n", "        ", "dim", "=", "order", "[", "k", "]", "\n", "B", "=", "resizeAlongDim", "(", "B", ",", "dim", ",", "weights", "[", "dim", "]", ",", "indices", "[", "dim", "]", ",", "mode", ")", "\n", "", "if", "flag2D", ":", "\n", "        ", "B", "=", "np", ".", "squeeze", "(", "B", ",", "axis", "=", "2", ")", "\n", "", "return", "B", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.imresize.convertDouble2Byte": [[127, 131], ["numpy.clip", "numpy.around().astype", "numpy.around"], "function", ["None"], ["", "def", "convertDouble2Byte", "(", "I", ")", ":", "\n", "    ", "B", "=", "np", ".", "clip", "(", "I", ",", "0.0", ",", "1.0", ")", "\n", "B", "=", "255", "*", "B", "\n", "return", "np", ".", "around", "(", "B", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.dataloader._MSDataLoaderIter.__init__": [[56, 126], ["threading.Event", "iter", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.SimpleQueue", "torch.SimpleQueue", "torch._C._update_worker_pids", "torch._C._update_worker_pids", "torch.utils.data.dataloader._set_SIGCHLD_handler", "torch.utils.data.dataloader._set_SIGCHLD_handler", "range", "torch.Queue", "torch.Queue", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.Process", "torch.Process", "queue.Queue", "threading.Thread", "dataloader._MSDataLoaderIter.worker_manager_thread.start", "w.start", "id", "tuple", "dataloader._MSDataLoaderIter._put_indices", "range", "range", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "loader", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "loader", ".", "dataset", "\n", "self", ".", "scale", "=", "loader", ".", "scale", "\n", "self", ".", "collate_fn", "=", "loader", ".", "collate_fn", "\n", "self", ".", "batch_sampler", "=", "loader", ".", "batch_sampler", "\n", "self", ".", "num_workers", "=", "loader", ".", "num_workers", "\n", "self", ".", "pin_memory", "=", "loader", ".", "pin_memory", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "self", ".", "timeout", "=", "loader", ".", "timeout", "\n", "self", ".", "done_event", "=", "threading", ".", "Event", "(", ")", "\n", "\n", "self", ".", "sample_iter", "=", "iter", "(", "self", ".", "batch_sampler", ")", "\n", "\n", "if", "self", ".", "num_workers", ">", "0", ":", "\n", "            ", "self", ".", "worker_init_fn", "=", "loader", ".", "worker_init_fn", "\n", "self", ".", "index_queues", "=", "[", "\n", "multiprocessing", ".", "Queue", "(", ")", "for", "_", "in", "range", "(", "self", ".", "num_workers", ")", "\n", "]", "\n", "self", ".", "worker_queue_idx", "=", "0", "\n", "self", ".", "worker_result_queue", "=", "multiprocessing", ".", "SimpleQueue", "(", ")", "\n", "self", ".", "batches_outstanding", "=", "0", "\n", "self", ".", "worker_pids_set", "=", "False", "\n", "self", ".", "shutdown", "=", "False", "\n", "self", ".", "send_idx", "=", "0", "\n", "self", ".", "rcvd_idx", "=", "0", "\n", "self", ".", "reorder_dict", "=", "{", "}", "\n", "\n", "base_seed", "=", "torch", ".", "LongTensor", "(", "1", ")", ".", "random_", "(", ")", "[", "0", "]", "\n", "self", ".", "workers", "=", "[", "\n", "multiprocessing", ".", "Process", "(", "\n", "target", "=", "_ms_loop", ",", "\n", "args", "=", "(", "\n", "self", ".", "dataset", ",", "\n", "self", ".", "index_queues", "[", "i", "]", ",", "\n", "self", ".", "worker_result_queue", ",", "\n", "self", ".", "collate_fn", ",", "\n", "self", ".", "scale", ",", "\n", "base_seed", "+", "i", ",", "\n", "self", ".", "worker_init_fn", ",", "\n", "i", "\n", ")", "\n", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_workers", ")", "]", "\n", "\n", "if", "self", ".", "pin_memory", "or", "self", ".", "timeout", ">", "0", ":", "\n", "                ", "self", ".", "data_queue", "=", "queue", ".", "Queue", "(", ")", "\n", "if", "self", ".", "pin_memory", ":", "\n", "                    ", "maybe_device_id", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "", "else", ":", "\n", "# do not initialize cuda context if not necessary", "\n", "                    ", "maybe_device_id", "=", "None", "\n", "", "self", ".", "worker_manager_thread", "=", "threading", ".", "Thread", "(", "\n", "target", "=", "_worker_manager_loop", ",", "\n", "args", "=", "(", "self", ".", "worker_result_queue", ",", "self", ".", "data_queue", ",", "self", ".", "done_event", ",", "self", ".", "pin_memory", ",", "\n", "maybe_device_id", ")", ")", "\n", "self", ".", "worker_manager_thread", ".", "daemon", "=", "True", "\n", "self", ".", "worker_manager_thread", ".", "start", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "data_queue", "=", "self", ".", "worker_result_queue", "\n", "\n", "", "for", "w", "in", "self", ".", "workers", ":", "\n", "                ", "w", ".", "daemon", "=", "True", "# ensure that the worker exits on process exit", "\n", "w", ".", "start", "(", ")", "\n", "\n", "", "_update_worker_pids", "(", "id", "(", "self", ")", ",", "tuple", "(", "w", ".", "pid", "for", "w", "in", "self", ".", "workers", ")", ")", "\n", "_set_SIGCHLD_handler", "(", ")", "\n", "self", ".", "worker_pids_set", "=", "True", "\n", "\n", "# prime the prefetch loop", "\n", "for", "_", "in", "range", "(", "2", "*", "self", ".", "num_workers", ")", ":", "\n", "                ", "self", ".", "_put_indices", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.dataloader.MSDataLoader.__init__": [[128, 142], ["torch.utils.data.dataloader.DataLoader.__init__"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "args", ",", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "sampler", "=", "None", ",", "batch_sampler", "=", "None", ",", "\n", "collate_fn", "=", "default_collate", ",", "pin_memory", "=", "False", ",", "drop_last", "=", "False", ",", "\n", "timeout", "=", "0", ",", "worker_init_fn", "=", "None", ")", ":", "\n", "\n", "        ", "super", "(", "MSDataLoader", ",", "self", ")", ".", "__init__", "(", "\n", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "\n", "sampler", "=", "sampler", ",", "batch_sampler", "=", "batch_sampler", ",", "\n", "num_workers", "=", "args", ".", "n_threads", ",", "collate_fn", "=", "collate_fn", ",", "\n", "pin_memory", "=", "pin_memory", ",", "drop_last", "=", "drop_last", ",", "\n", "timeout", "=", "timeout", ",", "worker_init_fn", "=", "worker_init_fn", ")", "\n", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.dataloader.MSDataLoader.__iter__": [[143, 145], ["dataloader._MSDataLoaderIter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "_MSDataLoaderIter", "(", "self", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.dataloader._ms_loop": [[29, 54], ["torch._C._set_worker_signal_handlers", "torch.set_num_threads", "torch.set_num_threads", "torch.manual_seed", "torch.manual_seed", "index_queue.get", "collate_fn", "collate_fn.append", "data_queue.put", "random.randrange", "dataset.set_scale", "data_queue.put", "len", "len", "torch.utils.data.dataloader.ExceptionWrapper", "sys.exc_info"], "function", ["home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.set_scale"], ["", "def", "_ms_loop", "(", "dataset", ",", "index_queue", ",", "data_queue", ",", "collate_fn", ",", "scale", ",", "seed", ",", "init_fn", ",", "worker_id", ")", ":", "\n", "    ", "global", "_use_shared_memory", "\n", "_use_shared_memory", "=", "True", "\n", "_set_worker_signal_handlers", "(", ")", "\n", "\n", "torch", ".", "set_num_threads", "(", "1", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "while", "True", ":", "\n", "        ", "r", "=", "index_queue", ".", "get", "(", ")", "\n", "if", "r", "is", "None", ":", "\n", "            ", "break", "\n", "", "idx", ",", "batch_indices", "=", "r", "\n", "try", ":", "\n", "            ", "idx_scale", "=", "0", "\n", "if", "len", "(", "scale", ")", ">", "1", "and", "dataset", ".", "train", ":", "\n", "                ", "idx_scale", "=", "random", ".", "randrange", "(", "0", ",", "len", "(", "scale", ")", ")", "\n", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "samples", "=", "collate_fn", "(", "[", "dataset", "[", "i", "]", "for", "i", "in", "batch_indices", "]", ")", "\n", "samples", ".", "append", "(", "idx_scale", ")", "\n", "\n", "", "except", "Exception", ":", "\n", "            ", "data_queue", ".", "put", "(", "(", "idx", ",", "ExceptionWrapper", "(", "sys", ".", "exc_info", "(", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "data_queue", ".", "put", "(", "(", "idx", ",", "samples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.Train.template.set_template": [[1, 64], ["args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find"], "function", ["None"], ["def", "set_template", "(", "args", ")", ":", "\n", "# Set the templates here", "\n", "    ", "if", "args", ".", "template", ".", "find", "(", "'jpeg'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "data_train", "=", "'DIV2K_jpeg'", "\n", "args", ".", "data_test", "=", "'DIV2K_jpeg'", "\n", "args", ".", "epochs", "=", "200", "\n", "args", ".", "lr_decay", "=", "100", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'EDSR_paper'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'EDSR'", "\n", "args", ".", "n_resblocks", "=", "32", "\n", "args", ".", "n_feats", "=", "256", "\n", "args", ".", "res_scale", "=", "0.1", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'MDSR'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'MDSR'", "\n", "args", ".", "patch_size", "=", "48", "\n", "args", ".", "epochs", "=", "650", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'DDBPN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'DDBPN'", "\n", "args", ".", "patch_size", "=", "128", "\n", "args", ".", "scale", "=", "'4'", "\n", "\n", "args", ".", "data_test", "=", "'Set5'", "\n", "\n", "args", ".", "batch_size", "=", "20", "\n", "args", ".", "epochs", "=", "1000", "\n", "args", ".", "lr_decay", "=", "500", "\n", "args", ".", "gamma", "=", "0.1", "\n", "args", ".", "weight_decay", "=", "1e-4", "\n", "\n", "args", ".", "loss", "=", "'1*MSE'", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'GAN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "epochs", "=", "200", "\n", "args", ".", "lr", "=", "5e-5", "\n", "args", ".", "lr_decay", "=", "150", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'RCAN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'RCAN'", "\n", "args", ".", "n_resgroups", "=", "1", "\n", "args", ".", "n_resblocks", "=", "1", "\n", "args", ".", "n_feats", "=", "64", "\n", "args", ".", "chop", "=", "True", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'MSRN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'MSRN'", "\n", "args", ".", "n_blocks", "=", "8", "\n", "args", ".", "n_feats", "=", "64", "\n", "args", ".", "chop", "=", "True", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'MDRN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'MDRN'", "\n", "args", ".", "chop", "=", "True", "\n", "args", ".", "n_feats", "=", "64", "\n", "args", ".", "n_blocks", "=", "8", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'TSAN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'TSAN'", "\n", "args", ".", "chop", "=", "True", "\n", "args", ".", "n_feats", "=", "64", "\n", "args", ".", "n_blocks", "=", "8", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.edsr.EDSR.__init__": [[13, 51], ["torch.Module.__init__", "print", "torch.ReLU", "model.common.MeanShift", "m_body.append", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "model.common.ResBlock", "conv", "model.common.Upsampler", "torch.Conv2d", "range"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "EDSR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'using edsr'", ")", "\n", "n_resblock", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "# define head module", "\n", "m_head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "# define body module", "\n", "m_body", "=", "[", "\n", "common", ".", "ResBlock", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", "\n", ")", "for", "_", "in", "range", "(", "n_resblock", ")", "\n", "]", "\n", "m_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "# define tail module", "\n", "m_tail", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", "\n", ")", "\n", "]", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "m_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "m_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.edsr.EDSR.forward": [[52, 63], ["edsr.EDSR.sub_mean", "edsr.EDSR.head", "edsr.EDSR.body", "edsr.EDSR.tail", "edsr.EDSR.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.edsr.EDSR.load_state_dict": [[64, 82], ["edsr.EDSR.state_dict", "state_dict.items", "isinstance", "own_state[].copy_", "name.find", "KeyError", "name.find", "RuntimeError", "own_state[].size", "param.size"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", "=", "True", ")", ":", "\n", "        ", "own_state", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "own_state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "try", ":", "\n", "                    ", "own_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                        ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the model are {} and '", "\n", "'whose dimensions in the checkpoint are {}.'", "\n", ".", "format", "(", "name", ",", "own_state", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "", "", "", "elif", "strict", ":", "\n", "                ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                    ", "raise", "KeyError", "(", "'unexpected key \"{}\" in state_dict'", "\n", ".", "format", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.edsr.make_model": [[5, 11], ["edsr.EDSR", "edsr.EDSR"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "if", "args", ".", "dilation", ":", "\n", "        ", "from", "model", "import", "dilated", "\n", "return", "EDSR", "(", "args", ",", "dilated", ".", "dilated_conv", ")", "\n", "", "else", ":", "\n", "        ", "return", "EDSR", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.rcan.CALayer.__init__": [[12, 22], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "channel", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", "//", "reduction", ",", "channel", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.rcan.CALayer.forward": [[24, 28], ["rcan.CALayer.avg_pool", "rcan.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.rcan.RCAB.__init__": [[31, 44], ["torch.ReLU", "torch.Module.__init__", "range", "modules_body.append", "torch.Sequential", "modules_body.append", "rcan.CALayer", "conv", "modules_body.append", "modules_body.append", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "RCAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "modules_body", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "modules_body", ".", "append", "(", "act", ")", "\n", "", "modules_body", ".", "append", "(", "CALayer", "(", "n_feat", ",", "reduction", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.rcan.RCAB.forward": [[45, 50], ["rcan.RCAB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "#res = self.body(x).mul(self.res_scale)", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.rcan.ResidualGroup.__init__": [[53, 62], ["torch.Module.__init__", "modules_body.append", "torch.Sequential", "rcan.RCAB", "conv", "range", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "res_scale", ",", "n_resblocks", ")", ":", "\n", "        ", "super", "(", "ResidualGroup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", "=", "[", "\n", "RCAB", "(", "\n", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", "for", "_", "in", "range", "(", "n_resblocks", ")", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.rcan.ResidualGroup.forward": [[63, 67], ["rcan.ResidualGroup.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.rcan.RCAN.__init__": [[70, 107], ["torch.Module.__init__", "print", "torch.ReLU", "model.common.MeanShift", "modules_body.append", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "rcan.ResidualGroup", "conv", "model.common.Upsampler", "conv", "range"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "RCAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'using rcan1'", ")", "\n", "n_resgroups", "=", "args", ".", "n_resgroups", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "reduction", "=", "args", ".", "reduction", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# RGB mean for DIV2K", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "# define head module", "\n", "modules_head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "# define body module", "\n", "modules_body", "=", "[", "\n", "ResidualGroup", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "reduction", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", ",", "n_resblocks", "=", "n_resblocks", ")", "for", "_", "in", "range", "(", "n_resgroups", ")", "]", "\n", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "# define tail module", "\n", "modules_tail", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "modules_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "modules_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.rcan.RCAN.forward": [[108, 119], ["rcan.RCAN.sub_mean", "rcan.RCAN.head", "rcan.RCAN.body", "rcan.RCAN.tail", "rcan.RCAN.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.rcan.RCAN.load_state_dict": [[120, 145], ["rcan.RCAN.state_dict", "state_dict.items", "isinstance", "set", "set", "len", "KeyError", "own_state[].copy_", "rcan.RCAN.keys", "state_dict.keys", "name.find", "KeyError", "name.find", "print", "RuntimeError", "own_state[].size", "param.size"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", "=", "False", ")", ":", "\n", "        ", "own_state", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "own_state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "try", ":", "\n", "                    ", "own_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "if", "name", ".", "find", "(", "'tail'", ")", ">=", "0", ":", "\n", "                        ", "print", "(", "'Replace pre-trained upsampler to new one...'", ")", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the model are {} and '", "\n", "'whose dimensions in the checkpoint are {}.'", "\n", ".", "format", "(", "name", ",", "own_state", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "", "", "", "elif", "strict", ":", "\n", "                ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                    ", "raise", "KeyError", "(", "'unexpected key \"{}\" in state_dict'", "\n", ".", "format", "(", "name", ")", ")", "\n", "\n", "", "", "", "if", "strict", ":", "\n", "            ", "missing", "=", "set", "(", "own_state", ".", "keys", "(", ")", ")", "-", "set", "(", "state_dict", ".", "keys", "(", ")", ")", "\n", "if", "len", "(", "missing", ")", ">", "0", ":", "\n", "                ", "raise", "KeyError", "(", "'missing keys in state_dict: \"{}\"'", ".", "format", "(", "missing", ")", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.rcan.make_model": [[7, 9], ["rcan.RCAN"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "RCAN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.BasicConv.__init__": [[7, 13], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "relu", "=", "True", ",", "bn", "=", "True", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "BasicConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "out_channels", "=", "out_planes", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ")", "if", "bn", "else", "None", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "if", "relu", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.BasicConv.forward": [[14, 21], ["cbam.BasicConv.conv", "cbam.BasicConv.bn", "cbam.BasicConv.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "if", "self", ".", "bn", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "", "if", "self", ".", "relu", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.Flatten.forward": [[23, 25], ["x.view", "x.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.ChannelGate.__init__": [[27, 37], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "cbam.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gate_channels", ",", "reduction_ratio", "=", "16", ",", "pool_types", "=", "[", "'avg'", ",", "'max'", "]", ")", ":", "\n", "        ", "super", "(", "ChannelGate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gate_channels", "=", "gate_channels", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "gate_channels", ",", "gate_channels", "//", "reduction_ratio", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "gate_channels", "//", "reduction_ratio", ",", "gate_channels", ")", "\n", ")", "\n", "self", ".", "pool_types", "=", "pool_types", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.ChannelGate.forward": [[37, 61], ["torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "cbam.ChannelGate.mlp", "torch.sigmoid().unsqueeze().unsqueeze", "torch.sigmoid().unsqueeze().unsqueeze", "torch.sigmoid().unsqueeze().unsqueeze", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "cbam.ChannelGate.mlp", "x.size", "x.size", "torch.lp_pool2d", "torch.lp_pool2d", "torch.lp_pool2d", "cbam.ChannelGate.mlp", "torch.sigmoid().unsqueeze", "torch.sigmoid().unsqueeze", "torch.sigmoid().unsqueeze", "x.size", "x.size", "x.size", "x.size", "cbam.logsumexp_2d", "cbam.ChannelGate.mlp", "x.size", "x.size", "x.size", "x.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.size", "x.size"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.logsumexp_2d"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "channel_att_sum", "=", "None", "\n", "for", "pool_type", "in", "self", ".", "pool_types", ":", "\n", "            ", "if", "pool_type", "==", "'avg'", ":", "\n", "                ", "avg_pool", "=", "F", ".", "avg_pool2d", "(", "x", ",", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "stride", "=", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ")", "\n", "channel_att_raw", "=", "self", ".", "mlp", "(", "avg_pool", ")", "\n", "", "elif", "pool_type", "==", "'max'", ":", "\n", "                ", "max_pool", "=", "F", ".", "max_pool2d", "(", "x", ",", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "stride", "=", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ")", "\n", "channel_att_raw", "=", "self", ".", "mlp", "(", "max_pool", ")", "\n", "", "elif", "pool_type", "==", "'lp'", ":", "\n", "                ", "lp_pool", "=", "F", ".", "lp_pool2d", "(", "x", ",", "2", ",", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "stride", "=", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ")", "\n", "channel_att_raw", "=", "self", ".", "mlp", "(", "lp_pool", ")", "\n", "", "elif", "pool_type", "==", "'lse'", ":", "\n", "# LSE pool only", "\n", "                ", "lse_pool", "=", "logsumexp_2d", "(", "x", ")", "\n", "channel_att_raw", "=", "self", ".", "mlp", "(", "lse_pool", ")", "\n", "\n", "", "if", "channel_att_sum", "is", "None", ":", "\n", "                ", "channel_att_sum", "=", "channel_att_raw", "\n", "", "else", ":", "\n", "                ", "channel_att_sum", "=", "channel_att_sum", "+", "channel_att_raw", "\n", "\n", "", "", "scale", "=", "F", ".", "sigmoid", "(", "channel_att_sum", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "\n", "return", "x", "*", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.ChannelPool.forward": [[69, 71], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "[].unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "(", "torch", ".", "max", "(", "x", ",", "1", ")", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ",", "torch", ".", "mean", "(", "x", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.SpatialGate.__init__": [[73, 78], ["torch.Module.__init__", "cbam.ChannelPool", "cbam.BasicConv"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "SpatialGate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "kernel_size", "=", "7", "\n", "self", ".", "compress", "=", "ChannelPool", "(", ")", "\n", "self", ".", "spatial", "=", "BasicConv", "(", "2", ",", "1", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "relu", "=", "False", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.SpatialGate.forward": [[78, 83], ["cbam.SpatialGate.compress", "cbam.SpatialGate.spatial", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_compress", "=", "self", ".", "compress", "(", "x", ")", "\n", "x_out", "=", "self", ".", "spatial", "(", "x_compress", ")", "\n", "scale", "=", "F", ".", "sigmoid", "(", "x_out", ")", "# broadcasting", "\n", "return", "x", "*", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.CBAM.__init__": [[85, 91], ["torch.Module.__init__", "cbam.ChannelGate", "cbam.SpatialGate"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gate_channels", ",", "reduction_ratio", "=", "16", ",", "pool_types", "=", "[", "'avg'", ",", "'max'", "]", ",", "no_spatial", "=", "False", ")", ":", "\n", "        ", "super", "(", "CBAM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ChannelGate", "=", "ChannelGate", "(", "gate_channels", ",", "reduction_ratio", ",", "pool_types", ")", "\n", "self", ".", "no_spatial", "=", "no_spatial", "\n", "if", "not", "no_spatial", ":", "\n", "            ", "self", ".", "SpatialGate", "=", "SpatialGate", "(", ")", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.CBAM.forward": [[91, 96], ["cbam.CBAM.ChannelGate", "cbam.CBAM.SpatialGate"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "self", ".", "ChannelGate", "(", "x", ")", "\n", "if", "not", "self", ".", "no_spatial", ":", "\n", "            ", "x_out", "=", "self", ".", "SpatialGate", "(", "x_out", ")", "\n", "", "return", "x_out", "", "", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.cbam.logsumexp_2d": [[62, 67], ["tensor.view", "torch.max", "torch.max", "torch.max", "tensor.size", "tensor.size"], "function", ["None"], ["", "", "def", "logsumexp_2d", "(", "tensor", ")", ":", "\n", "    ", "tensor_flatten", "=", "tensor", ".", "view", "(", "tensor", ".", "size", "(", "0", ")", ",", "tensor", ".", "size", "(", "1", ")", ",", "-", "1", ")", "\n", "s", ",", "_", "=", "torch", ".", "max", "(", "tensor_flatten", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "outputs", "=", "s", "+", "(", "tensor_flatten", "-", "s", ")", ".", "exp", "(", ")", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", ".", "log", "(", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.MeanShift.__init__": [[15, 23], ["torch.Conv2d.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "common626.MeanShift.weight.data.div_", "common626.MeanShift.bias.data.div_", "torch.Tensor.view", "torch.Tensor.view", "torch.Tensor.view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "sign", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "MeanShift", ",", "self", ")", ".", "__init__", "(", "3", ",", "3", ",", "kernel_size", "=", "1", ")", "\n", "std", "=", "torch", ".", "Tensor", "(", "rgb_std", ")", "\n", "self", ".", "weight", ".", "data", "=", "torch", ".", "eye", "(", "3", ")", ".", "view", "(", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "weight", ".", "data", ".", "div_", "(", "std", ".", "view", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bias", ".", "data", "=", "sign", "*", "rgb_range", "*", "torch", ".", "Tensor", "(", "rgb_mean", ")", "\n", "self", ".", "bias", ".", "data", ".", "div_", "(", "std", ")", "\n", "self", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.BasicBlock.__init__": [[25, 36], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "bias", "=", "False", ",", "\n", "bn", "=", "True", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "\n", "        ", "m", "=", "[", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ")", "\n", "]", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", "\n", "if", "act", "is", "not", "None", ":", "m", ".", "append", "(", "act", ")", "\n", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.ResBlock.__init__": [[106, 119], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "m.append", "conv", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "m", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "m", ".", "append", "(", "act", ")", "\n", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.ResBlock.forward": [[120, 125], ["common626.ResBlock.body().mul", "common626.ResBlock.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", ".", "mul", "(", "self", ".", "res_scale", ")", "\n", "res", "+=", "x", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.Upsampler.__init__": [[60, 87], ["torch.Sequential.__init__", "range", "int", "m.append", "m.append", "m.append", "m.append", "math.log", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "m.append", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "scale", ",", "n_feats", ",", "bn", "=", "False", ",", "act", "=", "False", ",", "bias", "=", "True", ")", ":", "\n", "\n", "        ", "m", "=", "[", "]", "\n", "if", "(", "scale", "&", "(", "scale", "-", "1", ")", ")", "==", "0", ":", "# Is scale = 2^n?", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "m", ".", "append", "(", "conv", "(", "n_feats", ",", "4", "*", "n_feats", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feats", ")", ")", "\n", "\n", "if", "act", "==", "'relu'", ":", "\n", "                    ", "m", ".", "append", "(", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "", "elif", "act", "==", "'prelu'", ":", "\n", "                    ", "m", ".", "append", "(", "nn", ".", "PReLU", "(", "n_feats", ")", ")", "\n", "\n", "", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feats", ",", "9", "*", "n_feats", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "3", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feats", ")", ")", "\n", "\n", "if", "act", "==", "'relu'", ":", "\n", "                ", "m", ".", "append", "(", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "", "elif", "act", "==", "'prelu'", ":", "\n", "                ", "m", ".", "append", "(", "nn", ".", "PReLU", "(", "n_feats", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "super", "(", "Upsampler", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.TrunkBranch.__init__": [[90, 99], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_body.append", "common626.ResBlock", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "TrunkBranch", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "modules_body", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.TrunkBranch.forward": [[100, 104], ["common626.TrunkBranch.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tx", "=", "self", ".", "body", "(", "x", ")", "\n", "\n", "return", "tx", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.NonLocalBlock2D.__init__": [[127, 145], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "inter_channels", ")", ":", "\n", "        ", "super", "(", "NonLocalBlock2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "inter_channels", "=", "inter_channels", "\n", "\n", "self", ".", "g", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "in_channels", ",", "out_channels", "=", "self", ".", "inter_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "W", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "inter_channels", ",", "out_channels", "=", "self", ".", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "# for pytorch 0.3.1", "\n", "#nn.init.constant(self.W.weight, 0)", "\n", "#nn.init.constant(self.W.bias, 0)", "\n", "# for pytorch 0.4.0", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "W", ".", "weight", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "W", ".", "bias", ",", "0", ")", "\n", "self", ".", "theta", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "in_channels", ",", "out_channels", "=", "self", ".", "inter_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "phi", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "in_channels", ",", "out_channels", "=", "self", ".", "inter_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.NonLocalBlock2D.forward": [[146, 174], ["x.size", "common626.NonLocalBlock2D.g().view", "g_x.permute.permute.permute", "common626.NonLocalBlock2D.theta().view", "theta_x.permute.permute.permute", "common626.NonLocalBlock2D.phi().view", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.softmax", "torch.softmax", "torch.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "y.view.view.permute().contiguous", "y.view.view.view", "common626.NonLocalBlock2D.W", "common626.NonLocalBlock2D.g", "common626.NonLocalBlock2D.theta", "common626.NonLocalBlock2D.phi", "y.view.view.permute", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "g_x", "=", "self", ".", "g", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "inter_channels", ",", "-", "1", ")", "\n", "\n", "g_x", "=", "g_x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "theta_x", "=", "self", ".", "theta", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "inter_channels", ",", "-", "1", ")", "\n", "\n", "theta_x", "=", "theta_x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "phi_x", "=", "self", ".", "phi", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "inter_channels", ",", "-", "1", ")", "\n", "\n", "f", "=", "torch", ".", "matmul", "(", "theta_x", ",", "phi_x", ")", "\n", "\n", "f_div_C", "=", "F", ".", "softmax", "(", "f", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "y", "=", "torch", ".", "matmul", "(", "f_div_C", ",", "g_x", ")", "\n", "\n", "y", "=", "y", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "\n", "y", "=", "y", ".", "view", "(", "batch_size", ",", "self", ".", "inter_channels", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "W_y", "=", "self", ".", "W", "(", "y", ")", "\n", "z", "=", "W_y", "+", "x", "\n", "\n", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.NLMaskBranchDownUp.__init__": [[176, 212], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "MB_RB1.append", "MB_RB1.append", "MB_Down.append", "range", "MB_Up.append", "MB_RB3.append", "MB_1x1conv.append", "MB_sigmoid.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "common626.NonLocalBlock2D", "common626.ResBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "MB_RB2.append", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "common626.ResBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "common626.ResBlock", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "NLMaskBranchDownUp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "MB_RB1", "=", "[", "]", "\n", "MB_RB1", ".", "append", "(", "NonLocalBlock2D", "(", "n_feat", ",", "n_feat", "//", "2", ")", ")", "\n", "MB_RB1", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "MB_Down", "=", "[", "]", "\n", "MB_Down", ".", "append", "(", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", "\n", "\n", "MB_RB2", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "MB_RB2", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "", "MB_Up", "=", "[", "]", "\n", "MB_Up", ".", "append", "(", "nn", ".", "ConvTranspose2d", "(", "n_feat", ",", "n_feat", ",", "6", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", ")", "\n", "\n", "MB_RB3", "=", "[", "]", "\n", "MB_RB3", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "MB_1x1conv", "=", "[", "]", "\n", "MB_1x1conv", ".", "append", "(", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n", "MB_sigmoid", "=", "[", "]", "\n", "MB_sigmoid", ".", "append", "(", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "self", ".", "MB_RB1", "=", "nn", ".", "Sequential", "(", "*", "MB_RB1", ")", "\n", "self", ".", "MB_Down", "=", "nn", ".", "Sequential", "(", "*", "MB_Down", ")", "\n", "self", ".", "MB_RB2", "=", "nn", ".", "Sequential", "(", "*", "MB_RB2", ")", "\n", "self", ".", "MB_Up", "=", "nn", ".", "Sequential", "(", "*", "MB_Up", ")", "\n", "self", ".", "MB_RB3", "=", "nn", ".", "Sequential", "(", "*", "MB_RB3", ")", "\n", "self", ".", "MB_1x1conv", "=", "nn", ".", "Sequential", "(", "*", "MB_1x1conv", ")", "\n", "self", ".", "MB_sigmoid", "=", "nn", ".", "Sequential", "(", "*", "MB_sigmoid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.NLMaskBranchDownUp.forward": [[213, 224], ["common626.NLMaskBranchDownUp.MB_RB1", "common626.NLMaskBranchDownUp.MB_Down", "common626.NLMaskBranchDownUp.MB_RB2", "common626.NLMaskBranchDownUp.MB_Up", "common626.NLMaskBranchDownUp.MB_RB3", "common626.NLMaskBranchDownUp.MB_1x1conv", "common626.NLMaskBranchDownUp.MB_sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_RB1", "=", "self", ".", "MB_RB1", "(", "x", ")", "\n", "x_Down", "=", "self", ".", "MB_Down", "(", "x_RB1", ")", "\n", "x_RB2", "=", "self", ".", "MB_RB2", "(", "x_Down", ")", "\n", "x_Up", "=", "self", ".", "MB_Up", "(", "x_RB2", ")", "\n", "x_preRB3", "=", "x_RB1", "+", "x_Up", "\n", "x_RB3", "=", "self", ".", "MB_RB3", "(", "x_preRB3", ")", "\n", "x_1x1", "=", "self", ".", "MB_1x1conv", "(", "x_RB3", ")", "\n", "mx", "=", "self", ".", "MB_sigmoid", "(", "x_1x1", ")", "\n", "\n", "return", "mx", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.NLResAttModuleDownUpPlus.__init__": [[226, 244], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "RA_RB1.append", "RA_TB.append", "RA_MB.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "common626.ResBlock", "common626.TrunkBranch", "common626.NLMaskBranchDownUp", "RA_tail.append", "common626.ResBlock", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "        ", "super", "(", "NLResAttModuleDownUpPlus", ",", "self", ")", ".", "__init__", "(", ")", "\n", "RA_RB1", "=", "[", "]", "\n", "RA_RB1", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "RA_TB", "=", "[", "]", "\n", "RA_TB", ".", "append", "(", "TrunkBranch", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "RA_MB", "=", "[", "]", "\n", "RA_MB", ".", "append", "(", "NLMaskBranchDownUp", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "RA_tail", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "RA_tail", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "", "self", ".", "RA_RB1", "=", "nn", ".", "Sequential", "(", "*", "RA_RB1", ")", "\n", "self", ".", "RA_TB", "=", "nn", ".", "Sequential", "(", "*", "RA_TB", ")", "\n", "self", ".", "RA_MB", "=", "nn", ".", "Sequential", "(", "*", "RA_MB", ")", "\n", "self", ".", "RA_tail", "=", "nn", ".", "Sequential", "(", "*", "RA_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.NLResAttModuleDownUpPlus.forward": [[245, 254], ["common626.NLResAttModuleDownUpPlus.RA_RB1", "common626.NLResAttModuleDownUpPlus.RA_TB", "common626.NLResAttModuleDownUpPlus.RA_MB", "common626.NLResAttModuleDownUpPlus.RA_tail"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "RA_RB1_x", "=", "self", ".", "RA_RB1", "(", "input", ")", "\n", "tx", "=", "self", ".", "RA_TB", "(", "RA_RB1_x", ")", "\n", "mx", "=", "self", ".", "RA_MB", "(", "RA_RB1_x", ")", "\n", "txmx", "=", "tx", "*", "mx", "\n", "hx", "=", "txmx", "+", "RA_RB1_x", "\n", "hx", "=", "self", ".", "RA_tail", "(", "hx", ")", "\n", "\n", "return", "hx", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common626.default_conv": [[9, 13], ["torch.Conv2d"], "function", ["None"], ["def", "default_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.HWHW_Module.__init__": [[16, 26], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", "HWHW_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chanel_in", "=", "in_dim", "\n", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.HWHW_Module.forward": [[26, 46], ["x.size", "common.HWHW_Module.query_conv().view().permute", "common.HWHW_Module.key_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "common.HWHW_Module.sigmoid", "common.HWHW_Module.value_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.view.view.view", "common.HWHW_Module.permute", "common.HWHW_Module.query_conv().view", "common.HWHW_Module.key_conv", "common.HWHW_Module.value_conv", "common.HWHW_Module.query_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X H X W)\n            returns :\n                out : attention value + input feature\n                attention: B X (HxW) X (HxW)\n        \"\"\"", "\n", "m_batchsize", ",", "C", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "proj_query", "=", "self", ".", "query_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "proj_key", "=", "self", ".", "key_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", "\n", "energy", "=", "torch", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "\n", "attention", "=", "self", ".", "sigmoid", "(", "energy", ")", "\n", "proj_value", "=", "self", ".", "value_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "proj_value", ",", "attention", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "m_batchsize", ",", "C", ",", "height", ",", "width", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.CC_Module.__init__": [[50, 55], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", "CC_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chanel_in", "=", "in_dim", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.CC_Module.forward": [[55, 76], ["x.size", "x.view", "x.view().permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "common.CC_Module.sigmoid", "x.view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.view.view.view", "[].expand_as", "x.view", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X H X W)\n            returns :\n                out : attention value + input feature\n                attention: B X C X C\n        \"\"\"", "\n", "m_batchsize", ",", "C", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "proj_query", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", ",", "-", "1", ")", "\n", "proj_key", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "energy", "=", "torch", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "\n", "energy_new", "=", "torch", ".", "max", "(", "energy", ",", "-", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", ".", "expand_as", "(", "energy", ")", "-", "energy", "\n", "attention", "=", "self", ".", "sigmoid", "(", "energy_new", ")", "\n", "proj_value", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", ",", "-", "1", ")", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "attention", ",", "proj_value", ")", "\n", "out", "=", "out", ".", "view", "(", "m_batchsize", ",", "C", ",", "height", ",", "width", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.HH_Module.__init__": [[79, 88], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", "HH_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chanel_in", "=", "in_dim", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.HH_Module.forward": [[88, 108], ["x.size", "common.HH_Module.query_conv().view().permute", "common.HH_Module.key_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "common.HH_Module.sigmoid", "common.HH_Module.value_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.view.view.view", "common.HH_Module.permute", "common.HH_Module.query_conv().view", "common.HH_Module.key_conv", "common.HH_Module.value_conv", "common.HH_Module.query_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X H X W)\n            returns :\n                out : attention value + input feature\n                attention: B X (H) X (H)\n        \"\"\"", "\n", "m_batchsize", ",", "C", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "proj_query", "=", "self", ".", "query_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "height", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "proj_key", "=", "self", ".", "key_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "height", ")", "\n", "energy", "=", "torch", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "\n", "attention", "=", "self", ".", "sigmoid", "(", "energy", ")", "\n", "proj_value", "=", "self", ".", "value_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "height", ")", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "proj_value", ",", "attention", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "m_batchsize", ",", "C", ",", "height", ",", "width", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.WW_Module.__init__": [[110, 119], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", "WW_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chanel_in", "=", "in_dim", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.WW_Module.forward": [[119, 139], ["x.size", "common.WW_Module.query_conv().view().permute", "common.WW_Module.key_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "common.WW_Module.sigmoid", "common.WW_Module.value_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.view.view.view", "common.WW_Module.permute", "common.WW_Module.query_conv().view", "common.WW_Module.key_conv", "common.WW_Module.value_conv", "common.WW_Module.query_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X H X W)\n            returns :\n                out : attention value + input feature\n                attention: B X (W) X (W)\n        \"\"\"", "\n", "m_batchsize", ",", "C", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "proj_query", "=", "self", ".", "query_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "proj_key", "=", "self", ".", "key_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", ")", "\n", "energy", "=", "torch", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "\n", "attention", "=", "self", ".", "sigmoid", "(", "energy", ")", "\n", "proj_value", "=", "self", ".", "value_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", ")", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "proj_value", ",", "attention", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "m_batchsize", ",", "C", ",", "height", ",", "width", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.CHCH_Module.__init__": [[142, 147], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", "CHCH_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chanel_in", "=", "in_dim", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.CHCH_Module.forward": [[147, 168], ["x.size", "x.view", "x.view().permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "common.CHCH_Module.sigmoid", "x.view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.view.view.view", "[].expand_as", "x.view", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X H X W)\n            returns :\n                out : attention value + input feature\n                attention: B X CH X CH\n        \"\"\"", "\n", "m_batchsize", ",", "C", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "proj_query", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", "*", "height", ",", "-", "1", ")", "\n", "proj_key", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", "*", "height", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "energy", "=", "torch", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "\n", "energy_new", "=", "torch", ".", "max", "(", "energy", ",", "-", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", ".", "expand_as", "(", "energy", ")", "-", "energy", "\n", "attention", "=", "self", ".", "sigmoid", "(", "energy_new", ")", "\n", "proj_value", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", "*", "height", ",", "-", "1", ")", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "attention", ",", "proj_value", ")", "\n", "out", "=", "out", ".", "view", "(", "m_batchsize", ",", "C", ",", "height", ",", "width", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.CWCW_Module.__init__": [[171, 176], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", "CWCW_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chanel_in", "=", "in_dim", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.CWCW_Module.forward": [[176, 197], ["x.size", "x.view", "x.view().permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "common.CWCW_Module.sigmoid", "x.view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.view.view.view", "[].expand_as", "x.view", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X H X W)\n            returns :\n                out : attention value + input feature\n                attention: B X CW X CW\n        \"\"\"", "\n", "m_batchsize", ",", "C", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "proj_query", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", "*", "width", ",", "-", "1", ")", "\n", "proj_key", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", "*", "width", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "energy", "=", "torch", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "\n", "energy_new", "=", "torch", ".", "max", "(", "energy", ",", "-", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", ".", "expand_as", "(", "energy", ")", "-", "energy", "\n", "attention", "=", "self", ".", "sigmoid", "(", "energy_new", ")", "\n", "proj_value", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", "*", "width", ",", "-", "1", ")", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "attention", ",", "proj_value", ")", "\n", "out", "=", "out", ".", "view", "(", "m_batchsize", ",", "C", ",", "height", ",", "width", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.ChannelAttention.__init__": [[199, 209], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "ratio", "=", "16", ")", ":", "\n", "        ", "super", "(", "ChannelAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "# self.max_pool = nn.AdaptiveMaxPool2d(1)", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "in_planes", "//", "16", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Conv2d", "(", "in_planes", "//", "16", ",", "in_planes", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.ChannelAttention.forward": [[210, 215], ["common.ChannelAttention.fc2", "common.ChannelAttention.sigmoid", "common.ChannelAttention.relu1", "common.ChannelAttention.fc1", "common.ChannelAttention.avg_pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "avg_out", "=", "self", ".", "fc2", "(", "self", ".", "relu1", "(", "self", ".", "fc1", "(", "self", ".", "avg_pool", "(", "x", ")", ")", ")", ")", "\n", "# max_out = self.fc2(self.relu1(self.fc1(self.max_pool(x))))", "\n", "out", "=", "avg_out", "#+ max_out", "\n", "return", "self", ".", "sigmoid", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.RowAttention.__init__": [[217, 225], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "kernel_size", "=", "7", ")", ":", "\n", "        ", "super", "(", "RowAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "kernel_size", "in", "(", "3", ",", "7", ")", ",", "'kernel size must be 3 or 7'", "\n", "padding", "=", "3", "if", "kernel_size", "==", "7", "else", "1", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "kernel_size", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.RowAttention.forward": [[226, 230], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "common.RowAttention.conv1", "common.RowAttention.sigmoid", "common.RowAttention.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "avg_out", "=", "torch", ".", "mean", "(", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "x", "=", "self", ".", "conv1", "(", "avg_out", ")", "\n", "return", "self", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.ColumnAttention.__init__": [[232, 240], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "kernel_size", "=", "7", ")", ":", "\n", "        ", "super", "(", "ColumnAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "kernel_size", "in", "(", "3", ",", "7", ")", ",", "'kernel size must be 3 or 7'", "\n", "padding", "=", "3", "if", "kernel_size", "==", "7", "else", "1", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "kernel_size", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.ColumnAttention.forward": [[241, 245], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "common.ColumnAttention.conv1", "common.ColumnAttention.sigmoid", "common.ColumnAttention.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "avg_out", "=", "torch", ".", "mean", "(", "x", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "x", "=", "self", ".", "conv1", "(", "avg_out", ")", "\n", "return", "self", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.MeanShift.__init__": [[247, 255], ["torch.Conv2d.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "common.MeanShift.weight.data.div_", "common.MeanShift.bias.data.div_", "torch.Tensor.view", "torch.Tensor.view", "torch.Tensor.view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "sign", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "MeanShift", ",", "self", ")", ".", "__init__", "(", "3", ",", "3", ",", "kernel_size", "=", "1", ")", "\n", "std", "=", "torch", ".", "Tensor", "(", "rgb_std", ")", "\n", "self", ".", "weight", ".", "data", "=", "torch", ".", "eye", "(", "3", ")", ".", "view", "(", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "weight", ".", "data", ".", "div_", "(", "std", ".", "view", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bias", ".", "data", "=", "sign", "*", "rgb_range", "*", "torch", ".", "Tensor", "(", "rgb_mean", ")", "\n", "self", ".", "bias", ".", "data", ".", "div_", "(", "std", ")", "\n", "self", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.BasicBlock.__init__": [[257, 268], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "bias", "=", "False", ",", "\n", "bn", "=", "True", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "\n", "        ", "m", "=", "[", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ")", "\n", "]", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", "\n", "if", "act", "is", "not", "None", ":", "m", ".", "append", "(", "act", ")", "\n", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.ResBlock.__init__": [[270, 283], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "m.append", "conv", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "m", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "m", ".", "append", "(", "act", ")", "\n", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.ResBlock.forward": [[284, 289], ["common.ResBlock.body().mul", "common.ResBlock.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", ".", "mul", "(", "self", ".", "res_scale", ")", "\n", "res", "+=", "x", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.Upsampler.__init__": [[291, 309], ["torch.Sequential.__init__", "range", "int", "m.append", "m.append", "m.append", "m.append", "math.log", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "act", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "act"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.act", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.act"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "scale", ",", "n_feat", ",", "bn", "=", "False", ",", "act", "=", "False", ",", "bias", "=", "True", ")", ":", "\n", "\n", "        ", "m", "=", "[", "]", "\n", "if", "(", "scale", "&", "(", "scale", "-", "1", ")", ")", "==", "0", ":", "# Is scale = 2^n?", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "4", "*", "n_feat", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "act", ":", "m", ".", "append", "(", "act", "(", ")", ")", "\n", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "9", "*", "n_feat", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "3", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "act", ":", "m", ".", "append", "(", "act", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "super", "(", "Upsampler", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.NonLocalBlock2D.__init__": [[314, 332], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "inter_channels", ")", ":", "\n", "        ", "super", "(", "NonLocalBlock2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "inter_channels", "=", "inter_channels", "\n", "\n", "self", ".", "g", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "in_channels", ",", "out_channels", "=", "self", ".", "inter_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "W", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "inter_channels", ",", "out_channels", "=", "self", ".", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "# for pytorch 0.3.1", "\n", "#nn.init.constant(self.W.weight, 0)", "\n", "#nn.init.constant(self.W.bias, 0)", "\n", "# for pytorch 0.4.0", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "W", ".", "weight", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "W", ".", "bias", ",", "0", ")", "\n", "self", ".", "theta", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "in_channels", ",", "out_channels", "=", "self", ".", "inter_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "phi", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "in_channels", ",", "out_channels", "=", "self", ".", "inter_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.NonLocalBlock2D.forward": [[333, 361], ["x.size", "common.NonLocalBlock2D.g().view", "g_x.permute.permute.permute", "common.NonLocalBlock2D.theta().view", "theta_x.permute.permute.permute", "common.NonLocalBlock2D.phi().view", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.softmax", "torch.softmax", "torch.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "y.view.view.permute().contiguous", "y.view.view.view", "common.NonLocalBlock2D.W", "common.NonLocalBlock2D.g", "common.NonLocalBlock2D.theta", "common.NonLocalBlock2D.phi", "y.view.view.permute", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "g_x", "=", "self", ".", "g", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "inter_channels", ",", "-", "1", ")", "\n", "\n", "g_x", "=", "g_x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "theta_x", "=", "self", ".", "theta", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "inter_channels", ",", "-", "1", ")", "\n", "\n", "theta_x", "=", "theta_x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "phi_x", "=", "self", ".", "phi", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "inter_channels", ",", "-", "1", ")", "\n", "\n", "f", "=", "torch", ".", "matmul", "(", "theta_x", ",", "phi_x", ")", "\n", "\n", "f_div_C", "=", "F", ".", "softmax", "(", "f", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "y", "=", "torch", ".", "matmul", "(", "f_div_C", ",", "g_x", ")", "\n", "\n", "y", "=", "y", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "\n", "y", "=", "y", ".", "view", "(", "batch_size", ",", "self", ".", "inter_channels", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "W_y", "=", "self", ".", "W", "(", "y", ")", "\n", "z", "=", "W_y", "+", "x", "\n", "\n", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.TrunkBranch.__init__": [[365, 374], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_body.append", "common.ResBlock", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "TrunkBranch", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "modules_body", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.TrunkBranch.forward": [[375, 379], ["common.TrunkBranch.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tx", "=", "self", ".", "body", "(", "x", ")", "\n", "\n", "return", "tx", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.MaskBranchDownUp.__init__": [[384, 419], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "MB_RB1.append", "MB_Down.append", "range", "MB_Up.append", "MB_RB3.append", "MB_1x1conv.append", "MB_sigmoid.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "common.ResBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "MB_RB2.append", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "common.ResBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "common.ResBlock", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "MaskBranchDownUp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "MB_RB1", "=", "[", "]", "\n", "MB_RB1", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "MB_Down", "=", "[", "]", "\n", "MB_Down", ".", "append", "(", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", "\n", "\n", "MB_RB2", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "MB_RB2", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "", "MB_Up", "=", "[", "]", "\n", "MB_Up", ".", "append", "(", "nn", ".", "ConvTranspose2d", "(", "n_feat", ",", "n_feat", ",", "6", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", ")", "\n", "\n", "MB_RB3", "=", "[", "]", "\n", "MB_RB3", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "MB_1x1conv", "=", "[", "]", "\n", "MB_1x1conv", ".", "append", "(", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n", "MB_sigmoid", "=", "[", "]", "\n", "MB_sigmoid", ".", "append", "(", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "self", ".", "MB_RB1", "=", "nn", ".", "Sequential", "(", "*", "MB_RB1", ")", "\n", "self", ".", "MB_Down", "=", "nn", ".", "Sequential", "(", "*", "MB_Down", ")", "\n", "self", ".", "MB_RB2", "=", "nn", ".", "Sequential", "(", "*", "MB_RB2", ")", "\n", "self", ".", "MB_Up", "=", "nn", ".", "Sequential", "(", "*", "MB_Up", ")", "\n", "self", ".", "MB_RB3", "=", "nn", ".", "Sequential", "(", "*", "MB_RB3", ")", "\n", "self", ".", "MB_1x1conv", "=", "nn", ".", "Sequential", "(", "*", "MB_1x1conv", ")", "\n", "self", ".", "MB_sigmoid", "=", "nn", ".", "Sequential", "(", "*", "MB_sigmoid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.MaskBranchDownUp.forward": [[420, 431], ["common.MaskBranchDownUp.MB_RB1", "common.MaskBranchDownUp.MB_Down", "common.MaskBranchDownUp.MB_RB2", "common.MaskBranchDownUp.MB_Up", "common.MaskBranchDownUp.MB_RB3", "common.MaskBranchDownUp.MB_1x1conv", "common.MaskBranchDownUp.MB_sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_RB1", "=", "self", ".", "MB_RB1", "(", "x", ")", "\n", "x_Down", "=", "self", ".", "MB_Down", "(", "x_RB1", ")", "\n", "x_RB2", "=", "self", ".", "MB_RB2", "(", "x_Down", ")", "\n", "x_Up", "=", "self", ".", "MB_Up", "(", "x_RB2", ")", "\n", "x_preRB3", "=", "x_RB1", "+", "x_Up", "\n", "x_RB3", "=", "self", ".", "MB_RB3", "(", "x_preRB3", ")", "\n", "x_1x1", "=", "self", ".", "MB_1x1conv", "(", "x_RB3", ")", "\n", "mx", "=", "self", ".", "MB_sigmoid", "(", "x_1x1", ")", "\n", "\n", "return", "mx", "\n", "## gpm", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.GPM.__init__": [[433, 439], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ")", ":", "\n", "        ", "super", "(", "GPM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "4", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "n_feats", "//", "4", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "convkg", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv31", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.GPM.forward": [[440, 456], ["common.GPM.conv1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "common.GPM.convkg", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "common.GPM.conv3", "common.GPM.conv3", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "w", "=", "x1", ".", "shape", "[", "2", "]", "\n", "h", "=", "x1", ".", "shape", "[", "3", "]", "\n", "if", "w", "//", "2", "==", "0", "and", "h", "//", "2", "==", "0", ":", "\n", "            ", "x_concat", "=", "torch", ".", "cat", "(", "[", "x1", "[", ":", ",", ":", ",", ":", "w", "//", "2", ",", ":", "h", "//", "2", "]", ",", "x1", "[", ":", ",", ":", ",", "w", "//", "2", ":", ",", ":", "h", "//", "2", "]", ",", "x1", "[", ":", ",", ":", ",", ":", "w", "//", "2", ",", "h", "//", "2", ":", "]", ",", "x1", "[", ":", ",", ":", ",", "w", "//", "2", ":", ",", "h", "//", "2", ":", "]", "]", ",", "1", ")", "\n", "x2", "=", "self", ".", "convkg", "(", "x_concat", ")", "\n", "x_fea", "=", "torch", ".", "zeros", "(", "[", "x2", ".", "shape", "[", "0", "]", ",", "x2", ".", "shape", "[", "1", "]", "//", "4", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", "]", ")", ".", "cuda", "(", ")", "\n", "x_fea", "[", ":", ",", ":", ",", ":", "w", "//", "2", ",", ":", "h", "//", "2", "]", "=", "x2", "[", ":", ",", ":", "16", ",", ":", ",", ":", "]", "\n", "x_fea", "[", ":", ",", ":", ",", "w", "//", "2", ":", ",", ":", "h", "//", "2", "]", "=", "x2", "[", ":", ",", "16", ":", "32", ",", ":", ",", ":", "]", "\n", "x_fea", "[", ":", ",", ":", ",", ":", "w", "//", "2", ",", "h", "//", "2", ":", "]", "=", "x2", "[", ":", ",", "32", ":", "48", ",", ":", ",", ":", "]", "\n", "x_fea", "[", ":", ",", ":", ",", "w", "//", "2", ":", ",", "h", "//", "2", ":", "]", "=", "x2", "[", ":", ",", "48", ":", "64", ",", ":", ",", ":", "]", "\n", "out", "=", "self", ".", "conv3", "(", "x_fea", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "conv3", "(", "x1", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.NLMaskBranchDownUp.__init__": [[460, 531], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "MB_RB1.append", "MB_RB1.append", "MB_Down.append", "range", "MB_Up.append", "MB_RB3.append", "MB_1x1conv.append", "MB_sigmoid.append", "MB_all2c.append", "MB_all2h.append", "MB_all2w.append", "MB_all2.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "common.CC_Module", "common.HH_Module", "common.WW_Module", "common.ChannelAttention", "common.RowAttention", "common.ColumnAttention", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "common.NLMaskBranchDownUp.wc1.data.fill_", "common.NLMaskBranchDownUp.wh1.data.fill_", "common.NLMaskBranchDownUp.ww1.data.fill_", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "common.NLMaskBranchDownUp.wc2.data.fill_", "common.NLMaskBranchDownUp.wh2.data.fill_", "common.NLMaskBranchDownUp.ww2.data.fill_", "common.GPM", "common.ResBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "MB_RB2.append", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "common.ResBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "common.ResBlock", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "NLMaskBranchDownUp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "MB_RB1", "=", "[", "]", "\n", "MB_RB1", ".", "append", "(", "GPM", "(", "n_feat", ")", ")", "\n", "#MB_RB1.append(NonLocalBlock2D(n_feat, n_feat//2))", "\n", "MB_RB1", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "MB_Down", "=", "[", "]", "\n", "MB_Down", ".", "append", "(", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", "\n", "\n", "MB_RB2", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "MB_RB2", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "", "MB_Up", "=", "[", "]", "\n", "MB_Up", ".", "append", "(", "nn", ".", "ConvTranspose2d", "(", "n_feat", ",", "n_feat", ",", "6", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", ")", "\n", "\n", "MB_RB3", "=", "[", "]", "\n", "MB_RB3", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "MB_1x1conv", "=", "[", "]", "\n", "MB_1x1conv", ".", "append", "(", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n", "MB_sigmoid", "=", "[", "]", "\n", "MB_sigmoid", ".", "append", "(", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "MB_all2c", "=", "[", "]", "\n", "MB_all2c", ".", "append", "(", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "MB_all2h", "=", "[", "]", "\n", "MB_all2h", ".", "append", "(", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "MB_all2w", "=", "[", "]", "\n", "MB_all2w", ".", "append", "(", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "MB_all2", "=", "[", "]", "\n", "MB_all2", ".", "append", "(", "nn", ".", "Conv2d", "(", "n_feat", "*", "4", ",", "n_feat", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "#MB_all2.append(ResBlock(conv, n_feat, kernel_size, bias=True, bn=False, act=nn.ReLU(True), res_scale=1))", "\n", "\n", "self", ".", "MB_RB1", "=", "nn", ".", "Sequential", "(", "*", "MB_RB1", ")", "\n", "self", ".", "MB_Down", "=", "nn", ".", "Sequential", "(", "*", "MB_Down", ")", "\n", "self", ".", "MB_RB2", "=", "nn", ".", "Sequential", "(", "*", "MB_RB2", ")", "\n", "self", ".", "MB_Up", "=", "nn", ".", "Sequential", "(", "*", "MB_Up", ")", "\n", "self", ".", "MB_RB3", "=", "nn", ".", "Sequential", "(", "*", "MB_RB3", ")", "\n", "self", ".", "MB_1x1conv", "=", "nn", ".", "Sequential", "(", "*", "MB_1x1conv", ")", "\n", "self", ".", "MB_sigmoid", "=", "nn", ".", "Sequential", "(", "*", "MB_sigmoid", ")", "\n", "\n", "self", ".", "cha1", "=", "CC_Module", "(", "n_feat", ")", "\n", "self", ".", "row1", "=", "HH_Module", "(", "n_feat", ")", "\n", "self", ".", "col1", "=", "WW_Module", "(", "n_feat", ")", "\n", "self", ".", "cha2", "=", "ChannelAttention", "(", "n_feat", ")", "\n", "self", ".", "row2", "=", "RowAttention", "(", ")", "\n", "self", ".", "col2", "=", "ColumnAttention", "(", ")", "\n", "\n", "self", ".", "all2c", "=", "nn", ".", "Sequential", "(", "*", "MB_all2c", ")", "\n", "self", ".", "all2h", "=", "nn", ".", "Sequential", "(", "*", "MB_all2h", ")", "\n", "self", ".", "all2w", "=", "nn", ".", "Sequential", "(", "*", "MB_all2w", ")", "\n", "self", ".", "all2", "=", "nn", ".", "Sequential", "(", "*", "MB_all2", ")", "\n", "self", ".", "wc1", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "wh1", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "ww1", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "wc1", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "wh1", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "ww1", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "wc2", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "wh2", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "ww2", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "wc2", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "wh2", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "ww2", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.NLMaskBranchDownUp.forward": [[534, 575], ["common.NLMaskBranchDownUp.MB_RB1", "common.NLMaskBranchDownUp.all2c", "common.NLMaskBranchDownUp.cha2", "common.NLMaskBranchDownUp.row2", "common.NLMaskBranchDownUp.permute", "common.NLMaskBranchDownUp.col2", "common.NLMaskBranchDownUp.permute", "common.NLMaskBranchDownUp.MB_Down", "common.NLMaskBranchDownUp.MB_RB2", "common.NLMaskBranchDownUp.MB_Up", "common.NLMaskBranchDownUp.MB_RB3", "common.NLMaskBranchDownUp.MB_1x1conv", "common.NLMaskBranchDownUp.MB_sigmoid", "common.NLMaskBranchDownUp.MB_RB2", "common.NLMaskBranchDownUp.MB_RB3", "common.NLMaskBranchDownUp.MB_1x1conv", "common.NLMaskBranchDownUp.MB_sigmoid", "x_col2.permute", "x_row2.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_RB1", "=", "self", ".", "MB_RB1", "(", "x", ")", "\n", "\n", "x_cha2", "=", "self", ".", "cha2", "(", "x_RB1", ")", "*", "x_RB1", "\n", "x_row2", "=", "self", ".", "row2", "(", "x_RB1", ")", "*", "x_RB1", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "x_col2", "=", "self", ".", "col2", "(", "x_RB1", ")", "*", "x_RB1", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "mx", "=", "self", ".", "wc2", "*", "x_cha2", "+", "self", ".", "wh2", "*", "x_row2", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "+", "self", ".", "ww2", "*", "x_col2", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "+", "x_RB1", "\n", "mx", "=", "self", ".", "all2c", "(", "mx", ")", "\n", "\n", "#x_cha1 = self.cha1(mx) ", "\n", "#x_row1 = self.row1(mx)", "\n", "#x_col1 = self.col1(mx)", "\n", "#mx = self.wc1 * x_cha1 + self.wh1 * x_row1 + self.ww1 * x_col1 + mx", "\n", "#mx = self.all2w(mx) ", "\n", "\n", "\n", "if", "x_RB1", ".", "shape", "[", "2", "]", "//", "2", "==", "0", "and", "x_RB1", ".", "shape", "[", "3", "]", "//", "2", "==", "0", ":", "\n", "            ", "x_Down", "=", "self", ".", "MB_Down", "(", "mx", ")", "\n", "x_RB2", "=", "self", ".", "MB_RB2", "(", "x_Down", ")", "\n", "x_Up", "=", "self", ".", "MB_Up", "(", "x_RB2", ")", "\n", "x_preRB3", "=", "x_RB1", "+", "x_Up", "\n", "x_RB3", "=", "self", ".", "MB_RB3", "(", "x_preRB3", ")", "\n", "x_1x1", "=", "self", ".", "MB_1x1conv", "(", "x_RB3", ")", "\n", "#     mx_att = self.weight_c*x_cc + self.weight_h*x_hh + self.weight_w*x_ww", "\n", "#     x_1x1 = torch.cat([mx_att,x_RB3], 1)", "\n", "#     x_1x1 = self.MB_1x1conv(x_1x1)       ", "\n", "mx", "=", "self", ".", "MB_sigmoid", "(", "x_1x1", ")", "\n", "", "else", ":", "\n", "            ", "x_RB2", "=", "self", ".", "MB_RB2", "(", "mx", ")", "\n", "x_preRB3", "=", "x_RB1", "+", "x_RB2", "\n", "x_RB3", "=", "self", ".", "MB_RB3", "(", "x_preRB3", ")", "\n", "x_1x1", "=", "self", ".", "MB_1x1conv", "(", "x_RB3", ")", "\n", "\n", "#     mx_att = self.weight_c*x_cc + self.weight_h*x_hh + self.weight_w*x_ww", "\n", "#     x_1x1 = torch.cat([mx_att,x_RB3], 1)", "\n", "#     x_1x1 = self.MB_1x1conv(x_1x1)", "\n", "mx", "=", "self", ".", "MB_sigmoid", "(", "x_1x1", ")", "\n", "\n", "#mx_att = x_hwhw + x_cc + x_hh + x_ww + x_cwcw + x_chch", "\n", "#mx_att = x_ww ", "\n", "", "return", "mx", "#, mx_att", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.ResAttModuleDownUpPlus.__init__": [[581, 599], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "RA_RB1.append", "RA_TB.append", "RA_MB.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "common.ResBlock", "common.TrunkBranch", "common.MaskBranchDownUp", "RA_tail.append", "common.ResBlock", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResAttModuleDownUpPlus", ",", "self", ")", ".", "__init__", "(", ")", "\n", "RA_RB1", "=", "[", "]", "\n", "RA_RB1", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "RA_TB", "=", "[", "]", "\n", "RA_TB", ".", "append", "(", "TrunkBranch", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "RA_MB", "=", "[", "]", "\n", "RA_MB", ".", "append", "(", "MaskBranchDownUp", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "RA_tail", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "RA_tail", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "", "self", ".", "RA_RB1", "=", "nn", ".", "Sequential", "(", "*", "RA_RB1", ")", "\n", "self", ".", "RA_TB", "=", "nn", ".", "Sequential", "(", "*", "RA_TB", ")", "\n", "self", ".", "RA_MB", "=", "nn", ".", "Sequential", "(", "*", "RA_MB", ")", "\n", "self", ".", "RA_tail", "=", "nn", ".", "Sequential", "(", "*", "RA_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.ResAttModuleDownUpPlus.forward": [[600, 609], ["common.ResAttModuleDownUpPlus.RA_RB1", "common.ResAttModuleDownUpPlus.RA_TB", "common.ResAttModuleDownUpPlus.RA_MB", "common.ResAttModuleDownUpPlus.RA_tail"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "RA_RB1_x", "=", "self", ".", "RA_RB1", "(", "input", ")", "\n", "tx", "=", "self", ".", "RA_TB", "(", "RA_RB1_x", ")", "\n", "mx", "=", "self", ".", "RA_MB", "(", "RA_RB1_x", ")", "\n", "txmx", "=", "tx", "*", "mx", "\n", "hx", "=", "txmx", "+", "RA_RB1_x", "\n", "hx", "=", "self", ".", "RA_tail", "(", "hx", ")", "\n", "\n", "return", "hx", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.NLResAttModuleDownUpPlus.__init__": [[613, 631], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "RA_RB1.append", "RA_TB.append", "RA_MB.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "common.ResBlock", "common.TrunkBranch", "common.NLMaskBranchDownUp", "RA_tail.append", "common.ResBlock", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "        ", "super", "(", "NLResAttModuleDownUpPlus", ",", "self", ")", ".", "__init__", "(", ")", "\n", "RA_RB1", "=", "[", "]", "\n", "RA_RB1", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "RA_TB", "=", "[", "]", "\n", "RA_TB", ".", "append", "(", "TrunkBranch", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "RA_MB", "=", "[", "]", "\n", "RA_MB", ".", "append", "(", "NLMaskBranchDownUp", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "RA_tail", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "RA_tail", ".", "append", "(", "ResBlock", "(", "conv", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ")", "\n", "\n", "", "self", ".", "RA_RB1", "=", "nn", ".", "Sequential", "(", "*", "RA_RB1", ")", "\n", "self", ".", "RA_TB", "=", "nn", ".", "Sequential", "(", "*", "RA_TB", ")", "\n", "self", ".", "RA_MB", "=", "nn", ".", "Sequential", "(", "*", "RA_MB", ")", "\n", "self", ".", "RA_tail", "=", "nn", ".", "Sequential", "(", "*", "RA_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.NLResAttModuleDownUpPlus.forward": [[632, 641], ["common.NLResAttModuleDownUpPlus.RA_RB1", "common.NLResAttModuleDownUpPlus.RA_TB", "common.NLResAttModuleDownUpPlus.RA_MB", "common.NLResAttModuleDownUpPlus.RA_tail"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "RA_RB1_x", "=", "self", ".", "RA_RB1", "(", "input", ")", "\n", "tx", "=", "self", ".", "RA_TB", "(", "RA_RB1_x", ")", "\n", "mx", "=", "self", ".", "RA_MB", "(", "RA_RB1_x", ")", "\n", "txmx", "=", "tx", "*", "mx", "\n", "hx", "=", "txmx", "+", "RA_RB1_x", "\n", "hx", "=", "self", ".", "RA_tail", "(", "hx", ")", "\n", "\n", "return", "hx", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.common.default_conv": [[9, 13], ["torch.Conv2d"], "function", ["None"], ["def", "default_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.Conv_ReLU_Block.__init__": [[11, 15], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Conv_ReLU_Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.Conv_ReLU_Block.forward": [[16, 18], ["tsan-n.Conv_ReLU_Block.relu", "tsan-n.Conv_ReLU_Block.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "relu", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.FeaExtra.__init__": [[20, 32], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", "=", "common", ".", "default_conv", ",", "n_feats", "=", "64", ")", ":", "\n", "        ", "super", "(", "FeaExtra", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "kernel_size_1", "=", "3", "\n", "kernel_size_2", "=", "5", "\n", "conv", "=", "conv", "\n", "self", ".", "conv_3_1", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "dilated_conv_3_1", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv_3_2", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "dilated_conv_3_2", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "confusion", "=", "nn", ".", "Conv2d", "(", "n_feats", "*", "4", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.FeaExtra.forward": [[33, 41], ["tsan-n.FeaExtra.relu", "tsan-n.FeaExtra.relu", "tsan-n.FeaExtra.relu", "tsan-n.FeaExtra.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tsan-n.FeaExtra.relu", "tsan-n.FeaExtra.conv_3_1", "tsan-n.FeaExtra.dilated_conv_3_1", "tsan-n.FeaExtra.dilated_conv_3_2", "tsan-n.FeaExtra.conv_3_2", "tsan-n.FeaExtra.confusion"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "input_1_1", "=", "self", ".", "relu", "(", "self", ".", "conv_3_1", "(", "x", ")", ")", "\n", "input_1_2", "=", "self", ".", "relu", "(", "self", ".", "dilated_conv_3_1", "(", "input_1_1", ")", ")", "\n", "input_2_1", "=", "self", ".", "relu", "(", "self", ".", "dilated_conv_3_2", "(", "x", ")", ")", "\n", "input_2_2", "=", "self", ".", "relu", "(", "self", ".", "conv_3_2", "(", "input_2_1", ")", ")", "\n", "output", "=", "torch", ".", "cat", "(", "[", "input_1_1", ",", "input_1_2", ",", "input_2_1", ",", "input_2_2", "]", ",", "1", ")", "\n", "output", "=", "self", ".", "relu", "(", "self", ".", "confusion", "(", "output", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.make_dense.__init__": [[43, 59], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "n_feats", "=", "64", ",", "i", "=", "0", ")", ":", "\n", "        ", "super", "(", "make_dense", ",", "self", ")", ".", "__init__", "(", ")", "\n", "kernel_size_1", "=", "3", "\n", "if", "i", "<", "3", ":", "\n", "            ", "s", "=", "i", "+", "1", "\n", "", "else", ":", "\n", "            ", "s", "=", "i", "-", "2", "*", "(", "i", "-", "3", ")", "\n", "#print(s)", "\n", "", "conv", "=", "common", ".", "default_conv", "\n", "self", ".", "conv_1_1", "=", "nn", ".", "Conv2d", "(", "n_channels", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv_1_2", "=", "nn", ".", "Conv2d", "(", "n_feats", "*", "4", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv_3_1", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "s", ",", "stride", "=", "1", ",", "dilation", "=", "s", ")", "\n", "self", ".", "dilated_conv_3_1", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "s", ",", "stride", "=", "1", ",", "dilation", "=", "s", ")", "\n", "self", ".", "conv_3_2", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "s", ",", "stride", "=", "1", ",", "dilation", "=", "s", ")", "\n", "self", ".", "dilated_conv_3_2", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "s", ",", "stride", "=", "1", ",", "dilation", "=", "s", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.make_dense.forward": [[60, 71], ["tsan-n.make_dense.relu", "tsan-n.make_dense.relu", "tsan-n.make_dense.relu", "tsan-n.make_dense.relu", "tsan-n.make_dense.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tsan-n.make_dense.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tsan-n.make_dense.conv_1_1", "tsan-n.make_dense.conv_3_1", "tsan-n.make_dense.dilated_conv_3_1", "tsan-n.make_dense.dilated_conv_3_2", "tsan-n.make_dense.conv_3_2", "tsan-n.make_dense.conv_1_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out1x1", "=", "self", ".", "relu", "(", "self", ".", "conv_1_1", "(", "x", ")", ")", "\n", "input_1_1", "=", "self", ".", "relu", "(", "self", ".", "conv_3_1", "(", "out1x1", ")", ")", "\n", "input_1_2", "=", "self", ".", "relu", "(", "self", ".", "dilated_conv_3_1", "(", "input_1_1", ")", ")", "\n", "input_2_1", "=", "self", ".", "relu", "(", "self", ".", "dilated_conv_3_2", "(", "out1x1", ")", ")", "\n", "input_2_2", "=", "self", ".", "relu", "(", "self", ".", "conv_3_2", "(", "input_2_1", ")", ")", "\n", "output", "=", "torch", ".", "cat", "(", "[", "input_1_1", ",", "input_1_2", ",", "input_2_1", ",", "input_2_2", "]", ",", "1", ")", "\n", "output", "=", "self", ".", "relu", "(", "self", ".", "conv_1_2", "(", "output", ")", ")", "\n", "#output = output + out1x1", "\n", "output", "=", "torch", ".", "cat", "(", "[", "output", ",", "x", "]", ",", "1", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.DRB.__init__": [[73, 82], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "modules.append", "tsan-n.make_dense"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "n_denselayer", "=", "6", ",", "n_feats", "=", "64", ")", ":", "\n", "        ", "super", "(", "DRB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "nChannels_", "=", "n_channels", "\n", "modules", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_denselayer", ")", ":", "\n", "            ", "modules", ".", "append", "(", "make_dense", "(", "nChannels_", ",", "n_feats", ",", "i", ")", ")", "\n", "nChannels_", "+=", "n_feats", "\n", "", "self", ".", "dense_layers", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "self", ".", "conv_1x1", "=", "nn", ".", "Conv2d", "(", "nChannels_", ",", "n_feats", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.DRB.forward": [[82, 87], ["tsan-n.DRB.dense_layers", "tsan-n.DRB.conv_1x1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "dense_layers", "(", "x", ")", "\n", "out", "=", "self", ".", "conv_1x1", "(", "out", ")", "\n", "out", "=", "x", "+", "out", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.CSB.__init__": [[89, 92], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ")", ":", "\n", "        ", "super", "(", "CSB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "n_feats", "*", "4", ",", "n_feats", "*", "4", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.CSB.forward": [[93, 109], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tsan-n.CSB.conv1", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "tsan-n.CSB.size", "x.size", "x.size", "tsan-n.CSB.size", "tsan-n.CSB.size", "x.size", "x.size", "tsan-n.CSB.size", "x.size", "x.size", "tsan-n.CSB.size", "tsan-n.CSB.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# print(x.size(2)//2)", "\n", "        ", "f1", "=", "x", "[", ":", ",", ":", ",", "0", ":", "x", ".", "size", "(", "2", ")", "//", "2", ",", "0", ":", "x", ".", "size", "(", "3", ")", "//", "2", "]", "\n", "f2", "=", "x", "[", ":", ",", ":", ",", "x", ".", "size", "(", "2", ")", "//", "2", ":", ",", "0", ":", "x", ".", "size", "(", "3", ")", "//", "2", "]", "\n", "f3", "=", "x", "[", ":", ",", ":", ",", "0", ":", "x", ".", "size", "(", "2", ")", "//", "2", ",", "x", ".", "size", "(", "3", ")", "//", "2", ":", "]", "\n", "f4", "=", "x", "[", ":", ",", ":", ",", "x", ".", "size", "(", "2", ")", "//", "2", ":", ",", "x", ".", "size", "(", "3", ")", "//", "2", ":", "]", "\n", "# print(f1.size(), f2.size(), f3.size(), f4.size())", "\n", "f_all", "=", "torch", ".", "cat", "(", "[", "f1", ",", "f2", ",", "f3", ",", "f4", "]", ",", "1", ")", "\n", "# print(f_all.size())", "\n", "f_all", "=", "self", ".", "conv1", "(", "f_all", ")", "\n", "out", "=", "x", "\n", "out", "[", ":", ",", ":", ",", "0", ":", "x", ".", "size", "(", "2", ")", "//", "2", ",", "0", ":", "x", ".", "size", "(", "3", ")", "//", "2", "]", "=", "f_all", "[", ":", ",", "0", ":", "f_all", ".", "size", "(", "1", ")", "//", "4", ",", ":", ",", ":", "]", "\n", "out", "[", ":", ",", ":", ",", "x", ".", "size", "(", "2", ")", "//", "2", ":", ",", "0", ":", "x", ".", "size", "(", "3", ")", "//", "2", "]", "=", "f_all", "[", ":", ",", "f_all", ".", "size", "(", "1", ")", "//", "4", ":", "f_all", ".", "size", "(", "1", ")", "//", "2", ",", ":", ",", ":", "]", "\n", "out", "[", ":", ",", ":", ",", "0", ":", "x", ".", "size", "(", "2", ")", "//", "2", ",", "x", ".", "size", "(", "3", ")", "//", "2", ":", "]", "=", "f_all", "[", ":", ",", "f_all", ".", "size", "(", "1", ")", "//", "2", ":", "f_all", ".", "size", "(", "1", ")", "*", "3", "//", "4", ",", ":", ",", ":", "]", "\n", "out", "[", ":", ",", ":", ",", "x", ".", "size", "(", "2", ")", "//", "2", ":", ",", "x", ".", "size", "(", "3", ")", "//", "2", ":", "]", "=", "f_all", "[", ":", ",", "f_all", ".", "size", "(", "1", ")", "*", "3", "//", "4", ":", ",", ":", ",", ":", "]", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.First_Order.__init__": [[111, 114], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "First_Order", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "adaptive", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.First_Order.forward": [[115, 126], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.permute", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.permute", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "tsan-n.First_Order.adaptive", "tsan-n.First_Order.adaptive", "tsan-n.First_Order.adaptive"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "first_c", "=", "F", ".", "sigmoid", "(", "self", ".", "adaptive", "(", "x", ")", ")", "\n", "first_c", "=", "first_c", "*", "x", "\n", "xh", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "first_h", "=", "F", ".", "sigmoid", "(", "self", ".", "adaptive", "(", "xh", ")", ")", "\n", "first_h", "=", "(", "first_h", "*", "xh", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "xw", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "first_w", "=", "F", ".", "sigmoid", "(", "self", ".", "adaptive", "(", "xw", ")", ")", "\n", "first_w", "=", "(", "first_w", "*", "xw", ")", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "\n", "return", "first_c", "+", "first_h", "+", "first_w", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.Second_Order.__init__": [[128, 130], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Second_Order", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.Second_Order.forward": [[131, 142], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.permute", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.permute", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "second_c", "=", "F", ".", "sigmoid", "(", "torch", ".", "mean", "(", "x", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ")", "\n", "second_c", "=", "second_c", "*", "x", "\n", "xh", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "second_h", "=", "F", ".", "sigmoid", "(", "torch", ".", "mean", "(", "xh", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ")", "\n", "second_h", "=", "(", "second_h", "*", "xh", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "xw", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "second_w", "=", "F", ".", "sigmoid", "(", "torch", ".", "mean", "(", "xw", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ")", "\n", "second_w", "=", "(", "second_w", "*", "xw", ")", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "\n", "return", "second_c", "+", "second_h", "+", "second_w", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.MCAB.__init__": [[144, 151], ["torch.Module.__init__", "tsan-n.DRB", "tsan-n.CSB", "tsan-n.First_Order", "tsan-n.Second_Order", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "n_denselayer", "=", "6", ",", "n_feats", "=", "64", ")", ":", "\n", "        ", "super", "(", "MCAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "drb", "=", "DRB", "(", "n_channels", ",", "n_denselayer", ",", "n_feats", ")", "\n", "self", ".", "csb", "=", "CSB", "(", "n_feats", ")", "\n", "self", ".", "first", "=", "First_Order", "(", ")", "\n", "self", ".", "second", "=", "Second_Order", "(", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.MCAB.forward": [[152, 158], ["tsan-n.MCAB.drb", "tsan-n.MCAB.csb", "tsan-n.MCAB.second", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "tsan-n.MCAB.first", "tsan-n.MCAB.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "down_b", "=", "self", ".", "drb", "(", "x", ")", "\n", "top_b", "=", "self", ".", "csb", "(", "x", ")", "\n", "top_b", "=", "self", ".", "second", "(", "self", ".", "first", "(", "top_b", ")", ")", "\n", "top_b", "=", "F", ".", "sigmoid", "(", "self", ".", "conv3", "(", "top_b", ")", ")", "\n", "return", "down_b", "*", "top_b", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.TSAN.__init__": [[162, 198], ["torch.Module.__init__", "common.MeanShift", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "tsan-n.MCAB", "tsan-n.MCAB", "tsan-n.MCAB", "conv", "conv", "common.MeanShift", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "tsan-n.TSAN.make_layer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "conv", "common.Upsampler"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.TSAN.make_layer"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "TSAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "conv", "=", "common", ".", "default_conv", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "n_colors", "=", "args", ".", "n_colors", "\n", "kernel_size_1", "=", "3", "\n", "n_channels", "=", "64", "\n", "n_denselayer", "=", "6", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "self", ".", "first_conv", "=", "nn", ".", "Conv2d", "(", "n_colors", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "\n", "modules_body1", "=", "MCAB", "(", "n_channels", ",", "n_denselayer", ",", "n_feats", ")", "\n", "modules_body2", "=", "MCAB", "(", "n_channels", ",", "n_denselayer", ",", "n_feats", ")", "\n", "modules_body3", "=", "MCAB", "(", "n_channels", ",", "n_denselayer", ",", "n_feats", ")", "\n", "\n", "# define tail module", "\n", "modules_tail", "=", "[", "\n", "nn", ".", "Conv2d", "(", "n_feats", "*", "3", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", ",", "\n", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ")", "]", "\n", "modules_up", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", "]", "\n", "self", ".", "output1", "=", "conv", "(", "n_feats", ",", "n_colors", ",", "1", ")", "\n", "self", ".", "output2", "=", "conv", "(", "n_feats", ",", "n_colors", ",", "1", ")", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "body1", "=", "modules_body1", "\n", "self", ".", "body2", "=", "modules_body2", "\n", "self", ".", "body3", "=", "modules_body3", "\n", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "modules_tail", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "*", "modules_up", ")", "\n", "self", ".", "first2_conv", "=", "nn", ".", "Conv2d", "(", "n_colors", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "self", ".", "refine", "=", "self", ".", "make_layer", "(", "Conv_ReLU_Block", ",", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.TSAN.make_layer": [[199, 204], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "make_layer", "(", "self", ",", "block", ",", "num_layer", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_layer", ")", ":", "\n", "            ", "layers", ".", "append", "(", "(", "block", "(", ")", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.TSAN.forward": [[205, 225], ["tsan-n.TSAN.sub_mean", "tsan-n.TSAN.relu", "tsan-n.TSAN.body1", "tsan-n.TSAN.body2", "tsan-n.TSAN.body3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tsan-n.TSAN.tail", "tsan-n.TSAN.up", "tsan-n.TSAN.output1", "tsan-n.TSAN.add_mean", "tsan-n.TSAN.first2_conv", "tsan-n.TSAN.refine", "tsan-n.TSAN.output2", "tsan-n.TSAN.add_mean", "tsan-n.TSAN.first_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "first_out", "=", "self", ".", "relu", "(", "self", ".", "first_conv", "(", "x", ")", ")", "\n", "out_dense1", "=", "self", ".", "body1", "(", "first_out", ")", "\n", "out_dense2", "=", "self", ".", "body2", "(", "out_dense1", ")", "\n", "out_dense3", "=", "self", ".", "body3", "(", "out_dense2", ")", "\n", "dense", "=", "torch", ".", "cat", "(", "[", "out_dense1", ",", "out_dense2", ",", "out_dense3", "]", ",", "1", ")", "\n", "\n", "out", "=", "self", ".", "tail", "(", "dense", ")", "\n", "out", "=", "out", "+", "first_out", "\n", "out", "=", "self", ".", "up", "(", "out", ")", "\n", "out", "=", "self", ".", "output1", "(", "out", ")", "\n", "out1", "=", "self", ".", "add_mean", "(", "out", ")", "\n", "out2", "=", "self", ".", "first2_conv", "(", "out", ")", "\n", "out2", "=", "self", ".", "refine", "(", "out2", ")", "\n", "out2", "=", "self", ".", "output2", "(", "out2", ")", "\n", "#print(out2.size(), out.size())", "\n", "out2", "=", "out2", "+", "out", "\n", "out2", "=", "self", ".", "add_mean", "(", "out2", ")", "\n", "return", "out1", ",", "out2", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.TSAN.load_state_dict": [[226, 251], ["tsan-n.TSAN.state_dict", "state_dict.items", "isinstance", "set", "set", "len", "KeyError", "own_state[].copy_", "tsan-n.TSAN.keys", "state_dict.keys", "name.find", "KeyError", "name.find", "print", "RuntimeError", "own_state[].size", "param.size"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", "=", "False", ")", ":", "\n", "        ", "own_state", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "own_state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "try", ":", "\n", "                    ", "own_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "if", "name", ".", "find", "(", "'tail'", ")", ">=", "0", ":", "\n", "                        ", "print", "(", "'Replace pre-trained upsampler to new one...'", ")", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the model are {} and '", "\n", "'whose dimensions in the checkpoint are {}.'", "\n", ".", "format", "(", "name", ",", "own_state", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "", "", "", "elif", "strict", ":", "\n", "                ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                    ", "raise", "KeyError", "(", "'unexpected key \"{}\" in state_dict'", "\n", ".", "format", "(", "name", ")", ")", "\n", "\n", "", "", "", "if", "strict", ":", "\n", "            ", "missing", "=", "set", "(", "own_state", ".", "keys", "(", ")", ")", "-", "set", "(", "state_dict", ".", "keys", "(", ")", ")", "\n", "if", "len", "(", "missing", ")", ">", "0", ":", "\n", "                ", "raise", "KeyError", "(", "'missing keys in state_dict: \"{}\"'", ".", "format", "(", "missing", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan-n.make_model": [[7, 9], ["tsan-n.TSAN"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "TSAN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ConcatBlock.__init__": [[61, 64], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "submodule", ")", ":", "\n", "        ", "super", "(", "ConcatBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sub", "=", "submodule", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ConcatBlock.forward": [[65, 68], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "block.ConcatBlock.sub"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "torch", ".", "cat", "(", "(", "x", ",", "self", ".", "sub", "(", "x", ")", ")", ",", "dim", "=", "1", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ConcatBlock.__repr__": [[69, 74], ["block.ConcatBlock.sub.__repr__().replace", "block.ConcatBlock.sub.__repr__"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ShortcutBlock.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "tmpstr", "=", "'Identity .. \\n|'", "\n", "modstr", "=", "self", ".", "sub", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n|'", ")", "\n", "tmpstr", "=", "tmpstr", "+", "modstr", "\n", "return", "tmpstr", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ShortcutBlock.__init__": [[78, 81], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "submodule", ")", ":", "\n", "        ", "super", "(", "ShortcutBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sub", "=", "submodule", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ShortcutBlock.forward": [[82, 85], ["block.ShortcutBlock.sub"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "x", "+", "self", ".", "sub", "(", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ShortcutBlock.__repr__": [[86, 91], ["block.ShortcutBlock.sub.__repr__().replace", "block.ShortcutBlock.sub.__repr__"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ShortcutBlock.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "tmpstr", "=", "'Identity + \\n|'", "\n", "modstr", "=", "self", ".", "sub", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n|'", ")", "\n", "tmpstr", "=", "tmpstr", "+", "modstr", "\n", "return", "tmpstr", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ResNetBlock.__init__": [[150, 170], ["torch.Module.__init__", "block.conv_block", "block.conv_block", "block.sequential"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.conv_block", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.conv_block", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.sequential"], ["def", "__init__", "(", "self", ",", "in_nc", ",", "mid_nc", ",", "out_nc", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "pad_type", "=", "'zero'", ",", "norm_type", "=", "None", ",", "act_type", "=", "'relu'", ",", "mode", "=", "'CNA'", ",", "res_scale", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResNetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "conv0", "=", "conv_block", "(", "in_nc", ",", "mid_nc", ",", "kernel_size", ",", "stride", ",", "dilation", ",", "groups", ",", "bias", ",", "pad_type", ",", "norm_type", ",", "act_type", ",", "mode", ")", "\n", "if", "mode", "==", "'CNA'", ":", "\n", "            ", "act_type", "=", "None", "\n", "", "if", "mode", "==", "'CNAC'", ":", "# Residual path: |-CNAC-|", "\n", "            ", "act_type", "=", "None", "\n", "norm_type", "=", "None", "\n", "", "conv1", "=", "conv_block", "(", "mid_nc", ",", "out_nc", ",", "kernel_size", ",", "stride", ",", "dilation", ",", "groups", ",", "bias", ",", "pad_type", ",", "norm_type", ",", "act_type", ",", "mode", ")", "\n", "# if in_nc != out_nc:", "\n", "#     self.project = conv_block(in_nc, out_nc, 1, stride, dilation, 1, bias, pad_type, \\", "\n", "#         None, None)", "\n", "#     print('Need a projecter in ResNetBlock.')", "\n", "# else:", "\n", "#     self.project = lambda x:x", "\n", "self", ".", "res", "=", "sequential", "(", "conv0", ",", "conv1", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ResNetBlock.forward": [[171, 174], ["block.ResNetBlock.res().mul", "block.ResNetBlock.res"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "res", "(", "x", ")", ".", "mul", "(", "self", ".", "res_scale", ")", "\n", "return", "x", "+", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ResidualDenseBlock_5C.__init__": [[183, 201], ["torch.Module.__init__", "block.conv_block", "block.conv_block", "block.conv_block", "block.conv_block", "block.conv_block"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.conv_block", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.conv_block", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.conv_block", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.conv_block", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.conv_block"], ["def", "__init__", "(", "self", ",", "nc", ",", "kernel_size", "=", "3", ",", "gc", "=", "32", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "pad_type", "=", "'zero'", ",", "norm_type", "=", "None", ",", "act_type", "=", "'leakyrelu'", ",", "mode", "=", "'CNA'", ")", ":", "\n", "        ", "super", "(", "ResidualDenseBlock_5C", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# gc: growth channel, i.e. intermediate channels", "\n", "self", ".", "conv1", "=", "conv_block", "(", "nc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "bias", "=", "bias", ",", "pad_type", "=", "pad_type", ",", "norm_type", "=", "norm_type", ",", "act_type", "=", "act_type", ",", "mode", "=", "mode", ")", "\n", "self", ".", "conv2", "=", "conv_block", "(", "nc", "+", "gc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "bias", "=", "bias", ",", "pad_type", "=", "pad_type", ",", "norm_type", "=", "norm_type", ",", "act_type", "=", "act_type", ",", "mode", "=", "mode", ")", "\n", "self", ".", "conv3", "=", "conv_block", "(", "nc", "+", "2", "*", "gc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "bias", "=", "bias", ",", "pad_type", "=", "pad_type", ",", "norm_type", "=", "norm_type", ",", "act_type", "=", "act_type", ",", "mode", "=", "mode", ")", "\n", "self", ".", "conv4", "=", "conv_block", "(", "nc", "+", "3", "*", "gc", ",", "gc", ",", "kernel_size", ",", "stride", ",", "bias", "=", "bias", ",", "pad_type", "=", "pad_type", ",", "norm_type", "=", "norm_type", ",", "act_type", "=", "act_type", ",", "mode", "=", "mode", ")", "\n", "if", "mode", "==", "'CNA'", ":", "\n", "            ", "last_act", "=", "None", "\n", "", "else", ":", "\n", "            ", "last_act", "=", "act_type", "\n", "", "self", ".", "conv5", "=", "conv_block", "(", "nc", "+", "4", "*", "gc", ",", "nc", ",", "3", ",", "stride", ",", "bias", "=", "bias", ",", "pad_type", "=", "pad_type", ",", "norm_type", "=", "norm_type", ",", "act_type", "=", "last_act", ",", "mode", "=", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.ResidualDenseBlock_5C.forward": [[202, 209], ["block.ResidualDenseBlock_5C.conv1", "block.ResidualDenseBlock_5C.conv2", "block.ResidualDenseBlock_5C.conv3", "block.ResidualDenseBlock_5C.conv4", "block.ResidualDenseBlock_5C.conv5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "block.ResidualDenseBlock_5C.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x2", "=", "self", ".", "conv2", "(", "torch", ".", "cat", "(", "(", "x", ",", "x1", ")", ",", "1", ")", ")", "\n", "x3", "=", "self", ".", "conv3", "(", "torch", ".", "cat", "(", "(", "x", ",", "x1", ",", "x2", ")", ",", "1", ")", ")", "\n", "x4", "=", "self", ".", "conv4", "(", "torch", ".", "cat", "(", "(", "x", ",", "x1", ",", "x2", ",", "x3", ")", ",", "1", ")", ")", "\n", "x5", "=", "self", ".", "conv5", "(", "torch", ".", "cat", "(", "(", "x", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ",", "1", ")", ")", "\n", "return", "x5", ".", "mul", "(", "0.2", ")", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.RRDB.__init__": [[217, 226], ["torch.Module.__init__", "block.ResidualDenseBlock_5C", "block.ResidualDenseBlock_5C", "block.ResidualDenseBlock_5C"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["def", "__init__", "(", "self", ",", "nc", ",", "kernel_size", "=", "3", ",", "gc", "=", "32", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "pad_type", "=", "'zero'", ",", "norm_type", "=", "None", ",", "act_type", "=", "'leakyrelu'", ",", "mode", "=", "'CNA'", ")", ":", "\n", "        ", "super", "(", "RRDB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "RDB1", "=", "ResidualDenseBlock_5C", "(", "nc", ",", "kernel_size", ",", "gc", ",", "stride", ",", "bias", ",", "pad_type", ",", "norm_type", ",", "act_type", ",", "mode", ")", "\n", "self", ".", "RDB2", "=", "ResidualDenseBlock_5C", "(", "nc", ",", "kernel_size", ",", "gc", ",", "stride", ",", "bias", ",", "pad_type", ",", "norm_type", ",", "act_type", ",", "mode", ")", "\n", "self", ".", "RDB3", "=", "ResidualDenseBlock_5C", "(", "nc", ",", "kernel_size", ",", "gc", ",", "stride", ",", "bias", ",", "pad_type", ",", "norm_type", ",", "act_type", ",", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.RRDB.forward": [[227, 232], ["block.RRDB.RDB1", "block.RRDB.RDB2", "block.RRDB.RDB3", "block.RRDB.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "RDB1", "(", "x", ")", "\n", "out", "=", "self", ".", "RDB2", "(", "out", ")", "\n", "out", "=", "self", ".", "RDB3", "(", "out", ")", "\n", "return", "out", ".", "mul", "(", "0.2", ")", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.act": [[10, 24], ["act_type.lower.lower", "torch.ReLU", "torch.LeakyReLU", "torch.PReLU", "NotImplementedError"], "function", ["None"], ["def", "act", "(", "act_type", ",", "inplace", "=", "True", ",", "neg_slope", "=", "0.2", ",", "n_prelu", "=", "1", ")", ":", "\n", "# helper selecting activation", "\n", "# neg_slope: for leakyrelu and init of prelu", "\n", "# n_prelu: for p_relu num_parameters", "\n", "    ", "act_type", "=", "act_type", ".", "lower", "(", ")", "\n", "if", "act_type", "==", "'relu'", ":", "\n", "        ", "layer", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "", "elif", "act_type", "==", "'leakyrelu'", ":", "\n", "        ", "layer", "=", "nn", ".", "LeakyReLU", "(", "neg_slope", ",", "inplace", ")", "\n", "", "elif", "act_type", "==", "'prelu'", ":", "\n", "        ", "layer", "=", "nn", ".", "PReLU", "(", "num_parameters", "=", "n_prelu", ",", "init", "=", "neg_slope", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'activation layer [{:s}] is not found'", ".", "format", "(", "act_type", ")", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.norm": [[26, 36], ["norm_type.lower.lower", "torch.BatchNorm2d", "torch.InstanceNorm2d", "NotImplementedError"], "function", ["None"], ["", "def", "norm", "(", "norm_type", ",", "nc", ")", ":", "\n", "# helper selecting normalization layer", "\n", "    ", "norm_type", "=", "norm_type", ".", "lower", "(", ")", "\n", "if", "norm_type", "==", "'batch'", ":", "\n", "        ", "layer", "=", "nn", ".", "BatchNorm2d", "(", "nc", ",", "affine", "=", "True", ")", "\n", "", "elif", "norm_type", "==", "'instance'", ":", "\n", "        ", "layer", "=", "nn", ".", "InstanceNorm2d", "(", "nc", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'normalization layer [{:s}] is not found'", ".", "format", "(", "norm_type", ")", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.pad": [[38, 51], ["pad_type.lower.lower", "torch.ReflectionPad2d", "torch.ReplicationPad2d", "NotImplementedError"], "function", ["None"], ["", "def", "pad", "(", "pad_type", ",", "padding", ")", ":", "\n", "# helper selecting padding layer", "\n", "# if padding is 'zero', do by conv layers", "\n", "    ", "pad_type", "=", "pad_type", ".", "lower", "(", ")", "\n", "if", "padding", "==", "0", ":", "\n", "        ", "return", "None", "\n", "", "if", "pad_type", "==", "'reflect'", ":", "\n", "        ", "layer", "=", "nn", ".", "ReflectionPad2d", "(", "padding", ")", "\n", "", "elif", "pad_type", "==", "'replicate'", ":", "\n", "        ", "layer", "=", "nn", ".", "ReplicationPad2d", "(", "padding", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'padding layer [{:s}] is not implemented'", ".", "format", "(", "pad_type", ")", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.get_valid_padding": [[53, 57], ["None"], "function", ["None"], ["", "def", "get_valid_padding", "(", "kernel_size", ",", "dilation", ")", ":", "\n", "    ", "kernel_size", "=", "kernel_size", "+", "(", "kernel_size", "-", "1", ")", "*", "(", "dilation", "-", "1", ")", "\n", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", "\n", "return", "padding", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.sequential": [[93, 107], ["torch.Sequential", "len", "isinstance", "isinstance", "NotImplementedError", "module.children", "isinstance", "modules.append", "modules.append"], "function", ["None"], ["", "", "def", "sequential", "(", "*", "args", ")", ":", "\n", "# Flatten Sequential. It unwraps nn.Sequential.", "\n", "    ", "if", "len", "(", "args", ")", "==", "1", ":", "\n", "        ", "if", "isinstance", "(", "args", "[", "0", "]", ",", "OrderedDict", ")", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'sequential does not support OrderedDict input.'", ")", "\n", "", "return", "args", "[", "0", "]", "# No sequential is needed.", "\n", "", "modules", "=", "[", "]", "\n", "for", "module", "in", "args", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "Sequential", ")", ":", "\n", "            ", "for", "submodule", "in", "module", ".", "children", "(", ")", ":", "\n", "                ", "modules", ".", "append", "(", "submodule", ")", "\n", "", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "Module", ")", ":", "\n", "            ", "modules", ".", "append", "(", "module", ")", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.conv_block": [[109, 136], ["block.get_valid_padding", "torch.Conv2d", "block.pad", "block.act", "block.sequential", "block.norm", "block.sequential", "block.act", "block.norm"], "function", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.get_valid_padding", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.pad", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.act", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.sequential", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.norm", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.sequential", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.act", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.norm"], ["", "def", "conv_block", "(", "in_nc", ",", "out_nc", ",", "kernel_size", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "pad_type", "=", "'zero'", ",", "norm_type", "=", "None", ",", "act_type", "=", "'relu'", ",", "mode", "=", "'CNA'", ")", ":", "\n", "    ", "'''\n    Conv layer with padding, normalization, activation\n    mode: CNA --> Conv -> Norm -> Act\n        NAC --> Norm -> Act --> Conv (Identity Mappings in Deep Residual Networks, ECCV16)\n    '''", "\n", "assert", "mode", "in", "[", "'CNA'", ",", "'NAC'", ",", "'CNAC'", "]", ",", "'Wong conv mode [{:s}]'", ".", "format", "(", "mode", ")", "\n", "padding", "=", "get_valid_padding", "(", "kernel_size", ",", "dilation", ")", "\n", "p", "=", "pad", "(", "pad_type", ",", "padding", ")", "if", "pad_type", "and", "pad_type", "!=", "'zero'", "else", "None", "\n", "padding", "=", "padding", "if", "pad_type", "==", "'zero'", "else", "0", "\n", "\n", "c", "=", "nn", ".", "Conv2d", "(", "in_nc", ",", "out_nc", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "bias", ",", "groups", "=", "groups", ")", "\n", "a", "=", "act", "(", "act_type", ")", "if", "act_type", "else", "None", "\n", "if", "'CNA'", "in", "mode", ":", "\n", "        ", "n", "=", "norm", "(", "norm_type", ",", "out_nc", ")", "if", "norm_type", "else", "None", "\n", "return", "sequential", "(", "p", ",", "c", ",", "n", ",", "a", ")", "\n", "", "elif", "mode", "==", "'NAC'", ":", "\n", "        ", "if", "norm_type", "is", "None", "and", "act_type", "is", "not", "None", ":", "\n", "            ", "a", "=", "act", "(", "act_type", ",", "inplace", "=", "False", ")", "\n", "# Important!", "\n", "# input----ReLU(inplace)----Conv--+----output", "\n", "#        |________________________|", "\n", "# inplace ReLU will modify the input, therefore wrong output", "\n", "", "n", "=", "norm", "(", "norm_type", ",", "in_nc", ")", "if", "norm_type", "else", "None", "\n", "return", "sequential", "(", "n", ",", "a", ",", "p", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.pixelshuffle_block": [[239, 253], ["block.conv_block", "torch.PixelShuffle", "block.sequential", "block.norm", "block.act"], "function", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.conv_block", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.sequential", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.norm", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.act"], ["", "", "def", "pixelshuffle_block", "(", "in_nc", ",", "out_nc", ",", "upscale_factor", "=", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "pad_type", "=", "'zero'", ",", "norm_type", "=", "None", ",", "act_type", "=", "'relu'", ")", ":", "\n", "    ", "'''\n    Pixel shuffle layer\n    (Real-Time Single Image and Video Super-Resolution Using an Efficient Sub-Pixel Convolutional\n    Neural Network, CVPR17)\n    '''", "\n", "conv", "=", "conv_block", "(", "in_nc", ",", "out_nc", "*", "(", "upscale_factor", "**", "2", ")", ",", "kernel_size", ",", "stride", ",", "bias", "=", "bias", ",", "pad_type", "=", "pad_type", ",", "norm_type", "=", "None", ",", "act_type", "=", "None", ")", "\n", "pixel_shuffle", "=", "nn", ".", "PixelShuffle", "(", "upscale_factor", ")", "\n", "\n", "n", "=", "norm", "(", "norm_type", ",", "out_nc", ")", "if", "norm_type", "else", "None", "\n", "a", "=", "act", "(", "act_type", ")", "if", "act_type", "else", "None", "\n", "return", "sequential", "(", "conv", ",", "pixel_shuffle", ",", "n", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.upconv_blcok": [[255, 263], ["torch.Upsample", "block.conv_block", "block.sequential"], "function", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.conv_block", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.sequential"], ["", "def", "upconv_blcok", "(", "in_nc", ",", "out_nc", ",", "upscale_factor", "=", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "pad_type", "=", "'zero'", ",", "norm_type", "=", "None", ",", "act_type", "=", "'relu'", ",", "mode", "=", "'nearest'", ")", ":", "\n", "# Up conv", "\n", "# described in https://distill.pub/2016/deconv-checkerboard/", "\n", "    ", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "upscale_factor", ",", "mode", "=", "mode", ")", "\n", "conv", "=", "conv_block", "(", "in_nc", ",", "out_nc", ",", "kernel_size", ",", "stride", ",", "bias", "=", "bias", ",", "pad_type", "=", "pad_type", ",", "norm_type", "=", "norm_type", ",", "act_type", "=", "act_type", ")", "\n", "return", "sequential", "(", "upsample", ",", "conv", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.Conv_ReLU_Block.__init__": [[11, 15], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Conv_ReLU_Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.Conv_ReLU_Block.forward": [[16, 18], ["tsan.Conv_ReLU_Block.relu", "tsan.Conv_ReLU_Block.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "relu", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.FeaExtra.__init__": [[20, 32], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", "=", "common", ".", "default_conv", ",", "n_feats", "=", "64", ")", ":", "\n", "        ", "super", "(", "FeaExtra", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "kernel_size_1", "=", "3", "\n", "kernel_size_2", "=", "5", "\n", "conv", "=", "conv", "\n", "self", ".", "conv_3_1", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "dilated_conv_3_1", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv_3_2", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "dilated_conv_3_2", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "confusion", "=", "nn", ".", "Conv2d", "(", "n_feats", "*", "4", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.FeaExtra.forward": [[33, 41], ["tsan.FeaExtra.relu", "tsan.FeaExtra.relu", "tsan.FeaExtra.relu", "tsan.FeaExtra.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tsan.FeaExtra.relu", "tsan.FeaExtra.conv_3_1", "tsan.FeaExtra.dilated_conv_3_1", "tsan.FeaExtra.dilated_conv_3_2", "tsan.FeaExtra.conv_3_2", "tsan.FeaExtra.confusion"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "input_1_1", "=", "self", ".", "relu", "(", "self", ".", "conv_3_1", "(", "x", ")", ")", "\n", "input_1_2", "=", "self", ".", "relu", "(", "self", ".", "dilated_conv_3_1", "(", "input_1_1", ")", ")", "\n", "input_2_1", "=", "self", ".", "relu", "(", "self", ".", "dilated_conv_3_2", "(", "x", ")", ")", "\n", "input_2_2", "=", "self", ".", "relu", "(", "self", ".", "conv_3_2", "(", "input_2_1", ")", ")", "\n", "output", "=", "torch", ".", "cat", "(", "[", "input_1_1", ",", "input_1_2", ",", "input_2_1", ",", "input_2_2", "]", ",", "1", ")", "\n", "output", "=", "self", ".", "relu", "(", "self", ".", "confusion", "(", "output", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.make_dense.__init__": [[43, 59], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "n_feats", "=", "64", ",", "i", "=", "0", ")", ":", "\n", "        ", "super", "(", "make_dense", ",", "self", ")", ".", "__init__", "(", ")", "\n", "kernel_size_1", "=", "3", "\n", "if", "i", "<", "3", ":", "\n", "            ", "s", "=", "i", "+", "1", "\n", "", "else", ":", "\n", "            ", "s", "=", "i", "-", "2", "*", "(", "i", "-", "3", ")", "\n", "#print(s)", "\n", "", "conv", "=", "common", ".", "default_conv", "\n", "self", ".", "conv_1_1", "=", "nn", ".", "Conv2d", "(", "n_channels", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv_1_2", "=", "nn", ".", "Conv2d", "(", "n_feats", "*", "4", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv_3_1", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "s", ",", "stride", "=", "1", ",", "dilation", "=", "s", ")", "\n", "self", ".", "dilated_conv_3_1", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "s", ",", "stride", "=", "1", ",", "dilation", "=", "s", ")", "\n", "self", ".", "conv_3_2", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "s", ",", "stride", "=", "1", ",", "dilation", "=", "s", ")", "\n", "self", ".", "dilated_conv_3_2", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ",", "padding", "=", "s", ",", "stride", "=", "1", ",", "dilation", "=", "s", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.make_dense.forward": [[60, 71], ["tsan.make_dense.relu", "tsan.make_dense.relu", "tsan.make_dense.relu", "tsan.make_dense.relu", "tsan.make_dense.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tsan.make_dense.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tsan.make_dense.conv_1_1", "tsan.make_dense.conv_3_1", "tsan.make_dense.dilated_conv_3_1", "tsan.make_dense.dilated_conv_3_2", "tsan.make_dense.conv_3_2", "tsan.make_dense.conv_1_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out1x1", "=", "self", ".", "relu", "(", "self", ".", "conv_1_1", "(", "x", ")", ")", "\n", "input_1_1", "=", "self", ".", "relu", "(", "self", ".", "conv_3_1", "(", "out1x1", ")", ")", "\n", "input_1_2", "=", "self", ".", "relu", "(", "self", ".", "dilated_conv_3_1", "(", "input_1_1", ")", ")", "\n", "input_2_1", "=", "self", ".", "relu", "(", "self", ".", "dilated_conv_3_2", "(", "out1x1", ")", ")", "\n", "input_2_2", "=", "self", ".", "relu", "(", "self", ".", "conv_3_2", "(", "input_2_1", ")", ")", "\n", "output", "=", "torch", ".", "cat", "(", "[", "input_1_1", ",", "input_1_2", ",", "input_2_1", ",", "input_2_2", "]", ",", "1", ")", "\n", "output", "=", "self", ".", "relu", "(", "self", ".", "conv_1_2", "(", "output", ")", ")", "\n", "#output = output + out1x1", "\n", "output", "=", "torch", ".", "cat", "(", "[", "output", ",", "x", "]", ",", "1", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.DRB.__init__": [[73, 82], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "modules.append", "tsan.make_dense"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "n_denselayer", "=", "6", ",", "n_feats", "=", "64", ")", ":", "\n", "        ", "super", "(", "DRB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "nChannels_", "=", "n_channels", "\n", "modules", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_denselayer", ")", ":", "\n", "            ", "modules", ".", "append", "(", "make_dense", "(", "nChannels_", ",", "n_feats", ",", "i", ")", ")", "\n", "nChannels_", "+=", "n_feats", "\n", "", "self", ".", "dense_layers", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "self", ".", "conv_1x1", "=", "nn", ".", "Conv2d", "(", "nChannels_", ",", "n_feats", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.DRB.forward": [[82, 87], ["tsan.DRB.dense_layers", "tsan.DRB.conv_1x1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "dense_layers", "(", "x", ")", "\n", "out", "=", "self", ".", "conv_1x1", "(", "out", ")", "\n", "out", "=", "x", "+", "out", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.CSB.__init__": [[89, 92], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ")", ":", "\n", "        ", "super", "(", "CSB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "n_feats", "*", "4", ",", "n_feats", "*", "4", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.CSB.forward": [[93, 109], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tsan.CSB.conv1", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "tsan.CSB.size", "x.size", "x.size", "tsan.CSB.size", "tsan.CSB.size", "x.size", "x.size", "tsan.CSB.size", "x.size", "x.size", "tsan.CSB.size", "tsan.CSB.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# print(x.size(2)//2)", "\n", "        ", "f1", "=", "x", "[", ":", ",", ":", ",", "0", ":", "x", ".", "size", "(", "2", ")", "//", "2", ",", "0", ":", "x", ".", "size", "(", "3", ")", "//", "2", "]", "\n", "f2", "=", "x", "[", ":", ",", ":", ",", "x", ".", "size", "(", "2", ")", "//", "2", ":", ",", "0", ":", "x", ".", "size", "(", "3", ")", "//", "2", "]", "\n", "f3", "=", "x", "[", ":", ",", ":", ",", "0", ":", "x", ".", "size", "(", "2", ")", "//", "2", ",", "x", ".", "size", "(", "3", ")", "//", "2", ":", "]", "\n", "f4", "=", "x", "[", ":", ",", ":", ",", "x", ".", "size", "(", "2", ")", "//", "2", ":", ",", "x", ".", "size", "(", "3", ")", "//", "2", ":", "]", "\n", "# print(f1.size(), f2.size(), f3.size(), f4.size())", "\n", "f_all", "=", "torch", ".", "cat", "(", "[", "f1", ",", "f2", ",", "f3", ",", "f4", "]", ",", "1", ")", "\n", "# print(f_all.size())", "\n", "f_all", "=", "self", ".", "conv1", "(", "f_all", ")", "\n", "out", "=", "x", "\n", "out", "[", ":", ",", ":", ",", "0", ":", "x", ".", "size", "(", "2", ")", "//", "2", ",", "0", ":", "x", ".", "size", "(", "3", ")", "//", "2", "]", "=", "f_all", "[", ":", ",", "0", ":", "f_all", ".", "size", "(", "1", ")", "//", "4", ",", ":", ",", ":", "]", "\n", "out", "[", ":", ",", ":", ",", "x", ".", "size", "(", "2", ")", "//", "2", ":", ",", "0", ":", "x", ".", "size", "(", "3", ")", "//", "2", "]", "=", "f_all", "[", ":", ",", "f_all", ".", "size", "(", "1", ")", "//", "4", ":", "f_all", ".", "size", "(", "1", ")", "//", "2", ",", ":", ",", ":", "]", "\n", "out", "[", ":", ",", ":", ",", "0", ":", "x", ".", "size", "(", "2", ")", "//", "2", ",", "x", ".", "size", "(", "3", ")", "//", "2", ":", "]", "=", "f_all", "[", ":", ",", "f_all", ".", "size", "(", "1", ")", "//", "2", ":", "f_all", ".", "size", "(", "1", ")", "*", "3", "//", "4", ",", ":", ",", ":", "]", "\n", "out", "[", ":", ",", ":", ",", "x", ".", "size", "(", "2", ")", "//", "2", ":", ",", "x", ".", "size", "(", "3", ")", "//", "2", ":", "]", "=", "f_all", "[", ":", ",", "f_all", ".", "size", "(", "1", ")", "*", "3", "//", "4", ":", ",", ":", ",", ":", "]", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.First_Order.__init__": [[111, 114], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "First_Order", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "adaptive", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.First_Order.forward": [[115, 126], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.permute", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.permute", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "tsan.First_Order.adaptive", "tsan.First_Order.adaptive", "tsan.First_Order.adaptive"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "first_c", "=", "F", ".", "sigmoid", "(", "self", ".", "adaptive", "(", "x", ")", ")", "\n", "first_c", "=", "first_c", "*", "x", "\n", "xh", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "first_h", "=", "F", ".", "sigmoid", "(", "self", ".", "adaptive", "(", "xh", ")", ")", "\n", "first_h", "=", "(", "first_h", "*", "xh", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "xw", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "first_w", "=", "F", ".", "sigmoid", "(", "self", ".", "adaptive", "(", "xw", ")", ")", "\n", "first_w", "=", "(", "first_w", "*", "xw", ")", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "\n", "return", "first_c", "+", "first_h", "+", "first_w", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.Second_Order.__init__": [[128, 130], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Second_Order", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.Second_Order.forward": [[131, 142], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.permute", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.permute", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "second_c", "=", "F", ".", "sigmoid", "(", "torch", ".", "mean", "(", "x", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ")", "\n", "second_c", "=", "second_c", "*", "x", "\n", "xh", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "second_h", "=", "F", ".", "sigmoid", "(", "torch", ".", "mean", "(", "xh", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ")", "\n", "second_h", "=", "(", "second_h", "*", "xh", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "xw", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "second_w", "=", "F", ".", "sigmoid", "(", "torch", ".", "mean", "(", "xw", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ")", "\n", "second_w", "=", "(", "second_w", "*", "xw", ")", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "\n", "return", "second_c", "+", "second_h", "+", "second_w", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.MCAB.__init__": [[144, 151], ["torch.Module.__init__", "tsan.DRB", "tsan.CSB", "tsan.First_Order", "tsan.Second_Order", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "n_denselayer", "=", "6", ",", "n_feats", "=", "64", ")", ":", "\n", "        ", "super", "(", "MCAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "drb", "=", "DRB", "(", "n_channels", ",", "n_denselayer", ",", "n_feats", ")", "\n", "self", ".", "csb", "=", "CSB", "(", "n_feats", ")", "\n", "self", ".", "first", "=", "First_Order", "(", ")", "\n", "self", ".", "second", "=", "Second_Order", "(", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.MCAB.forward": [[152, 158], ["tsan.MCAB.drb", "tsan.MCAB.csb", "tsan.MCAB.second", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "tsan.MCAB.first", "tsan.MCAB.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "down_b", "=", "self", ".", "drb", "(", "x", ")", "\n", "top_b", "=", "self", ".", "csb", "(", "x", ")", "\n", "top_b", "=", "self", ".", "second", "(", "self", ".", "first", "(", "top_b", ")", ")", "\n", "top_b", "=", "F", ".", "sigmoid", "(", "self", ".", "conv3", "(", "top_b", ")", ")", "\n", "return", "down_b", "*", "top_b", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.TSAN.__init__": [[162, 198], ["torch.Module.__init__", "common.MeanShift", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "tsan.MCAB", "tsan.MCAB", "tsan.MCAB", "conv", "conv", "common.MeanShift", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "tsan.TSAN.make_layer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "conv", "common.Upsampler"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.TSAN.make_layer"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "TSAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "conv", "=", "common", ".", "default_conv", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "n_colors", "=", "args", ".", "n_colors", "\n", "kernel_size_1", "=", "3", "\n", "n_channels", "=", "64", "\n", "n_denselayer", "=", "6", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "self", ".", "first_conv", "=", "nn", ".", "Conv2d", "(", "n_colors", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "\n", "modules_body1", "=", "MCAB", "(", "n_channels", ",", "n_denselayer", ",", "n_feats", ")", "\n", "modules_body2", "=", "MCAB", "(", "n_channels", ",", "n_denselayer", ",", "n_feats", ")", "\n", "modules_body3", "=", "MCAB", "(", "n_channels", ",", "n_denselayer", ",", "n_feats", ")", "\n", "\n", "# define tail module", "\n", "modules_tail", "=", "[", "\n", "nn", ".", "Conv2d", "(", "n_feats", "*", "3", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", ",", "\n", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ")", "]", "\n", "modules_up", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", "]", "\n", "self", ".", "output1", "=", "conv", "(", "n_feats", ",", "n_colors", ",", "1", ")", "\n", "self", ".", "output2", "=", "conv", "(", "n_feats", ",", "n_colors", ",", "1", ")", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "body1", "=", "modules_body1", "\n", "self", ".", "body2", "=", "modules_body2", "\n", "self", ".", "body3", "=", "modules_body3", "\n", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "modules_tail", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "*", "modules_up", ")", "\n", "self", ".", "first2_conv", "=", "nn", ".", "Conv2d", "(", "n_colors", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "self", ".", "refine", "=", "self", ".", "make_layer", "(", "Conv_ReLU_Block", ",", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.TSAN.make_layer": [[199, 204], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "make_layer", "(", "self", ",", "block", ",", "num_layer", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_layer", ")", ":", "\n", "            ", "layers", ".", "append", "(", "(", "block", "(", ")", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.TSAN.forward": [[205, 225], ["tsan.TSAN.sub_mean", "tsan.TSAN.relu", "tsan.TSAN.body1", "tsan.TSAN.body2", "tsan.TSAN.body3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tsan.TSAN.tail", "tsan.TSAN.up", "tsan.TSAN.output1", "tsan.TSAN.add_mean", "tsan.TSAN.first2_conv", "tsan.TSAN.refine", "tsan.TSAN.output2", "tsan.TSAN.add_mean", "tsan.TSAN.first_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "first_out", "=", "self", ".", "relu", "(", "self", ".", "first_conv", "(", "x", ")", ")", "\n", "out_dense1", "=", "self", ".", "body1", "(", "first_out", ")", "\n", "out_dense2", "=", "self", ".", "body2", "(", "out_dense1", ")", "\n", "out_dense3", "=", "self", ".", "body3", "(", "out_dense2", ")", "\n", "dense", "=", "torch", ".", "cat", "(", "[", "out_dense1", ",", "out_dense2", ",", "out_dense3", "]", ",", "1", ")", "\n", "\n", "out", "=", "self", ".", "tail", "(", "dense", ")", "\n", "out", "=", "out", "+", "first_out", "\n", "out", "=", "self", ".", "up", "(", "out", ")", "\n", "out", "=", "self", ".", "output1", "(", "out", ")", "\n", "out1", "=", "self", ".", "add_mean", "(", "out", ")", "\n", "out2", "=", "self", ".", "first2_conv", "(", "out", ")", "\n", "out2", "=", "self", ".", "refine", "(", "out2", ")", "\n", "out2", "=", "self", ".", "output2", "(", "out2", ")", "\n", "#print(out2.size(), out.size())", "\n", "out2", "=", "out2", "+", "out", "\n", "out2", "=", "self", ".", "add_mean", "(", "out2", ")", "\n", "return", "out1", ",", "out2", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.TSAN.load_state_dict": [[226, 251], ["tsan.TSAN.state_dict", "state_dict.items", "isinstance", "set", "set", "len", "KeyError", "own_state[].copy_", "tsan.TSAN.keys", "state_dict.keys", "name.find", "KeyError", "name.find", "print", "RuntimeError", "own_state[].size", "param.size"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", "=", "False", ")", ":", "\n", "        ", "own_state", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "own_state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "try", ":", "\n", "                    ", "own_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "if", "name", ".", "find", "(", "'tail'", ")", ">=", "0", ":", "\n", "                        ", "print", "(", "'Replace pre-trained upsampler to new one...'", ")", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the model are {} and '", "\n", "'whose dimensions in the checkpoint are {}.'", "\n", ".", "format", "(", "name", ",", "own_state", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "", "", "", "elif", "strict", ":", "\n", "                ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                    ", "raise", "KeyError", "(", "'unexpected key \"{}\" in state_dict'", "\n", ".", "format", "(", "name", ")", ")", "\n", "\n", "", "", "", "if", "strict", ":", "\n", "            ", "missing", "=", "set", "(", "own_state", ".", "keys", "(", ")", ")", "-", "set", "(", "state_dict", ".", "keys", "(", ")", ")", "\n", "if", "len", "(", "missing", ")", ">", "0", ":", "\n", "                ", "raise", "KeyError", "(", "'missing keys in state_dict: \"{}\"'", ".", "format", "(", "missing", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.tsan.make_model": [[7, 9], ["tsan.TSAN"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "TSAN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.__init__": [[9, 37], ["torch.Module.__init__", "print", "torch.device", "torch.device", "torch.device", "torch.device", "importlib.import_module", "importlib.import_module.make_model().to", "__init__.Model.load", "print", "__init__.Model.model.half", "torch.DataParallel", "torch.DataParallel", "args.model.lower", "importlib.import_module.make_model", "range"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.make_model"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "ckp", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'Making model...'", ")", "\n", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "self_ensemble", "=", "args", ".", "self_ensemble", "\n", "self", ".", "chop", "=", "args", ".", "chop", "\n", "self", ".", "precision", "=", "args", ".", "precision", "\n", "self", ".", "cpu", "=", "args", ".", "cpu", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "self", ".", "n_GPUs", "=", "args", ".", "n_GPUs", "\n", "self", ".", "save_models", "=", "args", ".", "save_models", "\n", "\n", "module", "=", "import_module", "(", "'model.'", "+", "args", ".", "model", ".", "lower", "(", ")", ")", "\n", "self", ".", "model", "=", "module", ".", "make_model", "(", "args", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "args", ".", "precision", "==", "'half'", ":", "self", ".", "model", ".", "half", "(", ")", "\n", "\n", "if", "not", "args", ".", "cpu", "and", "args", ".", "n_GPUs", ">", "1", ":", "\n", "            ", "self", ".", "model", "=", "nn", ".", "DataParallel", "(", "self", ".", "model", ",", "range", "(", "args", ".", "n_GPUs", ")", ")", "\n", "\n", "", "self", ".", "load", "(", "\n", "ckp", ".", "dir", ",", "\n", "pre_train", "=", "args", ".", "pre_train", ",", "\n", "resume", "=", "args", ".", "resume", ",", "\n", "cpu", "=", "args", ".", "cpu", "\n", ")", "\n", "print", "(", "'self.model'", ",", "self", ".", "model", ",", "file", "=", "ckp", ".", "log_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.forward": [[38, 56], ["__init__.Model.get_model", "hasattr", "__init__.Model.set_scale", "__init__.Model.forward_x8", "__init__.Model.forward_chop", "__init__.Model.model"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.set_scale", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.forward_x8", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.forward_chop"], ["", "def", "forward", "(", "self", ",", "x", ",", "idx_scale", ")", ":", "\n", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "target", "=", "self", ".", "get_model", "(", ")", "\n", "if", "hasattr", "(", "target", ",", "'set_scale'", ")", ":", "\n", "            ", "target", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "if", "self", ".", "self_ensemble", "and", "not", "self", ".", "training", ":", "\n", "            ", "if", "self", ".", "chop", ":", "\n", "                ", "forward_function", "=", "self", ".", "forward_chop", "\n", "", "else", ":", "\n", "                ", "forward_function", "=", "self", ".", "model", ".", "forward", "\n", "\n", "", "return", "self", ".", "forward_x8", "(", "x", ",", "forward_function", ")", "\n", "", "elif", "self", ".", "chop", "and", "not", "self", ".", "training", ":", "\n", "            ", "return", "self", ".", "forward_chop", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.get_model": [[57, 62], ["None"], "methods", ["None"], ["", "", "def", "get_model", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "n_GPUs", "==", "1", ":", "\n", "            ", "return", "self", ".", "model", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", ".", "module", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.state_dict": [[63, 66], ["__init__.Model.get_model", "__init__.Model.state_dict"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["", "", "def", "state_dict", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "target", "=", "self", ".", "get_model", "(", ")", "\n", "return", "target", ".", "state_dict", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.save": [[67, 84], ["__init__.Model.get_model", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Model.state_dict", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Model.state_dict", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Model.state_dict", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["", "def", "save", "(", "self", ",", "apath", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "target", "=", "self", ".", "get_model", "(", ")", "\n", "torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_latest.pt'", ")", "\n", ")", "\n", "if", "is_best", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_best.pt'", ")", "\n", ")", "\n", "\n", "", "if", "self", ".", "save_models", ":", "\n", "            ", "if", "(", "epoch", "+", "1", ")", "%", "100", "==", "0", ":", "\n", "                ", "torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_{}.pt'", ".", "format", "(", "epoch", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.load": [[87, 114], ["__init__.Model.get_model().load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "__init__.Model.get_model().load_state_dict", "__init__.Model.get_model", "os.path.join", "print", "__init__.Model.get_model().load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "__init__.Model.get_model", "os.path.join", "__init__.Model.get_model"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRN.load_state_dict", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRN.load_state_dict", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRN.load_state_dict", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.get_model"], ["", "", "", "def", "load", "(", "self", ",", "apath", ",", "pre_train", "=", "'.'", ",", "resume", "=", "-", "1", ",", "cpu", "=", "False", ")", ":", "\n", "        ", "if", "cpu", ":", "\n", "            ", "kwargs", "=", "{", "'map_location'", ":", "lambda", "storage", ",", "loc", ":", "storage", "}", "\n", "", "else", ":", "\n", "            ", "kwargs", "=", "{", "}", "\n", "", "if", "resume", "==", "-", "1", ":", "\n", "            ", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_latest.pt'", ")", ",", "\n", "**", "kwargs", "\n", ")", ",", "\n", "strict", "=", "False", "\n", ")", "\n", "", "elif", "resume", "==", "0", ":", "\n", "            ", "if", "pre_train", "!=", "'.'", ":", "\n", "                ", "print", "(", "'Loading model from {}'", ".", "format", "(", "pre_train", ")", ")", "\n", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "pre_train", ",", "**", "kwargs", ")", ",", "\n", "strict", "=", "False", "\n", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_{}.pt'", ".", "format", "(", "resume", ")", ")", ",", "\n", "**", "kwargs", "\n", ")", ",", "\n", "strict", "=", "False", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.forward_chop": [[117, 157], ["min", "x.size", "x.new", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "__init__.Model.model", "sr_list.extend", "__init__.Model.forward_chop", "sr_batch.chunk"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.forward_chop"], ["", "", "def", "forward_chop", "(", "self", ",", "x", ",", "shave", "=", "10", ",", "min_size", "=", "160000", ")", ":", "\n", "        ", "scale", "=", "self", ".", "scale", "[", "self", ".", "idx_scale", "]", "\n", "n_GPUs", "=", "min", "(", "self", ".", "n_GPUs", ",", "4", ")", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "h_half", ",", "w_half", "=", "h", "//", "2", ",", "w", "//", "2", "\n", "h_size", ",", "w_size", "=", "h_half", "+", "shave", ",", "w_half", "+", "shave", "\n", "lr_list", "=", "[", "\n", "x", "[", ":", ",", ":", ",", "0", ":", "h_size", ",", "0", ":", "w_size", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "0", ":", "h_size", ",", "(", "w", "-", "w_size", ")", ":", "w", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "(", "h", "-", "h_size", ")", ":", "h", ",", "0", ":", "w_size", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "(", "h", "-", "h_size", ")", ":", "h", ",", "(", "w", "-", "w_size", ")", ":", "w", "]", "]", "\n", "\n", "if", "w_size", "*", "h_size", "<", "min_size", ":", "\n", "            ", "sr_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "4", ",", "n_GPUs", ")", ":", "\n", "                ", "lr_batch", "=", "torch", ".", "cat", "(", "lr_list", "[", "i", ":", "(", "i", "+", "n_GPUs", ")", "]", ",", "dim", "=", "0", ")", "\n", "_", ",", "sr_batch", "=", "self", ".", "model", "(", "lr_batch", ")", "\n", "sr_list", ".", "extend", "(", "sr_batch", ".", "chunk", "(", "n_GPUs", ",", "dim", "=", "0", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "sr_list", "=", "[", "\n", "self", ".", "forward_chop", "(", "patch", ",", "shave", "=", "shave", ",", "min_size", "=", "min_size", ")", "for", "patch", "in", "lr_list", "\n", "]", "\n", "\n", "", "h", ",", "w", "=", "scale", "*", "h", ",", "scale", "*", "w", "\n", "h_half", ",", "w_half", "=", "scale", "*", "h_half", ",", "scale", "*", "w_half", "\n", "h_size", ",", "w_size", "=", "scale", "*", "h_size", ",", "scale", "*", "w_size", "\n", "shave", "*=", "scale", "\n", "\n", "output", "=", "x", ".", "new", "(", "b", ",", "c", ",", "h", ",", "w", ")", "\n", "output", "[", ":", ",", ":", ",", "0", ":", "h_half", ",", "0", ":", "w_half", "]", "=", "sr_list", "[", "0", "]", "[", ":", ",", ":", ",", "0", ":", "h_half", ",", "0", ":", "w_half", "]", "\n", "output", "[", ":", ",", ":", ",", "0", ":", "h_half", ",", "w_half", ":", "w", "]", "=", "sr_list", "[", "1", "]", "[", ":", ",", ":", ",", "0", ":", "h_half", ",", "(", "w_size", "-", "w", "+", "w_half", ")", ":", "w_size", "]", "\n", "output", "[", ":", ",", ":", ",", "h_half", ":", "h", ",", "0", ":", "w_half", "]", "=", "sr_list", "[", "2", "]", "[", ":", ",", ":", ",", "(", "h_size", "-", "h", "+", "h_half", ")", ":", "h_size", ",", "0", ":", "w_half", "]", "\n", "output", "[", ":", ",", ":", ",", "h_half", ":", "h", ",", "w_half", ":", "w", "]", "=", "sr_list", "[", "3", "]", "[", ":", ",", ":", ",", "(", "h_size", "-", "h", "+", "h_half", ")", ":", "h_size", ",", "(", "w_size", "-", "w", "+", "w_half", ")", ":", "w_size", "]", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.__init__.Model.forward_x8": [[158, 192], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.mean", "torch.cat.mean", "v.float.float.data.cpu().numpy", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "lr_list.extend", "forward_function", "len", "v.float.float.float", "v2np[].copy", "ret.half.half.half", "__init__.Model.forward_x8._transform"], "methods", ["None"], ["", "def", "forward_x8", "(", "self", ",", "x", ",", "forward_function", ")", ":", "# for MSRN +", "\n", "        ", "def", "_transform", "(", "v", ",", "op", ")", ":", "\n", "            ", "if", "self", ".", "precision", "!=", "'single'", ":", "v", "=", "v", ".", "float", "(", ")", "\n", "\n", "v2np", "=", "v", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "op", "==", "'v'", ":", "\n", "                ", "tfnp", "=", "v2np", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", "\n", "", "elif", "op", "==", "'h'", ":", "\n", "                ", "tfnp", "=", "v2np", "[", ":", ",", ":", ",", ":", ":", "-", "1", ",", ":", "]", ".", "copy", "(", ")", "\n", "", "elif", "op", "==", "'t'", ":", "\n", "                ", "tfnp", "=", "v2np", ".", "transpose", "(", "(", "0", ",", "1", ",", "3", ",", "2", ")", ")", ".", "copy", "(", ")", "\n", "\n", "", "ret", "=", "torch", ".", "Tensor", "(", "tfnp", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "self", ".", "precision", "==", "'half'", ":", "ret", "=", "ret", ".", "half", "(", ")", "\n", "\n", "return", "ret", "\n", "\n", "", "lr_list", "=", "[", "x", "]", "\n", "for", "tf", "in", "'v'", ",", "'h'", ",", "'t'", ":", "\n", "            ", "lr_list", ".", "extend", "(", "[", "_transform", "(", "t", ",", "tf", ")", "for", "t", "in", "lr_list", "]", ")", "\n", "\n", "", "sr_list", "=", "[", "forward_function", "(", "aug", ")", "for", "aug", "in", "lr_list", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "sr_list", ")", ")", ":", "\n", "            ", "if", "i", ">", "3", ":", "\n", "                ", "sr_list", "[", "i", "]", "=", "_transform", "(", "sr_list", "[", "i", "]", ",", "'t'", ")", "\n", "", "if", "i", "%", "4", ">", "1", ":", "\n", "                ", "sr_list", "[", "i", "]", "=", "_transform", "(", "sr_list", "[", "i", "]", ",", "'h'", ")", "\n", "", "if", "(", "i", "%", "4", ")", "%", "2", "==", "1", ":", "\n", "                ", "sr_list", "[", "i", "]", "=", "_transform", "(", "sr_list", "[", "i", "]", ",", "'v'", ")", "\n", "\n", "", "", "output_cat", "=", "torch", ".", "cat", "(", "sr_list", ",", "dim", "=", "0", ")", "\n", "output", "=", "output_cat", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRB.__init__": [[9, 21], ["torch.Module.__init__", "conv", "conv", "conv", "conv", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", "=", "common", ".", "default_conv", ",", "n_feats", "=", "64", ")", ":", "\n", "        ", "super", "(", "MSRB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "kernel_size_1", "=", "3", "\n", "kernel_size_2", "=", "5", "\n", "\n", "self", ".", "conv_3_1", "=", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size_1", ")", "\n", "self", ".", "conv_3_2", "=", "conv", "(", "n_feats", "*", "2", ",", "n_feats", "*", "2", ",", "kernel_size_1", ")", "\n", "self", ".", "conv_5_1", "=", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size_2", ")", "\n", "self", ".", "conv_5_2", "=", "conv", "(", "n_feats", "*", "2", ",", "n_feats", "*", "2", ",", "kernel_size_2", ")", "\n", "self", ".", "confusion", "=", "nn", ".", "Conv2d", "(", "n_feats", "*", "4", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRB.forward": [[22, 33], ["msrn.MSRB.relu", "msrn.MSRB.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "msrn.MSRB.relu", "msrn.MSRB.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "msrn.MSRB.confusion", "msrn.MSRB.conv_3_1", "msrn.MSRB.conv_5_1", "msrn.MSRB.conv_3_2", "msrn.MSRB.conv_5_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "input_1", "=", "x", "\n", "output_3_1", "=", "self", ".", "relu", "(", "self", ".", "conv_3_1", "(", "input_1", ")", ")", "\n", "output_5_1", "=", "self", ".", "relu", "(", "self", ".", "conv_5_1", "(", "input_1", ")", ")", "\n", "input_2", "=", "torch", ".", "cat", "(", "[", "output_3_1", ",", "output_5_1", "]", ",", "1", ")", "\n", "output_3_2", "=", "self", ".", "relu", "(", "self", ".", "conv_3_2", "(", "input_2", ")", ")", "\n", "output_5_2", "=", "self", ".", "relu", "(", "self", ".", "conv_5_2", "(", "input_2", ")", ")", "\n", "input_3", "=", "torch", ".", "cat", "(", "[", "output_3_2", ",", "output_5_2", "]", ",", "1", ")", "\n", "output", "=", "self", ".", "confusion", "(", "input_3", ")", "\n", "output", "+=", "x", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRN.__init__": [[35, 72], ["torch.Module.__init__", "print", "torch.ReLU", "torch.ReLU", "model.common.MeanShift", "torch.ModuleList", "torch.ModuleList", "range", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "torch.ModuleList.append", "torch.Conv2d", "torch.Conv2d", "conv", "model.common.Upsampler", "conv", "msrn.MSRB"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "MSRN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'using msrn'", ")", "\n", "n_feats", "=", "64", "\n", "n_blocks", "=", "8", "\n", "kernel_size", "=", "3", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "self", ".", "n_blocks", "=", "n_blocks", "\n", "\n", "# RGB mean for DIV2K", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "# define head module", "\n", "modules_head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "# define body module", "\n", "modules_body", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "modules_body", ".", "append", "(", "\n", "MSRB", "(", "n_feats", "=", "n_feats", ")", ")", "\n", "\n", "# define tail module", "\n", "", "modules_tail", "=", "[", "\n", "nn", ".", "Conv2d", "(", "n_feats", "*", "(", "self", ".", "n_blocks", "+", "1", ")", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", ",", "\n", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ",", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "modules_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "modules_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRN.forward": [[73, 88], ["msrn.MSRN.sub_mean", "msrn.MSRN.head", "range", "MSRB_out.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "msrn.MSRN.tail", "msrn.MSRN.add_mean", "MSRB_out.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "res", "=", "x", "\n", "\n", "MSRB_out", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "n_blocks", ")", ":", "\n", "            ", "x", "=", "self", ".", "body", "[", "i", "]", "(", "x", ")", "\n", "MSRB_out", ".", "append", "(", "x", ")", "\n", "", "MSRB_out", ".", "append", "(", "res", ")", "\n", "\n", "res", "=", "torch", ".", "cat", "(", "MSRB_out", ",", "1", ")", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRN.load_state_dict": [[89, 114], ["msrn.MSRN.state_dict", "state_dict.items", "isinstance", "set", "set", "len", "KeyError", "own_state[].copy_", "msrn.MSRN.keys", "state_dict.keys", "name.find", "KeyError", "name.find", "print", "RuntimeError", "own_state[].size", "param.size"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", "=", "False", ")", ":", "\n", "        ", "own_state", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "own_state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "try", ":", "\n", "                    ", "own_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "if", "name", ".", "find", "(", "'tail'", ")", ">=", "0", ":", "\n", "                        ", "print", "(", "'Replace pre-trained upsampler to new one...'", ")", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the model are {} and '", "\n", "'whose dimensions in the checkpoint are {}.'", "\n", ".", "format", "(", "name", ",", "own_state", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "", "", "", "elif", "strict", ":", "\n", "                ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                    ", "raise", "KeyError", "(", "'unexpected key \"{}\" in state_dict'", "\n", ".", "format", "(", "name", ")", ")", "\n", "\n", "", "", "", "if", "strict", ":", "\n", "            ", "missing", "=", "set", "(", "own_state", ".", "keys", "(", ")", ")", "-", "set", "(", "state_dict", ".", "keys", "(", ")", ")", "\n", "if", "len", "(", "missing", ")", ">", "0", ":", "\n", "                ", "raise", "KeyError", "(", "'missing keys in state_dict: \"{}\"'", ".", "format", "(", "missing", ")", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.make_model": [[5, 7], ["msrn.MSRN"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "MSRN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.demo.Demo.__init__": [[12, 26], ["os.listdir", "demo.Demo.filelist.sort", "demo.Demo.filelist.append", "f.find", "f.find", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "'Demo'", ",", "train", "=", "False", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "train", "=", "False", "\n", "self", ".", "do_eval", "=", "False", "\n", "self", ".", "benchmark", "=", "benchmark", "\n", "\n", "self", ".", "filelist", "=", "[", "]", "\n", "for", "f", "in", "os", ".", "listdir", "(", "args", ".", "dir_demo", ")", ":", "\n", "            ", "if", "f", ".", "find", "(", "'.png'", ")", ">=", "0", "or", "f", ".", "find", "(", "'.jp'", ")", ">=", "0", ":", "\n", "                ", "self", ".", "filelist", ".", "append", "(", "os", ".", "path", ".", "join", "(", "args", ".", "dir_demo", ",", "f", ")", ")", "\n", "", "", "self", ".", "filelist", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.demo.Demo.__getitem__": [[27, 35], ["os.path.splitext", "imageio.imread", "torch.common.set_channel", "torch.common.np2Tensor", "os.path.split"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.set_channel", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.np2Tensor"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "split", "(", "self", ".", "filelist", "[", "idx", "]", ")", "[", "-", "1", "]", "\n", "filename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "\n", "lr", "=", "imageio", ".", "imread", "(", "self", ".", "filelist", "[", "idx", "]", ")", "\n", "lr", ",", "=", "common", ".", "set_channel", "(", "lr", ",", "n_channels", "=", "self", ".", "args", ".", "n_colors", ")", "\n", "lr_t", ",", "=", "common", ".", "np2Tensor", "(", "lr", ",", "rgb_range", "=", "self", ".", "args", ".", "rgb_range", ")", "\n", "\n", "return", "lr_t", ",", "-", "1", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.demo.Demo.__len__": [[36, 38], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "filelist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.demo.Demo.set_scale": [[39, 41], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.__init__": [[13, 88], ["print", "list", "srdata.SRData._set_filesystem", "srdata.SRData._scan", "r.split", "map", "args.ext.find", "os.path.join", "os.makedirs", "args.ext.find", "srdata.SRData._scan", "srdata.SRData._check_and_load", "args.data_range.split", "srdata.SRData._name_hrbin", "srdata.SRData._check_and_load", "len", "int", "srdata.SRData._name_lrbin", "zip", "args.ext.find", "args.ext.find", "os.makedirs", "enumerate", "len", "srdata.SRData.dir_hr.replace", "os.makedirs", "h.replace", "b.replace.replace.replace", "srdata.SRData.images_hr.append", "srdata.SRData._check_and_load", "os.path.join", "l.replace", "b.replace.replace.replace", "srdata.SRData.images_lr[].append", "srdata.SRData._check_and_load", "srdata.SRData.dir_lr.replace"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.data.div2k.DIV2K._set_filesystem", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.div2k.DIV2K._scan", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.div2k.DIV2K._scan", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._check_and_load", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._name_hrbin", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._check_and_load", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._name_lrbin", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._check_and_load", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._check_and_load"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "''", ",", "train", "=", "True", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "name", "=", "name", "\n", "print", "(", "'this name'", ",", "self", ".", "name", ")", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "split", "=", "'train'", "if", "train", "else", "'test'", "\n", "self", ".", "do_eval", "=", "True", "\n", "self", ".", "benchmark", "=", "benchmark", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "\n", "data_range", "=", "[", "r", ".", "split", "(", "'-'", ")", "for", "r", "in", "args", ".", "data_range", ".", "split", "(", "'/'", ")", "]", "\n", "if", "train", ":", "\n", "            ", "data_range", "=", "data_range", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "if", "args", ".", "test_only", "and", "len", "(", "data_range", ")", "==", "1", ":", "\n", "                ", "data_range", "=", "data_range", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "data_range", "=", "data_range", "[", "1", "]", "\n", "", "", "self", ".", "begin", ",", "self", ".", "end", "=", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ")", ",", "data_range", ")", ")", "\n", "self", ".", "_set_filesystem", "(", "args", ".", "dir_data", ")", "\n", "if", "args", ".", "ext", ".", "find", "(", "'img'", ")", "<", "0", ":", "\n", "            ", "path_bin", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'bin'", ")", "\n", "os", ".", "makedirs", "(", "path_bin", ",", "exist_ok", "=", "True", ")", "\n", "\n", "", "list_hr", ",", "list_lr", "=", "self", ".", "_scan", "(", ")", "\n", "if", "args", ".", "ext", ".", "find", "(", "'bin'", ")", ">=", "0", ":", "\n", "# Binary files are stored in 'bin' folder", "\n", "# If the binary file exists, load it. If not, make it.", "\n", "            ", "list_hr", ",", "list_lr", "=", "self", ".", "_scan", "(", ")", "\n", "self", ".", "images_hr", "=", "self", ".", "_check_and_load", "(", "\n", "args", ".", "ext", ",", "list_hr", ",", "self", ".", "_name_hrbin", "(", ")", "\n", ")", "\n", "self", ".", "images_lr", "=", "[", "\n", "self", ".", "_check_and_load", "(", "args", ".", "ext", ",", "l", ",", "self", ".", "_name_lrbin", "(", "s", ")", ")", "for", "s", ",", "l", "in", "zip", "(", "self", ".", "scale", ",", "list_lr", ")", "\n", "]", "\n", "", "else", ":", "\n", "            ", "if", "args", ".", "ext", ".", "find", "(", "'img'", ")", ">=", "0", "or", "benchmark", ":", "\n", "                ", "self", ".", "images_hr", ",", "self", ".", "images_lr", "=", "list_hr", ",", "list_lr", "\n", "", "elif", "args", ".", "ext", ".", "find", "(", "'sep'", ")", ">=", "0", ":", "\n", "                ", "os", ".", "makedirs", "(", "\n", "self", ".", "dir_hr", ".", "replace", "(", "self", ".", "apath", ",", "path_bin", ")", ",", "\n", "exist_ok", "=", "True", "\n", ")", "\n", "for", "s", "in", "self", ".", "scale", ":", "\n", "                    ", "os", ".", "makedirs", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dir_lr", ".", "replace", "(", "self", ".", "apath", ",", "path_bin", ")", ",", "\n", "'X{}'", ".", "format", "(", "s", ")", "\n", ")", ",", "\n", "exist_ok", "=", "True", "\n", ")", "\n", "\n", "", "self", ".", "images_hr", ",", "self", ".", "images_lr", "=", "[", "]", ",", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "for", "h", "in", "list_hr", ":", "\n", "                    ", "b", "=", "h", ".", "replace", "(", "self", ".", "apath", ",", "path_bin", ")", "\n", "b", "=", "b", ".", "replace", "(", "self", ".", "ext", "[", "0", "]", ",", "'.pt'", ")", "\n", "self", ".", "images_hr", ".", "append", "(", "b", ")", "\n", "self", ".", "_check_and_load", "(", "\n", "args", ".", "ext", ",", "[", "h", "]", ",", "b", ",", "verbose", "=", "True", ",", "load", "=", "False", "\n", ")", "\n", "\n", "", "for", "i", ",", "ll", "in", "enumerate", "(", "list_lr", ")", ":", "\n", "                    ", "for", "l", "in", "ll", ":", "\n", "                        ", "b", "=", "l", ".", "replace", "(", "self", ".", "apath", ",", "path_bin", ")", "\n", "b", "=", "b", ".", "replace", "(", "self", ".", "ext", "[", "1", "]", ",", "'.pt'", ")", "\n", "self", ".", "images_lr", "[", "i", "]", ".", "append", "(", "b", ")", "\n", "self", ".", "_check_and_load", "(", "\n", "args", ".", "ext", ",", "[", "l", "]", ",", "b", ",", "verbose", "=", "True", ",", "load", "=", "False", "\n", ")", "\n", "\n", "", "", "", "", "if", "train", ":", "\n", "            ", "self", ".", "repeat", "=", "args", ".", "test_every", "//", "(", "len", "(", "self", ".", "images_hr", ")", "//", "args", ".", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._scan": [[90, 108], ["sorted", "print", "print", "glob.glob", "os.path.join", "os.path.splitext", "enumerate", "os.path.join", "os.path.basename", "names_lr[].append", "os.path.join"], "methods", ["None"], ["", "", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "names_hr", "=", "sorted", "(", "\n", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dir_hr", ",", "'*'", "+", "self", ".", "ext", "[", "0", "]", ")", ")", "\n", ")", "\n", "print", "(", "'self.dir_hr'", ",", "self", ".", "dir_hr", ")", "\n", "print", "(", "'path join'", ",", "os", ".", "path", ".", "join", "(", "self", ".", "dir_hr", ",", "'*'", "+", "self", ".", "ext", "[", "0", "]", ")", ")", "\n", "names_lr", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "for", "f", "in", "names_hr", ":", "\n", "#print('this is f',f)", "\n", "            ", "filename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "f", ")", ")", "\n", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "names_lr", "[", "si", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dir_lr", ",", "'X{}/{}x{}{}'", ".", "format", "(", "\n", "s", ",", "filename", ",", "s", ",", "self", ".", "ext", "[", "1", "]", "\n", ")", "\n", ")", ")", "\n", "#print('_scan name hr lr', len(name_hr))", "\n", "", "", "return", "names_hr", ",", "names_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._set_filesystem": [[109, 115], ["os.path.join", "os.path.join", "os.path.join", "print"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "os", ".", "path", ".", "join", "(", "dir_data", ",", "self", ".", "name", ")", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'HR'", ")", "\n", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'LR_bicubic'", ")", "\n", "self", ".", "ext", "=", "(", "'.png'", ",", "'.png'", ")", "\n", "print", "(", "'set filesystem'", ",", "self", ".", "dir_hr", ",", "self", ".", "dir_lr", ",", "self", ".", "ext", ")", "\n", "", "def", "_name_hrbin", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._name_hrbin": [[115, 120], ["os.path.join"], "methods", ["None"], ["", "def", "_name_hrbin", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_HR.pt'", ".", "format", "(", "self", ".", "split", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._name_lrbin": [[122, 127], ["os.path.join"], "methods", ["None"], ["", "def", "_name_lrbin", "(", "self", ",", "scale", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_LR_X{}.pt'", ".", "format", "(", "self", ".", "split", ",", "scale", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._check_and_load": [[129, 149], ["os.path.isfile", "ext.find", "open", "pickle.dump", "print", "open", "pickle.load", "ext.find", "print", "print", "imageio.imread", "os.path.splitext", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load"], ["", "def", "_check_and_load", "(", "self", ",", "ext", ",", "l", ",", "f", ",", "verbose", "=", "True", ",", "load", "=", "True", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "f", ")", "and", "ext", ".", "find", "(", "'reset'", ")", "<", "0", ":", "\n", "            ", "if", "load", ":", "\n", "                ", "if", "verbose", ":", "print", "(", "'Loading {}...'", ".", "format", "(", "f", ")", ")", "\n", "with", "open", "(", "f", ",", "'rb'", ")", "as", "_f", ":", "ret", "=", "pickle", ".", "load", "(", "_f", ")", "\n", "return", "ret", "\n", "", "else", ":", "\n", "                ", "return", "None", "\n", "", "", "else", ":", "\n", "            ", "if", "verbose", ":", "\n", "                ", "if", "ext", ".", "find", "(", "'reset'", ")", ">=", "0", ":", "\n", "                    ", "print", "(", "'Making a new binary: {}'", ".", "format", "(", "f", ")", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "'{} does not exist. Now making binary...'", ".", "format", "(", "f", ")", ")", "\n", "", "", "b", "=", "[", "{", "\n", "'name'", ":", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "_l", ")", ")", "[", "0", "]", ",", "\n", "'image'", ":", "imageio", ".", "imread", "(", "_l", ")", "\n", "}", "for", "_l", "in", "l", "]", "\n", "with", "open", "(", "f", ",", "'wb'", ")", "as", "_f", ":", "pickle", ".", "dump", "(", "b", ",", "_f", ")", "\n", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.__getitem__": [[150, 159], ["srdata.SRData._load_file", "srdata.SRData.get_patch", "torch.common.set_channel", "torch.common.np2Tensor"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._load_file", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.get_patch", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.set_channel", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.np2Tensor"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "lr", ",", "hr", ",", "filename", "=", "self", ".", "_load_file", "(", "idx", ")", "\n", "lr", ",", "hr", "=", "self", ".", "get_patch", "(", "lr", ",", "hr", ")", "\n", "lr", ",", "hr", "=", "common", ".", "set_channel", "(", "lr", ",", "hr", ",", "n_channels", "=", "self", ".", "args", ".", "n_colors", ")", "\n", "lr_tensor", ",", "hr_tensor", "=", "common", ".", "np2Tensor", "(", "\n", "lr", ",", "hr", ",", "rgb_range", "=", "self", ".", "args", ".", "rgb_range", "\n", ")", "\n", "\n", "return", "lr_tensor", ",", "hr_tensor", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.__len__": [[160, 165], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "images_hr", ")", "*", "self", ".", "repeat", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "images_hr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._get_index": [[166, 171], ["len"], "methods", ["None"], ["", "", "def", "_get_index", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "idx", "%", "len", "(", "self", ".", "images_hr", ")", "\n", "", "else", ":", "\n", "            ", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._load_file": [[172, 191], ["srdata.SRData._get_index", "srdata.SRData.args.ext.find", "os.path.splitext", "os.path.basename", "imageio.imread", "imageio.imread", "srdata.SRData.args.ext.find", "open", "open", "numpy.load", "numpy.load"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData._get_index", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load"], ["", "", "def", "_load_file", "(", "self", ",", "idx", ")", ":", "\n", "        ", "idx", "=", "self", ".", "_get_index", "(", "idx", ")", "\n", "f_hr", "=", "self", ".", "images_hr", "[", "idx", "]", "\n", "f_lr", "=", "self", ".", "images_lr", "[", "self", ".", "idx_scale", "]", "[", "idx", "]", "\n", "\n", "if", "self", ".", "args", ".", "ext", ".", "find", "(", "'bin'", ")", ">=", "0", ":", "\n", "            ", "filename", "=", "f_hr", "[", "'name'", "]", "\n", "hr", "=", "f_hr", "[", "'image'", "]", "\n", "lr", "=", "f_lr", "[", "'image'", "]", "\n", "", "else", ":", "\n", "            ", "filename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "f_hr", ")", ")", "\n", "if", "self", ".", "args", ".", "ext", "==", "'img'", "or", "self", ".", "benchmark", ":", "\n", "                ", "hr", "=", "imageio", ".", "imread", "(", "f_hr", ")", "\n", "lr", "=", "imageio", ".", "imread", "(", "f_lr", ")", "\n", "", "elif", "self", ".", "args", ".", "ext", ".", "find", "(", "'sep'", ")", ">=", "0", ":", "\n", "                ", "with", "open", "(", "f_hr", ",", "'rb'", ")", "as", "_f", ":", "hr", "=", "np", ".", "load", "(", "_f", ")", "[", "0", "]", "[", "'image'", "]", "\n", "with", "open", "(", "f_lr", ",", "'rb'", ")", "as", "_f", ":", "lr", "=", "np", ".", "load", "(", "_f", ")", "[", "0", "]", "[", "'image'", "]", "\n", "\n", "", "", "return", "lr", ",", "hr", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.get_patch": [[192, 210], ["len", "torch.common.get_patch", "torch.common.augment"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.get_patch", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.augment"], ["", "def", "get_patch", "(", "self", ",", "lr", ",", "hr", ")", ":", "\n", "        ", "scale", "=", "self", ".", "scale", "[", "self", ".", "idx_scale", "]", "\n", "multi_scale", "=", "len", "(", "self", ".", "scale", ")", ">", "1", "\n", "if", "self", ".", "train", ":", "\n", "            ", "lr", ",", "hr", "=", "common", ".", "get_patch", "(", "\n", "lr", ",", "\n", "hr", ",", "\n", "patch_size", "=", "self", ".", "args", ".", "patch_size", ",", "\n", "scale", "=", "scale", ",", "\n", "multi_scale", "=", "multi_scale", "\n", ")", "\n", "if", "not", "self", ".", "args", ".", "no_augment", ":", "\n", "                ", "lr", ",", "hr", "=", "common", ".", "augment", "(", "lr", ",", "hr", ")", "\n", "", "", "else", ":", "\n", "            ", "ih", ",", "iw", "=", "lr", ".", "shape", "[", ":", "2", "]", "\n", "hr", "=", "hr", "[", "0", ":", "ih", "*", "scale", ",", "0", ":", "iw", "*", "scale", "]", "\n", "\n", "", "return", "lr", ",", "hr", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.set_scale": [[211, 213], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.get_patch": [[9, 26], ["random.randrange", "random.randrange"], "function", ["None"], ["def", "default_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ")", "\n", "\n", "", "class", "HWHW_Module", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "\"\"\" Position attention module\"\"\"", "\n", "def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", "HWHW_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chanel_in", "=", "in_dim", "\n", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.set_channel": [[27, 41], ["common.set_channel._set_channel"], "function", ["None"], ["        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X H X W)\n            returns :\n                out : attention value + input feature\n                attention: B X (HxW) X (HxW)\n        \"\"\"", "\n", "m_batchsize", ",", "C", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "proj_query", "=", "self", ".", "query_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "proj_key", "=", "self", ".", "key_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", "\n", "energy", "=", "torch", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "\n", "attention", "=", "self", ".", "sigmoid", "(", "energy", ")", "\n", "proj_value", "=", "self", ".", "value_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "proj_value", ",", "attention", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.np2Tensor": [[42, 51], ["numpy.ascontiguousarray", "torch.from_numpy().float", "torch.from_numpy().float.mul_", "common.np2Tensor._np2Tensor"], "function", ["None"], ["out", "=", "out", ".", "view", "(", "m_batchsize", ",", "C", ",", "height", ",", "width", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "return", "out", "\n", "\n", "\n", "", "", "class", "CC_Module", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "\"\"\" Channel attention module\"\"\"", "\n", "def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", "CC_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.common.augment": [[52, 65], ["common.augment._augment"], "function", ["None"], ["self", ".", "chanel_in", "=", "in_dim", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X H X W)\n            returns :\n                out : attention value + input feature\n                attention: B X C X C\n        \"\"\"", "\n", "m_batchsize", ",", "C", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "proj_query", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", ",", "-", "1", ")", "\n", "proj_key", "=", "x", ".", "view", "(", "m_batchsize", ",", "C", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.benchmark.Benchmark.__init__": [[12, 15], ["data.srdata.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "''", ",", "train", "=", "True", ",", "benchmark", "=", "True", ")", ":", "\n", "        ", "super", "(", "Benchmark", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "name", "=", "name", ",", "train", "=", "train", ",", "benchmark", "=", "True", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.benchmark.Benchmark._set_filesystem": [[17, 22], ["os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "os", ".", "path", ".", "join", "(", "dir_data", ",", "'benchmark'", ",", "self", ".", "name", ")", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'HR'", ")", "\n", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'LR_bicubic'", ")", "\n", "self", ".", "ext", "=", "(", "''", ",", "'.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.div2k.DIV2K.__init__": [[5, 8], ["data.srdata.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "name", "=", "'DIV2K'", ",", "train", "=", "True", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "super", "(", "DIV2K", ",", "self", ")", ".", "__init__", "(", "\n", "args", ",", "name", "=", "name", ",", "train", "=", "train", ",", "benchmark", "=", "benchmark", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.div2k.DIV2K._scan": [[10, 16], ["super()._scan"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.data.div2k.DIV2K._scan"], ["", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "names_hr", ",", "names_lr", "=", "super", "(", "DIV2K", ",", "self", ")", ".", "_scan", "(", ")", "\n", "names_hr", "=", "names_hr", "[", "self", ".", "begin", "-", "1", ":", "self", ".", "end", "]", "\n", "names_lr", "=", "[", "n", "[", "self", ".", "begin", "-", "1", ":", "self", ".", "end", "]", "for", "n", "in", "names_lr", "]", "\n", "\n", "return", "names_hr", ",", "names_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.div2k.DIV2K._set_filesystem": [[17, 21], ["super()._set_filesystem", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.data.div2k.DIV2K._set_filesystem"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "super", "(", "DIV2K", ",", "self", ")", ".", "_set_filesystem", "(", "dir_data", ")", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'DIV2K_train_HR'", ")", "\n", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'DIV2K_train_LR_bicubic'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.data.__init__.Data.__init__": [[7, 33], ["dataloader.MSDataLoader", "importlib.import_module", "dataloader.MSDataLoader", "importlib.import_module", "importlib.import_module", "getattr", "getattr", "getattr", "args.data_train.lower", "args.data_test.lower"], "methods", ["None"], ["\n", "class", "Model", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "args", ",", "ckp", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'Making model...'", ")", "\n", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "self_ensemble", "=", "args", ".", "self_ensemble", "\n", "self", ".", "chop", "=", "args", ".", "chop", "\n", "self", ".", "precision", "=", "args", ".", "precision", "\n", "self", ".", "cpu", "=", "args", ".", "cpu", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "self", ".", "n_GPUs", "=", "args", ".", "n_GPUs", "\n", "self", ".", "save_models", "=", "args", ".", "save_models", "\n", "\n", "module", "=", "import_module", "(", "'model.'", "+", "args", ".", "model", ".", "lower", "(", ")", ")", "\n", "self", ".", "model", "=", "module", ".", "make_model", "(", "args", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "args", ".", "precision", "==", "'half'", ":", "self", ".", "model", ".", "half", "(", ")", "\n", "\n", "if", "not", "args", ".", "cpu", "and", "args", ".", "n_GPUs", ">", "1", ":", "\n", "            ", "self", ".", "model", "=", "nn", ".", "DataParallel", "(", "self", ".", "model", ",", "range", "(", "args", ".", "n_GPUs", ")", ")", "\n", "\n", "", "self", ".", "load", "(", "\n", "ckp", ".", "dir", ",", "\n", "pre_train", "=", "args", ".", "pre_train", ",", "\n", "resume", "=", "args", ".", "resume", ",", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.discriminator.Discriminator.__init__": [[6, 39], ["torch.Module.__init__", "torch.LeakyReLU", "range", "torch.Sequential", "torch.Sequential", "model.common.BasicBlock", "m_features.append", "torch.Linear", "torch.Linear", "model.common.BasicBlock"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "gan_type", "=", "'GAN'", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "in_channels", "=", "3", "\n", "out_channels", "=", "64", "\n", "depth", "=", "7", "\n", "#bn = not gan_type == 'WGAN_GP'", "\n", "bn", "=", "True", "\n", "act", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ",", "inplace", "=", "True", ")", "\n", "\n", "m_features", "=", "[", "\n", "common", ".", "BasicBlock", "(", "args", ".", "n_colors", ",", "out_channels", ",", "3", ",", "bn", "=", "bn", ",", "act", "=", "act", ")", "\n", "]", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "in_channels", "=", "out_channels", "\n", "if", "i", "%", "2", "==", "1", ":", "\n", "                ", "stride", "=", "1", "\n", "out_channels", "*=", "2", "\n", "", "else", ":", "\n", "                ", "stride", "=", "2", "\n", "", "m_features", ".", "append", "(", "common", ".", "BasicBlock", "(", "\n", "in_channels", ",", "out_channels", ",", "3", ",", "stride", "=", "stride", ",", "bn", "=", "bn", ",", "act", "=", "act", "\n", ")", ")", "\n", "\n", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "m_features", ")", "\n", "\n", "patch_size", "=", "args", ".", "patch_size", "//", "(", "2", "**", "(", "(", "depth", "+", "1", ")", "//", "2", ")", ")", "\n", "m_classifier", "=", "[", "\n", "nn", ".", "Linear", "(", "out_channels", "*", "patch_size", "**", "2", ",", "1024", ")", ",", "\n", "act", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "1", ")", "\n", "]", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "*", "m_classifier", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.discriminator.Discriminator.forward": [[40, 45], ["discriminator.Discriminator.features", "discriminator.Discriminator.classifier", "discriminator.Discriminator.view", "discriminator.Discriminator.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "features", "=", "self", ".", "features", "(", "x", ")", "\n", "output", "=", "self", ".", "classifier", "(", "features", ".", "view", "(", "features", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.vgg.VGG.__init__": [[10, 23], ["torch.Module.__init__", "model.common.MeanShift", "torchvision.vgg19", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_index", ",", "rgb_range", "=", "1", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_features", "=", "models", ".", "vgg19", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "modules", "=", "[", "m", "for", "m", "in", "vgg_features", "]", "\n", "if", "conv_index", "==", "'22'", ":", "\n", "            ", "self", ".", "vgg", "=", "nn", ".", "Sequential", "(", "*", "modules", "[", ":", "8", "]", ")", "\n", "", "elif", "conv_index", "==", "'54'", ":", "\n", "            ", "self", ".", "vgg", "=", "nn", ".", "Sequential", "(", "*", "modules", "[", ":", "35", "]", ")", "\n", "\n", "", "vgg_mean", "=", "(", "0.485", ",", "0.456", ",", "0.406", ")", "\n", "vgg_std", "=", "(", "0.229", "*", "rgb_range", ",", "0.224", "*", "rgb_range", ",", "0.225", "*", "rgb_range", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "rgb_range", ",", "vgg_mean", ",", "vgg_std", ")", "\n", "self", ".", "vgg", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.vgg.VGG.forward": [[24, 37], ["vgg.VGG.forward._forward"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "sr", ",", "hr", ")", ":", "\n", "        ", "def", "_forward", "(", "x", ")", ":", "\n", "            ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "vgg", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "vgg_sr", "=", "_forward", "(", "sr", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "vgg_hr", "=", "_forward", "(", "hr", ".", "detach", "(", ")", ")", "\n", "\n", "", "loss", "=", "F", ".", "mse_loss", "(", "vgg_sr", ",", "vgg_hr", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.__init__": [[12, 25], ["torch.Module.__init__", "loss.discriminator.Discriminator", "utility.make_scheduler", "utility.make_optimizer", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "adversarial.Adversarial.discriminator.parameters"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.make_scheduler", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.make_optimizer"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "gan_type", ")", ":", "\n", "        ", "super", "(", "Adversarial", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gan_type", "=", "gan_type", "\n", "self", ".", "gan_k", "=", "args", ".", "gan_k", "\n", "self", ".", "discriminator", "=", "discriminator", ".", "Discriminator", "(", "args", ",", "gan_type", ")", "\n", "if", "gan_type", "!=", "'WGAN_GP'", ":", "\n", "            ", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "args", ",", "self", ".", "discriminator", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "\n", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "\n", "betas", "=", "(", "0", ",", "0.9", ")", ",", "eps", "=", "1e-8", ",", "lr", "=", "1e-5", "\n", ")", "\n", "", "self", ".", "scheduler", "=", "utility", ".", "make_scheduler", "(", "args", ",", "self", ".", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.forward": [[26, 77], ["fake.detach", "range", "adversarial.Adversarial.discriminator", "adversarial.Adversarial.optimizer.zero_grad", "adversarial.Adversarial.discriminator", "adversarial.Adversarial.discriminator", "loss_d.item", "loss_d.backward", "adversarial.Adversarial.optimizer.step", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "adversarial.Adversarial.discriminator.parameters", "adversarial.Adversarial.gan_type.find", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "adversarial.Adversarial.gan_type.find", "p.data.clamp_", "adversarial.Adversarial.mean", "adversarial.Adversarial.gan_type.find", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "adversarial.Adversarial.discriminator", "gradients.view.view.view", "gradients.view.view.norm", "fake.detach.mul", "real.mul", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "gradients.view.view.size", "gradients.view.norm.sub().pow().mean", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "adversarial.Adversarial.sum", "gradients.view.norm.sub().pow", "gradients.view.norm.sub"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.block.norm"], ["", "def", "forward", "(", "self", ",", "fake", ",", "real", ")", ":", "\n", "        ", "fake_detach", "=", "fake", ".", "detach", "(", ")", "\n", "\n", "self", ".", "loss", "=", "0", "\n", "for", "_", "in", "range", "(", "self", ".", "gan_k", ")", ":", "\n", "            ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "d_fake", "=", "self", ".", "discriminator", "(", "fake_detach", ")", "\n", "d_real", "=", "self", ".", "discriminator", "(", "real", ")", "\n", "if", "self", ".", "gan_type", "==", "'GAN'", ":", "\n", "                ", "label_fake", "=", "torch", ".", "zeros_like", "(", "d_fake", ")", "\n", "label_real", "=", "torch", ".", "ones_like", "(", "d_real", ")", "\n", "loss_d", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "d_fake", ",", "label_fake", ")", "+", "F", ".", "binary_cross_entropy_with_logits", "(", "d_real", ",", "label_real", ")", "\n", "", "elif", "self", ".", "gan_type", ".", "find", "(", "'WGAN'", ")", ">=", "0", ":", "\n", "                ", "loss_d", "=", "(", "d_fake", "-", "d_real", ")", ".", "mean", "(", ")", "\n", "if", "self", ".", "gan_type", ".", "find", "(", "'GP'", ")", ">=", "0", ":", "\n", "                    ", "epsilon", "=", "torch", ".", "rand_like", "(", "fake", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "hat", "=", "fake_detach", ".", "mul", "(", "1", "-", "epsilon", ")", "+", "real", ".", "mul", "(", "epsilon", ")", "\n", "hat", ".", "requires_grad", "=", "True", "\n", "d_hat", "=", "self", ".", "discriminator", "(", "hat", ")", "\n", "gradients", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "outputs", "=", "d_hat", ".", "sum", "(", ")", ",", "inputs", "=", "hat", ",", "\n", "retain_graph", "=", "True", ",", "create_graph", "=", "True", ",", "only_inputs", "=", "True", "\n", ")", "[", "0", "]", "\n", "gradients", "=", "gradients", ".", "view", "(", "gradients", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "gradient_norm", "=", "gradients", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "\n", "gradient_penalty", "=", "10", "*", "gradient_norm", ".", "sub", "(", "1", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "loss_d", "+=", "gradient_penalty", "\n", "\n", "# Discriminator update", "\n", "", "", "self", ".", "loss", "+=", "loss_d", ".", "item", "(", ")", "\n", "loss_d", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "self", ".", "gan_type", "==", "'WGAN'", ":", "\n", "                ", "for", "p", "in", "self", ".", "discriminator", ".", "parameters", "(", ")", ":", "\n", "                    ", "p", ".", "data", ".", "clamp_", "(", "-", "1", ",", "1", ")", "\n", "\n", "", "", "", "self", ".", "loss", "/=", "self", ".", "gan_k", "\n", "\n", "d_fake_for_g", "=", "self", ".", "discriminator", "(", "fake", ")", "\n", "if", "self", ".", "gan_type", "==", "'GAN'", ":", "\n", "            ", "loss_g", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "\n", "d_fake_for_g", ",", "label_real", "\n", ")", "\n", "", "elif", "self", ".", "gan_type", ".", "find", "(", "'WGAN'", ")", ">=", "0", ":", "\n", "            ", "loss_g", "=", "-", "d_fake_for_g", ".", "mean", "(", ")", "\n", "\n", "# Generator loss", "\n", "", "return", "loss_g", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict": [[78, 83], ["adversarial.Adversarial.discriminator.state_dict", "adversarial.Adversarial.optimizer.state_dict", "dict"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["", "def", "state_dict", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "state_discriminator", "=", "self", ".", "discriminator", ".", "state_dict", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "state_optimizer", "=", "self", ".", "optimizer", ".", "state_dict", "(", ")", "\n", "\n", "return", "dict", "(", "**", "state_discriminator", ",", "**", "state_optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.__init__": [[15, 68], ["super().__init__", "print", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "args.loss.split", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "__init__.Loss.loss_module.to", "loss.split", "__init__.Loss.loss.append", "len", "__init__.Loss.loss.append", "__init__.Loss.loss_module.half", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "__init__.Loss.load", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "loss_type.find", "__init__.Loss.loss.append", "print", "__init__.Loss.loss_module.append", "range", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss", "float", "loss_type.find", "importlib.import_module", "getattr", "loss_type.find", "importlib.import_module", "getattr"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load"], ["self", ".", "self_ensemble", "=", "args", ".", "self_ensemble", "\n", "self", ".", "chop", "=", "args", ".", "chop", "\n", "self", ".", "precision", "=", "args", ".", "precision", "\n", "self", ".", "cpu", "=", "args", ".", "cpu", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "self", ".", "n_GPUs", "=", "args", ".", "n_GPUs", "\n", "self", ".", "save_models", "=", "args", ".", "save_models", "\n", "\n", "module", "=", "import_module", "(", "'model.'", "+", "args", ".", "model", ".", "lower", "(", ")", ")", "\n", "self", ".", "model", "=", "module", ".", "make_model", "(", "args", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "args", ".", "precision", "==", "'half'", ":", "self", ".", "model", ".", "half", "(", ")", "\n", "\n", "if", "not", "args", ".", "cpu", "and", "args", ".", "n_GPUs", ">", "1", ":", "\n", "            ", "self", ".", "model", "=", "nn", ".", "DataParallel", "(", "self", ".", "model", ",", "range", "(", "args", ".", "n_GPUs", ")", ")", "\n", "\n", "", "self", ".", "load", "(", "\n", "ckp", ".", "dir", ",", "\n", "pre_train", "=", "args", ".", "pre_train", ",", "\n", "resume", "=", "args", ".", "resume", ",", "\n", "cpu", "=", "args", ".", "cpu", "\n", ")", "\n", "print", "(", "'self.model'", ",", "self", ".", "model", ",", "file", "=", "ckp", ".", "log_file", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "idx_scale", ")", ":", "\n", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "target", "=", "self", ".", "get_model", "(", ")", "\n", "if", "hasattr", "(", "target", ",", "'set_scale'", ")", ":", "\n", "            ", "target", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "if", "self", ".", "self_ensemble", "and", "not", "self", ".", "training", ":", "\n", "            ", "if", "self", ".", "chop", ":", "\n", "                ", "forward_function", "=", "self", ".", "forward_chop", "\n", "", "else", ":", "\n", "                ", "forward_function", "=", "self", ".", "model", ".", "forward", "\n", "\n", "", "return", "self", ".", "forward_x8", "(", "x", ",", "forward_function", ")", "\n", "", "elif", "self", ".", "chop", "and", "not", "self", ".", "training", ":", "\n", "            ", "return", "self", ".", "forward_chop", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n", "", "", "def", "get_model", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "n_GPUs", "==", "1", ":", "\n", "            ", "return", "self", ".", "model", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", ".", "module", "\n", "\n", "", "", "def", "state_dict", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "target", "=", "self", ".", "get_model", "(", ")", "\n", "return", "target", ".", "state_dict", "(", "**", "kwargs", ")", "\n", "\n", "", "def", "save", "(", "self", ",", "apath", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "target", "=", "self", ".", "get_model", "(", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.forward": [[69, 85], ["enumerate", "sum", "len", "sum.item", "losses.append", "effective_loss.item"], "methods", ["None"], ["torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_latest.pt'", ")", "\n", ")", "\n", "if", "is_best", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_best.pt'", ")", "\n", ")", "\n", "\n", "", "if", "self", ".", "save_models", ":", "\n", "            ", "if", "(", "epoch", "+", "1", ")", "%", "100", "==", "0", ":", "\n", "                ", "torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_{}.pt'", ".", "format", "(", "epoch", ")", ")", "\n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step": [[86, 90], ["__init__.Loss.get_loss_module", "hasattr", "l.scheduler.step"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.get_loss_module", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step"], ["# resume \u7528\u4e8e\u4ece\u4e2d\u95f4\u8bad\u7ec3", "\n", "", "", "", "def", "load", "(", "self", ",", "apath", ",", "pre_train", "=", "'.'", ",", "resume", "=", "-", "1", ",", "cpu", "=", "False", ")", ":", "\n", "        ", "if", "cpu", ":", "\n", "            ", "kwargs", "=", "{", "'map_location'", ":", "lambda", "storage", ",", "loc", ":", "storage", "}", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.start_log": [[91, 93], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len"], "methods", ["None"], ["            ", "kwargs", "=", "{", "}", "\n", "", "if", "resume", "==", "-", "1", ":", "\n", "            ", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.end_log": [[94, 96], ["__init__.Loss.log[].div_"], "methods", ["None"], ["torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_latest.pt'", ")", ",", "\n", "**", "kwargs", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.display_loss": [[97, 104], ["zip", "log.append"], "methods", ["None"], [")", ",", "\n", "strict", "=", "False", "\n", ")", "\n", "", "elif", "resume", "==", "0", ":", "\n", "            ", "if", "pre_train", "!=", "'.'", ":", "\n", "                ", "print", "(", "'Loading model from {}'", ".", "format", "(", "pre_train", ")", ")", "\n", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "pre_train", ",", "**", "kwargs", ")", ",", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.plot_loss": [[105, 118], ["numpy.linspace", "enumerate", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "__init__.Loss.log[].numpy"], "methods", ["None"], ["strict", "=", "False", "\n", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_{}.pt'", ".", "format", "(", "resume", ")", ")", ",", "\n", "**", "kwargs", "\n", ")", ",", "\n", "strict", "=", "False", "\n", ")", "\n", "\n", "# chop \u780d; \u6d4b\u8bd5\u65f6\u4f7f\u7528\u8be5\u51fd\u6570,\u5c06\u5c3a\u5bf8\u8fc7\u5927\u7684\u56fe\u50cfchop, chop\u4e4b\u540e\u7684\u7ed3\u679c\u653e\u5165\u7f51\u7edc\u4e2d, \u5f97\u5230\u7684sr\u7ed3\u679c\u8fdb\u884c\u8fde\u63a5", "\n", "", "", "def", "forward_chop", "(", "self", ",", "x", ",", "shave", "=", "10", ",", "min_size", "=", "160000", ")", ":", "\n", "        ", "scale", "=", "self", ".", "scale", "[", "self", ".", "idx_scale", "]", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.get_loss_module": [[119, 124], ["None"], "methods", ["None"], ["n_GPUs", "=", "min", "(", "self", ".", "n_GPUs", ",", "4", ")", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "h_half", ",", "w_half", "=", "h", "//", "2", ",", "w", "//", "2", "\n", "h_size", ",", "w_size", "=", "h_half", "+", "shave", ",", "w_half", "+", "shave", "\n", "lr_list", "=", "[", "\n", "x", "[", ":", ",", ":", ",", "0", ":", "h_size", ",", "0", ":", "w_size", "]", ",", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.save": [[125, 128], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Loss.state_dict", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["x", "[", ":", ",", ":", ",", "0", ":", "h_size", ",", "(", "w", "-", "w_size", ")", ":", "w", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "(", "h", "-", "h_size", ")", ":", "h", ",", "0", ":", "w_size", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "(", "h", "-", "h_size", ")", ":", "h", ",", "(", "w", "-", "w_size", ")", ":", "w", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load": [[129, 143], ["__init__.Loss.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "hasattr", "os.path.join", "range", "len", "l.scheduler.step"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRN.load_state_dict", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step"], ["if", "w_size", "*", "h_size", "<", "min_size", ":", "\n", "            ", "sr_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "4", ",", "n_GPUs", ")", ":", "\n", "                ", "lr_batch", "=", "torch", ".", "cat", "(", "lr_list", "[", "i", ":", "(", "i", "+", "n_GPUs", ")", "]", ",", "dim", "=", "0", ")", "\n", "_", ",", "sr_batch", "=", "self", ".", "model", "(", "lr_batch", ")", "\n", "sr_list", ".", "extend", "(", "sr_batch", ".", "chunk", "(", "n_GPUs", ",", "dim", "=", "0", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "sr_list", "=", "[", "\n", "self", ".", "forward_chop", "(", "patch", ",", "shave", "=", "shave", ",", "min_size", "=", "min_size", ")", "for", "patch", "in", "lr_list", "\n", "]", "\n", "\n", "", "h", ",", "w", "=", "scale", "*", "h", ",", "scale", "*", "w", "\n", "h_half", ",", "w_half", "=", "scale", "*", "h_half", ",", "scale", "*", "w_half", "\n", "h_size", ",", "w_size", "=", "scale", "*", "h_size", ",", "scale", "*", "w_size", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.__init__": [[19, 22], ["utility.timer.tic"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.tic"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "=", "0", "\n", "self", ".", "tic", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.tic": [[23, 25], ["time.time"], "methods", ["None"], ["", "def", "tic", "(", "self", ")", ":", "\n", "        ", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.toc": [[26, 28], ["time.time"], "methods", ["None"], ["", "def", "toc", "(", "self", ")", ":", "\n", "        ", "return", "time", ".", "time", "(", ")", "-", "self", ".", "t0", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.hold": [[29, 31], ["utility.timer.toc"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.toc"], ["", "def", "hold", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "+=", "self", ".", "toc", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.release": [[32, 37], ["None"], "methods", ["None"], ["", "def", "release", "(", "self", ")", ":", "\n", "        ", "ret", "=", "self", ".", "acc", "\n", "self", ".", "acc", "=", "0", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.reset": [[38, 40], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.__init__": [[42, 77], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "datetime.datetime.now().strftime", "utility.checkpoint.__init__._make_dir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "ok", "=", "True", "\n", "self", ".", "log", "=", "torch", ".", "Tensor", "(", ")", "\n", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "\n", "if", "args", ".", "load", "==", "'.'", ":", "\n", "            ", "if", "args", ".", "save", "==", "'.'", ":", "args", ".", "save", "=", "now", "\n", "self", ".", "dir", "=", "'experiment/'", "+", "args", ".", "save", "\n", "", "else", ":", "\n", "            ", "self", ".", "dir", "=", "'experiment/'", "+", "args", ".", "load", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", ")", ":", "\n", "                ", "args", ".", "load", "=", "'.'", "\n", "", "else", ":", "\n", "                ", "self", ".", "log", "=", "torch", ".", "load", "(", "self", ".", "dir", "+", "'/psnr_log.pt'", ")", "\n", "print", "(", "'Continue from epoch {}...'", ".", "format", "(", "len", "(", "self", ".", "log", ")", ")", ")", "\n", "\n", "", "", "if", "args", ".", "reset", ":", "\n", "            ", "os", ".", "system", "(", "'rm -rf '", "+", "self", ".", "dir", ")", "\n", "args", ".", "load", "=", "'.'", "\n", "\n", "", "def", "_make_dir", "(", "path", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "os", ".", "makedirs", "(", "path", ")", "\n", "\n", "", "_make_dir", "(", "self", ".", "dir", ")", "\n", "_make_dir", "(", "self", ".", "dir", "+", "'/model'", ")", "\n", "_make_dir", "(", "self", ".", "dir", "+", "'/results'", ")", "\n", "\n", "open_type", "=", "'a'", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", "+", "'/log.txt'", ")", "else", "'w'", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "dir", "+", "'/log.txt'", ",", "open_type", ")", "\n", "with", "open", "(", "self", ".", "dir", "+", "'/config.txt'", ",", "open_type", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "now", "+", "'\\n\\n'", ")", "\n", "for", "arg", "in", "vars", "(", "args", ")", ":", "\n", "                ", "f", ".", "write", "(", "'{}: {}\\n'", ".", "format", "(", "arg", ",", "getattr", "(", "args", ",", "arg", ")", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save": [[78, 88], ["trainer.model.save", "trainer.loss.save", "trainer.loss.plot_loss", "utility.checkpoint.plot_psnr", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "trainer.optimizer.state_dict", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.plot_loss", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.plot_psnr", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.adversarial.Adversarial.state_dict"], ["", "", "def", "save", "(", "self", ",", "trainer", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "trainer", ".", "model", ".", "save", "(", "self", ".", "dir", ",", "epoch", ",", "is_best", "=", "is_best", ")", "\n", "trainer", ".", "loss", ".", "save", "(", "self", ".", "dir", ")", "\n", "trainer", ".", "loss", ".", "plot_loss", "(", "self", ".", "dir", ",", "epoch", ")", "\n", "\n", "self", ".", "plot_psnr", "(", "epoch", ")", "\n", "torch", ".", "save", "(", "self", ".", "log", ",", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "'psnr_log.pt'", ")", ")", "\n", "torch", ".", "save", "(", "\n", "trainer", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "'optimizer.pt'", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.add_log": [[90, 92], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "add_log", "(", "self", ",", "log", ")", ":", "\n", "        ", "self", ".", "log", "=", "torch", ".", "cat", "(", "[", "self", ".", "log", ",", "log", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log": [[93, 99], ["print", "utility.checkpoint.log_file.write", "utility.checkpoint.log_file.close", "open"], "methods", ["None"], ["", "def", "write_log", "(", "self", ",", "log", ",", "refresh", "=", "False", ")", ":", "\n", "        ", "print", "(", "log", ")", "\n", "self", ".", "log_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "if", "refresh", ":", "\n", "            ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "dir", "+", "'/log.txt'", ",", "'a'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.done": [[100, 102], ["utility.checkpoint.log_file.close"], "methods", ["None"], ["", "", "def", "done", "(", "self", ")", ":", "\n", "        ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.plot_psnr": [[103, 120], ["numpy.linspace", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "enumerate", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "matplotlib.plot", "matplotlib.plot", "utility.checkpoint.log[].numpy"], "methods", ["None"], ["", "def", "plot_psnr", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "axis", "=", "np", ".", "linspace", "(", "1", ",", "epoch", ",", "epoch", ")", "\n", "label", "=", "'SR on {}'", ".", "format", "(", "self", ".", "args", ".", "data_test", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "title", "(", "label", ")", "\n", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "args", ".", "scale", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "\n", "axis", ",", "\n", "self", ".", "log", "[", ":", ",", "idx_scale", "]", ".", "numpy", "(", ")", ",", "\n", "label", "=", "'Scale {}'", ".", "format", "(", "scale", ")", "\n", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'PSNR'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "'{}/test_{}.pdf'", ".", "format", "(", "self", ".", "dir", ",", "self", ".", "args", ".", "data_test", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save_results": [[121, 128], ["zip", "v[].data.mul", "v[].data.mul.byte().permute().cpu().numpy", "scipy.imsave", "v[].data.mul.byte().permute().cpu", "v[].data.mul.byte().permute", "v[].data.mul.byte"], "methods", ["None"], ["", "def", "save_results", "(", "self", ",", "filename", ",", "save_list", ",", "scale", ")", ":", "\n", "        ", "filename", "=", "'{}/results/{}_x{}_'", ".", "format", "(", "self", ".", "dir", ",", "filename", ",", "scale", ")", "\n", "postfix", "=", "(", "'SR'", ",", "'LR'", ",", "'HR'", ")", "\n", "for", "v", ",", "p", "in", "zip", "(", "save_list", ",", "postfix", ")", ":", "\n", "            ", "normalized", "=", "v", "[", "0", "]", ".", "data", ".", "mul", "(", "255", "/", "self", ".", "args", ".", "rgb_range", ")", "\n", "ndarr", "=", "normalized", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "misc", ".", "imsave", "(", "'{}{}.png'", ".", "format", "(", "filename", ",", "p", ")", ",", "ndarr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save_results_nopostfix": [[129, 142], ["zip", "filename.replace.replace.replace", "v[].data.mul", "v[].data.mul.byte().permute().cpu().numpy", "scipy.imsave", "filename.replace.replace.replace", "v[].data.mul.byte().permute().cpu", "v[].data.mul.byte().permute", "v[].data.mul.byte"], "methods", ["None"], ["", "", "", "def", "quantize", "(", "img", ",", "rgb_range", ")", ":", "\n", "    ", "pixel_range", "=", "255", "/", "rgb_range", "\n", "return", "img", ".", "mul", "(", "pixel_range", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "round", "(", ")", ".", "div", "(", "pixel_range", ")", "\n", "\n", "", "def", "calc_psnr", "(", "sr", ",", "hr", ",", "scale", ",", "rgb_range", ",", "benchmark", "=", "False", ")", ":", "\n", "    ", "diff", "=", "(", "sr", "-", "hr", ")", ".", "data", ".", "div", "(", "rgb_range", ")", "\n", "if", "benchmark", ":", "\n", "        ", "shave", "=", "scale", "\n", "if", "diff", ".", "size", "(", "1", ")", ">", "1", ":", "\n", "            ", "convert", "=", "diff", ".", "new", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "convert", "[", "0", ",", "0", ",", "0", ",", "0", "]", "=", "65.738", "\n", "convert", "[", "0", ",", "1", ",", "0", ",", "0", "]", "=", "129.057", "\n", "convert", "[", "0", ",", "2", ",", "0", ",", "0", "]", "=", "25.064", "\n", "diff", ".", "mul_", "(", "convert", ")", ".", "div_", "(", "256", ")", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.quantize": [[144, 147], ["img.mul().clamp().round().div", "img.mul().clamp().round", "img.mul().clamp", "img.mul"], "function", ["None"], ["", "", "else", ":", "\n", "        ", "shave", "=", "scale", "+", "6", "\n", "\n", "", "valid", "=", "diff", "[", ":", ",", ":", ",", "shave", ":", "-", "shave", ",", "shave", ":", "-", "shave", "]", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.calc_psnr": [[148, 176], ["valid.pow().mean", "diff.sum.size", "diff.sum.new", "diff.sum.mul_().div_", "diff.sum.sum", "math.log10", "valid.pow", "diff.sum.mul_"], "function", ["None"], ["mse", "=", "valid", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n", "return", "-", "10", "*", "math", ".", "log10", "(", "mse", ")", "\n", "\n", "", "def", "make_optimizer", "(", "args", ",", "my_model", ")", ":", "\n", "    ", "trainable", "=", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "my_model", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "args", ".", "optimizer", "==", "'SGD'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "SGD", "\n", "kwargs", "=", "{", "'momentum'", ":", "args", ".", "momentum", "}", "\n", "", "elif", "args", ".", "optimizer", "==", "'ADAM'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "Adam", "\n", "kwargs", "=", "{", "\n", "'betas'", ":", "(", "args", ".", "beta1", ",", "args", ".", "beta2", ")", ",", "\n", "'eps'", ":", "args", ".", "epsilon", "\n", "}", "\n", "", "elif", "args", ".", "optimizer", "==", "'RMSprop'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "RMSprop", "\n", "kwargs", "=", "{", "'eps'", ":", "args", ".", "epsilon", "}", "\n", "\n", "", "kwargs", "[", "'lr'", "]", "=", "args", ".", "lr", "\n", "kwargs", "[", "'weight_decay'", "]", "=", "args", ".", "weight_decay", "\n", "\n", "return", "optimizer_function", "(", "trainable", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "make_scheduler", "(", "args", ",", "my_optimizer", ")", ":", "\n", "    ", "if", "args", ".", "decay_type", "==", "'step'", ":", "\n", "        ", "scheduler", "=", "lrs", ".", "StepLR", "(", "\n", "my_optimizer", ",", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.make_optimizer": [[177, 197], ["filter", "optimizer_function", "my_model.parameters"], "function", ["None"], ["step_size", "=", "args", ".", "lr_decay", ",", "\n", "gamma", "=", "args", ".", "gamma", "\n", ")", "\n", "", "elif", "args", ".", "decay_type", ".", "find", "(", "'step'", ")", ">=", "0", ":", "\n", "        ", "milestones", "=", "args", ".", "decay_type", ".", "split", "(", "'_'", ")", "\n", "milestones", ".", "pop", "(", "0", ")", "\n", "milestones", "=", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ")", ",", "milestones", ")", ")", "\n", "scheduler", "=", "lrs", ".", "MultiStepLR", "(", "\n", "my_optimizer", ",", "\n", "milestones", "=", "milestones", ",", "\n", "gamma", "=", "args", ".", "gamma", "\n", ")", "\n", "\n", "", "return", "scheduler", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.make_scheduler": [[198, 216], ["torch.StepLR", "args.decay_type.find", "args.decay_type.split", "list.pop", "list", "torch.MultiStepLR", "map", "int"], "function", ["None"], []], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer_noerb.Trainer.__init__": [[12, 31], ["utility.make_optimizer", "utility.make_scheduler", "trainer_noerb.Trainer.optimizer.load_state_dict", "range", "torch.load", "len", "trainer_noerb.Trainer.scheduler.step", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.make_optimizer", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.make_scheduler", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRN.load_state_dict", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "loader", ",", "my_model", ",", "my_loss", ",", "ckp", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n", "self", ".", "ckp", "=", "ckp", "\n", "self", ".", "loader_train", "=", "loader", ".", "loader_train", "\n", "self", ".", "loader_test", "=", "loader", ".", "loader_test", "\n", "self", ".", "model", "=", "my_model", "\n", "self", ".", "loss", "=", "my_loss", "\n", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "args", ",", "self", ".", "model", ")", "\n", "self", ".", "scheduler", "=", "utility", ".", "make_scheduler", "(", "args", ",", "self", ".", "optimizer", ")", "\n", "\n", "if", "self", ".", "args", ".", "load", "!=", "'.'", ":", "\n", "            ", "self", ".", "optimizer", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ckp", ".", "dir", ",", "'optimizer.pt'", ")", ")", "\n", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "ckp", ".", "log", ")", ")", ":", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "self", ".", "error_last", "=", "1e8", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer_noerb.Trainer.train": [[32, 77], ["trainer_noerb.Trainer.scheduler.step", "trainer_noerb.Trainer.loss.step", "trainer_noerb.Trainer.ckp.write_log", "trainer_noerb.Trainer.loss.start_log", "trainer_noerb.Trainer.model.train", "enumerate", "trainer_noerb.Trainer.loss.end_log", "trainer_noerb.Trainer.scheduler.get_lr", "utility.timer", "utility.timer", "trainer_noerb.Trainer.prepare", "timer_data.hold", "timer_model.tic", "trainer_noerb.Trainer.optimizer.zero_grad", "trainer_noerb.Trainer.model", "trainer_noerb.Trainer.loss", "timer_model.hold", "timer_data.tic", "len", "decimal.Decimal", "trainer_noerb.Trainer.item", "trainer_noerb.Trainer.backward", "trainer_noerb.Trainer.optimizer.step", "print", "trainer_noerb.Trainer.ckp.write_log", "trainer_noerb.Trainer.item", "len", "trainer_noerb.Trainer.loss.display_loss", "timer_model.release", "timer_data.release"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.start_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.train", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.end_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.hold", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.tic", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.hold", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.tic", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.display_loss", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.release", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.release"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "self", ".", "loss", ".", "step", "(", ")", "\n", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "lr", "=", "self", ".", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[Epoch {}]\\tLearning rate: {:.2e}'", ".", "format", "(", "epoch", ",", "Decimal", "(", "lr", ")", ")", "\n", ")", "\n", "self", ".", "loss", ".", "start_log", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "timer_data", ",", "timer_model", "=", "utility", ".", "timer", "(", ")", ",", "utility", ".", "timer", "(", ")", "\n", "for", "batch", ",", "(", "lr", ",", "hr", ",", "_", ",", "idx_scale", ")", "in", "enumerate", "(", "self", ".", "loader_train", ")", ":", "\n", "            ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "timer_data", ".", "hold", "(", ")", "\n", "timer_model", ".", "tic", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "sr", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "loss", "=", "self", ".", "loss", "(", "sr", ",", "hr", ")", "\n", "# loss2 = self.loss(sr2, hr)", "\n", "# loss = loss1 + loss2", "\n", "if", "loss", ".", "item", "(", ")", "<", "self", ".", "args", ".", "skip_threshold", "*", "self", ".", "error_last", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Skip this batch {}! (Loss: {})'", ".", "format", "(", "\n", "batch", "+", "1", ",", "loss", ".", "item", "(", ")", "\n", ")", ")", "\n", "\n", "", "timer_model", ".", "hold", "(", ")", "\n", "\n", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                ", "self", ".", "ckp", ".", "write_log", "(", "'[{}/{}]\\t{}\\t{:.1f}+{:.1f}s'", ".", "format", "(", "\n", "(", "batch", "+", "1", ")", "*", "self", ".", "args", ".", "batch_size", ",", "\n", "len", "(", "self", ".", "loader_train", ".", "dataset", ")", ",", "\n", "self", ".", "loss", ".", "display_loss", "(", "batch", ")", ",", "\n", "timer_model", ".", "release", "(", ")", ",", "\n", "timer_data", ".", "release", "(", ")", ")", ")", "\n", "\n", "", "timer_data", ".", "tic", "(", ")", "\n", "\n", "", "self", ".", "loss", ".", "end_log", "(", "len", "(", "self", ".", "loader_train", ")", ")", "\n", "self", ".", "error_last", "=", "self", ".", "loss", ".", "log", "[", "-", "1", ",", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer_noerb.Trainer.test": [[78, 128], ["trainer_noerb.Trainer.ckp.write_log", "trainer_noerb.Trainer.ckp.add_log", "trainer_noerb.Trainer.model.eval", "utility.timer", "trainer_noerb.Trainer.ckp.write_log", "torch.zeros", "torch.no_grad", "enumerate", "trainer_noerb.Trainer.ckp.save", "len", "trainer_noerb.Trainer.loader_test.dataset.set_scale", "tqdm.tqdm.tqdm", "enumerate", "trainer_noerb.Trainer.ckp.log.max", "trainer_noerb.Trainer.ckp.write_log", "utility.timer.toc", "trainer_noerb.Trainer.model", "utility.quantize", "len", "hr.nelement", "trainer_noerb.Trainer.prepare", "trainer_noerb.Trainer.prepare", "utility.calc_psnr", "save_list.extend", "trainer_noerb.Trainer.ckp.save_results_nopostfix"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.add_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.set_scale", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.toc", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.quantize", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.calc_psnr", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save_results_nopostfix"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "self", ".", "ckp", ".", "write_log", "(", "'\\nEvaluation:'", ")", "\n", "self", ".", "ckp", ".", "add_log", "(", "torch", ".", "zeros", "(", "1", ",", "len", "(", "self", ".", "scale", ")", ")", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "timer_test", "=", "utility", ".", "timer", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "eval_acc", "=", "0", "\n", "self", ".", "loader_test", ".", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "tqdm_test", "=", "tqdm", "(", "self", ".", "loader_test", ",", "ncols", "=", "80", ")", "\n", "for", "idx_img", ",", "(", "lr", ",", "hr", ",", "filename", ",", "_", ")", "in", "enumerate", "(", "tqdm_test", ")", ":", "\n", "                    ", "filename", "=", "filename", "[", "0", "]", "\n", "no_eval", "=", "(", "hr", ".", "nelement", "(", ")", "==", "1", ")", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "", "else", ":", "\n", "                        ", "lr", ",", "=", "self", ".", "prepare", "(", "lr", ")", "\n", "\n", "", "sr", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "sr", "=", "utility", ".", "quantize", "(", "sr", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "\n", "save_list", "=", "[", "sr", "]", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "eval_acc", "+=", "utility", ".", "calc_psnr", "(", "\n", "sr", ",", "hr", ",", "scale", ",", "self", ".", "args", ".", "rgb_range", ",", "\n", "benchmark", "=", "self", ".", "loader_test", ".", "dataset", ".", "benchmark", "\n", ")", "\n", "save_list", ".", "extend", "(", "[", "lr", ",", "hr", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "                        ", "self", ".", "ckp", ".", "save_results_nopostfix", "(", "filename", ",", "save_list", ",", "scale", ")", "\n", "", "", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", "=", "eval_acc", "/", "len", "(", "self", ".", "loader_test", ")", "\n", "best", "=", "self", ".", "ckp", ".", "log", ".", "max", "(", "0", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[{} x{}]\\tPSNR: {:.3f} (Best: {:.3f} @epoch {})'", ".", "format", "(", "\n", "self", ".", "args", ".", "data_test", ",", "\n", "scale", ",", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", ",", "\n", "best", "[", "0", "]", "[", "idx_scale", "]", ",", "\n", "best", "[", "1", "]", "[", "idx_scale", "]", "+", "1", "\n", ")", "\n", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "write_log", "(", "\n", "'Total time: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ",", "refresh", "=", "True", "\n", ")", "\n", "if", "not", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "ckp", ".", "save", "(", "self", ",", "epoch", ",", "is_best", "=", "(", "best", "[", "1", "]", "[", "0", "]", "+", "1", "==", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer_noerb.Trainer.prepare": [[129, 136], ["torch.device", "tensor.half.half.to", "trainer_noerb.Trainer.prepare._prepare"], "methods", ["None"], ["", "", "def", "prepare", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "self", ".", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "def", "_prepare", "(", "tensor", ")", ":", "\n", "            ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "a", ")", "for", "a", "in", "args", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer_noerb.Trainer.terminate": [[137, 144], ["trainer_noerb.Trainer.test"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.test"], ["", "def", "terminate", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "test", "(", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "return", "epoch", ">=", "self", ".", "args", ".", "epochs", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.__init__": [[13, 32], ["utility.make_optimizer", "utility.make_scheduler", "trainer.Trainer.optimizer.load_state_dict", "range", "torch.load", "len", "trainer.Trainer.scheduler.step", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.make_optimizer", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.make_scheduler", "home.repos.pwc.inspect_result.Jee-King_TSAN.model.msrn.MSRN.load_state_dict", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step"], ["        ", "self", ".", "args", "=", "args", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n", "self", ".", "ckp", "=", "ckp", "\n", "self", ".", "loader_train", "=", "loader", ".", "loader_train", "\n", "self", ".", "loader_test", "=", "loader", ".", "loader_test", "\n", "self", ".", "model", "=", "my_model", "\n", "self", ".", "loss", "=", "my_loss", "\n", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "args", ",", "self", ".", "model", ")", "\n", "self", ".", "scheduler", "=", "utility", ".", "make_scheduler", "(", "args", ",", "self", ".", "optimizer", ")", "\n", "\n", "if", "self", ".", "args", ".", "load", "!=", "'.'", ":", "\n", "            ", "self", ".", "optimizer", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ckp", ".", "dir", ",", "'optimizer.pt'", ")", ")", "\n", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "ckp", ".", "log", ")", ")", ":", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "self", ".", "error_last", "=", "1e8", "\n", "\n", "", "def", "train", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.train": [[33, 93], ["trainer.Trainer.scheduler.step", "trainer.Trainer.loss.step", "trainer.Trainer.ckp.write_log", "trainer.Trainer.loss.start_log", "trainer.Trainer.model.train", "enumerate", "trainer.Trainer.loss.end_log", "trainer.Trainer.scheduler.get_lr", "utility.timer", "utility.timer", "trainer.Trainer.prepare", "timer_data.hold", "timer_model.tic", "trainer.Trainer.optimizer.zero_grad", "trainer.Trainer.model", "trainer.Trainer.loss", "trainer.Trainer.loss", "timer_model.hold", "timer_data.tic", "len", "decimal.Decimal", "loss.item", "loss.backward", "trainer.Trainer.optimizer.step", "print", "trainer.Trainer.ckp.write_log", "loss.item", "len", "trainer.Trainer.loss.display_loss", "timer_model.release", "timer_data.release"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.start_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.train", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.end_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.hold", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.tic", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.hold", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.tic", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.loss.__init__.Loss.display_loss", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.release", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.release"], ["        ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "self", ".", "loss", ".", "step", "(", ")", "\n", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "lr", "=", "self", ".", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[Epoch {}]\\tLearning rate: {:.2e}'", ".", "format", "(", "epoch", ",", "Decimal", "(", "lr", ")", ")", "\n", ")", "\n", "self", ".", "loss", ".", "start_log", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "timer_data", ",", "timer_model", "=", "utility", ".", "timer", "(", ")", ",", "utility", ".", "timer", "(", ")", "\n", "for", "batch", ",", "(", "lr", ",", "hr", ",", "_", ",", "idx_scale", ")", "in", "enumerate", "(", "self", ".", "loader_train", ")", ":", "\n", "            ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "timer_data", ".", "hold", "(", ")", "\n", "timer_model", ".", "tic", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "sr1", ",", "sr2", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "loss1", "=", "self", ".", "loss", "(", "sr1", ",", "hr", ")", "\n", "loss2", "=", "self", ".", "loss", "(", "sr2", ",", "hr", ")", "\n", "\n", "loss", "=", "loss1", "+", "loss2", "\n", "\n", "#loss = loss1 + loss2", "\n", "if", "loss", ".", "item", "(", ")", "<", "self", ".", "args", ".", "skip_threshold", "*", "self", ".", "error_last", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Skip this batch {}! (Loss: {})'", ".", "format", "(", "\n", "batch", "+", "1", ",", "loss", ".", "item", "(", ")", "\n", ")", ")", "\n", "\n", "", "timer_model", ".", "hold", "(", ")", "\n", "\n", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                ", "self", ".", "ckp", ".", "write_log", "(", "'[{}/{}]\\t{}\\t{:.1f}+{:.1f}s'", ".", "format", "(", "\n", "(", "batch", "+", "1", ")", "*", "self", ".", "args", ".", "batch_size", ",", "\n", "len", "(", "self", ".", "loader_train", ".", "dataset", ")", ",", "\n", "self", ".", "loss", ".", "display_loss", "(", "batch", ")", ",", "\n", "timer_model", ".", "release", "(", ")", ",", "\n", "timer_data", ".", "release", "(", ")", ")", ")", "\n", "\n", "", "timer_data", ".", "tic", "(", ")", "\n", "\n", "", "self", ".", "loss", ".", "end_log", "(", "len", "(", "self", ".", "loader_train", ")", ")", "\n", "self", ".", "error_last", "=", "self", ".", "loss", ".", "log", "[", "-", "1", ",", "-", "1", "]", "\n", "\n", "", "def", "test", "(", "self", ")", ":", "\n", "        ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "self", ".", "ckp", ".", "write_log", "(", "'\\nEvaluation:'", ")", "\n", "self", ".", "ckp", ".", "add_log", "(", "torch", ".", "zeros", "(", "1", ",", "len", "(", "self", ".", "scale", ")", ")", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "timer_test", "=", "utility", ".", "timer", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "eval_acc", "=", "0", "\n", "self", ".", "loader_test", ".", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "tqdm_test", "=", "tqdm", "(", "self", ".", "loader_test", ",", "ncols", "=", "80", ")", "\n", "for", "idx_img", ",", "(", "lr", ",", "hr", ",", "filename", ",", "_", ")", "in", "enumerate", "(", "tqdm_test", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.test": [[94, 146], ["trainer.Trainer.ckp.write_log", "trainer.Trainer.ckp.add_log", "trainer.Trainer.model.eval", "utility.timer", "trainer.Trainer.ckp.write_log", "torch.zeros", "torch.no_grad", "enumerate", "trainer.Trainer.ckp.save", "len", "trainer.Trainer.loader_test.dataset.set_scale", "tqdm.tqdm.tqdm", "enumerate", "trainer.Trainer.ckp.log.max", "trainer.Trainer.ckp.write_log", "utility.timer.toc", "trainer.Trainer.model", "utility.quantize", "len", "utility.timer.toc", "len", "hr.nelement", "trainer.Trainer.prepare", "utility.calc_psnr", "save_list.extend", "trainer.Trainer.ckp.save_results_nopostfix", "trainer.Trainer.prepare"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.add_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save", "home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.set_scale", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.toc", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.quantize", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.timer.toc", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.calc_psnr", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.utility.checkpoint.save_results_nopostfix", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.prepare"], ["                    ", "filename", "=", "filename", "[", "0", "]", "\n", "no_eval", "=", "(", "hr", ".", "nelement", "(", ")", "==", "1", ")", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "lr", ",", "hr", ")", "\n", "", "else", ":", "\n", "                        ", "lr", ",", "=", "self", ".", "prepare", "(", "lr", ")", "\n", "\n", "", "sr", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "sr", "=", "utility", ".", "quantize", "(", "sr", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "\n", "save_list", "=", "[", "sr", "]", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "eval_acc", "+=", "utility", ".", "calc_psnr", "(", "\n", "sr", ",", "hr", ",", "scale", ",", "self", ".", "args", ".", "rgb_range", ",", "\n", "benchmark", "=", "self", ".", "loader_test", ".", "dataset", ".", "benchmark", "\n", ")", "\n", "save_list", ".", "extend", "(", "[", "lr", ",", "hr", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "                        ", "self", ".", "ckp", ".", "save_results", "(", "filename", ",", "save_list", ",", "scale", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", "=", "eval_acc", "/", "len", "(", "self", ".", "loader_test", ")", "\n", "best", "=", "self", ".", "ckp", ".", "log", ".", "max", "(", "0", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[{} x{}]\\tPSNR: {:.3f} (Best: {:.3f} @epoch {})'", ".", "format", "(", "\n", "self", ".", "args", ".", "data_test", ",", "\n", "scale", ",", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", ",", "\n", "best", "[", "0", "]", "[", "idx_scale", "]", ",", "\n", "best", "[", "1", "]", "[", "idx_scale", "]", "+", "1", "\n", ")", "\n", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "write_log", "(", "\n", "'Total time: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ",", "refresh", "=", "True", "\n", ")", "\n", "if", "not", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "ckp", ".", "save", "(", "self", ",", "epoch", ",", "is_best", "=", "(", "best", "[", "1", "]", "[", "0", "]", "+", "1", "==", "epoch", ")", ")", "\n", "\n", "", "", "def", "prepare", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "self", ".", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "def", "_prepare", "(", "tensor", ")", ":", "\n", "            ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "a", ")", "for", "a", "in", "args", "]", "\n", "\n", "", "def", "terminate", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "test", "(", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.prepare": [[147, 154], ["torch.device", "tensor.half.half.to", "trainer.Trainer.prepare._prepare"], "methods", ["None"], ["return", "epoch", ">=", "self", ".", "args", ".", "epochs", "\n", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.terminate": [[155, 162], ["trainer.Trainer.test"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.trainer.Trainer.test"], []], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.deriveSizeFromScale": [[4, 9], ["range", "output_shape.append", "int", "math.ceil"], "function", ["None"], ["def", "deriveSizeFromScale", "(", "img_shape", ",", "scale", ")", ":", "\n", "    ", "output_shape", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "2", ")", ":", "\n", "        ", "output_shape", ".", "append", "(", "int", "(", "ceil", "(", "scale", "[", "k", "]", "*", "img_shape", "[", "k", "]", ")", ")", ")", "\n", "", "return", "output_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.deriveScaleFromSize": [[10, 15], ["range", "scale.append"], "function", ["None"], ["", "def", "deriveScaleFromSize", "(", "img_shape_in", ",", "img_shape_out", ")", ":", "\n", "    ", "scale", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "2", ")", ":", "\n", "        ", "scale", ".", "append", "(", "1.0", "*", "img_shape_out", "[", "k", "]", "/", "img_shape_in", "[", "k", "]", ")", "\n", "", "return", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.cubic": [[16, 23], ["numpy.array().astype", "numpy.absolute", "numpy.multiply", "numpy.multiply", "numpy.multiply", "numpy.multiply", "numpy.array"], "function", ["None"], ["", "def", "cubic", "(", "x", ")", ":", "\n", "    ", "x", "=", "np", ".", "array", "(", "x", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "absx", "=", "np", ".", "absolute", "(", "x", ")", "\n", "absx2", "=", "np", ".", "multiply", "(", "absx", ",", "absx", ")", "\n", "absx3", "=", "np", ".", "multiply", "(", "absx2", ",", "absx", ")", "\n", "f", "=", "np", ".", "multiply", "(", "1.5", "*", "absx3", "-", "2.5", "*", "absx2", "+", "1", ",", "absx", "<=", "1", ")", "+", "np", ".", "multiply", "(", "-", "0.5", "*", "absx3", "+", "2.5", "*", "absx2", "-", "4", "*", "absx", "+", "2", ",", "(", "1", "<", "absx", ")", "&", "(", "absx", "<=", "2", ")", ")", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.contributions": [[24, 45], ["numpy.arange().astype", "numpy.floor", "ind.astype", "h", "numpy.divide", "numpy.concatenate().astype", "numpy.nonzero", "int", "numpy.expand_dims", "numpy.any", "numpy.arange", "math.ceil", "numpy.expand_dims", "numpy.arange", "numpy.sum", "numpy.concatenate", "numpy.mod", "kernel", "numpy.expand_dims", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "def", "contributions", "(", "in_length", ",", "out_length", ",", "scale", ",", "kernel", ",", "k_width", ")", ":", "\n", "    ", "if", "scale", "<", "1", ":", "\n", "        ", "h", "=", "lambda", "x", ":", "scale", "*", "kernel", "(", "scale", "*", "x", ")", "\n", "kernel_width", "=", "1.0", "*", "k_width", "/", "scale", "\n", "", "else", ":", "\n", "        ", "h", "=", "kernel", "\n", "kernel_width", "=", "k_width", "\n", "", "x", "=", "np", ".", "arange", "(", "1", ",", "out_length", "+", "1", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "u", "=", "x", "/", "scale", "+", "0.5", "*", "(", "1", "-", "1", "/", "scale", ")", "\n", "left", "=", "np", ".", "floor", "(", "u", "-", "kernel_width", "/", "2", ")", "\n", "P", "=", "int", "(", "ceil", "(", "kernel_width", ")", ")", "+", "2", "\n", "ind", "=", "np", ".", "expand_dims", "(", "left", ",", "axis", "=", "1", ")", "+", "np", ".", "arange", "(", "P", ")", "-", "1", "# -1 because indexing from 0", "\n", "indices", "=", "ind", ".", "astype", "(", "np", ".", "int32", ")", "\n", "weights", "=", "h", "(", "np", ".", "expand_dims", "(", "u", ",", "axis", "=", "1", ")", "-", "indices", "-", "1", ")", "# -1 because indexing from 0", "\n", "weights", "=", "np", ".", "divide", "(", "weights", ",", "np", ".", "expand_dims", "(", "np", ".", "sum", "(", "weights", ",", "axis", "=", "1", ")", ",", "axis", "=", "1", ")", ")", "\n", "aux", "=", "np", ".", "concatenate", "(", "(", "np", ".", "arange", "(", "in_length", ")", ",", "np", ".", "arange", "(", "in_length", "-", "1", ",", "-", "1", ",", "step", "=", "-", "1", ")", ")", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "indices", "=", "aux", "[", "np", ".", "mod", "(", "indices", ",", "aux", ".", "size", ")", "]", "\n", "ind2store", "=", "np", ".", "nonzero", "(", "np", ".", "any", "(", "weights", ",", "axis", "=", "0", ")", ")", "\n", "weights", "=", "weights", "[", ":", ",", "ind2store", "]", "\n", "indices", "=", "indices", "[", ":", ",", "ind2store", "]", "\n", "return", "weights", ",", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.imresizemex": [[46, 71], ["list", "numpy.zeros", "range", "numpy.clip", "numpy.around().astype", "range", "range", "inimg[].astype", "numpy.sum", "range", "numpy.around", "numpy.multiply", "inimg[].astype", "numpy.sum", "numpy.squeeze", "numpy.multiply", "numpy.squeeze"], "function", ["None"], ["", "def", "imresizemex", "(", "inimg", ",", "weights", ",", "indices", ",", "dim", ")", ":", "\n", "    ", "in_shape", "=", "inimg", ".", "shape", "\n", "w_shape", "=", "weights", ".", "shape", "\n", "out_shape", "=", "list", "(", "in_shape", ")", "\n", "out_shape", "[", "dim", "]", "=", "w_shape", "[", "0", "]", "\n", "outimg", "=", "np", ".", "zeros", "(", "out_shape", ")", "\n", "if", "dim", "==", "0", ":", "\n", "        ", "for", "i_img", "in", "range", "(", "in_shape", "[", "1", "]", ")", ":", "\n", "            ", "for", "i_w", "in", "range", "(", "w_shape", "[", "0", "]", ")", ":", "\n", "                ", "w", "=", "weights", "[", "i_w", ",", ":", "]", "\n", "ind", "=", "indices", "[", "i_w", ",", ":", "]", "\n", "im_slice", "=", "inimg", "[", "ind", ",", "i_img", "]", ".", "astype", "(", "np", ".", "float64", ")", "\n", "outimg", "[", "i_w", ",", "i_img", "]", "=", "np", ".", "sum", "(", "np", ".", "multiply", "(", "np", ".", "squeeze", "(", "im_slice", ",", "axis", "=", "0", ")", ",", "w", ".", "T", ")", ",", "axis", "=", "0", ")", "\n", "", "", "", "elif", "dim", "==", "1", ":", "\n", "        ", "for", "i_img", "in", "range", "(", "in_shape", "[", "0", "]", ")", ":", "\n", "            ", "for", "i_w", "in", "range", "(", "w_shape", "[", "0", "]", ")", ":", "\n", "                ", "w", "=", "weights", "[", "i_w", ",", ":", "]", "\n", "ind", "=", "indices", "[", "i_w", ",", ":", "]", "\n", "im_slice", "=", "inimg", "[", "i_img", ",", "ind", "]", ".", "astype", "(", "np", ".", "float64", ")", "\n", "outimg", "[", "i_img", ",", "i_w", "]", "=", "np", ".", "sum", "(", "np", ".", "multiply", "(", "np", ".", "squeeze", "(", "im_slice", ",", "axis", "=", "0", ")", ",", "w", ".", "T", ")", ",", "axis", "=", "0", ")", "\n", "", "", "", "if", "inimg", ".", "dtype", "==", "np", ".", "uint8", ":", "\n", "        ", "outimg", "=", "np", ".", "clip", "(", "outimg", ",", "0", ",", "255", ")", "\n", "return", "np", ".", "around", "(", "outimg", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "        ", "return", "outimg", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.imresizevec": [[72, 85], ["weights.reshape.reshape", "numpy.sum", "numpy.clip", "numpy.around().astype", "weights.reshape.reshape", "numpy.sum", "inimg[].squeeze().astype", "numpy.around", "inimg[].squeeze().astype", "inimg[].squeeze", "inimg[].squeeze"], "function", ["None"], ["", "", "def", "imresizevec", "(", "inimg", ",", "weights", ",", "indices", ",", "dim", ")", ":", "\n", "    ", "wshape", "=", "weights", ".", "shape", "\n", "if", "dim", "==", "0", ":", "\n", "        ", "weights", "=", "weights", ".", "reshape", "(", "(", "wshape", "[", "0", "]", ",", "wshape", "[", "2", "]", ",", "1", ",", "1", ")", ")", "\n", "outimg", "=", "np", ".", "sum", "(", "weights", "*", "(", "(", "inimg", "[", "indices", "]", ".", "squeeze", "(", "axis", "=", "1", ")", ")", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "axis", "=", "1", ")", "\n", "", "elif", "dim", "==", "1", ":", "\n", "        ", "weights", "=", "weights", ".", "reshape", "(", "(", "1", ",", "wshape", "[", "0", "]", ",", "wshape", "[", "2", "]", ",", "1", ")", ")", "\n", "outimg", "=", "np", ".", "sum", "(", "weights", "*", "(", "(", "inimg", "[", ":", ",", "indices", "]", ".", "squeeze", "(", "axis", "=", "2", ")", ")", ".", "astype", "(", "np", ".", "float64", ")", ")", ",", "axis", "=", "2", ")", "\n", "", "if", "inimg", ".", "dtype", "==", "np", ".", "uint8", ":", "\n", "        ", "outimg", "=", "np", ".", "clip", "(", "outimg", ",", "0", ",", "255", ")", "\n", "return", "np", ".", "around", "(", "outimg", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "        ", "return", "outimg", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.resizeAlongDim": [[86, 92], ["imresize.imresizemex", "imresize.imresizevec"], "function", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.imresizemex", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.imresizevec"], ["", "", "def", "resizeAlongDim", "(", "A", ",", "dim", ",", "weights", ",", "indices", ",", "mode", "=", "\"vec\"", ")", ":", "\n", "    ", "if", "mode", "==", "\"org\"", ":", "\n", "        ", "out", "=", "imresizemex", "(", "A", ",", "weights", ",", "indices", ",", "dim", ")", "\n", "", "else", ":", "\n", "        ", "out", "=", "imresizevec", "(", "A", ",", "weights", ",", "indices", ",", "dim", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.imresize": [[93, 126], ["numpy.array", "numpy.argsort", "range", "numpy.copy", "range", "float", "imresize.deriveSizeFromScale", "imresize.contributions", "weights.append", "indices.append", "numpy.expand_dims", "imresize.resizeAlongDim", "numpy.squeeze", "imresize.deriveScaleFromSize", "list", "print"], "function", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.deriveSizeFromScale", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.contributions", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.resizeAlongDim", "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.deriveScaleFromSize"], ["", "def", "imresize", "(", "I", ",", "scalar_scale", "=", "None", ",", "output_shape", "=", "None", ",", "mode", "=", "\"vec\"", ")", ":", "\n", "    ", "kernel", "=", "cubic", "\n", "kernel_width", "=", "4.0", "\n", "# Fill scale and output_size", "\n", "if", "scalar_scale", "is", "not", "None", ":", "\n", "        ", "scalar_scale", "=", "float", "(", "scalar_scale", ")", "\n", "scale", "=", "[", "scalar_scale", ",", "scalar_scale", "]", "\n", "output_size", "=", "deriveSizeFromScale", "(", "I", ".", "shape", ",", "scale", ")", "\n", "", "elif", "output_shape", "is", "not", "None", ":", "\n", "        ", "scale", "=", "deriveScaleFromSize", "(", "I", ".", "shape", ",", "output_shape", ")", "\n", "output_size", "=", "list", "(", "output_shape", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Error: scalar_scale OR output_shape should be defined!'", ")", "\n", "return", "\n", "", "scale_np", "=", "np", ".", "array", "(", "scale", ")", "\n", "order", "=", "np", ".", "argsort", "(", "scale_np", ")", "\n", "weights", "=", "[", "]", "\n", "indices", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "2", ")", ":", "\n", "        ", "w", ",", "ind", "=", "contributions", "(", "I", ".", "shape", "[", "k", "]", ",", "output_size", "[", "k", "]", ",", "scale", "[", "k", "]", ",", "kernel", ",", "kernel_width", ")", "\n", "weights", ".", "append", "(", "w", ")", "\n", "indices", ".", "append", "(", "ind", ")", "\n", "", "B", "=", "np", ".", "copy", "(", "I", ")", "\n", "flag2D", "=", "False", "\n", "if", "B", ".", "ndim", "==", "2", ":", "\n", "        ", "B", "=", "np", ".", "expand_dims", "(", "B", ",", "axis", "=", "2", ")", "\n", "flag2D", "=", "True", "\n", "", "for", "k", "in", "range", "(", "2", ")", ":", "\n", "        ", "dim", "=", "order", "[", "k", "]", "\n", "B", "=", "resizeAlongDim", "(", "B", ",", "dim", ",", "weights", "[", "dim", "]", ",", "indices", "[", "dim", "]", ",", "mode", ")", "\n", "", "if", "flag2D", ":", "\n", "        ", "B", "=", "np", ".", "squeeze", "(", "B", ",", "axis", "=", "2", ")", "\n", "", "return", "B", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.imresize.convertDouble2Byte": [[127, 131], ["numpy.clip", "numpy.around().astype", "numpy.around"], "function", ["None"], ["", "def", "convertDouble2Byte", "(", "I", ")", ":", "\n", "    ", "B", "=", "np", ".", "clip", "(", "I", ",", "0.0", ",", "1.0", ")", "\n", "B", "=", "255", "*", "B", "\n", "return", "np", ".", "around", "(", "B", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader._MSDataLoaderIter.__init__": [[56, 126], ["threading.Event", "iter", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.SimpleQueue", "torch.SimpleQueue", "torch._C._update_worker_pids", "torch._C._update_worker_pids", "torch.utils.data.dataloader._set_SIGCHLD_handler", "torch.utils.data.dataloader._set_SIGCHLD_handler", "range", "torch.Queue", "torch.Queue", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.Process", "torch.Process", "queue.Queue", "threading.Thread", "dataloader._MSDataLoaderIter.worker_manager_thread.start", "w.start", "id", "tuple", "dataloader._MSDataLoaderIter._put_indices", "range", "range", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "loader", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "loader", ".", "dataset", "\n", "self", ".", "scale", "=", "loader", ".", "scale", "\n", "self", ".", "collate_fn", "=", "loader", ".", "collate_fn", "\n", "self", ".", "batch_sampler", "=", "loader", ".", "batch_sampler", "\n", "self", ".", "num_workers", "=", "loader", ".", "num_workers", "\n", "self", ".", "pin_memory", "=", "loader", ".", "pin_memory", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "self", ".", "timeout", "=", "loader", ".", "timeout", "\n", "self", ".", "done_event", "=", "threading", ".", "Event", "(", ")", "\n", "\n", "self", ".", "sample_iter", "=", "iter", "(", "self", ".", "batch_sampler", ")", "\n", "\n", "if", "self", ".", "num_workers", ">", "0", ":", "\n", "            ", "self", ".", "worker_init_fn", "=", "loader", ".", "worker_init_fn", "\n", "self", ".", "index_queues", "=", "[", "\n", "multiprocessing", ".", "Queue", "(", ")", "for", "_", "in", "range", "(", "self", ".", "num_workers", ")", "\n", "]", "\n", "self", ".", "worker_queue_idx", "=", "0", "\n", "self", ".", "worker_result_queue", "=", "multiprocessing", ".", "SimpleQueue", "(", ")", "\n", "self", ".", "batches_outstanding", "=", "0", "\n", "self", ".", "worker_pids_set", "=", "False", "\n", "self", ".", "shutdown", "=", "False", "\n", "self", ".", "send_idx", "=", "0", "\n", "self", ".", "rcvd_idx", "=", "0", "\n", "self", ".", "reorder_dict", "=", "{", "}", "\n", "\n", "base_seed", "=", "torch", ".", "LongTensor", "(", "1", ")", ".", "random_", "(", ")", "[", "0", "]", "\n", "self", ".", "workers", "=", "[", "\n", "multiprocessing", ".", "Process", "(", "\n", "target", "=", "_ms_loop", ",", "\n", "args", "=", "(", "\n", "self", ".", "dataset", ",", "\n", "self", ".", "index_queues", "[", "i", "]", ",", "\n", "self", ".", "worker_result_queue", ",", "\n", "self", ".", "collate_fn", ",", "\n", "self", ".", "scale", ",", "\n", "base_seed", "+", "i", ",", "\n", "self", ".", "worker_init_fn", ",", "\n", "i", "\n", ")", "\n", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_workers", ")", "]", "\n", "\n", "if", "self", ".", "pin_memory", "or", "self", ".", "timeout", ">", "0", ":", "\n", "                ", "self", ".", "data_queue", "=", "queue", ".", "Queue", "(", ")", "\n", "if", "self", ".", "pin_memory", ":", "\n", "                    ", "maybe_device_id", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "", "else", ":", "\n", "# do not initialize cuda context if not necessary", "\n", "                    ", "maybe_device_id", "=", "None", "\n", "", "self", ".", "worker_manager_thread", "=", "threading", ".", "Thread", "(", "\n", "target", "=", "_worker_manager_loop", ",", "\n", "args", "=", "(", "self", ".", "worker_result_queue", ",", "self", ".", "data_queue", ",", "self", ".", "done_event", ",", "self", ".", "pin_memory", ",", "\n", "maybe_device_id", ")", ")", "\n", "self", ".", "worker_manager_thread", ".", "daemon", "=", "True", "\n", "self", ".", "worker_manager_thread", ".", "start", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "data_queue", "=", "self", ".", "worker_result_queue", "\n", "\n", "", "for", "w", "in", "self", ".", "workers", ":", "\n", "                ", "w", ".", "daemon", "=", "True", "# ensure that the worker exits on process exit", "\n", "w", ".", "start", "(", ")", "\n", "\n", "", "_update_worker_pids", "(", "id", "(", "self", ")", ",", "tuple", "(", "w", ".", "pid", "for", "w", "in", "self", ".", "workers", ")", ")", "\n", "_set_SIGCHLD_handler", "(", ")", "\n", "self", ".", "worker_pids_set", "=", "True", "\n", "\n", "# prime the prefetch loop", "\n", "for", "_", "in", "range", "(", "2", "*", "self", ".", "num_workers", ")", ":", "\n", "                ", "self", ".", "_put_indices", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__": [[128, 142], ["torch.utils.data.dataloader.DataLoader.__init__"], "methods", ["home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "args", ",", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "sampler", "=", "None", ",", "batch_sampler", "=", "None", ",", "\n", "collate_fn", "=", "default_collate", ",", "pin_memory", "=", "False", ",", "drop_last", "=", "False", ",", "\n", "timeout", "=", "0", ",", "worker_init_fn", "=", "None", ")", ":", "\n", "\n", "        ", "super", "(", "MSDataLoader", ",", "self", ")", ".", "__init__", "(", "\n", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "\n", "sampler", "=", "sampler", ",", "batch_sampler", "=", "batch_sampler", ",", "\n", "num_workers", "=", "args", ".", "n_threads", ",", "collate_fn", "=", "collate_fn", ",", "\n", "pin_memory", "=", "pin_memory", ",", "drop_last", "=", "drop_last", ",", "\n", "timeout", "=", "timeout", ",", "worker_init_fn", "=", "worker_init_fn", ")", "\n", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader.MSDataLoader.__iter__": [[143, 145], ["dataloader._MSDataLoaderIter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "_MSDataLoaderIter", "(", "self", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.dataloader._ms_loop": [[29, 54], ["torch._C._set_worker_signal_handlers", "torch.set_num_threads", "torch.set_num_threads", "torch.manual_seed", "torch.manual_seed", "index_queue.get", "collate_fn", "collate_fn.append", "data_queue.put", "random.randrange", "dataset.set_scale", "data_queue.put", "len", "len", "torch.utils.data.dataloader.ExceptionWrapper", "sys.exc_info"], "function", ["home.repos.pwc.inspect_result.Jee-King_TSAN.data.srdata.SRData.set_scale"], ["", "def", "_ms_loop", "(", "dataset", ",", "index_queue", ",", "data_queue", ",", "collate_fn", ",", "scale", ",", "seed", ",", "init_fn", ",", "worker_id", ")", ":", "\n", "    ", "global", "_use_shared_memory", "\n", "_use_shared_memory", "=", "True", "\n", "_set_worker_signal_handlers", "(", ")", "\n", "\n", "torch", ".", "set_num_threads", "(", "1", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "while", "True", ":", "\n", "        ", "r", "=", "index_queue", ".", "get", "(", ")", "\n", "if", "r", "is", "None", ":", "\n", "            ", "break", "\n", "", "idx", ",", "batch_indices", "=", "r", "\n", "try", ":", "\n", "            ", "idx_scale", "=", "0", "\n", "if", "len", "(", "scale", ")", ">", "1", "and", "dataset", ".", "train", ":", "\n", "                ", "idx_scale", "=", "random", ".", "randrange", "(", "0", ",", "len", "(", "scale", ")", ")", "\n", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "samples", "=", "collate_fn", "(", "[", "dataset", "[", "i", "]", "for", "i", "in", "batch_indices", "]", ")", "\n", "samples", ".", "append", "(", "idx_scale", ")", "\n", "\n", "", "except", "Exception", ":", "\n", "            ", "data_queue", ".", "put", "(", "(", "idx", ",", "ExceptionWrapper", "(", "sys", ".", "exc_info", "(", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "data_queue", ".", "put", "(", "(", "idx", ",", "samples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Jee-King_TSAN.code.template.set_template": [[1, 135], ["args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find"], "function", ["None"], ["def", "set_template", "(", "args", ")", ":", "\n", "# Set the templates here", "\n", "    ", "if", "args", ".", "template", ".", "find", "(", "'jpeg'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "data_train", "=", "'DIV2K_jpeg'", "\n", "args", ".", "data_test", "=", "'DIV2K_jpeg'", "\n", "args", ".", "epochs", "=", "200", "\n", "args", ".", "lr_decay", "=", "100", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'EDSR_paper'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'EDSR'", "\n", "args", ".", "n_resblocks", "=", "32", "\n", "args", ".", "n_feats", "=", "256", "\n", "args", ".", "res_scale", "=", "0.1", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'MDSR'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'MDSR'", "\n", "args", ".", "patch_size", "=", "48", "\n", "args", ".", "epochs", "=", "650", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'DDBPN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'DDBPN'", "\n", "args", ".", "patch_size", "=", "128", "\n", "args", ".", "scale", "=", "'4'", "\n", "\n", "args", ".", "data_test", "=", "'Set5'", "\n", "\n", "args", ".", "batch_size", "=", "20", "\n", "args", ".", "epochs", "=", "1000", "\n", "args", ".", "lr_decay", "=", "500", "\n", "args", ".", "gamma", "=", "0.1", "\n", "args", ".", "weight_decay", "=", "1e-4", "\n", "\n", "args", ".", "loss", "=", "'1*MSE'", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'GAN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "epochs", "=", "200", "\n", "args", ".", "lr", "=", "5e-5", "\n", "args", ".", "lr_decay", "=", "150", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'RCAN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'RCAN'", "\n", "args", ".", "n_resgroups", "=", "1", "\n", "args", ".", "n_resblocks", "=", "1", "\n", "args", ".", "n_feats", "=", "64", "\n", "args", ".", "chop", "=", "True", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'MSRN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'MSRN'", "\n", "args", ".", "n_blocks", "=", "8", "\n", "args", ".", "n_feats", "=", "64", "\n", "args", ".", "chop", "=", "True", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'MDRN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'MDRN'", "\n", "args", ".", "chop", "=", "True", "\n", "args", ".", "n_feats", "=", "64", "\n", "args", ".", "n_blocks", "=", "8", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'TSAN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'TSAN'", "\n", "args", ".", "chop", "=", "True", "\n", "args", ".", "n_feats", "=", "64", "\n", "args", ".", "n_blocks", "=", "8", "\n", "", "", ""]]}