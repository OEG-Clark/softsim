{"home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.main.AverageMeter.__init__": [[416, 418], ["main.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.main.AverageMeter.reset": [[419, 424], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.main.AverageMeter.update": [[425, 430], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.main.train": [[214, 293], ["print", "Dnnet.train", "Hidnet.train", "Disnet.train", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter", "enumerate", "train_loss[].append", "train_loss[].append", "train_acc[].append", "train_acc[].append", "main.save_loss_acc", "optimizerD.zero_grad", "Hidnet", "Disnet", "Disnet", "criterionD", "criterionD", "loss_D.backward", "optimizerD.step", "optimizerH.zero_grad", "optimizerD.zero_grad", "optimizerN.zero_grad", "Disnet", "Dnnet", "criterionH_mse", "criterionH_ssim", "criterionD", "criterionN", "loss_H.backward", "optimizerH.step", "optimizerN.zero_grad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Dnnet", "criterionN", "criterionN.backward", "optimizerN.step", "Dnnet", "Dnnet.max", "wm_cover_predicted.eq().sum().item", "dnn_output[].max", "wm_predicted.eq().sum().item", "dnn_output[].max", "real_predicted.eq().sum().item", "print", "main.AverageMeter.update", "main.AverageMeter.update", "main.AverageMeter.update", "main.AverageMeter.update", "input.cuda", "label.cuda", "Hidnet.detach", "loss_H.item", "int", "loss_D.item", "int", "Hidnet.detach", "wm_cover_predicted.eq().sum", "wm_predicted.eq().sum", "real_predicted.eq().sum", "len", "len", "len", "len", "loss_D.item", "loss_H.item", "criterionH_mse.item", "criterionH_ssim.item", "criterionD.item", "criterionN.item", "input.size", "input.size", "wm_cover_predicted.eq", "wm_predicted.eq", "real_predicted.eq"], "function", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.train", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.train", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.train", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.save_loss_acc", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update"], ["def", "train", "(", "epoch", ")", ":", "\n", "    ", "print", "(", "'\\nEpoch: %d'", "%", "epoch", ")", "\n", "Dnnet", ".", "train", "(", ")", "\n", "Hidnet", ".", "train", "(", ")", "\n", "Disnet", ".", "train", "(", ")", "\n", "wm_cover_correct", ",", "wm_correct", ",", "real_correct", ",", "wm_total", ",", "real_total", "=", "0", ",", "0", ",", "0", ",", "0", ",", "0", "\n", "loss_H_", "=", "AverageMeter", "(", ")", "\n", "loss_D_", "=", "AverageMeter", "(", ")", "\n", "real_acc", "=", "AverageMeter", "(", ")", "\n", "wm_acc", "=", "AverageMeter", "(", ")", "\n", "for", "batch_idx", ",", "(", "input", ",", "label", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "input", ",", "label", "=", "input", ".", "cuda", "(", ")", ",", "label", ".", "cuda", "(", ")", "\n", "wm_input", "=", "wm_inputs", "[", "(", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "wm_label", "=", "wm_labels", "[", "(", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "wm_cover_label", "=", "wm_cover_labels", "[", "(", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "#############Discriminator##############", "\n", "optimizerD", ".", "zero_grad", "(", ")", "\n", "wm_img", "=", "Hidnet", "(", "wm_input", ",", "secret_img", ")", "\n", "wm_dis_output", "=", "Disnet", "(", "wm_img", ".", "detach", "(", ")", ")", "\n", "real_dis_output", "=", "Disnet", "(", "wm_input", ")", "\n", "loss_D_wm", "=", "criterionD", "(", "wm_dis_output", ",", "fake", ")", "\n", "loss_D_real", "=", "criterionD", "(", "real_dis_output", ",", "valid", ")", "\n", "loss_D", "=", "loss_D_wm", "+", "loss_D_real", "\n", "loss_D", ".", "backward", "(", ")", "\n", "optimizerD", ".", "step", "(", ")", "\n", "################Hidding Net#############", "\n", "optimizerH", ".", "zero_grad", "(", ")", "\n", "optimizerD", ".", "zero_grad", "(", ")", "\n", "optimizerN", ".", "zero_grad", "(", ")", "\n", "wm_dis_output", "=", "Disnet", "(", "wm_img", ")", "\n", "wm_dnn_output", "=", "Dnnet", "(", "wm_img", ")", "\n", "loss_mse", "=", "criterionH_mse", "(", "wm_input", ",", "wm_img", ")", "\n", "loss_ssim", "=", "criterionH_ssim", "(", "wm_input", ",", "wm_img", ")", "\n", "loss_adv", "=", "criterionD", "(", "wm_dis_output", ",", "valid", ")", "\n", "\n", "loss_dnn", "=", "criterionN", "(", "wm_dnn_output", ",", "wm_label", ")", "\n", "loss_H", "=", "args", ".", "hyper_parameters", "[", "0", "]", "*", "loss_mse", "+", "args", ".", "hyper_parameters", "[", "1", "]", "*", "(", "1", "-", "loss_ssim", ")", "+", "args", ".", "hyper_parameters", "[", "2", "]", "*", "loss_adv", "+", "args", ".", "hyper_parameters", "[", "3", "]", "*", "loss_dnn", "\n", "loss_H", ".", "backward", "(", ")", "\n", "optimizerH", ".", "step", "(", ")", "\n", "################DNNet#############", "\n", "optimizerN", ".", "zero_grad", "(", ")", "\n", "inputs", "=", "torch", ".", "cat", "(", "[", "input", ",", "wm_img", ".", "detach", "(", ")", "]", ",", "dim", "=", "0", ")", "\n", "labels", "=", "torch", ".", "cat", "(", "[", "label", ",", "wm_label", "]", ",", "dim", "=", "0", ")", "\n", "dnn_output", "=", "Dnnet", "(", "inputs", ")", "\n", "\n", "loss_DNN", "=", "criterionN", "(", "dnn_output", ",", "labels", ")", "\n", "loss_DNN", ".", "backward", "(", ")", "\n", "optimizerN", ".", "step", "(", ")", "\n", "\n", "# calculate the accuracy", "\n", "wm_cover_output", "=", "Dnnet", "(", "wm_input", ")", "\n", "_", ",", "wm_cover_predicted", "=", "wm_cover_output", ".", "max", "(", "1", ")", "\n", "wm_cover_correct", "+=", "wm_cover_predicted", ".", "eq", "(", "wm_cover_label", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "_", ",", "wm_predicted", "=", "dnn_output", "[", "args", ".", "batchsize", ":", "args", ".", "batchsize", "+", "\n", "args", ".", "wm_batchsize", "]", ".", "max", "(", "1", ")", "\n", "wm_correct", "+=", "wm_predicted", ".", "eq", "(", "wm_label", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "wm_total", "+=", "args", ".", "wm_batchsize", "\n", "\n", "_", ",", "real_predicted", "=", "dnn_output", "[", "0", ":", "args", ".", "batchsize", "]", ".", "max", "(", "1", ")", "\n", "real_correct", "+=", "real_predicted", ".", "eq", "(", "\n", "labels", "[", "0", ":", "args", ".", "batchsize", "]", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "real_total", "+=", "args", ".", "batchsize", "\n", "\n", "print", "(", "'[%d/%d][%d/%d]  Loss D: %.4f Loss_H: %.4f (mse: %.4f ssim: %.4f adv: %.4f)  Loss_real_DNN: %.4f Real acc: %.3f  wm acc: %.3f'", "%", "(", "\n", "epoch", ",", "args", ".", "num_epochs", ",", "batch_idx", ",", "len", "(", "trainloader", ")", ",", "\n", "loss_D", ".", "item", "(", ")", ",", "loss_H", ".", "item", "(", ")", ",", "loss_mse", ".", "item", "(", "\n", ")", ",", "loss_ssim", ".", "item", "(", ")", ",", "loss_adv", ".", "item", "(", ")", ",", "loss_DNN", ".", "item", "(", ")", ",", "\n", "100.", "*", "real_correct", "/", "real_total", ",", "100.", "*", "wm_correct", "/", "wm_total", ")", ")", "\n", "\n", "loss_H_", ".", "update", "(", "loss_H", ".", "item", "(", ")", ",", "int", "(", "input", ".", "size", "(", ")", "[", "0", "]", ")", ")", "\n", "loss_D_", ".", "update", "(", "loss_D", ".", "item", "(", ")", ",", "int", "(", "input", ".", "size", "(", ")", "[", "0", "]", ")", ")", "\n", "real_acc", ".", "update", "(", "100.", "*", "real_correct", "/", "real_total", ")", "\n", "wm_acc", ".", "update", "(", "100.", "*", "wm_correct", "/", "wm_total", ")", "\n", "", "train_loss", "[", "0", "]", ".", "append", "(", "loss_H_", ".", "avg", ")", "\n", "train_loss", "[", "1", "]", ".", "append", "(", "loss_D_", ".", "avg", ")", "\n", "train_acc", "[", "0", "]", ".", "append", "(", "real_acc", ".", "avg", ")", "\n", "train_acc", "[", "1", "]", ".", "append", "(", "wm_acc", ".", "avg", ")", "\n", "save_loss_acc", "(", "epoch", ",", "train_loss", ",", "train_acc", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.main.test": [[295, 409], ["Dnnet.eval", "Hidnet.eval", "Disnet.eval", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter.update", "main.AverageMeter.update", "test_acc[].append", "test_acc[].append", "print", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torchvision.utils.save_image", "torchvision.utils.save_image", "test_loss[].append", "test_loss[].append", "main.save_loss_acc", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "Hidnet", "Disnet", "Disnet", "criterionD", "criterionD", "main.AverageMeter.update", "Dnnet", "criterionH_mse", "criterionH_ssim", "criterionD", "criterionN", "main.AverageMeter.update", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Dnnet", "criterionN", "main.AverageMeter.update", "Dnnet", "Dnnet.max", "wm_cover_predicted.eq().sum().item", "dnn_outputs[].max", "wm_predicted.eq().sum().item", "dnn_outputs[].max", "real_predicted.eq().sum().item", "input.cuda", "label.cuda", "Hidnet.detach", "loss_D.item", "int", "loss_H.item", "int", "criterionN.item", "int", "str", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "Hidnet.detach", "wm_cover_predicted.eq().sum", "wm_predicted.eq().sum", "real_predicted.eq().sum", "len", "len", "len", "wm_input.size", "input.size", "torch.cat.size", "wm_cover_predicted.eq", "wm_predicted.eq", "real_predicted.eq"], "function", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.save_loss_acc", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update"], ["", "def", "test", "(", "epoch", ")", ":", "\n", "    ", "Dnnet", ".", "eval", "(", ")", "\n", "Hidnet", ".", "eval", "(", ")", "\n", "Disnet", ".", "eval", "(", ")", "\n", "global", "best_real_acc", "\n", "global", "best_wm_acc", "\n", "global", "best_wm_input_acc", "\n", "wm_cover_correct", ",", "wm_correct", ",", "real_correct", ",", "real_total", ",", "wm_total", "=", "0", ",", "0", ",", "0", ",", "0", ",", "0", "\n", "Hlosses", "=", "AverageMeter", "(", ")", "\n", "Dislosses", "=", "AverageMeter", "(", ")", "\n", "real_acc", "=", "AverageMeter", "(", ")", "\n", "wm_acc", "=", "AverageMeter", "(", ")", "\n", "DNNlosses", "=", "AverageMeter", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "input", ",", "label", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "input", ",", "label", "=", "input", ".", "cuda", "(", ")", ",", "label", ".", "cuda", "(", ")", "\n", "wm_input", "=", "wm_inputs", "[", "(", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "wm_label", "=", "wm_labels", "[", "(", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "wm_cover_label", "=", "wm_cover_labels", "[", "(", "\n", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "#############Discriminator###############", "\n", "wm_img", "=", "Hidnet", "(", "wm_input", ",", "secret_img", ")", "\n", "wm_dis_output", "=", "Disnet", "(", "wm_img", ".", "detach", "(", ")", ")", "\n", "real_dis_output", "=", "Disnet", "(", "wm_input", ")", "\n", "loss_D_wm", "=", "criterionD", "(", "wm_dis_output", ",", "fake", ")", "\n", "loss_D_real", "=", "criterionD", "(", "real_dis_output", ",", "valid", ")", "\n", "loss_D", "=", "loss_D_wm", "+", "loss_D_real", "\n", "Dislosses", ".", "update", "(", "loss_D", ".", "item", "(", ")", ",", "int", "(", "wm_input", ".", "size", "(", ")", "[", "0", "]", ")", ")", "\n", "\n", "################Hidding Net#############", "\n", "wm_dnn_outputs", "=", "Dnnet", "(", "wm_img", ")", "\n", "loss_mse", "=", "criterionH_mse", "(", "wm_input", ",", "wm_img", ")", "\n", "loss_ssim", "=", "criterionH_ssim", "(", "wm_input", ",", "wm_img", ")", "\n", "loss_adv", "=", "criterionD", "(", "wm_dis_output", ",", "valid", ")", "\n", "\n", "loss_dnn", "=", "criterionN", "(", "wm_dnn_outputs", ",", "wm_label", ")", "\n", "loss_H", "=", "args", ".", "hyper_parameters", "[", "0", "]", "*", "loss_mse", "+", "args", ".", "hyper_parameters", "[", "1", "]", "*", "(", "1", "-", "loss_ssim", ")", "+", "args", ".", "hyper_parameters", "[", "2", "]", "*", "loss_adv", "+", "args", ".", "hyper_parameters", "[", "3", "]", "*", "loss_dnn", "\n", "Hlosses", ".", "update", "(", "loss_H", ".", "item", "(", ")", ",", "int", "(", "input", ".", "size", "(", ")", "[", "0", "]", ")", ")", "\n", "################DNNet#############", "\n", "inputs", "=", "torch", ".", "cat", "(", "[", "input", ",", "wm_img", ".", "detach", "(", ")", "]", ",", "dim", "=", "0", ")", "\n", "labels", "=", "torch", ".", "cat", "(", "[", "label", ",", "wm_label", "]", ",", "dim", "=", "0", ")", "\n", "dnn_outputs", "=", "Dnnet", "(", "inputs", ")", "\n", "\n", "loss_DNN", "=", "criterionN", "(", "dnn_outputs", ",", "labels", ")", "\n", "DNNlosses", ".", "update", "(", "loss_DNN", ".", "item", "(", ")", ",", "int", "(", "inputs", ".", "size", "(", ")", "[", "0", "]", ")", ")", "\n", "\n", "\n", "wm_cover_output", "=", "Dnnet", "(", "wm_input", ")", "\n", "_", ",", "wm_cover_predicted", "=", "wm_cover_output", ".", "max", "(", "1", ")", "\n", "wm_cover_correct", "+=", "wm_cover_predicted", ".", "eq", "(", "\n", "wm_cover_label", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "#wm_dnn_output = Dnnet(wm_img)", "\n", "# _, wm_predicted = wm_dnn_output.max(1)", "\n", "_", ",", "wm_predicted", "=", "dnn_outputs", "[", "args", ".", "batchsize", ":", "\n", "args", ".", "batchsize", "+", "args", ".", "wm_batchsize", "]", ".", "max", "(", "1", ")", "\n", "wm_correct", "+=", "wm_predicted", ".", "eq", "(", "wm_label", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "wm_total", "+=", "args", ".", "wm_batchsize", "\n", "\n", "_", ",", "real_predicted", "=", "dnn_outputs", "[", "0", ":", "args", ".", "batchsize", "]", ".", "max", "(", "1", ")", "\n", "real_correct", "+=", "real_predicted", ".", "eq", "(", "\n", "labels", "[", "0", ":", "args", ".", "batchsize", "]", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "real_total", "+=", "args", ".", "batchsize", "\n", "\n", "", "", "val_hloss", "=", "Hlosses", ".", "avg", "\n", "val_disloss", "=", "Dislosses", ".", "avg", "\n", "val_dnnloss", "=", "DNNlosses", ".", "avg", "\n", "real_acc", ".", "update", "(", "100.", "*", "real_correct", "/", "real_total", ")", "\n", "wm_acc", ".", "update", "(", "100.", "*", "wm_correct", "/", "wm_total", ")", "\n", "test_acc", "[", "0", "]", ".", "append", "(", "real_acc", ".", "avg", ")", "\n", "test_acc", "[", "1", "]", ".", "append", "(", "wm_acc", ".", "avg", ")", "\n", "print", "(", "'Real acc: %.3f  wm acc: %.3f wm cover acc: %.3f '", "%", "(", "\n", "100.", "*", "real_correct", "/", "real_total", ",", "100.", "*", "wm_correct", "/", "wm_total", ",", "100.", "*", "wm_cover_correct", "/", "wm_total", ")", ")", "\n", "\n", "resultImg", "=", "torch", ".", "cat", "(", "[", "wm_input", ",", "wm_img", ",", "secret_img", "]", ",", "0", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "resultImg", ",", "args", ".", "save_path", "+", "'images/Epoch_'", "+", "str", "(", "epoch", ")", "+", "'_img.png'", ",", "nrow", "=", "args", ".", "wm_batchsize", ",", "\n", "padding", "=", "1", ",", "normalize", "=", "True", ")", "\n", "test_loss", "[", "0", "]", ".", "append", "(", "val_hloss", ")", "\n", "test_loss", "[", "1", "]", ".", "append", "(", "val_disloss", ")", "\n", "\n", "save_loss_acc", "(", "epoch", ",", "test_loss", ",", "test_acc", ",", "False", ")", "\n", "# save", "\n", "real_acc", "=", "100.", "*", "real_correct", "/", "real_total", "\n", "wm_acc", "=", "100.", "*", "wm_correct", "/", "wm_total", "\n", "wm_input_acc", "=", "100.", "*", "wm_cover_correct", "/", "wm_total", "\n", "if", "real_acc", ">=", "best_real_acc", ":", "# and (wm_acc >= best_wm_acc):", "\n", "        ", "print", "(", "'Saving...'", ")", "\n", "\n", "Hstate", "=", "{", "\n", "'net'", ":", "Hidnet", ".", "module", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "Hidnet", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "}", "\n", "Dstate", "=", "{", "\n", "'net'", ":", "Disnet", ".", "module", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "Disnet", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "}", "\n", "Nstate", "=", "{", "\n", "'net'", ":", "Dnnet", ".", "module", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "Dnnet", ",", "\n", "'acc'", ":", "real_acc", ",", "\n", "'wm_acc'", ":", "wm_acc", ",", "\n", "# 'wm_labels':np_labels,", "\n", "'epoch'", ":", "epoch", ",", "\n", "}", "\n", "\n", "torch", ".", "save", "(", "Hstate", ",", "args", ".", "save_path", "+", "'checkpiont/Hidnet.pt'", ")", "\n", "torch", ".", "save", "(", "Dstate", ",", "args", ".", "save_path", "+", "'checkpiont/Disnet.pt'", ")", "\n", "torch", ".", "save", "(", "Nstate", ",", "args", ".", "save_path", "+", "'checkpiont/Dnnet.pt'", ")", "\n", "best_real_acc", "=", "real_acc", "\n", "", "if", "wm_acc", ">", "best_wm_acc", ":", "\n", "        ", "best_wm_acc", "=", "wm_acc", "\n", "\n", "", "if", "wm_input_acc", ">", "best_wm_input_acc", ":", "\n", "        ", "best_wm_input_acc", "=", "wm_input_acc", "\n", "", "return", "val_hloss", ",", "val_disloss", ",", "val_dnnloss", ",", "best_real_acc", ",", "best_wm_acc", ",", "best_wm_input_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.main.save_loss_acc": [[432, 457], ["matplotlib.subplots", "ax1.twinx", "ax1.plot", "ax1.plot", "ax1.twinx.plot", "ax1.twinx.plot", "ax1.set_xlabel", "ax1.set_ylabel", "ax1.twinx.set_ylabel", "ax1.set_ylim", "ax1.twinx.set_ylim", "ax1.legend", "ax1.twinx.legend", "matplotlib.close", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "matplotlib.savefig", "matplotlib.savefig", "str"], "function", ["None"], ["", "", "def", "save_loss_acc", "(", "epoch", ",", "loss", ",", "acc", ",", "train", ")", ":", "\n", "\n", "\n", "    ", "_", ",", "ax1", "=", "plt", ".", "subplots", "(", ")", "\n", "ax2", "=", "ax1", ".", "twinx", "(", ")", "\n", "\n", "ax1", ".", "plot", "(", "np", ".", "arange", "(", "epoch", "+", "1", ")", ",", "loss", "[", "0", "]", ",", "'-y'", ",", "label", "=", "'ste-model loss'", ")", "\n", "ax1", ".", "plot", "(", "np", ".", "arange", "(", "epoch", "+", "1", ")", ",", "loss", "[", "1", "]", ",", "'-r'", ",", "label", "=", "'discriminator loss'", ")", "\n", "ax2", ".", "plot", "(", "np", ".", "arange", "(", "epoch", "+", "1", ")", ",", "acc", "[", "0", "]", ",", "'-g'", ",", "label", "=", "'real_acc'", ")", "\n", "ax2", ".", "plot", "(", "np", ".", "arange", "(", "epoch", "+", "1", ")", ",", "acc", "[", "1", "]", ",", "'-b'", ",", "label", "=", "'wm_acc'", ")", "\n", "\n", "ax1", ".", "set_xlabel", "(", "'Epoch('", "+", "\",\"", ".", "join", "(", "str", "(", "l", ")", "for", "l", "in", "args", ".", "hyper_parameters", ")", "+", "')'", ")", "\n", "ax1", ".", "set_ylabel", "(", "'Loss'", ")", "\n", "ax2", ".", "set_ylabel", "(", "'Accuracy (%)'", ")", "\n", "\n", "ax1", ".", "set_ylim", "(", "0", ",", "5", ")", "\n", "ax2", ".", "set_ylim", "(", "0", ",", "100", ")", "\n", "\n", "ax1", ".", "legend", "(", "loc", "=", "1", ")", "\n", "ax2", ".", "legend", "(", "loc", "=", "2", ")", "\n", "if", "train", ":", "\n", "        ", "plt", ".", "savefig", "(", "args", ".", "save_path", "+", "'results_train_'", "+", "GPU", "+", "'.png'", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "savefig", "(", "args", ".", "save_path", "+", "'results_test_'", "+", "GPU", "+", "'.png'", ")", "\n", "", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.utils.get_mean_and_std": [[15, 28], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "print", "torch.zeros.div_", "torch.zeros.div_", "range", "len", "len", "inputs[].mean", "inputs[].std"], "function", ["None"], ["def", "get_mean_and_std", "(", "dataset", ")", ":", "\n", "    ", "'''Compute the mean and std value of dataset.'''", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "mean", "=", "torch", ".", "zeros", "(", "3", ")", "\n", "std", "=", "torch", ".", "zeros", "(", "3", ")", "\n", "print", "(", "'==> Computing mean and std..'", ")", "\n", "for", "inputs", ",", "targets", "in", "dataloader", ":", "\n", "        ", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "            ", "mean", "[", "i", "]", "+=", "inputs", "[", ":", ",", "i", ",", ":", ",", ":", "]", ".", "mean", "(", ")", "\n", "std", "[", "i", "]", "+=", "inputs", "[", ":", ",", "i", ",", ":", ",", ":", "]", ".", "std", "(", ")", "\n", "", "", "mean", ".", "div_", "(", "len", "(", "dataset", ")", ")", "\n", "std", ".", "div_", "(", "len", "(", "dataset", ")", ")", "\n", "return", "mean", ",", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.utils.init_params": [[29, 43], ["net.modules", "isinstance", "torch.kaiming_normal", "isinstance", "torch.constant", "torch.constant", "torch.constant", "isinstance", "torch.normal", "torch.constant"], "function", ["None"], ["", "def", "init_params", "(", "net", ")", ":", "\n", "    ", "'''Init layer parameters.'''", "\n", "for", "m", "in", "net", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "init", ".", "kaiming_normal", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "if", "m", ".", "bias", ":", "\n", "                ", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "init", ".", "constant", "(", "m", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "init", ".", "normal", "(", "m", ".", "weight", ",", "std", "=", "1e-3", ")", "\n", "if", "m", ".", "bias", ":", "\n", "                ", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.utils.progress_bar": [[51, 93], ["int", "sys.stdout.write", "range", "sys.stdout.write", "range", "sys.stdout.write", "time.time", "L.append", "L.append", "sys.stdout.write", "range", "range", "sys.stdout.write", "sys.stdout.flush", "time.time", "int", "sys.stdout.write", "sys.stdout.write", "L.append", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "utils.format_time", "utils.format_time", "len", "int", "int"], "function", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.utils.format_time", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.utils.format_time"], ["def", "progress_bar", "(", "current", ",", "total", ",", "msg", "=", "None", ")", ":", "\n", "    ", "global", "last_time", ",", "begin_time", "\n", "if", "current", "==", "0", ":", "\n", "        ", "begin_time", "=", "time", ".", "time", "(", ")", "# Reset for new bar.", "\n", "\n", "", "cur_len", "=", "int", "(", "TOTAL_BAR_LENGTH", "*", "current", "/", "total", ")", "\n", "rest_len", "=", "int", "(", "TOTAL_BAR_LENGTH", "-", "cur_len", ")", "-", "1", "\n", "\n", "sys", ".", "stdout", ".", "write", "(", "' ['", ")", "\n", "for", "i", "in", "range", "(", "cur_len", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'='", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "'>'", ")", "\n", "for", "i", "in", "range", "(", "rest_len", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'.'", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "']'", ")", "\n", "\n", "cur_time", "=", "time", ".", "time", "(", ")", "\n", "step_time", "=", "cur_time", "-", "last_time", "\n", "last_time", "=", "cur_time", "\n", "tot_time", "=", "cur_time", "-", "begin_time", "\n", "\n", "L", "=", "[", "]", "\n", "L", ".", "append", "(", "'  Step: %s'", "%", "format_time", "(", "step_time", ")", ")", "\n", "L", ".", "append", "(", "' | Tot: %s'", "%", "format_time", "(", "tot_time", ")", ")", "\n", "if", "msg", ":", "\n", "        ", "L", ".", "append", "(", "' | '", "+", "msg", ")", "\n", "\n", "", "msg", "=", "''", ".", "join", "(", "L", ")", "\n", "sys", ".", "stdout", ".", "write", "(", "msg", ")", "\n", "for", "i", "in", "range", "(", "term_width", "-", "int", "(", "TOTAL_BAR_LENGTH", ")", "-", "len", "(", "msg", ")", "-", "3", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "' '", ")", "\n", "\n", "# Go back to the center of the bar.", "\n", "", "for", "i", "in", "range", "(", "term_width", "-", "int", "(", "TOTAL_BAR_LENGTH", "/", "2", ")", "+", "2", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\b'", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "' %d/%d '", "%", "(", "current", "+", "1", ",", "total", ")", ")", "\n", "\n", "if", "current", "<", "total", "-", "1", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\r'", ")", "\n", "", "else", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\n'", ")", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.None.utils.format_time": [[94, 125], ["int", "int", "int", "int", "int", "str", "str", "str", "str", "str"], "function", ["None"], ["", "def", "format_time", "(", "seconds", ")", ":", "\n", "    ", "days", "=", "int", "(", "seconds", "/", "3600", "/", "24", ")", "\n", "seconds", "=", "seconds", "-", "days", "*", "3600", "*", "24", "\n", "hours", "=", "int", "(", "seconds", "/", "3600", ")", "\n", "seconds", "=", "seconds", "-", "hours", "*", "3600", "\n", "minutes", "=", "int", "(", "seconds", "/", "60", ")", "\n", "seconds", "=", "seconds", "-", "minutes", "*", "60", "\n", "secondsf", "=", "int", "(", "seconds", ")", "\n", "seconds", "=", "seconds", "-", "secondsf", "\n", "millis", "=", "int", "(", "seconds", "*", "1000", ")", "\n", "\n", "f", "=", "''", "\n", "i", "=", "1", "\n", "if", "days", ">", "0", ":", "\n", "        ", "f", "+=", "str", "(", "days", ")", "+", "'D'", "\n", "i", "+=", "1", "\n", "", "if", "hours", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "hours", ")", "+", "'h'", "\n", "i", "+=", "1", "\n", "", "if", "minutes", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "minutes", ")", "+", "'m'", "\n", "i", "+=", "1", "\n", "", "if", "secondsf", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "secondsf", ")", "+", "'s'", "\n", "i", "+=", "1", "\n", "", "if", "millis", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "millis", ")", "+", "'ms'", "\n", "i", "+=", "1", "\n", "", "if", "f", "==", "''", ":", "\n", "        ", "f", "=", "'0ms'", "\n", "", "return", "f", "\n", "", ""]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.__init__": [[414, 416], ["main.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.reset"], ["\n", "\n", "def", "__init__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.reset": [[417, 422], ["None"], "methods", ["None"], ["        ", "self", ".", "reset", "(", ")", "\n", "\n", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update": [[423, 428], ["None"], "methods", ["None"], ["self", ".", "count", "=", "0", "\n", "\n", "", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.SpecifiedLabel": [[26, 30], ["None"], "function", ["None"], ["parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "'cifar10'", ",", "help", "=", "'mnist|cifar10'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataroot'", ",", "default", "=", "'./data/'", ")", "\n", "parser", ".", "add_argument", "(", "'--train'", ",", "type", "=", "bool", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--num_epochs'", ",", "type", "=", "int", ",", "default", "=", "100", ")", "# 100 for cifar10    30 for mnist", "\n", "parser", ".", "add_argument", "(", "'--batchsize'", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.train": [[216, 293], ["print", "Dnnet.train", "Hidnet.train", "Disnet.train", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter", "enumerate", "train_loss[].append", "train_loss[].append", "train_acc[].append", "train_acc[].append", "main.save_loss_acc", "optimizerD.zero_grad", "Hidnet", "Disnet", "Disnet", "criterionD", "criterionD", "loss_D.backward", "optimizerD.step", "optimizerH.zero_grad", "optimizerD.zero_grad", "optimizerN.zero_grad", "Disnet", "Dnnet", "criterionH_mse", "criterionH_ssim", "criterionD", "criterionN", "loss_H.backward", "optimizerH.step", "optimizerN.zero_grad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Dnnet", "criterionN", "criterionN.backward", "optimizerN.step", "Dnnet", "Dnnet.max", "wm_cover_predicted.eq().sum().item", "dnn_output[].max", "wm_predicted.eq().sum().item", "dnn_output[].max", "real_predicted.eq().sum().item", "print", "main.AverageMeter.update", "main.AverageMeter.update", "main.AverageMeter.update", "main.AverageMeter.update", "input.cuda", "label.cuda", "Hidnet.detach", "loss_H.item", "int", "loss_D.item", "int", "Hidnet.detach", "wm_cover_predicted.eq().sum", "wm_predicted.eq().sum", "real_predicted.eq().sum", "len", "len", "len", "len", "loss_D.item", "loss_H.item", "criterionH_mse.item", "criterionH_ssim.item", "criterionD.item", "criterionN.item", "int", "input.size", "input.size", "wm_cover_predicted.eq", "wm_predicted.eq", "real_predicted.eq"], "function", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.train", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.train", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.train", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.save_loss_acc", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update"], ["Dnnet", ".", "train", "(", ")", "\n", "Hidnet", ".", "train", "(", ")", "\n", "Disnet", ".", "train", "(", ")", "\n", "wm_cover_correct", ",", "wm_correct", ",", "real_correct", ",", "wm_total", ",", "real_total", "=", "0", ",", "0", ",", "0", ",", "0", ",", "0", "\n", "loss_H_", "=", "AverageMeter", "(", ")", "\n", "loss_D_", "=", "AverageMeter", "(", ")", "\n", "real_acc", "=", "AverageMeter", "(", ")", "\n", "wm_acc", "=", "AverageMeter", "(", ")", "\n", "for", "batch_idx", ",", "(", "input", ",", "label", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "input", ",", "label", "=", "input", ".", "cuda", "(", ")", ",", "label", ".", "cuda", "(", ")", "\n", "wm_input", "=", "wm_inputs", "[", "(", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "wm_label", "=", "wm_labels", "[", "(", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "wm_cover_label", "=", "wm_cover_labels", "[", "(", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "#############Discriminator##############", "\n", "optimizerD", ".", "zero_grad", "(", ")", "\n", "wm_img", "=", "Hidnet", "(", "wm_input", ",", "secret_img", ")", "\n", "wm_dis_output", "=", "Disnet", "(", "wm_img", ".", "detach", "(", ")", ")", "\n", "real_dis_output", "=", "Disnet", "(", "wm_input", ")", "\n", "loss_D_wm", "=", "criterionD", "(", "wm_dis_output", ",", "fake", ")", "\n", "loss_D_real", "=", "criterionD", "(", "real_dis_output", ",", "valid", ")", "\n", "loss_D", "=", "loss_D_wm", "+", "loss_D_real", "\n", "loss_D", ".", "backward", "(", ")", "\n", "optimizerD", ".", "step", "(", ")", "\n", "################Hidding Net#############", "\n", "optimizerH", ".", "zero_grad", "(", ")", "\n", "optimizerD", ".", "zero_grad", "(", ")", "\n", "optimizerN", ".", "zero_grad", "(", ")", "\n", "wm_dis_output", "=", "Disnet", "(", "wm_img", ")", "\n", "wm_dnn_output", "=", "Dnnet", "(", "wm_img", ")", "\n", "loss_mse", "=", "criterionH_mse", "(", "wm_input", ",", "wm_img", ")", "\n", "loss_ssim", "=", "criterionH_ssim", "(", "wm_input", ",", "wm_img", ")", "\n", "loss_adv", "=", "criterionD", "(", "wm_dis_output", ",", "valid", ")", "\n", "\n", "loss_dnn", "=", "criterionN", "(", "wm_dnn_output", ",", "wm_label", ")", "\n", "loss_H", "=", "args", ".", "hyper_parameters", "[", "0", "]", "*", "loss_mse", "+", "args", ".", "hyper_parameters", "[", "1", "]", "*", "(", "1", "-", "loss_ssim", ")", "+", "args", ".", "hyper_parameters", "[", "2", "]", "*", "loss_adv", "+", "args", ".", "hyper_parameters", "[", "3", "]", "*", "loss_dnn", "\n", "loss_H", ".", "backward", "(", ")", "\n", "optimizerH", ".", "step", "(", ")", "\n", "################DNNet#############", "\n", "optimizerN", ".", "zero_grad", "(", ")", "\n", "inputs", "=", "torch", ".", "cat", "(", "[", "input", ",", "wm_img", ".", "detach", "(", ")", "]", ",", "dim", "=", "0", ")", "\n", "labels", "=", "torch", ".", "cat", "(", "[", "label", ",", "wm_label", "]", ",", "dim", "=", "0", ")", "\n", "dnn_output", "=", "Dnnet", "(", "inputs", ")", "\n", "\n", "loss_DNN", "=", "criterionN", "(", "dnn_output", ",", "labels", ")", "\n", "loss_DNN", ".", "backward", "(", ")", "\n", "optimizerN", ".", "step", "(", ")", "\n", "\n", "# calculate the accuracy", "\n", "wm_cover_output", "=", "Dnnet", "(", "wm_input", ")", "\n", "_", ",", "wm_cover_predicted", "=", "wm_cover_output", ".", "max", "(", "1", ")", "\n", "wm_cover_correct", "+=", "wm_cover_predicted", ".", "eq", "(", "wm_cover_label", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "_", ",", "wm_predicted", "=", "dnn_output", "[", "args", ".", "batchsize", ":", "args", ".", "batchsize", "+", "\n", "args", ".", "wm_batchsize", "]", ".", "max", "(", "1", ")", "\n", "wm_correct", "+=", "wm_predicted", ".", "eq", "(", "wm_label", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "wm_total", "+=", "args", ".", "wm_batchsize", "\n", "\n", "_", ",", "real_predicted", "=", "dnn_output", "[", "0", ":", "args", ".", "batchsize", "]", ".", "max", "(", "1", ")", "\n", "real_correct", "+=", "real_predicted", ".", "eq", "(", "\n", "labels", "[", "0", ":", "args", ".", "batchsize", "]", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "real_total", "+=", "args", ".", "batchsize", "\n", "\n", "print", "(", "'[%d/%d][%d/%d]  Loss D: %.4f Loss_H: %.4f (mse: %.4f ssim: %.4f adv: %.4f)  Loss_real_DNN: %.4f Real acc: %.3f  wm acc: %.3f'", "%", "(", "\n", "epoch", ",", "args", ".", "num_epochs", ",", "batch_idx", ",", "len", "(", "trainloader", ")", ",", "\n", "loss_D", ".", "item", "(", ")", ",", "loss_H", ".", "item", "(", ")", ",", "loss_mse", ".", "item", "(", "\n", ")", ",", "loss_ssim", ".", "item", "(", ")", ",", "loss_adv", ".", "item", "(", ")", ",", "loss_DNN", ".", "item", "(", ")", ",", "\n", "100.", "*", "real_correct", "/", "real_total", ",", "100.", "*", "wm_correct", "/", "wm_total", ")", ")", "\n", "\n", "loss_H_", ".", "update", "(", "loss_H", ".", "item", "(", ")", ",", "int", "(", "input", ".", "size", "(", ")", "[", "0", "]", ")", ")", "\n", "loss_D_", ".", "update", "(", "loss_D", ".", "item", "(", ")", ",", "int", "(", "input", ".", "size", "(", ")", "[", "0", "]", ")", ")", "\n", "real_acc", ".", "update", "(", "100.", "*", "real_correct", "/", "real_total", ")", "\n", "wm_acc", ".", "update", "(", "100.", "*", "wm_correct", "/", "wm_total", ")", "\n", "", "train_loss", "[", "0", "]", ".", "append", "(", "loss_H_", ".", "avg", ")", "\n", "train_loss", "[", "1", "]", ".", "append", "(", "loss_D_", ".", "avg", ")", "\n", "train_acc", "[", "0", "]", ".", "append", "(", "real_acc", ".", "avg", ")", "\n", "train_acc", "[", "1", "]", ".", "append", "(", "wm_acc", ".", "avg", ")", "\n", "save_loss_acc", "(", "epoch", ",", "train_loss", ",", "train_acc", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.test": [[295, 407], ["Dnnet.eval", "Hidnet.eval", "Disnet.eval", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter", "main.AverageMeter.update", "main.AverageMeter.update", "test_acc[].append", "test_acc[].append", "print", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torchvision.utils.save_image", "torchvision.utils.save_image", "test_loss[].append", "test_loss[].append", "main.save_loss_acc", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "Hidnet", "Disnet", "Disnet", "criterionD", "criterionD", "main.AverageMeter.update", "Dnnet", "criterionH_mse", "criterionH_ssim", "criterionD", "criterionN", "main.AverageMeter.update", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Dnnet", "criterionN", "main.AverageMeter.update", "Dnnet", "Dnnet.max", "wm_cover_predicted.eq().sum().item", "dnn_outputs[].max", "wm_predicted.eq().sum().item", "dnn_outputs[].max", "real_predicted.eq().sum().item", "input.cuda", "label.cuda", "Hidnet.detach", "loss_D.item", "int", "loss_H.item", "int", "criterionN.item", "int", "str", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "Hidnet.detach", "wm_cover_predicted.eq().sum", "wm_predicted.eq().sum", "real_predicted.eq().sum", "len", "len", "len", "wm_input.size", "input.size", "torch.cat.size", "wm_cover_predicted.eq", "wm_predicted.eq", "real_predicted.eq"], "function", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.save_loss_acc", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.AverageMeter.update"], ["", "def", "test", "(", "epoch", ")", ":", "\n", "    ", "Dnnet", ".", "eval", "(", ")", "\n", "Hidnet", ".", "eval", "(", ")", "\n", "Disnet", ".", "eval", "(", ")", "\n", "global", "best_real_acc", "\n", "global", "best_wm_acc", "\n", "global", "best_wm_input_acc", "\n", "wm_cover_correct", ",", "wm_correct", ",", "real_correct", ",", "real_total", ",", "wm_total", "=", "0", ",", "0", ",", "0", ",", "0", ",", "0", "\n", "Hlosses", "=", "AverageMeter", "(", ")", "\n", "Dislosses", "=", "AverageMeter", "(", ")", "\n", "real_acc", "=", "AverageMeter", "(", ")", "\n", "wm_acc", "=", "AverageMeter", "(", ")", "\n", "DNNlosses", "=", "AverageMeter", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "input", ",", "label", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "input", ",", "label", "=", "input", ".", "cuda", "(", ")", ",", "label", ".", "cuda", "(", ")", "\n", "wm_input", "=", "wm_inputs", "[", "(", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "wm_label", "=", "wm_labels", "[", "(", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "wm_cover_label", "=", "wm_cover_labels", "[", "(", "\n", "wm_idx", "+", "batch_idx", ")", "%", "len", "(", "wm_inputs", ")", "]", "\n", "#############Discriminator###############", "\n", "wm_img", "=", "Hidnet", "(", "wm_input", ",", "secret_img", ")", "\n", "wm_dis_output", "=", "Disnet", "(", "wm_img", ".", "detach", "(", ")", ")", "\n", "real_dis_output", "=", "Disnet", "(", "wm_input", ")", "\n", "loss_D_wm", "=", "criterionD", "(", "wm_dis_output", ",", "fake", ")", "\n", "loss_D_real", "=", "criterionD", "(", "real_dis_output", ",", "valid", ")", "\n", "loss_D", "=", "loss_D_wm", "+", "loss_D_real", "\n", "Dislosses", ".", "update", "(", "loss_D", ".", "item", "(", ")", ",", "int", "(", "wm_input", ".", "size", "(", ")", "[", "0", "]", ")", ")", "\n", "\n", "################Hidding Net#############", "\n", "wm_dnn_outputs", "=", "Dnnet", "(", "wm_img", ")", "\n", "loss_mse", "=", "criterionH_mse", "(", "wm_input", ",", "wm_img", ")", "\n", "loss_ssim", "=", "criterionH_ssim", "(", "wm_input", ",", "wm_img", ")", "\n", "loss_adv", "=", "criterionD", "(", "wm_dis_output", ",", "valid", ")", "\n", "\n", "loss_dnn", "=", "criterionN", "(", "wm_dnn_outputs", ",", "wm_label", ")", "\n", "loss_H", "=", "args", ".", "hyper_parameters", "[", "0", "]", "*", "loss_mse", "+", "args", ".", "hyper_parameters", "[", "1", "]", "*", "(", "1", "-", "loss_ssim", ")", "+", "args", ".", "hyper_parameters", "[", "2", "]", "*", "loss_adv", "+", "args", ".", "hyper_parameters", "[", "3", "]", "*", "loss_dnn", "\n", "Hlosses", ".", "update", "(", "loss_H", ".", "item", "(", ")", ",", "int", "(", "input", ".", "size", "(", ")", "[", "0", "]", ")", ")", "\n", "################DNNet#############", "\n", "inputs", "=", "torch", ".", "cat", "(", "[", "input", ",", "wm_img", ".", "detach", "(", ")", "]", ",", "dim", "=", "0", ")", "\n", "labels", "=", "torch", ".", "cat", "(", "[", "label", ",", "wm_label", "]", ",", "dim", "=", "0", ")", "\n", "dnn_outputs", "=", "Dnnet", "(", "inputs", ")", "\n", "\n", "loss_DNN", "=", "criterionN", "(", "dnn_outputs", ",", "labels", ")", "\n", "DNNlosses", ".", "update", "(", "loss_DNN", ".", "item", "(", ")", ",", "int", "(", "inputs", ".", "size", "(", ")", "[", "0", "]", ")", ")", "\n", "\n", "\n", "wm_cover_output", "=", "Dnnet", "(", "wm_input", ")", "\n", "_", ",", "wm_cover_predicted", "=", "wm_cover_output", ".", "max", "(", "1", ")", "\n", "wm_cover_correct", "+=", "wm_cover_predicted", ".", "eq", "(", "\n", "wm_cover_label", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "#wm_dnn_output = Dnnet(wm_img)", "\n", "# _, wm_predicted = wm_dnn_output.max(1)", "\n", "_", ",", "wm_predicted", "=", "dnn_outputs", "[", "args", ".", "batchsize", ":", "\n", "args", ".", "batchsize", "+", "args", ".", "wm_batchsize", "]", ".", "max", "(", "1", ")", "\n", "wm_correct", "+=", "wm_predicted", ".", "eq", "(", "wm_label", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "wm_total", "+=", "args", ".", "wm_batchsize", "\n", "\n", "_", ",", "real_predicted", "=", "dnn_outputs", "[", "0", ":", "args", ".", "batchsize", "]", ".", "max", "(", "1", ")", "\n", "real_correct", "+=", "real_predicted", ".", "eq", "(", "\n", "labels", "[", "0", ":", "args", ".", "batchsize", "]", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "real_total", "+=", "args", ".", "batchsize", "\n", "\n", "", "", "val_hloss", "=", "Hlosses", ".", "avg", "\n", "val_disloss", "=", "Dislosses", ".", "avg", "\n", "val_dnnloss", "=", "DNNlosses", ".", "avg", "\n", "real_acc", ".", "update", "(", "100.", "*", "real_correct", "/", "real_total", ")", "\n", "wm_acc", ".", "update", "(", "100.", "*", "wm_correct", "/", "wm_total", ")", "\n", "test_acc", "[", "0", "]", ".", "append", "(", "real_acc", ".", "avg", ")", "\n", "test_acc", "[", "1", "]", ".", "append", "(", "wm_acc", ".", "avg", ")", "\n", "print", "(", "'Real acc: %.3f  wm acc: %.3f wm cover acc: %.3f '", "%", "(", "\n", "100.", "*", "real_correct", "/", "real_total", ",", "100.", "*", "wm_correct", "/", "wm_total", ",", "100.", "*", "wm_cover_correct", "/", "wm_total", ")", ")", "\n", "\n", "resultImg", "=", "torch", ".", "cat", "(", "[", "wm_input", ",", "wm_img", ",", "secret_img", "]", ",", "0", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "resultImg", ",", "args", ".", "save_path", "+", "'images/Epoch_'", "+", "str", "(", "epoch", ")", "+", "'_img.png'", ",", "nrow", "=", "args", ".", "wm_batchsize", ",", "\n", "padding", "=", "1", ",", "normalize", "=", "True", ")", "\n", "test_loss", "[", "0", "]", ".", "append", "(", "val_hloss", ")", "\n", "test_loss", "[", "1", "]", ".", "append", "(", "val_disloss", ")", "\n", "\n", "save_loss_acc", "(", "epoch", ",", "test_loss", ",", "test_acc", ",", "False", ")", "\n", "# save", "\n", "real_acc", "=", "100.", "*", "real_correct", "/", "real_total", "\n", "wm_acc", "=", "100.", "*", "wm_correct", "/", "wm_total", "\n", "wm_input_acc", "=", "100.", "*", "wm_cover_correct", "/", "wm_total", "\n", "if", "real_acc", ">=", "best_real_acc", ":", "# and (wm_acc >= best_wm_acc):", "\n", "        ", "print", "(", "'Saving...'", ")", "\n", "\n", "Hstate", "=", "{", "\n", "'net'", ":", "Hidnet", ".", "module", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "Hidnet", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "}", "\n", "Dstate", "=", "{", "\n", "'net'", ":", "Disnet", ".", "module", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "Disnet", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "}", "\n", "Nstate", "=", "{", "\n", "'net'", ":", "Dnnet", ".", "module", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "Dnnet", ",", "\n", "'acc'", ":", "real_acc", ",", "\n", "'wm_acc'", ":", "wm_acc", ",", "\n", "# 'wm_labels':np_labels,", "\n", "'epoch'", ":", "epoch", ",", "\n", "}", "\n", "\n", "torch", ".", "save", "(", "Hstate", ",", "args", ".", "save_path", "+", "'checkpiont/Hidnet.pt'", ")", "\n", "torch", ".", "save", "(", "Dstate", ",", "args", ".", "save_path", "+", "'checkpiont/Disnet.pt'", ")", "\n", "torch", ".", "save", "(", "Nstate", ",", "args", ".", "save_path", "+", "'checkpiont/Dnnet.pt'", ")", "\n", "best_real_acc", "=", "real_acc", "\n", "", "if", "wm_acc", ">", "best_wm_acc", ":", "\n", "        ", "best_wm_acc", "=", "wm_acc", "\n", "\n", "", "if", "wm_input_acc", ">", "best_wm_input_acc", ":", "\n", "        ", "best_wm_input_acc", "=", "wm_input_acc", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.main.save_loss_acc": [[430, 455], ["matplotlib.subplots", "ax1.twinx", "ax1.plot", "ax1.plot", "ax1.twinx.plot", "ax1.twinx.plot", "ax1.set_xlabel", "ax1.set_ylabel", "ax1.twinx.set_ylabel", "ax1.set_ylim", "ax1.twinx.set_ylim", "ax1.legend", "ax1.twinx.legend", "matplotlib.close", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "matplotlib.savefig", "matplotlib.savefig", "str"], "function", ["None"], ["\n", "\n", "", "", "def", "save_loss_acc", "(", "epoch", ",", "loss", ",", "acc", ",", "train", ")", ":", "\n", "\n", "\n", "    ", "_", ",", "ax1", "=", "plt", ".", "subplots", "(", ")", "\n", "ax2", "=", "ax1", ".", "twinx", "(", ")", "\n", "\n", "ax1", ".", "plot", "(", "np", ".", "arange", "(", "epoch", "+", "1", ")", ",", "loss", "[", "0", "]", ",", "'-y'", ",", "label", "=", "'ste-model loss'", ")", "\n", "ax1", ".", "plot", "(", "np", ".", "arange", "(", "epoch", "+", "1", ")", ",", "loss", "[", "1", "]", ",", "'-r'", ",", "label", "=", "'discriminator loss'", ")", "\n", "ax2", ".", "plot", "(", "np", ".", "arange", "(", "epoch", "+", "1", ")", ",", "acc", "[", "0", "]", ",", "'-g'", ",", "label", "=", "'real_acc'", ")", "\n", "ax2", ".", "plot", "(", "np", ".", "arange", "(", "epoch", "+", "1", ")", ",", "acc", "[", "1", "]", ",", "'-b'", ",", "label", "=", "'wm_acc'", ")", "\n", "\n", "ax1", ".", "set_xlabel", "(", "'Epoch('", "+", "\",\"", ".", "join", "(", "str", "(", "l", ")", "for", "l", "in", "args", ".", "hyper_parameters", ")", "+", "')'", ")", "\n", "ax1", ".", "set_ylabel", "(", "'Loss'", ")", "\n", "ax2", ".", "set_ylabel", "(", "'Accuracy (%)'", ")", "\n", "\n", "ax1", ".", "set_ylim", "(", "0", ",", "5", ")", "\n", "ax2", ".", "set_ylim", "(", "0", ",", "100", ")", "\n", "\n", "ax1", ".", "legend", "(", "loc", "=", "1", ")", "\n", "ax2", ".", "legend", "(", "loc", "=", "2", ")", "\n", "if", "train", ":", "\n", "        ", "plt", ".", "savefig", "(", "args", ".", "save_path", "+", "'results_train_'", "+", "GPU", "+", "'.png'", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "savefig", "(", "args", ".", "save_path", "+", "'results_test_'", "+", "GPU", "+", "'.png'", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.HidingUNet.UnetGenerator_mnist.__init__": [[14, 33], ["torch.Module.__init__", "HidingUNet.UnetPre", "HidingUNet.UnetPre", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_c", "=", "1", ",", "output_nc", "=", "1", ",", "num_downs", "=", "7", ",", "ngf", "=", "64", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "use_dropout", "=", "False", ",", "output_function", "=", "nn", ".", "Tanh", ")", ":", "\n", "        ", "super", "(", "UnetGenerator_mnist", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# construct unet structure", "\n", "self", ".", "unet_block_real_img", "=", "UnetPre", "(", "input_c", "=", "1", ")", "\n", "self", ".", "unet_block_sec_img", "=", "UnetPre", "(", "input_c", "=", "1", ")", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "6", ",", "ngf", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", ",", "input_c", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.HidingUNet.UnetGenerator_mnist.forward": [[36, 42], ["HidingUNet.UnetGenerator_mnist.unet_block_real_img", "HidingUNet.UnetGenerator_mnist.unet_block_sec_img", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "HidingUNet.UnetGenerator_mnist.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "sec_img", ")", ":", "\n", "        ", "real_img_feature", "=", "self", ".", "unet_block_real_img", "(", "input", ")", "\n", "sec_img_feature", "=", "self", ".", "unet_block_sec_img", "(", "sec_img", ")", "\n", "contain_img", "=", "torch", ".", "cat", "(", "[", "real_img_feature", ",", "sec_img_feature", "]", ",", "dim", "=", "1", ")", "\n", "output", "=", "self", ".", "model", "(", "contain_img", ")", "\n", "return", "output", "\n", "", "", "class", "UnetGenerator", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.HidingUNet.UnetGenerator.__init__": [[43, 63], ["torch.Module.__init__", "HidingUNet.UnetPre", "HidingUNet.UnetPre", "HidingUNet.UnetSkipConnectionBlock", "HidingUNet.UnetSkipConnectionBlock", "HidingUNet.UnetSkipConnectionBlock", "HidingUNet.UnetSkipConnectionBlock", "HidingUNet.UnetSkipConnectionBlock"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", "=", "6", ",", "output_nc", "=", "3", ",", "num_downs", "=", "6", ",", "ngf", "=", "64", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "use_dropout", "=", "False", ",", "output_function", "=", "nn", ".", "Tanh", ")", ":", "\n", "        ", "super", "(", "UnetGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# construct unet structure", "\n", "self", ".", "unet_block_real_img", "=", "UnetPre", "(", "input_c", "=", "3", ")", "\n", "self", ".", "unet_block_sec_img", "=", "UnetPre", "(", "input_c", "=", "3", ")", "\n", "\n", "unet_block", "=", "UnetSkipConnectionBlock", "(", "ngf", "*", "8", ",", "ngf", "*", "8", ",", "input_nc", "=", "None", ",", "submodule", "=", "None", ",", "norm_layer", "=", "norm_layer", ",", "innermost", "=", "True", ")", "\n", "#for i in range(num_downs - 5):", "\n", "#unet_block = UnetSkipConnectionBlock(ngf * 8, ngf * 8, input_nc=None, submodule=unet_block,", "\n", "#norm_layer=norm_layer, use_dropout=use_dropout)", "\n", "unet_block", "=", "UnetSkipConnectionBlock", "(", "ngf", "*", "4", ",", "ngf", "*", "8", ",", "input_nc", "=", "None", ",", "submodule", "=", "unet_block", ",", "\n", "norm_layer", "=", "norm_layer", ")", "\n", "unet_block", "=", "UnetSkipConnectionBlock", "(", "ngf", "*", "2", ",", "ngf", "*", "4", ",", "input_nc", "=", "None", ",", "submodule", "=", "unet_block", ",", "\n", "norm_layer", "=", "norm_layer", ")", "\n", "unet_block", "=", "UnetSkipConnectionBlock", "(", "ngf", ",", "ngf", "*", "2", ",", "input_nc", "=", "None", ",", "submodule", "=", "unet_block", ",", "norm_layer", "=", "norm_layer", ")", "\n", "unet_block", "=", "UnetSkipConnectionBlock", "(", "output_nc", ",", "ngf", ",", "input_nc", "=", "input_nc", ",", "submodule", "=", "unet_block", ",", "outermost", "=", "True", ",", "\n", "norm_layer", "=", "norm_layer", ",", "output_function", "=", "output_function", ")", "\n", "\n", "self", ".", "model", "=", "unet_block", "\n", "", "def", "forward", "(", "self", ",", "input", ",", "sec_img", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.HidingUNet.UnetGenerator.forward": [[63, 70], ["HidingUNet.UnetGenerator.unet_block_real_img", "HidingUNet.UnetGenerator.unet_block_sec_img", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "HidingUNet.UnetGenerator.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "sec_img", ")", ":", "\n", "\n", "        ", "real_img_feature", "=", "self", ".", "unet_block_real_img", "(", "input", ")", "\n", "sec_img_feature", "=", "self", ".", "unet_block_sec_img", "(", "sec_img", ")", "\n", "contain_img", "=", "torch", ".", "cat", "(", "[", "real_img_feature", ",", "sec_img_feature", "]", ",", "dim", "=", "1", ")", "\n", "output", "=", "self", ".", "model", "(", "contain_img", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.HidingUNet.UnetPre.__init__": [[74, 97], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_c", ")", ":", "\n", "        ", "super", "(", "UnetPre", ",", "self", ")", ".", "__init__", "(", ")", "\n", "'''\n        self.pre_prepare1 = nn.Sequential(\n            nn.Linear(1600, 1400),\n            nn.BatchNorm1d(1400),\n            nn.LeakyReLU(negative_slope=0.2, inplace=True),\n            nn.Linear(1400, 1200),\n            nn.BatchNorm1d(1200),\n            nn.LeakyReLU(negative_slope=0.2, inplace=True),\n            nn.Linear(1200, 1 * 32 * 32),\n            nn.BatchNorm1d(1024),\n            nn.LeakyReLU(negative_slope=0.2, inplace=True),\n        )\n        '''", "\n", "\n", "self", ".", "pre", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "input_c", ",", "3", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", ",", "eps", "=", "1e-05", ",", "momentum", "=", "0.1", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "3", ",", "3", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "3", ",", "eps", "=", "1e-05", ",", "momentum", "=", "0.1", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ",", "inplace", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.HidingUNet.UnetPre.forward": [[99, 102], ["HidingUNet.UnetPre.pre"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "pre", "(", "input", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.HidingUNet.UnetSkipConnectionBlock.__init__": [[105, 152], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "norm_layer", "torch.ReLU", "torch.ReLU", "norm_layer", "torch.Sequential", "torch.Sequential", "type", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Sigmoid", "torch.Sigmoid", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "outer_nc", ",", "inner_nc", ",", "input_nc", "=", "None", ",", "submodule", "=", "None", ",", "outermost", "=", "False", ",", "innermost", "=", "False", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "use_dropout", "=", "False", ",", "output_function", "=", "nn", ".", "Sigmoid", ")", ":", "\n", "        ", "super", "(", "UnetSkipConnectionBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "outermost", "=", "outermost", "\n", "if", "type", "(", "norm_layer", ")", "==", "functools", ".", "partial", ":", "\n", "            ", "use_bias", "=", "norm_layer", ".", "func", "==", "nn", ".", "InstanceNorm2d", "\n", "", "else", ":", "\n", "            ", "use_bias", "=", "norm_layer", "==", "nn", ".", "InstanceNorm2d", "\n", "", "if", "input_nc", "is", "None", ":", "\n", "            ", "input_nc", "=", "outer_nc", "\n", "", "downconv", "=", "nn", ".", "Conv2d", "(", "input_nc", ",", "inner_nc", ",", "kernel_size", "=", "4", ",", "\n", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "use_bias", ")", "\n", "downrelu", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "downnorm", "=", "norm_layer", "(", "inner_nc", ")", "\n", "uprelu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "upnorm", "=", "norm_layer", "(", "outer_nc", ")", "\n", "\n", "if", "outermost", ":", "\n", "            ", "upconv", "=", "nn", ".", "ConvTranspose2d", "(", "inner_nc", "*", "2", ",", "outer_nc", ",", "\n", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "down", "=", "[", "downconv", "]", "\n", "if", "output_function", "==", "nn", ".", "Tanh", ":", "\n", "                ", "up", "=", "[", "uprelu", ",", "upconv", ",", "nn", ".", "Tanh", "(", ")", "]", "\n", "", "else", ":", "\n", "                ", "up", "=", "[", "uprelu", ",", "upconv", ",", "nn", ".", "Sigmoid", "(", ")", "]", "\n", "", "model", "=", "down", "+", "[", "submodule", "]", "+", "up", "\n", "", "elif", "innermost", ":", "\n", "            ", "upconv", "=", "nn", ".", "ConvTranspose2d", "(", "inner_nc", ",", "outer_nc", ",", "\n", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "bias", "=", "use_bias", ")", "\n", "down", "=", "[", "downrelu", ",", "downconv", "]", "\n", "up", "=", "[", "uprelu", ",", "upconv", ",", "upnorm", "]", "\n", "model", "=", "down", "+", "up", "\n", "", "else", ":", "\n", "            ", "upconv", "=", "nn", ".", "ConvTranspose2d", "(", "inner_nc", "*", "2", ",", "outer_nc", ",", "\n", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "bias", "=", "use_bias", ")", "\n", "down", "=", "[", "downrelu", ",", "downconv", ",", "downnorm", "]", "\n", "up", "=", "[", "uprelu", ",", "upconv", ",", "upnorm", "]", "\n", "\n", "if", "use_dropout", ":", "\n", "                ", "model", "=", "down", "+", "[", "submodule", "]", "+", "up", "+", "[", "nn", ".", "Dropout", "(", "0.5", ")", "]", "\n", "", "else", ":", "\n", "                ", "model", "=", "down", "+", "[", "submodule", "]", "+", "up", "\n", "\n", "", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.HidingUNet.UnetSkipConnectionBlock.forward": [[153, 158], ["HidingUNet.UnetSkipConnectionBlock.model", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "HidingUNet.UnetSkipConnectionBlock.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "outermost", ":", "\n", "            ", "return", "self", ".", "model", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "cat", "(", "[", "x", ",", "self", ".", "model", "(", "x", ")", "]", ",", "1", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.Discriminator.DiscriminatorNet.__init__": [[7, 35], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "output_function"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nc", "=", "3", ",", "nhf", "=", "8", ",", "output_function", "=", "nn", ".", "Sigmoid", ")", ":", "\n", "        ", "super", "(", "DiscriminatorNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#self.key_pre = RevealPreKey()", "\n", "# input is (3+1) x 256 x 256", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "nc", ",", "nhf", ",", "4", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "nhf", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "nhf", ",", "nhf", "*", "2", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "nhf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "nhf", "*", "2", ",", "nhf", "*", "4", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "nhf", "*", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "nhf", "*", "4", ",", "nhf", "*", "2", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "nhf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "nhf", "*", "2", ",", "nhf", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "nhf", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "nhf", ",", "nc", ",", "4", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "nc", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", "#output_function()", "\n", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "192", ",", "1", ")", ",", "\n", "output_function", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.Discriminator.DiscriminatorNet.forward": [[40, 50], ["Discriminator.DiscriminatorNet.main", "Discriminator.DiscriminatorNet.view", "Discriminator.DiscriminatorNet.linear"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "#pkey = pkey.view(-1, 1, 32, 32)", "\n", "#pkey_feature = self.key_pre(pkey)", "\n", "\n", "#input_key = torch.cat([input, pkey_feature], dim=1)", "\n", "        ", "ste_feature", "=", "self", ".", "main", "(", "input", ")", "\n", "out", "=", "ste_feature", ".", "view", "(", "ste_feature", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "", "", "class", "DiscriminatorNet_mnist", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.Discriminator.DiscriminatorNet_mnist.__init__": [[51, 61], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "#3072):", "\n", "        ", "super", "(", "DiscriminatorNet_mnist", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "28", "*", "28", ",", "64", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "64", ",", "32", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "32", ",", "1", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.Discriminator.DiscriminatorNet_mnist.forward": [[63, 68], ["img.view", "Discriminator.DiscriminatorNet_mnist.model", "img.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ")", ":", "\n", "        ", "img_flat", "=", "img", ".", "view", "(", "img", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "validity", "=", "self", ".", "model", "(", "img_flat", ")", "\n", "\n", "return", "validity", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.vgg.VGG.__init__": [[15, 24], ["torch.Module.__init__", "vgg.VGG._make_layers", "torch.Sequential", "torch.Sequential", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.mobilenetv2.MobileNetV2._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "10", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.vgg.VGG.forward": [[25, 30], ["vgg.VGG.features", "vgg.VGG.view", "vgg.VGG.classifier", "vgg.VGG.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.vgg.VGG._make_layers": [[31, 44], ["torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ",", "track_running_stats", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.mobilenetv2.Block.__init__": [[9, 26], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "expansion", ",", "stride", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "planes", "=", "expansion", "*", "in_planes", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "planes", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "==", "1", "and", "in_planes", "!=", "out_planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.mobilenetv2.Block.forward": [[28, 34], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "mobilenetv2.Block.bn3", "mobilenetv2.Block.bn1", "mobilenetv2.Block.bn2", "mobilenetv2.Block.conv3", "mobilenetv2.Block.conv1", "mobilenetv2.Block.conv2", "mobilenetv2.Block.shortcut"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "=", "out", "+", "self", ".", "shortcut", "(", "x", ")", "if", "self", ".", "stride", "==", "1", "else", "out", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.mobilenetv2.MobileNetV2.__init__": [[46, 55], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "mobilenetv2.MobileNetV2._make_layers", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.mobilenetv2.MobileNetV2._make_layers"], ["def", "__init__", "(", "self", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# NOTE: change conv1 stride 2 -> 1 for CIFAR10", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "layers", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "32", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "320", ",", "1280", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "1280", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "1280", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.mobilenetv2.MobileNetV2._make_layers": [[56, 64], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "mobilenetv2.Block"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "expansion", ",", "out_planes", ",", "num_blocks", ",", "stride", "in", "self", ".", "cfg", ":", "\n", "            ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "for", "stride", "in", "strides", ":", "\n", "                ", "layers", ".", "append", "(", "Block", "(", "in_planes", ",", "out_planes", ",", "expansion", ",", "stride", ")", ")", "\n", "in_planes", "=", "out_planes", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.mobilenetv2.MobileNetV2.forward": [[65, 74], ["torch.relu", "torch.relu", "torch.relu", "mobilenetv2.MobileNetV2.layers", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "mobilenetv2.MobileNetV2.view", "mobilenetv2.MobileNetV2.linear", "mobilenetv2.MobileNetV2.bn1", "mobilenetv2.MobileNetV2.bn2", "mobilenetv2.MobileNetV2.size", "mobilenetv2.MobileNetV2.conv1", "mobilenetv2.MobileNetV2.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layers", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "# NOTE: change pooling kernel_size 7 -> 4 for CIFAR10", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.mobilenetv2.test": [[76, 81], ["mobilenetv2.MobileNetV2", "torch.randn", "torch.randn", "torch.randn", "MobileNetV2.", "print", "net.size"], "function", ["None"], ["", "", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "MobileNetV2", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "2", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.dpn.Bottleneck.__init__": [[8, 25], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "last_planes", ",", "in_planes", ",", "out_planes", ",", "dense_depth", ",", "stride", ",", "first_layer", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "out_planes", "=", "out_planes", "\n", "self", ".", "dense_depth", "=", "dense_depth", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "last_planes", ",", "in_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "in_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "32", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", "+", "dense_depth", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", "+", "dense_depth", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "first_layer", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "last_planes", ",", "out_planes", "+", "dense_depth", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", "+", "dense_depth", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.dpn.Bottleneck.forward": [[27, 36], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "dpn.Bottleneck.bn3", "dpn.Bottleneck.shortcut", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "dpn.Bottleneck.bn1", "dpn.Bottleneck.bn2", "dpn.Bottleneck.conv3", "dpn.Bottleneck.conv1", "dpn.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "x", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "d", "=", "self", ".", "out_planes", "\n", "out", "=", "torch", ".", "cat", "(", "[", "x", "[", ":", ",", ":", "d", ",", ":", ",", ":", "]", "+", "out", "[", ":", ",", ":", "d", ",", ":", ",", ":", "]", ",", "x", "[", ":", ",", "d", ":", ",", ":", ",", ":", "]", ",", "out", "[", ":", ",", "d", ":", ",", ":", ",", ":", "]", "]", ",", "1", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.dpn.DPN.__init__": [[39, 52], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "dpn.DPN._make_layer", "dpn.DPN._make_layer", "dpn.DPN._make_layer", "dpn.DPN._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "DPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "in_planes", ",", "out_planes", "=", "cfg", "[", "'in_planes'", "]", ",", "cfg", "[", "'out_planes'", "]", "\n", "num_blocks", ",", "dense_depth", "=", "cfg", "[", "'num_blocks'", "]", ",", "cfg", "[", "'dense_depth'", "]", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "last_planes", "=", "64", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "in_planes", "[", "0", "]", ",", "out_planes", "[", "0", "]", ",", "num_blocks", "[", "0", "]", ",", "dense_depth", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "in_planes", "[", "1", "]", ",", "out_planes", "[", "1", "]", ",", "num_blocks", "[", "1", "]", ",", "dense_depth", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "in_planes", "[", "2", "]", ",", "out_planes", "[", "2", "]", ",", "num_blocks", "[", "2", "]", ",", "dense_depth", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "in_planes", "[", "3", "]", ",", "out_planes", "[", "3", "]", ",", "num_blocks", "[", "3", "]", ",", "dense_depth", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "out_planes", "[", "3", "]", "+", "(", "num_blocks", "[", "3", "]", "+", "1", ")", "*", "dense_depth", "[", "3", "]", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.dpn.DPN._make_layer": [[53, 60], ["enumerate", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "dpn.Bottleneck"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "in_planes", ",", "out_planes", ",", "num_blocks", ",", "dense_depth", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "i", ",", "stride", "in", "enumerate", "(", "strides", ")", ":", "\n", "            ", "layers", ".", "append", "(", "Bottleneck", "(", "self", ".", "last_planes", ",", "in_planes", ",", "out_planes", ",", "dense_depth", ",", "stride", ",", "i", "==", "0", ")", ")", "\n", "self", ".", "last_planes", "=", "out_planes", "+", "(", "i", "+", "2", ")", "*", "dense_depth", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.dpn.DPN.forward": [[61, 71], ["torch.relu", "torch.relu", "torch.relu", "dpn.DPN.layer1", "dpn.DPN.layer2", "dpn.DPN.layer3", "dpn.DPN.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "dpn.DPN.view", "dpn.DPN.linear", "dpn.DPN.bn1", "dpn.DPN.size", "dpn.DPN.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.dpn.DPN26": [[73, 81], ["dpn.DPN"], "function", ["None"], ["", "", "def", "DPN26", "(", ")", ":", "\n", "    ", "cfg", "=", "{", "\n", "'in_planes'", ":", "(", "96", ",", "192", ",", "384", ",", "768", ")", ",", "\n", "'out_planes'", ":", "(", "256", ",", "512", ",", "1024", ",", "2048", ")", ",", "\n", "'num_blocks'", ":", "(", "2", ",", "2", ",", "2", ",", "2", ")", ",", "\n", "'dense_depth'", ":", "(", "16", ",", "32", ",", "24", ",", "128", ")", "\n", "}", "\n", "return", "DPN", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.dpn.DPN92": [[82, 90], ["dpn.DPN"], "function", ["None"], ["", "def", "DPN92", "(", ")", ":", "\n", "    ", "cfg", "=", "{", "\n", "'in_planes'", ":", "(", "96", ",", "192", ",", "384", ",", "768", ")", ",", "\n", "'out_planes'", ":", "(", "256", ",", "512", ",", "1024", ",", "2048", ")", ",", "\n", "'num_blocks'", ":", "(", "3", ",", "4", ",", "20", ",", "3", ")", ",", "\n", "'dense_depth'", ":", "(", "16", ",", "32", ",", "24", ",", "128", ")", "\n", "}", "\n", "return", "DPN", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.dpn.test": [[92, 97], ["dpn.DPN92", "torch.randn", "torch.randn", "torch.randn", "DPN92.", "print"], "function", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.dpn.DPN92"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "DPN92", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.resnet.BasicBlock.__init__": [[10, 22], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.resnet.BasicBlock.forward": [[24, 30], ["torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn2", "resnet.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn1", "resnet.BasicBlock.conv2", "resnet.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.resnet.Bottleneck.__init__": [[35, 49], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ",", "affine", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.resnet.Bottleneck.forward": [[51, 58], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn3", "resnet.Bottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn1", "resnet.Bottleneck.bn2", "resnet.Bottleneck.conv3", "resnet.Bottleneck.conv1", "resnet.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.resnet.ResNet.__init__": [[61, 72], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.resnet.ResNet._make_layer": [[73, 80], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.resnet.ResNet.forward": [[81, 91], ["torch.relu", "torch.relu", "torch.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet.ResNet.view", "resnet.ResNet.linear", "resnet.ResNet.bn1", "resnet.ResNet.size", "resnet.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.resnet.ResNet18": [[93, 95], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet18", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.resnet.ResNet34": [[96, 98], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.resnet.ResNet101": [[99, 101], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.LeNet.LeNet1.__init__": [[8, 13], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "LeNet1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "4", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "4", ",", "12", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "588", ",", "10", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "index", "=", "-", "1", ",", "metric", "=", "0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.LeNet.LeNet1.forward": [[13, 23], ["torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "LeNet.LeNet1.view", "LeNet.LeNet1.fc1", "torch.log_softmax", "torch.log_softmax", "LeNet.LeNet1.conv1", "LeNet.LeNet1.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "index", "=", "-", "1", ",", "metric", "=", "0", ")", ":", "\n", "        ", "layer", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "layer", "=", "F", ".", "max_pool2d", "(", "layer", ",", "2", ")", "\n", "layer", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "layer", ")", ")", "\n", "layer", "=", "F", ".", "max_pool2d", "(", "layer", ",", "2", ")", "\n", "\n", "layer", "=", "layer", ".", "view", "(", "-", "1", ",", "588", ")", "\n", "layer", "=", "self", ".", "fc1", "(", "layer", ")", "\n", "output", "=", "F", ".", "log_softmax", "(", "layer", ",", "dim", "=", "1", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.LeNet.LeNet3.__init__": [[25, 32], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "LeNet3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "6", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "784", ",", "84", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "84", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.LeNet.LeNet3.forward": [[33, 45], ["torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d.view", "torch.relu", "torch.relu", "LeNet.LeNet3.fc2", "torch.log_softmax", "torch.log_softmax", "LeNet.LeNet3.conv1", "LeNet.LeNet3.conv2", "LeNet.LeNet3.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "layer0", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "layer1", "=", "F", ".", "max_pool2d", "(", "layer0", ",", "2", ")", "\n", "layer2", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "layer1", ")", ")", "\n", "layer3", "=", "F", ".", "max_pool2d", "(", "layer2", ",", "2", ")", "\n", "\n", "layer_", "=", "layer3", ".", "view", "(", "-", "1", ",", "784", ")", "\n", "layer4", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "layer_", ")", ")", "\n", "layer5", "=", "self", ".", "fc2", "(", "layer4", ")", "\n", "output", "=", "F", ".", "log_softmax", "(", "layer5", ",", "dim", "=", "1", ")", "\n", "return", "output", "\n", "", "", "class", "LeNet5", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.LeNet.LeNet5.__init__": [[46, 53], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "LeNet5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "6", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "784", ",", "120", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "84", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.LeNet.LeNet5.forward": [[54, 68], ["torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "LeNet.LeNet5.fc3", "torch.log_softmax", "torch.log_softmax", "LeNet.LeNet5.conv1", "LeNet.LeNet5.conv2", "LeNet.LeNet5.fc1", "LeNet.LeNet5.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "layer0", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "layer1", "=", "F", ".", "max_pool2d", "(", "layer0", ",", "2", ")", "\n", "layer2", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "layer1", ")", ")", "\n", "layer3", "=", "F", ".", "max_pool2d", "(", "layer2", ",", "2", ")", "\n", "\n", "layer_", "=", "layer3", ".", "view", "(", "-", "1", ",", "784", ")", "\n", "layer4", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "layer_", ")", ")", "\n", "layer5", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "layer4", ")", ")", "\n", "layer6", "=", "self", ".", "fc3", "(", "layer5", ")", "\n", "output", "=", "F", ".", "log_softmax", "(", "layer6", ",", "dim", "=", "1", ")", "\n", "\n", "return", "output", "", "", "", ""]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__.SSIM.__init__": [[51, 57], ["super().__init__", "__init__.create_window"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__.create_window"], ["    ", "def", "__init__", "(", "self", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "SSIM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "size_average", "=", "size_average", "\n", "self", ".", "channel", "=", "1", "\n", "self", ".", "window", "=", "create_window", "(", "window_size", ",", "self", ".", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__.SSIM.forward": [[58, 74], ["img1.size", "__init__._ssim", "__init__.create_window", "window.cuda.cuda.type_as", "__init__.SSIM.window.data.type", "img1.data.type", "window.cuda.cuda.cuda", "img1.get_device"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__._ssim", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__.create_window"], ["", "def", "forward", "(", "self", ",", "img1", ",", "img2", ")", ":", "\n", "        ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "size", "(", ")", "\n", "\n", "if", "channel", "==", "self", ".", "channel", "and", "self", ".", "window", ".", "data", ".", "type", "(", ")", "==", "img1", ".", "data", ".", "type", "(", ")", ":", "\n", "            ", "window", "=", "self", ".", "window", "\n", "", "else", ":", "\n", "            ", "window", "=", "create_window", "(", "self", ".", "window_size", ",", "channel", ")", "\n", "\n", "if", "img1", ".", "is_cuda", ":", "\n", "                ", "window", "=", "window", ".", "cuda", "(", "img1", ".", "get_device", "(", ")", ")", "\n", "", "window", "=", "window", ".", "type_as", "(", "img1", ")", "\n", "\n", "self", ".", "window", "=", "window", "\n", "self", ".", "channel", "=", "channel", "\n", "\n", "", "return", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "self", ".", "window_size", ",", "channel", ",", "self", ".", "size_average", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__.gaussian": [[15, 18], ["torch.Tensor", "torch.Tensor", "torch.Tensor.sum", "math.exp", "range", "float"], "function", ["None"], ["def", "gaussian", "(", "window_size", ",", "sigma", ")", ":", "\n", "    ", "gauss", "=", "torch", ".", "Tensor", "(", "[", "exp", "(", "-", "(", "x", "-", "window_size", "//", "2", ")", "**", "2", "/", "float", "(", "2", "*", "sigma", "**", "2", ")", ")", "for", "x", "in", "range", "(", "window_size", ")", "]", ")", "\n", "return", "gauss", "/", "gauss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__.create_window": [[20, 25], ["gaussian().unsqueeze", "gaussian().unsqueeze.mm().float().unsqueeze().unsqueeze", "torch.autograd.Variable", "_1D_window.mm().float().unsqueeze().unsqueeze.expand().contiguous", "__init__.gaussian", "gaussian().unsqueeze.mm().float().unsqueeze", "_1D_window.mm().float().unsqueeze().unsqueeze.expand", "gaussian().unsqueeze.mm().float", "gaussian().unsqueeze.mm", "gaussian().unsqueeze.t"], "function", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__.gaussian"], ["", "def", "create_window", "(", "window_size", ",", "channel", ")", ":", "\n", "    ", "_1D_window", "=", "gaussian", "(", "window_size", ",", "1.5", ")", ".", "unsqueeze", "(", "1", ")", "\n", "_2D_window", "=", "_1D_window", ".", "mm", "(", "_1D_window", ".", "t", "(", ")", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "window", "=", "Variable", "(", "_2D_window", ".", "expand", "(", "channel", ",", "1", ",", "window_size", ",", "window_size", ")", ".", "contiguous", "(", ")", ")", "\n", "return", "window", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__._ssim": [[27, 48], ["torch.conv2d", "torch.conv2d", "F.conv2d.pow", "F.conv2d.pow", "torch.conv2d", "torch.conv2d", "torch.conv2d", "ssim_map.mean", "ssim_map.mean().mean().mean", "ssim_map.mean().mean", "ssim_map.mean"], "function", ["None"], ["", "def", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "mu1", "=", "F", ".", "conv2d", "(", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "mu2", "=", "F", ".", "conv2d", "(", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "\n", "\n", "mu1_sq", "=", "mu1", ".", "pow", "(", "2", ")", "\n", "mu2_sq", "=", "mu2", ".", "pow", "(", "2", ")", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "\n", "sigma1_sq", "=", "F", ".", "conv2d", "(", "img1", "*", "img1", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_sq", "\n", "sigma2_sq", "=", "F", ".", "conv2d", "(", "img2", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu2_sq", "\n", "sigma12", "=", "F", ".", "conv2d", "(", "img1", "*", "img2", ",", "window", ",", "padding", "=", "window_size", "//", "2", ",", "groups", "=", "channel", ")", "-", "mu1_mu2", "\n", "\n", "C1", "=", "0.01", "**", "2", "\n", "C2", "=", "0.03", "**", "2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "\n", "if", "size_average", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "ssim_map", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__.ssim": [[76, 85], ["img1.size", "__init__.create_window", "window.cuda.type_as", "__init__._ssim", "window.cuda.cuda", "img1.get_device"], "function", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__.create_window", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.__init__._ssim"], ["", "", "def", "ssim", "(", "img1", ",", "img2", ",", "window_size", "=", "11", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "(", "_", ",", "channel", ",", "_", ",", "_", ")", "=", "img1", ".", "size", "(", ")", "\n", "window", "=", "create_window", "(", "window_size", ",", "channel", ")", "\n", "\n", "if", "img1", ".", "is_cuda", ":", "\n", "        ", "window", "=", "window", ".", "cuda", "(", "img1", ".", "get_device", "(", ")", ")", "\n", "", "window", "=", "window", ".", "type_as", "(", "img1", ")", "\n", "\n", "return", "_ssim", "(", "img1", ",", "img2", ",", "window", ",", "window_size", ",", "channel", ",", "size_average", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.googlenet.Inception.__init__": [[8, 46], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "n1x1", ",", "n3x3red", ",", "n3x3", ",", "n5x5red", ",", "n5x5", ",", "pool_planes", ")", ":", "\n", "        ", "super", "(", "Inception", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# 1x1 conv branch", "\n", "self", ".", "b1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "n1x1", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n1x1", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "# 1x1 conv -> 3x3 conv branch", "\n", "self", ".", "b2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "n3x3red", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n3x3red", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n3x3red", ",", "n3x3", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n3x3", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "# 1x1 conv -> 5x5 conv branch", "\n", "self", ".", "b3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "n5x5red", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n5x5red", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n5x5red", ",", "n5x5", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n5x5", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n5x5", ",", "n5x5", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "n5x5", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "# 3x3 pool -> 1x1 conv branch", "\n", "self", ".", "b4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "pool_planes", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "pool_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.googlenet.Inception.forward": [[48, 54], ["googlenet.Inception.b1", "googlenet.Inception.b2", "googlenet.Inception.b3", "googlenet.Inception.b4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y1", "=", "self", ".", "b1", "(", "x", ")", "\n", "y2", "=", "self", ".", "b2", "(", "x", ")", "\n", "y3", "=", "self", ".", "b3", "(", "x", ")", "\n", "y4", "=", "self", ".", "b4", "(", "x", ")", "\n", "return", "torch", ".", "cat", "(", "[", "y1", ",", "y2", ",", "y3", ",", "y4", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.googlenet.GoogLeNet.__init__": [[57, 81], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "googlenet.Inception", "googlenet.Inception", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "googlenet.Inception", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "GoogLeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pre_layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "192", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "192", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "a3", "=", "Inception", "(", "192", ",", "64", ",", "96", ",", "128", ",", "16", ",", "32", ",", "32", ")", "\n", "self", ".", "b3", "=", "Inception", "(", "256", ",", "128", ",", "128", ",", "192", ",", "32", ",", "96", ",", "64", ")", "\n", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "a4", "=", "Inception", "(", "480", ",", "192", ",", "96", ",", "208", ",", "16", ",", "48", ",", "64", ")", "\n", "self", ".", "b4", "=", "Inception", "(", "512", ",", "160", ",", "112", ",", "224", ",", "24", ",", "64", ",", "64", ")", "\n", "self", ".", "c4", "=", "Inception", "(", "512", ",", "128", ",", "128", ",", "256", ",", "24", ",", "64", ",", "64", ")", "\n", "self", ".", "d4", "=", "Inception", "(", "512", ",", "112", ",", "144", ",", "288", ",", "32", ",", "64", ",", "64", ")", "\n", "self", ".", "e4", "=", "Inception", "(", "528", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", "\n", "\n", "self", ".", "a5", "=", "Inception", "(", "832", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", "\n", "self", ".", "b5", "=", "Inception", "(", "832", ",", "384", ",", "192", ",", "384", ",", "48", ",", "128", ",", "128", ")", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ",", "stride", "=", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "1024", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.googlenet.GoogLeNet.forward": [[82, 99], ["googlenet.GoogLeNet.pre_layers", "googlenet.GoogLeNet.a3", "googlenet.GoogLeNet.b3", "googlenet.GoogLeNet.maxpool", "googlenet.GoogLeNet.a4", "googlenet.GoogLeNet.b4", "googlenet.GoogLeNet.c4", "googlenet.GoogLeNet.d4", "googlenet.GoogLeNet.e4", "googlenet.GoogLeNet.maxpool", "googlenet.GoogLeNet.a5", "googlenet.GoogLeNet.b5", "googlenet.GoogLeNet.avgpool", "googlenet.GoogLeNet.view", "googlenet.GoogLeNet.linear", "googlenet.GoogLeNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "pre_layers", "(", "x", ")", "\n", "out", "=", "self", ".", "a3", "(", "out", ")", "\n", "out", "=", "self", ".", "b3", "(", "out", ")", "\n", "out", "=", "self", ".", "maxpool", "(", "out", ")", "\n", "out", "=", "self", ".", "a4", "(", "out", ")", "\n", "out", "=", "self", ".", "b4", "(", "out", ")", "\n", "out", "=", "self", ".", "c4", "(", "out", ")", "\n", "out", "=", "self", ".", "d4", "(", "out", ")", "\n", "out", "=", "self", ".", "e4", "(", "out", ")", "\n", "out", "=", "self", ".", "maxpool", "(", "out", ")", "\n", "out", "=", "self", ".", "a5", "(", "out", ")", "\n", "out", "=", "self", ".", "b5", "(", "out", ")", "\n", "out", "=", "self", ".", "avgpool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.googlenet.test": [[101, 106], ["googlenet.GoogLeNet", "torch.randn", "torch.randn", "torch.randn", "GoogLeNet.", "print", "net.size"], "function", ["None"], ["", "", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "GoogLeNet", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActBlock.__init__": [[10, 20], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActBlock.forward": [[22, 29], ["torch.relu", "torch.relu", "torch.relu", "preact_resnet.PreActBlock.conv1", "preact_resnet.PreActBlock.conv2", "preact_resnet.PreActBlock.bn1", "hasattr", "preact_resnet.PreActBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "preact_resnet.PreActBlock.bn2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "if", "hasattr", "(", "self", ",", "'shortcut'", ")", "else", "x", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActBottleneck.__init__": [[34, 46], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActBottleneck.forward": [[48, 56], ["torch.relu", "torch.relu", "torch.relu", "preact_resnet.PreActBottleneck.conv1", "preact_resnet.PreActBottleneck.conv2", "preact_resnet.PreActBottleneck.conv3", "preact_resnet.PreActBottleneck.bn1", "hasattr", "preact_resnet.PreActBottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "preact_resnet.PreActBottleneck.bn2", "preact_resnet.PreActBottleneck.bn3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "if", "hasattr", "(", "self", ",", "'shortcut'", ")", "else", "x", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "conv3", "(", "F", ".", "relu", "(", "self", ".", "bn3", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__": [[59, 69], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "preact_resnet.PreActResNet._make_layer", "preact_resnet.PreActResNet._make_layer", "preact_resnet.PreActResNet._make_layer", "preact_resnet.PreActResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.__init__", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer", "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "PreActResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet._make_layer": [[70, 77], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet.forward": [[78, 88], ["preact_resnet.PreActResNet.conv1", "preact_resnet.PreActResNet.layer1", "preact_resnet.PreActResNet.layer2", "preact_resnet.PreActResNet.layer3", "preact_resnet.PreActResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "preact_resnet.PreActResNet.view", "preact_resnet.PreActResNet.linear", "preact_resnet.PreActResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet18": [[90, 92], ["preact_resnet.PreActResNet"], "function", ["None"], ["", "", "def", "PreActResNet18", "(", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet34": [[93, 95], ["preact_resnet.PreActResNet"], "function", ["None"], ["", "def", "PreActResNet34", "(", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet50": [[96, 98], ["preact_resnet.PreActResNet"], "function", ["None"], ["", "def", "PreActResNet50", "(", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet101": [[99, 101], ["preact_resnet.PreActResNet"], "function", ["None"], ["", "def", "PreActResNet101", "(", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet152": [[102, 104], ["preact_resnet.PreActResNet"], "function", ["None"], ["", "def", "PreActResNet152", "(", ")", ":", "\n", "    ", "return", "PreActResNet", "(", "PreActBottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.test": [[106, 110], ["preact_resnet.PreActResNet18", "PreActResNet18.", "print", "torch.randn", "torch.randn", "torch.randn", "net.size"], "function", ["home.repos.pwc.inspect_result.zhenglisec_Blind-Watermark-for-DNN.models.preact_resnet.PreActResNet18"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "PreActResNet18", "(", ")", "\n", "y", "=", "net", "(", "(", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", ")", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]]}