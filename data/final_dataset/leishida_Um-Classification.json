{"home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.BaseModel.compile_model": [[18, 22], ["model.compile"], "methods", ["None"], ["    ", "def", "compile_model", "(", "self", ",", "model", ",", "base_model", ",", "Pi", ",", "priors_corr", ",", "prior_test", ",", "mode", ")", ":", "\n", "        ", "model", ".", "compile", "(", "loss", "=", "'categorical_crossentropy'", ",", "optimizer", "=", "self", ".", "optimizer", ")", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "base_model", "=", "base_model", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.BaseModel.fit_model": [[23, 42], ["models.TestLoss", "numpy.zeros().reshape", "range", "print", "numpy.random.permutation", "keras.utils.np_utils.to_categorical", "models.BaseModel.model.fit", "len", "len", "numpy.concatenate", "numpy.concatenate", "len", "numpy.zeros", "len", "numpy.ones", "len"], "methods", ["None"], ["", "def", "fit_model", "(", "self", ",", "U_sets", ",", "x_train_total", ",", "batch_size", ",", "epochs", ",", "x_test", ",", "y_test", ",", "Pi", ",", "priors_corr", ",", "prior_test", ",", "mode", ")", ":", "\n", "        ", "test_loss", "=", "TestLoss", "(", "self", ".", "base_model", ",", "x_test", ",", "y_test", ",", "mode", ")", "\n", "X_train", "=", "x_train_total", "[", "U_sets", "[", "0", "]", ",", ":", "]", "\n", "Y_train", "=", "np", ".", "zeros", "(", "len", "(", "X_train", ")", ",", "dtype", "=", "np", ".", "int32", ")", ".", "reshape", "(", "len", "(", "X_train", ")", ",", "1", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "Pi", ")", ")", ":", "\n", "            ", "X_train", "=", "np", ".", "concatenate", "(", "(", "X_train", ",", "x_train_total", "[", "U_sets", "[", "i", "]", "]", ")", ")", "\n", "Y_train", "=", "np", ".", "concatenate", "(", "(", "Y_train", ",", "i", "*", "np", ".", "ones", "(", "(", "len", "(", "U_sets", "[", "i", "]", ")", ",", "1", ")", ")", ")", ")", "\n", "", "print", "(", "X_train", ".", "shape", ")", "\n", "perm", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "Y_train", ")", ")", "\n", "X_train", ",", "Y_train", "=", "X_train", "[", "perm", "]", ",", "Y_train", "[", "perm", "]", "\n", "Y_train", "=", "to_categorical", "(", "Y_train", ")", "\n", "h", "=", "self", ".", "model", ".", "fit", "(", "X_train", ",", "\n", "Y_train", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "epochs", "=", "epochs", ",", "\n", "verbose", "=", "1", ",", "\n", "callbacks", "=", "[", "test_loss", "]", ")", "\n", "loss_test", "=", "test_loss", ".", "test_losses", "\n", "return", "h", ".", "history", ",", "loss_test", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.MultiLayerPerceptron.__init__": [[45, 54], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "sets", ",", "set_sizes", ",", "Pi", ",", "mode", ",", "\n", "weight_decay", "=", "1e-4", ")", ":", "\n", "        ", "self", ".", "sets", "=", "sets", "\n", "self", ".", "set_sizes", "=", "set_sizes", "\n", "self", ".", "Pi", "=", "Pi", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "weight_decay", "=", "weight_decay", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "optimizer", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.MultiLayerPerceptron.adaption_layer": [[55, 69], ["len", "range", "range", "keras.backend.concatenate", "output.append"], "methods", ["None"], ["", "def", "adaption_layer", "(", "self", ",", "g", ")", ":", "\n", "        ", "c", "=", "0", "\n", "d", "=", "0", "\n", "output", "=", "[", "]", "\n", "sets", "=", "len", "(", "self", ".", "Pi", ")", "\n", "for", "i", "in", "range", "(", "sets", ")", ":", "\n", "            ", "c", "+=", "self", ".", "priors_corr", "[", "i", "]", "*", "(", "self", ".", "Pi", "[", "i", "]", "-", "self", ".", "prior_test", ")", "\n", "d", "+=", "(", "1", "-", "self", ".", "Pi", "[", "i", "]", ")", "*", "self", ".", "priors_corr", "[", "i", "]", "*", "self", ".", "prior_test", "\n", "", "for", "i", "in", "range", "(", "sets", ")", ":", "\n", "            ", "a", "=", "self", ".", "priors_corr", "[", "i", "]", "*", "(", "self", ".", "Pi", "[", "i", "]", "-", "self", ".", "prior_test", ")", "\n", "b", "=", "(", "1", "-", "self", ".", "Pi", "[", "i", "]", ")", "*", "self", ".", "prior_test", "*", "self", ".", "priors_corr", "[", "i", "]", "\n", "output", ".", "append", "(", "(", "a", "*", "g", "+", "b", ")", "/", "(", "c", "*", "g", "+", "d", ")", ")", "\n", "", "res", "=", "K", ".", "concatenate", "(", "output", ",", "axis", "=", "1", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.MultiLayerPerceptron.build_model": [[70, 116], ["keras.layers.Input", "keras.models.Model", "keras.models.Model", "models.MultiLayerPerceptron.compile_model", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.normalization.BatchNormalization", "keras.layers.Activation", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.normalization.BatchNormalization", "keras.layers.Activation", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.normalization.BatchNormalization", "keras.layers.Activation", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.normalization.BatchNormalization", "keras.layers.Activation", "keras.layers.Dense", "keras.layers.Lambda", "keras.initializers.lecun_normal", "keras.regularizers.l2", "keras.initializers.lecun_normal", "keras.regularizers.l2", "keras.initializers.lecun_normal", "keras.regularizers.l2", "keras.initializers.lecun_normal", "keras.regularizers.l2", "keras.initializers.lecun_normal"], "methods", ["home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.BaseModel.compile_model"], ["", "def", "build_model", "(", "self", ",", "priors_corr", ",", "prior_test", ",", "Pi", ",", "input_shape", ",", "mode", ")", ":", "\n", "        ", "self", ".", "prior_test", "=", "prior_test", "\n", "self", ".", "priors_corr", "=", "priors_corr", "\n", "self", ".", "Pi", "=", "Pi", "\n", "input", "=", "Input", "(", "shape", "=", "input_shape", ")", "\n", "\n", "x", "=", "Dropout", "(", "0.2", ",", "input_shape", "=", "input_shape", ")", "(", "input", ")", "\n", "x", "=", "Dense", "(", "300", ",", "use_bias", "=", "False", ",", "input_shape", "=", "input_shape", ",", "\n", "kernel_initializer", "=", "initializers", ".", "lecun_normal", "(", "seed", "=", "1", ")", ",", "\n", "kernel_regularizer", "=", "regularizers", ".", "l2", "(", "self", ".", "weight_decay", ")", ")", "(", "input", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "300", ",", "use_bias", "=", "False", ",", "\n", "kernel_initializer", "=", "initializers", ".", "lecun_normal", "(", "seed", "=", "1", ")", ",", "\n", "kernel_regularizer", "=", "regularizers", ".", "l2", "(", "self", ".", "weight_decay", ")", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "300", ",", "use_bias", "=", "False", ",", "\n", "kernel_initializer", "=", "initializers", ".", "lecun_normal", "(", "seed", "=", "1", ")", ",", "\n", "kernel_regularizer", "=", "regularizers", ".", "l2", "(", "self", ".", "weight_decay", ")", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "0.2", ")", "(", "x", ")", "\n", "x", "=", "Dense", "(", "300", ",", "use_bias", "=", "False", ",", "\n", "kernel_initializer", "=", "initializers", ".", "lecun_normal", "(", "seed", "=", "1", ")", ",", "\n", "kernel_regularizer", "=", "regularizers", ".", "l2", "(", "self", ".", "weight_decay", ")", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "\n", "\n", "g", "=", "Dense", "(", "1", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "initializers", ".", "lecun_normal", "(", "seed", "=", "1", ")", ",", "\n", "activation", "=", "'sigmoid'", ",", "\n", "name", "=", "\"base_model\"", ")", "(", "x", ")", "\n", "base_model", "=", "Model", "(", "inputs", "=", "input", ",", "outputs", "=", "g", ")", "\n", "g_bar", "=", "Lambda", "(", "self", ".", "adaption_layer", ",", "name", "=", "\"last_layer\"", ")", "(", "g", ")", "\n", "model", "=", "Model", "(", "inputs", "=", "input", ",", "outputs", "=", "g_bar", ")", "\n", "\n", "self", ".", "compile_model", "(", "model", "=", "model", ",", "\n", "base_model", "=", "base_model", ",", "\n", "Pi", "=", "self", ".", "Pi", ",", "\n", "priors_corr", "=", "priors_corr", ",", "\n", "prior_test", "=", "prior_test", ",", "\n", "mode", "=", "self", ".", "mode", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.TestLoss.__init__": [[120, 125], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "base_model", ",", "x_test", ",", "y_test", ",", "mode", ")", ":", "\n", "        ", "self", ".", "base_model", "=", "base_model", "\n", "self", ".", "x_test", "=", "x_test", "\n", "self", ".", "y_test", "=", "y_test", "\n", "self", ".", "mode", "=", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.TestLoss.on_train_begin": [[126, 128], ["None"], "methods", ["None"], ["", "def", "on_train_begin", "(", "self", ",", "logs", "=", "{", "}", ")", ":", "\n", "        ", "self", ".", "test_losses", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.TestLoss.on_epoch_end": [[129, 140], ["numpy.random.permutation", "numpy.size", "models.TestLoss.base_model.predict", "models.TestLoss.test_losses.append", "print", "print", "len", "numpy.sum", "numpy.not_equal().astype", "numpy.not_equal"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", ",", "logs", "=", "{", "}", ")", ":", "\n", "        ", "perm", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "self", ".", "x_test", ")", ")", "\n", "self", ".", "x_test", ",", "self", ".", "y_test", "=", "self", ".", "x_test", "[", "perm", "]", ",", "self", ".", "y_test", "[", "perm", "]", "\n", "nb_y_test", "=", "np", ".", "size", "(", "self", ".", "y_test", ")", "\n", "y_test_pred_base", "=", "self", ".", "base_model", ".", "predict", "(", "self", ".", "x_test", ",", "batch_size", "=", "1000", ")", "\n", "y_test_pred", "=", "(", "y_test_pred_base", ">=", "1", "/", "2", ")", "+", "0", "\n", "test_loss", "=", "np", ".", "sum", "(", "np", ".", "not_equal", "(", "y_test_pred", ",", "self", ".", "y_test", ")", ".", "astype", "(", "np", ".", "int32", ")", ")", "/", "nb_y_test", "\n", "self", ".", "test_losses", ".", "append", "(", "test_loss", ")", "\n", "\n", "print", "(", "\"\\n Test loss: %f\"", "%", "(", "test_loss", ")", ")", "\n", "print", "(", "\"============================================================================\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.dataset.get_mnist": [[9, 16], ["keras.datasets.mnist.load_data", "x_train.reshape.reshape", "x_test.reshape.reshape", "x_train.reshape.astype", "x_test.reshape.astype"], "function", ["None"], ["def", "get_mnist", "(", ")", ":", "\n", "    ", "(", "x_train", ",", "y_train", ")", ",", "(", "x_test", ",", "y_test", ")", "=", "mnist", ".", "load_data", "(", ")", "\n", "x_train", "=", "x_train", ".", "reshape", "(", "60000", ",", "784", ")", "\n", "x_test", "=", "x_test", ".", "reshape", "(", "10000", ",", "784", ")", "\n", "x_train", "=", "x_train", ".", "astype", "(", "'float32'", ")", "/", "255", "\n", "x_test", "=", "x_test", ".", "astype", "(", "'float32'", ")", "/", "255", "\n", "return", "(", "x_train", ",", "y_train", ")", ",", "(", "x_test", ",", "y_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.dataset.binarize_mnist_class": [[17, 23], ["numpy.ones().reshape", "numpy.ones().reshape", "len", "len", "numpy.ones", "numpy.ones", "len", "len"], "function", ["None"], ["", "def", "binarize_mnist_class", "(", "_trainY", ",", "_testY", ")", ":", "\n", "    ", "trainY", "=", "np", ".", "ones", "(", "len", "(", "_trainY", ")", ",", "dtype", "=", "np", ".", "int32", ")", ".", "reshape", "(", "len", "(", "_trainY", ")", ",", "1", ")", "\n", "trainY", "[", "_trainY", "%", "2", "==", "1", "]", "=", "0", "\n", "testY", "=", "np", ".", "ones", "(", "len", "(", "_testY", ")", ",", "dtype", "=", "np", ".", "int32", ")", ".", "reshape", "(", "len", "(", "_testY", ")", ",", "1", ")", "\n", "testY", "[", "_testY", "%", "2", "==", "1", "]", "=", "0", "\n", "return", "trainY", ",", "testY", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.dataset.load_dataset": [[24, 29], ["dataset.get_mnist", "dataset.binarize_mnist_class", "float", "len"], "function", ["home.repos.pwc.inspect_result.leishida_Um-Classification.None.dataset.get_mnist", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.dataset.binarize_mnist_class"], ["", "def", "load_dataset", "(", "dataset_name", ")", ":", "\n", "    ", "(", "trainX", ",", "trainY", ")", ",", "(", "testX", ",", "testY", ")", "=", "get_mnist", "(", ")", "\n", "trainY", ",", "testY", "=", "binarize_mnist_class", "(", "trainY", ",", "testY", ")", "\n", "prior_test", "=", "(", "testY", "==", "1", ")", ".", "sum", "(", ")", "/", "float", "(", "len", "(", "testY", ")", ")", "\n", "return", "trainX", ",", "trainY", ",", "testX", ",", "testY", ",", "prior_test", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.dataset.get_U_sets": [[30, 46], ["sum", "range", "numpy.random.shuffle", "numpy.random.shuffle", "int", "int", "numpy.concatenate().astype", "numpy.random.shuffle", "enumerate", "enumerate", "sum", "numpy.concatenate"], "function", ["None"], ["", "def", "get_U_sets", "(", "bags", ",", "y_train", ",", "bag_sizes", ",", "thetas", ")", ":", "\n", "    ", "pos_idx", "=", "[", "i", "for", "i", ",", "x", "in", "enumerate", "(", "y_train", ")", "if", "x", "==", "1", "]", "\n", "neg_idx", "=", "[", "i", "for", "i", ",", "x", "in", "enumerate", "(", "y_train", ")", "if", "x", "==", "0", "]", "\n", "U_sets", "=", "(", ")", "\n", "total_size", "=", "sum", "(", "bag_sizes", ")", "\n", "priors_corr", "=", "[", "bag_size", "/", "sum", "(", "bag_sizes", ")", "for", "bag_size", "in", "bag_sizes", "]", "\n", "for", "i", "in", "range", "(", "bags", ")", ":", "\n", "        ", "np", ".", "random", ".", "shuffle", "(", "pos_idx", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "neg_idx", ")", "\n", "n_pos", "=", "int", "(", "bag_sizes", "[", "i", "]", "*", "thetas", "[", "i", "]", ")", "\n", "n_neg", "=", "int", "(", "bag_sizes", "[", "i", "]", "-", "n_pos", ")", "\n", "cur_set", "=", "np", ".", "concatenate", "(", "(", "pos_idx", "[", ":", "n_pos", "]", ",", "neg_idx", "[", ":", "n_neg", "]", ")", ")", ".", "astype", "(", "int", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "cur_set", ")", "\n", "U_sets", "=", "U_sets", "+", "(", "cur_set", ",", ")", "\n", "\n", "", "return", "U_sets", ",", "priors_corr", "", "", ""]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.lr_scheduler": [[12, 18], ["None"], "function", ["None"], ["def", "lr_scheduler", "(", "dataset", ",", "sets", ",", "mode", ")", ":", "\n", "    ", "if", "mode", "==", "'SSC'", "or", "dataset", "==", "'fashion'", "or", "dataset", "==", "'kuzushiji'", ":", "\n", "        ", "lr", "=", "1e-5", "\n", "", "elif", "dataset", "==", "'cifar10'", ":", "\n", "        ", "lr", "=", "2e-6", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.plot_curve": [[19, 38], ["seaborn.set", "matplotlib.figure", "matplotlib.xlim", "matplotlib.ylim", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.grid", "range"], "function", ["None"], ["", "def", "plot_curve", "(", "loss", ",", "nb_epoch", ",", "label", ",", "phase", "=", "'test'", ",", "dataset", "=", "'MNIST'", ")", ":", "\n", "    ", "sns", ".", "set", "(", ")", "\n", "if", "phase", "==", "'test'", ":", "\n", "        ", "fig_num", "=", "1", "\n", "ylim", "=", "(", "0", ",", "0.4", ")", "\n", "ylabel", "=", "'Classification error (%)'", "\n", "", "else", ":", "\n", "        ", "fig_num", "=", "2", "\n", "ylim", "=", "(", "0", ",", "5", ")", "\n", "ylabel", "=", "'Training loss'", "\n", "", "plt", ".", "figure", "(", "num", "=", "fig_num", ")", "\n", "plt", ".", "xlim", "(", "0", ",", "nb_epoch", ",", "1", ")", "\n", "plt", ".", "ylim", "(", "ylim", ")", "\n", "plt", ".", "plot", "(", "range", "(", "0", ",", "nb_epoch", ")", ",", "loss", ",", "label", "=", "label", ")", "\n", "plt", ".", "title", "(", "dataset", "+", "', '", "+", "phase", ",", "size", "=", "16", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ",", "fontsize", "=", "16", ")", "\n", "plt", ".", "ylabel", "(", "ylabel", ",", "fontsize", "=", "16", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.get_Pi": [[39, 43], ["numpy.random.rand"], "function", ["None"], ["", "def", "get_Pi", "(", "sets", ",", "mode", ")", ":", "\n", "# uniform random priors frow [0.1, 0.9]", "\n", "    ", "Pi", "=", "np", ".", "random", ".", "rand", "(", "sets", ")", "*", "0.8", "+", "0.1", "\n", "return", "Pi", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.get_set_sizes": [[44, 48], ["numpy.ones"], "function", ["None"], ["", "def", "get_set_sizes", "(", "sets", ",", "data_len", ",", "mode", ")", ":", "\n", "    ", "set_size", "=", "data_len", "//", "sets", "\n", "set_sizes", "=", "np", ".", "ones", "(", "sets", ")", "*", "set_size", "\n", "return", "set_sizes", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.save_data": [[49, 88], ["helper.plot_curve", "helper.plot_curve", "matplotlib.figure", "matplotlib.savefig", "matplotlib.figure", "matplotlib.savefig", "matplotlib.close", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "open", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.write", "open.close", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "str", "str", "str", "str", "str", "str", "str", "str", "os.path.dirname", "os.path.realpath"], "function", ["home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.plot_curve", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.plot_curve"], ["", "def", "save_data", "(", "args", ",", "U_sets", ",", "priors_corr", ",", "prior_test", ",", "np_loss_train", ",", "np_loss_test", ")", ":", "\n", "#Build and Make dir", "\n", "    ", "output_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "+", "'/output_'", "+", "args", ".", "mode", "+", "'/'", "+", "args", ".", "dataset", "+", "'/'", "+", "str", "(", "args", ".", "sets", ")", "+", "'/'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_dir", ")", "\n", "\n", "#Save figures", "\n", "", "plot_curve", "(", "np_loss_test", ",", "args", ".", "epoch", ",", "label", "=", "args", ".", "mode", ",", "phase", "=", "'test'", ",", "dataset", "=", "args", ".", "dataset", ")", "\n", "plot_curve", "(", "np_loss_train", ",", "args", ".", "epoch", ",", "label", "=", "args", ".", "mode", ",", "phase", "=", "'train'", ",", "dataset", "=", "args", ".", "dataset", ")", "\n", "plt", ".", "figure", "(", "1", ")", "\n", "plt", ".", "savefig", "(", "output_dir", "+", "\"test_curve.png\"", ",", "format", "=", "'png'", ")", "\n", "plt", ".", "figure", "(", "2", ")", "\n", "plt", ".", "savefig", "(", "output_dir", "+", "\"train_curve.png\"", ",", "format", "=", "'png'", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "\n", "#Save Loss-Epoch Vector", "\n", "np", ".", "save", "(", "output_dir", "+", "'train_loss'", "+", "'.npy'", ",", "np_loss_train", ")", "\n", "np", ".", "save", "(", "output_dir", "+", "'test_loss'", "+", "'.npy'", ",", "np_loss_test", ")", "\n", "\n", "#Save Other Data and Records", "\n", "data_dir", "=", "output_dir", "+", "'data/'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "data_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "data_dir", ")", "\n", "", "np", ".", "save", "(", "data_dir", "+", "'U_sets.npy'", ",", "U_sets", ")", "\n", "np", ".", "save", "(", "data_dir", "+", "'priors_corr.npy'", ",", "priors_corr", ")", "\n", "np", ".", "save", "(", "data_dir", "+", "'prior_test.npy'", ",", "[", "prior_test", "]", ")", "\n", "np", ".", "save", "(", "data_dir", "+", "'Pi.npy'", ",", "args", ".", "Pi", ")", "\n", "np", ".", "save", "(", "data_dir", "+", "'set_sizes.npy'", ",", "args", ".", "set_sizes", ")", "\n", "np", ".", "save", "(", "data_dir", "+", "'sets.npy'", ",", "[", "args", ".", "sets", "]", ")", "\n", "fp", "=", "open", "(", "data_dir", "+", "\"info\"", ",", "'w+'", ")", "\n", "fp", ".", "write", "(", "str", "(", "args", ".", "sets", ")", "+", "\"sets\\n\"", ")", "\n", "fp", ".", "write", "(", "\"set sizes:\"", "+", "str", "(", "args", ".", "set_sizes", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\"Pi_i:\"", "+", "str", "(", "args", ".", "Pi", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\"Pi_D:\"", "+", "str", "(", "prior_test", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\"rho_i:\"", "+", "str", "(", "priors_corr", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\"learing rate:\"", "+", "str", "(", "args", ".", "learningrate", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\"lr decay:\"", "+", "str", "(", "args", ".", "lr_decay", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "close", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.experiment.get_args": [[17, 42], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "get_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'U^m Classification Keras implementation'", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--sets'", ",", "type", "=", "int", ",", "default", "=", "20", ")", "\n", "parser", ".", "add_argument", "(", "'--sets_sizes'", ")", "\n", "parser", ".", "add_argument", "(", "'--Pi'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--Pi_gen'", ",", "type", "=", "str", ",", "default", "=", "\"random\"", ",", "choices", "=", "[", "'random'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--set_size_gen'", ",", "type", "=", "str", ",", "default", "=", "\"uniform\"", ",", "choices", "=", "[", "'uniform'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--eps'", ",", "type", "=", "float", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--data_gen'", ",", "type", "=", "str", ",", "default", "=", "\"random\"", ",", "choices", "=", "[", "'random'", "]", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--batchsize'", ",", "type", "=", "int", ",", "default", "=", "512", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'mnist'", ",", "choices", "=", "[", "'mnist'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--mode'", ",", "type", "=", "str", ",", "default", "=", "'SSC'", ",", "choices", "=", "[", "'SSC'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch'", ",", "type", "=", "int", ",", "default", "=", "300", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'mlp'", ",", "choices", "=", "[", "'mlp'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--learningrate'", ",", "type", "=", "float", ",", "default", "=", "-", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_decay'", ",", "type", "=", "float", ",", "default", "=", "1e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--weightdecay'", ",", "type", "=", "float", ",", "default", "=", "1e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--optimizer'", ",", "type", "=", "str", ",", "default", "=", "'Adam'", ",", "choices", "=", "[", "'Adam'", ",", "'SGD'", "]", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.leishida_Um-Classification.None.experiment.exp": [[43, 99], ["dataset.load_dataset", "helper.get_set_sizes", "helper.get_Pi", "dataset.get_U_sets", "print", "print", "print", "print", "models.MultiLayerPerceptron", "keras.optimizers.Adam", "models.MultiLayerPerceptron.build_model", "models.MultiLayerPerceptron.fit_model", "numpy.array", "numpy.array", "helper.plot_curve", "helper.plot_curve", "helper.save_data", "len", "helper.lr_scheduler", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.leishida_Um-Classification.None.dataset.load_dataset", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.get_set_sizes", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.get_Pi", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.dataset.get_U_sets", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.MultiLayerPerceptron.build_model", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.models.BaseModel.fit_model", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.plot_curve", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.plot_curve", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.save_data", "home.repos.pwc.inspect_result.leishida_Um-Classification.None.helper.lr_scheduler"], ["", "def", "exp", "(", "args", ")", ":", "\n", "#Get Image Data", "\n", "    ", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "prior_test", "=", "load_dataset", "(", "args", ".", "dataset", ")", "\n", "\n", "#Get Sets Sizes", "\n", "args", ".", "set_sizes", "=", "get_set_sizes", "(", "args", ".", "sets", ",", "len", "(", "x_train", ")", ",", "args", ".", "set_size_gen", ")", "\n", "\n", "#Randomly Generate Priors Pi", "\n", "args", ".", "Pi", "=", "get_Pi", "(", "args", ".", "sets", ",", "args", ".", "Pi_gen", ")", "\n", "\n", "#Sample Data According to Pi and Sets Sizes", "\n", "U_sets", ",", "priors_corr", "=", "get_U_sets", "(", "args", ".", "sets", ",", "y_train", ",", "args", ".", "set_sizes", ",", "args", ".", "Pi", ")", "\n", "\n", "print", "(", "'Data prepared!'", ")", "\n", "print", "(", "\"set_sizes: \"", "+", "str", "(", "args", ".", "set_sizes", ")", ")", "\n", "print", "(", "\"test class prior: \"", "+", "str", "(", "prior_test", ")", ")", "\n", "print", "(", "\"Pi: \"", "+", "str", "(", "args", ".", "Pi", ")", ")", "\n", "\n", "# Get Model", "\n", "ExpModel", "=", "MultiLayerPerceptron", "(", "dataset", "=", "args", ".", "dataset", ",", "\n", "sets", "=", "args", ".", "sets", ",", "\n", "set_sizes", "=", "args", ".", "set_sizes", ",", "\n", "Pi", "=", "args", ".", "Pi", ",", "\n", "mode", "=", "args", ".", "mode", ",", "\n", "weight_decay", "=", "args", ".", "weightdecay", ")", "\n", "\n", "# Schedule Learning Rate if not specified", "\n", "if", "args", ".", "learningrate", "==", "-", "1", ":", "\n", "        ", "args", ".", "learningrate", "=", "lr_scheduler", "(", "args", ".", "dataset", ",", "args", ".", "sets", ",", "args", ".", "mode", ")", "\n", "\n", "# Get optimizer", "\n", "", "ExpModel", ".", "optimizer", "=", "Adam", "(", "args", ".", "optimizer", ",", "lr", "=", "args", ".", "learningrate", ",", "decay", "=", "args", ".", "lr_decay", ")", "\n", "\n", "# Build Model", "\n", "input_shape", "=", "x_train", "[", "0", "]", ".", "shape", "\n", "ExpModel", ".", "build_model", "(", "priors_corr", ",", "prior_test", ",", "args", ".", "Pi", ",", "input_shape", ",", "mode", "=", "args", ".", "mode", ")", "\n", "\n", "#-----------------------------------------------------Start Training-----------------------------------------------------#", "\n", "history", ",", "loss_test", "=", "ExpModel", ".", "fit_model", "(", "U_sets", "=", "U_sets", ",", "x_train_total", "=", "x_train", ",", "\n", "batch_size", "=", "args", ".", "batchsize", ",", "\n", "epochs", "=", "args", ".", "epoch", ",", "\n", "x_test", "=", "x_test", ",", "\n", "y_test", "=", "y_test", ",", "\n", "Pi", "=", "args", ".", "Pi", ",", "\n", "priors_corr", "=", "priors_corr", ",", "\n", "prior_test", "=", "prior_test", ",", "\n", "mode", "=", "args", ".", "mode", "\n", ")", "\n", "np_loss_test", "=", "np", ".", "array", "(", "loss_test", ")", "\n", "np_loss_train", "=", "np", ".", "array", "(", "history", "[", "'loss'", "]", ")", "\n", "\n", "plot_curve", "(", "np_loss_test", ",", "args", ".", "epoch", ",", "label", "=", "args", ".", "mode", ",", "phase", "=", "'test'", ",", "dataset", "=", "args", ".", "dataset", ")", "\n", "plot_curve", "(", "np_loss_train", ",", "args", ".", "epoch", ",", "label", "=", "args", ".", "mode", ",", "phase", "=", "'train'", ",", "dataset", "=", "args", ".", "dataset", ")", "\n", "\n", "#---------------------------------------------Save files----------------------------------------------------------------#", "\n", "save_data", "(", "args", ",", "U_sets", ",", "priors_corr", ",", "prior_test", ",", "np_loss_train", ",", "np_loss_test", ")", "\n", "\n"]]}