{"home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.None.structure_loss.gaussian_kernel_2d_opencv": [[12, 22], ["cv2.getGaussianKernel", "cv2.getGaussianKernel", "numpy.multiply", "numpy.transpose"], "function", ["None"], ["def", "gaussian_kernel_2d_opencv", "(", "kernel_size", "=", "3", ",", "sigma", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    ref: https://blog.csdn.net/qq_16013649/article/details/78784791\n    ref: tensorflow\n        (1) https://stackoverflow.com/questions/52012657/how-to-make-a-2d-gaussian-filter-in-tensorflow\n        (2) https://github.com/tensorflow/tensorflow/issues/2826\n    \"\"\"", "\n", "kx", "=", "cv2", ".", "getGaussianKernel", "(", "kernel_size", ",", "sigma", ")", "\n", "ky", "=", "cv2", ".", "getGaussianKernel", "(", "kernel_size", ",", "sigma", ")", "\n", "return", "np", ".", "multiply", "(", "kx", ",", "np", ".", "transpose", "(", "ky", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.None.structure_loss.canny_edge": [[24, 42], ["range", "numpy.concatenate", "numpy.expand_dims().astype", "len", "skimage.color.rgb2gray", "skimage.feature.canny", "np.concatenate.append", "numpy.expand_dims", "numpy.expand_dims"], "function", ["None"], ["", "def", "canny_edge", "(", "images", ",", "sigma", "=", "1.5", ")", ":", "\n", "    ", "\"\"\"\n    Extract edges in tensorflow.\n    example:\n    input = tf.placeholder(dtype=tf.float32, shape=[None, 900, 900, 3])\n    output = tf.py_func(canny_edge, [input], tf.float32, stateful=False)\n\n    :param images:\n    :param sigma:\n    :return:\n    \"\"\"", "\n", "edges", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "images", ")", ")", ":", "\n", "        ", "grey_img", "=", "rgb2gray", "(", "images", "[", "i", "]", ")", "\n", "edge", "=", "feature", ".", "canny", "(", "grey_img", ",", "sigma", "=", "sigma", ")", "\n", "edges", ".", "append", "(", "np", ".", "expand_dims", "(", "edge", ",", "axis", "=", "0", ")", ")", "\n", "", "edges", "=", "np", ".", "concatenate", "(", "edges", ",", "axis", "=", "0", ")", "\n", "return", "np", ".", "expand_dims", "(", "edges", ",", "axis", "=", "3", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.None.structure_loss.priority_loss_mask": [[44, 52], ["structure_loss.gaussian_kernel_2d_opencv", "numpy.reshape", "tensorflow.convert_to_tensor", "range", "tensorflow.nn.conv2d"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.gaussian_kernel_2d_opencv"], ["", "def", "priority_loss_mask", "(", "mask", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", ":", "\n", "    ", "gaussian_kernel", "=", "gaussian_kernel_2d_opencv", "(", "kernel_size", "=", "ksize", ",", "sigma", "=", "sigma", ")", "\n", "gaussian_kernel", "=", "np", ".", "reshape", "(", "gaussian_kernel", ",", "(", "ksize", ",", "ksize", ",", "1", ",", "1", ")", ")", "\n", "mask_priority", "=", "tf", ".", "convert_to_tensor", "(", "mask", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "iteration", ")", ":", "\n", "        ", "mask_priority", "=", "tf", ".", "nn", ".", "conv2d", "(", "mask_priority", ",", "gaussian_kernel", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "", "return", "mask_priority", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.None.structure_loss.pyramid_structure_loss": [[54, 93], ["image.get_shape().as_list", "predict.get_shape().as_list", "tensorflow.reduce_mean", "image.get_shape", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.sobel_edges", "tensorflow.reshape", "tensorflow.abs", "tensorflow.py_func", "structure_loss.priority_loss_mask", "tensorflow.image.sobel_edges", "tensorflow.reshape", "tensorflow.abs", "tensorflow.py_func", "structure_loss.priority_loss_mask", "predict.get_shape", "tensorflow.reduce_sum", "tensorflow.reduce_sum"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask"], ["", "def", "pyramid_structure_loss", "(", "image", ",", "predicts", ",", "edge_alpha", ",", "grad_alpha", ")", ":", "\n", "    ", "_", ",", "H", ",", "W", ",", "_", "=", "image", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "loss", "=", "0.", "\n", "for", "predict", "in", "predicts", ":", "\n", "        ", "_", ",", "h", ",", "w", ",", "_", "=", "predict", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "if", "h", "!=", "H", ":", "\n", "            ", "gt_img", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "image", ",", "size", "=", "(", "h", ",", "w", ")", ")", "\n", "# gt_mask = tf.image.resize_nearest_neighbor(mask, size=(h, w))", "\n", "\n", "# grad", "\n", "gt_grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "gt_img", ")", "\n", "gt_grad", "=", "tf", ".", "reshape", "(", "gt_grad", ",", "[", "-", "1", ",", "h", ",", "w", ",", "6", "]", ")", "# 6 channel", "\n", "grad_error", "=", "tf", ".", "abs", "(", "predict", "-", "gt_grad", ")", "\n", "\n", "# edge", "\n", "gt_edge", "=", "tf", ".", "py_func", "(", "canny_edge", ",", "[", "gt_img", "]", ",", "tf", ".", "float32", ",", "stateful", "=", "False", ")", "\n", "edge_priority", "=", "priority_loss_mask", "(", "gt_edge", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", "\n", "", "else", ":", "\n", "            ", "gt_img", "=", "image", "\n", "# gt_mask = mask", "\n", "\n", "# grad", "\n", "gt_grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "gt_img", ")", "\n", "gt_grad", "=", "tf", ".", "reshape", "(", "gt_grad", ",", "[", "-", "1", ",", "H", ",", "W", ",", "6", "]", ")", "# 6 channel", "\n", "grad_error", "=", "tf", ".", "abs", "(", "predict", "-", "gt_grad", ")", "\n", "\n", "# edge", "\n", "gt_edge", "=", "tf", ".", "py_func", "(", "canny_edge", ",", "[", "gt_img", "]", ",", "tf", ".", "float32", ",", "stateful", "=", "False", ")", "\n", "edge_priority", "=", "priority_loss_mask", "(", "gt_edge", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", "\n", "\n", "", "grad_loss", "=", "tf", ".", "reduce_mean", "(", "grad_alpha", "*", "grad_error", ")", "\n", "edge_weight", "=", "edge_alpha", "*", "edge_priority", "\n", "# print(\"edge_weight\", edge_weight.shape)", "\n", "# print(\"grad_error\", grad_error.shape)", "\n", "edge_loss", "=", "tf", ".", "reduce_sum", "(", "edge_weight", "*", "grad_error", ")", "/", "tf", ".", "reduce_sum", "(", "edge_weight", ")", "/", "6.", "# 6 channel", "\n", "\n", "loss", "=", "loss", "+", "grad_loss", "+", "edge_loss", "\n", "\n", "", "return", "loss", "", "", ""]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.train_inpaint_model.multi_gpu_setting": [[20, 96], ["tensorflow.device", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "train_inpaint_model.average_gradients", "train_inpaint_model.average_gradients", "tf.train.AdamOptimizer.apply_gradients", "tf.train.AdamOptimizer.apply_gradients", "utils_fn.load_img_scale_edge", "tensorflow.placeholder", "utils_fn.load_mask", "tensorflow.placeholder", "tensorflow.variable_scope", "range", "tensorflow.get_variable_scope", "tensorflow.device", "tensorflow.name_scope", "print", "print", "print", "print", "model.build_graph_with_losses", "tensorflow.get_variable_scope().reuse_variables", "tf.train.AdamOptimizer.compute_gradients", "tf.train.AdamOptimizer.compute_gradients", "tower_g_grads.append", "tower_d_grads.append", "open", "open", "tensorflow.get_variable_scope", "f.write", "f.write", "str", "str"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.train_inpaint_model.average_gradients", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.train_inpaint_model.average_gradients", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_img_scale_edge", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.build_graph_with_losses"], ["def", "multi_gpu_setting", "(", "model", ",", "args", ")", ":", "\n", "    ", "gpu_num", "=", "args", ".", "NUM_GPUS", "\n", "batch_size", "=", "args", ".", "BATCH_SIZE", "\n", "\n", "with", "tf", ".", "device", "(", "\"/cpu:0\"", ")", ":", "\n", "        ", "\"\"\" Input Data (images and masks) \"\"\"", "\n", "# images and edges", "\n", "if", "args", ".", "CUSTOM_DATASET", ":", "\n", "            ", "images_edges", "=", "load_img_scale_edge", "(", "args", ")", "\n", "", "else", ":", "\n", "            ", "images_edges", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "\n", "[", "args", ".", "BATCH_SIZE", "*", "gpu_num", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "args", ".", "IMG_SHAPES", "[", "2", "]", "]", ",", "\n", "name", "=", "'real_images'", ")", "\n", "", "images_", ",", "edges_", ",", "edges_128_", ",", "edges_64_", "=", "images_edges", "# a tuple", "\n", "images_", "=", "tf", ".", "reshape", "(", "images_", ",", "\n", "[", "args", ".", "BATCH_SIZE", "*", "gpu_num", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "args", ".", "IMG_SHAPES", "[", "2", "]", "]", ")", "\n", "edges_", "=", "tf", ".", "reshape", "(", "edges_", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "edges_128_", "=", "tf", ".", "reshape", "(", "edges_128_", ",", "[", "-", "1", ",", "128", ",", "128", ",", "1", "]", ")", "\n", "edges_64_", "=", "tf", ".", "reshape", "(", "edges_64_", ",", "[", "-", "1", ",", "64", ",", "64", ",", "1", "]", ")", "\n", "\n", "# masks", "\n", "if", "args", ".", "MASK_MODE", "==", "'irregular'", ":", "\n", "            ", "masks", "=", "load_mask", "(", "args", ")", "\n", "", "else", ":", "\n", "            ", "masks", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ",", "\n", "name", "=", "'regular_masks'", ")", "\n", "", "_masks", "=", "tf", ".", "reshape", "(", "masks", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "\n", "# opt", "\n", "g_optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "args", ".", "G_LR", ",", "beta1", "=", "0.", ",", "beta2", "=", "0.9", ")", "\n", "d_optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "args", ".", "D_LR", ",", "beta1", "=", "0.", ",", "beta2", "=", "0.9", ")", "\n", "\n", "# update grad", "\n", "tower_g_grads", "=", "[", "]", "\n", "tower_d_grads", "=", "[", "]", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "tf", ".", "get_variable_scope", "(", ")", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "gpu_num", ")", ":", "# GPU IDs", "\n", "                ", "with", "tf", ".", "device", "(", "\"/gpu:%d\"", "%", "i", ")", ":", "\n", "                    ", "with", "tf", ".", "name_scope", "(", "\"tower_%d\"", "%", "i", ")", ":", "\n", "                        ", "_images", "=", "images_", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "_edges", "=", "edges_", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "_edges_128", "=", "edges_128_", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "_edges_64", "=", "edges_64_", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "print", "(", "_images", ".", "shape", ")", "\n", "print", "(", "_masks", ".", "shape", ")", "\n", "print", "(", "_edges", ".", "shape", ")", "\n", "print", "(", "_edges_64", ")", "\n", "model", ".", "build_graph_with_losses", "(", "_images", ",", "_masks", ",", "_edges", ",", "_edges_128", ",", "_edges_64", ",", "args", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", "\n", "tf", ".", "get_variable_scope", "(", ")", ".", "reuse_variables", "(", ")", "\n", "# scale 256", "\n", "_g256_grads", "=", "g_optimizer", ".", "compute_gradients", "(", "model", ".", "g_loss", ",", "var_list", "=", "model", ".", "total_g_vars", ")", "\n", "_d256_grads", "=", "d_optimizer", ".", "compute_gradients", "(", "model", ".", "d_loss", ",", "var_list", "=", "model", ".", "total_d_vars", ")", "\n", "tower_g_grads", ".", "append", "(", "_g256_grads", ")", "\n", "with", "open", "(", "\"tower_{}_g.txt\"", ".", "format", "(", "i", ")", ",", "'w'", ")", "as", "f", ":", "\n", "                            ", "for", "g", "in", "tower_g_grads", "[", "0", "]", ":", "\n", "                                ", "f", ".", "write", "(", "\"g:\"", "+", "str", "(", "g", ")", "+", "'\\n'", ")", "\n", "", "", "tower_d_grads", ".", "append", "(", "_d256_grads", ")", "\n", "with", "open", "(", "\"tower_{}_d.txt\"", ".", "format", "(", "i", ")", ",", "'w'", ")", "as", "f", ":", "\n", "                            ", "for", "g", "in", "tower_g_grads", "[", "0", "]", ":", "\n", "                                ", "f", ".", "write", "(", "\"d:\"", "+", "str", "(", "g", ")", "+", "'\\n'", ")", "\n", "\n", "\n", "# average grads", "\n", "", "", "", "", "", "", "g_grads", "=", "average_gradients", "(", "tower_g_grads", ")", "\n", "d_grads", "=", "average_gradients", "(", "tower_d_grads", ")", "\n", "\n", "# train op", "\n", "g_train_op", "=", "g_optimizer", ".", "apply_gradients", "(", "g_grads", ")", "\n", "d_train_op", "=", "d_optimizer", ".", "apply_gradients", "(", "d_grads", ")", "\n", "\n", "# summary model in the last gpu device", "\n", "all_sum_256", "=", "model", ".", "all_sum", "# only keep the final summary", "\n", "\n", "# return train ops and inputs", "\n", "return", "g_train_op", ",", "d_train_op", ",", "images_edges", ",", "masks", ",", "all_sum_256", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.train_inpaint_model.average_gradients": [[98, 111], ["zip", "tensorflow.concat", "tensorflow.reduce_mean", "average_grads.append", "tensorflow.expand_dims", "grads.append"], "function", ["None"], ["", "", "def", "average_gradients", "(", "tower_grads", ")", ":", "\n", "    ", "average_grads", "=", "[", "]", "\n", "for", "grad_and_vars", "in", "zip", "(", "*", "tower_grads", ")", ":", "\n", "        ", "grads", "=", "[", "]", "\n", "for", "g", ",", "_", "in", "grad_and_vars", ":", "\n", "            ", "expend_g", "=", "tf", ".", "expand_dims", "(", "g", ",", "0", ")", "\n", "grads", ".", "append", "(", "expend_g", ")", "\n", "", "grad", "=", "tf", ".", "concat", "(", "grads", ",", "0", ")", "\n", "grad", "=", "tf", ".", "reduce_mean", "(", "grad", ",", "0", ")", "\n", "v", "=", "grad_and_vars", "[", "0", "]", "[", "1", "]", "\n", "grad_and_var", "=", "(", "grad", ",", "v", ")", "\n", "average_grads", ".", "append", "(", "grad_and_var", ")", "\n", "", "return", "average_grads", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.train_inpaint_model.single_gpu_setting": [[113, 154], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "model.build_graph_with_losses", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "utils_fn.load_img_scale_edge", "tensorflow.placeholder", "utils_fn.load_mask", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.build_graph_with_losses", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_img_scale_edge", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_mask"], ["", "def", "single_gpu_setting", "(", "model", ",", "args", ")", ":", "\n", "    ", "gpu_num", "=", "args", ".", "NUM_GPUS", "\n", "assert", "(", "gpu_num", "==", "1", ")", "\n", "\n", "\"\"\" Input Data (images and masks) \"\"\"", "\n", "# images and edges", "\n", "if", "args", ".", "CUSTOM_DATASET", ":", "\n", "        ", "images_edges", "=", "load_img_scale_edge", "(", "args", ")", "\n", "", "else", ":", "\n", "        ", "images_edges", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "\n", "[", "args", ".", "BATCH_SIZE", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "args", ".", "IMG_SHAPES", "[", "2", "]", "]", ",", "\n", "name", "=", "'real_images'", ")", "\n", "", "images_", ",", "edges_", ",", "edges_128_", ",", "edges_64_", "=", "images_edges", "# a tuple", "\n", "images", "=", "tf", ".", "reshape", "(", "images_", ",", "\n", "[", "args", ".", "BATCH_SIZE", "*", "gpu_num", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "args", ".", "IMG_SHAPES", "[", "2", "]", "]", ")", "\n", "edges", "=", "tf", ".", "reshape", "(", "edges_", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "edges_128", "=", "tf", ".", "reshape", "(", "edges_128_", ",", "[", "-", "1", ",", "128", ",", "128", ",", "1", "]", ")", "\n", "edges_64", "=", "tf", ".", "reshape", "(", "edges_64_", ",", "[", "-", "1", ",", "64", ",", "64", ",", "1", "]", ")", "\n", "\n", "# masks", "\n", "if", "args", ".", "MASK_MODE", "==", "'irregular'", ":", "\n", "        ", "masks", "=", "load_mask", "(", "args", ")", "\n", "", "else", ":", "\n", "        ", "masks", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ",", "\n", "name", "=", "'regular_masks'", ")", "\n", "", "masks", "=", "tf", ".", "reshape", "(", "masks", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "\n", "# build model with losses", "\n", "model", ".", "build_graph_with_losses", "(", "images", ",", "masks", ",", "edges", ",", "edges_128", ",", "edges_64", ",", "args", ",", "reuse", "=", "False", ")", "\n", "\n", "# train op", "\n", "g_train_op", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "args", ".", "G_LR", ",", "beta1", "=", "0.", ",", "beta2", "=", "0.9", ")", ".", "minimize", "(", "\n", "model", ".", "g_loss", ",", "var_list", "=", "model", ".", "total_g_vars", ")", "\n", "d_train_op", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "args", ".", "D_LR", ",", "beta1", "=", "0.", ",", "beta2", "=", "0.9", ")", ".", "minimize", "(", "\n", "model", ".", "d_loss", ",", "var_list", "=", "model", ".", "total_d_vars", ")", "\n", "\n", "# summary", "\n", "all_sum_256", "=", "model", ".", "all_sum", "\n", "\n", "# return train ops and inputs", "\n", "return", "g_train_op", ",", "d_train_op", ",", "images_edges", ",", "masks", ",", "all_sum_256", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.train_inpaint_model.main": [[156, 357], ["config.Config", "tensorflow.ConfigProto", "logging.basicConfig", "logging.getLogger", "logging.getLogger.setLevel", "inpaint_model.InpaintModel", "logging.getLogger.info", "train_inpaint_model.multi_gpu_setting", "logging.getLogger.info", "train_inpaint_model.single_gpu_setting", "logging.getLogger.info", "tensorflow.Session", "os.path.join", "os.path.join", "tensorflow.summary.FileWriter", "tensorflow.train.Saver", "tensorflow.global_variables_initializer().run", "utils_fn.show_all_variables", "tensorflow.train.get_checkpoint_state", "int", "range", "logging.getLogger.info", "str", "len", "tensorflow.device", "utils_fn.load_val_img_scale_edge", "inpaint_model.InpaintModel.build_validation_model", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "logging.getLogger.info", "logging.getLogger.info", "os.path.basename", "tensorflow.get_collection", "sess.run", "print", "int", "logging.getLogger.info", "logging.getLogger.info", "utils_fn.dataset_len", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "logging.getLogger.info", "time.time", "time.time", "range", "logging.getLogger.info", "utils_fn.load_validation_mask", "tensorflow.placeholder", "str", "tensorflow.global_variables_initializer", "next().group", "tensorflow.contrib.framework.load_variable", "assign_ops.append", "tf.train.Saver.save", "sess.run", "utils_fn.create_mask", "sess.run", "logging.getLogger.info", "time.time", "time.time", "os.path.join", "tensorflow.assign", "next", "os.path.join", "sess.run", "tf.summary.FileWriter.add_summary", "sess.run", "tf.summary.FileWriter.add_summary", "sess.run", "re.finditer", "sess.run", "time.time", "time.time", "time.time", "time.time", "sess.run", "tf.summary.FileWriter.add_summary", "sess.run", "tf.summary.FileWriter.add_summary", "str", "utils_fn.create_validation_mask", "utils_fn.create_validation_mask", "str", "str", "str", "str", "str", "str", "time.asctime().split", "time.asctime().split", "str", "time.asctime", "time.asctime"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.train_inpaint_model.multi_gpu_setting", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.train_inpaint_model.single_gpu_setting", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.show_all_variables", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_val_img_scale_edge", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.build_validation_model", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.dataset_len", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_validation_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.save", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.create_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.create_validation_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.create_validation_mask"], ["", "def", "main", "(", ")", ":", "\n", "    ", "\"\"\"\n    Training\n    \"\"\"", "\n", "# Load config file for run an inpainting model", "\n", "args", "=", "Config", "(", "'inpaint_config.yml'", ")", "\n", "\n", "# GPU config", "\n", "gpu_ids", "=", "args", ".", "GPU_ID", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "','", ".", "join", "(", "[", "str", "(", "gpu", ")", "for", "gpu", "in", "gpu_ids", "]", ")", "# default \"2\"", "\n", "# os.environ[\"CUDA_VISIBLE_DEVICES\"] = select_gpu()", "\n", "config_gpu", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config_gpu", ".", "gpu_options", ".", "allow_growth", "=", "True", "# allow memory grow", "\n", "config_gpu", ".", "allow_soft_placement", "=", "True", "\n", "# config_gpu.log_device_placement = True", "\n", "\n", "# log setting", "\n", "logging", ".", "basicConfig", "(", "level", "=", "logging", ".", "INFO", ",", "format", "=", "'%(asctime)s - %(name)s - %(levelname)s - %(message)s'", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "\"YOUNG\"", ")", "\n", "logger", ".", "setLevel", "(", "level", "=", "logging", ".", "INFO", ")", "\n", "\n", "\"\"\" Build Inpaint Model with Loss and Optimizer\"\"\"", "\n", "# Model and training setting", "\n", "model", "=", "InpaintModel", "(", "args", ")", "\n", "if", "args", ".", "NUM_GPUS", ">", "1", "or", "len", "(", "args", ".", "GPU_ID", ")", ">", "1", ":", "# multi-gpu", "\n", "        ", "logger", ".", "info", "(", "\"Build Inpaint Model with Loss and Optimizer in Multi-GPU setting.\"", ")", "\n", "g_train256_op", ",", "d_train256_op", ",", "images_edges", ",", "masks", ",", "all_sum_256", "=", "multi_gpu_setting", "(", "model", ",", "args", ")", "\n", "", "else", ":", "# cpu or single gpu", "\n", "        ", "logger", ".", "info", "(", "\"Build Inpaint Model with Loss and Optimizer in Single-GPU or CPU setting.\"", ")", "\n", "g_train256_op", ",", "d_train256_op", ",", "images_edges", ",", "masks", ",", "all_sum_256", "=", "single_gpu_setting", "(", "model", ",", "args", ")", "\n", "\n", "# If validation?", "\n", "", "if", "args", ".", "VAL", ":", "\n", "        ", "logger", ".", "info", "(", "\"Build Validation Model.\"", ")", "\n", "with", "tf", ".", "device", "(", "'/cpu:0'", ")", ":", "\n", "# images", "\n", "            ", "images_edges_val", ",", "img_iterator_val", "=", "load_val_img_scale_edge", "(", "args", ")", "\n", "# masks", "\n", "if", "args", ".", "MASK_MODE", "==", "'irregular'", ":", "\n", "                ", "masks_val", ",", "mask_iterator_val", "=", "load_validation_mask", "(", "args", ")", "\n", "", "else", ":", "\n", "                ", "masks_val", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "args", ".", "VAL_NUM", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ",", "\n", "name", "=", "'val_regular_masks'", ")", "\n", "", "model", ".", "build_validation_model", "(", "images_edges_val", ",", "masks_val", ",", "args", ")", "\n", "\n", "", "", "\"\"\" Train Logic\"\"\"", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config_gpu", ")", "as", "sess", ":", "\n", "\n", "# Model dir", "\n", "# If restore a specific model", "\n", "        ", "if", "args", ".", "MODEL_RESTORE", "==", "''", ":", "\n", "            ", "args", ".", "MODEL_DIR", "=", "'-'", ".", "join", "(", "time", ".", "asctime", "(", ")", ".", "split", "(", ")", ")", "+", "\"_GPU\"", "+", "'-'", ".", "join", "(", "[", "str", "(", "gpu", ")", "for", "gpu", "in", "gpu_ids", "]", ")", "+", "\"_\"", "+", "args", ".", "DATASET", "+", "\"_\"", "+", "args", ".", "GAN_TYPE", "+", "'_'", "+", "str", "(", "args", ".", "GAN_LOSS_TYPE", ")", "+", "str", "(", "args", ".", "PATCH_GAN_ALPHA", ")", "+", "\"_\"", "+", "\"L1\"", "+", "str", "(", "args", ".", "L1_FORE_ALPHA", ")", "+", "\"_\"", "+", "str", "(", "args", ".", "L1_BACK_ALPHA", ")", "+", "\"_\"", "+", "\"C\"", "+", "str", "(", "args", ".", "CONTENT_FORE_ALPHA", ")", "+", "\"_\"", "+", "\"S\"", "+", "str", "(", "args", ".", "STYLE_FORE_ALPHA", ")", "+", "\"_\"", "+", "\"T\"", "+", "str", "(", "args", ".", "TV_ALPHA", ")", "+", "\"_\"", "+", "args", ".", "PADDING", "+", "'_Deep_MT'", "+", "\"_\"", "+", "str", "(", "args", ".", "ALPHA", ")", "\n", "", "else", ":", "\n", "            ", "args", ".", "MODEL_DIR", "=", "args", ".", "MODEL_RESTORE", "\n", "\n", "# Checkpoint dir", "\n", "", "checkpoint_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "CHECKPOINT_DIR", ",", "args", ".", "MODEL_DIR", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "checkpoint_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "checkpoint_dir", ")", "\n", "\n", "# Sample dir", "\n", "", "sample_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "SAMPLE_DIR", ",", "args", ".", "MODEL_DIR", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "sample_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "sample_dir", ")", "\n", "\n", "# Summary writer", "\n", "", "writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "args", ".", "LOG_DIR", "+", "'/'", "+", "args", ".", "MODEL_DIR", ",", "sess", ".", "graph", ")", "\n", "\n", "# Saver to save model: to save variables", "\n", "# TODO: we can choose variables to store and steps to keep (max_to_keep)", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "\n", "# Initialize all the variables", "\n", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "# Show network architecture", "\n", "show_all_variables", "(", ")", "\n", "\n", "# Try to restore model", "\n", "ckpt", "=", "tf", ".", "train", ".", "get_checkpoint_state", "(", "checkpoint_dir", ")", "# get checkpoint and restore training", "\n", "if", "ckpt", "and", "ckpt", ".", "model_checkpoint_path", ":", "\n", "# print ckpt name with dir", "\n", "            ", "logger", ".", "info", "(", "\"Latest ckpt: {}\"", ".", "format", "(", "ckpt", ".", "model_checkpoint_path", ")", ")", "\n", "logger", ".", "info", "(", "\"All ckpt: {}\"", ".", "format", "(", "ckpt", ".", "all_model_checkpoint_paths", ")", ")", "\n", "# ckpt base name", "\n", "ckpt_name", "=", "os", ".", "path", ".", "basename", "(", "ckpt", ".", "model_checkpoint_path", ")", "\n", "# restore", "\n", "# saver.restore(sess, os.path.join(checkpoint_dir, ckpt_name))  # restore", "\n", "vars_list", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "GLOBAL_VARIABLES", ")", "\n", "\n", "assign_ops", "=", "[", "]", "\n", "for", "var", "in", "vars_list", ":", "\n", "                ", "vname", "=", "var", ".", "name", "\n", "from_name", "=", "vname", "\n", "try", ":", "\n", "                    ", "var_value", "=", "tf", ".", "contrib", ".", "framework", ".", "load_variable", "(", "os", ".", "path", ".", "join", "(", "checkpoint_dir", ",", "ckpt_name", ")", ",", "from_name", ")", "\n", "assign_ops", ".", "append", "(", "tf", ".", "assign", "(", "var", ",", "var_value", ")", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "continue", "\n", "", "", "sess", ".", "run", "(", "assign_ops", ")", "\n", "print", "(", "'Model loaded.'", ")", "\n", "\n", "counter", "=", "int", "(", "next", "(", "re", ".", "finditer", "(", "\"\\d+\"", ",", "ckpt_name", ")", ")", ".", "group", "(", "0", ")", ")", "\n", "logger", ".", "info", "(", "\" [*] Success to read {}\"", ".", "format", "(", "ckpt_name", ")", ")", "\n", "", "else", ":", "\n", "            ", "counter", "=", "0", "\n", "logger", ".", "info", "(", "\" [*] Failed to find a checkpoint\"", ")", "\n", "\n", "# Parameters", "\n", "", "imgh", "=", "args", ".", "IMG_SHAPES", "[", "0", "]", "\n", "imgw", "=", "args", ".", "IMG_SHAPES", "[", "1", "]", "\n", "\n", "max_step", "=", "dataset_len", "(", "args", ")", "//", "(", "args", ".", "BATCH_SIZE", "*", "args", ".", "NUM_GPUS", ")", "# max step for each epoch", "\n", "last_step", "=", "int", "(", "args", ".", "EPOCH", "*", "max_step", ")", "# total steps", "\n", "max_iter", "=", "last_step", "*", "args", ".", "BATCH_SIZE", "*", "args", ".", "NUM_GPUS", "# max iteration when batch size is 1", "\n", "\n", "# continue to train", "\n", "if", "counter", "<", "last_step", ":", "\n", "            ", "current_epoch", "=", "counter", "//", "max_step", "\n", "current_step", "=", "counter", "%", "max_step", "+", "1", "# TODO: may not right here?", "\n", "logger", ".", "info", "(", "\"Start Training...\"", ")", "\n", "logger", ".", "info", "(", "\n", "\"Total Epoch {}, Iteration per Epoch {}, Max Iteration {}, Max Iteration (batch_size=1) {}.\"", ".", "format", "(", "\n", "args", ".", "EPOCH", ",", "max_step", ",", "last_step", ",", "max_iter", ")", ")", "\n", "logger", ".", "info", "(", "\"Epoch Start {} at step {}\"", ".", "format", "(", "current_epoch", ",", "current_step", ")", ")", "\n", "\n", "# not continue to train", "\n", "", "else", ":", "\n", "            ", "current_step", "=", "0", "\n", "current_epoch", "=", "args", ".", "EPOCH", "\n", "\n", "", "count", "=", "1", "+", "counter", "\n", "for", "epoch", "in", "range", "(", "current_epoch", ",", "args", ".", "EPOCH", ")", ":", "\n", "            ", "logger", ".", "info", "(", "\"Epoch {}:\"", ".", "format", "(", "epoch", ")", ")", "\n", "time_start", "=", "time", ".", "time", "(", ")", "\n", "time_s", "=", "time_start", "\n", "for", "step", "in", "range", "(", "current_step", ",", "max_step", "+", "1", ")", ":", "\n", "\n", "# save", "\n", "                ", "if", "count", "%", "args", ".", "SAVE_FREQ", "==", "0", "or", "count", "==", "last_step", ":", "\n", "                    ", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "checkpoint_dir", ",", "model", ".", "model_name", "+", "'.model'", ")", ",", "global_step", "=", "count", ",", "write_meta_graph", "=", "False", ")", "\n", "\n", "", "if", "args", ".", "MASK_MODE", "==", "'irregular'", ":", "\n", "# logs", "\n", "                    ", "if", "count", "%", "args", ".", "LOG_FREQ", "==", "0", "or", "count", "==", "last_step", ":", "\n", "                        ", "all_sum", "=", "sess", ".", "run", "(", "model", ".", "all_sum", ")", "\n", "writer", ".", "add_summary", "(", "all_sum", ",", "count", ")", "\n", "# train step", "\n", "", "sess", ".", "run", "(", "[", "d_train256_op", ",", "g_train256_op", "]", ")", "\n", "", "else", ":", "\n", "                    ", "mask", "=", "create_mask", "(", "imgw", ",", "imgh", ",", "imgw", "//", "2", ",", "imgh", "//", "2", ",", "delta", "=", "0", ")", "# random block with hole size (imgw // 2, imgh // 2)", "\n", "# logs", "\n", "if", "count", "%", "args", ".", "LOG_FREQ", "==", "0", "or", "count", "==", "last_step", ":", "\n", "                        ", "all_sum", "=", "sess", ".", "run", "(", "model", ".", "all_sum", ",", "feed_dict", "=", "{", "masks", ":", "mask", "}", ")", "\n", "writer", ".", "add_summary", "(", "all_sum", ",", "count", ")", "\n", "# train step", "\n", "", "sess", ".", "run", "(", "[", "d_train256_op", ",", "g_train256_op", "]", ",", "feed_dict", "=", "{", "masks", ":", "mask", "}", ")", "\n", "\n", "# validation", "\n", "", "if", "args", ".", "VAL", ":", "\n", "                    ", "if", "count", "%", "args", ".", "VAL_FREQ", "==", "0", "or", "count", "==", "last_step", ":", "\n", "                        ", "sess", ".", "run", "(", "img_iterator_val", ".", "initializer", ")", "\n", "\n", "if", "args", ".", "MASK_MODE", "==", "'irregular'", ":", "\n", "                            ", "sess", ".", "run", "(", "mask_iterator_val", ".", "initializer", ")", "\n", "try", ":", "\n", "                                ", "val_all_sum", "=", "sess", ".", "run", "(", "model", ".", "val_all_sum_256", ")", "\n", "\n", "writer", ".", "add_summary", "(", "val_all_sum", ",", "count", ")", "\n", "", "except", "tf", ".", "errors", ".", "OutOfRangeError", ":", "\n", "                                ", "break", "\n", "", "", "else", ":", "\n", "                            ", "try", ":", "\n", "                                ", "if", "args", ".", "STATIC_VIEW", ":", "\n", "                                    ", "mask", "=", "create_validation_mask", "(", "imgw", ",", "imgh", ",", "imgw", "//", "2", ",", "imgh", "//", "2", ",", "args", ",", "imgw", "//", "4", ",", "imgh", "//", "4", ")", "\n", "", "else", ":", "\n", "                                    ", "mask", "=", "create_validation_mask", "(", "imgw", ",", "imgh", ",", "imgw", "//", "2", ",", "imgh", "//", "2", ",", "args", ",", "delta", "=", "0", ")", "\n", "", "val_all_sum", "=", "sess", ".", "run", "(", "model", ".", "val_all_sum_256", ",", "feed_dict", "=", "{", "masks_val", ":", "mask", "}", ")", "\n", "\n", "writer", ".", "add_summary", "(", "val_all_sum", ",", "count", ")", "\n", "", "except", "tf", ".", "errors", ".", "OutOfRangeError", ":", "\n", "                                ", "break", "\n", "\n", "# logger info", "\n", "", "", "", "", "if", "count", "%", "args", ".", "PRINT_FREQ", "==", "0", "or", "count", "==", "last_step", ":", "\n", "                    ", "time_cost", "=", "(", "time", ".", "time", "(", ")", "-", "time_start", ")", "/", "args", ".", "PRINT_FREQ", "\n", "time_remaining", "=", "(", "last_step", "-", "count", ")", "*", "time_cost", "/", "3600.", "\n", "logger", ".", "info", "(", "'epoch {}/{}, step {}/{}, cost {:.2f}s, remaining {:.2f}h.'", ".", "format", "(", "epoch", ",", "args", ".", "EPOCH", ",", "step", ",", "max_step", ",", "time_cost", ",", "time_remaining", ")", ")", "\n", "time_start", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "current_step", "=", "0", "\n", "count", "+=", "1", "\n", "\n", "", "logger", ".", "info", "(", "'epoch {}/{}, cost {:.2f}min.'", ".", "format", "(", "epoch", ",", "args", ".", "EPOCH", ",", "(", "time", ".", "time", "(", ")", "-", "time_s", ")", "/", "60", ")", ")", "\n", "\n", "", "logger", ".", "info", "(", "\"Finish.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.API.__init__": [[252, 258], ["os.path.join", "frechet_inception_distance.check_or_download_inception", "tensorflow.get_default_session", "frechet_inception_distance.create_inception_graph"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.check_or_download_inception", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.create_inception_graph"], ["    ", "def", "__init__", "(", "self", ",", "num_images", ",", "image_shape", ",", "image_dtype", ",", "minibatch_size", ")", ":", "\n", "        ", "import", "config", "\n", "self", ".", "network_dir", "=", "os", ".", "path", ".", "join", "(", "config", ".", "result_dir", ",", "'_inception_fid'", ")", "\n", "self", ".", "network_file", "=", "check_or_download_inception", "(", "self", ".", "network_dir", ")", "\n", "self", ".", "sess", "=", "tf", ".", "get_default_session", "(", ")", "\n", "create_inception_graph", "(", "self", ".", "network_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.API.get_metric_names": [[259, 261], ["None"], "methods", ["None"], ["", "def", "get_metric_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'FID'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.API.get_metric_formatting": [[262, 264], ["None"], "methods", ["None"], ["", "def", "get_metric_formatting", "(", "self", ")", ":", "\n", "        ", "return", "[", "'%-10.4f'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.API.begin": [[265, 268], ["None"], "methods", ["None"], ["", "def", "begin", "(", "self", ",", "mode", ")", ":", "\n", "        ", "assert", "mode", "in", "[", "'warmup'", ",", "'reals'", ",", "'fakes'", "]", "\n", "self", ".", "activations", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.API.feed": [[269, 272], ["frechet_inception_distance.get_activations", "frechet_inception_distance.API.activations.append", "minibatch.transpose"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.get_activations"], ["", "def", "feed", "(", "self", ",", "mode", ",", "minibatch", ")", ":", "\n", "        ", "act", "=", "get_activations", "(", "minibatch", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", ",", "self", ".", "sess", ",", "batch_size", "=", "minibatch", ".", "shape", "[", "0", "]", ")", "\n", "self", ".", "activations", ".", "append", "(", "act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.API.end": [[273, 282], ["numpy.concatenate", "numpy.mean", "numpy.cov", "frechet_inception_distance.calculate_frechet_distance"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.calculate_frechet_distance"], ["", "def", "end", "(", "self", ",", "mode", ")", ":", "\n", "        ", "act", "=", "np", ".", "concatenate", "(", "self", ".", "activations", ")", "\n", "mu", "=", "np", ".", "mean", "(", "act", ",", "axis", "=", "0", ")", "\n", "sigma", "=", "np", ".", "cov", "(", "act", ",", "rowvar", "=", "False", ")", "\n", "if", "mode", "in", "[", "'warmup'", ",", "'reals'", "]", ":", "\n", "            ", "self", ".", "mu_real", "=", "mu", "\n", "self", ".", "sigma_real", "=", "sigma", "\n", "", "fid", "=", "calculate_frechet_distance", "(", "mu", ",", "sigma", ",", "self", ".", "mu_real", ",", "self", ".", "sigma_real", ")", "\n", "return", "[", "fid", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.create_inception_graph": [[52, 59], ["tensorflow.gfile.FastGFile", "tensorflow.GraphDef", "tf.GraphDef.ParseFromString", "tensorflow.import_graph_def", "f.read"], "function", ["None"], ["", "def", "create_inception_graph", "(", "pth", ")", ":", "\n", "    ", "\"\"\"Creates a graph from saved GraphDef file.\"\"\"", "\n", "# Creates graph from saved graph_def.pb.", "\n", "with", "tf", ".", "gfile", ".", "FastGFile", "(", "pth", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "graph_def", "=", "tf", ".", "GraphDef", "(", ")", "\n", "graph_def", ".", "ParseFromString", "(", "f", ".", "read", "(", ")", ")", "\n", "_", "=", "tf", ".", "import_graph_def", "(", "graph_def", ",", "name", "=", "'FID_Inception_Net'", ")", "\n", "#-------------------------------------------------------------------------------", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance._get_inception_layer": [[64, 85], ["sess.graph.get_tensor_by_name", "sess.graph.get_tensor_by_name.graph.get_operations", "enumerate", "o.get_shape", "enumerate", "tensorflow.TensorShape", "new_shape.append", "new_shape.append", "tensorflow.TensorShape"], "function", ["None"], ["", "", "def", "_get_inception_layer", "(", "sess", ")", ":", "\n", "    ", "\"\"\"Prepares inception net for batched usage and returns pool_3 layer. \"\"\"", "\n", "layername", "=", "'FID_Inception_Net/pool_3:0'", "\n", "pool3", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "layername", ")", "\n", "ops", "=", "pool3", ".", "graph", ".", "get_operations", "(", ")", "\n", "for", "op_idx", ",", "op", "in", "enumerate", "(", "ops", ")", ":", "\n", "        ", "for", "o", "in", "op", ".", "outputs", ":", "\n", "            ", "shape", "=", "o", ".", "get_shape", "(", ")", "\n", "if", "shape", ".", "_dims", "is", "not", "None", ":", "\n", "              ", "shape", "=", "[", "s", ".", "value", "for", "s", "in", "shape", "]", "\n", "new_shape", "=", "[", "]", "\n", "for", "j", ",", "s", "in", "enumerate", "(", "shape", ")", ":", "\n", "                ", "if", "s", "==", "1", "and", "j", "==", "0", ":", "\n", "                  ", "new_shape", ".", "append", "(", "None", ")", "\n", "", "else", ":", "\n", "                  ", "new_shape", ".", "append", "(", "s", ")", "\n", "", "", "try", ":", "\n", "                ", "o", ".", "_shape", "=", "tf", ".", "TensorShape", "(", "new_shape", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "o", ".", "_shape_val", "=", "tf", ".", "TensorShape", "(", "new_shape", ")", "# EDIT: added for compatibility with tensorflow 1.6.0", "\n", "", "", "", "", "return", "pool3", "\n", "#-------------------------------------------------------------------------------", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.get_activations": [[88, 122], ["frechet_inception_distance._get_inception_layer", "numpy.empty", "range", "print", "sess.run", "sess.run.reshape", "print", "print"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance._get_inception_layer"], ["", "def", "get_activations", "(", "images", ",", "sess", ",", "batch_size", "=", "50", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "\"\"\"Calculates the activations of the pool_3 layer for all images.\n\n    Params:\n    -- images      : Numpy array of dimension (n_images, hi, wi, 3). The values\n                     must lie between 0 and 256.\n    -- sess        : current session\n    -- batch_size  : the images numpy array is split into batches with batch size\n                     batch_size. A reasonable batch size depends on the disposable hardware.\n    -- verbose    : If set to True and parameter out_step is given, the number of calculated\n                     batches is reported.\n    Returns:\n    -- A numpy array of dimension (num images, 2048) that contains the\n       activations of the given tensor when feeding inception with the query tensor.\n    \"\"\"", "\n", "inception_layer", "=", "_get_inception_layer", "(", "sess", ")", "\n", "d0", "=", "images", ".", "shape", "[", "0", "]", "\n", "if", "batch_size", ">", "d0", ":", "\n", "        ", "print", "(", "\"warning: batch size is bigger than the data size. setting batch size to data size\"", ")", "\n", "batch_size", "=", "d0", "\n", "", "n_batches", "=", "d0", "//", "batch_size", "\n", "n_used_imgs", "=", "n_batches", "*", "batch_size", "\n", "pred_arr", "=", "np", ".", "empty", "(", "(", "n_used_imgs", ",", "2048", ")", ")", "\n", "for", "i", "in", "range", "(", "n_batches", ")", ":", "\n", "        ", "if", "verbose", ":", "\n", "            ", "print", "(", "\"\\rPropagating batch %d/%d\"", "%", "(", "i", "+", "1", ",", "n_batches", ")", ",", "end", "=", "\"\"", ",", "flush", "=", "True", ")", "\n", "", "start", "=", "i", "*", "batch_size", "\n", "end", "=", "start", "+", "batch_size", "\n", "batch", "=", "images", "[", "start", ":", "end", "]", "\n", "pred", "=", "sess", ".", "run", "(", "inception_layer", ",", "{", "'FID_Inception_Net/ExpandDims:0'", ":", "batch", "}", ")", "\n", "pred_arr", "[", "start", ":", "end", "]", "=", "pred", ".", "reshape", "(", "batch_size", ",", "-", "1", ")", "\n", "", "if", "verbose", ":", "\n", "        ", "print", "(", "\" done\"", ")", "\n", "", "return", "pred_arr", "\n", "#-------------------------------------------------------------------------------", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.calculate_frechet_distance": [[125, 153], ["numpy.square().sum", "scipy.linalg.sqrtm", "numpy.real", "numpy.dot", "numpy.trace", "numpy.square"], "function", ["None"], ["", "def", "calculate_frechet_distance", "(", "mu1", ",", "sigma1", ",", "mu2", ",", "sigma2", ")", ":", "\n", "    ", "\"\"\"Numpy implementation of the Frechet Distance.\n    The Frechet distance between two multivariate Gaussians X_1 ~ N(mu_1, C_1)\n    and X_2 ~ N(mu_2, C_2) is\n            d^2 = ||mu_1 - mu_2||^2 + Tr(C_1 + C_2 - 2*sqrt(C_1*C_2)).\n\n    Params:\n    -- mu1 : Numpy array containing the activations of the pool_3 layer of the\n             inception net ( like returned by the function 'get_predictions')\n    -- mu2   : The sample mean over activations of the pool_3 layer, precalcualted\n               on an representive data set.\n    -- sigma2: The covariance matrix over activations of the pool_3 layer,\n               precalcualted on an representive data set.\n\n    Returns:\n    -- dist  : The Frechet Distance.\n\n    Raises:\n    -- InvalidFIDException if nan occures.\n    \"\"\"", "\n", "m", "=", "np", ".", "square", "(", "mu1", "-", "mu2", ")", ".", "sum", "(", ")", "\n", "#s = sp.linalg.sqrtm(np.dot(sigma1, sigma2)) # EDIT: commented out", "\n", "s", ",", "_", "=", "sp", ".", "linalg", ".", "sqrtm", "(", "np", ".", "dot", "(", "sigma1", ",", "sigma2", ")", ",", "disp", "=", "False", ")", "# EDIT: added", "\n", "dist", "=", "m", "+", "np", ".", "trace", "(", "sigma1", "+", "sigma2", "-", "2", "*", "s", ")", "\n", "#if np.isnan(dist): # EDIT: commented out", "\n", "#    raise InvalidFIDException(\"nan occured in distance calculation.\") # EDIT: commented out", "\n", "#return dist # EDIT: commented out", "\n", "return", "np", ".", "real", "(", "dist", ")", "# EDIT: added", "\n", "#-------------------------------------------------------------------------------", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.calculate_activation_statistics": [[156, 176], ["frechet_inception_distance.get_activations", "numpy.mean", "numpy.cov"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.get_activations"], ["", "def", "calculate_activation_statistics", "(", "images", ",", "sess", ",", "batch_size", "=", "50", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "\"\"\"Calculation of the statistics used by the FID.\n    Params:\n    -- images      : Numpy array of dimension (n_images, hi, wi, 3). The values\n                     must lie between 0 and 255.\n    -- sess        : current session\n    -- batch_size  : the images numpy array is split into batches with batch size\n                     batch_size. A reasonable batch size depends on the available hardware.\n    -- verbose     : If set to True and parameter out_step is given, the number of calculated\n                     batches is reported.\n    Returns:\n    -- mu    : The mean over samples of the activations of the pool_3 layer of\n               the incption model.\n    -- sigma : The covariance matrix of the activations of the pool_3 layer of\n               the incption model.\n    \"\"\"", "\n", "act", "=", "get_activations", "(", "images", ",", "sess", ",", "batch_size", ",", "verbose", ")", "\n", "mu", "=", "np", ".", "mean", "(", "act", ",", "axis", "=", "0", ")", "\n", "sigma", "=", "np", ".", "cov", "(", "act", ",", "rowvar", "=", "False", ")", "\n", "return", "mu", ",", "sigma", "\n", "#-------------------------------------------------------------------------------", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.check_or_download_inception": [[184, 200], ["pathlib.Path", "str", "model_file.exists", "print", "request.urlretrieve", "tarfile.open", "f.extract", "str"], "function", ["None"], ["", "def", "check_or_download_inception", "(", "inception_path", ")", ":", "\n", "    ", "''' Checks if the path to the inception file is valid, or downloads\n        the file if it is not present. '''", "\n", "INCEPTION_URL", "=", "'http://download.tensorflow.org/models/image/imagenet/inception-2015-12-05.tgz'", "\n", "if", "inception_path", "is", "None", ":", "\n", "        ", "inception_path", "=", "'/tmp'", "\n", "", "inception_path", "=", "pathlib", ".", "Path", "(", "inception_path", ")", "\n", "model_file", "=", "inception_path", "/", "'classify_image_graph_def.pb'", "\n", "if", "not", "model_file", ".", "exists", "(", ")", ":", "\n", "        ", "print", "(", "\"Downloading Inception model\"", ")", "\n", "from", "urllib", "import", "request", "\n", "import", "tarfile", "\n", "fn", ",", "_", "=", "request", ".", "urlretrieve", "(", "INCEPTION_URL", ")", "\n", "with", "tarfile", ".", "open", "(", "fn", ",", "mode", "=", "'r'", ")", "as", "f", ":", "\n", "            ", "f", ".", "extract", "(", "'classify_image_graph_def.pb'", ",", "str", "(", "model_file", ".", "parent", ")", ")", "\n", "", "", "return", "str", "(", "model_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance._handle_path": [[202, 213], ["pathlib.Path.endswith", "numpy.load", "np.load.close", "pathlib.Path", "numpy.array", "frechet_inception_distance.calculate_activation_statistics", "list", "list", "pathlib.Path.glob", "pathlib.Path.glob", "scipy.misc.imread().astype", "scipy.misc.imread", "str"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.load", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.calculate_activation_statistics"], ["", "def", "_handle_path", "(", "path", ",", "sess", ")", ":", "\n", "    ", "if", "path", ".", "endswith", "(", "'.npz'", ")", ":", "\n", "        ", "f", "=", "np", ".", "load", "(", "path", ")", "\n", "m", ",", "s", "=", "f", "[", "'mu'", "]", "[", ":", "]", ",", "f", "[", "'sigma'", "]", "[", ":", "]", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "path", "=", "pathlib", ".", "Path", "(", "path", ")", "\n", "files", "=", "list", "(", "path", ".", "glob", "(", "'*.jpg'", ")", ")", "+", "list", "(", "path", ".", "glob", "(", "'*.png'", ")", ")", "\n", "x", "=", "np", ".", "array", "(", "[", "imread", "(", "str", "(", "fn", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "for", "fn", "in", "files", "]", ")", "\n", "m", ",", "s", "=", "calculate_activation_statistics", "(", "x", ",", "sess", ")", "\n", "", "return", "m", ",", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.calculate_fid_given_paths": [[215, 232], ["frechet_inception_distance.check_or_download_inception", "frechet_inception_distance.create_inception_graph", "str", "tensorflow.Session", "sess.run", "frechet_inception_distance._handle_path", "frechet_inception_distance._handle_path", "frechet_inception_distance.calculate_frechet_distance", "os.path.exists", "RuntimeError", "tensorflow.global_variables_initializer"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.check_or_download_inception", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.create_inception_graph", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance._handle_path", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance._handle_path", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.calculate_frechet_distance"], ["", "def", "calculate_fid_given_paths", "(", "paths", ",", "inception_path", ")", ":", "\n", "    ", "''' Calculates the FID of two paths. '''", "\n", "inception_path", "=", "check_or_download_inception", "(", "inception_path", ")", "\n", "\n", "for", "p", "in", "paths", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "p", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Invalid path: %s\"", "%", "p", ")", "\n", "\n", "", "", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "'1'", "\n", "\n", "create_inception_graph", "(", "str", "(", "inception_path", ")", ")", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "m1", ",", "s1", "=", "_handle_path", "(", "paths", "[", "0", "]", ",", "sess", ")", "\n", "m2", ",", "s2", "=", "_handle_path", "(", "paths", "[", "1", "]", ",", "sess", ")", "\n", "fid_value", "=", "calculate_frechet_distance", "(", "m1", ",", "s1", ",", "m2", ",", "s2", ")", "\n", "return", "fid_value", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.config.LoaderMeta.__new__": [[12, 18], ["type.__new__", "super().__new__.add_constructor"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.LoaderMeta.__new__"], ["def", "__new__", "(", "mcs", ",", "__name__", ",", "__bases__", ",", "__dict__", ")", ":", "\n", "        ", "\"\"\"Add include constructer to class.\"\"\"", "\n", "# register the include constructor on the class", "\n", "cls", "=", "super", "(", ")", ".", "__new__", "(", "mcs", ",", "__name__", ",", "__bases__", ",", "__dict__", ")", "\n", "cls", ".", "add_constructor", "(", "'!include'", ",", "cls", ".", "construct_include", ")", "\n", "return", "cls", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.config.Loader.__init__": [[23, 29], ["yaml.Loader.__init__", "os.path.split"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.__init__"], ["def", "__init__", "(", "self", ",", "stream", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "self", ".", "_root", "=", "os", ".", "path", ".", "split", "(", "stream", ".", "name", ")", "[", "0", "]", "\n", "", "except", "AttributeError", ":", "\n", "            ", "self", ".", "_root", "=", "os", ".", "path", ".", "curdir", "\n", "", "super", "(", ")", ".", "__init__", "(", "stream", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.config.Loader.construct_include": [[30, 40], ["os.path.abspath", "[].lstrip", "os.path.join", "open", "config.Loader.construct_scalar", "yaml.load", "os.path.splitext", "f.readlines"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.load"], ["", "def", "construct_include", "(", "self", ",", "node", ")", ":", "\n", "        ", "\"\"\"Include file referenced at node.\"\"\"", "\n", "filename", "=", "os", ".", "path", ".", "abspath", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "_root", ",", "self", ".", "construct_scalar", "(", "node", ")", ")", ")", "\n", "extension", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "[", "1", "]", ".", "lstrip", "(", "'.'", ")", "\n", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "if", "extension", "in", "(", "'yaml'", ",", "'yml'", ")", ":", "\n", "                ", "return", "yaml", ".", "load", "(", "f", ",", "Loader", ")", "\n", "", "else", ":", "\n", "                ", "return", "''", ".", "join", "(", "f", ".", "readlines", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.config.DictAsMember.__getattr__": [[45, 50], ["isinstance", "config.DictAsMember"], "methods", ["None"], ["def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "value", "=", "self", "[", "name", "]", "\n", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "            ", "value", "=", "DictAsMember", "(", "value", ")", "\n", "", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.config.Config.__init__": [[70, 81], ["os.path.exists", "logger.info", "config.Config.show", "logger.info", "open", "yaml.load", "logger.error"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.Config.show", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.load"], ["def", "__init__", "(", "self", ",", "filename", "=", "None", ")", ":", "\n", "        ", "assert", "os", ".", "path", ".", "exists", "(", "filename", ")", ",", "\"ERROR: Config File doesn't exist.\"", "\n", "try", ":", "\n", "            ", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "_cfg_dict", "=", "yaml", ".", "load", "(", "f", ",", "Loader", ")", "\n", "# parent of IOError, OSError *and* WindowsError where available", "\n", "", "", "except", "EnvironmentError", ":", "\n", "            ", "logger", ".", "error", "(", "'Please check the file with name of \"%s\"'", ",", "filename", ")", "\n", "", "logger", ".", "info", "(", "' APP CONFIG '", ".", "center", "(", "80", ",", "'-'", ")", ")", "\n", "self", ".", "show", "(", ")", "\n", "logger", ".", "info", "(", "''", ".", "center", "(", "80", ",", "'-'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.config.Config.__getattr__": [[82, 87], ["isinstance", "config.DictAsMember"], "methods", ["None"], ["", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "value", "=", "self", ".", "_cfg_dict", "[", "name", "]", "\n", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "            ", "value", "=", "DictAsMember", "(", "value", ")", "\n", "", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.config.Config.show": [[88, 107], ["isinstance", "str_list.append", "str_list.append", "logger.info", "config.Config.show", "str_list.append", "str_list.append", "str_list.append", "logger.info", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.Config.show"], ["", "def", "show", "(", "self", ",", "cfg_dict", "=", "None", ",", "indent", "=", "0", ")", ":", "\n", "        ", "if", "cfg_dict", "is", "None", ":", "\n", "            ", "cfg_dict", "=", "self", ".", "_cfg_dict", "\n", "", "for", "key", "in", "cfg_dict", ":", "\n", "            ", "value", "=", "cfg_dict", "[", "key", "]", "\n", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "                ", "str_list", "=", "[", "'  '", "]", "*", "indent", "\n", "str_list", ".", "append", "(", "str", "(", "key", ")", ")", "\n", "str_list", ".", "append", "(", "': '", ")", "\n", "logger", ".", "info", "(", "''", ".", "join", "(", "str_list", ")", ")", "\n", "indent", "=", "indent", "+", "1", "\n", "indent", "=", "self", ".", "show", "(", "value", ",", "indent", ")", "\n", "", "else", ":", "\n", "                ", "str_list", "=", "[", "'  '", "]", "*", "indent", "\n", "str_list", ".", "append", "(", "str", "(", "key", ")", ")", "\n", "str_list", ".", "append", "(", "': '", ")", "\n", "str_list", ".", "append", "(", "str", "(", "value", ")", ")", "\n", "logger", ".", "info", "(", "''", ".", "join", "(", "str_list", ")", ")", "\n", "", "", "return", "indent", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.config.select_gpu": [[110, 137], ["pynvml.nvmlInit", "pynvml.nvmlDeviceGetCount", "list", "range", "str", "range", "len", "pynvml.nvmlDeviceGetHandleByIndex", "pynvml.nvmlDeviceGetMemoryInfo"], "function", ["None"], ["", "", "def", "select_gpu", "(", ")", ":", "\n", "    ", "\"\"\"\n    Finding the gpu number with min used memory.\n\n    Args:\n        None\n\n    Returns:\n        GPU number with min used memory (or with max free memory). string\n    \"\"\"", "\n", "import", "pynvml", "\n", "pynvml", ".", "nvmlInit", "(", ")", "\n", "\n", "gpu_count", "=", "pynvml", ".", "nvmlDeviceGetCount", "(", ")", "# number of gpu", "\n", "gpu_devices", "=", "list", "(", "range", "(", "gpu_count", ")", ")", "# serial number of gpu devices", "\n", "\n", "# Select GPU with min used memory", "\n", "max_memo", "=", "24", "*", "1024", "*", "1024", "*", "1024", "\n", "gpu_selected", "=", "gpu_devices", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "gpu_devices", ")", ")", ":", "\n", "        ", "handle", "=", "pynvml", ".", "nvmlDeviceGetHandleByIndex", "(", "gpu_devices", "[", "i", "]", ")", "\n", "meminfo", "=", "pynvml", ".", "nvmlDeviceGetMemoryInfo", "(", "handle", ")", "\n", "if", "meminfo", ".", "used", "<=", "max_memo", ":", "\n", "            ", "max_memo", "=", "meminfo", ".", "used", "\n", "gpu_selected", "=", "gpu_devices", "[", "i", "]", "\n", "\n", "", "", "return", "str", "(", "gpu_selected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.gen_conv": [[8, 62], ["int", "tensorflow.pad", "tensorflow.layers.conv2d", "tensorflow.contrib.layers.instance_norm", "activation", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.get_variable", "tensorflow.nn.bias_add", "ops.spectral_norm", "tensorflow.constant_initializer", "tf.nn.bias_add.get_shape"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.spectral_norm"], ["@", "add_arg_scope", "\n", "def", "gen_conv", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", "=", "1", ",", "rate", "=", "1", ",", "name", "=", "'conv'", ",", "IN", "=", "True", ",", "reuse", "=", "False", ",", "\n", "padding", "=", "'SAME'", ",", "activation", "=", "tf", ".", "nn", ".", "elu", ",", "use_bias", "=", "True", ",", "training", "=", "True", ",", "sn", "=", "False", ")", ":", "\n", "    ", "\"\"\"Define conv for generator.\n\n    Args:\n        x: Input.\n        cnum: Channel number.\n        ksize: Kernel size.\n        Stride: Convolution stride.\n        Rate: Rate for or dilated conv.\n        name: Name of layers.\n        padding: Default to SYMMETRIC.\n        activation: Activation function after convolution.\n        training: If current graph is for training or inference, used for bn.\n\n    Returns:\n        tf.Tensor: output\n\n    \"\"\"", "\n", "assert", "padding", "in", "[", "'SYMMETRIC'", ",", "'SAME'", ",", "'REFLECT'", "]", "\n", "if", "padding", "==", "'SYMMETRIC'", "or", "padding", "==", "'REFLECT'", ":", "\n", "        ", "\"\"\" \n        Padding layer.\n        Dilated kernel size: k_r = ksize + (rate - 1)*(ksize - 1)\n        Padding size: o = i + 2p - k_r and o = i, so p = rate * (ksize - 1) / 2 (when i and o has the same image shape)\n        \"\"\"", "\n", "p", "=", "int", "(", "rate", "*", "(", "ksize", "-", "1", ")", "/", "2", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "p", ",", "p", "]", ",", "[", "p", ",", "p", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "padding", ")", "\n", "padding", "=", "'VALID'", "\n", "\n", "# if spectrum normalization", "\n", "", "if", "sn", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "w", "=", "tf", ".", "get_variable", "(", "\"kernel\"", ",", "shape", "=", "[", "ksize", ",", "ksize", ",", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "cnum", "]", ",", "initializer", "=", "weight_init", ",", "\n", "regularizer", "=", "weight_regularizer", ")", "\n", "\n", "x", "=", "tf", ".", "nn", ".", "conv2d", "(", "input", "=", "x", ",", "filter", "=", "spectral_norm", "(", "w", ")", ",", "\n", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "padding", "=", "padding", ",", "dilations", "=", "[", "1", ",", "rate", ",", "rate", ",", "1", "]", ")", "\n", "if", "use_bias", ":", "\n", "                ", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "[", "cnum", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "x", "=", "tf", ".", "nn", ".", "bias_add", "(", "x", ",", "bias", ")", "\n", "", "", "", "else", ":", "\n", "        ", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "inputs", "=", "x", ",", "filters", "=", "cnum", ",", "activation", "=", "None", ",", "\n", "kernel_size", "=", "ksize", ",", "strides", "=", "stride", ",", "\n", "dilation_rate", "=", "rate", ",", "padding", "=", "padding", ",", "\n", "kernel_initializer", "=", "None", ",", "\n", "kernel_regularizer", "=", "weight_regularizer", ",", "\n", "use_bias", "=", "use_bias", ")", "\n", "", "if", "IN", ":", "\n", "        ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm? before non-linear activation!!!", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "        ", "x", "=", "activation", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.gen_deconv": [[63, 110], ["tensorflow.variable_scope", "ops.resize", "ops.gen_conv", "ops.resize", "ops.gen_conv", "ops.resize", "ops.gen_conv", "tensorflow.layers.conv2d_transpose", "tensorflow.contrib.layers.instance_norm", "activation"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv"], ["", "@", "add_arg_scope", "\n", "def", "gen_deconv", "(", "x", ",", "cnum", ",", "ksize", "=", "4", ",", "stride", "=", "2", ",", "rate", "=", "1", ",", "method", "=", "'deconv'", ",", "IN", "=", "True", ",", "\n", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'upsample'", ",", "padding", "=", "'SAME'", ",", "sn", "=", "False", ",", "training", "=", "True", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "\"\"\"Define deconv for generator.\n    The deconv is defined to be a x2 resize_nearest_neighbor operation with\n    additional gen_conv operation.\n\n    Args:\n        x: Input.\n        cnum: Channel number.\n        name: Name of layers.\n        training: If current graph is for training or inference, used for bn.\n\n    Returns:\n        tf.Tensor: output\n\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "if", "method", "==", "'nearest'", ":", "\n", "            ", "x", "=", "resize", "(", "x", ",", "func", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", ")", "# tf.image.resize_bilinear ?", "\n", "x", "=", "gen_conv", "(", "\n", "x", ",", "cnum", ",", "3", ",", "1", ",", "name", "=", "name", "+", "'_conv'", ",", "padding", "=", "padding", ",", "\n", "training", "=", "training", ",", "IN", "=", "IN", ")", "\n", "", "elif", "method", "==", "'bilinear'", ":", "\n", "            ", "x", "=", "resize", "(", "x", ",", "func", "=", "tf", ".", "image", ".", "resize_bilinear", ")", "\n", "x", "=", "gen_conv", "(", "\n", "x", ",", "cnum", ",", "3", ",", "1", ",", "name", "=", "name", "+", "'_conv'", ",", "padding", "=", "padding", ",", "\n", "training", "=", "training", ",", "IN", "=", "IN", ")", "\n", "", "elif", "method", "==", "'bicubic'", ":", "\n", "            ", "x", "=", "resize", "(", "x", ",", "func", "=", "tf", ".", "image", ".", "resize_bicubic", ")", "\n", "x", "=", "gen_conv", "(", "\n", "x", ",", "cnum", ",", "3", ",", "1", ",", "name", "=", "name", "+", "'_conv'", ",", "padding", "=", "padding", ",", "\n", "training", "=", "training", ",", "IN", "=", "IN", ")", "# default instance normalization, see function gen_conv()", "\n", "", "else", ":", "\n", "# assert padding in ['SYMMETRIC', 'SAME', 'REFLECT']", "\n", "# if padding == 'SYMMETRIC' or padding == 'REFLECT':", "\n", "#     p = int(rate * (ksize - 1) / 2)", "\n", "#     p = 0", "\n", "#     x = tf.pad(x, [[0, 0], [p, p], [p, p], [0, 0]], mode=padding)", "\n", "            ", "padding", "=", "'SAME'", "\n", "x", "=", "tf", ".", "layers", ".", "conv2d_transpose", "(", "x", ",", "cnum", ",", "kernel_size", "=", "ksize", ",", "strides", "=", "stride", ",", "\n", "activation", "=", "None", ",", "padding", "=", "padding", ")", "\n", "if", "IN", ":", "\n", "                ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm?", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "x", "=", "activation", "(", "x", ")", "\n", "", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.resize": [[111, 127], ["tensorflow.cast", "func.get_shape().as_list", "tensorflow.variable_scope", "tensorflow.shape", "tensorflow.cast", "tensorflow.cast", "int", "int", "func", "func", "func.get_shape"], "function", ["None"], ["", "def", "resize", "(", "x", ",", "scale", "=", "2", ",", "to_shape", "=", "None", ",", "align_corners", "=", "True", ",", "dynamic", "=", "False", ",", "\n", "func", "=", "tf", ".", "image", ".", "resize_bilinear", ",", "name", "=", "'resize'", ")", ":", "\n", "    ", "if", "dynamic", ":", "\n", "        ", "xs", "=", "tf", ".", "cast", "(", "tf", ".", "shape", "(", "x", ")", ",", "tf", ".", "float32", ")", "\n", "new_xs", "=", "[", "tf", ".", "cast", "(", "xs", "[", "1", "]", "*", "scale", ",", "tf", ".", "int32", ")", ",", "\n", "tf", ".", "cast", "(", "xs", "[", "2", "]", "*", "scale", ",", "tf", ".", "int32", ")", "]", "\n", "", "else", ":", "\n", "        ", "xs", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "new_xs", "=", "[", "int", "(", "xs", "[", "1", "]", "*", "scale", ")", ",", "int", "(", "xs", "[", "2", "]", "*", "scale", ")", "]", "\n", "", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "if", "to_shape", "is", "None", ":", "\n", "            ", "x", "=", "func", "(", "x", ",", "new_xs", ",", "align_corners", "=", "align_corners", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "func", "(", "x", ",", "[", "to_shape", "[", "0", "]", ",", "to_shape", "[", "1", "]", "]", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.resnet_blocks": [[129, 137], ["range", "ops.resnet_block21", "str"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resnet_block21"], ["", "@", "add_arg_scope", "\n", "def", "resnet_blocks", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "rate", ",", "block_num", ",", "name", ",", "IN", "=", "True", ",", "\n", "padding", "=", "'REFLECT'", ",", "activation", "=", "tf", ".", "nn", ".", "elu", ",", "training", "=", "True", ")", ":", "\n", "    ", "for", "block", "in", "range", "(", "block_num", ")", ":", "\n", "# x = resnet_block12(x, cnum, ksize, stride, rate, name+\"_\"+str(block), padding, activation, training=training)", "\n", "        ", "x", "=", "resnet_block21", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "rate", ",", "name", "+", "\"_\"", "+", "str", "(", "block", ")", ",", "padding", "=", "padding", ",", "\n", "activation", "=", "activation", ",", "training", "=", "training", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.resnet_block21": [[139, 170], ["tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "int", "tensorflow.pad", "tensorflow.contrib.layers.instance_norm", "activation", "int", "tensorflow.pad", "tensorflow.contrib.layers.instance_norm"], "function", ["None"], ["", "def", "resnet_block21", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "rate", ",", "name", ",", "IN", "=", "True", ",", "\n", "padding", "=", "'SAME'", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "training", "=", "True", ")", ":", "\n", "    ", "xin", "=", "x", "\n", "assert", "padding", "in", "[", "'SYMMETRIC'", ",", "'SAME'", ",", "'REFLECT'", "]", "\n", "if", "padding", "==", "'SYMMETRIC'", "or", "padding", "==", "'REFLECT'", ":", "\n", "        ", "p", "=", "int", "(", "rate", "*", "(", "ksize", "-", "1", ")", "/", "2", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "p", ",", "p", "]", ",", "[", "p", ",", "p", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "padding", ")", "\n", "padding1", "=", "'VALID'", "\n", "", "else", ":", "\n", "        ", "padding1", "=", "padding", "\n", "", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "dilation_rate", "=", "rate", ",", "\n", "activation", "=", "None", ",", "padding", "=", "padding1", ",", "name", "=", "name", "+", "\"0\"", ")", "\n", "if", "IN", ":", "\n", "        ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm?", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "        ", "x", "=", "activation", "(", "x", ")", "\n", "\n", "", "rate", "=", "1", "\n", "if", "padding", "==", "'SYMMETRIC'", "or", "padding", "==", "'REFLECT'", ":", "\n", "        ", "p", "=", "int", "(", "rate", "*", "(", "ksize", "-", "1", ")", "/", "2", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "p", ",", "p", "]", ",", "[", "p", ",", "p", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "padding", ")", "\n", "padding2", "=", "'VALID'", "\n", "", "else", ":", "\n", "        ", "padding2", "=", "padding", "\n", "", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "dilation_rate", "=", "rate", ",", "\n", "activation", "=", "None", ",", "padding", "=", "padding2", ",", "name", "=", "name", "+", "\"1\"", ")", "\n", "if", "IN", ":", "\n", "        ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm?", "\n", "", "return", "xin", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.resnet_block12": [[172, 205], ["tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "int", "tensorflow.pad", "tensorflow.contrib.layers.instance_norm", "activation", "int", "tensorflow.pad", "tensorflow.contrib.layers.instance_norm"], "function", ["None"], ["", "def", "resnet_block12", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "rate", ",", "name", ",", "IN", "=", "True", ",", "\n", "padding", "=", "'REFLECT'", ",", "activation", "=", "tf", ".", "nn", ".", "elu", ",", "training", "=", "True", ")", ":", "\n", "    ", "xin", "=", "x", "\n", "rate", "=", "1", "\n", "assert", "padding", "in", "[", "'SYMMETRIC'", ",", "'SAME'", ",", "'REFLECT'", "]", "\n", "if", "padding", "==", "'SYMMETRIC'", "or", "padding", "==", "'REFLECT'", ":", "\n", "        ", "p", "=", "int", "(", "rate", "*", "(", "ksize", "-", "1", ")", "/", "2", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "p", ",", "p", "]", ",", "[", "p", ",", "p", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "padding", ")", "\n", "padding1", "=", "'VALID'", "\n", "", "else", ":", "\n", "        ", "padding1", "=", "padding", "\n", "", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "dilation_rate", "=", "rate", ",", "\n", "activation", "=", "None", ",", "padding", "=", "padding1", ",", "name", "=", "name", "+", "\"0\"", ")", "\n", "if", "IN", ":", "\n", "        ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm?", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "        ", "x", "=", "activation", "(", "x", ")", "\n", "\n", "", "rate", "=", "2", "\n", "if", "padding", "==", "'SYMMETRIC'", "or", "padding", "==", "'REFLECT'", ":", "\n", "        ", "p", "=", "int", "(", "rate", "*", "(", "ksize", "-", "1", ")", "/", "2", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "p", ",", "p", "]", ",", "[", "p", ",", "p", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "padding", ")", "\n", "padding2", "=", "'VALID'", "\n", "", "else", ":", "\n", "        ", "padding2", "=", "padding", "\n", "", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "dilation_rate", "=", "rate", ",", "\n", "activation", "=", "None", ",", "padding", "=", "padding2", ",", "name", "=", "name", "+", "\"1\"", ")", "\n", "if", "IN", ":", "\n", "        ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm?", "\n", "\n", "", "return", "xin", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.torgb": [[207, 213], ["tensorflow.layers.conv2d"], "function", ["None"], ["", "def", "torgb", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "rate", ",", "name", ",", "activation", "=", "tf", ".", "nn", ".", "tanh", ",", "padding", "=", "\"SAME\"", ")", ":", "\n", "    ", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "dilation_rate", "=", "rate", ",", "\n", "activation", "=", "activation", ",", "padding", "=", "padding", ",", "name", "=", "name", ")", "\n", "# x = tf.clip_by_value(x, -1., 1.)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.dis_conv": [[215, 254], ["tensorflow.layers.conv2d", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.get_variable", "tensorflow.nn.bias_add", "activation", "ops.spectral_norm", "tensorflow.constant_initializer", "activation.get_shape"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.spectral_norm"], ["", "def", "dis_conv", "(", "x", ",", "cnum", ",", "ksize", "=", "5", ",", "stride", "=", "2", ",", "rate", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ",", "name", "=", "'conv'", ",", "\n", "padding", "=", "'SAME'", ",", "use_bias", "=", "True", ",", "sn", "=", "True", ",", "training", "=", "True", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "\"\"\"Define conv for discriminator.\n    Activation is set to leaky_relu.\n\n    Args:\n        x: Input.\n        cnum: Channel number.\n        ksize: Kernel size.\n        stride: Convolution stride.\n        name: Name of layers.\n        training: If current graph is for training or inference, used for bn.\n\n    Returns:\n        tf.Tensor: output\n\n    \"\"\"", "\n", "# if spectrum normalization", "\n", "if", "sn", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "w", "=", "tf", ".", "get_variable", "(", "\"kernel\"", ",", "shape", "=", "[", "ksize", ",", "ksize", ",", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "cnum", "]", ",", "initializer", "=", "weight_init", ",", "\n", "regularizer", "=", "weight_regularizer", ")", "\n", "\n", "x", "=", "tf", ".", "nn", ".", "conv2d", "(", "input", "=", "x", ",", "filter", "=", "spectral_norm", "(", "w", ")", ",", "\n", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "padding", "=", "padding", ",", "dilations", "=", "[", "1", ",", "rate", ",", "rate", ",", "1", "]", ")", "\n", "if", "use_bias", ":", "\n", "                ", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "[", "cnum", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "x", "=", "tf", ".", "nn", ".", "bias_add", "(", "x", ",", "bias", ")", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "x", "=", "activation", "(", "x", ")", "\n", "", "", "", "else", ":", "\n", "        ", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "inputs", "=", "x", ",", "filters", "=", "cnum", ",", "activation", "=", "activation", ",", "\n", "kernel_size", "=", "ksize", ",", "strides", "=", "stride", ",", "\n", "dilation_rate", "=", "rate", ",", "padding", "=", "padding", ",", "\n", "kernel_initializer", "=", "None", ",", "\n", "kernel_regularizer", "=", "None", ",", "\n", "use_bias", "=", "use_bias", ",", "\n", "reuse", "=", "reuse", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.flatten": [[255, 260], ["tensorflow.variable_scope", "tensorflow.contrib.layers.flatten"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.flatten"], ["", "def", "flatten", "(", "x", ",", "name", "=", "'flatten'", ")", ":", "\n", "    ", "\"\"\"Flatten wrapper.\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "return", "tf", ".", "contrib", ".", "layers", ".", "flatten", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.out_complete": [[261, 266], ["tensorflow.image.resize_images", "tensorflow.image.resize_images"], "function", ["None"], ["", "", "def", "out_complete", "(", "out", ",", "x_incomplete", ",", "mask", ",", "res", ")", ":", "\n", "    ", "mask", "=", "tf", ".", "image", ".", "resize_images", "(", "mask", ",", "(", "res", ",", "res", ")", ")", "\n", "x_incomplete", "=", "tf", ".", "image", ".", "resize_images", "(", "x_incomplete", ",", "(", "res", ",", "res", ")", ")", "\n", "x_complete", "=", "out", "*", "mask", "+", "x_incomplete", "*", "(", "1.", "-", "mask", ")", "\n", "return", "x_complete", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.conv": [[269, 293], ["tensorflow.variable_scope", "tensorflow.pad", "tensorflow.pad", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.layers.conv2d", "tensorflow.get_variable", "tensorflow.nn.bias_add", "ops.spectral_norm", "tensorflow.constant_initializer", "tf.nn.bias_add.get_shape"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.spectral_norm"], ["", "@", "add_arg_scope", "\n", "def", "conv", "(", "x", ",", "channels", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "0", ",", "pad_type", "=", "'REFLECT'", ",", "use_bias", "=", "True", ",", "sn", "=", "False", ",", "scope", "=", "'conv_0'", ",", "\n", "reuse", "=", "False", ",", "training", "=", "False", ",", "padding", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "scope", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "if", "pad_type", "==", "'zero'", ":", "\n", "            ", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "", "if", "pad_type", "==", "'reflect'", ":", "\n", "            ", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "'REFLECT'", ")", "\n", "\n", "", "if", "sn", ":", "\n", "            ", "w", "=", "tf", ".", "get_variable", "(", "\"kernel\"", ",", "shape", "=", "[", "kernel", ",", "kernel", ",", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "channels", "]", ",", "initializer", "=", "weight_init", ",", "\n", "regularizer", "=", "weight_regularizer", ")", "\n", "x", "=", "tf", ".", "nn", ".", "conv2d", "(", "input", "=", "x", ",", "filter", "=", "spectral_norm", "(", "w", ")", ",", "\n", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "if", "use_bias", ":", "\n", "                ", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "[", "channels", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "x", "=", "tf", ".", "nn", ".", "bias_add", "(", "x", ",", "bias", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "inputs", "=", "x", ",", "filters", "=", "channels", ",", "\n", "kernel_size", "=", "kernel", ",", "kernel_initializer", "=", "weight_init", ",", "\n", "kernel_regularizer", "=", "weight_regularizer", ",", "\n", "strides", "=", "stride", ",", "use_bias", "=", "use_bias", ",", "reuse", "=", "reuse", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.spectral_norm": [[294, 320], ["tf.reshape.shape.as_list", "tensorflow.reshape", "tensorflow.get_variable", "range", "tensorflow.matmul", "tensorflow.matmul", "ops.l2_norm", "tensorflow.matmul", "ops.l2_norm", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.control_dependencies", "tensorflow.reshape", "tensorflow.truncated_normal_initializer", "tensorflow.transpose", "tf.get_variable.assign"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.l2_norm", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.l2_norm"], ["", "", "def", "spectral_norm", "(", "w", ",", "iteration", "=", "1", ")", ":", "\n", "    ", "w_shape", "=", "w", ".", "shape", ".", "as_list", "(", ")", "\n", "w", "=", "tf", ".", "reshape", "(", "w", ",", "[", "-", "1", ",", "w_shape", "[", "-", "1", "]", "]", ")", "\n", "\n", "u", "=", "tf", ".", "get_variable", "(", "\"u\"", ",", "[", "1", ",", "w_shape", "[", "-", "1", "]", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", ")", ",", "trainable", "=", "False", ")", "\n", "\n", "u_hat", "=", "u", "\n", "v_hat", "=", "None", "\n", "for", "i", "in", "range", "(", "iteration", ")", ":", "\n", "        ", "\"\"\"\n        power iteration\n        Usually iteration = 1 will be enough\n        \"\"\"", "\n", "v_", "=", "tf", ".", "matmul", "(", "u_hat", ",", "tf", ".", "transpose", "(", "w", ")", ")", "\n", "v_hat", "=", "l2_norm", "(", "v_", ")", "\n", "\n", "u_", "=", "tf", ".", "matmul", "(", "v_hat", ",", "w", ")", "\n", "u_hat", "=", "l2_norm", "(", "u_", ")", "\n", "\n", "", "sigma", "=", "tf", ".", "matmul", "(", "tf", ".", "matmul", "(", "v_hat", ",", "w", ")", ",", "tf", ".", "transpose", "(", "u_hat", ")", ")", "\n", "w_norm", "=", "w", "/", "sigma", "\n", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "u", ".", "assign", "(", "u_hat", ")", "]", ")", ":", "\n", "        ", "w_norm", "=", "tf", ".", "reshape", "(", "w_norm", ",", "w_shape", ")", "\n", "\n", "", "return", "w_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.l2_norm": [[321, 323], ["tensorflow.reduce_sum"], "function", ["None"], ["", "def", "l2_norm", "(", "v", ",", "eps", "=", "1e-12", ")", ":", "\n", "    ", "return", "v", "/", "(", "tf", ".", "reduce_sum", "(", "v", "**", "2", ")", "**", "0.5", "+", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.hw_flatten": [[324, 326], ["tensorflow.reshape"], "function", ["None"], ["", "def", "hw_flatten", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "reshape", "(", "x", ",", "shape", "=", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "x", ".", "shape", "[", "-", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.max_pooling": [[327, 330], ["tensorflow.layers.max_pooling2d"], "function", ["None"], ["", "def", "max_pooling", "(", "x", ",", "pool_size", "=", "2", ")", ":", "\n", "    ", "x", "=", "tf", ".", "layers", ".", "max_pooling2d", "(", "x", ",", "pool_size", "=", "pool_size", ",", "strides", "=", "pool_size", ",", "padding", "=", "'SAME'", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.avg_pooling": [[332, 335], ["tensorflow.layers.average_pooling2d"], "function", ["None"], ["", "def", "avg_pooling", "(", "x", ",", "pool_size", "=", "2", ")", ":", "\n", "    ", "x", "=", "tf", ".", "layers", ".", "average_pooling2d", "(", "x", ",", "pool_size", "=", "pool_size", ",", "strides", "=", "pool_size", ",", "padding", "=", "'SAME'", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.attention": [[339, 346], ["ops.attention_with_neighbors", "ops.attention_with_pooling"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention_with_neighbors", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention_with_pooling"], ["def", "attention", "(", "x", ",", "channels", ",", "neighbors", "=", "1", ",", "use_bias", "=", "True", ",", "sn", "=", "False", ",", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "\n", "name", "=", "'attention_pooling'", ",", "training", "=", "True", ",", "padding", "=", "'REFLECT'", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "if", "neighbors", ">", "1", ":", "\n", "        ", "x", "=", "attention_with_neighbors", "(", "x", ",", "channels", ",", "down_scale", "=", "down_scale", ",", "pool_scale", "=", "pool_scale", ",", "name", "=", "name", ")", "\n", "", "else", ":", "\n", "        ", "x", "=", "attention_with_pooling", "(", "x", ",", "channels", ",", "down_scale", "=", "down_scale", ",", "pool_scale", "=", "pool_scale", ",", "name", "=", "name", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.attention_with_pooling": [[347, 386], ["tensorflow.variable_scope", "ops.conv", "ops.max_pooling", "ops.conv", "ops.conv", "ops.max_pooling", "tensorflow.matmul", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.get_variable", "tensorflow.reshape", "ops.gen_conv", "ops.hw_flatten", "ops.hw_flatten", "ops.hw_flatten", "ops.gen_deconv", "tensorflow.constant_initializer"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.max_pooling", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.max_pooling", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.hw_flatten", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.hw_flatten", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.hw_flatten", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_deconv"], ["", "@", "add_arg_scope", "\n", "def", "attention_with_pooling", "(", "x", ",", "channels", ",", "ksize", "=", "4", ",", "use_bias", "=", "True", ",", "sn", "=", "False", ",", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "\n", "name", "=", "'attention_pooling'", ",", "training", "=", "True", ",", "padding", "=", "'REFLECT'", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "x_origin", "=", "x", "\n", "\n", "# down sampling", "\n", "if", "down_scale", ">", "1", ":", "\n", "            ", "x", "=", "gen_conv", "(", "x", ",", "channels", ",", "ksize", ",", "stride", "=", "down_scale", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'attention_down_sample'", ",", "reuse", "=", "reuse", ")", "\n", "\n", "# attention", "\n", "", "f", "=", "conv", "(", "x", ",", "channels", "//", "16", ",", "kernel", "=", "1", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "sn", "=", "sn", ",", "scope", "=", "'f_conv'", ",", "reuse", "=", "reuse", ")", "# [bs, h, w, c']", "\n", "f", "=", "max_pooling", "(", "f", ",", "pool_scale", ")", "\n", "# f = avg_pooling(f)", "\n", "\n", "g", "=", "conv", "(", "x", ",", "channels", "//", "16", ",", "kernel", "=", "1", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "sn", "=", "sn", ",", "scope", "=", "'g_conv'", ",", "reuse", "=", "reuse", ")", "# [bs, h, w, c']", "\n", "\n", "h", "=", "conv", "(", "x", ",", "channels", "//", "16", ",", "kernel", "=", "1", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "sn", "=", "sn", ",", "scope", "=", "'h_conv'", ",", "reuse", "=", "reuse", ")", "# [bs, h, w, c]", "\n", "h", "=", "max_pooling", "(", "h", ",", "pool_scale", ")", "\n", "# h = avg_pooling(h)   [4,65536,4096]", "\n", "\n", "# N = h * w", "\n", "s", "=", "tf", ".", "matmul", "(", "hw_flatten", "(", "g", ")", ",", "hw_flatten", "(", "f", ")", ",", "transpose_b", "=", "True", ")", "# # [bs, N, N]", "\n", "\n", "beta", "=", "tf", ".", "nn", ".", "softmax", "(", "s", ")", "# attention map", "\n", "\n", "o", "=", "tf", ".", "matmul", "(", "beta", ",", "hw_flatten", "(", "h", ")", ")", "# [bs, N, C]", "\n", "gamma", "=", "tf", ".", "get_variable", "(", "\"gamma\"", ",", "[", "1", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "\n", "o", "=", "tf", ".", "reshape", "(", "o", ",", "shape", "=", "[", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "channels", "//", "16", "]", ")", "# [bs, h, w, C]", "\n", "# o = conv(o, channels, kernel=1, stride=1, use_bias=use_bias, sn=sn, scope='attn_conv_up')    # from bottleneck", "\n", "\n", "# up sampling", "\n", "if", "down_scale", ">", "1", ":", "\n", "            ", "o", "=", "gen_deconv", "(", "o", ",", "channels", ",", "ksize", ",", "method", "=", "'deconv'", ",", "stride", "=", "down_scale", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'attention_down_upsample'", ",", "reuse", "=", "reuse", ")", "\n", "\n", "", "x", "=", "gamma", "*", "o", "+", "x_origin", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.attention_with_neighbors": [[388, 438], ["tensorflow.variable_scope", "gen_conv.get_shape().as_list", "tensorflow.split", "tensorflow.extract_image_patches", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.split", "zip", "tensorflow.concat", "gen_deconv.set_shape", "tensorflow.get_variable", "tensorflow.layers.conv2d", "ops.gen_conv", "tensorflow.nn.conv2d", "tensorflow.reshape", "tensorflow.nn.softmax", "tensorflow.transpose", "gen_deconv.append", "ops.gen_deconv", "gen_conv.get_shape", "tensorflow.maximum", "tensorflow.nn.conv2d", "tensorflow.constant_initializer", "tensorflow.sqrt", "tensorflow.reduce_sum", "tensorflow.square"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_deconv"], ["", "@", "add_arg_scope", "\n", "def", "attention_with_neighbors", "(", "x", ",", "channels", ",", "ksize", "=", "3", ",", "use_bias", "=", "True", ",", "sn", "=", "False", ",", "stride", "=", "2", ",", "\n", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "name", "=", "'attention_pooling'", ",", "\n", "training", "=", "True", ",", "padding", "=", "'REFLECT'", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "x1", "=", "x", "\n", "\n", "# downsample input feature maps if needed due to limited GPU memory", "\n", "# down sampling", "\n", "if", "down_scale", ">", "1", ":", "\n", "            ", "x1", "=", "gen_conv", "(", "x1", ",", "channels", ",", "ksize", ",", "stride", "=", "down_scale", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'attention_down_sample'", ",", "\n", "reuse", "=", "reuse", ")", "\n", "# get shapes", "\n", "", "int_x1s", "=", "x1", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "# extract patches from high-level feature maps for matching and attending", "\n", "x1_groups", "=", "tf", ".", "split", "(", "x1", ",", "int_x1s", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "w", "=", "tf", ".", "extract_image_patches", "(", "\n", "x1", ",", "[", "1", ",", "ksize", ",", "ksize", ",", "1", "]", ",", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "w", "=", "tf", ".", "reshape", "(", "w", ",", "[", "int_x1s", "[", "0", "]", ",", "-", "1", ",", "ksize", ",", "ksize", ",", "int_x1s", "[", "3", "]", "]", ")", "\n", "w", "=", "tf", ".", "transpose", "(", "w", ",", "[", "0", ",", "2", ",", "3", ",", "4", ",", "1", "]", ")", "# transpose to [b, ksize, ksize, c, hw/4]    # need transpose?? -- 480", "\n", "w_groups", "=", "tf", ".", "split", "(", "w", ",", "int_x1s", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "\n", "# matching and attending hole and non-hole patches", "\n", "y", "=", "[", "]", "\n", "scale", "=", "10.", "\n", "# high level patches: w_groups, low level patches: raw_w_groups, x2_groups: high level feature map", "\n", "for", "xi", ",", "wi", "in", "zip", "(", "x1_groups", ",", "w_groups", ")", ":", "\n", "# matching on high-level feature maps", "\n", "            ", "wi", "=", "wi", "[", "0", "]", "\n", "wi_normed", "=", "wi", "/", "tf", ".", "maximum", "(", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "wi", ")", ",", "axis", "=", "[", "0", ",", "1", ",", "2", "]", ")", ")", ",", "1e-4", ")", "\n", "yi", "=", "tf", ".", "nn", ".", "conv2d", "(", "xi", ",", "wi_normed", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"SAME\"", ")", "\n", "yi", "=", "tf", ".", "reshape", "(", "yi", ",", "[", "1", ",", "int_x1s", "[", "1", "]", ",", "int_x1s", "[", "2", "]", ",", "(", "int_x1s", "[", "1", "]", "//", "stride", ")", "*", "(", "int_x1s", "[", "2", "]", "//", "stride", ")", "]", ")", "\n", "yi", "=", "tf", ".", "nn", ".", "softmax", "(", "yi", "*", "scale", ",", "3", ")", "\n", "# non local mean", "\n", "wi_center", "=", "tf", ".", "transpose", "(", "wi", ",", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", "\n", "yi", "=", "tf", ".", "nn", ".", "conv2d", "(", "yi", ",", "wi_center", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"SAME\"", ")", "/", "4.", "\n", "\n", "# filter: [height, width, output_channels, in_channels]", "\n", "y", ".", "append", "(", "yi", ")", "\n", "", "y", "=", "tf", ".", "concat", "(", "y", ",", "axis", "=", "0", ")", "\n", "y", ".", "set_shape", "(", "int_x1s", ")", "\n", "# up sampling", "\n", "if", "down_scale", ">", "1", ":", "\n", "            ", "y", "=", "gen_deconv", "(", "y", ",", "channels", ",", "ksize", ",", "method", "=", "'deconv'", ",", "stride", "=", "down_scale", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "name", "=", "'attention_down_upsample'", ",", "reuse", "=", "reuse", ")", "\n", "\n", "", "gamma", "=", "tf", ".", "get_variable", "(", "\"gamma\"", ",", "[", "1", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "x", "=", "gamma", "*", "y", "+", "x", "\n", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "x", ",", "channels", ",", "3", ",", "1", ",", "dilation_rate", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "padding", "=", "'SAME'", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.normalize": [[439, 441], ["None"], "function", ["None"], ["", "def", "normalize", "(", "x", ")", ":", "\n", "    ", "return", "x", "/", "127.5", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.imsave": [[442, 444], ["scipy.misc.imsave", "merge"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.imsave", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge"], ["", "def", "imsave", "(", "images", ",", "size", ",", "path", ")", ":", "\n", "    ", "return", "scipy", ".", "misc", ".", "imsave", "(", "path", ",", "merge", "(", "images", ",", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.ops.inverse_transform": [[445, 447], ["None"], "function", ["None"], ["", "def", "inverse_transform", "(", "images", ")", ":", "\n", "    ", "return", "(", "images", "+", "1.", ")", "*", "127.5", "", "", ""]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.__init__": [[11, 24], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "model_name", "=", "\"InpaintModel\"", "# name for checkpoint", "\n", "self", ".", "dataset_name", "=", "args", ".", "DATASET", "# TODO: get the name of the data set, it depends the path structure", "\n", "self", ".", "checkpoint_dir", "=", "args", ".", "CHECKPOINT_DIR", "\n", "self", ".", "sample_dir", "=", "args", ".", "SAMPLE_DIR", "\n", "self", ".", "result_dir", "=", "args", ".", "RESULT_DIR", "\n", "self", ".", "log_dir", "=", "args", ".", "LOG_DIR", "\n", "\n", "self", ".", "epoch", "=", "args", ".", "EPOCH", "\n", "self", ".", "batch_size", "=", "args", ".", "BATCH_SIZE", "\n", "self", ".", "print_freq", "=", "args", ".", "PRINT_FREQ", "\n", "self", ".", "save_freq", "=", "args", ".", "SAVE_FREQ", "\n", "self", ".", "img_size", "=", "args", ".", "IMG_SHAPES", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.build_inpaint_net": [[26, 100], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.concat", "tensorflow.ones_like", "tensorflow.variable_scope", "tensorflow.contrib.framework.python.ops.arg_scope", "ops.gen_conv", "ops.gen_conv", "ops.gen_conv", "ops.resnet_blocks", "ops.attention", "ops.gen_conv", "ops.gen_conv", "ops.gen_conv", "tensorflow.concat", "ops.gen_deconv", "ops.attention", "ops.gen_conv", "ops.gen_conv", "ops.gen_conv", "tensorflow.concat", "ops.gen_deconv", "ops.attention", "ops.gen_conv", "ops.gen_conv", "ops.gen_conv"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resnet_blocks", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_deconv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_deconv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv"], ["", "def", "build_inpaint_net", "(", "self", ",", "x", ",", "edge", ",", "grad", ",", "mask", ",", "args", "=", "None", ",", "reuse", "=", "False", ",", "\n", "training", "=", "True", ",", "padding", "=", "'SAME'", ",", "name", "=", "'inpaint_net'", ")", ":", "\n", "        ", "\"\"\"Inpaint network.\n\n        Args:\n            x: incomplete image[-1, 1] with shape of (batch_size, h, w, c)\n            edge: incomplete edge {0, 1} with shape of (batch_size, h, w)\n            grad map: incomplete grad with shape of (batch_size, h, w, 6)\n            mask: mask region {0, 1}\n        Returns:\n            complete image, grad map, middle result\n        \"\"\"", "\n", "x", "=", "tf", ".", "reshape", "(", "x", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "args", ".", "IMG_SHAPES", "[", "2", "]", "]", ")", "\n", "mask", "=", "tf", ".", "reshape", "(", "mask", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "edge", "=", "tf", ".", "reshape", "(", "edge", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "# grad = tf.reshape(grad, [-1, args.IMG_SHAPES[0], args.IMG_SHAPES[1], 6])", "\n", "\n", "xin", "=", "x", "\n", "ones_x", "=", "tf", ".", "ones_like", "(", "x", ")", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "\n", "x", "=", "tf", ".", "concat", "(", "[", "x", ",", "ones_x", "*", "edge", ",", "ones_x", "*", "mask", ",", "grad", "]", ",", "axis", "=", "3", ")", "# add a mask channel,the input channel is 4", "\n", "# encoder-decoder network: channel 64-128-256-128-64", "\n", "cnum", "=", "64", "# initial channel", "\n", "# a decorate: arg_scope([op1, op2,..], xx,..) means:", "\n", "# attributes or parameters xx defined here are the default in op1 and op2,..", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ",", "arg_scope", "(", "[", "gen_conv", ",", "gen_deconv", "]", ",", "\n", "training", "=", "training", ",", "padding", "=", "padding", ")", ":", "\n", "# Encoder", "\n", "# scale 256                                                                     channels   activation: relu", "\n", "            ", "x", "=", "gen_conv", "(", "x", ",", "cnum", ",", "7", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'en_conv1'", ")", "# 9 -> 64, ksize=7x7, stride=1", "\n", "# scale 128", "\n", "x", "=", "gen_conv", "(", "x", ",", "2", "*", "cnum", ",", "4", ",", "stride", "=", "2", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'en_conv2'", ")", "\n", "# scale 64", "\n", "x", "=", "gen_conv", "(", "x", ",", "4", "*", "cnum", ",", "4", ",", "stride", "=", "2", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'en_conv3'", ")", "\n", "# res block", "\n", "x", "=", "resnet_blocks", "(", "x", ",", "4", "*", "cnum", ",", "3", ",", "stride", "=", "1", ",", "rate", "=", "2", ",", "block_num", "=", "8", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'en_64_8'", ")", "\n", "\n", "# Decoder", "\n", "# TODO: output scale 64  Down scale = 2 (origin) pool scale = 2 (origin)", "\n", "# share attention", "\n", "x", "=", "attention", "(", "x", ",", "4", "*", "cnum", ",", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "name", "=", "'attention_pooling_64'", ")", "\n", "\n", "# out of predict grad map", "\n", "x_64", "=", "gen_conv", "(", "x", ",", "4", "*", "cnum", ",", "5", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'out64_grad_out'", ")", "\n", "x_grad_out_64", "=", "gen_conv", "(", "x_64", ",", "6", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'grad64'", ")", "\n", "x_out_64", "=", "gen_conv", "(", "x_64", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "tanh", ",", "name", "=", "'out64'", ")", "\n", "\n", "# scale 64 - 128", "\n", "x", "=", "tf", ".", "concat", "(", "[", "x", ",", "x_64", "]", ",", "axis", "=", "3", ")", "\n", "x", "=", "gen_deconv", "(", "x", ",", "2", "*", "cnum", ",", "4", ",", "method", "=", "'deconv'", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'de128_conv4_upsample'", ")", "\n", "\n", "# TODO: output scale 128", "\n", "# share attention", "\n", "x", "=", "attention", "(", "x", ",", "2", "*", "cnum", ",", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "name", "=", "'attention_pooling_128'", ")", "\n", "\n", "# out of predict grad map", "\n", "x_128", "=", "gen_conv", "(", "x", ",", "2", "*", "cnum", ",", "5", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'out128_grad_out'", ")", "\n", "x_grad_out_128", "=", "gen_conv", "(", "x_128", ",", "6", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'grad128'", ")", "\n", "x_out_128", "=", "gen_conv", "(", "x_128", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "tanh", ",", "name", "=", "'out128'", ")", "\n", "\n", "# scale 128 - 256", "\n", "x", "=", "tf", ".", "concat", "(", "[", "x", ",", "x_128", "]", ",", "axis", "=", "3", ")", "\n", "x", "=", "gen_deconv", "(", "x", ",", "cnum", ",", "4", ",", "method", "=", "'deconv'", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'de256_conv5_upsample'", ")", "\n", "\n", "# TODO: output scale 256", "\n", "# share attention", "\n", "x", "=", "attention", "(", "x", ",", "cnum", ",", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "name", "=", "'attention_pooling_256'", ")", "\n", "\n", "# out of predict grad map", "\n", "x", "=", "gen_conv", "(", "x", ",", "cnum", ",", "5", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'out256_grad_out'", ")", "\n", "x_grad", "=", "gen_conv", "(", "x", ",", "6", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'grad256'", ")", "# grad map  no activation", "\n", "x", "=", "gen_conv", "(", "x", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "tanh", ",", "name", "=", "'out256'", ")", "\n", "\n", "", "return", "x", ",", "x_out_64", ",", "x_out_128", ",", "x_grad", ",", "x_grad_out_64", ",", "x_grad_out_128", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.build_discriminator_256": [[102, 114], ["tensorflow.variable_scope", "ops.dis_conv", "ops.dis_conv", "ops.dis_conv", "ops.dis_conv", "ops.dis_conv"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.dis_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.dis_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.dis_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.dis_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.dis_conv"], ["", "def", "build_discriminator_256", "(", "self", ",", "x", ",", "reuse", "=", "False", ",", "name", "=", "'discriminator256'", ",", "sn", "=", "True", ",", "training", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Patch GAN discriminator component, receptive filed: 70*70\n        \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "cnum", "=", "64", "\n", "x", "=", "dis_conv", "(", "x", ",", "cnum", ",", "ksize", "=", "4", ",", "stride", "=", "2", ",", "name", "=", "'conv1'", ",", "sn", "=", "sn", ",", "training", "=", "training", ")", "# leaky_relu", "\n", "x", "=", "dis_conv", "(", "x", ",", "cnum", "*", "2", ",", "ksize", "=", "4", ",", "stride", "=", "2", ",", "name", "=", "'conv2'", ",", "sn", "=", "sn", ",", "training", "=", "training", ")", "\n", "x", "=", "dis_conv", "(", "x", ",", "cnum", "*", "4", ",", "ksize", "=", "4", ",", "stride", "=", "2", ",", "name", "=", "'conv3'", ",", "sn", "=", "sn", ",", "training", "=", "training", ")", "\n", "x", "=", "dis_conv", "(", "x", ",", "cnum", "*", "8", ",", "ksize", "=", "4", ",", "stride", "=", "1", ",", "name", "=", "'conv4'", ",", "sn", "=", "sn", ",", "training", "=", "training", ")", "\n", "x", "=", "dis_conv", "(", "x", ",", "1", ",", "ksize", "=", "4", ",", "stride", "=", "1", ",", "name", "=", "'conv5'", ",", "activation", "=", "None", ",", "sn", "=", "sn", ",", "training", "=", "training", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.build_graph_with_losses": [[116, 475], ["tensorflow.image.sobel_edges", "tensorflow.reshape", "inpaint_model.InpaintModel.build_inpaint_net", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.sobel_edges", "tensorflow.reshape", "loss.priority_loss_mask", "tensorflow.abs", "loss.LossCalculator", "tensorflow.concat", "tensorflow.concat", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.sobel_edges", "tensorflow.reshape", "loss.priority_loss_mask", "tensorflow.abs", "loss.LossCalculator", "tensorflow.concat", "tensorflow.concat", "tensorflow.reshape", "loss.priority_loss_mask", "tensorflow.abs", "loss.LossCalculator", "tensorflow.concat", "inpaint_model.InpaintModel.build_discriminator_256", "tensorflow.split", "loss.patch_gan_loss", "tensorflow.concat", "tensorflow.concat", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.summary.merge", "tensorflow.summary.merge", "tensorflow.summary.merge", "tensorflow.summary.merge", "tensorflow.reduce_mean", "loss.LossCalculator.l1_loss", "loss.LossCalculator.l1_loss", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.reduce_mean", "loss.LossCalculator.l1_loss", "loss.LossCalculator.l1_loss", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.reduce_mean", "loss.LossCalculator.l1_loss", "loss.LossCalculator.l1_loss", "loss.LossCalculator.tv_loss", "loss.random_interpolates", "inpaint_model.InpaintModel.build_discriminator_256", "loss.gradients_penalty", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "loss.grad_matching_loss", "tensorflow.concat", "tensorflow.concat", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "loss.grad_matching_loss", "tensorflow.concat", "tensorflow.concat", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "loss.grad_matching_loss", "loss.grad_matching_loss", "loss.LossCalculator.content_loss", "loss.LossCalculator.style_loss", "loss.LossCalculator.content_loss", "loss.LossCalculator.style_loss", "tensorflow.concat", "tensorflow.concat"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.inpaint_model.InpaintModel.build_inpaint_net", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.build_discriminator_256", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.patch_gan_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.l1_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.l1_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.l1_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.l1_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.l1_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.l1_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.tv_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.random_interpolates", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.build_discriminator_256", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.gradients_penalty", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.grad_matching_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.grad_matching_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.grad_matching_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.grad_matching_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.content_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.style_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.content_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.style_loss"], ["", "", "def", "build_graph_with_losses", "(", "self", ",", "x", ",", "mask", ",", "edge", ",", "edge_128", ",", "edge_64", ",", "args", ",", "training", "=", "True", ",", "reuse", "=", "False", ")", ":", "\n", "# Orgin image, edge, grad", "\n", "# image, edge, edge_128, edge_64 = x", "\n", "        ", "grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "x", ")", "# normalization?", "\n", "grad", "=", "tf", ".", "reshape", "(", "grad", ",", "[", "args", ".", "BATCH_SIZE", ",", "256", ",", "256", ",", "6", "]", ")", "# 6 channel", "\n", "\n", "# x for image", "\n", "# x = tf.reshape(image, [args.BATCH_SIZE, args.IMG_SHAPES[0], args.IMG_SHAPES[1],", "\n", "#                        args.IMG_SHAPES[2]])  # [-1, args.IMG_SHAPES[0], args.IMG_SHAPES[1], args.IMG_SHAPES[2]]", "\n", "# mask = tf.reshape(mask, [-1, args.IMG_SHAPES[0], args.IMG_SHAPES[1], 1])", "\n", "# edge = tf.reshape(edge, [-1, args.IMG_SHAPES[0], args.IMG_SHAPES[1], 1])", "\n", "# edge_128 = tf.reshape(edge_128, [-1, 128, 128, 1])", "\n", "# edge_64 = tf.reshape(edge_64, [-1, 64, 64, 1])", "\n", "\n", "# incomplete image at full scale", "\n", "x_incomplete", "=", "x", "*", "(", "1.", "-", "mask", ")", "# mask: 0 for valid pixel, 1 (white) for hole", "\n", "\n", "# incomplete edge at full scale", "\n", "input_edge", "=", "1", "-", "edge", "# 0 (black) for edge when save and input, 1 (white) for non edge", "\n", "edge_incomplete", "=", "input_edge", "*", "(", "1", "-", "mask", ")", "+", "mask", "\n", "\n", "# incomplete grad", "\n", "grad_incomplete", "=", "(", "1.", "-", "mask", ")", "*", "grad", "\n", "\n", "# bulid inpaint net", "\n", "out_256", ",", "out_64", ",", "out_128", ",", "out_grad_256", ",", "out_grad_64", ",", "out_grad_128", "=", "self", ".", "build_inpaint_net", "(", "x_incomplete", ",", "\n", "edge_incomplete", ",", "grad_incomplete", ",", "\n", "mask", ",", "args", ",", "reuse", "=", "reuse", ",", "\n", "training", "=", "training", ",", "padding", "=", "args", ".", "PADDING", ")", "\n", "\n", "\"\"\"##### Losses #####\"\"\"", "\n", "losses", "=", "{", "}", "# use a dict to collect losses", "\n", "\n", "# TODO: scale 64", "\n", "# complete image", "\n", "mask_64", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "mask", ",", "(", "64", ",", "64", ")", ")", "\n", "x_pos_64", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "x", ",", "(", "64", ",", "64", ")", ")", "# pos input (real)", "\n", "\n", "x_incomplete_64", "=", "x_pos_64", "*", "(", "1.", "-", "mask_64", ")", "\n", "x_complete_64", "=", "out_64", "*", "mask_64", "+", "x_incomplete_64", "\n", "x_neg_64", "=", "x_complete_64", "# neg input (fake)", "\n", "\n", "# Auxilary task: edge and grad loss", "\n", "grad_64", "=", "tf", ".", "image", ".", "sobel_edges", "(", "x_pos_64", ")", "# normalization?", "\n", "grad_64", "=", "tf", ".", "reshape", "(", "grad_64", ",", "[", "args", ".", "BATCH_SIZE", ",", "64", ",", "64", ",", "6", "]", ")", "# 6 channel", "\n", "grad_incomplete_64", "=", "(", "1.", "-", "mask_64", ")", "*", "grad_64", "\n", "grad_complete_64", "=", "out_grad_64", "*", "mask_64", "+", "grad_incomplete_64", "\n", "\n", "# more weight for edges?", "\n", "edge_mask_64", "=", "edge_64", "# 1 for edge, 0 for grad, when using feature.canny()", "\n", "mask_priority_64", "=", "priority_loss_mask", "(", "edge_mask_64", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", "\n", "edge_weight_64", "=", "args", ".", "EDGE_ALPHA", "*", "mask_priority_64", "# salient edge", "\n", "\n", "grad_weight_64", "=", "args", ".", "GRAD_ALPHA", "# equaled grad", "\n", "\n", "# error", "\n", "grad_error_64", "=", "tf", ".", "abs", "(", "out_grad_64", "-", "grad_64", ")", "\n", "\n", "# edge loss", "\n", "losses", "[", "'edge_l1_loss_64'", "]", "=", "tf", ".", "reduce_sum", "(", "edge_weight_64", "*", "grad_error_64", ")", "/", "tf", ".", "reduce_sum", "(", "edge_weight_64", ")", "/", "6.", "\n", "\n", "# grad pixel level reconstruction loss", "\n", "if", "args", ".", "GRAD_ALPHA", ">", "0", ":", "\n", "            ", "losses", "[", "'grad_l1_loss_64'", "]", "=", "tf", ".", "reduce_mean", "(", "grad_weight_64", "*", "grad_error_64", ")", "\n", "", "else", ":", "\n", "            ", "losses", "[", "'grad_l1_loss_64'", "]", "=", "0.", "\n", "# grad patch level loss with implicit nearest neighbor matching", "\n", "", "if", "args", ".", "GRAD_MATCHING_ALPHA", ">", "0", ":", "\n", "            ", "losses", "[", "'grad_matching_64'", "]", "=", "args", ".", "GRAD_MATCHING_ALPHA", "*", "grad_matching_loss", "(", "out_grad_64", ",", "grad_64", ",", "args", ")", "\n", "", "else", ":", "\n", "            ", "losses", "[", "'grad_matching_64'", "]", "=", "0.", "\n", "\n", "# Main task: compute losses", "\n", "# l1 loss", "\n", "# if args.L1_SCALE > 0.:", "\n", "", "loss_caculator", "=", "LossCalculator", "(", "args", ".", "VGG_DIR", ",", "x_pos_64", ")", "# x_pose_256: real image", "\n", "losses", "[", "'l1_loss_fore_64'", "]", "=", "args", ".", "L1_SCALE", "*", "args", ".", "L1_FORE_ALPHA", "*", "loss_caculator", ".", "l1_loss", "(", "x_pos_64", ",", "out_64", ",", "mask_64", ",", "\n", "type", "=", "'foreground'", ")", "\n", "losses", "[", "'l1_loss_back_64'", "]", "=", "args", ".", "L1_SCALE", "*", "args", ".", "L1_BACK_ALPHA", "*", "loss_caculator", ".", "l1_loss", "(", "x_pos_64", ",", "out_64", ",", "mask_64", ",", "\n", "type", "=", "'background'", ")", "\n", "# else:", "\n", "#     losses['l1_loss_fore_64'] = 0.", "\n", "#     losses['l1_loss_back_64'] = 0.", "\n", "\n", "self", ".", "losses_64", "=", "[", "losses", "[", "'l1_loss_fore_64'", "]", ",", "\n", "losses", "[", "'l1_loss_back_64'", "]", ",", "\n", "losses", "[", "'grad_l1_loss_64'", "]", ",", "\n", "losses", "[", "'edge_l1_loss_64'", "]", ",", "\n", "losses", "[", "'grad_matching_64'", "]", "\n", "]", "\n", "# Summary", "\n", "viz_img_64", "=", "[", "x_pos_64", ",", "x_incomplete_64", ",", "x_complete_64", "]", "\n", "viz_grad_64", "=", "[", "grad_64", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", ",", "grad_incomplete_64", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", ",", "grad_complete_64", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "]", "\n", "self", ".", "img_64", "=", "tf", ".", "concat", "(", "viz_img_64", ",", "axis", "=", "2", ")", "\n", "self", ".", "grad_64", "=", "tf", ".", "concat", "(", "viz_grad_64", ",", "axis", "=", "2", ")", "\n", "\n", "all_sum_64", "=", "[", "tf", ".", "summary", ".", "scalar", "(", "\"l1_loss_fore_64\"", ",", "losses", "[", "'l1_loss_fore_64'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"l1_loss_back_64\"", ",", "losses", "[", "'l1_loss_back_64'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "image", "(", "'raw_incomplete_predicted_complete_64'", ",", "\n", "tf", ".", "concat", "(", "viz_img_64", ",", "axis", "=", "2", ")", ",", "max_outputs", "=", "args", ".", "VIZ_MAX_OUT", ")", ",", "\n", "tf", ".", "summary", ".", "image", "(", "'raw_incomplete_predicted_completed_grad_64'", ",", "\n", "tf", ".", "concat", "(", "viz_grad_64", ",", "axis", "=", "2", ")", ",", "max_outputs", "=", "args", ".", "VIZ_MAX_OUT", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'grad_l1_loss_64'", ",", "losses", "[", "'grad_l1_loss_64'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'edge_l1_loss_64'", ",", "losses", "[", "'edge_l1_loss_64'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'grad_matching_64'", ",", "losses", "[", "'grad_matching_64'", "]", ")", ",", "\n", "]", "\n", "\n", "# TODO: scale 128", "\n", "# complete image", "\n", "mask_128", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "mask", ",", "(", "128", ",", "128", ")", ")", "\n", "x_pos_128", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "x", ",", "(", "128", ",", "128", ")", ")", "# pos input (real)", "\n", "\n", "x_incomplete_128", "=", "x_pos_128", "*", "(", "1.", "-", "mask_128", ")", "\n", "x_complete_128", "=", "out_128", "*", "mask_128", "+", "x_incomplete_128", "\n", "x_neg_128", "=", "x_complete_128", "# neg input (fake)", "\n", "\n", "# Auxilary task: edge and grad loss", "\n", "grad_128", "=", "tf", ".", "image", ".", "sobel_edges", "(", "x_pos_128", ")", "# normalization?", "\n", "grad_128", "=", "tf", ".", "reshape", "(", "grad_128", ",", "[", "args", ".", "BATCH_SIZE", ",", "128", ",", "128", ",", "6", "]", ")", "# 6 channel", "\n", "grad_incomplete_128", "=", "(", "1.", "-", "mask_128", ")", "*", "grad_128", "\n", "grad_complete_128", "=", "out_grad_128", "*", "mask_128", "+", "grad_incomplete_128", "\n", "\n", "# more weight for edges?", "\n", "# edge weight", "\n", "edge_mask_128", "=", "edge_128", "# 1 for edge, 0 for grad, when using feature.canny()", "\n", "mask_priority_128", "=", "priority_loss_mask", "(", "edge_mask_128", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", "\n", "edge_weight_128", "=", "args", ".", "EDGE_ALPHA", "*", "mask_priority_128", "# salient edge", "\n", "# grad weight", "\n", "grad_weight_128", "=", "args", ".", "GRAD_ALPHA", "# equaled grad", "\n", "\n", "# error", "\n", "grad_error_128", "=", "tf", ".", "abs", "(", "out_grad_128", "-", "grad_128", ")", "\n", "\n", "# edge loss", "\n", "losses", "[", "'edge_l1_loss_128'", "]", "=", "tf", ".", "reduce_sum", "(", "edge_weight_128", "*", "grad_error_128", ")", "/", "tf", ".", "reduce_sum", "(", "edge_weight_128", ")", "/", "6.", "\n", "\n", "# grad pixel level reconstruction loss", "\n", "if", "args", ".", "GRAD_ALPHA", ">", "0", ":", "\n", "            ", "losses", "[", "'grad_l1_loss_128'", "]", "=", "tf", ".", "reduce_mean", "(", "grad_weight_128", "*", "grad_error_128", ")", "\n", "", "else", ":", "\n", "            ", "losses", "[", "'grad_l1_loss_128'", "]", "=", "0.", "\n", "# grad patch level loss with implicit nearest neighbor matching", "\n", "", "if", "args", ".", "GRAD_MATCHING_ALPHA", ">", "0", ":", "\n", "            ", "losses", "[", "'grad_matching_128'", "]", "=", "args", ".", "GRAD_MATCHING_ALPHA", "*", "grad_matching_loss", "(", "out_grad_128", ",", "grad_128", ",", "args", ")", "\n", "", "else", ":", "\n", "            ", "losses", "[", "'grad_matching_128'", "]", "=", "0.", "\n", "# Main task", "\n", "# compute losses", "\n", "# if args.L1_SCALE > 0.:", "\n", "", "loss_caculator", "=", "LossCalculator", "(", "args", ".", "VGG_DIR", ",", "x_pos_128", ")", "# x_pose_256: real image", "\n", "\n", "# l1 loss", "\n", "losses", "[", "'l1_loss_fore_128'", "]", "=", "args", ".", "L1_SCALE", "*", "args", ".", "L1_FORE_ALPHA", "*", "loss_caculator", ".", "l1_loss", "(", "x_pos_128", ",", "out_128", ",", "mask_128", ",", "\n", "'foreground'", ")", "\n", "losses", "[", "'l1_loss_back_128'", "]", "=", "args", ".", "L1_SCALE", "*", "args", ".", "L1_BACK_ALPHA", "*", "loss_caculator", ".", "l1_loss", "(", "x_pos_128", ",", "out_128", ",", "mask_128", ",", "\n", "'background'", ")", "\n", "# else:", "\n", "#     losses['l1_loss_fore_128'] = 0.", "\n", "#     losses['l1_loss_back_128'] = 0.", "\n", "\n", "self", ".", "losses_128", "=", "[", "losses", "[", "'l1_loss_fore_128'", "]", ",", "\n", "losses", "[", "'l1_loss_back_128'", "]", ",", "\n", "losses", "[", "'grad_l1_loss_128'", "]", ",", "\n", "losses", "[", "'edge_l1_loss_128'", "]", ",", "\n", "losses", "[", "'grad_matching_128'", "]", "\n", "]", "\n", "# Summary", "\n", "viz_img_128", "=", "[", "x_pos_128", ",", "x_incomplete_128", ",", "x_complete_128", "]", "\n", "viz_grad_128", "=", "[", "grad_128", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", ",", "grad_incomplete_128", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", ",", "grad_complete_128", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "]", "\n", "\n", "self", ".", "img_128", "=", "tf", ".", "concat", "(", "viz_img_128", ",", "axis", "=", "2", ")", "\n", "self", ".", "grad_128", "=", "tf", ".", "concat", "(", "viz_grad_128", ",", "axis", "=", "2", ")", "\n", "\n", "all_sum_128", "=", "[", "tf", ".", "summary", ".", "scalar", "(", "\"l1_loss_fore_128\"", ",", "losses", "[", "'l1_loss_fore_128'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"l1_loss_back_128\"", ",", "losses", "[", "'l1_loss_back_128'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "image", "(", "'raw_incomplete_predicted_complete_128'", ",", "\n", "tf", ".", "concat", "(", "viz_img_128", ",", "axis", "=", "2", ")", ",", "max_outputs", "=", "args", ".", "VIZ_MAX_OUT", ")", ",", "\n", "tf", ".", "summary", ".", "image", "(", "'raw_incomplete_predicted_completed_grad_128'", ",", "\n", "tf", ".", "concat", "(", "viz_grad_128", ",", "axis", "=", "2", ")", ",", "max_outputs", "=", "args", ".", "VIZ_MAX_OUT", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'grad_l1_loss_128'", ",", "losses", "[", "'grad_l1_loss_128'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'edge_l1_loss_128'", ",", "losses", "[", "'edge_l1_loss_128'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'grad_matching_128'", ",", "losses", "[", "'grad_matching_128'", "]", ")", ",", "\n", "]", "\n", "\n", "# TODO: scale 256", "\n", "# apply mask and complete image", "\n", "mask_256", "=", "mask", "\n", "x_incomplete_256", "=", "x_incomplete", "\n", "x_complete_256", "=", "out_256", "*", "mask_256", "+", "x_incomplete_256", "\n", "\n", "# Auxilary task: edge and grad loss", "\n", "grad_256", "=", "grad", "# normalization?", "\n", "grad_256", "=", "tf", ".", "reshape", "(", "grad_256", ",", "[", "args", ".", "BATCH_SIZE", ",", "256", ",", "256", ",", "6", "]", ")", "# 6 channel", "\n", "grad_incomplete_256", "=", "(", "1.", "-", "mask_256", ")", "*", "grad_256", "\n", "grad_complete_256", "=", "out_grad_256", "*", "mask_256", "+", "grad_incomplete_256", "\n", "\n", "# more weight for edges?", "\n", "# edge weight", "\n", "edge_mask_256", "=", "edge", "# 1 for edge, 0 for grad, when using feature.canny()", "\n", "mask_priority_256", "=", "priority_loss_mask", "(", "edge_mask_256", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", "\n", "edge_weight_256", "=", "args", ".", "EDGE_ALPHA", "*", "mask_priority_256", "# salient edge", "\n", "# grad weight", "\n", "grad_weight_256", "=", "args", ".", "GRAD_ALPHA", "# equaled grad", "\n", "\n", "# error", "\n", "grad_error_256", "=", "tf", ".", "abs", "(", "out_grad_256", "-", "grad_256", ")", "\n", "\n", "# edge loss", "\n", "losses", "[", "'edge_l1_loss_256'", "]", "=", "tf", ".", "reduce_sum", "(", "edge_weight_256", "*", "grad_error_256", ")", "/", "tf", ".", "reduce_sum", "(", "edge_weight_256", ")", "/", "6.", "\n", "\n", "# grad pixel level reconstruction loss", "\n", "if", "args", ".", "GRAD_ALPHA", ">", "0", ":", "\n", "            ", "losses", "[", "'grad_l1_loss_256'", "]", "=", "tf", ".", "reduce_mean", "(", "grad_weight_256", "*", "grad_error_256", ")", "\n", "", "else", ":", "\n", "            ", "losses", "[", "'grad_l1_loss_256'", "]", "=", "0.", "\n", "# grad patch level loss with implicit nearest neighbor matching", "\n", "", "if", "args", ".", "GRAD_MATCHING_ALPHA", ">", "0", ":", "\n", "            ", "losses", "[", "'grad_matching_256'", "]", "=", "args", ".", "GRAD_MATCHING_ALPHA", "*", "grad_matching_loss", "(", "out_grad_256", ",", "grad_256", ",", "args", ")", "\n", "", "else", ":", "\n", "            ", "losses", "[", "'grad_matching_256'", "]", "=", "0.", "\n", "\n", "# compute losses", "\n", "", "x_neg_256", "=", "x_complete_256", "# neg input (fake)", "\n", "x_pos_256", "=", "x", "# pos input (real)", "\n", "\n", "# losses", "\n", "loss_caculator", "=", "LossCalculator", "(", "args", ".", "VGG_DIR", ",", "x_pos_256", ")", "# x_pose_256: real image", "\n", "\n", "# l1 loss", "\n", "losses", "[", "'l1_loss_fore_256'", "]", "=", "args", ".", "L1_FORE_ALPHA", "*", "loss_caculator", ".", "l1_loss", "(", "x_pos_256", ",", "out_256", ",", "mask_256", ",", "\n", "'foreground'", ")", "\n", "losses", "[", "'l1_loss_back_256'", "]", "=", "args", ".", "L1_BACK_ALPHA", "*", "loss_caculator", ".", "l1_loss", "(", "x_pos_256", ",", "out_256", ",", "mask_256", ",", "\n", "'background'", ")", "\n", "\n", "# image patch level loss with implicit nearest neighbor matching", "\n", "if", "args", ".", "IMG_MATCHING_ALPHA", ">", "0", ":", "\n", "            ", "losses", "[", "'img_matching_256'", "]", "=", "args", ".", "IMG_MATCHING_ALPHA", "*", "grad_matching_loss", "(", "out_256", ",", "x", ",", "args", ")", "\n", "", "else", ":", "\n", "            ", "losses", "[", "'img_matching_256'", "]", "=", "0.", "\n", "\n", "# content loss, style loss, tv loss", "\n", "", "layers", "=", "{", "'relu1_1'", ":", "0.2", ",", "'relu2_1'", ":", "0.2", ",", "'relu3_1'", ":", "0.2", ",", "'relu4_1'", ":", "0.2", ",", "'relu5_1'", ":", "0.2", "}", "\n", "if", "args", ".", "CONTENT_FORE_ALPHA", ">", "0.", ":", "\n", "            ", "layers", "=", "{", "'relu1_1'", ":", "0.2", ",", "'relu2_1'", ":", "0.2", ",", "'relu3_1'", ":", "0.2", ",", "'relu4_1'", ":", "0.2", ",", "'relu5_1'", ":", "0.2", "}", "\n", "losses", "[", "'content_loss_256'", "]", "=", "args", ".", "CONTENT_FORE_ALPHA", "*", "loss_caculator", ".", "content_loss", "(", "x_neg_256", ",", "layers", "=", "layers", ")", "\n", "", "else", ":", "\n", "            ", "losses", "[", "'content_loss_256'", "]", "=", "0.", "\n", "", "if", "args", ".", "STYLE_FORE_ALPHA", ">", "0.", ":", "\n", "# layers = {'pool1': 0.33, 'pool2': 0.34, 'pool3': 0.33}", "\n", "            ", "losses", "[", "'style_loss_256'", "]", "=", "args", ".", "STYLE_FORE_ALPHA", "*", "loss_caculator", ".", "style_loss", "(", "x_neg_256", ",", "layers", "=", "layers", ")", "\n", "", "else", ":", "\n", "            ", "losses", "[", "'style_loss_256'", "]", "=", "0.", "\n", "", "if", "args", ".", "BACKGROUND_LOSS", ":", "\n", "            ", "layers", "=", "{", "'relu1_1'", ":", "0.2", ",", "'relu2_1'", ":", "0.2", ",", "'relu3_1'", ":", "0.2", ",", "'relu4_1'", ":", "0.2", ",", "'relu5_1'", ":", "0.2", "}", "\n", "losses", "[", "'content_loss_256'", "]", "+=", "args", ".", "CONTENT_BACK_ALPHA", "*", "loss_caculator", ".", "content_loss", "(", "out_256", ",", "layers", "=", "layers", ")", "\n", "# layers = {'pool1': 0.33, 'pool2': 0.34, 'pool3': 0.33}", "\n", "losses", "[", "'style_loss_256'", "]", "+=", "args", ".", "STYLE_BACK_ALPHA", "*", "loss_caculator", ".", "style_loss", "(", "out_256", ",", "layers", "=", "layers", ")", "\n", "\n", "", "if", "args", ".", "TV_ALPHA", ">", "0", ":", "\n", "            ", "losses", "[", "'tv_loss_256'", "]", "=", "loss_caculator", ".", "tv_loss", "(", "x_neg_256", ")", "\n", "", "else", ":", "\n", "            ", "losses", "[", "'tv_loss_256'", "]", "=", "0.", "\n", "\n", "# patch-gan-loss", "\n", "", "x_pos_neg_256", "=", "tf", ".", "concat", "(", "[", "x_pos_256", ",", "x_neg_256", "]", ",", "axis", "=", "0", ")", "# input as pos-neg to global discriminator", "\n", "pos_neg_256", "=", "self", ".", "build_discriminator_256", "(", "x_pos_neg_256", ",", "name", "=", "'discriminator256'", ",", "sn", "=", "args", ".", "SN", ")", "\n", "pos_256", ",", "neg_256", "=", "tf", ".", "split", "(", "pos_neg_256", ",", "2", ")", "\n", "\n", "g_loss_256", ",", "d_loss_256", ",", "d_loss_real_256", ",", "d_loss_fake_256", "=", "patch_gan_loss", "(", "pos_256", ",", "neg_256", ",", "name", "=", "'patch_gan_loss256'", ",", "loss_type", "=", "args", ".", "GAN_LOSS_TYPE", ")", "\n", "losses", "[", "'g_loss_256'", "]", "=", "g_loss_256", "\n", "losses", "[", "'d_loss_256'", "]", "=", "d_loss_256", "\n", "\n", "# gp loss (default not used)", "\n", "if", "args", ".", "GP_ALPHA", ">", "0", ":", "\n", "            ", "interpolates", "=", "random_interpolates", "(", "x_pos_256", ",", "x_neg_256", ")", "# interpolate", "\n", "dout", "=", "self", ".", "build_discriminator_256", "(", "interpolates", ",", "name", "=", "'discriminator256'", ",", "reuse", "=", "True", ",", "sn", "=", "args", ".", "SN", ")", "\n", "penalty", "=", "gradients_penalty", "(", "interpolates", ",", "dout", ",", "mask", "=", "mask_256", ")", "# apply penalty", "\n", "gp_loss", "=", "penalty", "\n", "", "else", ":", "\n", "            ", "gp_loss", "=", "0", "\n", "", "losses", "[", "'gp_loss_256'", "]", "=", "gp_loss", "\n", "\n", "self", ".", "losses_256", "=", "[", "losses", "[", "'l1_loss_fore_256'", "]", ",", "\n", "losses", "[", "'l1_loss_back_256'", "]", ",", "\n", "losses", "[", "'grad_l1_loss_256'", "]", ",", "\n", "losses", "[", "'edge_l1_loss_256'", "]", ",", "\n", "losses", "[", "'grad_matching_256'", "]", ",", "\n", "losses", "[", "'img_matching_256'", "]", "\n", "]", "\n", "# Summary", "\n", "viz_img_256", "=", "[", "x", ",", "x_incomplete_256", ",", "x_complete_256", "]", "\n", "viz_grad_256", "=", "[", "grad_256", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", ",", "grad_incomplete_256", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", ",", "grad_complete_256", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "]", "\n", "\n", "self", ".", "img_256", "=", "tf", ".", "concat", "(", "viz_img_256", ",", "axis", "=", "2", ")", "\n", "self", ".", "grad_256", "=", "tf", ".", "concat", "(", "viz_grad_256", ",", "axis", "=", "2", ")", "\n", "\n", "all_sum_256", "=", "[", "tf", ".", "summary", ".", "scalar", "(", "\"l1_loss_fore_256\"", ",", "losses", "[", "'l1_loss_fore_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"l1_loss_back_256\"", ",", "losses", "[", "'l1_loss_back_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'g_loss_256'", ",", "g_loss_256", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'d_loss_256'", ",", "d_loss_256", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'d_loss_fake_256'", ",", "d_loss_fake_256", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'d_loss_real_256'", ",", "d_loss_real_256", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'content_loss_256'", ",", "losses", "[", "'content_loss_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'style_loss_256'", ",", "losses", "[", "'style_loss_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "image", "(", "'raw_incomplete_predicted_complete_256'", ",", "\n", "tf", ".", "concat", "(", "viz_img_256", ",", "axis", "=", "2", ")", ",", "max_outputs", "=", "args", ".", "VIZ_MAX_OUT", ")", ",", "\n", "tf", ".", "summary", ".", "image", "(", "'raw_incomplete_predicted_completed_grad_256'", ",", "\n", "tf", ".", "concat", "(", "viz_grad_256", ",", "axis", "=", "2", ")", ",", "max_outputs", "=", "args", ".", "VIZ_MAX_OUT", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'tv_loss_256'", ",", "losses", "[", "'tv_loss_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'grad_l1_loss_256'", ",", "losses", "[", "'grad_l1_loss_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'edge_l1_loss_256'", ",", "losses", "[", "'edge_l1_loss_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'grad_matching_256'", ",", "losses", "[", "'grad_matching_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'img_matching_256'", ",", "losses", "[", "'img_matching_256'", "]", ")", ",", "\n", "]", "\n", "\n", "\"\"\"##### Variables #####\"\"\"", "\n", "# generator vars", "\n", "self", ".", "total_g_vars", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ",", "'inpaint_net'", ")", "\n", "self", ".", "total_d_vars", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ",", "'discriminator'", ")", "\n", "\n", "\"\"\"##### Training Ops #####\"\"\"", "\n", "# train ops", "\n", "# Scale 64", "\n", "losses", "[", "'total_g_loss_64'", "]", "=", "0.0", "*", "losses", "[", "'l1_loss_fore_64'", "]", "+", "0.0", "*", "losses", "[", "'l1_loss_back_64'", "]", "+", "args", ".", "ALPHA", "*", "(", "losses", "[", "'edge_l1_loss_64'", "]", "+", "\n", "losses", "[", "'grad_l1_loss_64'", "]", "+", "\n", "losses", "[", "'grad_matching_64'", "]", ")", "\n", "\n", "# Scale 128", "\n", "losses", "[", "'total_g_loss_128'", "]", "=", "0.0", "*", "losses", "[", "'l1_loss_fore_128'", "]", "+", "0.0", "*", "losses", "[", "'l1_loss_back_128'", "]", "+", "args", ".", "ALPHA", "*", "(", "losses", "[", "'edge_l1_loss_128'", "]", "+", "\n", "losses", "[", "'grad_l1_loss_128'", "]", "+", "\n", "losses", "[", "'grad_matching_128'", "]", ")", "\n", "\n", "# Scale 256", "\n", "losses", "[", "'total_g_loss_256'", "]", "=", "losses", "[", "'l1_loss_fore_256'", "]", "+", "losses", "[", "'l1_loss_back_256'", "]", "+", "losses", "[", "'content_loss_256'", "]", "+", "losses", "[", "'style_loss_256'", "]", "+", "args", ".", "PATCH_GAN_ALPHA", "*", "losses", "[", "'g_loss_256'", "]", "+", "args", ".", "TV_ALPHA", "*", "losses", "[", "'tv_loss_256'", "]", "+", "args", ".", "ALPHA", "*", "(", "losses", "[", "'edge_l1_loss_256'", "]", "+", "\n", "losses", "[", "'grad_l1_loss_256'", "]", "+", "\n", "losses", "[", "'grad_matching_256'", "]", ")", "+", "losses", "[", "'img_matching_256'", "]", "\n", "\n", "losses", "[", "'total_d_loss_256'", "]", "=", "losses", "[", "'d_loss_256'", "]", "+", "args", ".", "GP_ALPHA", "*", "losses", "[", "'gp_loss_256'", "]", "\n", "\n", "self", ".", "g_loss", "=", "losses", "[", "'total_g_loss_256'", "]", "+", "losses", "[", "'total_g_loss_128'", "]", "+", "losses", "[", "'total_g_loss_64'", "]", "\n", "# self.g_loss = losses['total_g_loss_256']    # without deep structure supervision", "\n", "self", ".", "d_loss", "=", "losses", "[", "'total_d_loss_256'", "]", "\n", "\n", "# summary", "\n", "self", ".", "all_sum_64", "=", "tf", ".", "summary", ".", "merge", "(", "all_sum_64", ")", "\n", "self", ".", "all_sum_128", "=", "tf", ".", "summary", ".", "merge", "(", "all_sum_128", ")", "\n", "self", ".", "all_sum_256", "=", "tf", ".", "summary", ".", "merge", "(", "all_sum_256", ")", "\n", "self", ".", "all_sum", "=", "tf", ".", "summary", ".", "merge", "(", "all_sum_64", "+", "all_sum_128", "+", "all_sum_256", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.build_validation_model": [[477, 642], ["tensorflow.image.sobel_edges", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "inpaint_model.InpaintModel.build_inpaint_net", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "utils_fn.inverse_transform", "utils_fn.inverse_transform", "metrics.psnr", "metrics.ssmi", "metrics.avg_l1", "metrics.tv_loss", "tensorflow.concat", "tensorflow.summary.merge", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "utils_fn.inverse_transform", "utils_fn.inverse_transform", "metrics.psnr", "metrics.ssmi", "metrics.avg_l1", "metrics.tv_loss", "tensorflow.concat", "tensorflow.summary.merge", "utils_fn.inverse_transform", "utils_fn.inverse_transform", "metrics.psnr", "metrics.ssmi", "metrics.avg_l1", "metrics.tv_loss", "loss.priority_loss_mask", "tensorflow.abs", "tensorflow.reduce_mean", "loss.grad_matching_loss", "tensorflow.concat", "tensorflow.summary.merge", "tensorflow.image.resize_images", "utils_fn.inverse_transform", "tensorflow.image.resize_images", "utils_fn.inverse_transform", "utils_fn.inverse_transform", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.image", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.image", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.inpaint_model.InpaintModel.build_inpaint_net", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.psnr", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.ssmi", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.avg_l1", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.tv_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.psnr", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.ssmi", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.avg_l1", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.tv_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.psnr", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.ssmi", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.avg_l1", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.tv_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.grad_matching_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform"], ["", "def", "build_validation_model", "(", "self", ",", "x", ",", "mask", ",", "args", ",", "training", "=", "False", ",", "reuse", "=", "True", ")", ":", "\n", "# Orgin image, edge", "\n", "        ", "image", ",", "edge", ",", "edge_128", ",", "edge_64", "=", "x", "\n", "grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "image", ")", "# normalization?", "\n", "grad", "=", "tf", ".", "reshape", "(", "grad", ",", "[", "args", ".", "VAL_NUM", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "6", "]", ")", "# 6 channel", "\n", "\n", "# x for image", "\n", "x", "=", "tf", ".", "reshape", "(", "image", ",", "[", "args", ".", "VAL_NUM", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "\n", "args", ".", "IMG_SHAPES", "[", "2", "]", "]", ")", "# [-1, args.IMG_SHAPES[0], args.IMG_SHAPES[1], args.IMG_SHAPES[2]]", "\n", "mask", "=", "tf", ".", "reshape", "(", "mask", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "edge", "=", "tf", ".", "reshape", "(", "edge", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "edge_128", "=", "tf", ".", "reshape", "(", "edge_128", ",", "[", "-", "1", ",", "128", ",", "128", ",", "1", "]", ")", "\n", "edge_64", "=", "tf", ".", "reshape", "(", "edge_64", ",", "[", "-", "1", ",", "64", ",", "64", ",", "1", "]", ")", "\n", "\n", "x_incomplete", "=", "x", "*", "(", "1.", "-", "mask", ")", "\n", "\n", "# incomplete edge at full scale", "\n", "input_edge", "=", "1", "-", "edge", "\n", "edge_incomplete", "=", "input_edge", "*", "(", "1", "-", "mask", ")", "+", "mask", "# 0 (black) for edge when save and input, 1 (white) for non edge", "\n", "\n", "# grad", "\n", "grad_incomplete", "=", "(", "1.", "-", "mask", ")", "*", "grad", "\n", "\n", "# bulid inpaint net", "\n", "out_256", ",", "out_64", ",", "out_128", ",", "out_grad_256", ",", "out_grad_64", ",", "out_grad_128", "=", "self", ".", "build_inpaint_net", "(", "x_incomplete", ",", "\n", "edge_incomplete", ",", "\n", "grad_incomplete", ",", "\n", "mask", ",", "args", ",", "\n", "reuse", "=", "reuse", ",", "\n", "training", "=", "training", ",", "\n", "padding", "=", "args", ".", "PADDING", ")", "\n", "\n", "metrics", "=", "{", "}", "# use a dict to collect metrics", "\n", "\n", "# TODO: scale 64", "\n", "# apply mask and complete image", "\n", "mask_64", "=", "tf", ".", "image", ".", "resize_images", "(", "mask", ",", "(", "64", ",", "64", ")", ")", "\n", "x_incomplete_64", "=", "tf", ".", "image", ".", "resize_images", "(", "x_incomplete", ",", "(", "64", ",", "64", ")", ")", "\n", "x_complete_64", "=", "out_64", "*", "mask_64", "+", "x_incomplete_64", "\n", "\n", "x_64", "=", "inverse_transform", "(", "tf", ".", "image", ".", "resize_images", "(", "x", ",", "(", "64", ",", "64", ")", ")", ")", "\n", "x_complete_64", "=", "inverse_transform", "(", "x_complete_64", ")", "\n", "metrics", "[", "'psnr_64'", "]", "=", "psnr", "(", "x_64", ",", "x_complete_64", ")", "\n", "metrics", "[", "'ssmi_64'", "]", "=", "ssmi", "(", "x_64", ",", "x_complete_64", ")", "\n", "# self.metrics['mm-ssmi'] = mm_ssmi(x_128, x_complete_128)", "\n", "metrics", "[", "'l1_64'", "]", "=", "avg_l1", "(", "x_64", ",", "x_complete_64", ")", "\n", "metrics", "[", "'tv_64'", "]", "=", "tv_loss", "(", "x_complete_64", ")", "\n", "\n", "# summary", "\n", "viz_val_img_64", "=", "[", "x_64", ",", "inverse_transform", "(", "x_incomplete_64", ")", ",", "x_complete_64", "]", "\n", "self", ".", "val_img_64", "=", "tf", ".", "concat", "(", "viz_val_img_64", ",", "axis", "=", "2", ")", "\n", "self", ".", "val_metrics_64", "=", "[", "\n", "metrics", "[", "'psnr_64'", "]", ",", "\n", "metrics", "[", "'ssmi_64'", "]", ",", "\n", "metrics", "[", "'l1_64'", "]", "\n", "]", "\n", "\n", "self", ".", "val_all_sum_64", "=", "tf", ".", "summary", ".", "merge", "(", "\n", "[", "tf", ".", "summary", ".", "scalar", "(", "'val_psnr_64'", ",", "metrics", "[", "'psnr_64'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_ssmi_64'", ",", "metrics", "[", "'ssmi_64'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_l1_64'", ",", "metrics", "[", "'l1_64'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_tv_64'", ",", "metrics", "[", "'tv_64'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "image", "(", "'val_incomplete_predicted_complete_64'", ",", "tf", ".", "concat", "(", "viz_val_img_64", ",", "axis", "=", "2", ")", ",", "\n", "max_outputs", "=", "args", ".", "VIZ_MAX_OUT", ")", "\n", "]", "\n", ")", "\n", "\n", "# TODO: scale 128", "\n", "# apply mask and complete image", "\n", "mask_128", "=", "tf", ".", "image", ".", "resize_images", "(", "mask", ",", "(", "128", ",", "128", ")", ")", "\n", "x_incomplete_128", "=", "tf", ".", "image", ".", "resize_images", "(", "x_incomplete", ",", "(", "128", ",", "128", ")", ")", "\n", "x_complete_128", "=", "out_128", "*", "mask_128", "+", "x_incomplete_128", "\n", "\n", "x_128", "=", "inverse_transform", "(", "tf", ".", "image", ".", "resize_images", "(", "x", ",", "(", "128", ",", "128", ")", ")", ")", "\n", "x_complete_128", "=", "inverse_transform", "(", "x_complete_128", ")", "\n", "metrics", "[", "'psnr_128'", "]", "=", "psnr", "(", "x_128", ",", "x_complete_128", ")", "\n", "metrics", "[", "'ssmi_128'", "]", "=", "ssmi", "(", "x_128", ",", "x_complete_128", ")", "\n", "# self.metrics['mm-ssmi'] = mm_ssmi(x_128, x_complete_128)", "\n", "metrics", "[", "'l1_128'", "]", "=", "avg_l1", "(", "x_128", ",", "x_complete_128", ")", "\n", "metrics", "[", "'tv_128'", "]", "=", "tv_loss", "(", "x_complete_128", ")", "\n", "\n", "# summary", "\n", "viz_val_img_128", "=", "[", "x_128", ",", "inverse_transform", "(", "x_incomplete_128", ")", ",", "x_complete_128", "]", "\n", "self", ".", "val_img_128", "=", "tf", ".", "concat", "(", "viz_val_img_128", ",", "axis", "=", "2", ")", "\n", "self", ".", "val_metrics_128", "=", "[", "\n", "metrics", "[", "'psnr_128'", "]", ",", "\n", "metrics", "[", "'ssmi_128'", "]", ",", "\n", "metrics", "[", "'l1_128'", "]", "\n", "]", "\n", "\n", "self", ".", "val_all_sum_128", "=", "tf", ".", "summary", ".", "merge", "(", "\n", "[", "tf", ".", "summary", ".", "scalar", "(", "'val_psnr_128'", ",", "metrics", "[", "'psnr_128'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_ssmi_128'", ",", "metrics", "[", "'ssmi_128'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_l1_128'", ",", "metrics", "[", "'l1_128'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_tv_128'", ",", "metrics", "[", "'tv_128'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "image", "(", "'val_incomplete_predicted_complete_128'", ",", "tf", ".", "concat", "(", "viz_val_img_128", ",", "axis", "=", "2", ")", ",", "\n", "max_outputs", "=", "args", ".", "VIZ_MAX_OUT", ")", "\n", "]", "\n", ")", "\n", "\n", "# TODO: scale 256", "\n", "# apply mask and complete image", "\n", "mask_256", "=", "mask", "\n", "x_incomplete_256", "=", "x_incomplete", "\n", "x_complete_256", "=", "out_256", "*", "mask_256", "+", "x_incomplete_256", "\n", "\n", "x_256", "=", "inverse_transform", "(", "x", ")", "\n", "x_complete_256", "=", "inverse_transform", "(", "x_complete_256", ")", "\n", "metrics", "[", "'psnr_256'", "]", "=", "psnr", "(", "x_256", ",", "x_complete_256", ")", "\n", "metrics", "[", "'ssmi_256'", "]", "=", "ssmi", "(", "x_256", ",", "x_complete_256", ")", "\n", "# self.metrics['mm-ssmi'] = mm_ssmi(x_128, x_complete_128)", "\n", "metrics", "[", "'l1_256'", "]", "=", "avg_l1", "(", "x_256", ",", "x_complete_256", ")", "\n", "metrics", "[", "'tv_256'", "]", "=", "tv_loss", "(", "x_complete_256", ")", "\n", "\n", "# edge and grad loss", "\n", "grad_256", "=", "grad", "\n", "grad_incomplete_256", "=", "grad_incomplete", "\n", "grad_complete_256", "=", "out_grad_256", "*", "mask_256", "+", "grad_incomplete_256", "\n", "\n", "# more weight for edges?", "\n", "# edge weight", "\n", "edge_mask_256", "=", "edge", "# 1 for edge, 0 for grad, when using feature.canny()", "\n", "mask_priority_256", "=", "priority_loss_mask", "(", "edge_mask_256", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", "\n", "edge_weight_256", "=", "args", ".", "EDGE_ALPHA", "*", "mask_priority_256", "# salient edge", "\n", "# grad weight", "\n", "grad_weight_256", "=", "args", ".", "GRAD_ALPHA", "# equaled grad", "\n", "\n", "# error", "\n", "grad_error_256", "=", "tf", ".", "abs", "(", "out_grad_256", "-", "grad_256", ")", "\n", "\n", "# edge loss", "\n", "metrics", "[", "'edge_l1_loss_256'", "]", "=", "tf", ".", "reduce_sum", "(", "edge_weight_256", "*", "grad_error_256", ")", "/", "tf", ".", "reduce_sum", "(", "edge_weight_256", ")", "/", "6.", "\n", "\n", "# grad pixel level reconstruction loss", "\n", "metrics", "[", "'grad_l1_loss_256'", "]", "=", "tf", ".", "reduce_mean", "(", "grad_weight_256", "*", "grad_error_256", ")", "\n", "\n", "# grad patch level loss with implicit nearest neighbor matching", "\n", "metrics", "[", "'grad_matching_256'", "]", "=", "grad_matching_loss", "(", "out_grad_256", ",", "grad_256", ",", "args", ")", "\n", "\n", "# summary", "\n", "# ones_x = tf.ones_like(x)", "\n", "# viz_val_img_256 = [x_256, inverse_transform(x_incomplete_256), x_complete_256,", "\n", "#                ones_x * edge_256, ones_x * edge_incomplete_256, ones_x * edge_complete_256]", "\n", "viz_val_grad_256", "=", "[", "grad", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", ",", "grad_incomplete_256", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", ",", "\n", "grad_complete_256", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "]", "# , out_grad_256[:,:,:,0:1]", "\n", "viz_val_img_256", "=", "[", "x_256", ",", "inverse_transform", "(", "x_incomplete_256", ")", ",", "x_complete_256", "]", "\n", "\n", "self", ".", "val_img_256", "=", "tf", ".", "concat", "(", "viz_val_img_256", ",", "axis", "=", "2", ")", "\n", "self", ".", "val_metrics_256", "=", "[", "\n", "metrics", "[", "'psnr_256'", "]", ",", "\n", "metrics", "[", "'ssmi_256'", "]", ",", "\n", "metrics", "[", "'l1_256'", "]", "\n", "]", "\n", "\n", "self", ".", "val_all_sum_256", "=", "tf", ".", "summary", ".", "merge", "(", "\n", "[", "tf", ".", "summary", ".", "scalar", "(", "'val_psnr_256'", ",", "metrics", "[", "'psnr_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_ssmi_256'", ",", "metrics", "[", "'ssmi_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_l1_256'", ",", "metrics", "[", "'l1_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_grad_l1_loss_256'", ",", "metrics", "[", "'grad_l1_loss_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_grad_matching_256'", ",", "metrics", "[", "'grad_matching_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "scalar", "(", "'val_edge_l1_loss_256'", ",", "metrics", "[", "'edge_l1_loss_256'", "]", ")", ",", "\n", "tf", ".", "summary", ".", "image", "(", "'val_incomplete_predicted_complete_256'", ",", "tf", ".", "concat", "(", "viz_val_img_256", ",", "axis", "=", "2", ")", ",", "\n", "max_outputs", "=", "12", ")", ",", "\n", "tf", ".", "summary", ".", "image", "(", "'val_incomplete_predicted_completed_grad_256'", ",", "\n", "tf", ".", "concat", "(", "viz_val_grad_256", ",", "axis", "=", "2", ")", ",", "max_outputs", "=", "args", ".", "VIZ_MAX_OUT", ")", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.build_test_model": [[645, 707], ["tensorflow.image.sobel_edges", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "print", "print", "inpaint_model.InpaintModel.build_inpaint_net", "utils_fn.inverse_transform", "tensorflow.image.psnr", "tensorflow.image.ssim", "tensorflow.reduce_mean", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.psnr", "tensorflow.image.ssim", "tensorflow.reduce_mean", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.psnr", "tensorflow.image.ssim", "tensorflow.reduce_mean", "tensorflow.abs", "tensorflow.abs", "tensorflow.abs", "utils_fn.inverse_transform", "utils_fn.inverse_transform", "utils_fn.inverse_transform"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.inpaint_model.InpaintModel.build_inpaint_net", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.psnr", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.psnr", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.psnr", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform"], ["", "def", "build_test_model", "(", "self", ",", "x", ",", "mask", ",", "args", ",", "training", "=", "False", ",", "reuse", "=", "False", ")", ":", "\n", "# Orgin image, edge", "\n", "        ", "image", ",", "edge", "=", "x", "\n", "grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "image", ")", "# normalization?", "\n", "grad", "=", "tf", ".", "reshape", "(", "grad", ",", "[", "args", ".", "TEST_NUM", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "6", "]", ")", "# 6 channel", "\n", "\n", "# x for image", "\n", "x", "=", "tf", ".", "reshape", "(", "image", ",", "[", "args", ".", "TEST_NUM", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "\n", "args", ".", "IMG_SHAPES", "[", "2", "]", "]", ")", "# [-1, args.IMG_SHAPES[0], args.IMG_SHAPES[1], args.IMG_SHAPES[2]]", "\n", "mask", "=", "tf", ".", "reshape", "(", "mask", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "edge", "=", "tf", ".", "reshape", "(", "edge", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "\n", "# incomplete image", "\n", "x_incomplete", "=", "x", "*", "(", "1.", "-", "mask", ")", "\n", "\n", "# incomplete edge at full scale", "\n", "input_edge", "=", "1", "-", "edge", "\n", "print", "(", "edge", ".", "shape", ")", "\n", "print", "(", "mask", ".", "shape", ")", "\n", "edge_incomplete", "=", "input_edge", "*", "(", "1", "-", "mask", ")", "+", "mask", "# 0 (black) for edge when save and input, 1 (white) for non edge", "\n", "\n", "# grad", "\n", "grad_incomplete", "=", "(", "1.", "-", "mask", ")", "*", "grad", "\n", "\n", "# bulid inpaint net", "\n", "out_256", ",", "out_64", ",", "out_128", ",", "out_grad_256", ",", "out_grad_64", ",", "out_grad_128", "=", "self", ".", "build_inpaint_net", "(", "x_incomplete", ",", "\n", "edge_incomplete", ",", "\n", "grad_incomplete", ",", "\n", "mask", ",", "args", ",", "\n", "reuse", "=", "reuse", ",", "\n", "training", "=", "training", ",", "\n", "padding", "=", "args", ".", "PADDING", ")", "\n", "\n", "# scale 256", "\n", "self", ".", "raw_x", "=", "inverse_transform", "(", "x", ")", "\n", "self", ".", "raw_x_incomplete", "=", "self", ".", "raw_x", "*", "(", "1", "-", "mask", ")", "\n", "self", ".", "raw_x_complete", "=", "self", ".", "raw_x_incomplete", "+", "inverse_transform", "(", "out_256", ")", "*", "mask", "\n", "self", ".", "mask", "=", "mask", "\n", "\n", "self", ".", "psnr", "=", "tf", ".", "image", ".", "psnr", "(", "self", ".", "raw_x", ",", "self", ".", "raw_x_complete", ",", "max_val", "=", "255", ")", "\n", "self", ".", "ssim", "=", "tf", ".", "image", ".", "ssim", "(", "self", ".", "raw_x", ",", "self", ".", "raw_x_complete", ",", "max_val", "=", "255", ")", "\n", "self", ".", "l1", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "self", ".", "raw_x", "-", "self", ".", "raw_x_complete", ")", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "# scale 128", "\n", "self", ".", "raw_x_128", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "self", ".", "raw_x", ",", "(", "128", ",", "128", ")", ")", "\n", "self", ".", "mask_128", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "self", ".", "mask", ",", "(", "128", ",", "128", ")", ")", "\n", "self", ".", "raw_x_incomplete_128", "=", "self", ".", "raw_x_128", "*", "(", "1", "-", "self", ".", "mask_128", ")", "\n", "self", ".", "raw_x_complete_128", "=", "self", ".", "raw_x_incomplete_128", "+", "inverse_transform", "(", "out_128", ")", "*", "self", ".", "mask_128", "\n", "\n", "self", ".", "psnr_128", "=", "tf", ".", "image", ".", "psnr", "(", "self", ".", "raw_x_128", ",", "self", ".", "raw_x_complete_128", ",", "max_val", "=", "255", ")", "\n", "self", ".", "ssim_128", "=", "tf", ".", "image", ".", "ssim", "(", "self", ".", "raw_x_128", ",", "self", ".", "raw_x_complete_128", ",", "max_val", "=", "255", ")", "\n", "self", ".", "l1_128", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "self", ".", "raw_x_128", "-", "self", ".", "raw_x_complete_128", ")", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "# scale 64", "\n", "self", ".", "raw_x_64", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "self", ".", "raw_x", ",", "(", "64", ",", "64", ")", ")", "\n", "self", ".", "mask_64", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "self", ".", "mask", ",", "(", "64", ",", "64", ")", ")", "\n", "self", ".", "raw_x_incomplete_64", "=", "self", ".", "raw_x_64", "*", "(", "1", "-", "self", ".", "mask_64", ")", "\n", "self", ".", "raw_x_complete_64", "=", "self", ".", "raw_x_incomplete_64", "+", "inverse_transform", "(", "out_64", ")", "*", "self", ".", "mask_64", "\n", "\n", "self", ".", "psnr_64", "=", "tf", ".", "image", ".", "psnr", "(", "self", ".", "raw_x_64", ",", "self", ".", "raw_x_complete_64", ",", "max_val", "=", "255", ")", "\n", "self", ".", "ssim_64", "=", "tf", ".", "image", ".", "ssim", "(", "self", ".", "raw_x_64", ",", "self", ".", "raw_x_complete_64", ",", "max_val", "=", "255", ")", "\n", "self", ".", "l1_64", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "self", ".", "raw_x_64", "-", "self", ".", "raw_x_complete_64", ")", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "# return raw_x, raw_x_incomplete, raw_x_complete, mask", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.inpaint_model.InpaintModel.evaluate": [[709, 741], ["tensorflow.image.sobel_edges", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "print", "print", "inpaint_model.InpaintModel.build_inpaint_net"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.inpaint_model.InpaintModel.build_inpaint_net"], ["", "def", "evaluate", "(", "self", ",", "x", ",", "mask", ",", "args", ",", "training", "=", "False", ",", "reuse", "=", "False", ")", ":", "\n", "# Orgin image, edge", "\n", "        ", "image", ",", "edge", "=", "x", "\n", "grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "image", ")", "# normalization?", "\n", "grad", "=", "tf", ".", "reshape", "(", "grad", ",", "[", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "6", "]", ")", "# 6 channel", "\n", "\n", "# x for image", "\n", "x", "=", "tf", ".", "reshape", "(", "image", ",", "[", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "\n", "args", ".", "IMG_SHAPES", "[", "2", "]", "]", ")", "# [-1, args.IMG_SHAPES[0], args.IMG_SHAPES[1], args.IMG_SHAPES[2]]", "\n", "mask", "=", "tf", ".", "reshape", "(", "mask", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "edge", "=", "tf", ".", "reshape", "(", "edge", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "\n", "# incomplete image", "\n", "x_incomplete", "=", "x", "*", "(", "1.", "-", "mask", ")", "\n", "\n", "# incomplete edge at full scale", "\n", "input_edge", "=", "1", "-", "edge", "\n", "print", "(", "edge", ".", "shape", ")", "\n", "print", "(", "mask", ".", "shape", ")", "\n", "edge_incomplete", "=", "input_edge", "*", "(", "1", "-", "mask", ")", "+", "mask", "# 0 (black) for edge when save and input, 1 (white) for non edge", "\n", "\n", "# grad", "\n", "grad_incomplete", "=", "(", "1.", "-", "mask", ")", "*", "grad", "\n", "\n", "# bulid inpaint net", "\n", "out_256", ",", "out_64", ",", "out_128", ",", "out_grad_256", ",", "out_grad_64", ",", "out_grad_128", "=", "self", ".", "build_inpaint_net", "(", "x_incomplete", ",", "\n", "edge_incomplete", ",", "\n", "grad_incomplete", ",", "\n", "mask", ",", "args", ",", "\n", "reuse", "=", "reuse", ",", "\n", "training", "=", "training", ",", "\n", "padding", "=", "args", ".", "PADDING", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.psnr": [[3, 9], ["tensorflow.reduce_mean", "tensorflow.image.psnr"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.psnr"], ["def", "psnr", "(", "x", ",", "pred_x", ",", "max_val", "=", "255", ")", ":", "\n", "    ", "\"\"\"\n    PSNR\n    \"\"\"", "\n", "val", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "image", ".", "psnr", "(", "x", ",", "pred_x", ",", "max_val", "=", "max_val", ")", ")", "\n", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.ssmi": [[10, 16], ["tensorflow.reduce_mean", "tensorflow.image.ssim"], "function", ["None"], ["", "def", "ssmi", "(", "x", ",", "pred_x", ",", "max_val", "=", "255", ")", ":", "\n", "    ", "\"\"\"\n    SSMI\n    \"\"\"", "\n", "val", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "image", ".", "ssim", "(", "x", ",", "pred_x", ",", "max_val", "=", "max_val", ")", ")", "\n", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.mm_ssmi": [[17, 23], ["tensorflow.reduce_mean", "tensorflow.image.ssim_multiscale"], "function", ["None"], ["", "def", "mm_ssmi", "(", "x", ",", "pred_x", ",", "max_val", "=", "255", ")", ":", "\n", "    ", "\"\"\"\n    MM-SSMI\n    \"\"\"", "\n", "val", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "image", ".", "ssim_multiscale", "(", "x", ",", "pred_x", ",", "max_val", "=", "max_val", ")", ")", "\n", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.avg_l1": [[24, 27], ["tensorflow.reduce_mean", "tensorflow.abs"], "function", ["None"], ["", "def", "avg_l1", "(", "x", ",", "pred_x", ")", ":", "\n", "    ", "val", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "x", "-", "pred_x", ")", ")", "\n", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.tv_loss": [[28, 33], ["pred_x.shape.as_list", "tensorflow.reduce_mean", "tensorflow.image.total_variation"], "function", ["None"], ["", "def", "tv_loss", "(", "pred_x", ")", ":", "\n", "    ", "N", ",", "H", ",", "W", ",", "C", "=", "pred_x", ".", "shape", ".", "as_list", "(", ")", "\n", "size", "=", "H", "*", "W", "*", "C", "\n", "val", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "image", ".", "total_variation", "(", "pred_x", ")", ")", "/", "size", "\n", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.metrics.uqi_vif": [[42, 74], ["sorted", "numpy.mean", "numpy.mean", "list", "list", "ntpath.basename", "names.append", "skimage.color.rgb2gray", "skimage.color.rgb2gray", "np.mean.append", "np.mean.append", "glob.glob", "glob.glob", "str", "sewar.full_ref.uqi", "sewar.full_ref.vifp", "numpy.mod", "print", "scipy.misc.imread", "scipy.misc.imread", "str", "round", "round", "str", "numpy.mean", "numpy.mean", "ntpath.basename", "str"], "function", ["None"], ["def", "uqi_vif", "(", "path_true", ",", "path_pred", ")", ":", "\n", "\n", "    ", "UQI", "=", "[", "]", "\n", "VIF", "=", "[", "]", "\n", "names", "=", "[", "]", "\n", "index", "=", "1", "\n", "\n", "files", "=", "list", "(", "glob", "(", "path_true", "+", "'/*.jpg'", ")", ")", "+", "list", "(", "glob", "(", "path_true", "+", "'/*.png'", ")", ")", "\n", "for", "fn", "in", "sorted", "(", "files", ")", ":", "\n", "        ", "name", "=", "basename", "(", "str", "(", "fn", ")", ")", "\n", "names", ".", "append", "(", "name", ")", "\n", "\n", "img_gt", "=", "(", "imread", "(", "str", "(", "fn", ")", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_pred", "=", "(", "imread", "(", "path_pred", "+", "'/'", "+", "basename", "(", "str", "(", "fn", ")", ")", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "img_gt", "=", "rgb2gray", "(", "img_gt", ")", "\n", "img_pred", "=", "rgb2gray", "(", "img_pred", ")", "\n", "\n", "UQI", ".", "append", "(", "uqi", "(", "img_gt", ",", "img_pred", ")", ")", "\n", "VIF", ".", "append", "(", "vifp", "(", "img_gt", ",", "img_pred", ")", ")", "\n", "if", "np", ".", "mod", "(", "index", ",", "100", ")", "==", "0", ":", "\n", "            ", "print", "(", "\n", "str", "(", "index", ")", "+", "' images processed'", ",", "\n", "\"UQI: %.4f\"", "%", "round", "(", "np", ".", "mean", "(", "UQI", ")", ",", "4", ")", ",", "\n", "\"VIF: %.4f\"", "%", "round", "(", "np", ".", "mean", "(", "VIF", ")", ",", "4", ")", ",", "\n", ")", "\n", "", "index", "+=", "1", "\n", "\n", "", "UQI", "=", "np", ".", "mean", "(", "UQI", ")", "\n", "VIF", "=", "np", ".", "mean", "(", "VIF", ")", "\n", "\n", "return", "UQI", ",", "VIF", "", "", ""]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.ImageData.__init__": [[79, 88], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        image size\n        \"\"\"", "\n", "self", ".", "img_size", "=", "args", ".", "IMG_SHAPES", "[", "0", "]", "\n", "self", ".", "channels", "=", "args", ".", "IMG_SHAPES", "[", "2", "]", "\n", "self", ".", "sigma", "=", "args", ".", "SIGMA", "\n", "# self.level = args.DOWN_LEVEL", "\n", "self", ".", "mode", "=", "'rect'", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.ImageData.image_processing": [[90, 98], ["tensorflow.read_file", "tensorflow.read_file", "tensorflow.image.decode_jpeg", "tensorflow.image.decode_jpeg", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.cast", "tensorflow.cast"], "methods", ["None"], ["", "def", "image_processing", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "x", "=", "tf", ".", "read_file", "(", "filename", ",", "mode", "=", "'RGB'", ")", "# read filename", "\n", "img", "=", "tf", ".", "image", ".", "decode_jpeg", "(", "x", ",", "channels", "=", "self", ".", "channels", ")", "# read image and decode it. tf.image.decode_image", "\n", "img", "=", "tf", ".", "image", ".", "resize_images", "(", "img", ",", "[", "self", ".", "img_size", ",", "self", ".", "img_size", "]", ")", "\n", "img", "=", "tf", ".", "cast", "(", "img", ",", "tf", ".", "float32", ")", "/", "127.5", "-", "1", "# scale to [-1, 1]", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.ImageData.image_processing2": [[99, 113], ["scipy.misc.imread", "scipy.misc.imresize", "numpy.minimum", "scipy.misc.imresize", "scipy.misc.imresize.astype"], "methods", ["None"], ["", "def", "image_processing2", "(", "self", ",", "filename", ")", ":", "\n", "        ", "img", "=", "imread", "(", "filename", ",", "mode", "=", "'RGB'", ")", "\n", "imgh", ",", "imgw", "=", "img", ".", "shape", "[", "0", ":", "2", "]", "\n", "if", "imgh", "!=", "imgw", ":", "\n", "# center crop", "\n", "            ", "side", "=", "np", ".", "minimum", "(", "imgh", ",", "imgw", ")", "\n", "j", "=", "(", "imgh", "-", "side", ")", "//", "2", "\n", "i", "=", "(", "imgw", "-", "side", ")", "//", "2", "\n", "img", "=", "img", "[", "j", ":", "j", "+", "side", ",", "i", ":", "i", "+", "side", ",", "...", "]", "\n", "\n", "img", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "[", "self", ".", "img_size", ",", "self", ".", "img_size", "]", ")", "\n", "", "img", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "[", "self", ".", "img_size", ",", "self", ".", "img_size", "]", ")", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "/", "127.5", "-", "1", "# scale to [-1, 1]", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.ImageData.image_edge_processing": [[114, 133], ["scipy.misc.imread", "scipy.misc.imresize", "skimage.color.rgb2gray", "skimage.feature.canny().astype", "numpy.minimum", "scipy.misc.imresize", "skimage.feature.canny", "scipy.misc.imresize.astype"], "methods", ["None"], ["", "def", "image_edge_processing", "(", "self", ",", "filename", ")", ":", "\n", "        ", "img", "=", "imread", "(", "filename", ",", "mode", "=", "'RGB'", ")", "\n", "imgh", ",", "imgw", "=", "img", ".", "shape", "[", "0", ":", "2", "]", "\n", "if", "imgh", "!=", "imgw", ":", "\n", "# center crop", "\n", "            ", "side", "=", "np", ".", "minimum", "(", "imgh", ",", "imgw", ")", "\n", "j", "=", "(", "imgh", "-", "side", ")", "//", "2", "\n", "i", "=", "(", "imgw", "-", "side", ")", "//", "2", "\n", "img", "=", "img", "[", "j", ":", "j", "+", "side", ",", "i", ":", "i", "+", "side", ",", "...", "]", "\n", "\n", "img", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "[", "self", ".", "img_size", ",", "self", ".", "img_size", "]", ")", "\n", "", "img", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "[", "self", ".", "img_size", ",", "self", ".", "img_size", "]", ")", "\n", "\n", "# edge", "\n", "img_gray", "=", "rgb2gray", "(", "img", ")", "# with the channel dimension removed", "\n", "edge", "=", "feature", ".", "canny", "(", "img_gray", ",", "sigma", "=", "self", ".", "sigma", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "/", "127.5", "-", "1", "# scale to [-1, 1]", "\n", "return", "img", ",", "edge", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.ImageData.image_edge_scale_processing": [[134, 159], ["scipy.misc.imread", "scipy.misc.imresize", "skimage.color.rgb2gray", "skimage.feature.canny().astype", "skimage.color.rgb2gray", "skimage.feature.canny().astype", "skimage.color.rgb2gray", "skimage.feature.canny().astype", "numpy.minimum", "scipy.misc.imresize", "scipy.misc.imresize", "scipy.misc.imresize", "skimage.feature.canny", "skimage.feature.canny", "skimage.feature.canny", "scipy.misc.imresize.astype"], "methods", ["None"], ["", "def", "image_edge_scale_processing", "(", "self", ",", "filename", ")", ":", "\n", "        ", "img", "=", "imread", "(", "filename", ",", "mode", "=", "'RGB'", ")", "\n", "imgh", ",", "imgw", "=", "img", ".", "shape", "[", "0", ":", "2", "]", "\n", "if", "imgh", "!=", "imgw", ":", "\n", "# center crop", "\n", "            ", "side", "=", "np", ".", "minimum", "(", "imgh", ",", "imgw", ")", "\n", "j", "=", "(", "imgh", "-", "side", ")", "//", "2", "\n", "i", "=", "(", "imgw", "-", "side", ")", "//", "2", "\n", "img", "=", "img", "[", "j", ":", "j", "+", "side", ",", "i", ":", "i", "+", "side", ",", "...", "]", "\n", "\n", "img", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "[", "self", ".", "img_size", ",", "self", ".", "img_size", "]", ")", "\n", "", "img", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "[", "self", ".", "img_size", ",", "self", ".", "img_size", "]", ")", "\n", "\n", "# edge", "\n", "img_gray", "=", "rgb2gray", "(", "img", ")", "# with the channel dimension removed", "\n", "edge_256", "=", "feature", ".", "canny", "(", "img_gray", ",", "sigma", "=", "self", ".", "sigma", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_gray", "=", "rgb2gray", "(", "imresize", "(", "img", ",", "[", "128", ",", "128", "]", ",", "interp", "=", "'nearest'", ")", ")", "\n", "edge_128", "=", "feature", ".", "canny", "(", "img_gray", ",", "sigma", "=", "self", ".", "sigma", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_gray", "=", "rgb2gray", "(", "imresize", "(", "img", ",", "[", "64", ",", "64", "]", ",", "interp", "=", "'nearest'", ")", ")", "\n", "edge_64", "=", "feature", ".", "canny", "(", "img_gray", ",", "sigma", "=", "self", ".", "sigma", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# img_gray = rgb2gray(imresize(img, [32, 32]), interp='nearest')", "\n", "# edge_32 = feature.canny(img_gray, sigma=self.sigma).astype(np.float32)", "\n", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "/", "127.5", "-", "1", "# scale to [-1, 1]", "\n", "return", "img", ",", "edge_256", ",", "edge_128", ",", "edge_64", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.ImageData.mask_processing": [[160, 165], ["tensorflow.read_file", "tensorflow.read_file", "tensorflow.image.decode_png", "tensorflow.image.decode_png", "tensorflow.image.resize_images", "tensorflow.image.resize_images"], "methods", ["None"], ["", "def", "mask_processing", "(", "self", ",", "filename", ")", ":", "\n", "        ", "x", "=", "tf", ".", "read_file", "(", "filename", ")", "# read mask filename", "\n", "mask", "=", "tf", ".", "image", ".", "decode_png", "(", "x", ",", "channels", "=", "1", ")", "# read image and decode it. tf.image.decode_image", "\n", "mask", "=", "tf", ".", "image", ".", "resize_images", "(", "mask", ",", "[", "self", ".", "img_size", ",", "self", ".", "img_size", "]", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.ImageData.mask_processing2": [[166, 198], ["scipy.misc.imread", "free_form_mask.astype", "numpy.random.randint", "scipy.ndimage.binary_dilation().astype", "numpy.random.randint", "utils_fn.create_mask", "numpy.random.randint", "utils_fn.free_form_mask", "scipy.ndimage.binary_dilation", "numpy.random.randint"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.create_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.free_form_mask"], ["", "def", "mask_processing2", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"\n        For training\n        \"\"\"", "\n", "mask", "=", "imread", "(", "filename", ")", "\n", "\n", "# mask: hole = 1, data augmentation", "\n", "# mask = (mask > 0).astype(np.float32)", "\n", "# print(mask.max())", "\n", "# print(mask.min())", "\n", "mask", "[", "mask", "<=", "127", "]", "=", "0", "\n", "mask", "[", "mask", ">", "127", "]", "=", "1", "\n", "\n", "# print(mask.max())", "\n", "# print(mask.min())", "\n", "# resize", "\n", "#mask = scipy.misc.imresize(mask, (self.img_size, self.img_size))", "\n", "\n", "# random dilation (25%), we augmentation the mask in external way", "\n", "if", "np", ".", "random", ".", "randint", "(", "0", ",", "4", ")", "==", "0", ":", "\n", "            ", "mask", "=", "ndimage", ".", "binary_dilation", "(", "mask", ",", "iterations", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "6", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "mask", "=", "mask", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "# 5% prob generate fixed mask", "\n", "if", "np", ".", "random", ".", "randint", "(", "0", ",", "20", ")", "==", "0", ":", "\n", "            ", "mask", "=", "create_mask", "(", "256", ",", "256", ",", "256", "//", "2", ",", "256", "//", "2", ",", "delta", "=", "0", ")", "\n", "\n", "# 10% prob generate free-form mask (ref: 2018NIPS-multi-column)", "\n", "", "if", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ")", "==", "0", ":", "\n", "            ", "mask", "=", "free_form_mask", "(", "parts", "=", "8", ",", "im_size", "=", "(", "self", ".", "img_size", ",", "self", ".", "img_size", ")", ",", "\n", "maxBrushWidth", "=", "20", ",", "maxLength", "=", "80", ",", "maxVertex", "=", "16", ")", "\n", "", "return", "mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.ImageData.mask_processing3": [[199, 217], ["scipy.misc.imread", "scipy.misc.imread.astype"], "methods", ["None"], ["", "def", "mask_processing3", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"\n        For validation and test\n        \"\"\"", "\n", "mask", "=", "imread", "(", "filename", ")", "\n", "# mask = skimage.io.imread(filename)", "\n", "\n", "# mask: hole = 1", "\n", "# mask = (mask > 0).astype(np.float32)", "\n", "mask", "[", "mask", "<=", "127", "]", "=", "0", "\n", "mask", "[", "mask", ">", "127", "]", "=", "1", "\n", "\n", "# resize", "\n", "# mask = scipy.misc.imresize(mask, (self.img_size, self.img_size))", "\n", "\n", "mask", "=", "mask", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "return", "mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.np_free_form_mask": [[19, 44], ["numpy.zeros", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "range", "cv2.circle", "numpy.random.randint", "numpy.random.randint", "numpy.maximum().astype", "numpy.maximum().astype", "cv2.line", "cv2.circle", "numpy.random.randint", "numpy.cos", "numpy.sin", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum"], "function", ["None"], ["def", "np_free_form_mask", "(", "maxVertex", ",", "maxLength", ",", "maxBrushWidth", ",", "maxAngle", ",", "h", ",", "w", ")", ":", "\n", "    ", "mask", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "1", ")", ",", "np", ".", "float32", ")", "\n", "numVertex", "=", "np", ".", "random", ".", "randint", "(", "maxVertex", "+", "1", ")", "\n", "startY", "=", "np", ".", "random", ".", "randint", "(", "h", ")", "\n", "startX", "=", "np", ".", "random", ".", "randint", "(", "w", ")", "\n", "brushWidth", "=", "0", "\n", "for", "i", "in", "range", "(", "numVertex", ")", ":", "\n", "        ", "angle", "=", "np", ".", "random", ".", "randint", "(", "maxAngle", "+", "1", ")", "\n", "angle", "=", "angle", "/", "360.0", "*", "2", "*", "np", ".", "pi", "\n", "if", "i", "%", "2", "==", "0", ":", "\n", "            ", "angle", "=", "2", "*", "np", ".", "pi", "-", "angle", "\n", "", "length", "=", "np", ".", "random", ".", "randint", "(", "maxLength", "+", "1", ")", "\n", "brushWidth", "=", "np", ".", "random", ".", "randint", "(", "10", ",", "maxBrushWidth", "+", "1", ")", "//", "2", "*", "2", "\n", "nextY", "=", "startY", "+", "length", "*", "np", ".", "cos", "(", "angle", ")", "\n", "nextX", "=", "startX", "+", "length", "*", "np", ".", "sin", "(", "angle", ")", "\n", "\n", "nextY", "=", "np", ".", "maximum", "(", "np", ".", "minimum", "(", "nextY", ",", "h", "-", "1", ")", ",", "0", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "nextX", "=", "np", ".", "maximum", "(", "np", ".", "minimum", "(", "nextX", ",", "w", "-", "1", ")", ",", "0", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "\n", "cv2", ".", "line", "(", "mask", ",", "(", "startY", ",", "startX", ")", ",", "(", "nextY", ",", "nextX", ")", ",", "1", ",", "brushWidth", ")", "\n", "cv2", ".", "circle", "(", "mask", ",", "(", "startY", ",", "startX", ")", ",", "brushWidth", "//", "2", ",", "2", ")", "\n", "\n", "startY", ",", "startX", "=", "nextY", ",", "nextX", "\n", "", "cv2", ".", "circle", "(", "mask", ",", "(", "startY", ",", "startX", ")", ",", "brushWidth", "//", "2", ",", "2", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.free_form_mask_tf": [[46, 66], ["tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "tensorflow.constant", "range", "tensorflow.minimum", "tensorflow.zeros", "tensorflow.py_func", "tensorflow.reshape"], "function", ["None"], ["", "def", "free_form_mask_tf", "(", "parts", ",", "maxVertex", "=", "16", ",", "maxLength", "=", "60", ",", "maxBrushWidth", "=", "14", ",", "maxAngle", "=", "360", ",", "im_size", "=", "(", "256", ",", "256", ")", ",", "name", "=", "'fmask'", ")", ":", "\n", "    ", "\"\"\"\n    Free form mask\n    rf: NIPS multi-column conv\n    \"\"\"", "\n", "# mask = np.zeros((im_size[0], im_size[1], 1), dtype=np.float32)", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "mask", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "[", "1", ",", "im_size", "[", "0", "]", ",", "im_size", "[", "1", "]", ",", "1", "]", ")", ",", "name", "=", "'free_mask'", ")", "\n", "maxVertex", "=", "tf", ".", "constant", "(", "maxVertex", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "maxLength", "=", "tf", ".", "constant", "(", "maxLength", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "maxBrushWidth", "=", "tf", ".", "constant", "(", "maxBrushWidth", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "maxAngle", "=", "tf", ".", "constant", "(", "maxAngle", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "h", "=", "tf", ".", "constant", "(", "im_size", "[", "0", "]", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "w", "=", "tf", ".", "constant", "(", "im_size", "[", "1", "]", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "for", "i", "in", "range", "(", "parts", ")", ":", "\n", "            ", "p", "=", "tf", ".", "py_func", "(", "np_free_form_mask", ",", "[", "maxVertex", ",", "maxLength", ",", "maxBrushWidth", ",", "maxAngle", ",", "h", ",", "w", "]", ",", "tf", ".", "float32", ")", "\n", "p", "=", "tf", ".", "reshape", "(", "p", ",", "[", "1", ",", "im_size", "[", "0", "]", ",", "im_size", "[", "1", "]", ",", "1", "]", ")", "\n", "mask", "=", "mask", "+", "p", "\n", "", "mask", "=", "tf", ".", "minimum", "(", "mask", ",", "1.0", ")", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.free_form_mask": [[67, 76], ["numpy.zeros", "range", "numpy.minimum", "utils_fn.np_free_form_mask", "numpy.reshape"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.np_free_form_mask"], ["", "def", "free_form_mask", "(", "parts", ",", "maxVertex", "=", "16", ",", "maxLength", "=", "60", ",", "maxBrushWidth", "=", "14", ",", "maxAngle", "=", "360", ",", "im_size", "=", "(", "256", ",", "256", ")", ")", ":", "\n", "    ", "h", ",", "w", "=", "im_size", "[", "0", "]", ",", "im_size", "[", "1", "]", "\n", "mask", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "parts", ")", ":", "\n", "        ", "p", "=", "np_free_form_mask", "(", "maxVertex", ",", "maxLength", ",", "maxBrushWidth", ",", "maxAngle", ",", "h", ",", "w", ")", "\n", "p", "=", "np", ".", "reshape", "(", "p", ",", "[", "1", ",", "h", ",", "w", ",", "1", "]", ")", "\n", "mask", "=", "mask", "+", "p", "\n", "", "mask", "=", "np", ".", "minimum", "(", "mask", ",", "1.0", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_data": [[219, 248], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.apply().map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_one_shot_iterator", "inputs.make_one_shot_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "inputs.batch().apply.apply", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read", "tensorflow.contrib.data.shuffle_and_repeat"], "function", ["None"], ["", "", "def", "load_data", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Load image data\n    \"\"\"", "\n", "# training data: 0, as file list", "\n", "# image files", "\n", "with", "open", "(", "args", ".", "DATA_FLIST", "[", "args", ".", "DATASET", "]", "[", "0", "]", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (images and masks)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "if", "args", ".", "NUM_GPUS", "==", "1", ":", "\n", "        ", "device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "", "else", ":", "\n", "        ", "device", "=", "'/cpu:0'", "\n", "", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (images and masks)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", "=", "args", ")", "\n", "\n", "# inputs = inputs.apply(shuffle_and_repeat(dataset_num)).apply(", "\n", "#     map_and_batch(Image_Data_Class.image_processing, args.BATCH_SIZE, num_parallel_batches=16,", "\n", "#                   drop_remainder=True)).apply(prefetch_to_device(gpu_device, args.BATCH_SIZE))", "\n", "inputs", "=", "inputs", ".", "apply", "(", "shuffle_and_repeat", "(", "dataset_num", ")", ")", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "Image_Data_Class", ".", "image_processing2", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", "]", ")", ",", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "args", ".", "BATCH_SIZE", "*", "args", ".", "NUM_GPUS", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "device", ",", "args", ".", "BATCH_SIZE", ")", ")", "\n", "inputs_iterator", "=", "inputs", ".", "make_one_shot_iterator", "(", ")", "# iterator, \u4e00\u6b21\u8bbf\u95ee\u65b0\u7684\u6570\u636e\u96c6\u7684\u4e00\u4e2a\u5143\u7d20(batch)", "\n", "\n", "images", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_mask": [[249, 278], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.apply().map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_one_shot_iterator", "inputs.make_one_shot_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "inputs.batch().apply.apply", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read", "tensorflow.contrib.data.shuffle_and_repeat"], "function", ["None"], ["", "def", "load_mask", "(", "args", ")", ":", "\n", "# mask files", "\n", "    ", "with", "open", "(", "args", ".", "TRAIN_MASK_FLIST", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (masks)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "\n", "if", "args", ".", "NUM_GPUS", "==", "1", ":", "\n", "        ", "device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "", "else", ":", "\n", "        ", "device", "=", "'/cpu:0'", "\n", "\n", "", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (masks)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", "=", "args", ")", "\n", "\n", "# inputs = inputs.apply(shuffle_and_repeat(dataset_num)).apply(", "\n", "#     map_and_batch(Image_Data_Class.image_processing, args.BATCH_SIZE, num_parallel_batches=16,", "\n", "#                   drop_remainder=True)).apply(prefetch_to_device(gpu_device, args.BATCH_SIZE))", "\n", "inputs", "=", "inputs", ".", "apply", "(", "shuffle_and_repeat", "(", "dataset_num", ")", ")", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "\n", "Image_Data_Class", ".", "mask_processing2", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", "]", ")", ",", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "1", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "device", ",", "1", ")", ")", "\n", "# inputs = inputs.apply(prefetch_to_device(device))", "\n", "inputs_iterator", "=", "inputs", ".", "make_one_shot_iterator", "(", ")", "# iterator", "\n", "\n", "masks", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "masks", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.create_mask": [[279, 290], ["numpy.zeros", "numpy.random.randint", "numpy.random.randint"], "function", ["None"], ["", "def", "create_mask", "(", "width", ",", "height", ",", "mask_width", ",", "mask_height", ",", "x", "=", "None", ",", "y", "=", "None", ",", "delta", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    create_mask(imgw, imgh, imgw // 2, imgh, 0 if random.random() < 0.5 else imgw // 2, 0)\n    delta: margin between mask and image boundary\n    \"\"\"", "\n", "mask", "=", "np", ".", "zeros", "(", "(", "height", ",", "width", ")", ")", "\n", "mask_x", "=", "x", "if", "x", "is", "not", "None", "else", "np", ".", "random", ".", "randint", "(", "delta", ",", "width", "-", "mask_width", "-", "delta", ")", "\n", "mask_y", "=", "y", "if", "y", "is", "not", "None", "else", "np", ".", "random", ".", "randint", "(", "delta", ",", "height", "-", "mask_height", "-", "delta", ")", "\n", "mask", "[", "mask_y", ":", "mask_y", "+", "mask_height", ",", "mask_x", ":", "mask_x", "+", "mask_width", "]", "=", "1", "\n", "mask", "=", "mask", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_validation_data": [[291, 316], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_initializable_iterator", "inputs.make_initializable_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read"], "function", ["None"], ["", "def", "load_validation_data", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Load image data\n    \"\"\"", "\n", "# validation data: 1, as file list", "\n", "# image files", "\n", "with", "open", "(", "args", ".", "DATA_FLIST", "[", "args", ".", "DATASET", "]", "[", "1", "]", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (images)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "\n", "gpu_device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "# gpu_device = '/gpu:{}'.format(args.GPU_ID)", "\n", "\n", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (images)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", ")", "\n", "inputs", "=", "inputs", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "Image_Data_Class", ".", "image_processing2", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", "]", ")", ",", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "args", ".", "VAL_NUM", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "gpu_device", ",", "1", ")", ")", "\n", "inputs_iterator", "=", "inputs", ".", "make_initializable_iterator", "(", ")", "# iterator, need to be initialized", "\n", "\n", "images", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "images", ",", "inputs_iterator", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_validation_mask": [[317, 340], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_initializable_iterator", "inputs.make_initializable_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read"], "function", ["None"], ["", "def", "load_validation_mask", "(", "args", ")", ":", "\n", "# mask files", "\n", "    ", "with", "open", "(", "args", ".", "VAL_MASK_FLIST", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (masks)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "\n", "gpu_device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "# gpu_device = '/gpu:{}'.format(args.GPU_ID)", "\n", "\n", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (masks)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", "=", "args", ")", "\n", "\n", "inputs", "=", "inputs", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "Image_Data_Class", ".", "mask_processing3", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", "]", ")", ",", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "args", ".", "VAL_NUM", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "gpu_device", ",", "1", ")", ")", "\n", "# inputs = inputs.apply(prefetch_to_device(gpu_device))", "\n", "inputs_iterator", "=", "inputs", ".", "make_initializable_iterator", "(", ")", "\n", "\n", "masks", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "masks", ",", "inputs_iterator", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.create_validation_mask": [[341, 352], ["numpy.zeros", "range", "numpy.random.randint", "numpy.random.randint"], "function", ["None"], ["", "def", "create_validation_mask", "(", "width", ",", "height", ",", "mask_width", ",", "mask_height", ",", "args", ",", "x", "=", "None", ",", "y", "=", "None", ",", "delta", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    create_mask(imgw, imgh, imgw // 2, imgh, 0 if random.random() < 0.5 else imgw // 2, 0)\n    \"\"\"", "\n", "masks", "=", "np", ".", "zeros", "(", "(", "args", ".", "VAL_NUM", ",", "height", ",", "width", ")", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "VAL_NUM", ")", ":", "\n", "        ", "mask_x", "=", "x", "if", "x", "is", "not", "None", "else", "np", ".", "random", ".", "randint", "(", "delta", ",", "width", "-", "mask_width", "-", "delta", ")", "\n", "mask_y", "=", "y", "if", "y", "is", "not", "None", "else", "np", ".", "random", ".", "randint", "(", "delta", ",", "height", "-", "mask_height", "-", "delta", ")", "\n", "masks", "[", "i", ",", "mask_y", ":", "mask_y", "+", "mask_height", ",", "mask_x", ":", "mask_x", "+", "mask_width", "]", "=", "1", "\n", "", "masks", "=", "masks", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "return", "masks", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_test_data": [[353, 378], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_initializable_iterator", "inputs.make_initializable_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read"], "function", ["None"], ["", "def", "load_test_data", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Load image data\n    \"\"\"", "\n", "# test data: 2, as file list", "\n", "# image files", "\n", "with", "open", "(", "args", ".", "DATA_FLIST", "[", "args", ".", "DATASET", "]", "[", "1", "]", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (images)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "\n", "gpu_device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "# gpu_device = '/gpu:{}'.format(args.GPU_ID)", "\n", "\n", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (images)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", "=", "args", ")", "\n", "inputs", "=", "inputs", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "Image_Data_Class", ".", "image_processing2", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", "]", ")", ",", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "args", ".", "TEST_NUM", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "gpu_device", ")", ")", "\n", "inputs_iterator", "=", "inputs", ".", "make_initializable_iterator", "(", ")", "# iterator, need to be initialized", "\n", "\n", "images", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "images", ",", "inputs_iterator", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_test_mask": [[379, 402], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_initializable_iterator", "inputs.make_initializable_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read"], "function", ["None"], ["", "def", "load_test_mask", "(", "args", ")", ":", "\n", "# mask files", "\n", "    ", "with", "open", "(", "args", ".", "TEST_MASK_FLIST", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (masks)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "\n", "gpu_device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "# gpu_device = '/gpu:{}'.format(args.GPU_ID)", "\n", "\n", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (masks)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", "=", "args", ")", "\n", "\n", "inputs", "=", "inputs", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "Image_Data_Class", ".", "mask_processing3", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", "]", ")", ",", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "args", ".", "TEST_NUM", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "gpu_device", ",", "1", ")", ")", "\n", "# inputs = inputs.apply(prefetch_to_device(gpu_device))", "\n", "inputs_iterator", "=", "inputs", ".", "make_initializable_iterator", "(", ")", "# iterator", "\n", "\n", "masks", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "masks", ",", "inputs_iterator", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.create_test_mask": [[403, 414], ["numpy.zeros", "range", "numpy.random.randint", "numpy.random.randint"], "function", ["None"], ["", "def", "create_test_mask", "(", "width", ",", "height", ",", "mask_width", ",", "mask_height", ",", "args", ",", "x", "=", "None", ",", "y", "=", "None", ",", "delta", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    create_mask(imgw, imgh, imgw // 2, imgh, 0 if random.random() < 0.5 else imgw // 2, 0)\n    \"\"\"", "\n", "masks", "=", "np", ".", "zeros", "(", "(", "args", ".", "TEST_NUM", ",", "height", ",", "width", ")", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "TEST_NUM", ")", ":", "\n", "        ", "mask_x", "=", "x", "if", "x", "is", "not", "None", "else", "np", ".", "random", ".", "randint", "(", "delta", ",", "width", "-", "mask_width", "-", "delta", ")", "\n", "mask_y", "=", "y", "if", "y", "is", "not", "None", "else", "np", ".", "random", ".", "randint", "(", "delta", ",", "height", "-", "mask_height", "-", "delta", ")", "\n", "masks", "[", "i", ",", "mask_y", ":", "mask_y", "+", "mask_height", ",", "mask_x", ":", "mask_x", "+", "mask_width", "]", "=", "1", "\n", "", "masks", "=", "masks", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "return", "masks", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.dataset_len": [[415, 419], ["len", "open", "f.read().splitlines", "f.read"], "function", ["None"], ["", "def", "dataset_len", "(", "args", ")", ":", "\n", "    ", "with", "open", "(", "args", ".", "DATA_FLIST", "[", "args", ".", "DATASET", "]", "[", "0", "]", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "", "return", "len", "(", "fnames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.show_all_variables": [[420, 426], ["tensorflow.trainable_variables", "tensorflow.model_analyzer.analyze_vars"], "function", ["None"], ["", "def", "show_all_variables", "(", ")", ":", "\n", "    ", "\"\"\"\n    Show all the variables of an tf model.\n    \"\"\"", "\n", "model_vars", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "slim", ".", "model_analyzer", ".", "analyze_vars", "(", "model_vars", ",", "print_info", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.normalize": [[427, 429], ["None"], "function", ["None"], ["", "def", "normalize", "(", "x", ")", ":", "\n", "    ", "return", "x", "/", "127.5", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.save_images": [[430, 432], ["utils_fn.imsave", "utils_fn.inverse_transform"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.imsave", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform"], ["", "def", "save_images", "(", "images", ",", "size", ",", "image_path", ")", ":", "\n", "    ", "return", "imsave", "(", "inverse_transform", "(", "images", ")", ",", "size", ",", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge": [[433, 452], ["numpy.zeros", "enumerate", "numpy.zeros", "enumerate", "ValueError"], "function", ["None"], ["", "def", "merge", "(", "images", ",", "size", ")", ":", "\n", "    ", "h", ",", "w", "=", "images", ".", "shape", "[", "1", "]", ",", "images", ".", "shape", "[", "2", "]", "\n", "if", "(", "images", ".", "shape", "[", "3", "]", "in", "(", "3", ",", "4", ")", ")", ":", "\n", "        ", "c", "=", "images", ".", "shape", "[", "3", "]", "\n", "img", "=", "np", ".", "zeros", "(", "(", "h", "*", "size", "[", "0", "]", ",", "w", "*", "size", "[", "1", "]", ",", "c", ")", ")", "\n", "for", "idx", ",", "image", "in", "enumerate", "(", "images", ")", ":", "\n", "            ", "i", "=", "idx", "%", "size", "[", "1", "]", "\n", "j", "=", "idx", "//", "size", "[", "1", "]", "\n", "img", "[", "j", "*", "h", ":", "j", "*", "h", "+", "h", ",", "i", "*", "w", ":", "i", "*", "w", "+", "w", ",", ":", "]", "=", "image", "\n", "", "return", "img", "\n", "", "elif", "images", ".", "shape", "[", "3", "]", "==", "1", ":", "\n", "        ", "img", "=", "np", ".", "zeros", "(", "(", "h", "*", "size", "[", "0", "]", ",", "w", "*", "size", "[", "1", "]", ")", ")", "\n", "for", "idx", ",", "image", "in", "enumerate", "(", "images", ")", ":", "\n", "            ", "i", "=", "idx", "%", "size", "[", "1", "]", "\n", "j", "=", "idx", "//", "size", "[", "1", "]", "\n", "img", "[", "j", "*", "h", ":", "j", "*", "h", "+", "h", ",", "i", "*", "w", ":", "i", "*", "w", "+", "w", "]", "=", "image", "[", ":", ",", ":", ",", "0", "]", "\n", "", "return", "img", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'in merge(images,size) images parameter '", "'must have dimensions: HxW or HxWx3 or HxWx4'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.imsave": [[453, 455], ["scipy.misc.imsave", "utils_fn.merge"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.imsave", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge"], ["", "", "def", "imsave", "(", "images", ",", "size", ",", "path", ")", ":", "\n", "    ", "return", "scipy", ".", "misc", ".", "imsave", "(", "path", ",", "merge", "(", "images", ",", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.inverse_transform": [[456, 458], ["None"], "function", ["None"], ["", "def", "inverse_transform", "(", "images", ")", ":", "\n", "    ", "return", "(", "images", "+", "1.", ")", "*", "127.5", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_img_edge": [[459, 489], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.apply().map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_one_shot_iterator", "inputs.make_one_shot_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "inputs.batch().apply.apply", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read", "tensorflow.contrib.data.shuffle_and_repeat"], "function", ["None"], ["", "def", "load_img_edge", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Load image data\n    \"\"\"", "\n", "# training data: 0, as file list", "\n", "# image files", "\n", "with", "open", "(", "args", ".", "DATA_FLIST", "[", "args", ".", "DATASET", "]", "[", "0", "]", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (images and masks)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "if", "args", ".", "NUM_GPUS", "==", "1", ":", "\n", "        ", "device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "# gpu_device = '/gpu:{}'.format(args.GPU_ID)", "\n", "", "else", ":", "\n", "        ", "device", "=", "'/cpu:0'", "\n", "", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (images and masks)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", "=", "args", ")", "\n", "# inputs = inputs.apply(shuffle_and_repeat(dataset_num)).apply(", "\n", "#     map_and_batch(Image_Data_Class.image_processing, args.BATCH_SIZE, num_parallel_batches=16,", "\n", "#                   drop_remainder=True)).apply(prefetch_to_device(gpu_device, args.BATCH_SIZE))", "\n", "inputs", "=", "inputs", ".", "apply", "(", "shuffle_and_repeat", "(", "dataset_num", ")", ")", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "\n", "Image_Data_Class", ".", "image_edge_processing", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", ",", "tf", ".", "float32", "]", ")", ",", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "args", ".", "BATCH_SIZE", "*", "args", ".", "NUM_GPUS", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "device", ",", "args", ".", "BATCH_SIZE", ")", ")", "\n", "inputs_iterator", "=", "inputs", ".", "make_one_shot_iterator", "(", ")", "# iterator", "\n", "\n", "images_edges", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "images_edges", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_val_img_edge": [[490, 517], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_initializable_iterator", "inputs.make_initializable_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read"], "function", ["None"], ["", "def", "load_val_img_edge", "(", "args", ")", ":", "\n", "\n", "    ", "\"\"\"\n    Load image data\n    \"\"\"", "\n", "# validation data: 1, as file list", "\n", "# image files", "\n", "with", "open", "(", "args", ".", "DATA_FLIST", "[", "args", ".", "DATASET", "]", "[", "1", "]", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (images)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "\n", "gpu_device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "# gpu_device = '/gpu:{}'.format(args.GPU_ID)", "\n", "\n", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (images)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", ")", "\n", "inputs", "=", "inputs", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "Image_Data_Class", ".", "image_edge_processing", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", ",", "tf", ".", "float32", "]", ")", ",", "\n", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "args", ".", "VAL_NUM", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "gpu_device", ")", ")", "\n", "inputs_iterator", "=", "inputs", ".", "make_initializable_iterator", "(", ")", "# iterator, need to be initialized", "\n", "\n", "images_edges", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "images_edges", ",", "inputs_iterator", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_test_img_edge": [[518, 545], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_initializable_iterator", "inputs.make_initializable_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read"], "function", ["None"], ["", "def", "load_test_img_edge", "(", "args", ")", ":", "\n", "\n", "    ", "\"\"\"\n    Load image data\n    \"\"\"", "\n", "# validation data: 1, as file list", "\n", "# image files", "\n", "with", "open", "(", "args", ".", "DATA_FLIST", "[", "args", ".", "DATASET", "]", "[", "1", "]", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (images)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "\n", "gpu_device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "# gpu_device = '/gpu:{}'.format(args.GPU_ID)", "\n", "\n", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (images)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", ")", "\n", "inputs", "=", "inputs", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "Image_Data_Class", ".", "image_edge_processing", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", ",", "tf", ".", "float32", "]", ")", ",", "\n", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "args", ".", "TEST_NUM", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "gpu_device", ")", ")", "\n", "inputs_iterator", "=", "inputs", ".", "make_initializable_iterator", "(", ")", "# iterator, need to be initialized", "\n", "\n", "images_edges", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "images_edges", ",", "inputs_iterator", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_img_scale_edge": [[546, 577], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.apply().map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_one_shot_iterator", "inputs.make_one_shot_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "inputs.batch().apply.apply", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read", "tensorflow.contrib.data.shuffle_and_repeat"], "function", ["None"], ["", "def", "load_img_scale_edge", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Load image data\n    \"\"\"", "\n", "# training data: 0, as file list", "\n", "# image files", "\n", "with", "open", "(", "args", ".", "DATA_FLIST", "[", "args", ".", "DATASET", "]", "[", "0", "]", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (images and masks)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "if", "args", ".", "NUM_GPUS", "==", "1", ":", "\n", "        ", "device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "# gpu_device = '/gpu:{}'.format(args.GPU_ID)", "\n", "", "else", ":", "\n", "        ", "device", "=", "'/cpu:0'", "\n", "", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (images and masks)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", "=", "args", ")", "\n", "\n", "# inputs = inputs.apply(shuffle_and_repeat(dataset_num)).apply(", "\n", "#     map_and_batch(Image_Data_Class.image_processing, args.BATCH_SIZE, num_parallel_batches=16,", "\n", "#                   drop_remainder=True)).apply(prefetch_to_device(gpu_device, args.BATCH_SIZE))", "\n", "inputs", "=", "inputs", ".", "apply", "(", "shuffle_and_repeat", "(", "dataset_num", ")", ")", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "\n", "Image_Data_Class", ".", "image_edge_scale_processing", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", ",", "tf", ".", "float32", ",", "tf", ".", "float32", ",", "tf", ".", "float32", "]", ")", ",", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "args", ".", "BATCH_SIZE", "*", "args", ".", "NUM_GPUS", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "device", ",", "args", ".", "BATCH_SIZE", "*", "args", ".", "NUM_GPUS", ")", ")", "\n", "inputs_iterator", "=", "inputs", ".", "make_one_shot_iterator", "(", ")", "# iterator", "\n", "\n", "images_edges", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "images_edges", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.load_val_img_scale_edge": [[578, 608], ["tensorflow.data.Dataset.from_tensor_slices", "len", "utils_fn.ImageData", "inputs.batch().apply.apply().map", "inputs.batch().apply.batch().apply", "inputs.batch().apply.make_initializable_iterator", "inputs.make_initializable_iterator.get_next", "open", "f.read().splitlines", "tensorflow.contrib.data.prefetch_to_device", "inputs.batch().apply.apply", "tensorflow.py_func", "inputs.batch().apply.batch", "f.read", "tensorflow.contrib.data.shuffle_and_repeat"], "function", ["None"], ["", "def", "load_val_img_scale_edge", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Load image data\n    \"\"\"", "\n", "# training data: 0, as file list", "\n", "# image files", "\n", "with", "open", "(", "args", ".", "DATA_FLIST", "[", "args", ".", "DATASET", "]", "[", "1", "]", ")", "as", "f", ":", "\n", "        ", "fnames", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "# TODO: create input dataset (images and masks)", "\n", "", "inputs", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "fnames", ")", "# a tf dataset object (op)", "\n", "\n", "gpu_device", "=", "'/gpu:0'", "# to which gpu. prefetch_to_device(device, batch_size)", "\n", "# gpu_device = '/gpu:{}'.format(args.GPU_ID)", "\n", "\n", "dataset_num", "=", "len", "(", "fnames", ")", "\n", "# TODO: dataset with preprocessing (images and masks)", "\n", "Image_Data_Class", "=", "ImageData", "(", "args", "=", "args", ")", "\n", "\n", "# inputs = inputs.apply(shuffle_and_repeat(dataset_num)).apply(", "\n", "#     map_and_batch(Image_Data_Class.image_processing, args.BATCH_SIZE, num_parallel_batches=16,", "\n", "#                   drop_remainder=True)).apply(prefetch_to_device(gpu_device, args.BATCH_SIZE))", "\n", "inputs", "=", "inputs", ".", "apply", "(", "shuffle_and_repeat", "(", "dataset_num", ")", ")", ".", "map", "(", "lambda", "filename", ":", "tf", ".", "py_func", "(", "\n", "Image_Data_Class", ".", "image_edge_scale_processing", ",", "[", "filename", "]", ",", "[", "tf", ".", "float32", ",", "tf", ".", "float32", ",", "tf", ".", "float32", ",", "tf", ".", "float32", "]", ")", ",", "num_parallel_calls", "=", "3", ")", "\n", "inputs", "=", "inputs", ".", "batch", "(", "args", ".", "VAL_NUM", ",", "drop_remainder", "=", "True", ")", ".", "apply", "(", "prefetch_to_device", "(", "gpu_device", ",", "args", ".", "BATCH_SIZE", ")", ")", "\n", "inputs_iterator", "=", "inputs", ".", "make_initializable_iterator", "(", ")", "# iterator", "\n", "\n", "images_edges", "=", "inputs_iterator", ".", "get_next", "(", ")", "# an iteration get a batch of data", "\n", "\n", "return", "images_edges", ",", "inputs_iterator", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.random_bbox": [[612, 639], ["tensorflow.constant", "tensorflow.constant", "tensorflow.random_uniform", "tensorflow.random_uniform"], "function", ["None"], ["", "def", "random_bbox", "(", "config", ")", ":", "\n", "    ", "\"\"\"Generate a random tlhw with configuration.\n\n    Args:\n        config: Config should have configuration including IMG_SHAPES,\n            VERTICAL_MARGIN, HEIGHT, HORIZONTAL_MARGIN, WIDTH.\n\n    Returns:\n        tuple: (top, left, height, width)\n\n    \"\"\"", "\n", "img_shape", "=", "config", ".", "img_shapes", "\n", "img_height", "=", "img_shape", "[", "0", "]", "\n", "img_width", "=", "img_shape", "[", "1", "]", "\n", "if", "config", ".", "random_mask", "is", "True", ":", "\n", "        ", "maxt", "=", "img_height", "-", "config", ".", "margins", "[", "0", "]", "-", "config", ".", "mask_shapes", "[", "0", "]", "\n", "maxl", "=", "img_width", "-", "config", ".", "margins", "[", "1", "]", "-", "config", ".", "mask_shapes", "[", "1", "]", "\n", "t", "=", "tf", ".", "random_uniform", "(", "\n", "[", "]", ",", "minval", "=", "config", ".", "margins", "[", "0", "]", ",", "maxval", "=", "maxt", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "l", "=", "tf", ".", "random_uniform", "(", "\n", "[", "]", ",", "minval", "=", "config", ".", "margins", "[", "1", "]", ",", "maxval", "=", "maxl", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "", "else", ":", "\n", "        ", "t", "=", "config", ".", "mask_shapes", "[", "0", "]", "//", "2", "\n", "l", "=", "config", ".", "mask_shapes", "[", "1", "]", "//", "2", "\n", "", "h", "=", "tf", ".", "constant", "(", "config", ".", "mask_shapes", "[", "0", "]", ")", "\n", "w", "=", "tf", ".", "constant", "(", "config", ".", "mask_shapes", "[", "1", "]", ")", "\n", "return", "(", "t", ",", "l", ",", "h", ",", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.bbox2mask": [[641, 671], ["numpy.zeros", "numpy.random.randint", "numpy.random.randint", "tensorflow.variable_scope", "tensorflow.device", "tensorflow.py_func", "tf.py_func.set_shape"], "function", ["None"], ["", "def", "bbox2mask", "(", "bbox", ",", "config", ",", "name", "=", "'mask'", ")", ":", "\n", "    ", "\"\"\"Generate mask tensor from bbox.\n\n    Args:\n        bbox: configuration tuple, (top, left, height, width)\n        config: Config should have configuration including IMG_SHAPES,\n            MAX_DELTA_HEIGHT, MAX_DELTA_WIDTH.\n\n    Returns:\n        tf.Tensor: output with shape [1, H, W, 1]\n\n    \"\"\"", "\n", "def", "npmask", "(", "bbox", ",", "height", ",", "width", ",", "delta_h", ",", "delta_w", ")", ":", "\n", "        ", "mask", "=", "np", ".", "zeros", "(", "(", "1", ",", "height", ",", "width", ",", "1", ")", ",", "np", ".", "float32", ")", "\n", "h", "=", "np", ".", "random", ".", "randint", "(", "delta_h", "//", "2", "+", "1", ")", "\n", "w", "=", "np", ".", "random", ".", "randint", "(", "delta_w", "//", "2", "+", "1", ")", "\n", "mask", "[", ":", ",", "bbox", "[", "0", "]", "+", "h", ":", "bbox", "[", "0", "]", "+", "bbox", "[", "2", "]", "-", "h", ",", "\n", "bbox", "[", "1", "]", "+", "w", ":", "bbox", "[", "1", "]", "+", "bbox", "[", "3", "]", "-", "w", ",", ":", "]", "=", "1.", "\n", "return", "mask", "\n", "", "with", "tf", ".", "variable_scope", "(", "name", ")", ",", "tf", ".", "device", "(", "'/cpu:0'", ")", ":", "\n", "        ", "img_shape", "=", "config", ".", "img_shapes", "\n", "height", "=", "img_shape", "[", "0", "]", "\n", "width", "=", "img_shape", "[", "1", "]", "\n", "mask", "=", "tf", ".", "py_func", "(", "\n", "npmask", ",", "\n", "[", "bbox", ",", "height", ",", "width", ",", "\n", "config", ".", "max_delta_shapes", "[", "0", "]", ",", "config", ".", "max_delta_shapes", "[", "1", "]", "]", ",", "\n", "tf", ".", "float32", ",", "stateful", "=", "False", ")", "\n", "mask", ".", "set_shape", "(", "[", "1", "]", "+", "[", "height", ",", "width", "]", "+", "[", "1", "]", ")", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.__init__": [[31, 34], ["vgg_network.VGG", "loss.LossCalculator.vgg_model.net"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network.VGG.net"], ["    ", "def", "__init__", "(", "self", ",", "vgg_dir", ",", "real_image", ")", ":", "\n", "        ", "self", ".", "vgg_model", "=", "VGG", "(", "vgg_dir", ")", "\n", "self", ".", "vgg_real", "=", "self", ".", "vgg_model", ".", "net", "(", "real_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.content_loss": [[35, 48], ["loss.LossCalculator.vgg_model.net", "tensorflow.reduce_sum", "tensorflow.constant", "loss.LossCalculator._content_loss_helper", "config.Content.feat_layers.items"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network.VGG.net", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator._content_loss_helper"], ["", "def", "content_loss", "(", "self", ",", "content_fake", ",", "layers", "=", "None", ")", ":", "\n", "# compute content loss", "\n", "        ", "vgg_fake", "=", "self", ".", "vgg_model", ".", "net", "(", "content_fake", ")", "# dict: net[name] = current_layer", "\n", "if", "config", ".", "W", ".", "Content", ">", "0", ":", "\n", "            ", "if", "layers", "is", "not", "None", ":", "\n", "                ", "config", ".", "Content", ".", "feat_layers", "=", "layers", "\n", "", "content_loss_list", "=", "[", "w", "*", "self", ".", "_content_loss_helper", "(", "self", ".", "vgg_real", "[", "layer", "]", ",", "vgg_fake", "[", "layer", "]", ")", "\n", "for", "layer", ",", "w", "in", "config", ".", "Content", ".", "feat_layers", ".", "items", "(", ")", "]", "\n", "content_loss", "=", "tf", ".", "reduce_sum", "(", "content_loss_list", ")", "\n", "", "else", ":", "\n", "            ", "zero_tensor", "=", "tf", ".", "constant", "(", "0.0", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "content_loss", "=", "zero_tensor", "\n", "", "return", "content_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.style_loss": [[49, 64], ["loss.LossCalculator.vgg_model.net", "tensorflow.reduce_sum", "tensorflow.constant", "loss.LossCalculator._style_loss_helper", "config.Style.feat_layers.items"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network.VGG.net", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator._style_loss_helper"], ["", "def", "style_loss", "(", "self", ",", "style_fake", ",", "layers", "=", "None", ")", ":", "\n", "        ", "vgg_fake", "=", "self", ".", "vgg_model", ".", "net", "(", "style_fake", ")", "# dict: net[name] = current_layer", "\n", "# image = tf.placeholder('float32', shape=style.shape)", "\n", "# style_net = self.vgg.net(image)", "\n", "\n", "if", "config", ".", "W", ".", "Style", ">", "0", ":", "\n", "            ", "if", "layers", "is", "not", "None", ":", "\n", "                ", "config", ".", "Style", ".", "feat_layers", "=", "layers", "\n", "", "style_loss_list", "=", "[", "w", "*", "self", ".", "_style_loss_helper", "(", "self", ".", "vgg_real", "[", "layer", "]", ",", "vgg_fake", "[", "layer", "]", ")", "\n", "for", "layer", ",", "w", "in", "config", ".", "Style", ".", "feat_layers", ".", "items", "(", ")", "]", "\n", "style_loss", "=", "tf", ".", "reduce_sum", "(", "style_loss_list", ")", "\n", "", "else", ":", "\n", "            ", "zero_tensor", "=", "tf", ".", "constant", "(", "0.0", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "style_loss", "=", "zero_tensor", "\n", "", "return", "style_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator._content_loss_helper": [[73, 78], ["vgg_A.shape.as_list", "tensorflow.nn.l2_loss"], "methods", ["None"], ["", "def", "_content_loss_helper", "(", "self", ",", "vgg_A", ",", "vgg_B", ")", ":", "\n", "        ", "N", ",", "fH", ",", "fW", ",", "fC", "=", "vgg_A", ".", "shape", ".", "as_list", "(", ")", "\n", "feature_size", "=", "N", "*", "fH", "*", "fW", "*", "fC", "\n", "content_loss", "=", "2", "*", "tf", ".", "nn", ".", "l2_loss", "(", "vgg_A", "-", "vgg_B", ")", "/", "feature_size", "\n", "return", "content_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator._style_loss_helper": [[79, 86], ["vgg_A.shape.as_list", "loss.LossCalculator._compute_gram", "loss.LossCalculator._compute_gram", "tensorflow.nn.l2_loss"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator._compute_gram", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator._compute_gram"], ["", "def", "_style_loss_helper", "(", "self", ",", "vgg_A", ",", "vgg_B", ")", ":", "\n", "        ", "N", ",", "fH", ",", "fW", ",", "fC", "=", "vgg_A", ".", "shape", ".", "as_list", "(", ")", "\n", "feature_size", "=", "N", "*", "fH", "*", "fW", "*", "fC", "\n", "gram_A", "=", "self", ".", "_compute_gram", "(", "vgg_A", ")", "\n", "gram_B", "=", "self", ".", "_compute_gram", "(", "vgg_B", ")", "\n", "style_loss", "=", "2", "*", "tf", ".", "nn", ".", "l2_loss", "(", "gram_A", "-", "gram_B", ")", "/", "feature_size", "\n", "return", "style_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator._compute_gram": [[87, 95], ["tensorflow.shape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.div", "tensorflow.cast"], "methods", ["None"], ["", "def", "_compute_gram", "(", "self", ",", "feature", ")", ":", "\n", "# https://github.com/fullfanta/real_time_style_transfer/blob/master/train.py", "\n", "        ", "shape", "=", "tf", ".", "shape", "(", "feature", ")", "\n", "psi", "=", "tf", ".", "reshape", "(", "feature", ",", "[", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", "*", "shape", "[", "2", "]", ",", "shape", "[", "3", "]", "]", ")", "\n", "# psi_t = tf.transpose(psi, perm=[0, 2, 1])", "\n", "gram", "=", "tf", ".", "matmul", "(", "psi", ",", "psi", ",", "transpose_a", "=", "True", ")", "\n", "gram", "=", "tf", ".", "div", "(", "gram", ",", "tf", ".", "cast", "(", "shape", "[", "1", "]", "*", "shape", "[", "2", "]", "*", "shape", "[", "3", "]", ",", "tf", ".", "float32", ")", ")", "\n", "return", "gram", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.tv_loss": [[96, 108], ["loss._tensor_size", "loss._tensor_size", "image.shape.as_list", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss._tensor_size", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss._tensor_size"], ["", "def", "tv_loss", "(", "self", ",", "image", ")", ":", "\n", "# total variation denoising", "\n", "        ", "tv_y_size", "=", "_tensor_size", "(", "image", "[", ":", ",", "1", ":", ",", ":", ",", ":", "]", ")", "\n", "tv_x_size", "=", "_tensor_size", "(", "image", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", ")", "\n", "shape", "=", "image", ".", "shape", ".", "as_list", "(", ")", "\n", "tv_loss", "=", "2", "*", "(", "\n", "(", "tf", ".", "nn", ".", "l2_loss", "(", "image", "[", ":", ",", "1", ":", ",", ":", ",", ":", "]", "-", "image", "[", ":", ",", ":", "shape", "[", "1", "]", "-", "1", ",", ":", ",", ":", "]", ")", "/", "\n", "tv_y_size", ")", "+", "\n", "(", "tf", ".", "nn", ".", "l2_loss", "(", "image", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "-", "image", "[", ":", ",", ":", ",", ":", "shape", "[", "2", "]", "-", "1", ",", ":", "]", ")", "/", "\n", "tv_x_size", ")", ")", "\n", "\n", "return", "tv_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.l1_loss": [[110, 119], ["tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.abs"], "methods", ["None"], ["", "def", "l1_loss", "(", "self", ",", "image", ",", "predict", ",", "mask", ",", "type", "=", "'foreground'", ")", ":", "\n", "        ", "error", "=", "tf", ".", "abs", "(", "predict", "-", "image", ")", "\n", "if", "type", "==", "'foreground'", ":", "\n", "            ", "loss", "=", "tf", ".", "reduce_sum", "(", "mask", "*", "error", ")", "/", "tf", ".", "reduce_sum", "(", "mask", ")", "# * tf.reduce_sum(1. - mask) for balance?", "\n", "", "elif", "type", "==", "'background'", ":", "\n", "            ", "loss", "=", "tf", ".", "reduce_sum", "(", "(", "1.", "-", "mask", ")", "*", "error", ")", "/", "tf", ".", "reduce_sum", "(", "1.", "-", "mask", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "tf", ".", "reduce_sum", "(", "mask", "*", "tf", ".", "abs", "(", "predict", "-", "image", ")", ")", "/", "tf", ".", "reduce_sum", "(", "mask", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.LossCalculator.adversarial_loss": [[121, 123], ["None"], "methods", ["None"], ["", "def", "adversarial_loss", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.__init__": [[291, 294], ["float", "float"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sigma", "=", "float", "(", "0.1", ")", ",", "b", "=", "float", "(", "1.0", ")", ")", ":", "\n", "        ", "self", ".", "b", "=", "b", "\n", "self", ".", "sigma", "=", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.__calculate_CS": [[295, 299], ["tensorflow.exp", "loss.CSFlow.sum_normalize"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.sum_normalize"], ["", "def", "__calculate_CS", "(", "self", ",", "scaled_distances", ",", "axis_for_normalization", "=", "3", ")", ":", "\n", "        ", "self", ".", "scaled_distances", "=", "scaled_distances", "\n", "self", ".", "cs_weights_before_normalization", "=", "tf", ".", "exp", "(", "(", "self", ".", "b", "-", "scaled_distances", ")", "/", "self", ".", "sigma", ",", "name", "=", "'weights_before_normalization'", ")", "\n", "self", ".", "cs_NHWC", "=", "CSFlow", ".", "sum_normalize", "(", "self", ".", "cs_weights_before_normalization", ",", "axis_for_normalization", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.reversed_direction_CS": [[300, 307], ["loss.CSFlow", "loss.CSFlow.calc_relative_distances", "loss.CSFlow.__calculate_CS"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.calc_relative_distances", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.__calculate_CS"], ["", "def", "reversed_direction_CS", "(", "self", ")", ":", "\n", "        ", "cs_flow_opposite", "=", "CSFlow", "(", "self", ".", "sigma", ",", "self", ".", "b", ")", "\n", "cs_flow_opposite", ".", "raw_distances", "=", "self", ".", "raw_distances", "\n", "work_axis", "=", "[", "1", ",", "2", "]", "\n", "relative_dist", "=", "cs_flow_opposite", ".", "calc_relative_distances", "(", "axis", "=", "work_axis", ")", "\n", "cs_flow_opposite", ".", "__calculate_CS", "(", "relative_dist", ",", "work_axis", ")", "\n", "return", "cs_flow_opposite", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.create_using_L2": [[309, 343], ["float", "float", "loss.CSFlow", "tensorflow.name_scope", "T_features.shape.as_list", "I_features.shape.as_list", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "T_features.shape.as_list", "range", "tensorflow.convert_to_tensor", "loss.CSFlow.calc_relative_distances", "loss.CSFlow.__calculate_CS", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.maximum", "tensorflow.transpose", "tensorflow.transpose", "float", "tensorflow.squeeze"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.calc_relative_distances", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.__calculate_CS"], ["", "@", "staticmethod", "\n", "def", "create_using_L2", "(", "I_features", ",", "T_features", ",", "sigma", "=", "float", "(", "0.1", ")", ",", "b", "=", "float", "(", "1.0", ")", ")", ":", "\n", "        ", "cs_flow", "=", "CSFlow", "(", "sigma", ",", "b", ")", "\n", "with", "tf", ".", "name_scope", "(", "'CS'", ")", ":", "\n", "            ", "sT", "=", "T_features", ".", "shape", ".", "as_list", "(", ")", "\n", "sI", "=", "I_features", ".", "shape", ".", "as_list", "(", ")", "\n", "\n", "Ivecs", "=", "tf", ".", "reshape", "(", "I_features", ",", "(", "sI", "[", "0", "]", ",", "-", "1", ",", "sI", "[", "3", "]", ")", ")", "\n", "Tvecs", "=", "tf", ".", "reshape", "(", "T_features", ",", "(", "sI", "[", "0", "]", ",", "-", "1", ",", "sT", "[", "3", "]", ")", ")", "\n", "r_Ts", "=", "tf", ".", "reduce_sum", "(", "Tvecs", "*", "Tvecs", ",", "2", ")", "\n", "r_Is", "=", "tf", ".", "reduce_sum", "(", "Ivecs", "*", "Ivecs", ",", "2", ")", "\n", "raw_distances_list", "=", "[", "]", "\n", "\n", "N", ",", "_", ",", "_", ",", "_", "=", "T_features", ".", "shape", ".", "as_list", "(", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "                ", "Ivec", ",", "Tvec", ",", "r_T", ",", "r_I", "=", "Ivecs", "[", "i", "]", ",", "Tvecs", "[", "i", "]", ",", "r_Ts", "[", "i", "]", ",", "r_Is", "[", "i", "]", "\n", "A", "=", "tf", ".", "matmul", "(", "Tvec", ",", "tf", ".", "transpose", "(", "Ivec", ")", ")", "\n", "cs_flow", ".", "A", "=", "A", "\n", "# A = tf.matmul(Tvec, tf.transpose(Ivec))", "\n", "r_T", "=", "tf", ".", "reshape", "(", "r_T", ",", "[", "-", "1", ",", "1", "]", ")", "# turn to column vector", "\n", "dist", "=", "r_T", "-", "2", "*", "A", "+", "r_I", "\n", "cs_shape", "=", "sI", "[", ":", "3", "]", "+", "[", "dist", ".", "shape", "[", "0", "]", ".", "value", "]", "\n", "cs_shape", "[", "0", "]", "=", "1", "\n", "dist", "=", "tf", ".", "reshape", "(", "tf", ".", "transpose", "(", "dist", ")", ",", "cs_shape", ")", "\n", "# protecting against numerical problems, dist should be positive", "\n", "dist", "=", "tf", ".", "maximum", "(", "float", "(", "0.0", ")", ",", "dist", ")", "\n", "# dist = tf.sqrt(dist)", "\n", "raw_distances_list", "+=", "[", "dist", "]", "\n", "\n", "", "cs_flow", ".", "raw_distances", "=", "tf", ".", "convert_to_tensor", "(", "[", "tf", ".", "squeeze", "(", "raw_dist", ",", "axis", "=", "0", ")", "for", "raw_dist", "in", "raw_distances_list", "]", ")", "\n", "\n", "relative_dist", "=", "cs_flow", ".", "calc_relative_distances", "(", ")", "\n", "cs_flow", ".", "__calculate_CS", "(", "relative_dist", ")", "\n", "return", "cs_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.create_using_dotP": [[345, 376], ["float", "float", "loss.CSFlow", "tensorflow.name_scope", "loss.CSFlow.center_by_T", "tensorflow.name_scope", "loss.CSFlow.l2_normalize_channelwise", "tensorflow.name_scope", "loss.CSFlow.l2_normalize_channelwise", "loss.CSFlow.l2_normalize_channelwise", "range", "tensorflow.concat", "loss.CSFlow.calc_relative_distances", "loss.CSFlow.__calculate_CS", "tensorflow.expand_dims", "tensorflow.expand_dims", "loss.CSFlow.patch_decomposition", "tensorflow.nn.conv2d", "cosine_dist_l.append"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.center_by_T", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.l2_normalize_channelwise", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.l2_normalize_channelwise", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.l2_normalize_channelwise", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.calc_relative_distances", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.__calculate_CS", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.patch_decomposition"], ["", "", "@", "staticmethod", "\n", "def", "create_using_dotP", "(", "I_features", ",", "T_features", ",", "sigma", "=", "float", "(", "1.0", ")", ",", "b", "=", "float", "(", "1.0", ")", ",", "args", "=", "None", ")", ":", "\n", "        ", "cs_flow", "=", "CSFlow", "(", "sigma", ",", "b", ")", "\n", "with", "tf", ".", "name_scope", "(", "'CS'", ")", ":", "\n", "# prepare feature before calculating cosine distance", "\n", "            ", "T_features", ",", "I_features", "=", "cs_flow", ".", "center_by_T", "(", "T_features", ",", "I_features", ")", "\n", "with", "tf", ".", "name_scope", "(", "'TFeatures'", ")", ":", "\n", "                ", "T_features", "=", "CSFlow", ".", "l2_normalize_channelwise", "(", "T_features", ")", "\n", "", "with", "tf", ".", "name_scope", "(", "'IFeatures'", ")", ":", "\n", "                ", "I_features", "=", "CSFlow", ".", "l2_normalize_channelwise", "(", "I_features", ")", "\n", "# work seperatly for each example in dim 1", "\n", "cosine_dist_l", "=", "[", "]", "\n", "N", ",", "_", ",", "_", ",", "_", "=", "T_features", ".", "shape", ".", "as_list", "(", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "                    ", "T_features_i", "=", "tf", ".", "expand_dims", "(", "T_features", "[", "i", ",", ":", ",", ":", ",", ":", "]", ",", "0", ")", "\n", "I_features_i", "=", "tf", ".", "expand_dims", "(", "I_features", "[", "i", ",", ":", ",", ":", ",", ":", "]", ",", "0", ")", "\n", "patches_i", "=", "cs_flow", ".", "patch_decomposition", "(", "T_features_i", ",", "args", ")", "\n", "# every patch in patches_i as a kernel to conv I_features, obtain dis between each patch in patches_i", "\n", "# and I_features. (GPU is OK?)", "\n", "cosine_dist_i", "=", "tf", ".", "nn", ".", "conv2d", "(", "I_features_i", ",", "patches_i", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "padding", "=", "'VALID'", ",", "use_cudnn_on_gpu", "=", "True", ",", "name", "=", "'cosine_dist'", ")", "\n", "cosine_dist_l", ".", "append", "(", "cosine_dist_i", ")", "\n", "\n", "", "cs_flow", ".", "cosine_dist", "=", "tf", ".", "concat", "(", "cosine_dist_l", ",", "axis", "=", "0", ")", "\n", "\n", "cosine_dist_zero_to_one", "=", "-", "(", "cs_flow", ".", "cosine_dist", "-", "1", ")", "/", "2", "\n", "cs_flow", ".", "raw_distances", "=", "cosine_dist_zero_to_one", "\n", "\n", "relative_dist", "=", "cs_flow", ".", "calc_relative_distances", "(", ")", "\n", "cs_flow", ".", "__calculate_CS", "(", "relative_dist", ")", "\n", "return", "cs_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.calc_relative_distances": [[377, 383], ["tensorflow.reduce_min"], "methods", ["None"], ["", "", "", "def", "calc_relative_distances", "(", "self", ",", "axis", "=", "3", ")", ":", "\n", "        ", "epsilon", "=", "1e-5", "\n", "div", "=", "tf", ".", "reduce_min", "(", "self", ".", "raw_distances", ",", "axis", "=", "axis", ",", "keep_dims", "=", "True", ")", "\n", "# div = tf.reduce_mean(self.raw_distances, axis=axis, keep_dims=True)", "\n", "relative_dist", "=", "self", ".", "raw_distances", "/", "(", "div", "+", "epsilon", ")", "\n", "return", "relative_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.weighted_average_dist": [[384, 390], ["tensorflow.reduce_sum", "hasattr", "logging.exception"], "methods", ["None"], ["", "def", "weighted_average_dist", "(", "self", ",", "axis", "=", "3", ")", ":", "\n", "        ", "if", "not", "hasattr", "(", "self", ",", "'raw_distances'", ")", ":", "\n", "            ", "raise", "exception", "(", "'raw_distances property does not exists. cant calculate weighted average l2'", ")", "\n", "\n", "", "multiply", "=", "self", ".", "raw_distances", "*", "self", ".", "cs_NHWC", "\n", "return", "tf", ".", "reduce_sum", "(", "multiply", ",", "axis", "=", "axis", ",", "name", "=", "'weightedDistPerPatch'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.create": [[392, 401], ["float", "float", "loss.CSFlow.create_using_dotP", "loss.CSFlow.create_using_L2", "distance.__str__"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.create_using_dotP", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.create_using_L2"], ["", "@", "staticmethod", "\n", "def", "create", "(", "I_features", ",", "T_features", ",", "distance", ":", "Distance", ",", "nnsigma", "=", "float", "(", "1.0", ")", ",", "b", "=", "float", "(", "1.0", ")", ",", "args", "=", "None", ")", ":", "\n", "        ", "if", "distance", ".", "value", "==", "Distance", ".", "DotProduct", ".", "value", ":", "\n", "            ", "cs_flow", "=", "CSFlow", ".", "create_using_dotP", "(", "I_features", ",", "T_features", ",", "nnsigma", ",", "b", ",", "args", ")", "\n", "", "elif", "distance", ".", "value", "==", "Distance", ".", "L2", ".", "value", ":", "\n", "            ", "cs_flow", "=", "CSFlow", ".", "create_using_L2", "(", "I_features", ",", "T_features", ",", "nnsigma", ",", "b", ")", "\n", "", "else", ":", "\n", "            ", "raise", "\"not supported distance \"", "+", "distance", ".", "__str__", "(", ")", "\n", "", "return", "cs_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.sum_normalize": [[402, 406], ["tensorflow.reduce_sum", "tensorflow.divide"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "sum_normalize", "(", "cs", ",", "axis", "=", "3", ")", ":", "\n", "        ", "reduce_sum", "=", "tf", ".", "reduce_sum", "(", "cs", ",", "axis", ",", "keep_dims", "=", "True", ",", "name", "=", "'sum'", ")", "\n", "return", "tf", ".", "divide", "(", "cs", ",", "reduce_sum", ",", "name", "=", "'sumNormalized'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.center_by_T": [[407, 426], ["tensorflow.nn.moments", "tensorflow.name_scope", "tensorflow.name_scope"], "methods", ["None"], ["", "def", "center_by_T", "(", "self", ",", "T_features", ",", "I_features", ")", ":", "\n", "# assuming both input are of the same size", "\n", "\n", "# calculate stas over [batch, height, width], expecting 1x1xDepth tensor", "\n", "        ", "axes", "=", "[", "0", ",", "1", ",", "2", "]", "\n", "self", ".", "meanT", ",", "self", ".", "varT", "=", "tf", ".", "nn", ".", "moments", "(", "\n", "T_features", ",", "axes", ",", "name", "=", "'TFeatures/moments'", ")", "\n", "# we do not divide by std since its causing the histogram", "\n", "# for the final cs to be very thin, so the NN weights", "\n", "# are not distinctive, giving similar values for all patches.", "\n", "# stdT = tf.sqrt(varT, \"stdT\")", "\n", "# correct places with std zero", "\n", "# stdT[tf.less(stdT, tf.constant(0.001))] = tf.constant(1)", "\n", "with", "tf", ".", "name_scope", "(", "'TFeatures/centering'", ")", ":", "\n", "            ", "self", ".", "T_features_centered", "=", "T_features", "-", "self", ".", "meanT", "\n", "", "with", "tf", ".", "name_scope", "(", "'IFeatures/centering'", ")", ":", "\n", "            ", "self", ".", "I_features_centered", "=", "I_features", "-", "self", ".", "meanT", "\n", "\n", "", "return", "self", ".", "T_features_centered", ",", "self", ".", "I_features_centered", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.l2_normalize_channelwise": [[427, 434], ["tensorflow.norm", "tensorflow.expand_dims", "tensorflow.divide"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "l2_normalize_channelwise", "(", "features", ")", ":", "\n", "        ", "norms", "=", "tf", ".", "norm", "(", "features", ",", "ord", "=", "'euclidean'", ",", "axis", "=", "3", ",", "name", "=", "'norm'", ")", "\n", "# expanding the norms tensor to support broadcast division", "\n", "norms_expanded", "=", "tf", ".", "expand_dims", "(", "norms", ",", "3", ")", "\n", "features", "=", "tf", ".", "divide", "(", "features", ",", "norms_expanded", ",", "name", "=", "'normalized'", ")", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.patch_decomposition": [[435, 460], ["tensorflow.extract_image_patches", "int", "tensorflow.reshape", "tensorflow.transpose"], "methods", ["None"], ["", "def", "patch_decomposition", "(", "self", ",", "T_features", ",", "args", "=", "None", ")", ":", "\n", "# patch decomposition", "\n", "        ", "if", "args", "is", "None", ":", "\n", "            ", "patch_size", "=", "1", "\n", "stride_size", "=", "1", "\n", "", "else", ":", "\n", "            ", "patch_size", "=", "args", ".", "PATCH_SIZE", "\n", "stride_size", "=", "args", ".", "STRIDE_SIZE", "\n", "", "patches_as_depth_vectors", "=", "tf", ".", "extract_image_patches", "(", "\n", "images", "=", "T_features", ",", "ksizes", "=", "[", "1", ",", "patch_size", ",", "patch_size", ",", "1", "]", ",", "\n", "strides", "=", "[", "1", ",", "stride_size", ",", "stride_size", ",", "1", "]", ",", "rates", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'VALID'", ",", "\n", "name", "=", "'patches_as_depth_vectors'", ")", "\n", "\n", "out_channels", "=", "int", "(", "patches_as_depth_vectors", ".", "shape", "[", "3", "]", ".", "value", "/", "patch_size", "/", "patch_size", ")", "\n", "self", ".", "patches_NHWC", "=", "tf", ".", "reshape", "(", "\n", "patches_as_depth_vectors", ",", "\n", "shape", "=", "[", "-", "1", ",", "patch_size", ",", "patch_size", ",", "out_channels", "]", ",", "\n", "name", "=", "'patches_PHWC'", ")", "# patches_as_depth_vectors.shape[3].value / patch_size / patch_size; because here path_size=1,so it's right", "\n", "\n", "self", ".", "patches_HWCN", "=", "tf", ".", "transpose", "(", "\n", "self", ".", "patches_NHWC", ",", "\n", "perm", "=", "[", "1", ",", "2", ",", "3", ",", "0", "]", ",", "\n", "name", "=", "'patches_HWCP'", ")", "# tf.conv2 ready format (every patch as a kernel)", "\n", "\n", "return", "self", ".", "patches_HWCN", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss._tensor_size": [[124, 127], ["functools.reduce", "tensor.get_shape"], "function", ["None"], ["", "", "def", "_tensor_size", "(", "tensor", ")", ":", "\n", "    ", "from", "operator", "import", "mul", "\n", "return", "reduce", "(", "mul", ",", "(", "d", ".", "value", "for", "d", "in", "tensor", ".", "get_shape", "(", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.gan_wgan_loss": [[128, 142], ["tensorflow.variable_scope", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], "function", ["None"], ["", "def", "gan_wgan_loss", "(", "pos", ",", "neg", ",", "name", "=", "'gan_wgan_loss'", ")", ":", "\n", "    ", "\"\"\"\n    wgan loss function for GANs.\n\n    - Wasserstein GAN: https://arxiv.org/abs/1701.07875\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "d_loss", "=", "tf", ".", "reduce_mean", "(", "neg", "-", "pos", ")", "\n", "g_loss", "=", "-", "tf", ".", "reduce_mean", "(", "neg", ")", "\n", "# scalar_summary('d_loss', d_loss)", "\n", "# scalar_summary('g_loss', g_loss)", "\n", "# scalar_summary('pos_value_avg', tf.reduce_mean(pos))", "\n", "# scalar_summary('neg_value_avg', tf.reduce_mean(neg))", "\n", "", "return", "g_loss", ",", "d_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.patch_gan_loss": [[143, 166], ["tensorflow.variable_scope", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.reduce_mean", "tensorflow.ones_like", "tensorflow.zeros_like", "tensorflow.ones_like"], "function", ["None"], ["", "def", "patch_gan_loss", "(", "pos", ",", "neg", ",", "name", "=", "'patch_gan_loss'", ",", "loss_type", "=", "'gan'", ")", ":", "\n", "    ", "\"\"\"\n    patch gan loss\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "if", "loss_type", "==", "'gan'", ":", "\n", "            ", "g_loss", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "logits", "=", "neg", ",", "labels", "=", "tf", ".", "ones_like", "(", "neg", ")", ")", ")", "# \u751f\u6210\u5668loss", "\n", "\n", "d_loss_fake", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "logits", "=", "neg", ",", "labels", "=", "tf", ".", "zeros_like", "(", "neg", ")", ")", ")", "\n", "d_loss_real", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "logits", "=", "pos", ",", "labels", "=", "tf", ".", "ones_like", "(", "pos", ")", ")", ")", "\n", "d_loss", "=", "d_loss_fake", "+", "d_loss_real", "# \u5224\u522b\u5668loss", "\n", "\n", "", "if", "loss_type", "==", "'hinge'", ":", "\n", "            ", "d_loss_real", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "relu", "(", "1.0", "-", "pos", ")", ")", "\n", "d_loss_fake", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "relu", "(", "1.0", "+", "neg", ")", ")", "\n", "d_loss", "=", "d_loss_real", "+", "d_loss_fake", "\n", "\n", "g_loss", "=", "-", "tf", ".", "reduce_mean", "(", "neg", ")", "\n", "\n", "", "", "return", "g_loss", ",", "d_loss", ",", "d_loss_real", ",", "d_loss_fake", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.random_interpolates": [[167, 180], ["tf.reshape.get_shape().as_list", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.random_uniform", "tf.reshape.get_shape"], "function", ["None"], ["", "def", "random_interpolates", "(", "x", ",", "y", ",", "alpha", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    x: first dimension as batch_size\n    y: first dimension as batch_size\n    alpha: [BATCH_SIZE, 1]\n    \"\"\"", "\n", "shape", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "x", "=", "tf", ".", "reshape", "(", "x", ",", "[", "shape", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "y", "=", "tf", ".", "reshape", "(", "y", ",", "[", "shape", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "if", "alpha", "is", "None", ":", "\n", "        ", "alpha", "=", "tf", ".", "random_uniform", "(", "shape", "=", "[", "shape", "[", "0", "]", ",", "1", "]", ")", "\n", "", "interpolates", "=", "x", "+", "alpha", "*", "(", "y", "-", "x", ")", "\n", "return", "tf", ".", "reshape", "(", "interpolates", ",", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.gradients_penalty": [[182, 192], ["tensorflow.sqrt", "tensorflow.reduce_mean", "tensorflow.gradients", "tensorflow.ones_like", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.square"], "function", ["None"], ["", "def", "gradients_penalty", "(", "x", ",", "y", ",", "mask", "=", "None", ",", "norm", "=", "1.", ")", ":", "\n", "    ", "\"\"\"Improved Training of Wasserstein GANs\n\n    - https://arxiv.org/abs/1704.00028\n    \"\"\"", "\n", "gradients", "=", "tf", ".", "gradients", "(", "y", ",", "x", ")", "[", "0", "]", "\n", "if", "mask", "is", "None", ":", "\n", "        ", "mask", "=", "tf", ".", "ones_like", "(", "gradients", ")", "\n", "", "slopes", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "gradients", ")", "*", "mask", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ")", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "slopes", "-", "norm", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.focal_loss": [[194, 226], ["tensorflow.nn.sigmoid", "tensorflow.python.ops.array_ops.zeros_like", "tensorflow.python.ops.array_ops.where", "tensorflow.python.ops.array_ops.where", "tensorflow.reduce_mean", "tensorflow.log", "tensorflow.log", "tensorflow.clip_by_value", "tensorflow.clip_by_value"], "function", ["None"], ["def", "focal_loss", "(", "prediction_tensor", ",", "target_tensor", ",", "weights", "=", "None", ",", "alpha", "=", "0.25", ",", "gamma", "=", "2", ")", ":", "\n", "    ", "r\"\"\"Compute focal loss for predictions.\n        Multi-labels Focal loss formula:\n            FL = -alpha * (z-p)^gamma * log(p) -(1-alpha) * p^gamma * log(1-p)\n                 ,which alpha = 0.25, gamma = 2, p = sigmoid(x), z = target_tensor, z = 1.\n        ref: https://github.com/ailias/Focal-Loss-implement-on-Tensorflow\n        if z == 1, J = -a * (1 \u2013 p) * log(p)\n        if z != 1, J = -(1 \u2013 a) * p * log(1 \u2013p)\n    Args:\n     prediction_tensor: A float tensor of shape [batch_size, num_anchors,\n        num_classes] representing the predicted logits for each class\n     target_tensor: A float tensor of shape [batch_size, num_anchors,\n        num_classes] representing one-hot encoded classification targets\n     weights: A float tensor of shape [batch_size, num_anchors]\n     alpha: A scalar tensor for focal loss alpha hyper-parameter\n     gamma: A scalar tensor for focal loss gamma hyper-parameter\n    Returns:\n        loss: A (scalar) tensor representing the value of the loss function\n    \"\"\"", "\n", "sigmoid_p", "=", "tf", ".", "nn", ".", "sigmoid", "(", "prediction_tensor", ")", "\n", "zeros", "=", "array_ops", ".", "zeros_like", "(", "sigmoid_p", ",", "dtype", "=", "sigmoid_p", ".", "dtype", ")", "\n", "\n", "# For poitive prediction, only need consider front part loss, back part is 0;", "\n", "# target_tensor > zeros <=> z=1, so poitive coefficient = z - p.", "\n", "pos_p_sub", "=", "array_ops", ".", "where", "(", "target_tensor", ">", "zeros", ",", "target_tensor", "-", "sigmoid_p", ",", "zeros", ")", "\n", "\n", "# For negative prediction, only need consider back part loss, front part is 0;", "\n", "# target_tensor > zeros <=> z=1, so negative coefficient = 0.", "\n", "neg_p_sub", "=", "array_ops", ".", "where", "(", "target_tensor", ">", "zeros", ",", "zeros", ",", "sigmoid_p", ")", "\n", "per_entry_cross_ent", "=", "-", "alpha", "*", "(", "pos_p_sub", "**", "gamma", ")", "*", "tf", ".", "log", "(", "tf", ".", "clip_by_value", "(", "sigmoid_p", ",", "1e-8", ",", "1.0", ")", ")", "-", "(", "1", "-", "alpha", ")", "*", "(", "neg_p_sub", "**", "gamma", ")", "*", "tf", ".", "log", "(", "tf", ".", "clip_by_value", "(", "1.0", "-", "sigmoid_p", ",", "1e-8", ",", "1.0", ")", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "per_entry_cross_ent", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.sigmoid_cross_entropy_balanced_fore": [[227, 254], ["tensorflow.cast", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.nn.weighted_cross_entropy_with_logits", "tensorflow.where", "tensorflow.reduce_sum", "tensorflow.equal"], "function", ["None"], ["", "def", "sigmoid_cross_entropy_balanced_fore", "(", "logits", ",", "label", ",", "mask", ",", "name", "=", "'cross_entropy_loss'", ")", ":", "\n", "    ", "\"\"\"\n    Implements Equation [2] in https://arxiv.org/pdf/1504.06375.pdf\n    Compute edge pixels for each training sample and set as pos_weights to\n    tf.nn.weighted_cross_entropy_with_logits\n    \"\"\"", "\n", "y", "=", "tf", ".", "cast", "(", "label", ",", "tf", ".", "float32", ")", "\n", "\n", "count_neg", "=", "tf", ".", "reduce_sum", "(", "mask", "*", "(", "1.", "-", "y", ")", ")", "\n", "count_pos", "=", "tf", ".", "reduce_sum", "(", "mask", "*", "y", ")", "\n", "\n", "# Equation [2]", "\n", "beta", "=", "count_neg", "/", "(", "count_neg", "+", "count_pos", ")", "\n", "\n", "# Equation [2] divide by 1 - beta", "\n", "pos_weight", "=", "beta", "/", "(", "1", "-", "beta", ")", "\n", "\n", "cost", "=", "tf", ".", "nn", ".", "weighted_cross_entropy_with_logits", "(", "logits", "=", "logits", ",", "targets", "=", "y", ",", "pos_weight", "=", "pos_weight", ")", "\n", "\n", "# Multiply by 1 - beta", "\n", "# cost = tf.reduce_mean(cost * (1 - beta))", "\n", "# N, H, W, C = logits.get_shape().as_list()", "\n", "size", "=", "count_neg", "+", "count_neg", "\n", "cost", "=", "tf", ".", "reduce_sum", "(", "cost", "*", "(", "1", "-", "beta", ")", ")", "/", "size", "\n", "\n", "# check if image has no edge pixels return 0 else return complete error function", "\n", "return", "tf", ".", "where", "(", "tf", ".", "equal", "(", "count_pos", ",", "0.0", ")", ",", "0.0", ",", "cost", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.sigmoid_cross_entropy_balanced_back": [[255, 279], ["tensorflow.cast", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.nn.weighted_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.where", "tensorflow.equal"], "function", ["None"], ["", "def", "sigmoid_cross_entropy_balanced_back", "(", "logits", ",", "label", ",", "name", "=", "'cross_entropy_loss'", ")", ":", "\n", "    ", "\"\"\"\n    Implements Equation [2] in https://arxiv.org/pdf/1504.06375.pdf\n    Compute edge pixels for each training sample and set as pos_weights to\n    tf.nn.weighted_cross_entropy_with_logits\n    \"\"\"", "\n", "y", "=", "tf", ".", "cast", "(", "label", ",", "tf", ".", "float32", ")", "\n", "\n", "count_neg", "=", "tf", ".", "reduce_sum", "(", "1.", "-", "y", ")", "\n", "count_pos", "=", "tf", ".", "reduce_sum", "(", "y", ")", "\n", "\n", "# Equation [2]", "\n", "beta", "=", "count_neg", "/", "(", "count_neg", "+", "count_pos", ")", "\n", "\n", "# Equation [2] divide by 1 - beta", "\n", "pos_weight", "=", "beta", "/", "(", "1", "-", "beta", ")", "\n", "\n", "cost", "=", "tf", ".", "nn", ".", "weighted_cross_entropy_with_logits", "(", "logits", "=", "logits", ",", "targets", "=", "y", ",", "pos_weight", "=", "pos_weight", ")", "\n", "\n", "# Multiply by 1 - beta", "\n", "cost", "=", "tf", ".", "reduce_mean", "(", "cost", "*", "(", "1", "-", "beta", ")", ")", "\n", "\n", "# check if image has no edge pixels return 0 else return complete error function", "\n", "return", "tf", ".", "where", "(", "tf", ".", "equal", "(", "count_pos", ",", "0.0", ")", ",", "0.0", ",", "cost", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.mrf_loss": [[462, 478], ["float", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.name_scope", "loss.CSFlow.create", "tensorflow.reduce_max", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.log"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.CSFlow.create"], ["", "", "def", "mrf_loss", "(", "T_features", ",", "I_features", ",", "distance", "=", "Distance", ".", "DotProduct", ",", "nnsigma", "=", "float", "(", "1.0", ")", ",", "args", "=", "None", ")", ":", "\n", "    ", "T_features", "=", "tf", ".", "convert_to_tensor", "(", "T_features", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "I_features", "=", "tf", ".", "convert_to_tensor", "(", "I_features", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "'cx'", ")", ":", "\n", "        ", "cs_flow", "=", "CSFlow", ".", "create", "(", "I_features", ",", "T_features", ",", "distance", ",", "nnsigma", ")", "\n", "# sum_normalize:", "\n", "height_width_axis", "=", "[", "1", ",", "2", "]", "\n", "# To:", "\n", "cs", "=", "cs_flow", ".", "cs_NHWC", "\n", "k_max_NC", "=", "tf", ".", "reduce_max", "(", "cs", ",", "axis", "=", "height_width_axis", ")", "\n", "CS", "=", "tf", ".", "reduce_mean", "(", "k_max_NC", ",", "axis", "=", "[", "1", "]", ")", "\n", "CS_as_loss", "=", "1", "-", "CS", "\n", "CS_loss", "=", "-", "tf", ".", "log", "(", "1", "-", "CS_as_loss", ")", "\n", "CS_loss", "=", "tf", ".", "reduce_mean", "(", "CS_loss", ")", "\n", "return", "CS_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.random_sampling": [[480, 489], ["tensorflow.convert_to_tensor().shape.as_list", "tensorflow.reshape", "list", "tensorflow.random_shuffle", "tensorflow.gather", "range", "tensorflow.gather", "list", "tensorflow.convert_to_tensor", "range"], "function", ["None"], ["", "", "def", "random_sampling", "(", "tensor_in", ",", "n", ",", "indices", "=", "None", ")", ":", "\n", "    ", "N", ",", "H", ",", "W", ",", "C", "=", "tf", ".", "convert_to_tensor", "(", "tensor_in", ")", ".", "shape", ".", "as_list", "(", ")", "\n", "S", "=", "H", "*", "W", "\n", "tensor_NSC", "=", "tf", ".", "reshape", "(", "tensor_in", ",", "[", "N", ",", "S", ",", "C", "]", ")", "\n", "all_indices", "=", "list", "(", "range", "(", "S", ")", ")", "\n", "shuffled_indices", "=", "tf", ".", "random_shuffle", "(", "all_indices", ")", "\n", "indices", "=", "tf", ".", "gather", "(", "shuffled_indices", ",", "list", "(", "range", "(", "n", ")", ")", ",", "axis", "=", "0", ")", "if", "indices", "is", "None", "else", "indices", "\n", "res", "=", "tf", ".", "gather", "(", "tensor_NSC", ",", "indices", ",", "axis", "=", "1", ")", "\n", "return", "res", ",", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.random_pooling": [[491, 511], ["feats[].shape.as_list", "loss.random_sampling", "range", "type", "tensorflow.convert_to_tensor", "len", "loss.random_sampling", "res.append", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.random_sampling", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.random_sampling"], ["", "def", "random_pooling", "(", "feats", ",", "output_1d_size", "=", "100", ")", ":", "\n", "    ", "is_input_tensor", "=", "type", "(", "feats", ")", "is", "tf", ".", "Tensor", "\n", "\n", "if", "is_input_tensor", ":", "\n", "        ", "feats", "=", "[", "feats", "]", "\n", "\n", "# convert all inputs to tensors", "\n", "", "feats", "=", "[", "tf", ".", "convert_to_tensor", "(", "feats_i", ")", "for", "feats_i", "in", "feats", "]", "\n", "\n", "N", ",", "H", ",", "W", ",", "C", "=", "feats", "[", "0", "]", ".", "shape", ".", "as_list", "(", ")", "\n", "feats_sampled_0", ",", "indices", "=", "random_sampling", "(", "feats", "[", "0", "]", ",", "output_1d_size", "**", "2", ")", "\n", "res", "=", "[", "feats_sampled_0", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "feats", ")", ")", ":", "\n", "        ", "feats_sampled_i", ",", "_", "=", "random_sampling", "(", "feats", "[", "i", "]", ",", "-", "1", ",", "indices", ")", "\n", "res", ".", "append", "(", "feats_sampled_i", ")", "\n", "\n", "", "res", "=", "[", "tf", ".", "reshape", "(", "feats_sampled_i", ",", "[", "N", ",", "output_1d_size", ",", "output_1d_size", ",", "C", "]", ")", "for", "feats_sampled_i", "in", "res", "]", "\n", "if", "is_input_tensor", ":", "\n", "        ", "return", "res", "[", "0", "]", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.crop_quarters": [[513, 523], ["tf.concat.shape.as_list", "quarters_list.append", "quarters_list.append", "quarters_list.append", "quarters_list.append", "tensorflow.concat", "round", "round", "tensorflow.slice", "tensorflow.slice", "tensorflow.slice", "tensorflow.slice", "round", "round", "round", "round"], "function", ["None"], ["", "def", "crop_quarters", "(", "feature_tensor", ")", ":", "\n", "    ", "N", ",", "fH", ",", "fW", ",", "fC", "=", "feature_tensor", ".", "shape", ".", "as_list", "(", ")", "\n", "quarters_list", "=", "[", "]", "\n", "quarter_size", "=", "[", "N", ",", "round", "(", "fH", "/", "2", ")", ",", "round", "(", "fW", "/", "2", ")", ",", "fC", "]", "\n", "quarters_list", ".", "append", "(", "tf", ".", "slice", "(", "feature_tensor", ",", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "quarter_size", ")", ")", "\n", "quarters_list", ".", "append", "(", "tf", ".", "slice", "(", "feature_tensor", ",", "[", "0", ",", "round", "(", "fH", "/", "2", ")", ",", "0", ",", "0", "]", ",", "quarter_size", ")", ")", "\n", "quarters_list", ".", "append", "(", "tf", ".", "slice", "(", "feature_tensor", ",", "[", "0", ",", "0", ",", "round", "(", "fW", "/", "2", ")", ",", "0", "]", ",", "quarter_size", ")", ")", "\n", "quarters_list", ".", "append", "(", "tf", ".", "slice", "(", "feature_tensor", ",", "[", "0", ",", "round", "(", "fH", "/", "2", ")", ",", "round", "(", "fW", "/", "2", ")", ",", "0", "]", ",", "quarter_size", ")", ")", "\n", "feature_tensor", "=", "tf", ".", "concat", "(", "quarters_list", ",", "axis", "=", "0", ")", "\n", "return", "feature_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.id_mrf_reg_feat": [[525, 538], ["crop_quarters.shape.as_list", "loss.mrf_loss", "loss.crop_quarters", "loss.crop_quarters", "print", "print", "loss.random_pooling"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.mrf_loss", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.crop_quarters", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.crop_quarters", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.random_pooling"], ["", "def", "id_mrf_reg_feat", "(", "feat_A", ",", "feat_B", ",", "config", ",", "args", ")", ":", "\n", "    ", "if", "config", ".", "crop_quarters", "is", "True", ":", "\n", "        ", "feat_A", "=", "crop_quarters", "(", "feat_A", ")", "\n", "feat_B", "=", "crop_quarters", "(", "feat_B", ")", "\n", "\n", "", "N", ",", "fH", ",", "fW", ",", "fC", "=", "feat_A", ".", "shape", ".", "as_list", "(", ")", "\n", "if", "fH", "*", "fW", "<=", "config", ".", "max_sampling_1d_size", "**", "2", ":", "\n", "        ", "print", "(", "' #### Skipping pooling ....'", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "' #### pooling %d**2 out of %dx%d'", "%", "(", "config", ".", "max_sampling_1d_size", ",", "fH", ",", "fW", ")", ")", "\n", "feat_A", ",", "feat_B", "=", "random_pooling", "(", "[", "feat_A", ",", "feat_B", "]", ",", "output_1d_size", "=", "config", ".", "max_sampling_1d_size", ")", "\n", "\n", "", "return", "mrf_loss", "(", "feat_A", ",", "feat_B", ",", "distance", "=", "config", ".", "Dist", ",", "nnsigma", "=", "config", ".", "nn_stretch_sigma", ",", "args", "=", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.grad_matching_loss": [[542, 555], ["easydict.EasyDict", "loss.id_mrf_reg_feat", "tensorflow.reduce_sum"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.id_mrf_reg_feat"], ["def", "grad_matching_loss", "(", "im_src", ",", "im_dst", ",", "config", ")", ":", "\n", "\n", "    ", "match_config", "=", "edict", "(", ")", "\n", "match_config", ".", "crop_quarters", "=", "False", "\n", "match_config", ".", "max_sampling_1d_size", "=", "65", "\n", "match_config", ".", "Dist", "=", "Distance", ".", "DotProduct", "\n", "match_config", ".", "nn_stretch_sigma", "=", "0.5", "# 0.1", "\n", "\n", "match_loss", "=", "id_mrf_reg_feat", "(", "im_src", ",", "im_dst", ",", "match_config", ",", "config", ")", "\n", "\n", "match_loss", "=", "tf", ".", "reduce_sum", "(", "match_loss", ")", "\n", "\n", "return", "match_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.gaussian_kernel_2d_opencv": [[561, 571], ["cv2.getGaussianKernel", "cv2.getGaussianKernel", "cv2.getGaussianKernel", "cv2.getGaussianKernel", "numpy.multiply", "numpy.transpose"], "function", ["None"], ["def", "gaussian_kernel_2d_opencv", "(", "kernel_size", "=", "3", ",", "sigma", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    ref: https://blog.csdn.net/qq_16013649/article/details/78784791\n    ref: tensorflow\n        (1) https://stackoverflow.com/questions/52012657/how-to-make-a-2d-gaussian-filter-in-tensorflow\n        (2) https://github.com/tensorflow/tensorflow/issues/2826\n    \"\"\"", "\n", "kx", "=", "cv2", ".", "getGaussianKernel", "(", "kernel_size", ",", "sigma", ")", "\n", "ky", "=", "cv2", ".", "getGaussianKernel", "(", "kernel_size", ",", "sigma", ")", "\n", "return", "np", ".", "multiply", "(", "kx", ",", "np", ".", "transpose", "(", "ky", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.priority_loss_mask": [[572, 580], ["loss.gaussian_kernel_2d_opencv", "numpy.reshape", "tensorflow.convert_to_tensor", "range", "tensorflow.nn.conv2d"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.gaussian_kernel_2d_opencv"], ["", "def", "priority_loss_mask", "(", "mask", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", ":", "\n", "    ", "gaussian_kernel", "=", "gaussian_kernel_2d_opencv", "(", "kernel_size", "=", "ksize", ",", "sigma", "=", "sigma", ")", "\n", "gaussian_kernel", "=", "np", ".", "reshape", "(", "gaussian_kernel", ",", "(", "ksize", ",", "ksize", ",", "1", ",", "1", ")", ")", "\n", "mask_priority", "=", "tf", ".", "convert_to_tensor", "(", "mask", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "iteration", ")", ":", "\n", "        ", "mask_priority", "=", "tf", ".", "nn", ".", "conv2d", "(", "mask_priority", ",", "gaussian_kernel", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "", "return", "mask_priority", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.canny_edge": [[591, 609], ["range", "numpy.concatenate", "numpy.expand_dims().astype", "len", "skimage.color.rgb2gray", "skimage.feature.canny", "np.concatenate.append", "numpy.expand_dims", "numpy.expand_dims"], "function", ["None"], ["def", "canny_edge", "(", "images", ",", "sigma", "=", "1.5", ")", ":", "\n", "    ", "\"\"\"\n    Extract edges in tensorflow.\n    example:\n    input = tf.placeholder(dtype=tf.float32, shape=[None, 900, 900, 3])\n    output = tf.py_func(canny_edge, [input], tf.float32, stateful=False)\n\n    :param images:\n    :param sigma:\n    :return:\n    \"\"\"", "\n", "edges", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "images", ")", ")", ":", "\n", "        ", "grey_img", "=", "rgb2gray", "(", "images", "[", "i", "]", ")", "\n", "edge", "=", "feature", ".", "canny", "(", "grey_img", ",", "sigma", "=", "sigma", ")", "\n", "edges", ".", "append", "(", "np", ".", "expand_dims", "(", "edge", ",", "axis", "=", "0", ")", ")", "\n", "", "edges", "=", "np", ".", "concatenate", "(", "edges", ",", "axis", "=", "0", ")", "\n", "return", "np", ".", "expand_dims", "(", "edges", ",", "axis", "=", "3", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.loss.pyramid_structure_loss": [[611, 650], ["image.get_shape().as_list", "predict.get_shape().as_list", "tensorflow.reduce_mean", "image.get_shape", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.sobel_edges", "tensorflow.reshape", "tensorflow.abs", "tensorflow.py_func", "loss.priority_loss_mask", "tensorflow.image.sobel_edges", "tensorflow.reshape", "tensorflow.abs", "tensorflow.py_func", "loss.priority_loss_mask", "predict.get_shape", "tensorflow.reduce_sum", "tensorflow.reduce_sum"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask"], ["", "def", "pyramid_structure_loss", "(", "image", ",", "predicts", ",", "edge_alpha", ",", "grad_alpha", ")", ":", "\n", "    ", "_", ",", "H", ",", "W", ",", "_", "=", "image", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "loss", "=", "0.", "\n", "for", "predict", "in", "predicts", ":", "\n", "        ", "_", ",", "h", ",", "w", ",", "_", "=", "predict", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "if", "h", "!=", "H", ":", "\n", "            ", "gt_img", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "image", ",", "size", "=", "(", "h", ",", "w", ")", ")", "\n", "# gt_mask = tf.image.resize_nearest_neighbor(mask, size=(h, w))", "\n", "\n", "# grad", "\n", "gt_grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "gt_img", ")", "\n", "gt_grad", "=", "tf", ".", "reshape", "(", "gt_grad", ",", "[", "-", "1", ",", "h", ",", "w", ",", "6", "]", ")", "# 6 channel", "\n", "grad_error", "=", "tf", ".", "abs", "(", "predict", "-", "gt_grad", ")", "\n", "\n", "# edge", "\n", "gt_edge", "=", "tf", ".", "py_func", "(", "canny_edge", ",", "[", "gt_img", "]", ",", "tf", ".", "float32", ",", "stateful", "=", "False", ")", "\n", "edge_priority", "=", "priority_loss_mask", "(", "gt_edge", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", "\n", "", "else", ":", "\n", "            ", "gt_img", "=", "image", "\n", "# gt_mask = mask", "\n", "\n", "# grad", "\n", "gt_grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "gt_img", ")", "\n", "gt_grad", "=", "tf", ".", "reshape", "(", "gt_grad", ",", "[", "-", "1", ",", "H", ",", "W", ",", "6", "]", ")", "# 6 channel", "\n", "grad_error", "=", "tf", ".", "abs", "(", "predict", "-", "gt_grad", ")", "\n", "\n", "# edge", "\n", "gt_edge", "=", "tf", ".", "py_func", "(", "canny_edge", ",", "[", "gt_img", "]", ",", "tf", ".", "float32", ",", "stateful", "=", "False", ")", "\n", "edge_priority", "=", "priority_loss_mask", "(", "gt_edge", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", "\n", "\n", "", "grad_loss", "=", "tf", ".", "reduce_mean", "(", "grad_alpha", "*", "grad_error", ")", "\n", "edge_weight", "=", "edge_alpha", "*", "edge_priority", "\n", "# print(\"edge_weight\", edge_weight.shape)", "\n", "# print(\"grad_error\", grad_error.shape)", "\n", "edge_loss", "=", "tf", ".", "reduce_sum", "(", "edge_weight", "*", "grad_error", ")", "/", "tf", ".", "reduce_sum", "(", "edge_weight", ")", "/", "6.", "# 6 channel", "\n", "\n", "loss", "=", "loss", "+", "grad_loss", "+", "edge_loss", "\n", "\n", "", "return", "loss", "", "", ""]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network.VGG.__init__": [[22, 28], ["scipy.io.loadmat", "numpy.mean().astype", "numpy.mean"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "data_path", ")", ":", "\n", "        ", "self", ".", "data_path", "=", "data_path", "\n", "self", ".", "data", "=", "scipy", ".", "io", ".", "loadmat", "(", "data_path", ")", "\n", "mean", "=", "self", ".", "data", "[", "'normalization'", "]", "[", "0", "]", "[", "0", "]", "[", "0", "]", "\n", "self", ".", "mean_pixel", "=", "np", ".", "mean", "(", "mean", ",", "axis", "=", "(", "0", ",", "1", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "self", ".", "weights", "=", "self", ".", "data", "[", "'layers'", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network.VGG.preprocess": [[31, 33], ["None"], "methods", ["None"], ["", "def", "preprocess", "(", "self", ",", "image", ")", ":", "\n", "        ", "return", "image", "-", "self", ".", "mean_pixel", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network.VGG.unprocess": [[35, 37], ["None"], "methods", ["None"], ["", "def", "unprocess", "(", "self", ",", "image", ")", ":", "\n", "        ", "return", "image", "+", "self", ".", "mean_pixel", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network.VGG.net": [[38, 57], ["enumerate", "vgg_network._is_convolutional_layer", "len", "len", "numpy.transpose", "bias.reshape.reshape.reshape", "vgg_network._conv_layer_from", "vgg_network._is_relu_layer", "tensorflow.nn.relu", "vgg_network._is_pooling_layer", "vgg_network._pooling_layer_from"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network._is_convolutional_layer", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network._conv_layer_from", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network._is_relu_layer", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network._is_pooling_layer", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network._pooling_layer_from"], ["", "def", "net", "(", "self", ",", "input_image", ")", ":", "\n", "        ", "net", "=", "{", "}", "\n", "current_layer", "=", "input_image", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "self", ".", "LAYERS", ")", ":", "\n", "            ", "if", "_is_convolutional_layer", "(", "name", ")", ":", "\n", "                ", "kernels", ",", "bias", "=", "self", ".", "weights", "[", "i", "]", "[", "0", "]", "[", "0", "]", "[", "0", "]", "[", "0", "]", "\n", "# matconvnet: weights are [width, height, in_channels, out_channels]", "\n", "# tensorflow: weights are [height, width, in_channels, out_channels]", "\n", "kernels", "=", "np", ".", "transpose", "(", "kernels", ",", "(", "1", ",", "0", ",", "2", ",", "3", ")", ")", "\n", "bias", "=", "bias", ".", "reshape", "(", "-", "1", ")", "\n", "current_layer", "=", "_conv_layer_from", "(", "current_layer", ",", "kernels", ",", "bias", ")", "\n", "", "elif", "_is_relu_layer", "(", "name", ")", ":", "\n", "                ", "current_layer", "=", "tf", ".", "nn", ".", "relu", "(", "current_layer", ")", "\n", "", "elif", "_is_pooling_layer", "(", "name", ")", ":", "\n", "                ", "current_layer", "=", "_pooling_layer_from", "(", "current_layer", ")", "\n", "", "net", "[", "name", "]", "=", "current_layer", "\n", "\n", "", "assert", "len", "(", "net", ")", "==", "len", "(", "self", ".", "LAYERS", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network._is_convolutional_layer": [[59, 61], ["None"], "function", ["None"], ["", "", "def", "_is_convolutional_layer", "(", "name", ")", ":", "\n", "    ", "return", "name", "[", ":", "4", "]", "==", "'conv'", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network._is_relu_layer": [[62, 64], ["None"], "function", ["None"], ["", "def", "_is_relu_layer", "(", "name", ")", ":", "\n", "    ", "return", "name", "[", ":", "4", "]", "==", "'relu'", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network._is_pooling_layer": [[65, 67], ["None"], "function", ["None"], ["", "def", "_is_pooling_layer", "(", "name", ")", ":", "\n", "    ", "return", "name", "[", ":", "4", "]", "==", "'pool'", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network._conv_layer_from": [[68, 72], ["tensorflow.nn.conv2d", "tensorflow.nn.bias_add", "tensorflow.constant"], "function", ["None"], ["", "def", "_conv_layer_from", "(", "input", ",", "weights", ",", "bias", ")", ":", "\n", "    ", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "input", ",", "tf", ".", "constant", "(", "weights", ")", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "'SAME'", ")", "\n", "return", "tf", ".", "nn", ".", "bias_add", "(", "conv", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.vgg_network._pooling_layer_from": [[73, 76], ["tensorflow.nn.max_pool"], "function", ["None"], ["", "def", "_pooling_layer_from", "(", "input", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "max_pool", "(", "input", ",", "ksize", "=", "(", "1", ",", "2", ",", "2", ",", "1", ")", ",", "strides", "=", "(", "1", ",", "2", ",", "2", ",", "1", ")", ",", "\n", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.utils.FetchManager.FetchManager.__init__": [[2, 5], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "fetches", ")", ":", "\n", "        ", "self", ".", "fetches", "=", "fetches", "\n", "self", ".", "sess", "=", "sess", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.utils.FetchManager.FetchManager.fetch": [[6, 10], ["FetchManager.FetchManager.sess.run", "zip"], "methods", ["None"], ["", "def", "fetch", "(", "self", ",", "feed_dictionary", ",", "additional_fetches", "=", "[", "]", ")", ":", "\n", "        ", "fetches", "=", "self", ".", "fetches", "+", "additional_fetches", "\n", "evaluation", "=", "self", ".", "sess", ".", "run", "(", "fetches", ",", "feed_dictionary", ")", "\n", "return", "{", "k", ":", "v", "for", "k", ",", "v", "in", "zip", "(", "fetches", ",", "evaluation", ")", "}", "", "", "", ""]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.utils.helper.read_image": [[10, 18], ["scipy.misc.imread", "numpy.float32", "numpy.expand_dims", "scipy.misc.imresize", "numpy.fliplr"], "function", ["None"], ["def", "read_image", "(", "file_name", ",", "resize", "=", "True", ",", "fliplr", "=", "False", ")", ":", "\n", "    ", "image", "=", "scipy", ".", "misc", ".", "imread", "(", "file_name", ")", "\n", "if", "resize", ":", "\n", "        ", "image", "=", "scipy", ".", "misc", ".", "imresize", "(", "image", ",", "size", "=", "config", ".", "TRAIN", ".", "resize", ",", "interp", "=", "'bilinear'", ",", "mode", "=", "None", ")", "\n", "", "if", "fliplr", ":", "\n", "        ", "image", "=", "np", ".", "fliplr", "(", "image", ")", "\n", "", "image", "=", "np", ".", "float32", "(", "image", ")", "\n", "return", "np", ".", "expand_dims", "(", "image", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.utils.helper.save_image": [[20, 24], ["numpy.minimum", "scipy.misc.toimage().save", "numpy.maximum", "scipy.misc.toimage", "np.minimum.squeeze"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.save"], ["", "def", "save_image", "(", "output", ",", "file_name", ")", ":", "\n", "    ", "output", "=", "np", ".", "minimum", "(", "np", ".", "maximum", "(", "output", ",", "0.0", ")", ",", "255.0", ")", "\n", "scipy", ".", "misc", ".", "toimage", "(", "output", ".", "squeeze", "(", "axis", "=", "0", ")", ",", "cmin", "=", "0", ",", "cmax", "=", "255", ")", ".", "save", "(", "file_name", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.utils.helper.write_loss_in_txt": [[26, 30], ["open", "open.write", "open.close", "numpy.mean", "numpy.where"], "function", ["None"], ["", "def", "write_loss_in_txt", "(", "loss_list", ",", "epoch", ")", ":", "\n", "    ", "target", "=", "open", "(", "config", ".", "TRAIN", ".", "out_dir", "+", "\"/%04d/score.txt\"", "%", "epoch", ",", "'w'", ")", "\n", "target", ".", "write", "(", "\"%f\"", "%", "np", ".", "mean", "(", "loss_list", "[", "np", ".", "where", "(", "loss_list", ")", "]", ")", ")", "\n", "target", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.utils.helper.random_crop_together": [[32, 37], ["tensorflow.concat", "tensorflow.random_crop", "tensorflow.split"], "function", ["None"], ["", "def", "random_crop_together", "(", "im1", ",", "im2", ",", "size", ")", ":", "\n", "    ", "images", "=", "tf", ".", "concat", "(", "[", "im1", ",", "im2", "]", ",", "axis", "=", "0", ")", "\n", "images_croped", "=", "tf", ".", "random_crop", "(", "images", ",", "size", "=", "size", ")", "\n", "im1", ",", "im2", "=", "tf", ".", "split", "(", "images_croped", ",", "2", ",", "axis", "=", "0", ")", "\n", "return", "im1", ",", "im2", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.evaluation.metrics.compare_mae": [[16, 20], ["img_true.astype.astype", "img_test.astype.astype", "numpy.sum", "numpy.sum", "numpy.abs"], "function", ["None"], ["\n", "", "def", "mm_ssmi", "(", "x", ",", "pred_x", ",", "max_val", "=", "255", ")", ":", "\n", "    ", "\"\"\"\n    MM-SSMI\n    \"\"\"", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.evaluation.metrics.evaluate": [[21, 82], ["sorted", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "frechet_inception_distance.calculate_fid_given_paths", "list", "list", "ntpath.basename", "names.append", "skimage.color.rgb2gray", "skimage.color.rgb2gray", "np.mean.append", "np.mean.append", "np.mean.append", "np.mean.append", "np.mean.append", "glob.glob", "glob.glob", "str", "skimage.measure.compare_psnr", "skimage.measure.compare_ssim", "metrics.compare_mae", "sewar.full_ref.uqi", "sewar.full_ref.vifp", "numpy.mod", "print", "scipy.misc.imread", "scipy.misc.imread", "str", "round", "round", "round", "round", "round", "str", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "ntpath.basename", "str"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.frechet_inception_distance.calculate_fid_given_paths", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.evaluation.metrics.compare_mae"], ["val", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "image", ".", "ssim_multiscale", "(", "x", ",", "pred_x", ",", "max_val", "=", "max_val", ")", ")", "\n", "return", "val", "\n", "\n", "", "def", "avg_l1", "(", "x", ",", "pred_x", ")", ":", "\n", "    ", "val", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "x", "-", "pred_x", ")", ")", "\n", "return", "val", "\n", "\n", "", "def", "tv_loss", "(", "pred_x", ")", ":", "\n", "    ", "N", ",", "H", ",", "W", ",", "C", "=", "pred_x", ".", "shape", ".", "as_list", "(", ")", "\n", "size", "=", "H", "*", "W", "*", "C", "\n", "val", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "image", ".", "total_variation", "(", "pred_x", ")", ")", "/", "size", "\n", "return", "val", "\n", "\n", "", "import", "numpy", "as", "np", "\n", "from", "glob", "import", "glob", "\n", "from", "ntpath", "import", "basename", "\n", "from", "scipy", ".", "misc", "import", "imread", "\n", "from", "skimage", ".", "color", "import", "rgb2gray", "\n", "from", "sewar", ".", "full_ref", "import", "uqi", "\n", "from", "sewar", ".", "full_ref", "import", "vifp", "\n", "\n", "def", "uqi_vif", "(", "path_true", ",", "path_pred", ")", ":", "\n", "\n", "    ", "UQI", "=", "[", "]", "\n", "VIF", "=", "[", "]", "\n", "names", "=", "[", "]", "\n", "index", "=", "1", "\n", "\n", "files", "=", "list", "(", "glob", "(", "path_true", "+", "'/*.jpg'", ")", ")", "+", "list", "(", "glob", "(", "path_true", "+", "'/*.png'", ")", ")", "\n", "for", "fn", "in", "sorted", "(", "files", ")", ":", "\n", "        ", "name", "=", "basename", "(", "str", "(", "fn", ")", ")", "\n", "names", ".", "append", "(", "name", ")", "\n", "\n", "img_gt", "=", "(", "imread", "(", "str", "(", "fn", ")", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_pred", "=", "(", "imread", "(", "path_pred", "+", "'/'", "+", "basename", "(", "str", "(", "fn", ")", ")", ")", "/", "255.0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "img_gt", "=", "rgb2gray", "(", "img_gt", ")", "\n", "img_pred", "=", "rgb2gray", "(", "img_pred", ")", "\n", "\n", "UQI", ".", "append", "(", "uqi", "(", "img_gt", ",", "img_pred", ")", ")", "\n", "VIF", ".", "append", "(", "vifp", "(", "img_gt", ",", "img_pred", ")", ")", "\n", "if", "np", ".", "mod", "(", "index", ",", "100", ")", "==", "0", ":", "\n", "            ", "print", "(", "\n", "str", "(", "index", ")", "+", "' images processed'", ",", "\n", "\"UQI: %.4f\"", "%", "round", "(", "np", ".", "mean", "(", "UQI", ")", ",", "4", ")", ",", "\n", "\"VIF: %.4f\"", "%", "round", "(", "np", ".", "mean", "(", "VIF", ")", ",", "4", ")", ",", "\n", ")", "\n", "", "index", "+=", "1", "\n", "\n", "", "UQI", "=", "np", ".", "mean", "(", "UQI", ")", "\n", "VIF", "=", "np", ".", "mean", "(", "VIF", ")", "\n", "\n", "return", "UQI", ",", "VIF", "", "", ""]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.LoaderMeta.__new__": [[11, 17], ["type.__new__", "super().__new__.add_constructor"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.LoaderMeta.__new__"], ["\n", "def", "__new__", "(", "mcs", ",", "__name__", ",", "__bases__", ",", "__dict__", ")", ":", "\n", "        ", "\"\"\"Add include constructer to class.\"\"\"", "\n", "# register the include constructor on the class", "\n", "cls", "=", "super", "(", ")", ".", "__new__", "(", "mcs", ",", "__name__", ",", "__bases__", ",", "__dict__", ")", "\n", "cls", ".", "add_constructor", "(", "'!include'", ",", "cls", ".", "construct_include", ")", "\n", "return", "cls", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.Loader.__init__": [[22, 28], ["yaml.Loader.__init__", "os.path.split"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.__init__"], ["\n", "def", "__init__", "(", "self", ",", "stream", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "self", ".", "_root", "=", "os", ".", "path", ".", "split", "(", "stream", ".", "name", ")", "[", "0", "]", "\n", "", "except", "AttributeError", ":", "\n", "            ", "self", ".", "_root", "=", "os", ".", "path", ".", "curdir", "\n", "", "super", "(", ")", ".", "__init__", "(", "stream", ")", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.Loader.construct_include": [[29, 39], ["os.path.abspath", "[].lstrip", "os.path.join", "open", "config.Loader.construct_scalar", "yaml.load", "os.path.splitext", "f.readlines"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.load"], ["\n", "", "def", "construct_include", "(", "self", ",", "node", ")", ":", "\n", "        ", "\"\"\"Include file referenced at node.\"\"\"", "\n", "filename", "=", "os", ".", "path", ".", "abspath", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "_root", ",", "self", ".", "construct_scalar", "(", "node", ")", ")", ")", "\n", "extension", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "[", "1", "]", ".", "lstrip", "(", "'.'", ")", "\n", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "if", "extension", "in", "(", "'yaml'", ",", "'yml'", ")", ":", "\n", "                ", "return", "yaml", ".", "load", "(", "f", ",", "Loader", ")", "\n", "", "else", ":", "\n", "                ", "return", "''", ".", "join", "(", "f", ".", "readlines", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.DictAsMember.__getattr__": [[44, 49], ["isinstance", "config.DictAsMember"], "methods", ["None"], ["\n", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "value", "=", "self", "[", "name", "]", "\n", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "            ", "value", "=", "DictAsMember", "(", "value", ")", "\n", "", "return", "value", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.Config.__init__": [[69, 80], ["os.path.exists", "logger.info", "config.Config.show", "logger.info", "open", "yaml.load", "logger.error"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.Config.show", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.load"], ["\n", "def", "__init__", "(", "self", ",", "filename", "=", "None", ")", ":", "\n", "        ", "assert", "os", ".", "path", ".", "exists", "(", "filename", ")", ",", "\"ERROR: Config File doesn't exist.\"", "\n", "try", ":", "\n", "            ", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "_cfg_dict", "=", "yaml", ".", "load", "(", "f", ",", "Loader", ")", "\n", "# parent of IOError, OSError *and* WindowsError where available", "\n", "", "", "except", "EnvironmentError", ":", "\n", "            ", "logger", ".", "error", "(", "'Please check the file with name of \"%s\"'", ",", "filename", ")", "\n", "", "logger", ".", "info", "(", "' APP CONFIG '", ".", "center", "(", "80", ",", "'-'", ")", ")", "\n", "self", ".", "show", "(", ")", "\n", "logger", ".", "info", "(", "''", ".", "center", "(", "80", ",", "'-'", ")", ")", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.Config.__getattr__": [[81, 86], ["isinstance", "config.DictAsMember"], "methods", ["None"], ["\n", "", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "value", "=", "self", ".", "_cfg_dict", "[", "name", "]", "\n", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "            ", "value", "=", "DictAsMember", "(", "value", ")", "\n", "", "return", "value", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.Config.show": [[87, 106], ["isinstance", "str_list.append", "str_list.append", "logger.info", "config.Config.show", "str_list.append", "str_list.append", "str_list.append", "logger.info", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.config.Config.show"], ["\n", "", "def", "show", "(", "self", ",", "cfg_dict", "=", "None", ",", "indent", "=", "0", ")", ":", "\n", "        ", "if", "cfg_dict", "is", "None", ":", "\n", "            ", "cfg_dict", "=", "self", ".", "_cfg_dict", "\n", "", "for", "key", "in", "cfg_dict", ":", "\n", "            ", "value", "=", "cfg_dict", "[", "key", "]", "\n", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "                ", "str_list", "=", "[", "'  '", "]", "*", "indent", "\n", "str_list", ".", "append", "(", "str", "(", "key", ")", ")", "\n", "str_list", ".", "append", "(", "': '", ")", "\n", "logger", ".", "info", "(", "''", ".", "join", "(", "str_list", ")", ")", "\n", "indent", "=", "indent", "+", "1", "\n", "indent", "=", "self", ".", "show", "(", "value", ",", "indent", ")", "\n", "", "else", ":", "\n", "                ", "str_list", "=", "[", "'  '", "]", "*", "indent", "\n", "str_list", ".", "append", "(", "str", "(", "key", ")", ")", "\n", "str_list", ".", "append", "(", "': '", ")", "\n", "str_list", ".", "append", "(", "str", "(", "value", ")", ")", "\n", "logger", ".", "info", "(", "''", ".", "join", "(", "str_list", ")", ")", "\n", "", "", "return", "indent", "-", "1", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv": [[7, 61], ["int", "tensorflow.pad", "tensorflow.layers.conv2d", "tensorflow.contrib.layers.instance_norm", "activation", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.get_variable", "tensorflow.nn.bias_add", "ops.spectral_norm", "tensorflow.constant_initializer", "tf.nn.bias_add.get_shape"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.spectral_norm"], ["\n", "@", "add_arg_scope", "\n", "def", "gen_conv", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", "=", "1", ",", "rate", "=", "1", ",", "name", "=", "'conv'", ",", "IN", "=", "True", ",", "reuse", "=", "False", ",", "\n", "padding", "=", "'SAME'", ",", "activation", "=", "tf", ".", "nn", ".", "elu", ",", "use_bias", "=", "True", ",", "training", "=", "True", ",", "sn", "=", "False", ")", ":", "\n", "    ", "\"\"\"Define conv for generator.\n\n    Args:\n        x: Input.\n        cnum: Channel number.\n        ksize: Kernel size.\n        Stride: Convolution stride.\n        Rate: Rate for or dilated conv.\n        name: Name of layers.\n        padding: Default to SYMMETRIC.\n        activation: Activation function after convolution.\n        training: If current graph is for training or inference, used for bn.\n\n    Returns:\n        tf.Tensor: output\n\n    \"\"\"", "\n", "assert", "padding", "in", "[", "'SYMMETRIC'", ",", "'SAME'", ",", "'REFLECT'", "]", "\n", "if", "padding", "==", "'SYMMETRIC'", "or", "padding", "==", "'REFLECT'", ":", "\n", "        ", "\"\"\" \n        Padding layer.\n        Dilated kernel size: k_r = ksize + (rate - 1)*(ksize - 1)\n        Padding size: o = i + 2p - k_r and o = i, so p = rate * (ksize - 1) / 2 (when i and o has the same image shape)\n        \"\"\"", "\n", "p", "=", "int", "(", "rate", "*", "(", "ksize", "-", "1", ")", "/", "2", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "p", ",", "p", "]", ",", "[", "p", ",", "p", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "padding", ")", "\n", "padding", "=", "'VALID'", "\n", "\n", "# if spectrum normalization", "\n", "", "if", "sn", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "w", "=", "tf", ".", "get_variable", "(", "\"kernel\"", ",", "shape", "=", "[", "ksize", ",", "ksize", ",", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "cnum", "]", ",", "initializer", "=", "weight_init", ",", "\n", "regularizer", "=", "weight_regularizer", ")", "\n", "\n", "x", "=", "tf", ".", "nn", ".", "conv2d", "(", "input", "=", "x", ",", "filter", "=", "spectral_norm", "(", "w", ")", ",", "\n", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "padding", "=", "padding", ",", "dilations", "=", "[", "1", ",", "rate", ",", "rate", ",", "1", "]", ")", "\n", "if", "use_bias", ":", "\n", "                ", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "[", "cnum", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "x", "=", "tf", ".", "nn", ".", "bias_add", "(", "x", ",", "bias", ")", "\n", "", "", "", "else", ":", "\n", "        ", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "inputs", "=", "x", ",", "filters", "=", "cnum", ",", "activation", "=", "None", ",", "\n", "kernel_size", "=", "ksize", ",", "strides", "=", "stride", ",", "\n", "dilation_rate", "=", "rate", ",", "padding", "=", "padding", ",", "\n", "kernel_initializer", "=", "None", ",", "\n", "kernel_regularizer", "=", "weight_regularizer", ",", "\n", "use_bias", "=", "use_bias", ")", "\n", "", "if", "IN", ":", "\n", "        ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm? before non-linear activation!!!", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "        ", "x", "=", "activation", "(", "x", ")", "\n", "", "return", "x", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_deconv": [[62, 109], ["tensorflow.variable_scope", "ops.resize", "ops.gen_conv", "ops.resize", "ops.gen_conv", "ops.resize", "ops.gen_conv", "tensorflow.layers.conv2d_transpose", "tensorflow.contrib.layers.instance_norm", "activation"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv"], ["\n", "", "@", "add_arg_scope", "\n", "def", "gen_deconv", "(", "x", ",", "cnum", ",", "ksize", "=", "4", ",", "stride", "=", "2", ",", "rate", "=", "1", ",", "method", "=", "'deconv'", ",", "IN", "=", "True", ",", "\n", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'upsample'", ",", "padding", "=", "'SAME'", ",", "sn", "=", "False", ",", "training", "=", "True", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "\"\"\"Define deconv for generator.\n    The deconv is defined to be a x2 resize_nearest_neighbor operation with\n    additional gen_conv operation.\n\n    Args:\n        x: Input.\n        cnum: Channel number.\n        name: Name of layers.\n        training: If current graph is for training or inference, used for bn.\n\n    Returns:\n        tf.Tensor: output\n\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "if", "method", "==", "'nearest'", ":", "\n", "            ", "x", "=", "resize", "(", "x", ",", "func", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", ")", "# tf.image.resize_bilinear ?", "\n", "x", "=", "gen_conv", "(", "\n", "x", ",", "cnum", ",", "3", ",", "1", ",", "name", "=", "name", "+", "'_conv'", ",", "padding", "=", "padding", ",", "\n", "training", "=", "training", ",", "IN", "=", "IN", ")", "\n", "", "elif", "method", "==", "'bilinear'", ":", "\n", "            ", "x", "=", "resize", "(", "x", ",", "func", "=", "tf", ".", "image", ".", "resize_bilinear", ")", "\n", "x", "=", "gen_conv", "(", "\n", "x", ",", "cnum", ",", "3", ",", "1", ",", "name", "=", "name", "+", "'_conv'", ",", "padding", "=", "padding", ",", "\n", "training", "=", "training", ",", "IN", "=", "IN", ")", "\n", "", "elif", "method", "==", "'bicubic'", ":", "\n", "            ", "x", "=", "resize", "(", "x", ",", "func", "=", "tf", ".", "image", ".", "resize_bicubic", ")", "\n", "x", "=", "gen_conv", "(", "\n", "x", ",", "cnum", ",", "3", ",", "1", ",", "name", "=", "name", "+", "'_conv'", ",", "padding", "=", "padding", ",", "\n", "training", "=", "training", ",", "IN", "=", "IN", ")", "# default instance normalization, see function gen_conv()", "\n", "", "else", ":", "\n", "# assert padding in ['SYMMETRIC', 'SAME', 'REFLECT']", "\n", "# if padding == 'SYMMETRIC' or padding == 'REFLECT':", "\n", "#     p = int(rate * (ksize - 1) / 2)", "\n", "#     p = 0", "\n", "#     x = tf.pad(x, [[0, 0], [p, p], [p, p], [0, 0]], mode=padding)", "\n", "            ", "padding", "=", "'SAME'", "\n", "x", "=", "tf", ".", "layers", ".", "conv2d_transpose", "(", "x", ",", "cnum", ",", "kernel_size", "=", "ksize", ",", "strides", "=", "stride", ",", "\n", "activation", "=", "None", ",", "padding", "=", "padding", ")", "\n", "if", "IN", ":", "\n", "                ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm?", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "x", "=", "activation", "(", "x", ")", "\n", "", "", "", "return", "x", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize": [[110, 126], ["tensorflow.cast", "func.get_shape().as_list", "tensorflow.variable_scope", "tensorflow.shape", "tensorflow.cast", "tensorflow.cast", "int", "int", "func", "func", "func.get_shape"], "function", ["None"], ["\n", "", "def", "resize", "(", "x", ",", "scale", "=", "2", ",", "to_shape", "=", "None", ",", "align_corners", "=", "True", ",", "dynamic", "=", "False", ",", "\n", "func", "=", "tf", ".", "image", ".", "resize_bilinear", ",", "name", "=", "'resize'", ")", ":", "\n", "    ", "if", "dynamic", ":", "\n", "        ", "xs", "=", "tf", ".", "cast", "(", "tf", ".", "shape", "(", "x", ")", ",", "tf", ".", "float32", ")", "\n", "new_xs", "=", "[", "tf", ".", "cast", "(", "xs", "[", "1", "]", "*", "scale", ",", "tf", ".", "int32", ")", ",", "\n", "tf", ".", "cast", "(", "xs", "[", "2", "]", "*", "scale", ",", "tf", ".", "int32", ")", "]", "\n", "", "else", ":", "\n", "        ", "xs", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "new_xs", "=", "[", "int", "(", "xs", "[", "1", "]", "*", "scale", ")", ",", "int", "(", "xs", "[", "2", "]", "*", "scale", ")", "]", "\n", "", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "if", "to_shape", "is", "None", ":", "\n", "            ", "x", "=", "func", "(", "x", ",", "new_xs", ",", "align_corners", "=", "align_corners", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "func", "(", "x", ",", "[", "to_shape", "[", "0", "]", ",", "to_shape", "[", "1", "]", "]", ",", "\n", "align_corners", "=", "align_corners", ")", "\n", "", "", "return", "x", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resnet_blocks": [[128, 136], ["range", "ops.resnet_block21", "str"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resnet_block21"], ["# yj", "\n", "", "@", "add_arg_scope", "\n", "def", "resnet_blocks", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "rate", ",", "block_num", ",", "name", ",", "IN", "=", "True", ",", "\n", "padding", "=", "'REFLECT'", ",", "activation", "=", "tf", ".", "nn", ".", "elu", ",", "training", "=", "True", ")", ":", "\n", "    ", "for", "block", "in", "range", "(", "block_num", ")", ":", "\n", "# x = resnet_block12(x, cnum, ksize, stride, rate, name+\"_\"+str(block), padding, activation, training=training)", "\n", "        ", "x", "=", "resnet_block21", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "rate", ",", "name", "+", "\"_\"", "+", "str", "(", "block", ")", ",", "padding", "=", "padding", ",", "\n", "activation", "=", "activation", ",", "training", "=", "training", ")", "\n", "", "return", "x", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resnet_block21": [[138, 169], ["tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "int", "tensorflow.pad", "tensorflow.contrib.layers.instance_norm", "activation", "int", "tensorflow.pad", "tensorflow.contrib.layers.instance_norm"], "function", ["None"], ["# yj", "\n", "", "def", "resnet_block21", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "rate", ",", "name", ",", "IN", "=", "True", ",", "\n", "padding", "=", "'SAME'", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "training", "=", "True", ")", ":", "\n", "    ", "xin", "=", "x", "\n", "assert", "padding", "in", "[", "'SYMMETRIC'", ",", "'SAME'", ",", "'REFLECT'", "]", "\n", "if", "padding", "==", "'SYMMETRIC'", "or", "padding", "==", "'REFLECT'", ":", "\n", "        ", "p", "=", "int", "(", "rate", "*", "(", "ksize", "-", "1", ")", "/", "2", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "p", ",", "p", "]", ",", "[", "p", ",", "p", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "padding", ")", "\n", "padding1", "=", "'VALID'", "\n", "", "else", ":", "\n", "        ", "padding1", "=", "padding", "\n", "", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "dilation_rate", "=", "rate", ",", "\n", "activation", "=", "None", ",", "padding", "=", "padding1", ",", "name", "=", "name", "+", "\"0\"", ")", "\n", "if", "IN", ":", "\n", "        ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm?", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "        ", "x", "=", "activation", "(", "x", ")", "\n", "\n", "", "rate", "=", "1", "\n", "if", "padding", "==", "'SYMMETRIC'", "or", "padding", "==", "'REFLECT'", ":", "\n", "        ", "p", "=", "int", "(", "rate", "*", "(", "ksize", "-", "1", ")", "/", "2", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "p", ",", "p", "]", ",", "[", "p", ",", "p", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "padding", ")", "\n", "padding2", "=", "'VALID'", "\n", "", "else", ":", "\n", "        ", "padding2", "=", "padding", "\n", "", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "dilation_rate", "=", "rate", ",", "\n", "activation", "=", "None", ",", "padding", "=", "padding2", ",", "name", "=", "name", "+", "\"1\"", ")", "\n", "if", "IN", ":", "\n", "        ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm?", "\n", "", "return", "xin", "+", "x", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resnet_block12": [[171, 204], ["tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "int", "tensorflow.pad", "tensorflow.contrib.layers.instance_norm", "activation", "int", "tensorflow.pad", "tensorflow.contrib.layers.instance_norm"], "function", ["None"], ["# yj", "\n", "", "def", "resnet_block12", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "rate", ",", "name", ",", "IN", "=", "True", ",", "\n", "padding", "=", "'REFLECT'", ",", "activation", "=", "tf", ".", "nn", ".", "elu", ",", "training", "=", "True", ")", ":", "\n", "    ", "xin", "=", "x", "\n", "rate", "=", "1", "\n", "assert", "padding", "in", "[", "'SYMMETRIC'", ",", "'SAME'", ",", "'REFLECT'", "]", "\n", "if", "padding", "==", "'SYMMETRIC'", "or", "padding", "==", "'REFLECT'", ":", "\n", "        ", "p", "=", "int", "(", "rate", "*", "(", "ksize", "-", "1", ")", "/", "2", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "p", ",", "p", "]", ",", "[", "p", ",", "p", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "padding", ")", "\n", "padding1", "=", "'VALID'", "\n", "", "else", ":", "\n", "        ", "padding1", "=", "padding", "\n", "", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "dilation_rate", "=", "rate", ",", "\n", "activation", "=", "None", ",", "padding", "=", "padding1", ",", "name", "=", "name", "+", "\"0\"", ")", "\n", "if", "IN", ":", "\n", "        ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm?", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "        ", "x", "=", "activation", "(", "x", ")", "\n", "\n", "", "rate", "=", "2", "\n", "if", "padding", "==", "'SYMMETRIC'", "or", "padding", "==", "'REFLECT'", ":", "\n", "        ", "p", "=", "int", "(", "rate", "*", "(", "ksize", "-", "1", ")", "/", "2", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "p", ",", "p", "]", ",", "[", "p", ",", "p", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "padding", ")", "\n", "padding2", "=", "'VALID'", "\n", "", "else", ":", "\n", "        ", "padding2", "=", "padding", "\n", "", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "dilation_rate", "=", "rate", ",", "\n", "activation", "=", "None", ",", "padding", "=", "padding2", ",", "name", "=", "name", "+", "\"1\"", ")", "\n", "if", "IN", ":", "\n", "        ", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "instance_norm", "(", "x", ")", "# if instance norm?", "\n", "\n", "", "return", "xin", "+", "x", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.torgb": [[207, 213], ["tensorflow.layers.conv2d"], "function", ["None"], ["", "def", "torgb", "(", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "rate", ",", "name", ",", "activation", "=", "tf", ".", "nn", ".", "tanh", ",", "padding", "=", "\"SAME\"", ")", ":", "\n", "    ", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "cnum", ",", "ksize", ",", "stride", ",", "dilation_rate", "=", "rate", ",", "\n", "activation", "=", "activation", ",", "padding", "=", "padding", ",", "name", "=", "name", ")", "\n", "# x = tf.clip_by_value(x, -1., 1.)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.dis_conv": [[215, 254], ["tensorflow.layers.conv2d", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.get_variable", "tensorflow.nn.bias_add", "activation", "ops.spectral_norm", "tensorflow.constant_initializer", "activation.get_shape"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.spectral_norm"], ["", "def", "dis_conv", "(", "x", ",", "cnum", ",", "ksize", "=", "5", ",", "stride", "=", "2", ",", "rate", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ",", "name", "=", "'conv'", ",", "\n", "padding", "=", "'SAME'", ",", "use_bias", "=", "True", ",", "sn", "=", "True", ",", "training", "=", "True", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "\"\"\"Define conv for discriminator.\n    Activation is set to leaky_relu.\n\n    Args:\n        x: Input.\n        cnum: Channel number.\n        ksize: Kernel size.\n        stride: Convolution stride.\n        name: Name of layers.\n        training: If current graph is for training or inference, used for bn.\n\n    Returns:\n        tf.Tensor: output\n\n    \"\"\"", "\n", "# if spectrum normalization", "\n", "if", "sn", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "w", "=", "tf", ".", "get_variable", "(", "\"kernel\"", ",", "shape", "=", "[", "ksize", ",", "ksize", ",", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "cnum", "]", ",", "initializer", "=", "weight_init", ",", "\n", "regularizer", "=", "weight_regularizer", ")", "\n", "\n", "x", "=", "tf", ".", "nn", ".", "conv2d", "(", "input", "=", "x", ",", "filter", "=", "spectral_norm", "(", "w", ")", ",", "\n", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "padding", "=", "padding", ",", "dilations", "=", "[", "1", ",", "rate", ",", "rate", ",", "1", "]", ")", "\n", "if", "use_bias", ":", "\n", "                ", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "[", "cnum", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "x", "=", "tf", ".", "nn", ".", "bias_add", "(", "x", ",", "bias", ")", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "x", "=", "activation", "(", "x", ")", "\n", "", "", "", "else", ":", "\n", "        ", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "inputs", "=", "x", ",", "filters", "=", "cnum", ",", "activation", "=", "activation", ",", "\n", "kernel_size", "=", "ksize", ",", "strides", "=", "stride", ",", "\n", "dilation_rate", "=", "rate", ",", "padding", "=", "padding", ",", "\n", "kernel_initializer", "=", "None", ",", "\n", "kernel_regularizer", "=", "None", ",", "\n", "use_bias", "=", "use_bias", ",", "\n", "reuse", "=", "reuse", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.flatten": [[255, 260], ["tensorflow.variable_scope", "tensorflow.contrib.layers.flatten"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.flatten"], ["", "def", "flatten", "(", "x", ",", "name", "=", "'flatten'", ")", ":", "\n", "    ", "\"\"\"Flatten wrapper.\n    \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "return", "tf", ".", "contrib", ".", "layers", ".", "flatten", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.out_complete": [[261, 266], ["tensorflow.image.resize_images", "tensorflow.image.resize_images"], "function", ["None"], ["", "", "def", "out_complete", "(", "out", ",", "x_incomplete", ",", "mask", ",", "res", ")", ":", "\n", "    ", "mask", "=", "tf", ".", "image", ".", "resize_images", "(", "mask", ",", "(", "res", ",", "res", ")", ")", "\n", "x_incomplete", "=", "tf", ".", "image", ".", "resize_images", "(", "x_incomplete", ",", "(", "res", ",", "res", ")", ")", "\n", "x_complete", "=", "out", "*", "mask", "+", "x_incomplete", "*", "(", "1.", "-", "mask", ")", "\n", "return", "x_complete", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.conv": [[269, 292], ["tensorflow.variable_scope", "tensorflow.pad", "tensorflow.pad", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.layers.conv2d", "tensorflow.get_variable", "tensorflow.nn.bias_add", "ops.spectral_norm", "tensorflow.constant_initializer", "tf.nn.bias_add.get_shape"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.spectral_norm"], ["", "@", "add_arg_scope", "\n", "def", "conv", "(", "x", ",", "channels", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "0", ",", "pad_type", "=", "'REFLECT'", ",", "use_bias", "=", "True", ",", "sn", "=", "False", ",", "scope", "=", "'conv_0'", ",", "\n", "reuse", "=", "False", ",", "training", "=", "False", ",", "padding", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "scope", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "if", "pad_type", "==", "'zero'", ":", "\n", "            ", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "", "if", "pad_type", "==", "'reflect'", ":", "\n", "            ", "x", "=", "tf", ".", "pad", "(", "x", ",", "[", "[", "0", ",", "0", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "'REFLECT'", ")", "\n", "\n", "", "if", "sn", ":", "\n", "            ", "w", "=", "tf", ".", "get_variable", "(", "\"kernel\"", ",", "shape", "=", "[", "kernel", ",", "kernel", ",", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "channels", "]", ",", "initializer", "=", "weight_init", ",", "\n", "regularizer", "=", "weight_regularizer", ")", "\n", "x", "=", "tf", ".", "nn", ".", "conv2d", "(", "input", "=", "x", ",", "filter", "=", "spectral_norm", "(", "w", ")", ",", "\n", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "padding", "=", "'VALID'", ")", "\n", "if", "use_bias", ":", "\n", "                ", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "[", "channels", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "x", "=", "tf", ".", "nn", ".", "bias_add", "(", "x", ",", "bias", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "inputs", "=", "x", ",", "filters", "=", "channels", ",", "\n", "kernel_size", "=", "kernel", ",", "kernel_initializer", "=", "weight_init", ",", "\n", "kernel_regularizer", "=", "weight_regularizer", ",", "\n", "strides", "=", "stride", ",", "use_bias", "=", "use_bias", ",", "reuse", "=", "reuse", ")", "\n", "", "return", "x", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.spectral_norm": [[293, 319], ["tf.reshape.shape.as_list", "tensorflow.reshape", "tensorflow.get_variable", "range", "tensorflow.matmul", "tensorflow.matmul", "ops.l2_norm", "tensorflow.matmul", "ops.l2_norm", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.control_dependencies", "tensorflow.reshape", "tensorflow.truncated_normal_initializer", "tensorflow.transpose", "tf.get_variable.assign"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.l2_norm", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.l2_norm"], ["\n", "", "", "def", "spectral_norm", "(", "w", ",", "iteration", "=", "1", ")", ":", "\n", "    ", "w_shape", "=", "w", ".", "shape", ".", "as_list", "(", ")", "\n", "w", "=", "tf", ".", "reshape", "(", "w", ",", "[", "-", "1", ",", "w_shape", "[", "-", "1", "]", "]", ")", "\n", "\n", "u", "=", "tf", ".", "get_variable", "(", "\"u\"", ",", "[", "1", ",", "w_shape", "[", "-", "1", "]", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", ")", ",", "trainable", "=", "False", ")", "\n", "\n", "u_hat", "=", "u", "\n", "v_hat", "=", "None", "\n", "for", "i", "in", "range", "(", "iteration", ")", ":", "\n", "        ", "\"\"\"\n        power iteration\n        Usually iteration = 1 will be enough\n        \"\"\"", "\n", "v_", "=", "tf", ".", "matmul", "(", "u_hat", ",", "tf", ".", "transpose", "(", "w", ")", ")", "\n", "v_hat", "=", "l2_norm", "(", "v_", ")", "\n", "\n", "u_", "=", "tf", ".", "matmul", "(", "v_hat", ",", "w", ")", "\n", "u_hat", "=", "l2_norm", "(", "u_", ")", "\n", "\n", "", "sigma", "=", "tf", ".", "matmul", "(", "tf", ".", "matmul", "(", "v_hat", ",", "w", ")", ",", "tf", ".", "transpose", "(", "u_hat", ")", ")", "\n", "w_norm", "=", "w", "/", "sigma", "\n", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "u", ".", "assign", "(", "u_hat", ")", "]", ")", ":", "\n", "        ", "w_norm", "=", "tf", ".", "reshape", "(", "w_norm", ",", "w_shape", ")", "\n", "\n", "", "return", "w_norm", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.l2_norm": [[320, 322], ["tensorflow.reduce_sum"], "function", ["None"], ["\n", "", "def", "l2_norm", "(", "v", ",", "eps", "=", "1e-12", ")", ":", "\n", "    ", "return", "v", "/", "(", "tf", ".", "reduce_sum", "(", "v", "**", "2", ")", "**", "0.5", "+", "eps", ")", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.hw_flatten": [[323, 325], ["tensorflow.reshape"], "function", ["None"], ["\n", "", "def", "hw_flatten", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "reshape", "(", "x", ",", "shape", "=", "[", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "x", ".", "shape", "[", "-", "1", "]", "]", ")", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.max_pooling": [[326, 329], ["tensorflow.layers.max_pooling2d"], "function", ["None"], ["\n", "", "def", "max_pooling", "(", "x", ",", "pool_size", "=", "2", ")", ":", "\n", "    ", "x", "=", "tf", ".", "layers", ".", "max_pooling2d", "(", "x", ",", "pool_size", "=", "pool_size", ",", "strides", "=", "pool_size", ",", "padding", "=", "'SAME'", ")", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.avg_pooling": [[331, 334], ["tensorflow.layers.average_pooling2d"], "function", ["None"], ["\n", "", "def", "avg_pooling", "(", "x", ",", "pool_size", "=", "2", ")", ":", "\n", "    ", "x", "=", "tf", ".", "layers", ".", "average_pooling2d", "(", "x", ",", "pool_size", "=", "pool_size", ",", "strides", "=", "pool_size", ",", "padding", "=", "'SAME'", ")", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.AtnConv": [[339, 429], ["tensorflow.shape", "resize.get_shape().as_list", "resize.get_shape().as_list", "tensorflow.extract_image_patches", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.split", "tensorflow.split", "tensorflow.extract_image_patches", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.split", "ops.resize", "tensorflow.extract_image_patches", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.cast", "zip", "tensorflow.concat", "resize.set_shape", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.concat", "ops.resize", "ops.resize", "tensorflow.equal", "tensorflow.nn.conv2d", "tensorflow.reshape", "tensorflow.nn.softmax", "resize.append", "ops.resize", "resize.get_shape", "resize.get_shape", "tensorflow.reduce_mean", "tensorflow.maximum", "tensorflow.nn.conv2d_transpose", "tensorflow.sqrt", "tensorflow.concat", "tensorflow.reduce_sum", "tensorflow.square"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize"], ["def", "attention", "(", "x", ",", "channels", ",", "neighbors", "=", "1", ",", "use_bias", "=", "True", ",", "sn", "=", "False", ",", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "\n", "name", "=", "'attention_pooling'", ",", "training", "=", "True", ",", "padding", "=", "'REFLECT'", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "if", "neighbors", ">", "1", ":", "\n", "        ", "x", "=", "attention_with_neighbors", "(", "x", ",", "channels", ",", "down_scale", "=", "down_scale", ",", "pool_scale", "=", "pool_scale", ",", "name", "=", "name", ")", "\n", "", "else", ":", "\n", "        ", "x", "=", "attention_with_pooling", "(", "x", ",", "channels", ",", "down_scale", "=", "down_scale", ",", "pool_scale", "=", "pool_scale", ",", "name", "=", "name", ")", "\n", "", "return", "x", "\n", "\n", "", "@", "add_arg_scope", "\n", "def", "attention_with_pooling", "(", "x", ",", "channels", ",", "ksize", "=", "4", ",", "use_bias", "=", "True", ",", "sn", "=", "False", ",", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "\n", "name", "=", "'attention_pooling'", ",", "training", "=", "True", ",", "padding", "=", "'REFLECT'", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "x_origin", "=", "x", "\n", "\n", "# down sampling", "\n", "if", "down_scale", ">", "1", ":", "\n", "            ", "x", "=", "gen_conv", "(", "x", ",", "channels", ",", "ksize", ",", "stride", "=", "down_scale", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'attention_down_sample'", ",", "reuse", "=", "reuse", ")", "\n", "\n", "# attention", "\n", "", "f", "=", "conv", "(", "x", ",", "channels", "//", "16", ",", "kernel", "=", "1", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "sn", "=", "sn", ",", "scope", "=", "'f_conv'", ",", "reuse", "=", "reuse", ")", "# [bs, h, w, c']", "\n", "f", "=", "max_pooling", "(", "f", ",", "pool_scale", ")", "\n", "# f = avg_pooling(f)", "\n", "\n", "g", "=", "conv", "(", "x", ",", "channels", "//", "16", ",", "kernel", "=", "1", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "sn", "=", "sn", ",", "scope", "=", "'g_conv'", ",", "reuse", "=", "reuse", ")", "# [bs, h, w, c']", "\n", "\n", "h", "=", "conv", "(", "x", ",", "channels", "//", "16", ",", "kernel", "=", "1", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "sn", "=", "sn", ",", "scope", "=", "'h_conv'", ",", "reuse", "=", "reuse", ")", "# [bs, h, w, c]", "\n", "h", "=", "max_pooling", "(", "h", ",", "pool_scale", ")", "\n", "# h = avg_pooling(h)   [4,65536,4096]", "\n", "\n", "# N = h * w", "\n", "s", "=", "tf", ".", "matmul", "(", "hw_flatten", "(", "g", ")", ",", "hw_flatten", "(", "f", ")", ",", "transpose_b", "=", "True", ")", "# # [bs, N, N]", "\n", "\n", "beta", "=", "tf", ".", "nn", ".", "softmax", "(", "s", ")", "# attention map", "\n", "\n", "o", "=", "tf", ".", "matmul", "(", "beta", ",", "hw_flatten", "(", "h", ")", ")", "# [bs, N, C]", "\n", "gamma", "=", "tf", ".", "get_variable", "(", "\"gamma\"", ",", "[", "1", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "\n", "o", "=", "tf", ".", "reshape", "(", "o", ",", "shape", "=", "[", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "channels", "//", "16", "]", ")", "# [bs, h, w, C]", "\n", "# o = conv(o, channels, kernel=1, stride=1, use_bias=use_bias, sn=sn, scope='attn_conv_up')    # from bottleneck", "\n", "\n", "# up sampling", "\n", "if", "down_scale", ">", "1", ":", "\n", "            ", "o", "=", "gen_deconv", "(", "o", ",", "channels", ",", "ksize", ",", "method", "=", "'deconv'", ",", "stride", "=", "down_scale", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'attention_down_upsample'", ",", "reuse", "=", "reuse", ")", "\n", "\n", "", "x", "=", "gamma", "*", "o", "+", "x_origin", "\n", "\n", "", "return", "x", "\n", "\n", "# attention consider neighbors", "\n", "", "@", "add_arg_scope", "\n", "def", "attention_with_neighbors", "(", "x", ",", "channels", ",", "ksize", "=", "3", ",", "use_bias", "=", "True", ",", "sn", "=", "False", ",", "stride", "=", "2", ",", "\n", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "name", "=", "'attention_pooling'", ",", "\n", "training", "=", "True", ",", "padding", "=", "'REFLECT'", ",", "reuse", "=", "False", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "        ", "x1", "=", "x", "\n", "\n", "# downsample input feature maps if needed due to limited GPU memory", "\n", "# down sampling", "\n", "if", "down_scale", ">", "1", ":", "\n", "            ", "x1", "=", "gen_conv", "(", "x1", ",", "channels", ",", "ksize", ",", "stride", "=", "down_scale", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'attention_down_sample'", ",", "\n", "reuse", "=", "reuse", ")", "\n", "# get shapes", "\n", "", "int_x1s", "=", "x1", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "# extract patches from high-level feature maps for matching and attending", "\n", "x1_groups", "=", "tf", ".", "split", "(", "x1", ",", "int_x1s", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "w", "=", "tf", ".", "extract_image_patches", "(", "\n", "x1", ",", "[", "1", ",", "ksize", ",", "ksize", ",", "1", "]", ",", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "w", "=", "tf", ".", "reshape", "(", "w", ",", "[", "int_x1s", "[", "0", "]", ",", "-", "1", ",", "ksize", ",", "ksize", ",", "int_x1s", "[", "3", "]", "]", ")", "\n", "w", "=", "tf", ".", "transpose", "(", "w", ",", "[", "0", ",", "2", ",", "3", ",", "4", ",", "1", "]", ")", "# transpose to [b, ksize, ksize, c, hw/4]    # need transpose?? -- 480", "\n", "w_groups", "=", "tf", ".", "split", "(", "w", ",", "int_x1s", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "\n", "# matching and attending hole and non-hole patches", "\n", "y", "=", "[", "]", "\n", "scale", "=", "10.", "\n", "# high level patches: w_groups, low level patches: raw_w_groups, x2_groups: high level feature map", "\n", "for", "xi", ",", "wi", "in", "zip", "(", "x1_groups", ",", "w_groups", ")", ":", "\n", "# matching on high-level feature maps", "\n", "            ", "wi", "=", "wi", "[", "0", "]", "\n", "wi_normed", "=", "wi", "/", "tf", ".", "maximum", "(", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "wi", ")", ",", "axis", "=", "[", "0", ",", "1", ",", "2", "]", ")", ")", ",", "1e-4", ")", "\n", "yi", "=", "tf", ".", "nn", ".", "conv2d", "(", "xi", ",", "wi_normed", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"SAME\"", ")", "\n", "yi", "=", "tf", ".", "reshape", "(", "yi", ",", "[", "1", ",", "int_x1s", "[", "1", "]", ",", "int_x1s", "[", "2", "]", ",", "(", "int_x1s", "[", "1", "]", "//", "stride", ")", "*", "(", "int_x1s", "[", "2", "]", "//", "stride", ")", "]", ")", "\n", "yi", "=", "tf", ".", "nn", ".", "softmax", "(", "yi", "*", "scale", ",", "3", ")", "\n", "# non local mean", "\n", "wi_center", "=", "tf", ".", "transpose", "(", "wi", ",", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", "\n", "yi", "=", "tf", ".", "nn", ".", "conv2d", "(", "yi", ",", "wi_center", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"SAME\"", ")", "/", "4.", "\n", "\n", "# filter: [height, width, output_channels, in_channels]", "\n", "y", ".", "append", "(", "yi", ")", "\n", "", "y", "=", "tf", ".", "concat", "(", "y", ",", "axis", "=", "0", ")", "\n", "y", ".", "set_shape", "(", "int_x1s", ")", "\n", "# up sampling", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention": [[432, 439], ["ops.attention_with_neighbors", "ops.attention_with_pooling"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention_with_neighbors", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention_with_pooling"], ["name", "=", "'attention_down_upsample'", ",", "reuse", "=", "reuse", ")", "\n", "\n", "", "gamma", "=", "tf", ".", "get_variable", "(", "\"gamma\"", ",", "[", "1", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "x", "=", "gamma", "*", "y", "+", "x", "\n", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "x", ",", "channels", ",", "3", ",", "1", ",", "dilation_rate", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "padding", "=", "'SAME'", ")", "\n", "", "return", "x", "\n", "\n", "", "def", "normalize", "(", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention_with_pooling": [[440, 478], ["tensorflow.variable_scope", "ops.conv", "ops.max_pooling", "ops.conv", "ops.conv", "ops.max_pooling", "tensorflow.matmul", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.get_variable", "tensorflow.reshape", "ops.gen_conv", "ops.hw_flatten", "ops.hw_flatten", "ops.hw_flatten", "ops.gen_deconv", "tensorflow.constant_initializer"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.max_pooling", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.max_pooling", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.hw_flatten", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.hw_flatten", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.hw_flatten", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_deconv"], ["    ", "return", "x", "/", "127.5", "-", "1", "\n", "\n", "", "def", "imsave", "(", "images", ",", "size", ",", "path", ")", ":", "\n", "    ", "return", "scipy", ".", "misc", ".", "imsave", "(", "path", ",", "merge", "(", "images", ",", "size", ")", ")", "\n", "\n", "", "def", "inverse_transform", "(", "images", ")", ":", "\n", "    ", "return", "(", "images", "+", "1.", ")", "*", "127.5", "", "", ""]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention_with_neighbors": [[480, 530], ["tensorflow.variable_scope", "gen_conv.get_shape().as_list", "tensorflow.split", "tensorflow.extract_image_patches", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.split", "zip", "tensorflow.concat", "gen_deconv.set_shape", "tensorflow.get_variable", "tensorflow.layers.conv2d", "ops.gen_conv", "tensorflow.nn.conv2d", "tensorflow.reshape", "tensorflow.nn.softmax", "tensorflow.transpose", "gen_deconv.append", "ops.gen_deconv", "gen_conv.get_shape", "tensorflow.maximum", "tensorflow.nn.conv2d", "tensorflow.constant_initializer", "tensorflow.sqrt", "tensorflow.reduce_sum", "tensorflow.square"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_deconv"], []], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.normalize": [[531, 533], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.imsave": [[534, 536], ["scipy.misc.imsave", "merge"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.imsave", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.src.utils_fn.merge"], []], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform": [[537, 539], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.inpaint_model.InpaintModel.__init__": [[9, 12], ["None"], "methods", ["None"], ["class", "InpaintModel", "(", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "model_name", "=", "\"InpaintModel\"", "# name for checkpoint", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.inpaint_model.InpaintModel.build_inpaint_net": [[14, 88], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.concat", "tensorflow.ones_like", "tensorflow.variable_scope", "tensorflow.contrib.framework.python.ops.arg_scope", "ops.gen_conv", "ops.gen_conv", "ops.gen_conv", "ops.resnet_blocks", "ops.attention", "ops.gen_conv", "ops.gen_conv", "ops.gen_conv", "tensorflow.concat", "ops.gen_deconv", "ops.attention", "ops.gen_conv", "ops.gen_conv", "ops.gen_conv", "tensorflow.concat", "ops.gen_deconv", "ops.attention", "ops.gen_conv", "ops.gen_conv", "ops.gen_conv"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resnet_blocks", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_deconv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_deconv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.attention", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.gen_conv"], ["self", ".", "checkpoint_dir", "=", "args", ".", "CHECKPOINT_DIR", "\n", "self", ".", "sample_dir", "=", "args", ".", "SAMPLE_DIR", "\n", "self", ".", "result_dir", "=", "args", ".", "RESULT_DIR", "\n", "self", ".", "log_dir", "=", "args", ".", "LOG_DIR", "\n", "\n", "self", ".", "epoch", "=", "args", ".", "EPOCH", "\n", "self", ".", "batch_size", "=", "args", ".", "BATCH_SIZE", "\n", "self", ".", "print_freq", "=", "args", ".", "PRINT_FREQ", "\n", "self", ".", "save_freq", "=", "args", ".", "SAVE_FREQ", "\n", "self", ".", "img_size", "=", "args", ".", "IMG_SHAPES", "\n", "\n", "# yj", "\n", "", "def", "build_inpaint_net", "(", "self", ",", "x", ",", "edge", ",", "grad", ",", "mask", ",", "args", "=", "None", ",", "reuse", "=", "False", ",", "\n", "training", "=", "True", ",", "padding", "=", "'SAME'", ",", "name", "=", "'inpaint_net'", ")", ":", "\n", "        ", "\"\"\"Inpaint network.\n\n        Args:\n            x: incomplete image[-1, 1] with shape of (batch_size, h, w, c)\n            edge: incomplete edge {0, 1} with shape of (batch_size, h, w)\n            grad map: incomplete grad with shape of (batch_size, h, w, 6)\n            mask: mask region {0, 1}\n        Returns:\n            complete image, grad map, middle result\n        \"\"\"", "\n", "x", "=", "tf", ".", "reshape", "(", "x", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "args", ".", "IMG_SHAPES", "[", "2", "]", "]", ")", "\n", "mask", "=", "tf", ".", "reshape", "(", "mask", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "edge", "=", "tf", ".", "reshape", "(", "edge", ",", "[", "-", "1", ",", "args", ".", "IMG_SHAPES", "[", "0", "]", ",", "args", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "# grad = tf.reshape(grad, [-1, args.IMG_SHAPES[0], args.IMG_SHAPES[1], 6])", "\n", "\n", "xin", "=", "x", "\n", "ones_x", "=", "tf", ".", "ones_like", "(", "x", ")", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "\n", "x", "=", "tf", ".", "concat", "(", "[", "x", ",", "ones_x", "*", "edge", ",", "ones_x", "*", "mask", ",", "grad", "]", ",", "axis", "=", "3", ")", "# add a mask channel,the input channel is 4", "\n", "# encoder-decoder network: channel 64-128-256-128-64", "\n", "cnum", "=", "64", "# initial channel", "\n", "# a decorate: arg_scope([op1, op2,..], xx,..) means:", "\n", "# attributes or parameters xx defined here are the default in op1 and op2,..", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ",", "arg_scope", "(", "[", "gen_conv", ",", "gen_deconv", "]", ",", "\n", "training", "=", "training", ",", "padding", "=", "padding", ")", ":", "\n", "# Encoder", "\n", "# scale 256                                                                     channels   activation: relu", "\n", "            ", "x", "=", "gen_conv", "(", "x", ",", "cnum", ",", "7", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'en_conv1'", ")", "# 9 -> 64, ksize=7x7, stride=1", "\n", "# scale 128", "\n", "x", "=", "gen_conv", "(", "x", ",", "2", "*", "cnum", ",", "4", ",", "stride", "=", "2", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'en_conv2'", ")", "\n", "# scale 64", "\n", "x", "=", "gen_conv", "(", "x", ",", "4", "*", "cnum", ",", "4", ",", "stride", "=", "2", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'en_conv3'", ")", "\n", "# res block", "\n", "x", "=", "resnet_blocks", "(", "x", ",", "4", "*", "cnum", ",", "3", ",", "stride", "=", "1", ",", "rate", "=", "2", ",", "block_num", "=", "8", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'en_64_8'", ")", "\n", "\n", "# Decoder", "\n", "# TODO: output scale 64  Down scale = 2 (origin) pool scale = 2 (origin)", "\n", "# share attention", "\n", "x", "=", "attention", "(", "x", ",", "4", "*", "cnum", ",", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "name", "=", "'attention_pooling_64'", ")", "\n", "\n", "# out of predict grad map", "\n", "x_64", "=", "gen_conv", "(", "x", ",", "4", "*", "cnum", ",", "5", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'out64_grad_out'", ")", "\n", "x_grad_out_64", "=", "gen_conv", "(", "x_64", ",", "6", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'grad64'", ")", "\n", "x_out_64", "=", "gen_conv", "(", "x_64", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "tanh", ",", "name", "=", "'out64'", ")", "\n", "\n", "# scale 64 - 128", "\n", "x", "=", "tf", ".", "concat", "(", "[", "x", ",", "x_64", "]", ",", "axis", "=", "3", ")", "\n", "x", "=", "gen_deconv", "(", "x", ",", "2", "*", "cnum", ",", "4", ",", "method", "=", "'deconv'", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'de128_conv4_upsample'", ")", "\n", "\n", "# TODO: output scale 128", "\n", "# share attention", "\n", "x", "=", "attention", "(", "x", ",", "2", "*", "cnum", ",", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "name", "=", "'attention_pooling_128'", ")", "\n", "\n", "# out of predict grad map", "\n", "x_128", "=", "gen_conv", "(", "x", ",", "2", "*", "cnum", ",", "5", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'out128_grad_out'", ")", "\n", "x_grad_out_128", "=", "gen_conv", "(", "x_128", ",", "6", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'grad128'", ")", "\n", "x_out_128", "=", "gen_conv", "(", "x_128", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "tanh", ",", "name", "=", "'out128'", ")", "\n", "\n", "# scale 128 - 256", "\n", "x", "=", "tf", ".", "concat", "(", "[", "x", ",", "x_128", "]", ",", "axis", "=", "3", ")", "\n", "x", "=", "gen_deconv", "(", "x", ",", "cnum", ",", "4", ",", "method", "=", "'deconv'", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'de256_conv5_upsample'", ")", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.inpaint_model.InpaintModel.evaluate": [[90, 120], ["ops.normalize", "tensorflow.image.sobel_edges", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "inpaint_model.InpaintModel.build_inpaint_net", "ops.inverse_transform", "ops.inverse_transform"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.normalize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.inpaint_model.InpaintModel.build_inpaint_net", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.inverse_transform"], ["# TODO: output scale 256", "\n", "# share attention", "\n", "x", "=", "attention", "(", "x", ",", "cnum", ",", "down_scale", "=", "2", ",", "pool_scale", "=", "2", ",", "name", "=", "'attention_pooling_256'", ")", "\n", "\n", "# out of predict grad map", "\n", "x", "=", "gen_conv", "(", "x", ",", "cnum", ",", "5", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'out256_grad_out'", ")", "\n", "x_grad", "=", "gen_conv", "(", "x", ",", "6", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "None", ",", "name", "=", "'grad256'", ")", "# grad map  no activation", "\n", "x", "=", "gen_conv", "(", "x", ",", "3", ",", "1", ",", "stride", "=", "1", ",", "activation", "=", "tf", ".", "nn", ".", "tanh", ",", "name", "=", "'out256'", ")", "\n", "\n", "", "return", "x", ",", "x_out_64", ",", "x_out_128", ",", "x_grad", ",", "x_grad_out_64", ",", "x_grad_out_128", "\n", "\n", "# yj", "\n", "", "def", "build_discriminator_256", "(", "self", ",", "x", ",", "reuse", "=", "False", ",", "name", "=", "'discriminator256'", ",", "sn", "=", "True", ",", "training", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Patch GAN discriminator component, receptive filed: 70*70\n        \"\"\"", "\n", "with", "tf", ".", "variable_scope", "(", "name", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "cnum", "=", "64", "\n", "x", "=", "dis_conv", "(", "x", ",", "cnum", ",", "ksize", "=", "4", ",", "stride", "=", "2", ",", "name", "=", "'conv1'", ",", "sn", "=", "sn", ",", "training", "=", "training", ")", "# leaky_relu", "\n", "x", "=", "dis_conv", "(", "x", ",", "cnum", "*", "2", ",", "ksize", "=", "4", ",", "stride", "=", "2", ",", "name", "=", "'conv2'", ",", "sn", "=", "sn", ",", "training", "=", "training", ")", "\n", "x", "=", "dis_conv", "(", "x", ",", "cnum", "*", "4", ",", "ksize", "=", "4", ",", "stride", "=", "2", ",", "name", "=", "'conv3'", ",", "sn", "=", "sn", ",", "training", "=", "training", ")", "\n", "x", "=", "dis_conv", "(", "x", ",", "cnum", "*", "8", ",", "ksize", "=", "4", ",", "stride", "=", "1", ",", "name", "=", "'conv4'", ",", "sn", "=", "sn", ",", "training", "=", "training", ")", "\n", "x", "=", "dis_conv", "(", "x", ",", "1", ",", "ksize", "=", "4", ",", "stride", "=", "1", ",", "name", "=", "'conv5'", ",", "activation", "=", "None", ",", "sn", "=", "sn", ",", "training", "=", "training", ")", "\n", "return", "x", "\n", "\n", "# yj", "\n", "", "", "def", "build_graph_with_losses", "(", "self", ",", "x", ",", "mask", ",", "edge", ",", "edge_128", ",", "edge_64", ",", "args", ",", "training", "=", "True", ",", "reuse", "=", "False", ")", ":", "\n", "# Orgin image, edge, grad", "\n", "# image, edge, edge_128, edge_64 = x", "\n", "        ", "grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "x", ")", "# normalization?", "\n", "grad", "=", "tf", ".", "reshape", "(", "grad", ",", "[", "args", ".", "BATCH_SIZE", ",", "256", ",", "256", ",", "6", "]", ")", "# 6 channel", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.gaussian_kernel_2d_opencv": [[12, 22], ["cv2.getGaussianKernel", "cv2.getGaussianKernel", "numpy.multiply", "numpy.transpose"], "function", ["None"], ["def", "gaussian_kernel_2d_opencv", "(", "kernel_size", "=", "3", ",", "sigma", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    ref: https://blog.csdn.net/qq_16013649/article/details/78784791\n    ref: tensorflow\n        (1) https://stackoverflow.com/questions/52012657/how-to-make-a-2d-gaussian-filter-in-tensorflow\n        (2) https://github.com/tensorflow/tensorflow/issues/2826\n    \"\"\"", "\n", "kx", "=", "cv2", ".", "getGaussianKernel", "(", "kernel_size", ",", "sigma", ")", "\n", "ky", "=", "cv2", ".", "getGaussianKernel", "(", "kernel_size", ",", "sigma", ")", "\n", "return", "np", ".", "multiply", "(", "kx", ",", "np", ".", "transpose", "(", "ky", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.canny_edge": [[24, 42], ["range", "numpy.concatenate", "numpy.expand_dims().astype", "len", "skimage.color.rgb2gray", "skimage.feature.canny", "np.concatenate.append", "numpy.expand_dims", "numpy.expand_dims"], "function", ["None"], ["", "def", "canny_edge", "(", "images", ",", "sigma", "=", "1.5", ")", ":", "\n", "    ", "\"\"\"\n    Extract edges in tensorflow.\n    example:\n    input = tf.placeholder(dtype=tf.float32, shape=[None, 900, 900, 3])\n    output = tf.py_func(canny_edge, [input], tf.float32, stateful=False)\n\n    :param images:\n    :param sigma:\n    :return:\n    \"\"\"", "\n", "edges", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "images", ")", ")", ":", "\n", "        ", "grey_img", "=", "rgb2gray", "(", "images", "[", "i", "]", ")", "\n", "edge", "=", "feature", ".", "canny", "(", "grey_img", ",", "sigma", "=", "sigma", ")", "\n", "edges", ".", "append", "(", "np", ".", "expand_dims", "(", "edge", ",", "axis", "=", "0", ")", ")", "\n", "", "edges", "=", "np", ".", "concatenate", "(", "edges", ",", "axis", "=", "0", ")", "\n", "return", "np", ".", "expand_dims", "(", "edges", ",", "axis", "=", "3", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask": [[44, 52], ["structure_loss.gaussian_kernel_2d_opencv", "numpy.reshape", "tensorflow.convert_to_tensor", "range", "tensorflow.nn.conv2d"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.gaussian_kernel_2d_opencv"], ["", "def", "priority_loss_mask", "(", "mask", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", ":", "\n", "    ", "gaussian_kernel", "=", "gaussian_kernel_2d_opencv", "(", "kernel_size", "=", "ksize", ",", "sigma", "=", "sigma", ")", "\n", "gaussian_kernel", "=", "np", ".", "reshape", "(", "gaussian_kernel", ",", "(", "ksize", ",", "ksize", ",", "1", ",", "1", ")", ")", "\n", "mask_priority", "=", "tf", ".", "convert_to_tensor", "(", "mask", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "iteration", ")", ":", "\n", "        ", "mask_priority", "=", "tf", ".", "nn", ".", "conv2d", "(", "mask_priority", ",", "gaussian_kernel", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "", "return", "mask_priority", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.pyramid_structure_loss": [[54, 93], ["image.get_shape().as_list", "predict.get_shape().as_list", "tensorflow.reduce_mean", "image.get_shape", "tensorflow.image.resize_nearest_neighbor", "tensorflow.image.sobel_edges", "tensorflow.reshape", "tensorflow.abs", "tensorflow.py_func", "structure_loss.priority_loss_mask", "tensorflow.image.sobel_edges", "tensorflow.reshape", "tensorflow.abs", "tensorflow.py_func", "structure_loss.priority_loss_mask", "predict.get_shape", "tensorflow.reduce_sum", "tensorflow.reduce_sum"], "function", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.structure_loss.priority_loss_mask"], ["", "def", "pyramid_structure_loss", "(", "image", ",", "predicts", ",", "edge_alpha", ",", "grad_alpha", ")", ":", "\n", "    ", "_", ",", "H", ",", "W", ",", "_", "=", "image", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "loss", "=", "0.", "\n", "for", "predict", "in", "predicts", ":", "\n", "        ", "_", ",", "h", ",", "w", ",", "_", "=", "predict", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "if", "h", "!=", "H", ":", "\n", "            ", "gt_img", "=", "tf", ".", "image", ".", "resize_nearest_neighbor", "(", "image", ",", "size", "=", "(", "h", ",", "w", ")", ")", "\n", "# gt_mask = tf.image.resize_nearest_neighbor(mask, size=(h, w))", "\n", "\n", "# grad", "\n", "gt_grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "gt_img", ")", "\n", "gt_grad", "=", "tf", ".", "reshape", "(", "gt_grad", ",", "[", "-", "1", ",", "h", ",", "w", ",", "6", "]", ")", "# 6 channel", "\n", "grad_error", "=", "tf", ".", "abs", "(", "predict", "-", "gt_grad", ")", "\n", "\n", "# edge", "\n", "gt_edge", "=", "tf", ".", "py_func", "(", "canny_edge", ",", "[", "gt_img", "]", ",", "tf", ".", "float32", ",", "stateful", "=", "False", ")", "\n", "edge_priority", "=", "priority_loss_mask", "(", "gt_edge", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", "\n", "", "else", ":", "\n", "            ", "gt_img", "=", "image", "\n", "# gt_mask = mask", "\n", "\n", "# grad", "\n", "gt_grad", "=", "tf", ".", "image", ".", "sobel_edges", "(", "gt_img", ")", "\n", "gt_grad", "=", "tf", ".", "reshape", "(", "gt_grad", ",", "[", "-", "1", ",", "H", ",", "W", ",", "6", "]", ")", "# 6 channel", "\n", "grad_error", "=", "tf", ".", "abs", "(", "predict", "-", "gt_grad", ")", "\n", "\n", "# edge", "\n", "gt_edge", "=", "tf", ".", "py_func", "(", "canny_edge", ",", "[", "gt_img", "]", ",", "tf", ".", "float32", ",", "stateful", "=", "False", ")", "\n", "edge_priority", "=", "priority_loss_mask", "(", "gt_edge", ",", "ksize", "=", "5", ",", "sigma", "=", "1", ",", "iteration", "=", "2", ")", "\n", "\n", "", "grad_loss", "=", "tf", ".", "reduce_mean", "(", "grad_alpha", "*", "grad_error", ")", "\n", "edge_weight", "=", "edge_alpha", "*", "edge_priority", "\n", "# print(\"edge_weight\", edge_weight.shape)", "\n", "# print(\"grad_error\", grad_error.shape)", "\n", "edge_loss", "=", "tf", ".", "reduce_sum", "(", "edge_weight", "*", "grad_error", ")", "/", "tf", ".", "reduce_sum", "(", "edge_weight", ")", "/", "6.", "# 6 channel", "\n", "\n", "loss", "=", "loss", "+", "grad_loss", "+", "edge_loss", "\n", "\n", "", "return", "loss", "", "", ""]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.__init__": [[23, 59], ["print", "Tk", "Button", "painter.Paint.rect_button.grid", "Button", "painter.Paint.poly_button.grid", "Button", "painter.Paint.revoke_button.grid", "Button", "painter.Paint.clear_button.grid", "Canvas", "painter.Paint.c.grid", "Canvas", "painter.Paint.out.grid", "Button", "painter.Paint.save_button.grid", "Button", "painter.Paint.load_button.grid", "Button", "painter.Paint.fill_button.grid", "painter.Paint.setup", "painter.Paint.root.mainloop"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.setup"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "print", "(", "\"******************************\"", ",", "self", ".", "config", ".", "CHECKPOINT", ")", "\n", "\n", "self", ".", "root", "=", "Tk", "(", ")", "\n", "\n", "self", ".", "rect_button", "=", "Button", "(", "self", ".", "root", ",", "text", "=", "'rectangle'", ",", "command", "=", "self", ".", "use_rect", ",", "width", "=", "12", ",", "height", "=", "3", ")", "\n", "self", ".", "rect_button", ".", "grid", "(", "row", "=", "0", ",", "column", "=", "2", ")", "\n", "\n", "self", ".", "poly_button", "=", "Button", "(", "self", ".", "root", ",", "text", "=", "'stroke'", ",", "command", "=", "self", ".", "use_poly", ",", "width", "=", "12", ",", "height", "=", "3", ")", "\n", "self", ".", "poly_button", ".", "grid", "(", "row", "=", "1", ",", "column", "=", "2", ")", "\n", "\n", "self", ".", "revoke_button", "=", "Button", "(", "self", ".", "root", ",", "text", "=", "'revoke'", ",", "command", "=", "self", ".", "revoke", ",", "width", "=", "12", ",", "height", "=", "3", ")", "\n", "self", ".", "revoke_button", ".", "grid", "(", "row", "=", "2", ",", "column", "=", "2", ")", "\n", "\n", "self", ".", "clear_button", "=", "Button", "(", "self", ".", "root", ",", "text", "=", "'clear'", ",", "command", "=", "self", ".", "clear", ",", "width", "=", "12", ",", "height", "=", "3", ")", "\n", "self", ".", "clear_button", ".", "grid", "(", "row", "=", "3", ",", "column", "=", "2", ")", "\n", "\n", "self", ".", "c", "=", "Canvas", "(", "self", ".", "root", ",", "bg", "=", "'white'", ",", "width", "=", "config", ".", "IMG_SHAPES", "[", "1", "]", "+", "8", ",", "height", "=", "config", ".", "IMG_SHAPES", "[", "0", "]", ")", "\n", "self", ".", "c", ".", "grid", "(", "row", "=", "0", ",", "column", "=", "0", ",", "rowspan", "=", "8", ")", "\n", "\n", "self", ".", "out", "=", "Canvas", "(", "self", ".", "root", ",", "bg", "=", "'white'", ",", "width", "=", "config", ".", "IMG_SHAPES", "[", "1", "]", "+", "8", ",", "height", "=", "config", ".", "IMG_SHAPES", "[", "0", "]", ")", "\n", "self", ".", "out", ".", "grid", "(", "row", "=", "0", ",", "column", "=", "1", ",", "rowspan", "=", "8", ")", "\n", "\n", "self", ".", "save_button", "=", "Button", "(", "self", ".", "root", ",", "text", "=", "\"save\"", ",", "command", "=", "self", ".", "save", ",", "width", "=", "12", ",", "height", "=", "3", ")", "\n", "self", ".", "save_button", ".", "grid", "(", "row", "=", "6", ",", "column", "=", "2", ")", "\n", "\n", "self", ".", "load_button", "=", "Button", "(", "self", ".", "root", ",", "text", "=", "'load'", ",", "command", "=", "self", ".", "load", ",", "width", "=", "12", ",", "height", "=", "3", ")", "\n", "self", ".", "load_button", ".", "grid", "(", "row", "=", "5", ",", "column", "=", "2", ")", "\n", "\n", "self", ".", "fill_button", "=", "Button", "(", "self", ".", "root", ",", "text", "=", "'fill'", ",", "command", "=", "self", ".", "fill", ",", "width", "=", "12", ",", "height", "=", "3", ")", "\n", "self", ".", "fill_button", ".", "grid", "(", "row", "=", "7", ",", "column", "=", "2", ")", "\n", "self", ".", "filename", "=", "None", "\n", "\n", "self", ".", "setup", "(", ")", "\n", "self", ".", "root", ".", "mainloop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.setup": [[60, 115], ["painter.Paint.c.bind", "painter.Paint.c.bind", "painter.Paint.c.bind", "painter.Paint.c.bind", "painter.Paint.c.bind", "inpaint_model.InpaintModel", "tensorflow.ConfigProto", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "painter.Paint.model.evaluate", "tensorflow.minimum", "tensorflow.get_collection", "list", "painter.Paint.sess.run", "print", "tensorflow.maximum", "map", "tensorflow.assign", "tensorflow.contrib.framework.load_variable"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.inpaint_model.InpaintModel.evaluate"], ["", "def", "setup", "(", "self", ")", ":", "\n", "        ", "self", ".", "old_x", "=", "None", "\n", "self", ".", "old_y", "=", "None", "\n", "self", ".", "start_x", "=", "None", "\n", "self", ".", "start_y", "=", "None", "\n", "self", ".", "end_x", "=", "None", "\n", "self", ".", "end_y", "=", "None", "\n", "self", ".", "eraser_on", "=", "False", "\n", "self", ".", "active_button", "=", "self", ".", "rect_button", "\n", "self", ".", "isPainting", "=", "False", "\n", "self", ".", "c", ".", "bind", "(", "'<B1-Motion>'", ",", "self", ".", "paint", ")", "\n", "self", ".", "c", ".", "bind", "(", "'<ButtonRelease-1>'", ",", "self", ".", "reset", ")", "\n", "self", ".", "c", ".", "bind", "(", "'<Button-1>'", ",", "self", ".", "beginPaint", ")", "\n", "self", ".", "c", ".", "bind", "(", "'<Enter>'", ",", "self", ".", "icon2pen", ")", "\n", "self", ".", "c", ".", "bind", "(", "'<Leave>'", ",", "self", ".", "icon2mice", ")", "\n", "self", ".", "mode", "=", "'rect'", "\n", "self", ".", "rect_buf", "=", "None", "\n", "self", ".", "line_buf", "=", "None", "\n", "assert", "self", ".", "mode", "in", "[", "'rect'", ",", "'poly'", "]", "\n", "self", ".", "paint_color", "=", "self", ".", "MARKER_COLOR", "\n", "self", ".", "mask_candidate", "=", "[", "]", "\n", "self", ".", "rect_candidate", "=", "[", "]", "\n", "self", ".", "im_h", "=", "None", "\n", "self", ".", "im_w", "=", "None", "\n", "self", ".", "mask", "=", "None", "\n", "self", ".", "result", "=", "None", "\n", "self", ".", "blank", "=", "None", "\n", "self", ".", "line_width", "=", "8", "\n", "\n", "# painter model", "\n", "self", ".", "model", "=", "InpaintModel", "(", "self", ".", "config", ")", "\n", "self", ".", "reuse", "=", "False", "\n", "sess_config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "sess_config", ".", "gpu_options", ".", "allow_growth", "=", "False", "\n", "self", ".", "sess", "=", "tf", ".", "Session", "(", "config", "=", "sess_config", ")", "\n", "\n", "self", ".", "input_image_tf", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "1", ",", "self", ".", "config", ".", "IMG_SHAPES", "[", "0", "]", ",", "self", ".", "config", ".", "IMG_SHAPES", "[", "1", "]", ",", "3", "]", ")", "\n", "self", ".", "input_mask_tf", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "1", ",", "self", ".", "config", ".", "IMG_SHAPES", "[", "0", "]", ",", "self", ".", "config", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "self", ".", "input_edge_tf", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "1", ",", "self", ".", "config", ".", "IMG_SHAPES", "[", "0", "]", ",", "self", ".", "config", ".", "IMG_SHAPES", "[", "1", "]", ",", "1", "]", ")", "\n", "output", "=", "self", ".", "model", ".", "evaluate", "(", "self", ".", "input_image_tf", ",", "self", ".", "input_edge_tf", ",", "self", ".", "input_mask_tf", ",", "\n", "args", "=", "self", ".", "config", ",", "reuse", "=", "self", ".", "reuse", ")", "\n", "# output = (output + 1) * 127.5", "\n", "output", "=", "tf", ".", "minimum", "(", "tf", ".", "maximum", "(", "output", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", ",", "0", ")", ",", "255", ")", "\n", "# self.output = tf.cast(output, tf.uint8)", "\n", "self", ".", "output", "=", "output", "\n", "\n", "# load pretrained model", "\n", "vars_list", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "GLOBAL_VARIABLES", ")", "\n", "assign_ops", "=", "list", "(", "map", "(", "lambda", "x", ":", "tf", ".", "assign", "(", "x", ",", "tf", ".", "contrib", ".", "framework", ".", "load_variable", "(", "self", ".", "config", ".", "CHECKPOINT", ",", "x", ".", "name", ")", ")", ",", "\n", "vars_list", ")", ")", "\n", "self", ".", "sess", ".", "run", "(", "assign_ops", ")", "\n", "print", "(", "'Model loaded.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.checkResp": [[116, 118], ["len", "len"], "methods", ["None"], ["", "def", "checkResp", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "mask_candidate", ")", "==", "len", "(", "self", ".", "rect_candidate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.load": [[119, 151], ["tkinter.askopenfilename", "print", "PIL.Image.open", "cv2.imread", "numpy.zeros().astype", "print", "painter.Paint.displayPhoto.resize", "PIL.ImageDraw.Draw", "PIL.ImageTk.PhotoImage", "painter.Paint.c.create_image", "painter.Paint.rect_candidate.clear", "painter.Paint.mask_candidate.clear", "painter.Paint.blank.resize", "PIL.ImageTk.PhotoImage", "painter.Paint.out.create_image", "painter.Paint.filename.split", "painter.Paint.filename.split", "print", "numpy.zeros", "os.path.exists", "PIL.Image.new", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.clear", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.clear", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize"], ["", "def", "load", "(", "self", ")", ":", "\n", "        ", "self", ".", "filename", "=", "tkFileDialog", ".", "askopenfilename", "(", "initialdir", "=", "'./imgs'", ",", "\n", "title", "=", "\"Select file\"", ",", "\n", "filetypes", "=", "(", "(", "\"png files\"", ",", "\"*.png\"", ")", ",", "(", "\"jpg files\"", ",", "\"*.jpg\"", ")", ",", "\n", "(", "\"all files\"", ",", "\"*.*\"", ")", ")", ")", "\n", "self", ".", "filename_", "=", "self", ".", "filename", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "[", ":", "-", "4", "]", "\n", "self", ".", "filepath", "=", "'/'", ".", "join", "(", "self", ".", "filename", ".", "split", "(", "'/'", ")", "[", ":", "-", "1", "]", ")", "\n", "print", "(", "self", ".", "filename_", ",", "self", ".", "filepath", ")", "\n", "try", ":", "\n", "            ", "photo", "=", "Image", ".", "open", "(", "self", ".", "filename", ")", "\n", "self", ".", "image", "=", "cv2", ".", "imread", "(", "self", ".", "filename", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'do not load image'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "im_w", ",", "self", ".", "im_h", "=", "photo", ".", "size", "\n", "self", ".", "mask", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "print", "(", "photo", ".", "size", ")", "\n", "self", ".", "displayPhoto", "=", "photo", "\n", "self", ".", "displayPhoto", "=", "self", ".", "displayPhoto", ".", "resize", "(", "(", "self", ".", "im_w", ",", "self", ".", "im_h", ")", ")", "\n", "self", ".", "draw", "=", "ImageDraw", ".", "Draw", "(", "self", ".", "displayPhoto", ")", "\n", "self", ".", "photo_tk", "=", "ImageTk", ".", "PhotoImage", "(", "image", "=", "self", ".", "displayPhoto", ")", "\n", "self", ".", "c", ".", "create_image", "(", "0", ",", "0", ",", "image", "=", "self", ".", "photo_tk", ",", "anchor", "=", "NW", ")", "\n", "self", ".", "rect_candidate", ".", "clear", "(", ")", "\n", "self", ".", "mask_candidate", ".", "clear", "(", ")", "\n", "if", "self", ".", "blank", "is", "None", ":", "\n", "                ", "if", "not", "os", ".", "path", ".", "exists", "(", "'imgs/blank.png'", ")", ":", "\n", "                    ", "self", ".", "blank", "=", "Image", ".", "new", "(", "mode", "=", "'L'", ",", "size", "=", "(", "1000", ",", "1000", ")", ",", "color", "=", "1", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "blank", "=", "Image", ".", "open", "(", "'imgs/blank.png'", ")", "\n", "", "", "self", ".", "blank", "=", "self", ".", "blank", ".", "resize", "(", "(", "self", ".", "im_w", ",", "self", ".", "im_h", ")", ")", "\n", "self", ".", "blank_tk", "=", "ImageTk", ".", "PhotoImage", "(", "image", "=", "self", ".", "blank", ")", "\n", "self", ".", "out", ".", "create_image", "(", "0", ",", "0", ",", "image", "=", "self", ".", "blank_tk", ",", "anchor", "=", "NW", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.save": [[152, 172], ["numpy.array", "cv2.imwrite", "tkinter.asksaveasfilename", "cv2.imwrite", "cv2.imwrite", "cv2.imwrite", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "painter.Paint.save_filename.split", "painter.Paint.save_filename.split"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "img", "=", "np", ".", "array", "(", "self", ".", "displayPhoto", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "self", ".", "filepath", ",", "'tmp.png'", ")", ",", "img", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'rect'", ":", "\n", "            ", "self", ".", "mask", "[", ":", ",", ":", ",", ":", "]", "=", "0", "\n", "for", "rect", "in", "self", ".", "mask_candidate", ":", "\n", "                ", "self", ".", "mask", "[", "rect", "[", "1", "]", ":", "rect", "[", "3", "]", ",", "rect", "[", "0", "]", ":", "rect", "[", "2", "]", ",", ":", "]", "=", "1", "\n", "\n", "", "", "self", ".", "save_filename", "=", "tkFileDialog", ".", "asksaveasfilename", "(", "initialdir", "=", "self", ".", "config", ".", "SAVEPATH", ",", "\n", "title", "=", "\"Select file\"", ",", "\n", "filetypes", "=", "(", "(", "\"png files\"", ",", "\"*.png\"", ")", ",", "(", "\"jpg files\"", ",", "\"*.jpg\"", ")", ",", "\n", "(", "\"all files\"", ",", "\"*.*\"", ")", ")", ")", "\n", "self", ".", "save_filename_", "=", "self", ".", "save_filename", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "[", ":", "-", "4", "]", "\n", "self", ".", "save_filepath", "=", "'/'", ".", "join", "(", "self", ".", "save_filename", ".", "split", "(", "'/'", ")", "[", ":", "-", "1", "]", ")", "\n", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "self", ".", "save_filepath", ",", "self", ".", "save_filename_", "+", "'_mask.png'", ")", ",", "self", ".", "mask", "*", "255", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "self", ".", "save_filepath", ",", "self", ".", "save_filename_", "+", "'_result.png'", ")", ",", "self", ".", "result", "[", "0", "]", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "self", ".", "save_filepath", ",", "self", ".", "save_filename_", "+", "'_masked.png'", ")", ",", "\n", "self", ".", "result", "[", "0", "]", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "*", "(", "1", "-", "self", ".", "mask", ")", "+", "self", ".", "mask", "*", "255", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.fill": [[173, 198], ["numpy.expand_dims", "numpy.expand_dims", "skimage.color.rgb2gray", "skimage.feature.canny().astype", "numpy.reshape", "painter.Paint.sess.run", "cv2.imwrite", "PIL.Image.open", "painter.Paint.displayPhotoResult.resize", "PIL.ImageTk.PhotoImage", "painter.Paint.out.create_image", "skimage.feature.canny"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize"], ["", "def", "fill", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "'rect'", ":", "\n", "            ", "for", "rect", "in", "self", ".", "mask_candidate", ":", "\n", "                ", "self", ".", "mask", "[", "rect", "[", "1", "]", ":", "rect", "[", "3", "]", ",", "rect", "[", "0", "]", ":", "rect", "[", "2", "]", ",", ":", "]", "=", "1", "\n", "", "", "image", "=", "np", ".", "expand_dims", "(", "self", ".", "image", ",", "0", ")", "\n", "mask", "=", "np", ".", "expand_dims", "(", "self", ".", "mask", ",", "0", ")", "\n", "\n", "img_gray", "=", "rgb2gray", "(", "self", ".", "image", ")", "\n", "edge", "=", "feature", ".", "canny", "(", "img_gray", ",", "sigma", "=", "1.5", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "edge", "=", "np", ".", "reshape", "(", "edge", ",", "(", "1", ",", "256", ",", "256", ",", "1", ")", ")", "\n", "# print(image.shape)", "\n", "# print(mask.shape)", "\n", "# print(edge.shape)", "\n", "\n", "self", ".", "result", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "output", ",", "feed_dict", "=", "{", "self", ".", "input_image_tf", ":", "image", "*", "1.0", ",", "\n", "self", ".", "input_mask_tf", ":", "mask", "*", "1.0", ",", "\n", "self", ".", "input_edge_tf", ":", "edge", "*", "1.0", "}", ")", "\n", "cv2", ".", "imwrite", "(", "'./imgs/tmp.png'", ",", "self", ".", "result", "[", "0", "]", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ")", "# self.output has batch size = 1, so self.result[0]", "\n", "\n", "photo", "=", "Image", ".", "open", "(", "'./imgs/tmp.png'", ")", "\n", "self", ".", "displayPhotoResult", "=", "photo", "\n", "self", ".", "displayPhotoResult", "=", "self", ".", "displayPhotoResult", ".", "resize", "(", "(", "self", ".", "im_w", ",", "self", ".", "im_h", ")", ")", "\n", "self", ".", "photo_tk_result", "=", "ImageTk", ".", "PhotoImage", "(", "image", "=", "self", ".", "displayPhotoResult", ")", "\n", "self", ".", "out", ".", "create_image", "(", "0", ",", "0", ",", "image", "=", "self", ".", "photo_tk_result", ",", "anchor", "=", "NW", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.use_rect": [[199, 202], ["painter.Paint.activate_button"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.activate_button"], ["", "def", "use_rect", "(", "self", ")", ":", "\n", "        ", "self", ".", "activate_button", "(", "self", ".", "rect_button", ")", "\n", "self", ".", "mode", "=", "'rect'", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.use_poly": [[203, 206], ["painter.Paint.activate_button"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.activate_button"], ["", "def", "use_poly", "(", "self", ")", ":", "\n", "        ", "self", ".", "activate_button", "(", "self", ".", "poly_button", ")", "\n", "self", ".", "mode", "=", "'poly'", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.revoke": [[207, 213], ["painter.Paint.checkResp", "len", "painter.Paint.c.delete", "painter.Paint.rect_candidate.remove", "painter.Paint.mask_candidate.remove"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.checkResp"], ["", "def", "revoke", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "rect_candidate", ")", ">", "0", ":", "\n", "            ", "self", ".", "c", ".", "delete", "(", "self", ".", "rect_candidate", "[", "-", "1", "]", ")", "\n", "self", ".", "rect_candidate", ".", "remove", "(", "self", ".", "rect_candidate", "[", "-", "1", "]", ")", "\n", "self", ".", "mask_candidate", ".", "remove", "(", "self", ".", "mask_candidate", "[", "-", "1", "]", ")", "\n", "", "self", ".", "checkResp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.clear": [[214, 232], ["numpy.zeros().astype", "PIL.Image.open", "cv2.imread", "painter.Paint.displayPhoto.resize", "PIL.ImageDraw.Draw", "PIL.ImageTk.PhotoImage", "painter.Paint.c.create_image", "painter.Paint.rect_candidate.clear", "painter.Paint.mask_candidate.clear", "painter.Paint.checkResp", "numpy.zeros", "painter.Paint.c.delete", "len"], "methods", ["home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.ops.resize", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.clear", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.clear", "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.checkResp"], ["", "def", "clear", "(", "self", ")", ":", "\n", "        ", "self", ".", "mask", "=", "np", ".", "zeros", "(", "(", "self", ".", "im_h", ",", "self", ".", "im_w", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "if", "self", ".", "mode", "==", "'poly'", ":", "\n", "            ", "photo", "=", "Image", ".", "open", "(", "self", ".", "filename", ")", "\n", "self", ".", "image", "=", "cv2", ".", "imread", "(", "self", ".", "filename", ")", "\n", "self", ".", "displayPhoto", "=", "photo", "\n", "self", ".", "displayPhoto", "=", "self", ".", "displayPhoto", ".", "resize", "(", "(", "self", ".", "im_w", ",", "self", ".", "im_h", ")", ")", "\n", "self", ".", "draw", "=", "ImageDraw", ".", "Draw", "(", "self", ".", "displayPhoto", ")", "\n", "self", ".", "photo_tk", "=", "ImageTk", ".", "PhotoImage", "(", "image", "=", "self", ".", "displayPhoto", ")", "\n", "self", ".", "c", ".", "create_image", "(", "0", ",", "0", ",", "image", "=", "self", ".", "photo_tk", ",", "anchor", "=", "NW", ")", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "rect_candidate", "is", "None", "or", "len", "(", "self", ".", "rect_candidate", ")", "==", "0", ":", "\n", "                ", "return", "\n", "", "for", "item", "in", "self", ".", "rect_candidate", ":", "\n", "                ", "self", ".", "c", ".", "delete", "(", "item", ")", "\n", "", "self", ".", "rect_candidate", ".", "clear", "(", ")", "\n", "self", ".", "mask_candidate", ".", "clear", "(", ")", "\n", "self", ".", "checkResp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.activate_button": [[237, 242], ["painter.Paint.active_button.config", "some_button.config"], "methods", ["None"], ["", "", "def", "activate_button", "(", "self", ",", "some_button", ",", "eraser_mode", "=", "False", ")", ":", "\n", "        ", "self", ".", "active_button", ".", "config", "(", "relief", "=", "RAISED", ")", "\n", "some_button", ".", "config", "(", "relief", "=", "SUNKEN", ")", "\n", "self", ".", "active_button", "=", "some_button", "\n", "self", ".", "eraser_on", "=", "eraser_mode", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.beginPaint": [[243, 247], ["None"], "methods", ["None"], ["", "def", "beginPaint", "(", "self", ",", "event", ")", ":", "\n", "        ", "self", ".", "start_x", "=", "event", ".", "x", "\n", "self", ".", "start_y", "=", "event", ".", "y", "\n", "self", ".", "isPainting", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.paint": [[248, 263], ["max", "max", "painter.Paint.c.create_rectangle", "min", "min", "painter.Paint.c.delete", "painter.Paint.c.create_line", "cv2.line"], "methods", ["None"], ["", "def", "paint", "(", "self", ",", "event", ")", ":", "\n", "        ", "if", "self", ".", "start_x", "and", "self", ".", "start_y", "and", "self", ".", "mode", "==", "'rect'", ":", "\n", "            ", "self", ".", "end_x", "=", "max", "(", "min", "(", "event", ".", "x", ",", "self", ".", "im_w", ")", ",", "0", ")", "\n", "self", ".", "end_y", "=", "max", "(", "min", "(", "event", ".", "y", ",", "self", ".", "im_h", ")", ",", "0", ")", "\n", "rect", "=", "self", ".", "c", ".", "create_rectangle", "(", "self", ".", "start_x", ",", "self", ".", "start_y", ",", "self", ".", "end_x", ",", "self", ".", "end_y", ",", "fill", "=", "self", ".", "paint_color", ")", "\n", "if", "self", ".", "rect_buf", "is", "not", "None", ":", "\n", "                ", "self", ".", "c", ".", "delete", "(", "self", ".", "rect_buf", ")", "\n", "", "self", ".", "rect_buf", "=", "rect", "\n", "", "elif", "self", ".", "old_x", "and", "self", ".", "old_y", "and", "self", ".", "mode", "==", "'poly'", ":", "\n", "            ", "line", "=", "self", ".", "c", ".", "create_line", "(", "self", ".", "old_x", ",", "self", ".", "old_y", ",", "event", ".", "x", ",", "event", ".", "y", ",", "\n", "width", "=", "self", ".", "line_width", ",", "fill", "=", "self", ".", "paint_color", ",", "capstyle", "=", "ROUND", ",", "\n", "smooth", "=", "True", ",", "splinesteps", "=", "36", ")", "\n", "cv2", ".", "line", "(", "self", ".", "mask", ",", "(", "self", ".", "old_x", ",", "self", ".", "old_y", ")", ",", "(", "event", ".", "x", ",", "event", ".", "y", ")", ",", "(", "1", ")", ",", "self", ".", "line_width", ")", "\n", "", "self", ".", "old_x", "=", "event", ".", "x", "\n", "self", ".", "old_y", "=", "event", ".", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.reset": [[264, 280], ["painter.Paint.c.create_rectangle", "painter.Paint.rect_candidate.append", "painter.Paint.mask_candidate.append", "print", "painter.Paint.c.delete", "min", "min", "max", "max"], "methods", ["None"], ["", "def", "reset", "(", "self", ",", "event", ")", ":", "\n", "        ", "self", ".", "old_x", ",", "self", ".", "old_y", "=", "None", ",", "None", "\n", "if", "self", ".", "mode", "==", "'rect'", ":", "\n", "            ", "self", ".", "isPainting", "=", "False", "\n", "rect", "=", "self", ".", "c", ".", "create_rectangle", "(", "self", ".", "start_x", ",", "self", ".", "start_y", ",", "self", ".", "end_x", ",", "self", ".", "end_y", ",", "\n", "fill", "=", "self", ".", "paint_color", ")", "\n", "if", "self", ".", "rect_buf", "is", "not", "None", ":", "\n", "                ", "self", ".", "c", ".", "delete", "(", "self", ".", "rect_buf", ")", "\n", "", "self", ".", "rect_buf", "=", "None", "\n", "self", ".", "rect_candidate", ".", "append", "(", "rect", ")", "\n", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "min", "(", "self", ".", "start_x", ",", "self", ".", "end_x", ")", ",", "min", "(", "self", ".", "start_y", ",", "self", ".", "end_y", ")", ",", "max", "(", "self", ".", "start_x", ",", "self", ".", "end_x", ")", ",", "max", "(", "self", ".", "start_y", ",", "self", ".", "end_y", ")", "\n", "# up left corner, low right corner", "\n", "self", ".", "mask_candidate", ".", "append", "(", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ")", "\n", "print", "(", "self", ".", "mask_candidate", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.icon2pen": [[281, 283], ["None"], "methods", ["None"], ["", "", "def", "icon2pen", "(", "self", ",", "event", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.YoungGod_sturcture-inpainting.painter.painter.Paint.icon2mice": [[284, 286], ["None"], "methods", ["None"], ["", "def", "icon2mice", "(", "self", ",", "event", ")", ":", "\n", "        ", "return", "\n", "\n"]]}