{"home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.main.init_seed": [[8, 15], ["np.random.seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "int", "time.time"], "function", ["None"], ["def", "init_seed", "(", "seed", "=", "None", ")", ":", "\n", "    ", "if", "seed", "is", "None", ":", "\n", "        ", "seed", "=", "int", "(", "time", ".", "time", "(", ")", "*", "1000", "//", "1000", ")", "\n", "", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.main.main": [[41, 107], ["main.init_seed", "pickle.load", "pickle.load", "pickle.load", "utils.Data", "utils.Data", "utils.handle_adj", "model.trans_to_cuda", "print", "time.time", "range", "print", "time.time", "print", "open", "utils.split_validation", "pickle.load", "open", "open", "model.CombineGraph", "print", "print", "model.train_test", "print", "print", "print", "print", "open", "str", "str"], "function", ["home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.main.init_seed", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.handle_adj", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cuda", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.split_validation", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.train_test"], ["def", "main", "(", ")", ":", "\n", "    ", "init_seed", "(", "2020", ")", "\n", "\n", "if", "opt", ".", "dataset", "==", "'diginetica'", ":", "\n", "        ", "num_node", "=", "43098", "\n", "opt", ".", "n_iter", "=", "2", "\n", "opt", ".", "dropout_gcn", "=", "0.2", "\n", "opt", ".", "dropout_local", "=", "0.0", "\n", "", "elif", "opt", ".", "dataset", "==", "'Nowplaying'", ":", "\n", "        ", "num_node", "=", "60417", "\n", "opt", ".", "n_iter", "=", "1", "\n", "opt", ".", "dropout_gcn", "=", "0.0", "\n", "opt", ".", "dropout_local", "=", "0.0", "\n", "", "elif", "opt", ".", "dataset", "==", "'Tmall'", ":", "\n", "        ", "num_node", "=", "40728", "\n", "opt", ".", "n_iter", "=", "1", "\n", "opt", ".", "dropout_gcn", "=", "0.6", "\n", "opt", ".", "dropout_local", "=", "0.5", "\n", "", "else", ":", "\n", "        ", "num_node", "=", "310", "\n", "\n", "", "train_data", "=", "pickle", ".", "load", "(", "open", "(", "'datasets/'", "+", "opt", ".", "dataset", "+", "'/train.txt'", ",", "'rb'", ")", ")", "\n", "if", "opt", ".", "validation", ":", "\n", "        ", "train_data", ",", "valid_data", "=", "split_validation", "(", "train_data", ",", "opt", ".", "valid_portion", ")", "\n", "test_data", "=", "valid_data", "\n", "", "else", ":", "\n", "        ", "test_data", "=", "pickle", ".", "load", "(", "open", "(", "'datasets/'", "+", "opt", ".", "dataset", "+", "'/test.txt'", ",", "'rb'", ")", ")", "\n", "\n", "", "adj", "=", "pickle", ".", "load", "(", "open", "(", "'datasets/'", "+", "opt", ".", "dataset", "+", "'/adj_'", "+", "str", "(", "opt", ".", "n_sample_all", ")", "+", "'.pkl'", ",", "'rb'", ")", ")", "\n", "num", "=", "pickle", ".", "load", "(", "open", "(", "'datasets/'", "+", "opt", ".", "dataset", "+", "'/num_'", "+", "str", "(", "opt", ".", "n_sample_all", ")", "+", "'.pkl'", ",", "'rb'", ")", ")", "\n", "train_data", "=", "Data", "(", "train_data", ")", "\n", "test_data", "=", "Data", "(", "test_data", ")", "\n", "\n", "adj", ",", "num", "=", "handle_adj", "(", "adj", ",", "num_node", ",", "opt", ".", "n_sample_all", ",", "num", ")", "\n", "model", "=", "trans_to_cuda", "(", "CombineGraph", "(", "opt", ",", "num_node", ",", "adj", ",", "num", ")", ")", "\n", "\n", "print", "(", "opt", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "best_result", "=", "[", "0", ",", "0", "]", "\n", "best_epoch", "=", "[", "0", ",", "0", "]", "\n", "bad_counter", "=", "0", "\n", "\n", "for", "epoch", "in", "range", "(", "opt", ".", "epoch", ")", ":", "\n", "        ", "print", "(", "'-------------------------------------------------------'", ")", "\n", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "hit", ",", "mrr", "=", "train_test", "(", "model", ",", "train_data", ",", "test_data", ")", "\n", "flag", "=", "0", "\n", "if", "hit", ">=", "best_result", "[", "0", "]", ":", "\n", "            ", "best_result", "[", "0", "]", "=", "hit", "\n", "best_epoch", "[", "0", "]", "=", "epoch", "\n", "flag", "=", "1", "\n", "", "if", "mrr", ">=", "best_result", "[", "1", "]", ":", "\n", "            ", "best_result", "[", "1", "]", "=", "mrr", "\n", "best_epoch", "[", "1", "]", "=", "epoch", "\n", "flag", "=", "1", "\n", "", "print", "(", "'Current Result:'", ")", "\n", "print", "(", "'\\tRecall@20:\\t%.4f\\tMMR@20:\\t%.4f'", "%", "(", "hit", ",", "mrr", ")", ")", "\n", "print", "(", "'Best Result:'", ")", "\n", "print", "(", "'\\tRecall@20:\\t%.4f\\tMMR@20:\\t%.4f\\tEpoch:\\t%d,\\t%d'", "%", "(", "\n", "best_result", "[", "0", "]", ",", "best_result", "[", "1", "]", ",", "best_epoch", "[", "0", "]", ",", "best_epoch", "[", "1", "]", ")", ")", "\n", "bad_counter", "+=", "1", "-", "flag", "\n", "if", "bad_counter", ">=", "opt", ".", "patience", ":", "\n", "            ", "break", "\n", "", "", "print", "(", "'-------------------------------------------------------'", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"Run time: %f s\"", "%", "(", "end", "-", "start", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.CombineGraph.__init__": [[13, 55], ["torch.nn.Module.__init__", "trans_to_cuda().long", "trans_to_cuda().float", "aggregator.LocalAggregator", "range", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR", "model.CombineGraph.reset_parameters", "model.CombineGraph.add_module", "model.CombineGraph.global_agg.append", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "model.CombineGraph.parameters", "model.trans_to_cuda", "model.trans_to_cuda", "aggregator.GlobalAggregator", "aggregator.GlobalAggregator", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.Data.__init__", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.CombineGraph.reset_parameters", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cuda", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cuda"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "num_node", ",", "adj_all", ",", "num", ")", ":", "\n", "        ", "super", "(", "CombineGraph", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "opt", "=", "opt", "\n", "\n", "self", ".", "batch_size", "=", "opt", ".", "batch_size", "\n", "self", ".", "num_node", "=", "num_node", "\n", "self", ".", "dim", "=", "opt", ".", "hiddenSize", "\n", "self", ".", "dropout_local", "=", "opt", ".", "dropout_local", "\n", "self", ".", "dropout_global", "=", "opt", ".", "dropout_global", "\n", "self", ".", "hop", "=", "opt", ".", "n_iter", "\n", "self", ".", "sample_num", "=", "opt", ".", "n_sample", "\n", "self", ".", "adj_all", "=", "trans_to_cuda", "(", "torch", ".", "Tensor", "(", "adj_all", ")", ")", ".", "long", "(", ")", "\n", "self", ".", "num", "=", "trans_to_cuda", "(", "torch", ".", "Tensor", "(", "num", ")", ")", ".", "float", "(", ")", "\n", "\n", "# Aggregator", "\n", "self", ".", "local_agg", "=", "LocalAggregator", "(", "self", ".", "dim", ",", "self", ".", "opt", ".", "alpha", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "global_agg", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "hop", ")", ":", "\n", "            ", "if", "opt", ".", "activate", "==", "'relu'", ":", "\n", "                ", "agg", "=", "GlobalAggregator", "(", "self", ".", "dim", ",", "opt", ".", "dropout_gcn", ",", "act", "=", "torch", ".", "relu", ")", "\n", "", "else", ":", "\n", "                ", "agg", "=", "GlobalAggregator", "(", "self", ".", "dim", ",", "opt", ".", "dropout_gcn", ",", "act", "=", "torch", ".", "tanh", ")", "\n", "", "self", ".", "add_module", "(", "'agg_gcn_{}'", ".", "format", "(", "i", ")", ",", "agg", ")", "\n", "self", ".", "global_agg", ".", "append", "(", "agg", ")", "\n", "\n", "# Item representation & Position representation", "\n", "", "self", ".", "embedding", "=", "nn", ".", "Embedding", "(", "num_node", ",", "self", ".", "dim", ")", "\n", "self", ".", "pos_embedding", "=", "nn", ".", "Embedding", "(", "200", ",", "self", ".", "dim", ")", "\n", "\n", "# Parameters", "\n", "self", ".", "w_1", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "2", "*", "self", ".", "dim", ",", "self", ".", "dim", ")", ")", "\n", "self", ".", "w_2", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "dim", ",", "1", ")", ")", "\n", "self", ".", "glu1", "=", "nn", ".", "Linear", "(", "self", ".", "dim", ",", "self", ".", "dim", ")", "\n", "self", ".", "glu2", "=", "nn", ".", "Linear", "(", "self", ".", "dim", ",", "self", ".", "dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "linear_transform", "=", "nn", ".", "Linear", "(", "self", ".", "dim", ",", "self", ".", "dim", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "leakyrelu", "=", "nn", ".", "LeakyReLU", "(", "opt", ".", "alpha", ")", "\n", "self", ".", "loss_function", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "opt", ".", "lr", ",", "weight_decay", "=", "opt", ".", "l2", ")", "\n", "self", ".", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "self", ".", "optimizer", ",", "step_size", "=", "opt", ".", "lr_dc_step", ",", "gamma", "=", "opt", ".", "lr_dc", ")", "\n", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.CombineGraph.reset_parameters": [[56, 60], ["model.CombineGraph.parameters", "math.sqrt", "weight.data.uniform_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "1.0", "/", "math", ".", "sqrt", "(", "self", ".", "dim", ")", "\n", "for", "weight", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.CombineGraph.sample": [[61, 68], ["target.view", "target.view"], "methods", ["None"], ["", "", "def", "sample", "(", "self", ",", "target", ",", "n_sample", ")", ":", "\n", "# neighbor = self.adj_all[target.view(-1)]", "\n", "# index = np.arange(neighbor.shape[1])", "\n", "# np.random.shuffle(index)", "\n", "# index = index[:n_sample]", "\n", "# return self.adj_all[target.view(-1)][:, index], self.num[target.view(-1)][:, index]", "\n", "        ", "return", "self", ".", "adj_all", "[", "target", ".", "view", "(", "-", "1", ")", "]", ",", "self", ".", "num", "[", "target", ".", "view", "(", "-", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.CombineGraph.compute_scores": [[69, 89], ["mask.float().unsqueeze.float().unsqueeze.float().unsqueeze", "pos_emb.unsqueeze().repeat.unsqueeze().repeat.unsqueeze().repeat", "hs.unsqueeze().repeat.unsqueeze().repeat.unsqueeze().repeat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "b.transpose", "mask.float().unsqueeze.float().unsqueeze.float", "pos_emb.unsqueeze().repeat.unsqueeze().repeat.unsqueeze", "hs.unsqueeze().repeat.unsqueeze().repeat.unsqueeze", "model.CombineGraph.glu1", "model.CombineGraph.glu2"], "methods", ["None"], ["", "def", "compute_scores", "(", "self", ",", "hidden", ",", "mask", ")", ":", "\n", "        ", "mask", "=", "mask", ".", "float", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "batch_size", "=", "hidden", ".", "shape", "[", "0", "]", "\n", "len", "=", "hidden", ".", "shape", "[", "1", "]", "\n", "pos_emb", "=", "self", ".", "pos_embedding", ".", "weight", "[", ":", "len", "]", "\n", "pos_emb", "=", "pos_emb", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "batch_size", ",", "1", ",", "1", ")", "\n", "\n", "hs", "=", "torch", ".", "sum", "(", "hidden", "*", "mask", ",", "-", "2", ")", "/", "torch", ".", "sum", "(", "mask", ",", "1", ")", "\n", "hs", "=", "hs", ".", "unsqueeze", "(", "-", "2", ")", ".", "repeat", "(", "1", ",", "len", ",", "1", ")", "\n", "nh", "=", "torch", ".", "matmul", "(", "torch", ".", "cat", "(", "[", "pos_emb", ",", "hidden", "]", ",", "-", "1", ")", ",", "self", ".", "w_1", ")", "\n", "nh", "=", "torch", ".", "tanh", "(", "nh", ")", "\n", "nh", "=", "torch", ".", "sigmoid", "(", "self", ".", "glu1", "(", "nh", ")", "+", "self", ".", "glu2", "(", "hs", ")", ")", "\n", "beta", "=", "torch", ".", "matmul", "(", "nh", ",", "self", ".", "w_2", ")", "\n", "beta", "=", "beta", "*", "mask", "\n", "select", "=", "torch", ".", "sum", "(", "beta", "*", "hidden", ",", "1", ")", "\n", "\n", "b", "=", "self", ".", "embedding", ".", "weight", "[", "1", ":", "]", "# n_nodes x latent_size", "\n", "scores", "=", "torch", ".", "matmul", "(", "select", ",", "b", ".", "transpose", "(", "1", ",", "0", ")", ")", "\n", "return", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.CombineGraph.forward": [[90, 147], ["model.CombineGraph.embedding", "model.CombineGraph.local_agg", "range", "sum_item_emb.unsqueeze.unsqueeze.unsqueeze", "range", "range", "entity_vectors[].view", "torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "model.CombineGraph.sample", "item_neighbors.append", "weight_neighbors.append", "model.CombineGraph.embedding", "model.CombineGraph.embedding", "mask_item.float().unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum().unsqueeze", "torch.sum().unsqueeze", "torch.sum().unsqueeze", "torch.sum().unsqueeze", "session_info.append", "range", "item_sample_i.view", "weight_sample_i.view", "sum_item_emb.unsqueeze.unsqueeze.repeat", "aggregator", "entity_vectors_next_iter.append", "mask_item.float", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "mask_item.float", "entity_vectors[].view", "weight_vectors[].view"], "methods", ["home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.CombineGraph.sample"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "adj", ",", "mask_item", ",", "item", ")", ":", "\n", "        ", "batch_size", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "seqs_len", "=", "inputs", ".", "shape", "[", "1", "]", "\n", "h", "=", "self", ".", "embedding", "(", "inputs", ")", "\n", "\n", "# local", "\n", "h_local", "=", "self", ".", "local_agg", "(", "h", ",", "adj", ",", "mask_item", ")", "\n", "\n", "# global", "\n", "item_neighbors", "=", "[", "inputs", "]", "\n", "weight_neighbors", "=", "[", "]", "\n", "support_size", "=", "seqs_len", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "hop", "+", "1", ")", ":", "\n", "            ", "item_sample_i", ",", "weight_sample_i", "=", "self", ".", "sample", "(", "item_neighbors", "[", "-", "1", "]", ",", "self", ".", "sample_num", ")", "\n", "support_size", "*=", "self", ".", "sample_num", "\n", "item_neighbors", ".", "append", "(", "item_sample_i", ".", "view", "(", "batch_size", ",", "support_size", ")", ")", "\n", "weight_neighbors", ".", "append", "(", "weight_sample_i", ".", "view", "(", "batch_size", ",", "support_size", ")", ")", "\n", "\n", "", "entity_vectors", "=", "[", "self", ".", "embedding", "(", "i", ")", "for", "i", "in", "item_neighbors", "]", "\n", "weight_vectors", "=", "weight_neighbors", "\n", "\n", "session_info", "=", "[", "]", "\n", "item_emb", "=", "self", ".", "embedding", "(", "item", ")", "*", "mask_item", ".", "float", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "# mean ", "\n", "sum_item_emb", "=", "torch", ".", "sum", "(", "item_emb", ",", "1", ")", "/", "torch", ".", "sum", "(", "mask_item", ".", "float", "(", ")", ",", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "# sum", "\n", "# sum_item_emb = torch.sum(item_emb, 1)", "\n", "\n", "sum_item_emb", "=", "sum_item_emb", ".", "unsqueeze", "(", "-", "2", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "hop", ")", ":", "\n", "            ", "session_info", ".", "append", "(", "sum_item_emb", ".", "repeat", "(", "1", ",", "entity_vectors", "[", "i", "]", ".", "shape", "[", "1", "]", ",", "1", ")", ")", "\n", "\n", "", "for", "n_hop", "in", "range", "(", "self", ".", "hop", ")", ":", "\n", "            ", "entity_vectors_next_iter", "=", "[", "]", "\n", "shape", "=", "[", "batch_size", ",", "-", "1", ",", "self", ".", "sample_num", ",", "self", ".", "dim", "]", "\n", "for", "hop", "in", "range", "(", "self", ".", "hop", "-", "n_hop", ")", ":", "\n", "                ", "aggregator", "=", "self", ".", "global_agg", "[", "n_hop", "]", "\n", "vector", "=", "aggregator", "(", "self_vectors", "=", "entity_vectors", "[", "hop", "]", ",", "\n", "neighbor_vector", "=", "entity_vectors", "[", "hop", "+", "1", "]", ".", "view", "(", "shape", ")", ",", "\n", "masks", "=", "None", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "neighbor_weight", "=", "weight_vectors", "[", "hop", "]", ".", "view", "(", "batch_size", ",", "-", "1", ",", "self", ".", "sample_num", ")", ",", "\n", "extra_vector", "=", "session_info", "[", "hop", "]", ")", "\n", "entity_vectors_next_iter", ".", "append", "(", "vector", ")", "\n", "", "entity_vectors", "=", "entity_vectors_next_iter", "\n", "\n", "", "h_global", "=", "entity_vectors", "[", "0", "]", ".", "view", "(", "batch_size", ",", "seqs_len", ",", "self", ".", "dim", ")", "\n", "\n", "# combine", "\n", "h_local", "=", "F", ".", "dropout", "(", "h_local", ",", "self", ".", "dropout_local", ",", "training", "=", "self", ".", "training", ")", "\n", "h_global", "=", "F", ".", "dropout", "(", "h_global", ",", "self", ".", "dropout_global", ",", "training", "=", "self", ".", "training", ")", "\n", "output", "=", "h_local", "+", "h_global", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cuda": [[149, 154], ["torch.cuda.is_available", "torch.cuda.is_available", "variable.cuda"], "function", ["None"], ["", "", "def", "trans_to_cuda", "(", "variable", ")", ":", "\n", "    ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "variable", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "variable", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cpu": [[156, 161], ["torch.cuda.is_available", "torch.cuda.is_available", "variable.cpu"], "function", ["None"], ["", "", "def", "trans_to_cpu", "(", "variable", ")", ":", "\n", "    ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "variable", ".", "cpu", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "variable", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.forward": [[163, 175], ["trans_to_cuda().long", "trans_to_cuda().long", "trans_to_cuda().float", "trans_to_cuda().long", "trans_to_cuda().long", "model", "torch.stack", "torch.stack", "model.compute_scores", "model.trans_to_cuda", "model.trans_to_cuda", "model.trans_to_cuda", "model.trans_to_cuda", "model.trans_to_cuda", "get", "torch.arange().long", "torch.arange().long", "torch.arange", "torch.arange", "len"], "function", ["home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.CombineGraph.compute_scores", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cuda", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cuda", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cuda", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cuda", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cuda"], ["", "", "def", "forward", "(", "model", ",", "data", ")", ":", "\n", "    ", "alias_inputs", ",", "adj", ",", "items", ",", "mask", ",", "targets", ",", "inputs", "=", "data", "\n", "alias_inputs", "=", "trans_to_cuda", "(", "alias_inputs", ")", ".", "long", "(", ")", "\n", "items", "=", "trans_to_cuda", "(", "items", ")", ".", "long", "(", ")", "\n", "adj", "=", "trans_to_cuda", "(", "adj", ")", ".", "float", "(", ")", "\n", "mask", "=", "trans_to_cuda", "(", "mask", ")", ".", "long", "(", ")", "\n", "inputs", "=", "trans_to_cuda", "(", "inputs", ")", ".", "long", "(", ")", "\n", "\n", "hidden", "=", "model", "(", "items", ",", "adj", ",", "mask", ",", "inputs", ")", "\n", "get", "=", "lambda", "index", ":", "hidden", "[", "index", "]", "[", "alias_inputs", "[", "index", "]", "]", "\n", "seq_hidden", "=", "torch", ".", "stack", "(", "[", "get", "(", "i", ")", "for", "i", "in", "torch", ".", "arange", "(", "len", "(", "alias_inputs", ")", ")", ".", "long", "(", ")", "]", ")", "\n", "return", "targets", ",", "model", ".", "compute_scores", "(", "seq_hidden", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.train_test": [[177, 216], ["print", "model.train", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "tqdm.tqdm", "print", "model.scheduler.step", "print", "model.eval", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "result.append", "result.append", "datetime.datetime.now", "model.optimizer.zero_grad", "model.forward", "trans_to_cuda().long", "model.loss_function", "model.loss_function.backward", "model.optimizer.step", "datetime.datetime.now", "model.forward", "trans_to_cpu().detach().numpy", "targets.numpy.numpy", "zip", "scores.topk", "hit.append", "numpy.mean", "numpy.mean", "model.trans_to_cuda", "trans_to_cpu().detach", "numpy.isin", "len", "mrr.append", "mrr.append", "model.trans_to_cpu", "numpy.where", "numpy.where"], "function", ["home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.aggregator.GlobalAggregator.forward", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.aggregator.GlobalAggregator.forward", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cuda", "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.model.trans_to_cpu"], ["", "def", "train_test", "(", "model", ",", "train_data", ",", "test_data", ")", ":", "\n", "    ", "print", "(", "'start training: '", ",", "datetime", ".", "datetime", ".", "now", "(", ")", ")", "\n", "model", ".", "train", "(", ")", "\n", "total_loss", "=", "0.0", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_data", ",", "num_workers", "=", "4", ",", "batch_size", "=", "model", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "pin_memory", "=", "True", ")", "\n", "for", "data", "in", "tqdm", "(", "train_loader", ")", ":", "\n", "        ", "model", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "targets", ",", "scores", "=", "forward", "(", "model", ",", "data", ")", "\n", "targets", "=", "trans_to_cuda", "(", "targets", ")", ".", "long", "(", ")", "\n", "loss", "=", "model", ".", "loss_function", "(", "scores", ",", "targets", "-", "1", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "model", ".", "optimizer", ".", "step", "(", ")", "\n", "total_loss", "+=", "loss", "\n", "", "print", "(", "'\\tLoss:\\t%.3f'", "%", "total_loss", ")", "\n", "model", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "print", "(", "'start predicting: '", ",", "datetime", ".", "datetime", ".", "now", "(", ")", ")", "\n", "model", ".", "eval", "(", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "test_data", ",", "num_workers", "=", "4", ",", "batch_size", "=", "model", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "pin_memory", "=", "True", ")", "\n", "result", "=", "[", "]", "\n", "hit", ",", "mrr", "=", "[", "]", ",", "[", "]", "\n", "for", "data", "in", "test_loader", ":", "\n", "        ", "targets", ",", "scores", "=", "forward", "(", "model", ",", "data", ")", "\n", "sub_scores", "=", "scores", ".", "topk", "(", "20", ")", "[", "1", "]", "\n", "sub_scores", "=", "trans_to_cpu", "(", "sub_scores", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "targets", "=", "targets", ".", "numpy", "(", ")", "\n", "for", "score", ",", "target", ",", "mask", "in", "zip", "(", "sub_scores", ",", "targets", ",", "test_data", ".", "mask", ")", ":", "\n", "            ", "hit", ".", "append", "(", "np", ".", "isin", "(", "target", "-", "1", ",", "score", ")", ")", "\n", "if", "len", "(", "np", ".", "where", "(", "score", "==", "target", "-", "1", ")", "[", "0", "]", ")", "==", "0", ":", "\n", "                ", "mrr", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "mrr", ".", "append", "(", "1", "/", "(", "np", ".", "where", "(", "score", "==", "target", "-", "1", ")", "[", "0", "]", "[", "0", "]", "+", "1", ")", ")", "\n", "\n", "", "", "", "result", ".", "append", "(", "np", ".", "mean", "(", "hit", ")", "*", "100", ")", "\n", "result", ".", "append", "(", "np", ".", "mean", "(", "mrr", ")", "*", "100", ")", "\n", "\n", "return", "result", "\n", "", ""]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.aggregator.Aggregator.__init__": [[9, 15], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.Data.__init__"], ["    ", "def", "__init__", "(", "self", ",", "batch_size", ",", "dim", ",", "dropout", ",", "act", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "Aggregator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "act", "=", "act", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "dim", "=", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.aggregator.Aggregator.forward": [[16, 18], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.aggregator.LocalAggregator.__init__": [[21, 33], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.Data.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "alpha", ",", "dropout", "=", "0.", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "LocalAggregator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "self", ".", "a_0", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "dim", ",", "1", ")", ")", "\n", "self", ".", "a_1", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "dim", ",", "1", ")", ")", "\n", "self", ".", "a_2", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "dim", ",", "1", ")", ")", "\n", "self", ".", "a_3", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "dim", ",", "1", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "dim", ")", ")", "\n", "\n", "self", ".", "leakyrelu", "=", "nn", ".", "LeakyReLU", "(", "alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.aggregator.LocalAggregator.forward": [[34, 61], ["torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "aggregator.LocalAggregator.leakyrelu().squeeze().view", "aggregator.LocalAggregator.leakyrelu().squeeze().view", "aggregator.LocalAggregator.leakyrelu().squeeze().view", "aggregator.LocalAggregator.leakyrelu().squeeze().view", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "adj.eq", "adj.eq", "adj.eq", "adj.eq", "aggregator.LocalAggregator.leakyrelu().squeeze", "aggregator.LocalAggregator.leakyrelu().squeeze", "aggregator.LocalAggregator.leakyrelu().squeeze", "aggregator.LocalAggregator.leakyrelu().squeeze", "h.repeat().view", "h.repeat", "aggregator.LocalAggregator.leakyrelu", "aggregator.LocalAggregator.leakyrelu", "aggregator.LocalAggregator.leakyrelu", "aggregator.LocalAggregator.leakyrelu", "h.repeat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "hidden", ",", "adj", ",", "mask_item", "=", "None", ")", ":", "\n", "        ", "h", "=", "hidden", "\n", "batch_size", "=", "h", ".", "shape", "[", "0", "]", "\n", "N", "=", "h", ".", "shape", "[", "1", "]", "\n", "\n", "a_input", "=", "(", "h", ".", "repeat", "(", "1", ",", "1", ",", "N", ")", ".", "view", "(", "batch_size", ",", "N", "*", "N", ",", "self", ".", "dim", ")", "\n", "*", "h", ".", "repeat", "(", "1", ",", "N", ",", "1", ")", ")", ".", "view", "(", "batch_size", ",", "N", ",", "N", ",", "self", ".", "dim", ")", "\n", "\n", "e_0", "=", "torch", ".", "matmul", "(", "a_input", ",", "self", ".", "a_0", ")", "\n", "e_1", "=", "torch", ".", "matmul", "(", "a_input", ",", "self", ".", "a_1", ")", "\n", "e_2", "=", "torch", ".", "matmul", "(", "a_input", ",", "self", ".", "a_2", ")", "\n", "e_3", "=", "torch", ".", "matmul", "(", "a_input", ",", "self", ".", "a_3", ")", "\n", "\n", "e_0", "=", "self", ".", "leakyrelu", "(", "e_0", ")", ".", "squeeze", "(", "-", "1", ")", ".", "view", "(", "batch_size", ",", "N", ",", "N", ")", "\n", "e_1", "=", "self", ".", "leakyrelu", "(", "e_1", ")", ".", "squeeze", "(", "-", "1", ")", ".", "view", "(", "batch_size", ",", "N", ",", "N", ")", "\n", "e_2", "=", "self", ".", "leakyrelu", "(", "e_2", ")", ".", "squeeze", "(", "-", "1", ")", ".", "view", "(", "batch_size", ",", "N", ",", "N", ")", "\n", "e_3", "=", "self", ".", "leakyrelu", "(", "e_3", ")", ".", "squeeze", "(", "-", "1", ")", ".", "view", "(", "batch_size", ",", "N", ",", "N", ")", "\n", "\n", "mask", "=", "-", "9e15", "*", "torch", ".", "ones_like", "(", "e_0", ")", "\n", "alpha", "=", "torch", ".", "where", "(", "adj", ".", "eq", "(", "1", ")", ",", "e_0", ",", "mask", ")", "\n", "alpha", "=", "torch", ".", "where", "(", "adj", ".", "eq", "(", "2", ")", ",", "e_1", ",", "alpha", ")", "\n", "alpha", "=", "torch", ".", "where", "(", "adj", ".", "eq", "(", "3", ")", ",", "e_2", ",", "alpha", ")", "\n", "alpha", "=", "torch", ".", "where", "(", "adj", ".", "eq", "(", "4", ")", ",", "e_3", ",", "alpha", ")", "\n", "alpha", "=", "torch", ".", "softmax", "(", "alpha", ",", "dim", "=", "-", "1", ")", "\n", "\n", "output", "=", "torch", ".", "matmul", "(", "alpha", ",", "h", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.aggregator.GlobalAggregator.__init__": [[64, 74], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.Data.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "dropout", ",", "act", "=", "torch", ".", "relu", ",", "name", "=", "None", ")", ":", "\n", "        ", "super", "(", "GlobalAggregator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "act", "=", "act", "\n", "self", ".", "dim", "=", "dim", "\n", "\n", "self", ".", "w_1", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "dim", "+", "1", ",", "self", ".", "dim", ")", ")", "\n", "self", ".", "w_2", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "dim", ",", "1", ")", ")", "\n", "self", ".", "w_3", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "2", "*", "self", ".", "dim", ",", "self", ".", "dim", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.aggregator.GlobalAggregator.forward": [[75, 91], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.dropout", "torch.dropout", "torch.dropout", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "aggregator.GlobalAggregator.view", "aggregator.GlobalAggregator.act", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.softmax().unsqueeze", "torch.softmax().unsqueeze", "torch.softmax().unsqueeze", "torch.softmax().unsqueeze", "torch.softmax().unsqueeze", "torch.softmax().unsqueeze", "torch.softmax().unsqueeze", "torch.softmax().unsqueeze", "torch.softmax().unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "neighbor_weight.unsqueeze", "extra_vector.unsqueeze().repeat", "extra_vector.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "self_vectors", ",", "neighbor_vector", ",", "batch_size", ",", "masks", ",", "neighbor_weight", ",", "extra_vector", "=", "None", ")", ":", "\n", "        ", "if", "extra_vector", "is", "not", "None", ":", "\n", "            ", "alpha", "=", "torch", ".", "matmul", "(", "torch", ".", "cat", "(", "[", "extra_vector", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "neighbor_vector", ".", "shape", "[", "2", "]", ",", "1", ")", "*", "neighbor_vector", ",", "neighbor_weight", ".", "unsqueeze", "(", "-", "1", ")", "]", ",", "-", "1", ")", ",", "self", ".", "w_1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "alpha", "=", "F", ".", "leaky_relu", "(", "alpha", ",", "negative_slope", "=", "0.2", ")", "\n", "alpha", "=", "torch", ".", "matmul", "(", "alpha", ",", "self", ".", "w_2", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "alpha", "=", "torch", ".", "softmax", "(", "alpha", ",", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "neighbor_vector", "=", "torch", ".", "sum", "(", "alpha", "*", "neighbor_vector", ",", "dim", "=", "-", "2", ")", "\n", "", "else", ":", "\n", "            ", "neighbor_vector", "=", "torch", ".", "mean", "(", "neighbor_vector", ",", "dim", "=", "2", ")", "\n", "# self_vectors = F.dropout(self_vectors, 0.5, training=self.training)", "\n", "", "output", "=", "torch", ".", "cat", "(", "[", "self_vectors", ",", "neighbor_vector", "]", ",", "-", "1", ")", "\n", "output", "=", "F", ".", "dropout", "(", "output", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "output", "=", "torch", ".", "matmul", "(", "output", ",", "self", ".", "w_3", ")", "\n", "output", "=", "output", ".", "view", "(", "batch_size", ",", "-", "1", ",", "self", ".", "dim", ")", "\n", "output", "=", "self", ".", "act", "(", "output", ")", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.Data.__init__": [[54, 61], ["utils.handle_data", "numpy.asarray", "numpy.asarray", "numpy.asarray", "len"], "methods", ["home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.handle_data"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "train_len", "=", "None", ")", ":", "\n", "        ", "inputs", ",", "mask", ",", "max_len", "=", "handle_data", "(", "data", "[", "0", "]", ",", "train_len", ")", "\n", "self", ".", "inputs", "=", "np", ".", "asarray", "(", "inputs", ")", "\n", "self", ".", "targets", "=", "np", ".", "asarray", "(", "data", "[", "1", "]", ")", "\n", "self", ".", "mask", "=", "np", ".", "asarray", "(", "mask", ")", "\n", "self", ".", "length", "=", "len", "(", "data", "[", "0", "]", ")", "\n", "self", ".", "max_len", "=", "max_len", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.Data.__getitem__": [[62, 89], ["numpy.unique", "numpy.zeros", "numpy.arange", "numpy.unique.tolist", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len", "len", "numpy.where", "numpy.where", "numpy.where"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "u_input", ",", "mask", ",", "target", "=", "self", ".", "inputs", "[", "index", "]", ",", "self", ".", "mask", "[", "index", "]", ",", "self", ".", "targets", "[", "index", "]", "\n", "\n", "max_n_node", "=", "self", ".", "max_len", "\n", "node", "=", "np", ".", "unique", "(", "u_input", ")", "\n", "items", "=", "node", ".", "tolist", "(", ")", "+", "(", "max_n_node", "-", "len", "(", "node", ")", ")", "*", "[", "0", "]", "\n", "adj", "=", "np", ".", "zeros", "(", "(", "max_n_node", ",", "max_n_node", ")", ")", "\n", "for", "i", "in", "np", ".", "arange", "(", "len", "(", "u_input", ")", "-", "1", ")", ":", "\n", "            ", "u", "=", "np", ".", "where", "(", "node", "==", "u_input", "[", "i", "]", ")", "[", "0", "]", "[", "0", "]", "\n", "adj", "[", "u", "]", "[", "u", "]", "=", "1", "\n", "if", "u_input", "[", "i", "+", "1", "]", "==", "0", ":", "\n", "                ", "break", "\n", "", "v", "=", "np", ".", "where", "(", "node", "==", "u_input", "[", "i", "+", "1", "]", ")", "[", "0", "]", "[", "0", "]", "\n", "if", "u", "==", "v", "or", "adj", "[", "u", "]", "[", "v", "]", "==", "4", ":", "\n", "                ", "continue", "\n", "", "adj", "[", "v", "]", "[", "v", "]", "=", "1", "\n", "if", "adj", "[", "v", "]", "[", "u", "]", "==", "2", ":", "\n", "                ", "adj", "[", "u", "]", "[", "v", "]", "=", "4", "\n", "adj", "[", "v", "]", "[", "u", "]", "=", "4", "\n", "", "else", ":", "\n", "                ", "adj", "[", "u", "]", "[", "v", "]", "=", "2", "\n", "adj", "[", "v", "]", "[", "u", "]", "=", "3", "\n", "\n", "", "", "alias_inputs", "=", "[", "np", ".", "where", "(", "node", "==", "i", ")", "[", "0", "]", "[", "0", "]", "for", "i", "in", "u_input", "]", "\n", "\n", "return", "[", "torch", ".", "tensor", "(", "alias_inputs", ")", ",", "torch", ".", "tensor", "(", "adj", ")", ",", "torch", ".", "tensor", "(", "items", ")", ",", "\n", "torch", ".", "tensor", "(", "mask", ")", ",", "torch", ".", "tensor", "(", "target", ")", ",", "torch", ".", "tensor", "(", "u_input", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.Data.__len__": [[90, 92], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "", "", ""]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.split_validation": [[6, 18], ["len", "numpy.arange", "numpy.random.shuffle", "int", "numpy.round"], "function", ["None"], ["def", "split_validation", "(", "train_set", ",", "valid_portion", ")", ":", "\n", "    ", "train_set_x", ",", "train_set_y", "=", "train_set", "\n", "n_samples", "=", "len", "(", "train_set_x", ")", "\n", "sidx", "=", "np", ".", "arange", "(", "n_samples", ",", "dtype", "=", "'int32'", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "sidx", ")", "\n", "n_train", "=", "int", "(", "np", ".", "round", "(", "n_samples", "*", "(", "1.", "-", "valid_portion", ")", ")", ")", "\n", "valid_set_x", "=", "[", "train_set_x", "[", "s", "]", "for", "s", "in", "sidx", "[", "n_train", ":", "]", "]", "\n", "valid_set_y", "=", "[", "train_set_y", "[", "s", "]", "for", "s", "in", "sidx", "[", "n_train", ":", "]", "]", "\n", "train_set_x", "=", "[", "train_set_x", "[", "s", "]", "for", "s", "in", "sidx", "[", ":", "n_train", "]", "]", "\n", "train_set_y", "=", "[", "train_set_y", "[", "s", "]", "for", "s", "in", "sidx", "[", ":", "n_train", "]", "]", "\n", "\n", "return", "(", "train_set_x", ",", "train_set_y", ")", ",", "(", "valid_set_x", ",", "valid_set_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.handle_data": [[20, 32], ["len", "max", "list", "zip", "list", "reversed", "reversed"], "function", ["None"], ["", "def", "handle_data", "(", "inputData", ",", "train_len", "=", "None", ")", ":", "\n", "    ", "len_data", "=", "[", "len", "(", "nowData", ")", "for", "nowData", "in", "inputData", "]", "\n", "if", "train_len", "is", "None", ":", "\n", "        ", "max_len", "=", "max", "(", "len_data", ")", "\n", "", "else", ":", "\n", "        ", "max_len", "=", "train_len", "\n", "# reverse the sequence", "\n", "", "us_pois", "=", "[", "list", "(", "reversed", "(", "upois", ")", ")", "+", "[", "0", "]", "*", "(", "max_len", "-", "le", ")", "if", "le", "<", "max_len", "else", "list", "(", "reversed", "(", "upois", "[", "-", "max_len", ":", "]", ")", ")", "\n", "for", "upois", ",", "le", "in", "zip", "(", "inputData", ",", "len_data", ")", "]", "\n", "us_msks", "=", "[", "[", "1", "]", "*", "le", "+", "[", "0", "]", "*", "(", "max_len", "-", "le", ")", "if", "le", "<", "max_len", "else", "[", "1", "]", "*", "max_len", "\n", "for", "le", "in", "len_data", "]", "\n", "return", "us_pois", ",", "us_msks", ",", "max_len", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.None.utils.handle_adj": [[34, 51], ["numpy.zeros", "numpy.zeros", "range", "list", "list", "len", "numpy.array", "numpy.array", "numpy.random.choice", "numpy.random.choice", "list", "list", "range", "range"], "function", ["None"], ["", "def", "handle_adj", "(", "adj_dict", ",", "n_entity", ",", "sample_num", ",", "num_dict", "=", "None", ")", ":", "\n", "    ", "adj_entity", "=", "np", ".", "zeros", "(", "[", "n_entity", ",", "sample_num", "]", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "num_entity", "=", "np", ".", "zeros", "(", "[", "n_entity", ",", "sample_num", "]", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "for", "entity", "in", "range", "(", "1", ",", "n_entity", ")", ":", "\n", "        ", "neighbor", "=", "list", "(", "adj_dict", "[", "entity", "]", ")", "\n", "neighbor_weight", "=", "list", "(", "num_dict", "[", "entity", "]", ")", "\n", "n_neighbor", "=", "len", "(", "neighbor", ")", "\n", "if", "n_neighbor", "==", "0", ":", "\n", "            ", "continue", "\n", "", "if", "n_neighbor", ">=", "sample_num", ":", "\n", "            ", "sampled_indices", "=", "np", ".", "random", ".", "choice", "(", "list", "(", "range", "(", "n_neighbor", ")", ")", ",", "size", "=", "sample_num", ",", "replace", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "sampled_indices", "=", "np", ".", "random", ".", "choice", "(", "list", "(", "range", "(", "n_neighbor", ")", ")", ",", "size", "=", "sample_num", ",", "replace", "=", "True", ")", "\n", "", "adj_entity", "[", "entity", "]", "=", "np", ".", "array", "(", "[", "neighbor", "[", "i", "]", "for", "i", "in", "sampled_indices", "]", ")", "\n", "num_entity", "[", "entity", "]", "=", "np", ".", "array", "(", "[", "neighbor_weight", "[", "i", "]", "for", "i", "in", "sampled_indices", "]", ")", "\n", "\n", "", "return", "adj_entity", ",", "num_entity", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.datasets.process_tmall.obtian_tra": [[106, 129], ["print", "print", "len"], "function", ["None"], ["def", "obtian_tra", "(", ")", ":", "\n", "    ", "train_ids", "=", "[", "]", "\n", "train_seqs", "=", "[", "]", "\n", "train_dates", "=", "[", "]", "\n", "item_ctr", "=", "1", "\n", "for", "s", ",", "date", "in", "tra_sess", ":", "\n", "        ", "seq", "=", "sess_clicks", "[", "s", "]", "\n", "outseq", "=", "[", "]", "\n", "for", "i", "in", "seq", ":", "\n", "            ", "if", "i", "in", "item_dict", ":", "\n", "                ", "outseq", "+=", "[", "item_dict", "[", "i", "]", "]", "\n", "", "else", ":", "\n", "                ", "outseq", "+=", "[", "item_ctr", "]", "\n", "item_dict", "[", "i", "]", "=", "item_ctr", "\n", "item_ctr", "+=", "1", "\n", "", "", "if", "len", "(", "outseq", ")", "<", "2", ":", "# Doesn't occur", "\n", "            ", "continue", "\n", "", "train_ids", "+=", "[", "s", "]", "\n", "train_dates", "+=", "[", "date", "]", "\n", "train_seqs", "+=", "[", "outseq", "]", "\n", "", "print", "(", "'item_ctr'", ")", "\n", "print", "(", "item_ctr", ")", "# 43098, 37484", "\n", "return", "train_ids", ",", "train_dates", ",", "train_seqs", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.datasets.process_tmall.obtian_tes": [[131, 147], ["len"], "function", ["None"], ["", "def", "obtian_tes", "(", ")", ":", "\n", "    ", "test_ids", "=", "[", "]", "\n", "test_seqs", "=", "[", "]", "\n", "test_dates", "=", "[", "]", "\n", "for", "s", ",", "date", "in", "tes_sess", ":", "\n", "        ", "seq", "=", "sess_clicks", "[", "s", "]", "\n", "outseq", "=", "[", "]", "\n", "for", "i", "in", "seq", ":", "\n", "            ", "if", "i", "in", "item_dict", ":", "\n", "                ", "outseq", "+=", "[", "item_dict", "[", "i", "]", "]", "\n", "", "", "if", "len", "(", "outseq", ")", "<", "2", ":", "\n", "            ", "continue", "\n", "", "test_ids", "+=", "[", "s", "]", "\n", "test_dates", "+=", "[", "date", "]", "\n", "test_seqs", "+=", "[", "outseq", "]", "\n", "", "return", "test_ids", ",", "test_dates", ",", "test_seqs", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.datasets.process_tmall.process_seqs": [[151, 164], ["zip", "range", "range", "len", "len"], "function", ["None"], ["def", "process_seqs", "(", "iseqs", ",", "idates", ")", ":", "\n", "    ", "out_seqs", "=", "[", "]", "\n", "out_dates", "=", "[", "]", "\n", "labs", "=", "[", "]", "\n", "ids", "=", "[", "]", "\n", "for", "id", ",", "seq", ",", "date", "in", "zip", "(", "range", "(", "len", "(", "iseqs", ")", ")", ",", "iseqs", ",", "idates", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "1", ",", "len", "(", "seq", ")", ")", ":", "\n", "            ", "tar", "=", "seq", "[", "-", "i", "]", "\n", "labs", "+=", "[", "tar", "]", "\n", "out_seqs", "+=", "[", "seq", "[", ":", "-", "i", "]", "]", "\n", "out_dates", "+=", "[", "date", "]", "\n", "ids", "+=", "[", "id", "]", "\n", "", "", "return", "out_seqs", ",", "out_dates", ",", "labs", ",", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.datasets.process_nowplaying.obtian_tra": [[100, 123], ["print", "print", "len"], "function", ["None"], ["def", "obtian_tra", "(", ")", ":", "\n", "    ", "train_ids", "=", "[", "]", "\n", "train_seqs", "=", "[", "]", "\n", "train_dates", "=", "[", "]", "\n", "item_ctr", "=", "1", "\n", "for", "s", ",", "date", "in", "tra_sess", ":", "\n", "        ", "seq", "=", "sess_clicks", "[", "s", "]", "\n", "outseq", "=", "[", "]", "\n", "for", "i", "in", "seq", ":", "\n", "            ", "if", "i", "in", "item_dict", ":", "\n", "                ", "outseq", "+=", "[", "item_dict", "[", "i", "]", "]", "\n", "", "else", ":", "\n", "                ", "outseq", "+=", "[", "item_ctr", "]", "\n", "item_dict", "[", "i", "]", "=", "item_ctr", "\n", "item_ctr", "+=", "1", "\n", "", "", "if", "len", "(", "outseq", ")", "<", "2", ":", "# Doesn't occur", "\n", "            ", "continue", "\n", "", "train_ids", "+=", "[", "s", "]", "\n", "train_dates", "+=", "[", "date", "]", "\n", "train_seqs", "+=", "[", "outseq", "]", "\n", "", "print", "(", "'item_ctr'", ")", "\n", "print", "(", "item_ctr", ")", "# 43098, 37484", "\n", "return", "train_ids", ",", "train_dates", ",", "train_seqs", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.datasets.process_nowplaying.obtian_tes": [[126, 142], ["len"], "function", ["None"], ["", "def", "obtian_tes", "(", ")", ":", "\n", "    ", "test_ids", "=", "[", "]", "\n", "test_seqs", "=", "[", "]", "\n", "test_dates", "=", "[", "]", "\n", "for", "s", ",", "date", "in", "tes_sess", ":", "\n", "        ", "seq", "=", "sess_clicks", "[", "s", "]", "\n", "outseq", "=", "[", "]", "\n", "for", "i", "in", "seq", ":", "\n", "            ", "if", "i", "in", "item_dict", ":", "\n", "                ", "outseq", "+=", "[", "item_dict", "[", "i", "]", "]", "\n", "", "", "if", "len", "(", "outseq", ")", "<", "2", ":", "\n", "            ", "continue", "\n", "", "test_ids", "+=", "[", "s", "]", "\n", "test_dates", "+=", "[", "date", "]", "\n", "test_seqs", "+=", "[", "outseq", "]", "\n", "", "return", "test_ids", ",", "test_dates", ",", "test_seqs", "\n", "\n"]], "home.repos.pwc.inspect_result.CCIIPLab_GCE-GNN.datasets.process_nowplaying.process_seqs": [[148, 161], ["zip", "range", "range", "len", "len"], "function", ["None"], ["def", "process_seqs", "(", "iseqs", ",", "idates", ")", ":", "\n", "    ", "out_seqs", "=", "[", "]", "\n", "out_dates", "=", "[", "]", "\n", "labs", "=", "[", "]", "\n", "ids", "=", "[", "]", "\n", "for", "id", ",", "seq", ",", "date", "in", "zip", "(", "range", "(", "len", "(", "iseqs", ")", ")", ",", "iseqs", ",", "idates", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "1", ",", "len", "(", "seq", ")", ")", ":", "\n", "            ", "tar", "=", "seq", "[", "-", "i", "]", "\n", "labs", "+=", "[", "tar", "]", "\n", "out_seqs", "+=", "[", "seq", "[", ":", "-", "i", "]", "]", "\n", "out_dates", "+=", "[", "date", "]", "\n", "ids", "+=", "[", "id", "]", "\n", "", "", "return", "out_seqs", ",", "out_dates", ",", "labs", ",", "ids", "\n", "\n"]]}