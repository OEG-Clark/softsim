{"home.repos.pwc.inspect_result.bhigy_textual-supervision.None.evaluate_net.get_score_fn_speech_transcriber": [[18, 26], ["score_fn", "platalea.experiments.config.args.use_beam_decoding", "platalea.experiments.config.args.use_beam_decoding"], "function", ["None"], ["def", "get_score_fn_speech_transcriber", "(", "is_slt", ",", "use_beam_decoding", ")", ":", "\n", "    ", "if", "is_slt", ":", "\n", "        ", "score_fn", "=", "platalea", ".", "score", ".", "score_slt", "\n", "", "else", ":", "\n", "        ", "score_fn", "=", "platalea", ".", "score", ".", "score_asr", "\n", "", "if", "use_beam_decoding", ":", "\n", "        ", "score_fn", "=", "lambda", "x", ",", "y", ",", "score_fn", "=", "score_fn", ":", "score_fn", "(", "x", ",", "y", ",", "beam_size", "=", "10", ")", "\n", "", "return", "score_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.evaluate_net.get_evaluation_tasks": [[28, 51], ["type", "dict", "type", "dict", "type", "dict", "type", "evaluate_net.get_score_fn_speech_transcriber", "data.dataset.is_slt", "dict", "type", "evaluate_net.get_score_fn_speech_transcriber", "data.dataset.is_slt", "dict", "dict", "type", "dict", "dict"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.evaluate_net.get_score_fn_speech_transcriber", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.evaluate_net.get_score_fn_speech_transcriber"], ["", "def", "get_evaluation_tasks", "(", "net", ")", ":", "\n", "    ", "if", "type", "(", "net", ")", "==", "SpeechImage", ":", "\n", "        ", "return", "[", "dict", "(", "net", "=", "net", ",", "score_fn", "=", "platalea", ".", "score", ".", "score", ")", "]", "\n", "", "elif", "type", "(", "net", ")", "==", "TextImage", ":", "\n", "        ", "return", "[", "dict", "(", "net", "=", "net", ",", "score_fn", "=", "platalea", ".", "score", ".", "score_text_image", ")", "]", "\n", "", "elif", "type", "(", "net", ")", "==", "SpeechText", ":", "\n", "        ", "return", "[", "dict", "(", "net", "=", "net", ",", "score_fn", "=", "platalea", ".", "score", ".", "score_speech_text", ")", "]", "\n", "", "elif", "type", "(", "net", ")", "==", "SpeechTranscriber", ":", "\n", "        ", "score_fn", "=", "get_score_fn_speech_transcriber", "(", "data", ".", "dataset", ".", "is_slt", "(", ")", ",", "\n", "args", ".", "use_beam_decoding", ")", "\n", "return", "[", "dict", "(", "net", "=", "net", ",", "score_fn", "=", "score_fn", ")", "]", "\n", "", "elif", "type", "(", "net", ")", "==", "MTLNetASR", ":", "\n", "        ", "score_fn", "=", "get_score_fn_speech_transcriber", "(", "data", ".", "dataset", ".", "is_slt", "(", ")", ",", "\n", "args", ".", "use_beam_decoding", ")", "\n", "return", "[", "dict", "(", "name", "=", "'SI'", ",", "net", "=", "net", ".", "SpeechImage", ",", "\n", "score_fn", "=", "platalea", ".", "score", ".", "score", ")", ",", "\n", "dict", "(", "name", "=", "'ASR'", ",", "net", "=", "net", ".", "SpeechTranscriber", ",", "\n", "score_fn", "=", "score_fn", ")", "]", "\n", "", "elif", "type", "(", "net", ")", "==", "MTLNetSpeechText", ":", "\n", "        ", "return", "[", "dict", "(", "name", "=", "'SI'", ",", "net", "=", "net", ".", "SpeechImage", ",", "\n", "score_fn", "=", "platalea", ".", "score", ".", "score", ")", ",", "\n", "dict", "(", "name", "=", "'ST'", ",", "net", "=", "net", ".", "SpeechText", ",", "\n", "score_fn", "=", "platalea", ".", "score", ".", "score_speech_text", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_results": [[15, 27], ["re.compile", "pathlib.Path().iterdir", "re.compile.match", "pathlib.Path", "str", "platalea.utils.get_best_score.get_best_score", "comp_ptrn.match.groups", "tmp_res.setdefault.setdefault", "comp_ptrn.match.groups", "results.path2type", "results.path2type", "results.path2type"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type"], ["def", "extract_matched_results", "(", "root", ",", "pattern", ",", "path2type_fn", ")", ":", "\n", "    ", "comp_ptrn", "=", "re", ".", "compile", "(", "pattern", ")", "\n", "res", "=", "{", "}", "\n", "for", "d", "in", "Path", "(", "root", ")", ".", "iterdir", "(", ")", ":", "\n", "        ", "matched", "=", "comp_ptrn", ".", "match", "(", "str", "(", "d", ".", "name", ")", ")", "\n", "if", "matched", "is", "not", "None", ":", "\n", "            ", "tmp_res", "=", "res", "\n", "for", "m", "in", "matched", ".", "groups", "(", ")", "[", ":", "-", "1", "]", ":", "\n", "                ", "tmp_res", "=", "tmp_res", ".", "setdefault", "(", "m", ",", "{", "}", ")", "\n", "", "score", "=", "get_best_score", "(", "d", "/", "'result.json'", ",", "path2type_fn", "(", "d", ")", ")", "\n", "tmp_res", "[", "matched", ".", "groups", "(", ")", "[", "-", "1", "]", "]", "=", "score", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_metric": [[29, 43], ["re.compile", "pathlib.Path().iterdir", "results.get_metric_accessor", "re.compile.match", "pathlib.Path", "str", "platalea.utils.get_best_score.get_best_full", "get_metric_accessor.", "comp_ptrn.match.groups", "tmp_res.setdefault.setdefault", "comp_ptrn.match.groups", "results.path2type", "results.path2type", "results.path2type_jp", "results.path2type", "results.path2type", "results.path2type_jp", "results.path2type"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.get_metric_accessor", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type_jp", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type_jp", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type"], ["", "def", "extract_matched_metric", "(", "root", ",", "pattern", ",", "path2type_fn", ",", "metric", ")", ":", "\n", "    ", "comp_ptrn", "=", "re", ".", "compile", "(", "pattern", ")", "\n", "res", "=", "{", "}", "\n", "for", "d", "in", "Path", "(", "root", ")", ".", "iterdir", "(", ")", ":", "\n", "        ", "etype", "=", "path2type_fn", "(", "d", ")", "\n", "metric_accessor_fn", "=", "get_metric_accessor", "(", "etype", ",", "metric", ")", "\n", "matched", "=", "comp_ptrn", ".", "match", "(", "str", "(", "d", ".", "name", ")", ")", "\n", "if", "matched", "is", "not", "None", ":", "\n", "            ", "tmp_res", "=", "res", "\n", "for", "m", "in", "matched", ".", "groups", "(", ")", "[", ":", "-", "1", "]", ":", "\n", "                ", "tmp_res", "=", "tmp_res", ".", "setdefault", "(", "m", ",", "{", "}", ")", "\n", "", "score", "=", "get_best_full", "(", "d", "/", "'result.json'", ",", "etype", ")", "\n", "tmp_res", "[", "matched", ".", "groups", "(", ")", "[", "-", "1", "]", "]", "=", "metric_accessor_fn", "(", "score", ")", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results": [[45, 60], ["numpy.zeros", "enumerate", "enumerate", "len", "len", "len", "enumerate", "sorted", "platalea.utils.get_best_score.get_best_score", "pathlib.Path().glob", "len", "ValueError", "msg.format", "pathlib.Path", "len", "results.name2type", "results.name2type_jp", "results.name2type", "results.name2type_jp"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.name2type", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.name2type_jp", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.name2type", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.name2type_jp"], ["", "def", "extract_results", "(", "root", ",", "expnames", ",", "ds_factors", ",", "replids", ",", "name2type_fn", ",", "\n", "tag", "=", "''", ")", ":", "\n", "    ", "res", "=", "np", ".", "zeros", "(", "[", "len", "(", "expnames", ")", ",", "len", "(", "ds_factors", ")", ",", "len", "(", "replids", ")", "]", ")", "\n", "for", "i", ",", "ename", "in", "enumerate", "(", "expnames", ")", ":", "\n", "        ", "etype", "=", "name2type_fn", "(", "ename", ")", "\n", "for", "j", ",", "ds", "in", "enumerate", "(", "ds_factors", ")", ":", "\n", "            ", "for", "k", ",", "rid", "in", "enumerate", "(", "replids", ")", ":", "\n", "                ", "pattern", "=", "'{}{}-ds{}-{}-*'", ".", "format", "(", "ename", ",", "tag", ",", "ds", ",", "rid", ")", "\n", "paths", "=", "sorted", "(", "Path", "(", "root", ")", ".", "glob", "(", "pattern", ")", ")", "\n", "if", "len", "(", "paths", ")", "!=", "1", ":", "\n", "                    ", "msg", "=", "'Pattern {} matches {} folders'", "\n", "raise", "ValueError", "(", "msg", ".", "format", "(", "pattern", ",", "len", "(", "paths", ")", ")", ")", "\n", "", "score", "=", "get_best_score", "(", "paths", "[", "0", "]", "/", "'result.json'", ",", "etype", ")", "\n", "res", "[", "i", ",", "j", ",", "k", "]", "=", "score", "\n", "", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_metric": [[62, 78], ["numpy.zeros", "enumerate", "results.get_metric_accessor", "enumerate", "len", "len", "len", "enumerate", "sorted", "platalea.utils.get_best_score.get_best_full", "get_metric_accessor.", "pathlib.Path().glob", "len", "ValueError", "msg.format", "pathlib.Path", "len", "results.path2type", "results.path2type_jp"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.get_metric_accessor", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type_jp"], ["", "def", "extract_metric", "(", "root", ",", "expnames", ",", "ds_factors", ",", "replids", ",", "name2type_fn", ",", "\n", "tag", "=", "''", ",", "metric", "=", "'R@10'", ")", ":", "\n", "    ", "res", "=", "np", ".", "zeros", "(", "[", "len", "(", "expnames", ")", ",", "len", "(", "ds_factors", ")", ",", "len", "(", "replids", ")", "]", ")", "\n", "for", "i", ",", "ename", "in", "enumerate", "(", "expnames", ")", ":", "\n", "        ", "etype", "=", "name2type_fn", "(", "ename", ")", "\n", "metric_accessor_fn", "=", "get_metric_accessor", "(", "etype", ",", "metric", ")", "\n", "for", "j", ",", "ds", "in", "enumerate", "(", "ds_factors", ")", ":", "\n", "            ", "for", "k", ",", "rid", "in", "enumerate", "(", "replids", ")", ":", "\n", "                ", "pattern", "=", "'{}{}-ds{}-{}-*'", ".", "format", "(", "ename", ",", "tag", ",", "ds", ",", "rid", ")", "\n", "paths", "=", "sorted", "(", "Path", "(", "root", ")", ".", "glob", "(", "pattern", ")", ")", "\n", "if", "len", "(", "paths", ")", "!=", "1", ":", "\n", "                    ", "msg", "=", "'Pattern {} matches {} folders'", "\n", "raise", "ValueError", "(", "msg", ".", "format", "(", "pattern", ",", "len", "(", "paths", ")", ")", ")", "\n", "", "scores", "=", "get_best_full", "(", "paths", "[", "0", "]", "/", "'result.json'", ",", "etype", ")", "\n", "res", "[", "i", ",", "j", ",", "k", "]", "=", "metric_accessor_fn", "(", "scores", ")", "\n", "", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.name2type": [[80, 85], ["expname.split"], "function", ["None"], ["", "def", "name2type", "(", "expname", ")", ":", "\n", "    ", "expname", "=", "expname", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "exptype", "=", "{", "'asr'", ":", "'asr'", ",", "'basic'", ":", "'retrieval'", ",", "'mtl'", ":", "'mtl'", ",", "\n", "'pip'", ":", "'retrieval'", ",", "'text'", ":", "'retrieval'", "}", "\n", "return", "exptype", "[", "expname", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type": [[87, 90], ["results.name2type", "pathlib.Path().name.split", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.name2type"], ["", "def", "path2type", "(", "path", ")", ":", "\n", "    ", "expname", "=", "Path", "(", "path", ")", ".", "name", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "return", "name2type", "(", "expname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.name2type_jp": [[92, 97], ["expname.split"], "function", ["None"], ["", "def", "name2type_jp", "(", "expname", ")", ":", "\n", "    ", "expname", "=", "expname", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "exptype", "=", "{", "'asr'", ":", "'slt'", ",", "'basic'", ":", "'retrieval'", ",", "'mtl'", ":", "'mtl'", ",", "\n", "'pip'", ":", "'retrieval'", ",", "'text'", ":", "'retrieval'", "}", "\n", "return", "exptype", "[", "expname", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.path2type_jp": [[99, 102], ["results.name2type_jp", "pathlib.Path().name.split", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.name2type_jp"], ["", "def", "path2type_jp", "(", "path", ")", ":", "\n", "    ", "expname", "=", "Path", "(", "path", ")", ".", "name", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "return", "name2type_jp", "(", "expname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np": [[104, 109], ["type", "results.dict2np", "res.values"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np"], ["", "def", "dict2np", "(", "res", ")", ":", "\n", "    ", "if", "type", "(", "res", ")", "==", "dict", ":", "\n", "        ", "return", "[", "dict2np", "(", "v", ")", "for", "v", "in", "res", ".", "values", "(", ")", "]", "\n", "", "else", ":", "\n", "        ", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.plot_downsampling": [[111, 140], ["results.extract_matched_results", "numpy.mean", "results.extract_results", "numpy.mean", "matplotlib.subplots", "ax.set_xlabel", "matplotlib.xticks", "ax.set_ylabel", "ax.plot", "range", "ax.legend", "fig.tight_layout", "matplotlib.savefig", "results.dict2np", "str().zfill", "range", "len", "ax.plot", "len", "len", "str"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_results", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np"], ["", "", "def", "plot_downsampling", "(", "fname", "=", "'downsampling_text.pdf'", ")", ":", "\n", "# Extracting results", "\n", "    ", "basic_default_results", "=", "extract_matched_results", "(", "\n", "'runs'", ",", "'(basic-default)-([abc])-.*'", ",", "path2type", ")", "\n", "basic_default_score", "=", "np", ".", "mean", "(", "dict2np", "(", "basic_default_results", ")", ")", "\n", "expnames", "=", "[", "'asr'", ",", "'text-image'", ",", "'pip-ind'", ",", "'pip-seq'", ",", "'mtl-asr'", ",", "\n", "'mtl-st'", "]", "\n", "exp_legend", "=", "[", "'asr'", ",", "'text-image'", ",", "'pipe-ind'", ",", "'pipe-seq'", ",", "\n", "'mtl-transcribe'", ",", "'mtl-match'", "]", "\n", "ds_factors", "=", "[", "1", ",", "3", ",", "9", ",", "27", ",", "81", ",", "243", "]", "\n", "ds_factors_text", "=", "[", "str", "(", "i", ")", ".", "zfill", "(", "3", ")", "for", "i", "in", "ds_factors", "]", "\n", "replids", "=", "[", "'a'", ",", "'b'", ",", "'c'", "]", "\n", "res", "=", "extract_results", "(", "'runs'", ",", "expnames", ",", "ds_factors_text", ",", "replids", ",", "\n", "name2type", ")", "\n", "res", "=", "np", ".", "mean", "(", "res", ",", "axis", "=", "2", ")", "\n", "\n", "# Plotting", "\n", "xticklabels", "=", "[", "'34 h'", ",", "'11.3 h'", ",", "'3.8 h'", ",", "'1.3 h'", ",", "'25 mins'", ",", "'8 mins'", "]", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "ax", ".", "set_xlabel", "(", "'Amount of transcribed data available for training (total speech duration)'", ")", "\n", "plt", ".", "xticks", "(", "range", "(", "len", "(", "xticklabels", ")", ")", ",", "xticklabels", ",", "size", "=", "'small'", ")", "\n", "ax", ".", "set_ylabel", "(", "'R@10'", ")", "\n", "ax", ".", "plot", "(", "[", "basic_default_score", "]", "*", "len", "(", "ds_factors", ")", ",", "'r--'", ",", "\n", "label", "=", "'speech-image'", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "expnames", ")", ")", ":", "\n", "        ", "ax", ".", "plot", "(", "res", "[", "i", ",", ":", "]", ",", "'.-'", ",", "label", "=", "exp_legend", "[", "i", "]", ")", "\n", "", "ax", ".", "legend", "(", ")", "\n", "fig", ".", "tight_layout", "(", ")", "# otherwise the right y-label is slightly clipped", "\n", "plt", ".", "savefig", "(", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.plot_downsampling_jp": [[142, 171], ["results.extract_matched_results", "numpy.mean", "results.extract_results", "numpy.mean", "matplotlib.subplots", "ax.set_xlabel", "matplotlib.xticks", "ax.set_ylabel", "ax.plot", "range", "ax.legend", "fig.tight_layout", "matplotlib.savefig", "results.dict2np", "str().zfill", "range", "len", "ax.plot", "len", "len", "str"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_results", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np"], ["", "def", "plot_downsampling_jp", "(", "fname", "=", "'downsampling_text_jp.pdf'", ")", ":", "\n", "# Extracting results", "\n", "    ", "basic_default_results", "=", "extract_matched_results", "(", "\n", "'runs'", ",", "'(basic-default)-jp-([abc])-.*'", ",", "path2type", ")", "\n", "basic_default_score", "=", "np", ".", "mean", "(", "dict2np", "(", "basic_default_results", ")", ")", "\n", "expnames", "=", "[", "'asr'", ",", "'text-image'", ",", "'pip-ind'", ",", "'pip-seq'", ",", "'mtl-asr'", ",", "\n", "'mtl-st'", "]", "\n", "exp_legend", "=", "[", "'slt'", ",", "'text-image'", ",", "'pipe-ind'", ",", "'pipe-seq'", ",", "\n", "'mtl-translate'", ",", "'mtl-match'", "]", "\n", "ds_factors", "=", "[", "1", ",", "3", ",", "9", ",", "27", ",", "81", ",", "243", "]", "\n", "ds_factors_text", "=", "[", "str", "(", "i", ")", ".", "zfill", "(", "3", ")", "for", "i", "in", "ds_factors", "]", "\n", "replids", "=", "[", "'a'", ",", "'b'", ",", "'c'", "]", "\n", "res", "=", "extract_results", "(", "'runs'", ",", "expnames", ",", "ds_factors_text", ",", "replids", ",", "\n", "name2type_jp", ",", "'-jp'", ")", "\n", "res", "=", "np", ".", "mean", "(", "res", ",", "axis", "=", "2", ")", "\n", "\n", "# Plotting", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "xticklabels", "=", "[", "'13.6 h'", ",", "'4.5 h'", ",", "'1.5 h'", ",", "'30 mins'", ",", "'10 mins'", ",", "'3 mins'", "]", "\n", "ax", ".", "set_xlabel", "(", "'Amount of translated data available for training (total speech duration)'", ")", "\n", "plt", ".", "xticks", "(", "range", "(", "len", "(", "xticklabels", ")", ")", ",", "xticklabels", ",", "size", "=", "'small'", ")", "\n", "ax", ".", "set_ylabel", "(", "'R@10'", ")", "\n", "ax", ".", "plot", "(", "[", "basic_default_score", "]", "*", "len", "(", "ds_factors", ")", ",", "'r--'", ",", "\n", "label", "=", "'speech-image'", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "expnames", ")", ")", ":", "\n", "        ", "ax", ".", "plot", "(", "res", "[", "i", ",", ":", "]", ",", "'.-'", ",", "label", "=", "exp_legend", "[", "i", "]", ")", "\n", "", "ax", ".", "legend", "(", ")", "\n", "fig", ".", "tight_layout", "(", ")", "# otherwise the right y-label is slightly clipped", "\n", "plt", ".", "savefig", "(", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results_beam_decoding": [[173, 189], ["numpy.zeros", "enumerate", "numpy.mean", "str().zfill", "enumerate", "len", "len", "sorted", "platalea.utils.get_best_score.get_best_score", "str", "pathlib.Path().glob", "len", "ValueError", "msg.format", "pathlib.Path", "len"], "function", ["None"], ["", "def", "extract_results_beam_decoding", "(", "root", ",", "exp_prefix", ",", "exptype", ")", ":", "\n", "    ", "ds_factors", "=", "[", "1", ",", "3", ",", "9", ",", "27", ",", "81", ",", "243", "]", "\n", "replids", "=", "[", "'a'", ",", "'b'", ",", "'c'", "]", "\n", "res", "=", "np", ".", "zeros", "(", "[", "len", "(", "ds_factors", ")", ",", "len", "(", "replids", ")", "]", ")", "\n", "for", "i", ",", "df", "in", "enumerate", "(", "ds_factors", ")", ":", "\n", "        ", "df_text", "=", "str", "(", "df", ")", ".", "zfill", "(", "3", ")", "\n", "for", "j", ",", "rid", "in", "enumerate", "(", "replids", ")", ":", "\n", "            ", "pattern", "=", "'{}-ds{}-{}-*'", ".", "format", "(", "exp_prefix", ",", "df_text", ",", "rid", ")", "\n", "paths", "=", "sorted", "(", "Path", "(", "root", ")", ".", "glob", "(", "pattern", ")", ")", "\n", "if", "len", "(", "paths", ")", "!=", "1", ":", "\n", "                ", "msg", "=", "'Pattern {} matches {} folders'", "\n", "raise", "ValueError", "(", "msg", ".", "format", "(", "pattern", ",", "len", "(", "paths", ")", ")", ")", "\n", "", "score", "=", "get_best_score", "(", "paths", "[", "0", "]", "/", "'result_beam.json'", ",", "exptype", ")", "\n", "res", "[", "i", ",", "j", "]", "=", "score", "\n", "", "", "res", "=", "np", ".", "mean", "(", "res", ",", "axis", "=", "1", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.get_metric_accessor": [[191, 206], ["None"], "function", ["None"], ["", "def", "get_metric_accessor", "(", "experiment_type", ",", "metric", ")", ":", "\n", "    ", "''' Returns an accessor function that accesses the required metric ('R@1',\n    'R@5', 'R@10' or 'Medr') given a record of all metrics for the specified\n    experiment type ('retrival' or 'mtl') '''", "\n", "if", "metric", "in", "[", "'R@1'", ",", "'R@5'", ",", "'R@10'", "]", ":", "\n", "        ", "n", "=", "metric", "[", "2", ":", "]", "\n", "if", "experiment_type", "==", "'retrieval'", ":", "\n", "            ", "return", "lambda", "x", ",", "n", "=", "n", ":", "x", "[", "'recall'", "]", "[", "n", "]", "\n", "", "elif", "experiment_type", "==", "'mtl'", ":", "\n", "            ", "return", "lambda", "x", ",", "n", "=", "n", ":", "x", "[", "'SI'", "]", "[", "'recall'", "]", "[", "n", "]", "\n", "", "", "else", ":", "\n", "        ", "if", "experiment_type", "==", "'retrieval'", ":", "\n", "            ", "return", "lambda", "x", ":", "x", "[", "'medr'", "]", "\n", "", "elif", "experiment_type", "==", "'mtl'", ":", "\n", "            ", "return", "lambda", "x", ":", "x", "[", "'SI'", "]", "[", "'medr'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results_test_set": [[208, 227], ["numpy.zeros", "enumerate", "numpy.mean", "results.get_metric_accessor", "enumerate", "len", "len", "sorted", "platalea.utils.get_best_score.get_best_full", "get_metric_accessor.", "pathlib.Path().glob", "len", "ValueError", "msg.format", "pathlib.Path", "len"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.get_metric_accessor"], ["", "", "", "def", "extract_results_test_set", "(", "root", ",", "tag", "=", "''", ",", "metric", "=", "'R@10'", ")", ":", "\n", "    ", "if", "tag", "!=", "''", ":", "\n", "        ", "tag", "=", "'-'", "+", "tag", "\n", "", "exp_names", "=", "[", "'pip-seq'", ",", "'mtl-asr'", "]", "\n", "exp_types", "=", "[", "'retrieval'", ",", "'mtl'", "]", "\n", "replids", "=", "[", "'a'", ",", "'b'", ",", "'c'", "]", "\n", "res", "=", "np", ".", "zeros", "(", "[", "len", "(", "exp_names", ")", ",", "len", "(", "replids", ")", "]", ")", "\n", "for", "i", ",", "exp", "in", "enumerate", "(", "exp_names", ")", ":", "\n", "        ", "metric_accessor_fn", "=", "get_metric_accessor", "(", "exp_types", "[", "i", "]", ",", "metric", ")", "\n", "for", "j", ",", "rid", "in", "enumerate", "(", "replids", ")", ":", "\n", "            ", "pattern", "=", "'{}{}-ds001-{}-*'", ".", "format", "(", "exp", ",", "tag", ",", "rid", ")", "\n", "paths", "=", "sorted", "(", "Path", "(", "root", ")", ".", "glob", "(", "pattern", ")", ")", "\n", "if", "len", "(", "paths", ")", "!=", "1", ":", "\n", "                ", "msg", "=", "'Pattern {} matches {} folders'", "\n", "raise", "ValueError", "(", "msg", ".", "format", "(", "pattern", ",", "len", "(", "paths", ")", ")", ")", "\n", "", "scores", "=", "get_best_full", "(", "paths", "[", "0", "]", "/", "'result_test.json'", ",", "exp_types", "[", "i", "]", ")", "\n", "res", "[", "i", ",", "j", "]", "=", "metric_accessor_fn", "(", "scores", ")", "\n", "", "", "res", "=", "np", ".", "mean", "(", "res", ",", "axis", "=", "1", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results_comparison": [[229, 246], ["numpy.zeros", "enumerate", "numpy.mean", "experiments.items", "enumerate", "len", "len", "sorted", "platalea.utils.get_best_score.get_best_score", "experiments.keys", "pathlib.Path().glob", "len", "ValueError", "msg.format", "pathlib.Path", "len"], "function", ["None"], ["", "def", "extract_results_comparison", "(", "root", ")", ":", "\n", "    ", "experiments", "=", "{", "'basic-default'", ":", "'retrieval'", ",", "'text-image'", ":", "'retrieval'", ",", "\n", "'pip-ind'", ":", "'retrieval'", ",", "'pip-seq'", ":", "'retrieval'", ",", "\n", "'mtl-asr'", ":", "'mtl'", ",", "'mtl-st'", ":", "'mtl'", "}", "\n", "replids", "=", "[", "'a'", ",", "'b'", ",", "'c'", "]", "\n", "res", "=", "np", ".", "zeros", "(", "[", "len", "(", "experiments", ".", "keys", "(", ")", ")", ",", "len", "(", "replids", ")", "]", ")", "\n", "for", "i", ",", "exp", "in", "enumerate", "(", "experiments", ".", "items", "(", ")", ")", ":", "\n", "        ", "for", "j", ",", "rid", "in", "enumerate", "(", "replids", ")", ":", "\n", "            ", "pattern", "=", "'{}-comp-{}-*'", ".", "format", "(", "exp", "[", "0", "]", ",", "rid", ")", "\n", "paths", "=", "sorted", "(", "Path", "(", "root", ")", ".", "glob", "(", "pattern", ")", ")", "\n", "if", "len", "(", "paths", ")", "!=", "1", ":", "\n", "                ", "msg", "=", "'Pattern {} matches {} folders'", "\n", "raise", "ValueError", "(", "msg", ".", "format", "(", "pattern", ",", "len", "(", "paths", ")", ")", ")", "\n", "", "score", "=", "get_best_score", "(", "paths", "[", "0", "]", "/", "'result.json'", ",", "exp", "[", "1", "]", ")", "\n", "res", "[", "i", ",", "j", "]", "=", "score", "\n", "", "", "res", "=", "np", ".", "mean", "(", "res", ",", "axis", "=", "1", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_metric_baselines": [[248, 269], ["results.extract_matched_metric", "numpy.mean", "results.extract_matched_metric", "numpy.mean", "results.extract_matched_metric", "numpy.mean", "results.extract_matched_metric", "numpy.mean", "results.extract_matched_metric", "numpy.mean", "results.extract_matched_metric", "numpy.mean", "numpy.array", "results.dict2np", "results.dict2np", "results.dict2np", "results.dict2np", "results.dict2np", "results.dict2np"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_metric", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_metric", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_metric", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_metric", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_metric", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_metric", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np"], ["", "def", "extract_metric_baselines", "(", "metric", "=", "'R@10'", ")", ":", "\n", "    ", "si_results_en", "=", "extract_matched_metric", "(", "\n", "'runs'", ",", "'(basic-default)-([abc])-.*'", ",", "path2type", ",", "metric", ")", "\n", "si_score_en", "=", "np", ".", "mean", "(", "dict2np", "(", "si_results_en", ")", ")", "\n", "si_results_en_reduced", "=", "extract_matched_metric", "(", "\n", "'runs'", ",", "'(basic-default)-comp-([abc])-.*'", ",", "path2type", ",", "metric", ")", "\n", "si_score_en_reduced", "=", "np", ".", "mean", "(", "dict2np", "(", "si_results_en_reduced", ")", ")", "\n", "si_results_jp", "=", "extract_matched_metric", "(", "\n", "'runs'", ",", "'(basic-default)-jp-([abc])-.*'", ",", "path2type_jp", ",", "metric", ")", "\n", "si_score_jp", "=", "np", ".", "mean", "(", "dict2np", "(", "si_results_jp", ")", ")", "\n", "ti_results_en", "=", "extract_matched_metric", "(", "\n", "'runs'", ",", "'(text-image)-ds001-([abc])-.*'", ",", "path2type", ",", "metric", ")", "\n", "ti_score_en", "=", "np", ".", "mean", "(", "dict2np", "(", "ti_results_en", ")", ")", "\n", "ti_results_en_reduced", "=", "extract_matched_metric", "(", "\n", "'runs'", ",", "'(text-image)-comp-([abc])-.*'", ",", "path2type", ",", "metric", ")", "\n", "ti_score_en_reduced", "=", "np", ".", "mean", "(", "dict2np", "(", "ti_results_en_reduced", ")", ")", "\n", "ti_results_jp", "=", "extract_matched_metric", "(", "\n", "'runs'", ",", "'(text-image)-jp-ds001-([abc])-.*'", ",", "path2type_jp", ",", "metric", ")", "\n", "ti_score_jp", "=", "np", ".", "mean", "(", "dict2np", "(", "ti_results_jp", ")", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "si_score_en", ",", "si_score_en_reduced", ",", "si_score_jp", "]", ",", "\n", "[", "ti_score_en", ",", "ti_score_en_reduced", ",", "ti_score_jp", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.plot_figure_3": [[271, 274], ["results.plot_downsampling", "results.plot_downsampling_jp"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.plot_downsampling", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.plot_downsampling_jp"], ["", "def", "plot_figure_3", "(", ")", ":", "\n", "    ", "plot_downsampling", "(", "'figure_3_left.pdf'", ")", "\n", "plot_downsampling_jp", "(", "'figure_3_right.pdf'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.print_table_1": [[276, 279], ["results.extract_metric_baselines", "print"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_metric_baselines"], ["", "def", "print_table_1", "(", ")", ":", "\n", "    ", "scores", "=", "extract_metric_baselines", "(", ")", "\n", "print", "(", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.print_table_2": [[281, 299], ["results.extract_results", "numpy.mean", "results.extract_results", "numpy.mean", "numpy.concatenate", "print", "results.extract_matched_results", "scores_en_reduced.append", "numpy.array", "numpy.mean", "results.dict2np"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_results", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np"], ["", "def", "print_table_2", "(", ")", ":", "\n", "    ", "expnames", "=", "[", "'pip-ind'", ",", "'pip-seq'", ",", "'mtl-asr'", ",", "'mtl-st'", "]", "\n", "ds_factors", "=", "[", "'001'", "]", "\n", "replids", "=", "[", "'a'", ",", "'b'", ",", "'c'", "]", "\n", "res_en", "=", "extract_results", "(", "'runs'", ",", "expnames", ",", "ds_factors", ",", "replids", ",", "\n", "name2type", ")", "\n", "scores_en", "=", "np", ".", "mean", "(", "res_en", ",", "axis", "=", "2", ")", "\n", "res_jp", "=", "extract_results", "(", "'runs'", ",", "expnames", ",", "ds_factors", ",", "replids", ",", "\n", "name2type_jp", ",", "'-jp'", ")", "\n", "scores_jp", "=", "np", ".", "mean", "(", "res_jp", ",", "axis", "=", "2", ")", "\n", "scores_en_reduced", "=", "[", "]", "\n", "for", "ename", "in", "expnames", ":", "\n", "        ", "res", "=", "extract_matched_results", "(", "\n", "'runs'", ",", "'({})-comp-([abc])-.*'", ".", "format", "(", "ename", ")", ",", "path2type", ")", "\n", "scores_en_reduced", ".", "append", "(", "np", ".", "mean", "(", "dict2np", "(", "res", ")", ")", ")", "\n", "", "scores_en_reduced", "=", "np", ".", "array", "(", "[", "scores_en_reduced", "]", ")", ".", "T", "\n", "scores", "=", "np", ".", "concatenate", "(", "[", "scores_en", ",", "scores_en_reduced", ",", "scores_jp", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.print_table_3": [[301, 306], ["results.extract_results_test_set", "results.extract_results_test_set", "print", "numpy.array"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results_test_set", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results_test_set"], ["", "def", "print_table_3", "(", ")", ":", "\n", "    ", "scores_en", "=", "extract_results_test_set", "(", "'runs'", ",", "''", ")", "\n", "scores_jp", "=", "extract_results_test_set", "(", "'runs'", ",", "'jp'", ")", "\n", "scores", "=", "np", ".", "array", "(", "[", "scores_en", ",", "scores_jp", "]", ")", ".", "T", "\n", "print", "(", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.print_table_6": [[308, 315], ["results.extract_metric_baselines", "results.extract_metric_baselines", "results.extract_metric_baselines", "numpy.concatenate", "print", "np.concatenate.T.reshape"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_metric_baselines", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_metric_baselines", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_metric_baselines"], ["", "def", "print_table_6", "(", ")", ":", "\n", "    ", "scores_r1", "=", "extract_metric_baselines", "(", "'R@1'", ")", "\n", "scores_r5", "=", "extract_metric_baselines", "(", "'R@5'", ")", "\n", "scores_medr", "=", "extract_metric_baselines", "(", "'Medr'", ")", "\n", "scores", "=", "np", ".", "concatenate", "(", "[", "scores_r1", ",", "scores_r5", ",", "scores_medr", "]", ")", "\n", "scores", "=", "scores", ".", "T", ".", "reshape", "(", "[", "9", ",", "2", "]", ")", ".", "T", "\n", "print", "(", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.print_table_7": [[317, 339], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.concatenate", "print", "results.extract_metric", "numpy.mean().squeeze", "results.extract_metric", "numpy.mean().squeeze", "enumerate", "results.extract_matched_metric", "numpy.mean", "numpy.mean", "numpy.mean", "results.dict2np"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_metric", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_metric", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_matched_metric", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.dict2np"], ["", "def", "print_table_7", "(", ")", ":", "\n", "    ", "expnames", "=", "[", "'pip-ind'", ",", "'pip-seq'", ",", "'mtl-asr'", ",", "'mtl-st'", "]", "\n", "ds_factors", "=", "[", "'001'", "]", "\n", "replids", "=", "[", "'a'", ",", "'b'", ",", "'c'", "]", "\n", "scores_en", "=", "np", ".", "zeros", "(", "[", "4", ",", "3", "]", ")", "\n", "scores_jp", "=", "np", ".", "zeros", "(", "[", "4", ",", "3", "]", ")", "\n", "scores_en_reduced", "=", "np", ".", "zeros", "(", "[", "4", ",", "3", "]", ")", "\n", "for", "i", ",", "metric", "in", "enumerate", "(", "[", "'R@1'", ",", "'R@5'", ",", "'Medr'", "]", ")", ":", "\n", "        ", "res", "=", "extract_metric", "(", "'runs'", ",", "expnames", ",", "ds_factors", ",", "replids", ",", "\n", "path2type", ",", "''", ",", "metric", ")", "\n", "scores_en", "[", ":", ",", "i", "]", "=", "np", ".", "mean", "(", "res", ",", "axis", "=", "2", ")", ".", "squeeze", "(", ")", "\n", "res", "=", "extract_metric", "(", "'runs'", ",", "expnames", ",", "ds_factors", ",", "replids", ",", "\n", "path2type_jp", ",", "'-jp'", ",", "metric", ")", "\n", "scores_jp", "[", ":", ",", "i", "]", "=", "np", ".", "mean", "(", "res", ",", "axis", "=", "2", ")", ".", "squeeze", "(", ")", "\n", "for", "j", ",", "ename", "in", "enumerate", "(", "expnames", ")", ":", "\n", "            ", "res", "=", "extract_matched_metric", "(", "\n", "'runs'", ",", "'({})-comp-([abc])-.*'", ".", "format", "(", "ename", ")", ",", "path2type", ",", "\n", "metric", ")", "\n", "scores_en_reduced", "[", "j", ",", "i", "]", "=", "np", ".", "mean", "(", "dict2np", "(", "res", ")", ")", "\n", "", "", "scores", "=", "np", ".", "concatenate", "(", "[", "scores_en", ",", "scores_en_reduced", ",", "scores_jp", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "scores", ")", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.print_table_8": [[341, 349], ["numpy.zeros", "numpy.zeros", "enumerate", "numpy.concatenate", "print", "results.extract_results_test_set", "results.extract_results_test_set"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results_test_set", "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results_test_set"], ["", "def", "print_table_8", "(", ")", ":", "\n", "    ", "scores_en", "=", "np", ".", "zeros", "(", "[", "2", ",", "3", "]", ")", "\n", "scores_jp", "=", "np", ".", "zeros", "(", "[", "2", ",", "3", "]", ")", "\n", "for", "i", ",", "metric", "in", "enumerate", "(", "[", "'R@1'", ",", "'R@5'", ",", "'Medr'", "]", ")", ":", "\n", "        ", "scores_en", "[", ":", ",", "i", "]", "=", "extract_results_test_set", "(", "'runs'", ",", "''", ",", "metric", ")", "\n", "scores_jp", "[", ":", ",", "i", "]", "=", "extract_results_test_set", "(", "'runs'", ",", "'jp'", ",", "metric", ")", "\n", "", "scores", "=", "np", ".", "concatenate", "(", "[", "scores_en", ",", "scores_jp", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.print_table_9": [[351, 353], ["print", "results.extract_results_beam_decoding"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results_beam_decoding"], ["", "def", "print_table_9", "(", ")", ":", "\n", "    ", "print", "(", "extract_results_beam_decoding", "(", "'runs'", ",", "'asr'", ",", "'asr'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.print_table_10": [[355, 357], ["print", "results.extract_results_beam_decoding"], "function", ["home.repos.pwc.inspect_result.bhigy_textual-supervision.None.results.extract_results_beam_decoding"], ["", "def", "print_table_10", "(", ")", ":", "\n", "    ", "print", "(", "extract_results_beam_decoding", "(", "'runs'", ",", "'asr-jp'", ",", "'slt'", ")", ")", "\n", "", ""]]}