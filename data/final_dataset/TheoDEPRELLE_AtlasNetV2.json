{"home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.dataset.ShapeNet.__init__": [[12, 107], ["os.path.join", "print", "torchvision.Normalize", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "open", "os.path.join", "sorted", "len", "int", "AverageValueMeter", "AverageValueMeter", "line.strip().split", "os.listdir", "os.path.join", "sorted", "print", "len", "empty.append", "len", "dataset.ShapeNet.datapath.append", "torchvision.Resize", "torchvision.ToTensor", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.CenterCrop", "torchvision.Resize", "dataset.ShapeNet.cat.items", "os.listdir", "dataset.ShapeNet.meta[].append", "line.strip", "str", "len", "float", "int", "int", "len", "len", "os.path.join", "os.path.join", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "train", "=", "True", ",", "options", "=", "None", ")", ":", "\n", "        ", "rootimg", "=", "\"./data/ShapeNet/ShapeNetRendering\"", "\n", "rootpc", "=", "\"./data/customShapeNet\"", "\n", "class_choice", "=", "None", "\n", "npoints", "=", "options", ".", "npoint", "\n", "normal", "=", "False", "\n", "balanced", "=", "False", "\n", "gen_view", "=", "False", "\n", "SVR", "=", "False", "\n", "idx", "=", "0", "\n", "self", ".", "balanced", "=", "balanced", "\n", "self", ".", "normal", "=", "normal", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "rootimg", "=", "rootimg", "\n", "self", ".", "rootpc", "=", "rootpc", "\n", "self", ".", "npoints", "=", "npoints", "\n", "self", ".", "datapath", "=", "[", "]", "\n", "self", ".", "catfile", "=", "os", ".", "path", ".", "join", "(", "'./data/synsetoffset2category.txt'", ")", "\n", "self", ".", "cat", "=", "{", "}", "\n", "self", ".", "meta", "=", "{", "}", "\n", "self", ".", "SVR", "=", "SVR", "\n", "self", ".", "gen_view", "=", "gen_view", "\n", "self", ".", "idx", "=", "idx", "\n", "with", "open", "(", "self", ".", "catfile", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "ls", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "self", ".", "cat", "[", "ls", "[", "0", "]", "]", "=", "ls", "[", "1", "]", "\n", "", "", "if", "not", "class_choice", "is", "None", ":", "\n", "            ", "self", ".", "cat", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "self", ".", "cat", ".", "items", "(", ")", "if", "k", "in", "class_choice", "}", "\n", "", "print", "(", "self", ".", "cat", ")", "\n", "empty", "=", "[", "]", "\n", "for", "item", "in", "self", ".", "cat", ":", "\n", "            ", "dir_img", "=", "os", ".", "path", ".", "join", "(", "self", ".", "rootimg", ",", "self", ".", "cat", "[", "item", "]", ")", "\n", "fns_img", "=", "sorted", "(", "os", ".", "listdir", "(", "dir_img", ")", ")", "\n", "\n", "try", ":", "\n", "                ", "dir_point", "=", "os", ".", "path", ".", "join", "(", "self", ".", "rootpc", ",", "self", ".", "cat", "[", "item", "]", ",", "'ply'", ")", "\n", "fns_pc", "=", "sorted", "(", "os", ".", "listdir", "(", "dir_point", ")", ")", "\n", "", "except", ":", "\n", "                ", "fns_pc", "=", "[", "]", "\n", "", "fns", "=", "[", "val", "for", "val", "in", "fns_img", "if", "val", "+", "'.points.ply'", "in", "fns_pc", "]", "\n", "print", "(", "'category '", ",", "self", ".", "cat", "[", "item", "]", ",", "'files '", "+", "str", "(", "len", "(", "fns", ")", ")", ",", "len", "(", "fns", ")", "/", "float", "(", "len", "(", "fns_img", ")", ")", ",", "\"%\"", ")", ",", "\n", "if", "train", ":", "\n", "                ", "fns", "=", "fns", "[", ":", "int", "(", "len", "(", "fns", ")", "*", "0.8", ")", "]", "\n", "", "else", ":", "\n", "                ", "fns", "=", "fns", "[", "int", "(", "len", "(", "fns", ")", "*", "0.8", ")", ":", "]", "\n", "\n", "\n", "", "if", "len", "(", "fns", ")", "!=", "0", ":", "\n", "                ", "self", ".", "meta", "[", "item", "]", "=", "[", "]", "\n", "for", "fn", "in", "fns", ":", "\n", "                    ", "objpath", "=", "\"./data/ShapeNetCorev2/\"", "+", "self", ".", "cat", "[", "item", "]", "+", "\"/\"", "+", "fn", "+", "\"/models/model_normalized.ply\"", "\n", "self", ".", "meta", "[", "item", "]", ".", "append", "(", "(", "os", ".", "path", ".", "join", "(", "dir_img", ",", "fn", ",", "\"rendering\"", ")", ",", "os", ".", "path", ".", "join", "(", "dir_point", ",", "fn", "+", "'.points.ply'", ")", ",", "item", ",", "objpath", ",", "fn", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "empty", ".", "append", "(", "item", ")", "\n", "", "", "for", "item", "in", "empty", ":", "\n", "            ", "del", "self", ".", "cat", "[", "item", "]", "\n", "", "self", ".", "idx2cat", "=", "{", "}", "\n", "self", ".", "size", "=", "{", "}", "\n", "i", "=", "0", "\n", "for", "item", "in", "self", ".", "cat", ":", "\n", "            ", "self", ".", "idx2cat", "[", "i", "]", "=", "item", "\n", "self", ".", "size", "[", "i", "]", "=", "len", "(", "self", ".", "meta", "[", "item", "]", ")", "\n", "i", "=", "i", "+", "1", "\n", "# for fn in self.meta[item]:", "\n", "l", "=", "int", "(", "len", "(", "self", ".", "meta", "[", "item", "]", ")", ")", "\n", "for", "fn", "in", "self", ".", "meta", "[", "item", "]", "[", "0", ":", "l", "]", ":", "\n", "                ", "self", ".", "datapath", ".", "append", "(", "fn", ")", "\n", "\n", "", "", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "size", "=", "224", ",", "interpolation", "=", "2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "# normalize,", "\n", "]", ")", "\n", "\n", "# RandomResizedCrop or RandomCrop", "\n", "self", ".", "dataAugmentation", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "127", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "]", ")", "\n", "self", ".", "validating", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "CenterCrop", "(", "127", ")", ",", "\n", "]", ")", "\n", "\n", "self", ".", "perCatValueMeter", "=", "{", "}", "\n", "for", "item", "in", "self", ".", "cat", ":", "\n", "            ", "self", ".", "perCatValueMeter", "[", "item", "]", "=", "AverageValueMeter", "(", ")", "\n", "", "self", ".", "perCatValueMeter_metro", "=", "{", "}", "\n", "for", "item", "in", "self", ".", "cat", ":", "\n", "            ", "self", ".", "perCatValueMeter_metro", "[", "item", "]", "=", "AverageValueMeter", "(", ")", "\n", "", "self", ".", "transformsb", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "size", "=", "224", ",", "interpolation", "=", "2", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.dataset.ShapeNet.__getitem__": [[109, 164], ["range", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.loadtxt().astype.contiguous", "open", "enumerate", "dataset.ShapeNet.transforms", "my_get_n_random_lines", "numpy.loadtxt().astype", "dataset.ShapeNet.dataAugmentation", "dataset.ShapeNet.validating", "print", "print", "len", "print", "numpy.random.randint", "Image.open", "Image.open", "Image.open", "Image.open", "int", "numpy.loadtxt", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "print", "print", "line.split", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.my_get_n_random_lines"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "fn", "=", "self", ".", "datapath", "[", "index", "]", "\n", "with", "open", "(", "fn", "[", "1", "]", ")", "as", "fp", ":", "\n", "            ", "for", "i", ",", "line", "in", "enumerate", "(", "fp", ")", ":", "\n", "                ", "if", "i", "==", "2", ":", "\n", "                    ", "try", ":", "\n", "                        ", "lenght", "=", "int", "(", "line", ".", "split", "(", ")", "[", "2", "]", ")", "\n", "", "except", "ValueError", ":", "\n", "                        ", "print", "(", "fn", ")", "\n", "print", "(", "line", ")", "\n", "", "break", "\n", "", "", "", "for", "i", "in", "range", "(", "15", ")", ":", "#this for loop is because of some weird error that happens sometime during loading I didn't track it down and brute force the solution like this.", "\n", "            ", "try", ":", "\n", "                ", "mystring", "=", "my_get_n_random_lines", "(", "fn", "[", "1", "]", ",", "n", "=", "self", ".", "npoints", ")", "\n", "point_set", "=", "np", ".", "loadtxt", "(", "mystring", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "break", "\n", "", "except", "ValueError", "as", "excep", ":", "\n", "                ", "print", "(", "fn", ")", "\n", "print", "(", "excep", ")", "\n", "\n", "# centroid = np.expand_dims(np.mean(point_set[:,0:3], axis = 0), 0) #Useless because dataset has been normalised already", "\n", "# point_set[:,0:3] = point_set[:,0:3] - centroid", "\n", "", "", "if", "not", "self", ".", "normal", ":", "\n", "            ", "point_set", "=", "point_set", "[", ":", ",", "0", ":", "3", "]", "\n", "", "else", ":", "\n", "            ", "point_set", "[", ":", ",", "3", ":", "6", "]", "=", "0.1", "*", "point_set", "[", ":", ",", "3", ":", "6", "]", "\n", "", "point_set", "=", "torch", ".", "from_numpy", "(", "point_set", ")", "\n", "\n", "# load image", "\n", "if", "self", ".", "SVR", ":", "\n", "            ", "if", "self", ".", "train", ":", "\n", "                ", "N_tot", "=", "len", "(", "os", ".", "listdir", "(", "fn", "[", "0", "]", ")", ")", "-", "3", "\n", "if", "N_tot", "==", "1", ":", "\n", "                    ", "print", "(", "\"only one view in \"", ",", "fn", ")", "\n", "", "if", "self", ".", "gen_view", ":", "\n", "                    ", "N", "=", "0", "\n", "", "else", ":", "\n", "                    ", "N", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "N_tot", ")", "\n", "", "if", "N", "<", "10", ":", "\n", "                    ", "im", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "fn", "[", "0", "]", ",", "\"0\"", "+", "str", "(", "N", ")", "+", "\".png\"", ")", ")", "\n", "", "else", ":", "\n", "                    ", "im", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "fn", "[", "0", "]", ",", "str", "(", "N", ")", "+", "\".png\"", ")", ")", "\n", "\n", "", "im", "=", "self", ".", "dataAugmentation", "(", "im", ")", "#random crop", "\n", "", "else", ":", "\n", "                ", "if", "self", ".", "idx", "<", "10", ":", "\n", "                    ", "im", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "fn", "[", "0", "]", ",", "\"0\"", "+", "str", "(", "self", ".", "idx", ")", "+", "\".png\"", ")", ")", "\n", "", "else", ":", "\n", "                    ", "im", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "fn", "[", "0", "]", ",", "str", "(", "self", ".", "idx", ")", "+", "\".png\"", ")", ")", "\n", "", "im", "=", "self", ".", "validating", "(", "im", ")", "#center crop", "\n", "", "data", "=", "self", ".", "transforms", "(", "im", ")", "#scale", "\n", "data", "=", "data", "[", ":", "3", ",", ":", ",", ":", "]", "\n", "", "else", ":", "\n", "            ", "data", "=", "0", "\n", "", "return", "point_set", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.dataset.ShapeNet.__len__": [[166, 168], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "datapath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.dataset.DATASET_LIST.__init__": [[171, 175], ["dataset.DATASET_LIST.datasets.keys"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "datasets", "=", "{", "\"shapenet\"", ":", "ShapeNet", "}", "\n", "self", ".", "type", "=", "self", ".", "datasets", ".", "keys", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.dataset.DATASET_LIST.load": [[176, 185], ["print", "print", "print"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "training", ",", "options", ")", ":", "\n", "\n", "        ", "if", "training", ":", "\n", "            ", "print", "(", "\"\\nTRAINING DATASET:\"", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"VALIDATION DATASET:\"", ")", "\n", "", "dataset", "=", "self", ".", "datasets", "[", "options", ".", "dataset", "]", "(", "training", ",", "options", ")", "\n", "print", "(", "\"\\n\"", ")", "\n", "return", "dataset", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.loss.LOSS_LIST.__init__": [[18, 23], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "losses", "=", "{", "\"AtlasNet\"", ":", "ChamferLoss", ",", "\n", "\"PatchDeformation\"", ":", "ChamferLoss", ",", "\n", "\"PointTranslation\"", ":", "ChamferLoss", ",", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.loss.LOSS_LIST.load": [[24, 28], ["None"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "options", ")", ":", "\n", "\n", "        ", "loss", "=", "self", ".", "losses", "[", "options", ".", "model", "]", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.loss.ChamferLoss": [[9, 15], ["distChamferL2", "torch.mean", "torch.mean"], "function", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.LOGGER.mean", "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.LOGGER.mean"], ["def", "ChamferLoss", "(", "target", ",", "prediction", ")", ":", "\n", "\n", "    ", "dist1", ",", "dist2", "=", "distChamferL2", "(", "target", ",", "prediction", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "dist1", ")", "+", "torch", ".", "mean", "(", "dist2", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.linearTransformMLP.__init__": [[15, 24], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["def", "__init__", "(", "self", ",", "nlatent", "=", "1024", ")", ":", "\n", "        ", "super", "(", "linearTransformMLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "nlatent", ",", "nlatent", "//", "2", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "nlatent", "//", "2", ",", "nlatent", "//", "2", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "nlatent", "//", "2", ",", "16", ",", "1", ")", "\n", "self", ".", "bn1", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "nlatent", "//", "2", ")", "\n", "self", ".", "bn2", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "nlatent", "//", "2", ")", "\n", "self", ".", "th", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.linearTransformMLP.forward": [[25, 32], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.linearTransformMLP.th", "x.view().contiguous.view().contiguous.view().contiguous", "model.linearTransformMLP.bn1", "model.linearTransformMLP.bn2", "model.linearTransformMLP.conv3", "model.linearTransformMLP.conv1", "model.linearTransformMLP.conv2", "x.view().contiguous.view().contiguous.view", "x.view().contiguous.view().contiguous.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "th", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "4", ",", "4", ")", ".", "contiguous", "(", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.linearAdj.__init__": [[36, 46], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["def", "__init__", "(", "self", ",", "dim", "=", "3", ",", "nlatent", "=", "1024", ")", ":", "\n", "        ", "super", "(", "linearAdj", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "nlatent", ",", "nlatent", "//", "2", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "nlatent", "//", "2", ",", "nlatent", "//", "2", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "nlatent", "//", "2", ",", "(", "dim", "+", "1", ")", "*", "3", ",", "1", ")", "\n", "self", ".", "bn1", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "nlatent", "//", "2", ")", "\n", "self", ".", "bn2", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "nlatent", "//", "2", ")", "\n", "self", ".", "th", "=", "nn", ".", "Tanh", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.linearAdj.forward": [[47, 55], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.linearAdj.th", "x[].view().contiguous", "x[].view().contiguous", "model.linearAdj.bn1", "model.linearAdj.bn2", "model.linearAdj.conv3", "model.linearAdj.conv1", "model.linearAdj.conv2", "x[].view", "x[].view", "model.linearAdj.size", "model.linearAdj.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "th", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "R", "=", "x", "[", ":", ",", "0", ":", "self", ".", "dim", "*", "3", "]", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "self", ".", "dim", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "T", "=", "x", "[", ":", ",", "self", ".", "dim", "*", "3", ":", "]", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "return", "R", ",", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.mlpAdj.__init__": [[57, 71], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nlatent", "=", "1024", ")", ":", "\n", "        ", "\"\"\"Atlas decoder\"\"\"", "\n", "\n", "super", "(", "mlpAdj", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nlatent", "=", "nlatent", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "self", ".", "nlatent", ",", "self", ".", "nlatent", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "self", ".", "nlatent", ",", "self", ".", "nlatent", "//", "2", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "self", ".", "nlatent", "//", "2", ",", "self", ".", "nlatent", "//", "4", ",", "1", ")", "\n", "self", ".", "conv4", "=", "torch", ".", "nn", ".", "Conv1d", "(", "self", ".", "nlatent", "//", "4", ",", "3", ",", "1", ")", "\n", "\n", "self", ".", "th", "=", "nn", ".", "Tanh", "(", ")", "\n", "self", ".", "bn1", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "self", ".", "nlatent", ")", "\n", "self", ".", "bn2", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "self", ".", "nlatent", "//", "2", ")", "\n", "self", ".", "bn3", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "self", ".", "nlatent", "//", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.mlpAdj.forward": [[72, 79], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.mlpAdj.th", "model.mlpAdj.size", "model.mlpAdj.bn1", "model.mlpAdj.bn2", "model.mlpAdj.bn3", "model.mlpAdj.conv4", "model.mlpAdj.conv1", "model.mlpAdj.conv2", "model.mlpAdj.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batchsize", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "th", "(", "self", ".", "conv4", "(", "x", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.patchDeformationMLP.__init__": [[83, 94], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["def", "__init__", "(", "self", ",", "patchDim", "=", "2", ",", "patchDeformDim", "=", "3", ",", "tanh", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", "patchDeformationMLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layer_size", "=", "128", "\n", "self", ".", "tanh", "=", "tanh", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "patchDim", ",", "layer_size", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "layer_size", ",", "layer_size", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "layer_size", ",", "patchDeformDim", ",", "1", ")", "\n", "self", ".", "bn1", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "layer_size", ")", "\n", "self", ".", "bn2", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "layer_size", ")", "\n", "self", ".", "th", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.patchDeformationMLP.forward": [[95, 103], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.patchDeformationMLP.bn1", "model.patchDeformationMLP.bn2", "model.patchDeformationMLP.th", "model.patchDeformationMLP.conv3", "model.patchDeformationMLP.conv1", "model.patchDeformationMLP.conv2", "model.patchDeformationMLP.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "tanh", ":", "\n", "            ", "x", "=", "self", ".", "th", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.PointNetfeat.__init__": [[105, 121], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["    ", "def", "__init__", "(", "self", ",", "npoint", "=", "2500", ",", "nlatent", "=", "1024", ")", ":", "\n", "        ", "\"\"\"Encoder\"\"\"", "\n", "\n", "super", "(", "PointNetfeat", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "3", ",", "64", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "64", ",", "128", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "nlatent", ",", "1", ")", "\n", "self", ".", "lin", "=", "nn", ".", "Linear", "(", "nlatent", ",", "nlatent", ")", "\n", "\n", "self", ".", "bn1", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn3", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "nlatent", ")", "\n", "self", ".", "bn4", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "nlatent", ")", "\n", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "nlatent", "=", "nlatent", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.PointNetfeat.forward": [[122, 131], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.PointNetfeat.bn3", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.relu.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu.size", "model.PointNetfeat.bn1", "model.PointNetfeat.bn2", "model.PointNetfeat.conv3", "model.PointNetfeat.bn4", "model.PointNetfeat.conv1", "model.PointNetfeat.conv2", "model.PointNetfeat.lin().unsqueeze", "model.PointNetfeat.lin"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batchsize", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "2", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "nlatent", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "lin", "(", "x", ")", ".", "unsqueeze", "(", "-", "1", ")", ")", ")", "\n", "return", "x", "[", "...", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.AtlasNet.__init__": [[135, 148], ["torch.Module.__init__", "model.PointNetfeat", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "model.mlpAdj", "range"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["def", "__init__", "(", "self", ",", "options", ")", ":", "\n", "\n", "        ", "super", "(", "AtlasNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "npoint", "=", "options", ".", "npoint", "\n", "self", ".", "npatch", "=", "options", ".", "npatch", "\n", "self", ".", "nlatent", "=", "options", ".", "nlatent", "\n", "self", ".", "patchDim", "=", "options", ".", "patchDim", "\n", "\n", "#encoder and decoder modules", "\n", "#==============================================================================", "\n", "self", ".", "encoder", "=", "PointNetfeat", "(", "self", ".", "npoint", ",", "self", ".", "nlatent", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "ModuleList", "(", "[", "mlpAdj", "(", "nlatent", "=", "2", "+", "self", ".", "nlatent", ")", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", "]", ")", "\n", "#==============================================================================", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.AtlasNet.forward": [[150, 177], ["model.AtlasNet.encoder", "range", "model.AtlasNet.transpose().contiguous", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda.data.uniform_", "torch.FloatTensor().cuda.data.uniform_", "torch.FloatTensor().cuda.data.uniform_", "patches.append", "model.AtlasNet.unsqueeze().expand().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "outs.append", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "rand_grid[].transpose", "model.AtlasNet.transpose", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "model.AtlasNet.unsqueeze().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "model.AtlasNet.size", "model.AtlasNet.size", "model.AtlasNet.size", "torch.FloatTensor().cuda.size", "torch.FloatTensor().cuda.size", "torch.FloatTensor().cuda.size", "model.AtlasNet.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#encoder", "\n", "#==============================================================================", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "#==============================================================================", "\n", "\n", "outs", "=", "[", "]", "\n", "patches", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ":", "\n", "\n", "#random patch", "\n", "#==========================================================================", "\n", "            ", "rand_grid", "=", "torch", ".", "FloatTensor", "(", "x", ".", "size", "(", "0", ")", ",", "self", ".", "patchDim", ",", "self", ".", "npoint", "//", "self", ".", "npatch", ")", ".", "cuda", "(", ")", "\n", "rand_grid", ".", "data", ".", "uniform_", "(", "0", ",", "1", ")", "\n", "rand_grid", "[", ":", ",", "2", ":", ",", ":", "]", "=", "0", "\n", "patches", ".", "append", "(", "rand_grid", "[", "0", "]", ".", "transpose", "(", "1", ",", "0", ")", ")", "\n", "#==========================================================================", "\n", "\n", "#cat with latent vector and decode", "\n", "#==========================================================================", "\n", "y", "=", "x", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "rand_grid", ".", "size", "(", "2", ")", ")", ".", "contiguous", "(", ")", "\n", "y", "=", "torch", ".", "cat", "(", "(", "rand_grid", ",", "y", ")", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "outs", ".", "append", "(", "self", ".", "decoder", "[", "i", "]", "(", "y", ")", ")", "\n", "#==========================================================================", "\n", "\n", "", "return", "torch", ".", "cat", "(", "outs", ",", "2", ")", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ",", "patches", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.AtlasNetLinAdj.__init__": [[182, 195], ["torch.Module.__init__", "model.PointNetfeat", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "model.linearAdj", "range"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["def", "__init__", "(", "self", ",", "options", ")", ":", "\n", "\n", "        ", "super", "(", "AtlasNetLinAdj", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "npoint", "=", "options", ".", "npoint", "\n", "self", ".", "npatch", "=", "options", ".", "npatch", "\n", "self", ".", "nlatent", "=", "options", ".", "nlatent", "\n", "self", ".", "patchDim", "=", "options", ".", "patchDim", "\n", "\n", "#encoder and decoder modules", "\n", "#==============================================================================", "\n", "self", ".", "encoder", "=", "PointNetfeat", "(", "self", ".", "npoint", ",", "self", ".", "nlatent", ")", "\n", "self", ".", "linearTransformMatrix", "=", "nn", ".", "ModuleList", "(", "linearAdj", "(", "dim", "=", "self", ".", "patchDim", ",", "nlatent", "=", "self", ".", "nlatent", ")", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ")", "\n", "#==============================================================================", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.AtlasNetLinAdj.forward": [[197, 224], ["model.AtlasNetLinAdj.encoder", "range", "model.AtlasNetLinAdj.transpose().contiguous", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda.data.uniform_", "torch.FloatTensor().cuda.data.uniform_", "torch.FloatTensor().cuda.data.uniform_", "patches.append", "outs.append", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "rand_grid[].transpose", "model.AtlasNetLinAdj.unsqueeze", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "model.AtlasNetLinAdj.transpose", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor().cuda.transpose", "torch.FloatTensor().cuda.transpose", "torch.FloatTensor().cuda.transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "model.AtlasNetLinAdj.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#encoder", "\n", "#==============================================================================", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "#==============================================================================", "\n", "\n", "outs", "=", "[", "]", "\n", "patches", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ":", "\n", "\n", "#random patch", "\n", "#==========================================================================", "\n", "            ", "rand_grid", "=", "torch", ".", "FloatTensor", "(", "x", ".", "size", "(", "0", ")", ",", "self", ".", "patchDim", ",", "self", ".", "npoint", "//", "self", ".", "npatch", ")", ".", "cuda", "(", ")", "\n", "rand_grid", ".", "data", ".", "uniform_", "(", "0", ",", "1", ")", "\n", "rand_grid", "[", ":", ",", "2", ":", ",", ":", "]", "=", "0", "\n", "patches", ".", "append", "(", "rand_grid", "[", "0", "]", ".", "transpose", "(", "1", ",", "0", ")", ")", "\n", "#==========================================================================", "\n", "\n", "#cat with latent vector and decode", "\n", "#==========================================================================", "\n", "R", ",", "T", "=", "self", ".", "linearTransformMatrix", "[", "i", "]", "(", "x", ".", "unsqueeze", "(", "2", ")", ")", "\n", "rand_grid", "=", "torch", ".", "bmm", "(", "rand_grid", ".", "transpose", "(", "2", ",", "1", ")", ",", "R", ")", "+", "T", "\n", "outs", ".", "append", "(", "rand_grid", ")", "\n", "#==========================================================================", "\n", "\n", "", "return", "torch", ".", "cat", "(", "outs", ",", "2", ")", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ",", "patches", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.PointTransMLPAdj.__init__": [[229, 254], ["torch.Module.__init__", "model.PointNetfeat", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter.data.uniform_", "torch.nn.Parameter.data.uniform_", "torch.nn.Parameter.data.uniform_", "model.PointTransMLPAdj.register_parameter", "model.PointTransMLPAdj.grid.append", "model.mlpAdj", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["def", "__init__", "(", "self", ",", "options", ")", ":", "\n", "\n", "        ", "super", "(", "PointTransMLPAdj", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "npoint", "=", "options", ".", "npoint", "\n", "self", ".", "npatch", "=", "options", ".", "npatch", "\n", "self", ".", "nlatent", "=", "options", ".", "nlatent", "\n", "self", ".", "nbatch", "=", "options", ".", "nbatch", "\n", "self", ".", "dim", "=", "options", ".", "patchDim", "\n", "\n", "#encoder and decoder modules", "\n", "#==============================================================================", "\n", "self", ".", "encoder", "=", "PointNetfeat", "(", "self", ".", "npoint", ",", "self", ".", "nlatent", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "ModuleList", "(", "[", "mlpAdj", "(", "nlatent", "=", "self", ".", "dim", "+", "self", ".", "nlatent", ")", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", "]", ")", "\n", "#==============================================================================", "\n", "\n", "#patch", "\n", "#==============================================================================", "\n", "self", ".", "grid", "=", "[", "]", "\n", "for", "patchIndex", "in", "range", "(", "self", ".", "npatch", ")", ":", "\n", "            ", "patch", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "1", ",", "self", ".", "dim", ",", "self", ".", "npoint", "//", "self", ".", "npatch", ")", ")", "\n", "patch", ".", "data", ".", "uniform_", "(", "0", ",", "1", ")", "\n", "patch", ".", "data", "[", ":", ",", "2", ":", ",", ":", "]", "=", "0", "\n", "self", ".", "register_parameter", "(", "\"patch%d\"", "%", "patchIndex", ",", "patch", ")", "\n", "self", ".", "grid", ".", "append", "(", "patch", ")", "\n", "#==============================================================================", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.PointTransMLPAdj.forward": [[256, 282], ["model.PointTransMLPAdj.encoder", "range", "model.PointTransMLPAdj.transpose().contiguous", "model.PointTransMLPAdj.grid[].expand", "patches.append", "model.PointTransMLPAdj.unsqueeze().expand().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "outs.append", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "model.PointTransMLPAdj.size", "rand_grid[].transpose", "model.PointTransMLPAdj.transpose", "model.PointTransMLPAdj.unsqueeze().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "model.PointTransMLPAdj.size", "model.PointTransMLPAdj.size", "model.PointTransMLPAdj.size", "model.PointTransMLPAdj.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#encoder", "\n", "#==============================================================================", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "#==============================================================================", "\n", "\n", "outs", "=", "[", "]", "\n", "patches", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ":", "\n", "\n", "#random planar patch", "\n", "#==========================================================================", "\n", "            ", "rand_grid", "=", "self", ".", "grid", "[", "i", "]", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ",", "-", "1", ")", "\n", "patches", ".", "append", "(", "rand_grid", "[", "0", "]", ".", "transpose", "(", "1", ",", "0", ")", ")", "\n", "#==========================================================================", "\n", "\n", "#cat with latent vector and decode", "\n", "#==========================================================================", "\n", "y", "=", "x", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "rand_grid", ".", "size", "(", "2", ")", ")", ".", "contiguous", "(", ")", "\n", "y", "=", "torch", ".", "cat", "(", "(", "rand_grid", ",", "y", ")", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "outs", ".", "append", "(", "self", ".", "decoder", "[", "i", "]", "(", "y", ")", ")", "\n", "#==========================================================================", "\n", "\n", "", "return", "torch", ".", "cat", "(", "outs", ",", "2", ")", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ",", "patches", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.PointTransLinAdj.__init__": [[287, 314], ["torch.Module.__init__", "model.PointNetfeat", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter.data.uniform_", "torch.nn.Parameter.data.uniform_", "torch.nn.Parameter.data.uniform_", "model.PointTransLinAdj.register_parameter", "model.PointTransLinAdj.grid.append", "model.linearAdj", "model.patchDeformationMLP", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "range"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["def", "__init__", "(", "self", ",", "options", ")", ":", "\n", "\n", "        ", "super", "(", "PointTransLinAdj", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "npoint", "=", "options", ".", "npoint", "\n", "self", ".", "npatch", "=", "options", ".", "npatch", "\n", "self", ".", "nlatent", "=", "options", ".", "nlatent", "\n", "self", ".", "patchDim", "=", "options", ".", "patchDim", "\n", "self", ".", "patchDeformDim", "=", "options", ".", "patchDeformDim", "\n", "self", ".", "nbatch", "=", "options", ".", "nbatch", "\n", "\n", "#encoder decoder and patch deformation module", "\n", "#==============================================================================", "\n", "self", ".", "encoder", "=", "PointNetfeat", "(", "self", ".", "npoint", ",", "self", ".", "nlatent", ")", "\n", "self", ".", "linearTransformMatrix", "=", "nn", ".", "ModuleList", "(", "linearAdj", "(", "dim", "=", "self", ".", "patchDim", ",", "nlatent", "=", "self", ".", "nlatent", ")", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ")", "\n", "self", ".", "patchDeformation", "=", "nn", ".", "ModuleList", "(", "patchDeformationMLP", "(", "patchDim", "=", "self", ".", "patchDim", ",", "patchDeformDim", "=", "self", ".", "patchDeformDim", ")", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ")", "\n", "#==============================================================================", "\n", "\n", "#patch", "\n", "#==============================================================================", "\n", "self", ".", "grid", "=", "[", "]", "\n", "for", "patchIndex", "in", "range", "(", "self", ".", "npatch", ")", ":", "\n", "            ", "patch", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "1", ",", "self", ".", "patchDim", ",", "self", ".", "npoint", "//", "self", ".", "npatch", ")", ")", "\n", "patch", ".", "data", ".", "uniform_", "(", "0", ",", "1", ")", "\n", "patch", ".", "data", "[", ":", ",", "2", ":", ",", ":", "]", "=", "0", "\n", "self", ".", "register_parameter", "(", "\"patch%d\"", "%", "patchIndex", ",", "patch", ")", "\n", "self", ".", "grid", ".", "append", "(", "patch", ")", "\n", "#==============================================================================", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.PointTransLinAdj.forward": [[316, 341], ["model.PointTransLinAdj.encoder", "range", "model.PointTransLinAdj.transpose().contiguous", "model.PointTransLinAdj.grid[].expand().transpose", "patches.append", "outs.append", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "model.PointTransLinAdj.unsqueeze", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "model.PointTransLinAdj.transpose", "model.PointTransLinAdj.grid[].expand", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "model.PointTransLinAdj.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#encode data", "\n", "#==============================================================================", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "#==============================================================================", "\n", "\n", "outs", "=", "[", "]", "\n", "patches", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ":", "\n", "\n", "#random planar patch", "\n", "#==========================================================================", "\n", "            ", "rand_grid", "=", "self", ".", "grid", "[", "i", "]", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ",", "-", "1", ")", ".", "transpose", "(", "2", ",", "1", ")", "\n", "patches", ".", "append", "(", "rand_grid", "[", "0", "]", ")", "\n", "#==========================================================================", "\n", "\n", "#apply linear tranformation to the patch", "\n", "#==========================================================================", "\n", "R", ",", "T", "=", "self", ".", "linearTransformMatrix", "[", "i", "]", "(", "x", ".", "unsqueeze", "(", "2", ")", ")", "\n", "rand_grid", "=", "torch", ".", "bmm", "(", "rand_grid", ",", "R", ")", "+", "T", "\n", "outs", ".", "append", "(", "rand_grid", ")", "\n", "#==========================================================================", "\n", "\n", "", "return", "torch", ".", "cat", "(", "outs", ",", "1", ")", ".", "contiguous", "(", ")", ".", "contiguous", "(", ")", ",", "patches", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.PatchDeformMLPAdj.__init__": [[346, 362], ["torch.Module.__init__", "model.PointNetfeat", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "model.mlpAdj", "model.patchDeformationMLP", "range", "range"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["def", "__init__", "(", "self", ",", "options", ")", ":", "\n", "\n", "        ", "super", "(", "PatchDeformMLPAdj", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "npoint", "=", "options", ".", "npoint", "\n", "self", ".", "npatch", "=", "options", ".", "npatch", "\n", "self", ".", "nlatent", "=", "options", ".", "nlatent", "\n", "self", ".", "nbatch", "=", "options", ".", "nbatch", "\n", "self", ".", "patchDim", "=", "options", ".", "patchDim", "\n", "self", ".", "patchDeformDim", "=", "options", ".", "patchDeformDim", "\n", "\n", "#encoder decoder and patch deformation module", "\n", "#==============================================================================", "\n", "self", ".", "encoder", "=", "PointNetfeat", "(", "self", ".", "npoint", ",", "self", ".", "nlatent", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "ModuleList", "(", "[", "mlpAdj", "(", "nlatent", "=", "self", ".", "patchDeformDim", "+", "self", ".", "nlatent", ")", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", "]", ")", "\n", "self", ".", "patchDeformation", "=", "nn", ".", "ModuleList", "(", "patchDeformationMLP", "(", "patchDim", "=", "self", ".", "patchDim", ",", "patchDeformDim", "=", "self", ".", "patchDeformDim", ")", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ")", "\n", "#==============================================================================", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.PatchDeformMLPAdj.forward": [[364, 392], ["model.PatchDeformMLPAdj.encoder", "range", "model.PatchDeformMLPAdj.transpose().contiguous", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda.data.uniform_", "torch.FloatTensor().cuda.data.uniform_", "torch.FloatTensor().cuda.data.uniform_", "patches.append", "model.PatchDeformMLPAdj.unsqueeze().expand().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "outs.append", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.cat().transpose().contiguous", "torch.FloatTensor().cuda.contiguous", "torch.FloatTensor().cuda.contiguous", "torch.FloatTensor().cuda.contiguous", "rand_grid[].transpose", "model.PatchDeformMLPAdj.transpose", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "model.PatchDeformMLPAdj.unsqueeze().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "torch.cat().transpose", "model.PatchDeformMLPAdj.size", "model.PatchDeformMLPAdj.size", "model.PatchDeformMLPAdj.size", "torch.FloatTensor().cuda.size", "torch.FloatTensor().cuda.size", "torch.FloatTensor().cuda.size", "model.PatchDeformMLPAdj.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#encoder", "\n", "#==============================================================================", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "#==============================================================================", "\n", "\n", "outs", "=", "[", "]", "\n", "patches", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ":", "\n", "\n", "#random planar patch", "\n", "#==========================================================================", "\n", "            ", "rand_grid", "=", "torch", ".", "FloatTensor", "(", "x", ".", "size", "(", "0", ")", ",", "self", ".", "patchDim", ",", "self", ".", "npoint", "//", "self", ".", "npatch", ")", ".", "cuda", "(", ")", "\n", "rand_grid", ".", "data", ".", "uniform_", "(", "0", ",", "1", ")", "\n", "rand_grid", "[", ":", ",", "2", ":", ",", ":", "]", "=", "0", "\n", "rand_grid", "=", "self", ".", "patchDeformation", "[", "i", "]", "(", "rand_grid", ".", "contiguous", "(", ")", ")", "\n", "patches", ".", "append", "(", "rand_grid", "[", "0", "]", ".", "transpose", "(", "1", ",", "0", ")", ")", "\n", "#==========================================================================", "\n", "\n", "#cat with latent vector and decode", "\n", "#==========================================================================", "\n", "y", "=", "x", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "rand_grid", ".", "size", "(", "2", ")", ")", ".", "contiguous", "(", ")", "\n", "y", "=", "torch", ".", "cat", "(", "(", "rand_grid", ",", "y", ")", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "outs", ".", "append", "(", "self", ".", "decoder", "[", "i", "]", "(", "y", ")", ")", "\n", "#==========================================================================", "\n", "\n", "", "return", "torch", ".", "cat", "(", "outs", ",", "2", ")", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ",", "patches", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.PatchDeformLinAdj.__init__": [[397, 412], ["torch.Module.__init__", "model.PointNetfeat", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "model.linearAdj", "model.patchDeformationMLP", "range", "range"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["def", "__init__", "(", "self", ",", "options", ")", ":", "\n", "\n", "        ", "super", "(", "PatchDeformLinAdj", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "npoint", "=", "options", ".", "npoint", "\n", "self", ".", "npatch", "=", "options", ".", "npatch", "\n", "self", ".", "nlatent", "=", "options", ".", "nlatent", "\n", "self", ".", "patchDim", "=", "options", ".", "patchDim", "\n", "self", ".", "patchDeformDim", "=", "options", ".", "patchDeformDim", "\n", "\n", "#encoder decoder and patch deformation module", "\n", "#==============================================================================", "\n", "self", ".", "encoder", "=", "PointNetfeat", "(", "self", ".", "npoint", ",", "self", ".", "nlatent", ")", "\n", "self", ".", "linearTransformMatrix", "=", "nn", ".", "ModuleList", "(", "linearAdj", "(", "dim", "=", "self", ".", "patchDeformDim", ",", "nlatent", "=", "self", ".", "nlatent", ")", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ")", "\n", "self", ".", "patchDeformation", "=", "nn", ".", "ModuleList", "(", "patchDeformationMLP", "(", "patchDim", "=", "self", ".", "patchDim", ",", "patchDeformDim", "=", "self", ".", "patchDeformDim", ")", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ")", "\n", "#==============================================================================", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.PatchDeformLinAdj.forward": [[414, 447], ["model.PatchDeformLinAdj.encoder", "range", "model.PatchDeformLinAdj.transpose().contiguous", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda.data.uniform_", "torch.FloatTensor().cuda.data.uniform_", "torch.FloatTensor().cuda.data.uniform_", "patches.append", "outs.append", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "torch.cat().contiguous().contiguous", "model.PatchDeformLinAdj.unsqueeze", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "model.PatchDeformLinAdj.transpose", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat().contiguous", "model.PatchDeformLinAdj.size", "torch.FloatTensor().cuda.contiguous", "torch.FloatTensor().cuda.contiguous", "torch.FloatTensor().cuda.contiguous", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#encode data", "\n", "#==============================================================================", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "#==============================================================================", "\n", "\n", "outs", "=", "[", "]", "\n", "patches", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "npatch", ")", ":", "\n", "\n", "#random planar patch", "\n", "#==========================================================================", "\n", "            ", "rand_grid", "=", "torch", ".", "FloatTensor", "(", "x", ".", "size", "(", "0", ")", ",", "self", ".", "patchDim", ",", "self", ".", "npoint", "//", "self", ".", "npatch", ")", ".", "cuda", "(", ")", "\n", "rand_grid", ".", "data", ".", "uniform_", "(", "0", ",", "1", ")", "\n", "rand_grid", "[", ":", ",", "2", ":", ",", ":", "]", "=", "0", "\n", "#==========================================================================", "\n", "\n", "#deform the planar patch", "\n", "#==========================================================================", "\n", "rand_grid", "=", "self", ".", "patchDeformation", "[", "i", "]", "(", "rand_grid", ".", "contiguous", "(", ")", ")", ".", "transpose", "(", "2", ",", "1", ")", "\n", "patches", ".", "append", "(", "rand_grid", "[", "0", "]", ")", "\n", "#==========================================================================", "\n", "\n", "#apply linear tranformation to the patch", "\n", "#==========================================================================", "\n", "R", ",", "T", "=", "self", ".", "linearTransformMatrix", "[", "i", "]", "(", "x", ".", "unsqueeze", "(", "2", ")", ")", "\n", "rand_grid", "=", "torch", ".", "bmm", "(", "rand_grid", ",", "R", ")", "+", "T", "\n", "outs", ".", "append", "(", "rand_grid", ")", "\n", "#==========================================================================", "\n", "\n", "", "return", "torch", ".", "cat", "(", "outs", ",", "1", ")", ".", "contiguous", "(", ")", ".", "contiguous", "(", ")", ",", "patches", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.MODEL_LIST.__init__": [[450, 462], ["model.MODEL_LIST.models.keys", "print", "print", "print", "exit"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "options", ")", ":", "\n", "        ", "if", "options", ".", "adjust", "==", "'mlp'", ":", "\n", "             ", "self", ".", "models", "=", "{", "'AtlasNet'", ":", "AtlasNet", ",", "'PointTranslation'", ":", "PointTransMLPAdj", ",", "'PatchDeformation'", ":", "PatchDeformMLPAdj", "}", "\n", "", "elif", "options", ".", "adjust", "==", "'linear'", ":", "\n", "             ", "self", ".", "models", "=", "{", "'AtlasNet'", ":", "AtlasNetLinAdj", ",", "'PointTranslation'", ":", "PointTransLinAdj", ",", "'PatchDeformation'", ":", "PatchDeformLinAdj", "}", "\n", "", "else", ":", "\n", "            ", "print", "(", "colors", ".", "FAIL", ",", "\"ERROR please select the model from : \"", ",", "colors", ".", "ENDC", ")", "\n", "print", "(", "\"   > mlp\"", ")", "\n", "print", "(", "\"   > linear\"", ")", "\n", "exit", "(", ")", "\n", "\n", "", "self", ".", "type", "=", "self", ".", "models", ".", "keys", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.model.MODEL_LIST.load": [[463, 466], ["None"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "options", ")", ":", "\n", "\n", "        ", "return", "self", ".", "models", "[", "options", ".", "model", "]", "(", "options", ")", ".", "cuda", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.LOGGER.__init__": [[92, 95], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "history", "=", "[", "]", "\n", "self", ".", "data", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.LOGGER.add": [[96, 98], ["utils.LOGGER.data.append"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "val", ")", ":", "\n", "        ", "self", ".", "data", ".", "append", "(", "val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.LOGGER.save": [[99, 102], ["open", "pickle.dump"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "\"wb\"", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "self", ".", "history", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.LOGGER.mean": [[103, 106], ["numpy.mean", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.LOGGER.mean"], ["", "", "def", "mean", "(", "self", ")", ":", "\n", "        ", "m", "=", "np", ".", "mean", "(", "np", ".", "array", "(", "self", ".", "data", ")", ")", "\n", "return", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.LOGGER.reset": [[107, 111], ["utils.LOGGER.history.append", "numpy.mean", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.LOGGER.mean"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "data", ":", "\n", "            ", "self", ".", "history", ".", "append", "(", "np", ".", "mean", "(", "np", ".", "array", "(", "self", ".", "data", ")", ")", ")", "\n", "self", ".", "data", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.AverageValueMeter.__init__": [[123, 125], ["utils.AverageValueMeter.reset"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.AverageValueMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.AverageValueMeter.reset": [[126, 131], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.AverageValueMeter.update": [[132, 137], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.display_opts": [[20, 52], ["print"], "function", ["None"], ["", "def", "display_opts", "(", "opts", ")", ":", "\n", "\n", "\n", "    ", "display_msg", "=", "\"\"\"PARAMETERS:\n            model         %s %s %s\n            adjust        %s %s %s\n            dataset       %s %s %s\n            loadmodel     %s %s %s\n            npatch        %s %s %s\n            npoint        %s %s %s\n            nlatent       %s %s %s\n            nbatch        %s %s %s\n            lrate         %s %s %s\n            nepoch        %s %s %s\n            first decay   %s %s %s\n            second decay  %s %s %s\n            training_id   %s %s %s\n            \"\"\"", "%", "(", "COLORS", ".", "OKGREEN", ",", "opts", ".", "model", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "adjust", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "dataset", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "loadmodel", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "npatch", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "npoint", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "nlatent", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "nbatch", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "lrate", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "nepoch", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "firstdecay", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "seconddecay", ",", "COLORS", ".", "ENDC", ",", "\n", "COLORS", ".", "OKGREEN", ",", "opts", ".", "training_id", ",", "COLORS", ".", "ENDC", ")", "\n", "\n", "print", "(", "display_msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.display_it": [[54, 87], ["print"], "function", ["None"], ["", "def", "display_it", "(", "mode", ",", "opt", ",", "epoch_id", ",", "batch_id", ",", "loss", "=", "None", ")", ":", "\n", "    ", "\"\"\"display iteration\"\"\"", "\n", "\n", "if", "batch_id", "%", "50", "==", "0", ":", "\n", "        ", "msg", "=", "''", "\n", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "msg", "=", "\"[%s%s%s] - %d/%d - %04d   %s%f%s\"", "%", "(", "COLORS", ".", "OKGREEN", ",", "\n", "opt", ".", "training_id", ",", "\n", "COLORS", ".", "ENDC", ",", "\n", "epoch_id", ",", "\n", "opt", ".", "nepoch", ",", "\n", "batch_id", ",", "\n", "COLORS", ".", "BOLD", ",", "\n", "loss", ",", "\n", "COLORS", ".", "ENDC", ")", "\n", "\n", "", "if", "mode", "==", "'valid'", ":", "\n", "            ", "msg", "=", "\"[%s%s%s] - %d/%d - %04d   %s%f%s\"", "%", "(", "COLORS", ".", "OKBLUE", ",", "\n", "opt", ".", "training_id", ",", "\n", "COLORS", ".", "ENDC", ",", "\n", "epoch_id", ",", "\n", "opt", ".", "nepoch", ",", "\n", "batch_id", ",", "\n", "COLORS", ".", "BOLD", ",", "\n", "loss", ",", "\n", "COLORS", ".", "ENDC", ")", "\n", "\n", "", "if", "mode", "==", "'test'", ":", "\n", "            ", "msg", "=", "\"[%s%s%s] - %d/%d\"", "%", "(", "COLORS", ".", "WARNING", ",", "\n", "opt", ".", "training_id", ",", "COLORS", ".", "ENDC", ",", "\n", "epoch_id", ",", "opt", ".", "nepoch", ")", "\n", "", "print", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.weights_init": [[113, 120], ["classname.find", "m.weight.data.normal_", "classname.find", "m.weight.data.normal_", "m.bias.data.fill_"], "function", ["None"], ["", "", "", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.auxiliary.utils.my_get_n_random_lines": [[140, 148], ["os.stat", "open", "file.seek", "file.read", "file.read.split", "random.randint"], "function", ["None"], ["def", "my_get_n_random_lines", "(", "path", ",", "n", "=", "5", ")", ":", "\n", "    ", "MY_CHUNK_SIZE", "=", "lenght_line", "*", "(", "n", "+", "2", ")", "\n", "lenght", "=", "os", ".", "stat", "(", "path", ")", ".", "st_size", "\n", "with", "open", "(", "path", ",", "'r'", ")", "as", "file", ":", "\n", "            ", "file", ".", "seek", "(", "random", ".", "randint", "(", "400", ",", "lenght", "-", "MY_CHUNK_SIZE", ")", ")", "\n", "chunk", "=", "file", ".", "read", "(", "MY_CHUNK_SIZE", ")", "\n", "lines", "=", "chunk", ".", "split", "(", "os", ".", "linesep", ")", "\n", "return", "lines", "[", "1", ":", "n", "+", "1", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferFunction.forward": [[13, 32], ["xyz1.size", "xyz2.size", "torch.zeros", "torch.zeros", "torch.zeros().type", "torch.zeros().type", "dist1.cuda.cuda.cuda", "dist2.cuda.cuda.cuda", "idx1.cuda.cuda.cuda", "idx2.cuda.cuda.cuda", "chamfer.forward", "ctx.save_for_backward", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.forward"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "xyz1", ",", "xyz2", ")", ":", "\n", "        ", "batchsize", ",", "n", ",", "_", "=", "xyz1", ".", "size", "(", ")", "\n", "_", ",", "m", ",", "_", "=", "xyz2", ".", "size", "(", ")", "\n", "\n", "dist1", "=", "torch", ".", "zeros", "(", "batchsize", ",", "n", ")", "\n", "dist2", "=", "torch", ".", "zeros", "(", "batchsize", ",", "m", ")", "\n", "\n", "idx1", "=", "torch", ".", "zeros", "(", "batchsize", ",", "n", ")", ".", "type", "(", "torch", ".", "IntTensor", ")", "\n", "idx2", "=", "torch", ".", "zeros", "(", "batchsize", ",", "m", ")", ".", "type", "(", "torch", ".", "IntTensor", ")", "\n", "\n", "dist1", "=", "dist1", ".", "cuda", "(", ")", "\n", "dist2", "=", "dist2", ".", "cuda", "(", ")", "\n", "idx1", "=", "idx1", ".", "cuda", "(", ")", "\n", "idx2", "=", "idx2", ".", "cuda", "(", ")", "\n", "\n", "chamfer", ".", "forward", "(", "xyz1", ",", "xyz2", ",", "dist1", ",", "dist2", ",", "idx1", ",", "idx2", ")", "\n", "ctx", ".", "save_for_backward", "(", "xyz1", ",", "xyz2", ",", "idx1", ",", "idx2", ")", "\n", "return", "dist1", ",", "dist2", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferFunction.backward": [[33, 46], ["graddist1.contiguous.contiguous.contiguous", "graddist2.contiguous.contiguous.contiguous", "torch.zeros", "torch.zeros", "gradxyz1.cuda.cuda.cuda", "gradxyz2.cuda.cuda.cuda", "chamfer.backward", "xyz1.size", "xyz2.size"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferFunction.backward"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "graddist1", ",", "graddist2", ")", ":", "\n", "        ", "xyz1", ",", "xyz2", ",", "idx1", ",", "idx2", "=", "ctx", ".", "saved_tensors", "\n", "graddist1", "=", "graddist1", ".", "contiguous", "(", ")", "\n", "graddist2", "=", "graddist2", ".", "contiguous", "(", ")", "\n", "\n", "gradxyz1", "=", "torch", ".", "zeros", "(", "xyz1", ".", "size", "(", ")", ")", "\n", "gradxyz2", "=", "torch", ".", "zeros", "(", "xyz2", ".", "size", "(", ")", ")", "\n", "\n", "gradxyz1", "=", "gradxyz1", ".", "cuda", "(", ")", "\n", "gradxyz2", "=", "gradxyz2", ".", "cuda", "(", ")", "\n", "chamfer", ".", "backward", "(", "xyz1", ",", "xyz2", ",", "gradxyz1", ",", "gradxyz2", ",", "graddist1", ",", "graddist2", ",", "idx1", ",", "idx2", ")", "\n", "return", "gradxyz1", ",", "gradxyz2", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__": [[48, 50], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "chamferDist", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TheoDEPRELLE_AtlasNetV2.extension.dist_chamfer.chamferDist.forward": [[51, 53], ["chamferFunction.apply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input1", ",", "input2", ")", ":", "\n", "        ", "return", "chamferFunction", ".", "apply", "(", "input1", ",", "input2", ")", "\n", "", "", ""]]}