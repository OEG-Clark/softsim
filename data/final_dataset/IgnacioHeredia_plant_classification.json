{"home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.scrapping_pools.hma-scraper.scrape_hma": [[15, 43], ["requests.get", "requests.get.text.splitlines", "bad_class.rstrip.rstrip", "re.compile", "junk.replace.sub", "junk.replace.replace", "re.findall", "re.search", "src[].lower", "re.search.group"], "function", ["None"], ["def", "scrape_hma", "(", "uri", ")", ":", "\n", "    ", "r", "=", "requests", ".", "get", "(", "'http://proxylist.hidemyass.com/'", "+", "uri", ")", "\n", "bad_class", "=", "\"(\"", "\n", "for", "line", "in", "r", ".", "text", ".", "splitlines", "(", ")", ":", "\n", "        ", "class_name", "=", "re", ".", "search", "(", "r'\\.([a-zA-Z0-9_\\-]{4})\\{display:none\\}'", ",", "line", ")", "\n", "if", "class_name", "is", "not", "None", ":", "\n", "           ", "bad_class", "+=", "class_name", ".", "group", "(", "1", ")", "+", "'|'", "\n", "\n", "", "", "bad_class", "=", "bad_class", ".", "rstrip", "(", "'|'", ")", "\n", "bad_class", "+=", "')'", "\n", "\n", "to_remove", "=", "'(<span class\\=\"'", "+", "bad_class", "+", "'\">[0-9]{1,3}</span>|<span style=\\\"display:(none|inline)\\\">[0-9]{1,3}</span>|<div style=\"display:none\">[0-9]{1,3}</div>|<span class=\"[a-zA-Z0-9_\\-]{1,4}\">|</?span>|<span style=\"display: inline\">)'", "\n", "\n", "junk", "=", "re", ".", "compile", "(", "to_remove", ",", "flags", "=", "re", ".", "M", ")", "\n", "junk", "=", "junk", ".", "sub", "(", "''", ",", "r", ".", "text", ")", "\n", "junk", "=", "junk", ".", "replace", "(", "\"\\n\"", ",", "\"\"", ")", "\n", "\n", "proxy_src", "=", "re", ".", "findall", "(", "'([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})\\s*</td>\\s*<td>\\s*([0-9]{2,6}).{100,1200}(socks4/5|HTTPS?)'", ",", "junk", ")", "\n", "\n", "list", "=", "''", "\n", "for", "src", "in", "proxy_src", ":", "\n", "        ", "if", "src", "[", "2", "]", "==", "'socks4/5'", ":", "\n", "            ", "proto", "=", "'socks5h'", "\n", "", "else", ":", "\n", "            ", "proto", "=", "src", "[", "2", "]", ".", "lower", "(", ")", "\n", "", "if", "src", ":", "\n", "            ", "list", "+=", "proto", "+", "'://'", "+", "src", "[", "0", "]", "+", "':'", "+", "src", "[", "1", "]", "+", "'\\n'", "\n", "", "", "return", "(", "list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_simple_block": [[21, 71], ["net.append", "net.append", "net.append", "dict", "lasagne.layers.BatchNormLayer", "lasagne.layers.Conv2DLayer", "lasagne.layers.Conv2DLayer", "lasagne.layers.NonlinearityLayer"], "function", ["None"], ["num_filters", ",", "filter_size", ",", "stride", ",", "pad", ",", "\n", "use_bias", "=", "False", ",", "nonlin", "=", "rectify", ")", ":", "\n", "    ", "\"\"\"Creates stacked Lasagne layers ConvLayer -> BN -> (ReLu)\n    Parameters:\n    ----------\n    incoming_layer : instance of Lasagne layer\n        Parent layer\n    names : list of string\n        Names of the layers in block\n    num_filters : int\n        Number of filters in convolution layer\n    filter_size : int\n        Size of filters in convolution layer\n    stride : int\n        Stride of convolution layer\n    pad : int\n        Padding of convolution layer\n    use_bias : bool\n        Whether to use bias in conlovution layer\n    nonlin : function\n        Nonlinearity type of Nonlinearity layer\n    Returns\n    -------\n    tuple: (net, last_layer_name)\n        net : dict\n            Dictionary with stacked layers\n        last_layer_name : string\n            Last layer name\n    \"\"\"", "\n", "net", "=", "[", "]", "\n", "net", ".", "append", "(", "(", "\n", "names", "[", "0", "]", ",", "\n", "ConvLayer", "(", "incoming_layer", ",", "num_filters", ",", "filter_size", ",", "pad", ",", "stride", ",", "\n", "flip_filters", "=", "False", ",", "nonlinearity", "=", "None", ")", "if", "use_bias", "\n", "else", "ConvLayer", "(", "incoming_layer", ",", "num_filters", ",", "filter_size", ",", "stride", ",", "pad", ",", "b", "=", "None", ",", "\n", "flip_filters", "=", "False", ",", "nonlinearity", "=", "None", ")", "\n", ")", ")", "\n", "\n", "net", ".", "append", "(", "(", "\n", "names", "[", "1", "]", ",", "\n", "BatchNormLayer", "(", "net", "[", "-", "1", "]", "[", "1", "]", ")", "\n", ")", ")", "\n", "if", "nonlin", "is", "not", "None", ":", "\n", "        ", "net", ".", "append", "(", "(", "\n", "names", "[", "2", "]", ",", "\n", "NonlinearityLayer", "(", "net", "[", "-", "1", "]", "[", "1", "]", ",", "nonlinearity", "=", "nonlin", ")", "\n", ")", ")", "\n", "\n", "", "return", "dict", "(", "net", ")", ",", "net", "[", "-", "1", "]", "[", "0", "]", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_residual_block": [[73, 135], ["resnet50.build_simple_block", "net.update", "resnet50.build_simple_block", "net.update", "resnet50.build_simple_block", "net.update", "lasagne.layers.ElemwiseSumLayer", "lasagne.layers.NonlinearityLayer", "map", "int", "int", "map", "map", "resnet50.build_simple_block", "net.update", "lasagne.layers.get_output_shape", "map", "int", "int", "lasagne.layers.get_output_shape", "lasagne.layers.get_output_shape", "lasagne.layers.get_output_shape"], "function", ["home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_simple_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_simple_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_simple_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_simple_block"], ["upscale_factor", "=", "4", ",", "ix", "=", "''", ")", ":", "\n", "    ", "\"\"\"Creates two-branch residual block\n    Parameters:\n    ----------\n    incoming_layer : instance of Lasagne layer\n        Parent layer\n    ratio_n_filter : float\n        Scale factor of filter bank at the input of residual block\n    ratio_size : float\n        Scale factor of filter size\n    has_left_branch : bool\n        if True, then left branch contains simple block\n    upscale_factor : float\n        Scale factor of filter bank at the output of residual block\n    ix : int\n        Id of residual block\n    Returns\n    -------\n    tuple: (net, last_layer_name)\n        net : dict\n            Dictionary with stacked layers\n        last_layer_name : string\n            Last layer name\n    \"\"\"", "\n", "simple_block_name_pattern", "=", "[", "'res%s_branch%i%s'", ",", "'bn%s_branch%i%s'", ",", "'res%s_branch%i%s_relu'", "]", "\n", "\n", "net", "=", "{", "}", "\n", "\n", "# right branch", "\n", "net_tmp", ",", "last_layer_name", "=", "build_simple_block", "(", "\n", "incoming_layer", ",", "map", "(", "lambda", "s", ":", "s", "%", "(", "ix", ",", "2", ",", "'a'", ")", ",", "simple_block_name_pattern", ")", ",", "\n", "int", "(", "lasagne", ".", "layers", ".", "get_output_shape", "(", "incoming_layer", ")", "[", "1", "]", "*", "ratio_n_filter", ")", ",", "1", ",", "int", "(", "1.0", "/", "ratio_size", ")", ",", "0", ")", "\n", "net", ".", "update", "(", "net_tmp", ")", "\n", "\n", "net_tmp", ",", "last_layer_name", "=", "build_simple_block", "(", "\n", "net", "[", "last_layer_name", "]", ",", "map", "(", "lambda", "s", ":", "s", "%", "(", "ix", ",", "2", ",", "'b'", ")", ",", "simple_block_name_pattern", ")", ",", "\n", "lasagne", ".", "layers", ".", "get_output_shape", "(", "net", "[", "last_layer_name", "]", ")", "[", "1", "]", ",", "3", ",", "1", ",", "1", ")", "\n", "net", ".", "update", "(", "net_tmp", ")", "\n", "\n", "net_tmp", ",", "last_layer_name", "=", "build_simple_block", "(", "\n", "net", "[", "last_layer_name", "]", ",", "map", "(", "lambda", "s", ":", "s", "%", "(", "ix", ",", "2", ",", "'c'", ")", ",", "simple_block_name_pattern", ")", ",", "\n", "lasagne", ".", "layers", ".", "get_output_shape", "(", "net", "[", "last_layer_name", "]", ")", "[", "1", "]", "*", "upscale_factor", ",", "1", ",", "1", ",", "0", ",", "\n", "nonlin", "=", "None", ")", "\n", "net", ".", "update", "(", "net_tmp", ")", "\n", "\n", "right_tail", "=", "net", "[", "last_layer_name", "]", "\n", "left_tail", "=", "incoming_layer", "\n", "\n", "# left branch", "\n", "if", "has_left_branch", ":", "\n", "        ", "net_tmp", ",", "last_layer_name", "=", "build_simple_block", "(", "\n", "incoming_layer", ",", "map", "(", "lambda", "s", ":", "s", "%", "(", "ix", ",", "1", ",", "''", ")", ",", "simple_block_name_pattern", ")", ",", "\n", "int", "(", "lasagne", ".", "layers", ".", "get_output_shape", "(", "incoming_layer", ")", "[", "1", "]", "*", "4", "*", "ratio_n_filter", ")", ",", "1", ",", "int", "(", "1.0", "/", "ratio_size", ")", ",", "0", ",", "\n", "nonlin", "=", "None", ")", "\n", "net", ".", "update", "(", "net_tmp", ")", "\n", "left_tail", "=", "net", "[", "last_layer_name", "]", "\n", "\n", "", "net", "[", "'res%s'", "%", "ix", "]", "=", "ElemwiseSumLayer", "(", "[", "left_tail", ",", "right_tail", "]", ",", "coeffs", "=", "1", ")", "\n", "net", "[", "'res%s_relu'", "%", "ix", "]", "=", "NonlinearityLayer", "(", "net", "[", "'res%s'", "%", "ix", "]", ",", "nonlinearity", "=", "rectify", ")", "\n", "\n", "return", "net", ",", "'res%s_relu'", "%", "ix", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_model": [[137, 186], ["lasagne.layers.InputLayer", "resnet50.build_simple_block", "net.update", "lasagne.layers.Pool2DLayer", "list", "list", "list", "list", "lasagne.layers.Pool2DLayer", "lasagne.layers.DenseLayer", "lasagne.layers.NonlinearityLayer", "net.update", "net.update", "net.update", "net.update", "resnet50.build_residual_block", "resnet50.build_residual_block", "resnet50.build_residual_block", "resnet50.build_residual_block", "resnet50.build_residual_block", "resnet50.build_residual_block", "resnet50.build_residual_block", "resnet50.build_residual_block"], "function", ["home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_simple_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_residual_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_residual_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_residual_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_residual_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_residual_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_residual_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_residual_block", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.models.resnet50.build_residual_block"], ["    ", "net", "=", "{", "}", "\n", "net", "[", "'input'", "]", "=", "InputLayer", "(", "(", "None", ",", "3", ",", "224", ",", "224", ")", ",", "input_var", "=", "input_var", ")", "\n", "sub_net", ",", "parent_layer_name", "=", "build_simple_block", "(", "\n", "net", "[", "'input'", "]", ",", "[", "'conv1'", ",", "'bn_conv1'", ",", "'conv1_relu'", "]", ",", "\n", "64", ",", "7", ",", "3", ",", "2", ",", "use_bias", "=", "True", ")", "\n", "net", ".", "update", "(", "sub_net", ")", "\n", "net", "[", "'pool1'", "]", "=", "PoolLayer", "(", "net", "[", "parent_layer_name", "]", ",", "pool_size", "=", "3", ",", "stride", "=", "2", ",", "pad", "=", "0", ",", "mode", "=", "'max'", ",", "ignore_border", "=", "False", ")", "\n", "block_size", "=", "list", "(", "'abc'", ")", "\n", "parent_layer_name", "=", "'pool1'", "\n", "for", "c", "in", "block_size", ":", "\n", "        ", "if", "c", "==", "'a'", ":", "\n", "            ", "sub_net", ",", "parent_layer_name", "=", "build_residual_block", "(", "net", "[", "parent_layer_name", "]", ",", "1", ",", "1", ",", "True", ",", "4", ",", "ix", "=", "'2%s'", "%", "c", ")", "\n", "", "else", ":", "\n", "            ", "sub_net", ",", "parent_layer_name", "=", "build_residual_block", "(", "net", "[", "parent_layer_name", "]", ",", "1.0", "/", "4", ",", "1", ",", "False", ",", "4", ",", "ix", "=", "'2%s'", "%", "c", ")", "\n", "", "net", ".", "update", "(", "sub_net", ")", "\n", "\n", "", "block_size", "=", "list", "(", "'abcd'", ")", "\n", "for", "c", "in", "block_size", ":", "\n", "        ", "if", "c", "==", "'a'", ":", "\n", "            ", "sub_net", ",", "parent_layer_name", "=", "build_residual_block", "(", "\n", "net", "[", "parent_layer_name", "]", ",", "1.0", "/", "2", ",", "1.0", "/", "2", ",", "True", ",", "4", ",", "ix", "=", "'3%s'", "%", "c", ")", "\n", "", "else", ":", "\n", "            ", "sub_net", ",", "parent_layer_name", "=", "build_residual_block", "(", "net", "[", "parent_layer_name", "]", ",", "1.0", "/", "4", ",", "1", ",", "False", ",", "4", ",", "ix", "=", "'3%s'", "%", "c", ")", "\n", "", "net", ".", "update", "(", "sub_net", ")", "\n", "\n", "", "block_size", "=", "list", "(", "'abcdef'", ")", "\n", "for", "c", "in", "block_size", ":", "\n", "        ", "if", "c", "==", "'a'", ":", "\n", "            ", "sub_net", ",", "parent_layer_name", "=", "build_residual_block", "(", "\n", "net", "[", "parent_layer_name", "]", ",", "1.0", "/", "2", ",", "1.0", "/", "2", ",", "True", ",", "4", ",", "ix", "=", "'4%s'", "%", "c", ")", "\n", "", "else", ":", "\n", "            ", "sub_net", ",", "parent_layer_name", "=", "build_residual_block", "(", "net", "[", "parent_layer_name", "]", ",", "1.0", "/", "4", ",", "1", ",", "False", ",", "4", ",", "ix", "=", "'4%s'", "%", "c", ")", "\n", "", "net", ".", "update", "(", "sub_net", ")", "\n", "\n", "", "block_size", "=", "list", "(", "'abc'", ")", "\n", "for", "c", "in", "block_size", ":", "\n", "        ", "if", "c", "==", "'a'", ":", "\n", "            ", "sub_net", ",", "parent_layer_name", "=", "build_residual_block", "(", "\n", "net", "[", "parent_layer_name", "]", ",", "1.0", "/", "2", ",", "1.0", "/", "2", ",", "True", ",", "4", ",", "ix", "=", "'5%s'", "%", "c", ")", "\n", "", "else", ":", "\n", "            ", "sub_net", ",", "parent_layer_name", "=", "build_residual_block", "(", "net", "[", "parent_layer_name", "]", ",", "1.0", "/", "4", ",", "1", ",", "False", ",", "4", ",", "ix", "=", "'5%s'", "%", "c", ")", "\n", "", "net", ".", "update", "(", "sub_net", ")", "\n", "", "net", "[", "'pool5'", "]", "=", "PoolLayer", "(", "net", "[", "parent_layer_name", "]", ",", "pool_size", "=", "7", ",", "stride", "=", "1", ",", "pad", "=", "0", ",", "\n", "mode", "=", "'average_exc_pad'", ",", "ignore_border", "=", "False", ")", "\n", "net", "[", "'fc1000'", "]", "=", "DenseLayer", "(", "net", "[", "'pool5'", "]", ",", "num_units", "=", "output_dim", ",", "nonlinearity", "=", "None", ")", "\n", "net", "[", "'prob'", "]", "=", "NonlinearityLayer", "(", "net", "[", "'fc1000'", "]", ",", "nonlinearity", "=", "softmax", ")", "\n", "\n", "return", "net", "\n", "", ""]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.catch_url_error": [[47, 72], ["requests.head().headers.get", "requests.head().headers.get.split", "requests.head"], "function", ["None"], ["def", "catch_url_error", "(", "url_list", ")", ":", "\n", "    ", "error_dict", "=", "{", "}", "\n", "\n", "# Error catch: Empty query", "\n", "if", "not", "url_list", ":", "\n", "        ", "error_dict", "[", "'Error_type'", "]", "=", "'Empty query'", "\n", "return", "error_dict", "\n", "\n", "", "for", "i", "in", "url_list", ":", "\n", "\n", "# Error catch: Inexistent url        ", "\n", "        ", "try", ":", "\n", "            ", "url_type", "=", "requests", ".", "head", "(", "i", ")", ".", "headers", ".", "get", "(", "'content-type'", ")", "\n", "", "except", ":", "\n", "            ", "error_dict", "[", "'Error_type'", "]", "=", "'Failed url connection'", "\n", "error_dict", "[", "'Error_description'", "]", "=", "\"\"\"Check you wrote the url address correctly.\"\"\"", "\n", "return", "error_dict", "\n", "\n", "# Error catch: Wrong formatted urls    ", "\n", "", "if", "url_type", ".", "split", "(", "'/'", ")", "[", "0", "]", "!=", "'image'", ":", "\n", "            ", "error_dict", "[", "'Error_type'", "]", "=", "'Url image format error'", "\n", "error_dict", "[", "'Error_description'", "]", "=", "\"\"\"Some urls were not in image format. Check you didn't uploaded a preview of the image rather than the image itself.\"\"\"", "\n", "return", "error_dict", "\n", "\n", "", "", "return", "error_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.allowed_file": [[74, 80], ["filename.rsplit"], "function", ["None"], ["", "def", "allowed_file", "(", "app", ",", "filename", ")", ":", "\n", "    ", "\"\"\"\n    For a given file, return whether it's an allowed type or not\n    \"\"\"", "\n", "return", "'.'", "in", "filename", "and", "filename", ".", "rsplit", "(", "'.'", ",", "1", ")", "[", "1", "]", "in", "app", ".", "config", "[", "'ALLOWED_EXTENSIONS'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.catch_localfile_error": [[82, 98], ["webpage_utils.allowed_file"], "function", ["home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.allowed_file"], ["", "def", "catch_localfile_error", "(", "app", ",", "local_list", ")", ":", "\n", "    ", "error_dict", "=", "{", "}", "\n", "\n", "# Error catch: Empty query", "\n", "if", "not", "local_list", "[", "0", "]", ".", "filename", ":", "\n", "        ", "error_dict", "[", "'Error_type'", "]", "=", "'Empty query'", "\n", "return", "error_dict", "\n", "\n", "# Error catch: Image format error", "\n", "", "for", "f", "in", "local_list", ":", "\n", "        ", "if", "not", "allowed_file", "(", "app", ",", "f", ".", "filename", ")", ":", "\n", "            ", "error_dict", "[", "'Error_type'", "]", "=", "'Local image format error'", "\n", "error_dict", "[", "'Error_description'", "]", "=", "\"\"\"At least one file is not in a standard image format (jpg|jpeg|png).\"\"\"", "\n", "return", "error_dict", "\n", "\n", "", "", "return", "error_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.print_error": [[100, 106], ["app.logger.error", "flask.flash", "message.keys", "flask.Markup"], "function", ["None"], ["", "def", "print_error", "(", "app", ",", "message", ")", ":", "\n", "    ", "app", ".", "logger", ".", "error", "(", "message", "[", "'Error_type'", "]", ")", "\n", "error_message", "=", "'<center><b>{}</b></center>'", ".", "format", "(", "message", "[", "'Error_type'", "]", ")", "\n", "if", "'Error_description'", "in", "message", ".", "keys", "(", ")", ":", "\n", "        ", "error_message", "+=", "'<br>{}'", ".", "format", "(", "message", "[", "'Error_description'", "]", ")", "\n", "", "flash", "(", "Markup", "(", "error_message", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.image_link": [[108, 119], ["links.append", "requests.compat.urlencode"], "function", ["None"], ["", "def", "image_link", "(", "pred_lab", ")", ":", "\n", "    ", "\"\"\"\n    Return link to Google images\n    \"\"\"", "\n", "base_url", "=", "'https://www.google.es/search?'", "\n", "links", "=", "[", "]", "\n", "for", "i", "in", "pred_lab", ":", "\n", "        ", "params", "=", "{", "'tbm'", ":", "'isch'", ",", "'q'", ":", "i", "}", "\n", "url", "=", "base_url", "+", "requests", ".", "compat", ".", "urlencode", "(", "params", ")", "\n", "links", ".", "append", "(", "url", ")", "\n", "", "return", "links", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.wikipedia_link": [[121, 131], ["links.append", "i.replace"], "function", ["None"], ["", "def", "wikipedia_link", "(", "pred_lab", ")", ":", "\n", "    ", "\"\"\"\n    Return link to wikipedia webpage\n    \"\"\"", "\n", "base_url", "=", "'https://en.wikipedia.org/wiki/'", "\n", "links", "=", "[", "]", "\n", "for", "i", "in", "pred_lab", ":", "\n", "        ", "url", "=", "base_url", "+", "i", ".", "replace", "(", "' '", ",", "'_'", ")", "\n", "links", ".", "append", "(", "url", ")", "\n", "", "return", "links", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.successful_message": [[133, 144], ["synsets[].tolist", "pred_prob.tolist", "webpage_utils.image_link", "webpage_utils.wikipedia_link", "synsets_info[].tolist"], "function", ["home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.image_link", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.wikipedia_link"], ["", "def", "successful_message", "(", "pred_lab", ",", "pred_prob", ")", ":", "\n", "\n", "    ", "lab_name", "=", "synsets", "[", "pred_lab", "]", ".", "tolist", "(", ")", "\n", "\n", "message", "=", "{", "'pred_lab'", ":", "lab_name", ",", "\n", "'pred_prob'", ":", "pred_prob", ".", "tolist", "(", ")", ",", "\n", "'google_images_link'", ":", "image_link", "(", "lab_name", ")", ",", "\n", "'wikipedia_link'", ":", "wikipedia_link", "(", "lab_name", ")", ",", "\n", "'info'", ":", "synsets_info", "[", "pred_lab", "]", ".", "tolist", "(", ")", ",", "\n", "'status'", ":", "'OK'", "}", "\n", "return", "message", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.url_prediction": [[146, 159], ["webpage_utils.catch_url_error", "model_files.test_utils.single_prediction", "webpage_utils.successful_message", "message.update"], "function", ["home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.catch_url_error", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.successful_message"], ["", "def", "url_prediction", "(", "url_list", ")", ":", "\n", "\n", "# Catch errors (if any)", "\n", "    ", "error_message", "=", "catch_url_error", "(", "url_list", ")", "\n", "if", "error_message", ":", "\n", "        ", "message", "=", "{", "'status'", ":", "'error'", "}", "\n", "message", ".", "update", "(", "error_message", ")", "\n", "return", "message", "\n", "\n", "# Predict", "\n", "", "pred_lab", ",", "pred_prob", "=", "single_prediction", "(", "test_func", ",", "im_list", "=", "url_list", ",", "aug_params", "=", "{", "'mean_RGB'", ":", "mean_RGB", ",", "'filemode'", ":", "'url'", "}", ")", "\n", "\n", "return", "successful_message", "(", "pred_lab", ",", "pred_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.localfile_prediction": [[161, 188], ["webpage_utils.catch_localfile_error", "model_files.test_utils.single_prediction", "webpage_utils.successful_message", "message.update", "str", "os.path.join", "f.save", "filenames.append", "os.remove", "random.randint"], "function", ["home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.catch_localfile_error", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.successful_message"], ["", "def", "localfile_prediction", "(", "app", ",", "uploaded_files", ")", ":", "\n", "\n", "\n", "# Catch errors (if any)", "\n", "    ", "error_message", "=", "catch_localfile_error", "(", "app", ",", "uploaded_files", ")", "\n", "if", "error_message", ":", "\n", "        ", "message", "=", "{", "'status'", ":", "'error'", "}", "\n", "message", ".", "update", "(", "error_message", ")", "\n", "return", "message", "\n", "\n", "# Save images", "\n", "", "filenames", "=", "[", "]", "\n", "for", "f", "in", "uploaded_files", ":", "\n", "#        filename = secure_filename(f.filename)", "\n", "        ", "filename", "=", "str", "(", "random", ".", "randint", "(", "0", ",", "1000000000", ")", ")", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "homedir", ",", "'webpage_files'", ",", "'templates'", ",", "'uploads'", ",", "filename", ")", "\n", "f", ".", "save", "(", "file_path", ")", "\n", "filenames", ".", "append", "(", "file_path", ")", "\n", "\n", "# Predict", "\n", "", "pred_lab", ",", "pred_prob", "=", "single_prediction", "(", "test_func", ",", "im_list", "=", "filenames", ",", "aug_params", "=", "{", "'mean_RGB'", ":", "mean_RGB", ",", "'filemode'", ":", "'local'", "}", ")", "\n", "\n", "# Remove cache images", "\n", "for", "f", "in", "filenames", ":", "\n", "        ", "os", ".", "remove", "(", "f", ")", "\n", "\n", "", "return", "successful_message", "(", "pred_lab", ",", "pred_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.label_list_to_html": [[190, 259], ["os.path.dirname", "numpy.genfromtxt", "numpy.insert", "os.path.dirname", "os.path.join", "open", "text_file.write", "os.path.realpath", "numpy.arange", "len"], "function", ["None"], ["", "def", "label_list_to_html", "(", "labels_file", ")", ":", "\n", "    ", "\"\"\"\n    Transform the labels_list.txt to an html file to show as database.\n\n    Parameters\n    ----------\n    labels_file : path to txt file\n        Name of labels file (synsets.txt)\n\n    \"\"\"", "\n", "display", "=", "\"\"\"\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    \n    <head>\n        <!-- Basic Page Needs\n        \u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013 -->\n        <meta charset=\"utf-8\">\n        <title>Plant App</title>\n        <meta name=\"description\" content=\"\">\n        <meta name=\"author\" content=\"\">\n        \n        <!-- Mobile Specific Metas\n        \u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013 -->\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        \n        <!-- FONT\n        \u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013 -->\n        <link href=\"//fonts.googleapis.com/css?family=Raleway:400,300,600\" rel=\"stylesheet\" type=\"text/css\">\n        \n        <!-- CSS\n        \u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013 -->\n        <link type= \"text/css\" rel=\"stylesheet\" href=\"../static/css/normalize.css\">\n        <link type= \"text/css\" rel=\"stylesheet\" href=\"../static/css/skeleton.css\">\n        <link type= \"text/css\" rel=\"stylesheet\" href=\"../static/css/general.css\">\n        <link type= \"text/css\" rel=\"stylesheet\" href=\"../static/css/custom.css\">\n            \n    </head>\n    \n    <body>\n    \n    <!-- Primary Page Layout\n    \u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013 -->\n    <div class=\"container\">\n        <section class=\"header\">\n            <h1 class=\"center\"  style=\"margin-top: 25%\">Automated Plant Recognition</h1>\n        </section>\n        <div class=\"docs-section\">\n            <div class=\"row\">\n              <div class=\"eight columns offset-by-two column\">\n                  \n                  <h4>Labels</h4>\n                  <p id=\"show_predictions\"></p>\n                  <script>document.getElementById(\"show_predictions\").innerHTML = text;</script>\n                  <br>\"\"\"", "\n", "homedir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", ")", "\n", "labels", "=", "np", ".", "genfromtxt", "(", "os", ".", "path", ".", "join", "(", "homedir", ",", "'model_files'", ",", "'data'", ",", "labels_file", ")", ",", "dtype", "=", "'str'", ",", "delimiter", "=", "'/n'", ")", "\n", "labels", "=", "np", ".", "insert", "(", "labels", ",", "np", ".", "arange", "(", "len", "(", "labels", ")", ")", "+", "1", ",", "'<br>'", ")", "\n", "display", "+=", "\" \"", ".", "join", "(", "labels", ")", "\n", "display", "+=", "\"\"\" \n              </div>  \n          </div>\n        </div>\n    </div>\n    </body>\n    </html>\"\"\"", "\n", "\n", "with", "open", "(", "\"templates/label_list.html\"", ",", "\"w\"", ")", "as", "text_file", ":", "\n", "        ", "text_file", ".", "write", "(", "display", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_demo.intmain": [[35, 38], ["app.route", "flask.render_template"], "function", ["None"], ["@", "app", ".", "route", "(", "'/'", ")", "\n", "def", "intmain", "(", ")", ":", "\n", "    ", "return", "render_template", "(", "\"index.html\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_demo.label_list": [[40, 43], ["app.route", "flask.render_template"], "function", ["None"], ["", "@", "app", ".", "route", "(", "'/label_list.html/'", ")", "\n", "def", "label_list", "(", ")", ":", "\n", "    ", "return", "render_template", "(", "'label_list.html'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_demo.static_from_root": [[45, 48], ["app.route", "flask.send_from_directory"], "function", ["None"], ["", "@", "app", ".", "route", "(", "'/robots.txt'", ")", "\n", "def", "static_from_root", "(", ")", ":", "\n", "    ", "return", "send_from_directory", "(", "app", ".", "static_folder", ",", "request", ".", "path", "[", "1", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_demo.url_post": [[50, 63], ["app.route", "webpage_utils.url_prediction", "i.replace", "webpage_utils.print_error", "flask.redirect", "flask.render_template", "url_list.split", "flask.url_for"], "function", ["home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.url_prediction", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.print_error"], ["", "@", "app", ".", "route", "(", "'/url_upload'", ",", "methods", "=", "[", "'POST'", "]", ")", "\n", "def", "url_post", "(", ")", ":", "\n", "    ", "url_list", "=", "request", ".", "form", "[", "'url'", "]", "\n", "url_list", "=", "[", "i", ".", "replace", "(", "' '", ",", "''", ")", "for", "i", "in", "url_list", ".", "split", "(", "' '", ")", "if", "i", "!=", "''", "]", "\n", "\n", "message", "=", "url_prediction", "(", "url_list", ")", "\n", "\n", "if", "message", "[", "'status'", "]", "==", "'error'", ":", "\n", "        ", "print_error", "(", "app", ",", "message", ")", "\n", "return", "redirect", "(", "url_for", "(", "'intmain'", ")", ")", "\n", "\n", "", "if", "message", "[", "'status'", "]", "==", "'OK'", ":", "\n", "        ", "return", "render_template", "(", "'results.html'", ",", "predictions", "=", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_demo.local_post": [[65, 77], ["app.route", "flask.request.files.getlist", "webpage_utils.localfile_prediction", "webpage_utils.print_error", "flask.redirect", "flask.render_template", "flask.url_for"], "function", ["home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.localfile_prediction", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.print_error"], ["", "", "@", "app", ".", "route", "(", "'/local_upload'", ",", "methods", "=", "[", "'POST'", "]", ")", "\n", "def", "local_post", "(", ")", ":", "\n", "    ", "uploaded_files", "=", "request", ".", "files", ".", "getlist", "(", "\"local_files\"", ")", "\n", "\n", "message", "=", "localfile_prediction", "(", "app", ",", "uploaded_files", ")", "\n", "\n", "if", "message", "[", "'status'", "]", "==", "'error'", ":", "\n", "        ", "print_error", "(", "app", ",", "message", ")", "\n", "return", "redirect", "(", "url_for", "(", "'intmain'", ")", ")", "\n", "\n", "", "if", "message", "[", "'status'", "]", "==", "'OK'", ":", "\n", "        ", "return", "render_template", "(", "'results.html'", ",", "predictions", "=", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_demo.api": [[79, 99], ["app.route", "flask.request.form.get", "flask.json.dumps", "flask.request.form.getlist", "webpage_utils.url_prediction", "flask.Response", "flask.Response", "flask.request.files.to_dict().values", "webpage_utils.localfile_prediction", "flask.request.files.to_dict"], "function", ["home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.url_prediction", "home.repos.pwc.inspect_result.IgnacioHeredia_plant_classification.webpage_files.webpage_utils.localfile_prediction"], ["", "", "@", "app", ".", "route", "(", "'/api'", ",", "methods", "=", "[", "'POST'", "]", ")", "\n", "def", "api", "(", ")", ":", "\n", "\n", "    ", "mode", "=", "request", ".", "form", ".", "get", "(", "'mode'", ")", "\n", "if", "mode", "==", "'url'", ":", "\n", "        ", "im_list", "=", "request", ".", "form", ".", "getlist", "(", "'url_list'", ")", "\n", "message", "=", "url_prediction", "(", "im_list", ")", "\n", "", "elif", "mode", "==", "'localfile'", ":", "\n", "        ", "im_list", "=", "request", ".", "files", ".", "to_dict", "(", ")", ".", "values", "(", ")", "\n", "message", "=", "localfile_prediction", "(", "app", ",", "im_list", ")", "\n", "", "else", ":", "\n", "        ", "message", "=", "{", "'status'", ":", "'error'", ",", "'Error_type'", ":", "'Invalid mode'", "}", "\n", "\n", "", "js", "=", "json", ".", "dumps", "(", "message", ")", "\n", "if", "message", "[", "'status'", "]", "==", "'OK'", ":", "\n", "        ", "resp", "=", "Response", "(", "js", ",", "status", "=", "200", ",", "mimetype", "=", "'application/json'", ")", "\n", "", "if", "message", "[", "'status'", "]", "==", "'error'", ":", "\n", "        ", "resp", "=", "Response", "(", "js", ",", "status", "=", "400", ",", "mimetype", "=", "'application/json'", ")", "\n", "\n", "", "return", "resp", "\n", "\n"]]}