{"home.repos.pwc.inspect_result.HuangYG123_CurricularFace.None.train.adjust_learning_rate": [[27, 34], ["None"], "function", ["None"], ["def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "cfg", ")", ":", "\n", "    ", "\"\"\"Decay the learning rate based on schedule\"\"\"", "\n", "lr", "=", "cfg", "[", "'LR'", "]", "\n", "for", "milestone", "in", "cfg", "[", "'STAGES'", "]", ":", "\n", "        ", "lr", "*=", "0.1", "if", "epoch", ">=", "milestone", "else", "1.", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.None.train.main": [[35, 41], ["torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.spawn"], "function", ["None"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "cfg", "=", "configurations", "[", "1", "]", "\n", "ngpus_per_node", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "world_size", "=", "cfg", "[", "'WORLD_SIZE'", "]", "\n", "cfg", "[", "'WORLD_SIZE'", "]", "=", "ngpus_per_node", "*", "world_size", "\n", "mp", ".", "spawn", "(", "main_worker", ",", "nprocs", "=", "ngpus_per_node", ",", "args", "=", "(", "ngpus_per_node", ",", "cfg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.None.train.main_worker": [[42, 178], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.init_process_group", "int", "int", "torchvision.Compose", "dataset.datasets.FaceDataset", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "dataset.datasets.FaceDataset.get_sample_num_of_each_class", "len", "print", "print", "print", "print", "print", "print", "print", "print", "print", "torch.SGD", "print", "print", "print", "print", "LOSS_DICT[].cuda", "print", "print", "print", "print", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "tensorboardX.SummaryWriter", "range", "BACKBONE_NAME.find", "util.utils.separate_irse_bn_paras", "util.utils.separate_resnet_bn_paras", "torch.CrossEntropyLoss", "print", "os.path.isfile", "print", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "torch.utils.data.distributed.DistributedSampler.set_epoch", "train.adjust_learning_rate", "train.train", "print", "print", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "print", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "os.path.isfile", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "optim.SGD.load_state_dict", "torch.nn.parallel.DistributedDataParallel.module.state_dict", "os.path.join", "torch.nn.parallel.DistributedDataParallel.module.state_dict", "optim.SGD.state_dict", "os.path.join", "list", "torch.nn.parallel.DistributedDataParallel.parameters", "util.utils.get_time", "util.utils.get_time"], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.FaceDataset.get_sample_num_of_each_class", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.separate_irse_bn_paras", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.separate_resnet_bn_paras", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.None.train.adjust_learning_rate", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.None.train.train", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.get_time", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.get_time"], ["", "def", "main_worker", "(", "gpu", ",", "ngpus_per_node", ",", "cfg", ")", ":", "\n", "    ", "SEED", "=", "cfg", "[", "'SEED'", "]", "# random seed for reproduce results", "\n", "torch", ".", "manual_seed", "(", "SEED", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "cfg", "[", "'GPU'", "]", "=", "gpu", "\n", "if", "gpu", "!=", "0", ":", "\n", "        ", "def", "print_pass", "(", "*", "args", ")", ":", "\n", "            ", "pass", "\n", "", "builtins", ".", "print", "=", "print_pass", "\n", "", "cfg", "[", "'RANK'", "]", "=", "cfg", "[", "'RANK'", "]", "*", "ngpus_per_node", "+", "gpu", "\n", "dist", ".", "init_process_group", "(", "backend", "=", "cfg", "[", "'DIST_BACKEND'", "]", ",", "init_method", "=", "cfg", "[", "\"DIST_URL\"", "]", ",", "world_size", "=", "cfg", "[", "'WORLD_SIZE'", "]", ",", "rank", "=", "cfg", "[", "'RANK'", "]", ")", "\n", "\n", "# Data loading code", "\n", "batch_size", "=", "int", "(", "cfg", "[", "'BATCH_SIZE'", "]", "/", "ngpus_per_node", ")", "\n", "workers", "=", "int", "(", "(", "cfg", "[", "'NUM_WORKERS'", "]", "+", "ngpus_per_node", "-", "1", ")", "/", "ngpus_per_node", ")", "\n", "DATA_ROOT", "=", "cfg", "[", "'DATA_ROOT'", "]", "# the parent root where your train/val/test data are stored", "\n", "RECORD_DIR", "=", "cfg", "[", "'RECORD_DIR'", "]", "\n", "RGB_MEAN", "=", "cfg", "[", "'RGB_MEAN'", "]", "# for normalize inputs", "\n", "RGB_STD", "=", "cfg", "[", "'RGB_STD'", "]", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "RGB_MEAN", ",", "\n", "std", "=", "RGB_STD", ")", ",", "]", ")", "\n", "dataset_train", "=", "FaceDataset", "(", "DATA_ROOT", ",", "RECORD_DIR", ",", "train_transform", ")", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "dataset_train", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset_train", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "(", "train_sampler", "is", "None", ")", ",", "num_workers", "=", "workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "train_sampler", ",", "drop_last", "=", "True", ")", "\n", "SAMPLE_NUMS", "=", "dataset_train", ".", "get_sample_num_of_each_class", "(", ")", "\n", "NUM_CLASS", "=", "len", "(", "train_loader", ".", "dataset", ".", "classes", ")", "\n", "print", "(", "\"Number of Training Classes: {}\"", ".", "format", "(", "NUM_CLASS", ")", ")", "\n", "\n", "#======= model & loss & optimizer =======#", "\n", "BACKBONE_DICT", "=", "{", "'ResNet_50'", ":", "ResNet_50", ",", "\n", "'ResNet_101'", ":", "ResNet_101", ",", "\n", "'ResNet_152'", ":", "ResNet_152", ",", "\n", "'IR_50'", ":", "IR_50", ",", "\n", "'IR_101'", ":", "IR_101", ",", "\n", "'IR_152'", ":", "IR_152", ",", "\n", "'IR_SE_50'", ":", "IR_SE_50", ",", "\n", "'IR_SE_101'", ":", "IR_SE_101", ",", "\n", "'IR_SE_152'", ":", "IR_SE_152", "}", "\n", "BACKBONE_NAME", "=", "cfg", "[", "'BACKBONE_NAME'", "]", "\n", "INPUT_SIZE", "=", "cfg", "[", "'INPUT_SIZE'", "]", "\n", "assert", "INPUT_SIZE", "==", "[", "112", ",", "112", "]", "\n", "backbone", "=", "BACKBONE_DICT", "[", "BACKBONE_NAME", "]", "(", "INPUT_SIZE", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "print", "(", "backbone", ")", "\n", "print", "(", "\"{} Backbone Generated\"", ".", "format", "(", "BACKBONE_NAME", ")", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "HEAD_DICT", "=", "{", "'ArcFace'", ":", "ArcFace", ",", "\n", "'CurricularFace'", ":", "CurricularFace", "}", "\n", "HEAD_NAME", "=", "cfg", "[", "'HEAD_NAME'", "]", "\n", "EMBEDDING_SIZE", "=", "cfg", "[", "'EMBEDDING_SIZE'", "]", "# feature dimension", "\n", "head", "=", "HEAD_DICT", "[", "HEAD_NAME", "]", "(", "in_features", "=", "EMBEDDING_SIZE", ",", "out_features", "=", "NUM_CLASS", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "print", "(", "head", ")", "\n", "print", "(", "\"{} Head Generated\"", ".", "format", "(", "HEAD_NAME", ")", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "\n", "#--------------------optimizer-----------------------------", "\n", "if", "BACKBONE_NAME", ".", "find", "(", "\"IR\"", ")", ">=", "0", ":", "\n", "        ", "backbone_paras_only_bn", ",", "backbone_paras_wo_bn", "=", "separate_irse_bn_paras", "(", "backbone", ")", "# separate batch_norm parameters from others; do not do weight decay for batch_norm parameters to improve the generalizability", "\n", "", "else", ":", "\n", "        ", "backbone_paras_only_bn", ",", "backbone_paras_wo_bn", "=", "separate_resnet_bn_paras", "(", "backbone", ")", "# separate batch_norm parameters from others; do not do weight decay for batch_norm parameters to improve the generalizability", "\n", "\n", "", "LR", "=", "cfg", "[", "'LR'", "]", "# initial LR", "\n", "WEIGHT_DECAY", "=", "cfg", "[", "'WEIGHT_DECAY'", "]", "\n", "MOMENTUM", "=", "cfg", "[", "'MOMENTUM'", "]", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "[", "{", "'params'", ":", "backbone_paras_wo_bn", "+", "list", "(", "head", ".", "parameters", "(", ")", ")", ",", "'weight_decay'", ":", "WEIGHT_DECAY", "}", ",", "{", "'params'", ":", "backbone_paras_only_bn", "}", "]", ",", "lr", "=", "LR", ",", "momentum", "=", "MOMENTUM", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "print", "(", "optimizer", ")", "\n", "print", "(", "\"Optimizer Generated\"", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "\n", "\n", "# loss", "\n", "LOSS_NAME", "=", "cfg", "[", "'LOSS_NAME'", "]", "\n", "LOSS_DICT", "=", "{", "'Softmax'", ":", "nn", ".", "CrossEntropyLoss", "(", ")", "}", "\n", "loss", "=", "LOSS_DICT", "[", "LOSS_NAME", "]", ".", "cuda", "(", "gpu", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "print", "(", "loss", ")", "\n", "print", "(", "\"{} Loss Generated\"", ".", "format", "(", "loss", ")", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "\n", "torch", ".", "cuda", ".", "set_device", "(", "cfg", "[", "'GPU'", "]", ")", "\n", "backbone", ".", "cuda", "(", "cfg", "[", "'GPU'", "]", ")", "\n", "head", ".", "cuda", "(", "cfg", "[", "'GPU'", "]", ")", "\n", "\n", "#optionally resume from a checkpoint ", "\n", "BACKBONE_RESUME_ROOT", "=", "cfg", "[", "'BACKBONE_RESUME_ROOT'", "]", "# the root to resume training from a saved checkpoint", "\n", "HEAD_RESUME_ROOT", "=", "cfg", "[", "'HEAD_RESUME_ROOT'", "]", "# the root to resume training from a saved checkpoint", "\n", "if", "BACKBONE_RESUME_ROOT", ":", "\n", "        ", "print", "(", "\"=\"", "*", "60", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "BACKBONE_RESUME_ROOT", ")", ":", "\n", "            ", "print", "(", "\"Loading Backbone Checkpoint '{}'\"", ".", "format", "(", "BACKBONE_RESUME_ROOT", ")", ")", "\n", "loc", "=", "'cuda:{}'", ".", "format", "(", "cfg", "[", "'GPU'", "]", ")", "\n", "backbone", ".", "load_state_dict", "(", "torch", ".", "load", "(", "BACKBONE_RESUME_ROOT", ",", "map_location", "=", "loc", ")", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "HEAD_RESUME_ROOT", ")", ":", "\n", "                ", "print", "(", "\"Loading Head Checkpoint '{}'\"", ".", "format", "(", "HEAD_RESUME_ROOT", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "HEAD_RESUME_ROOT", ",", "map_location", "=", "loc", ")", "\n", "cfg", "[", "'START_EPOCH'", "]", "=", "checkpoint", "[", "'EPOCH'", "]", "\n", "head", ".", "load_state_dict", "(", "checkpoint", "[", "'HEAD'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'OPTIMIZER'", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "\"No Checkpoint Found at '{}' and '{}'. Please Have a Check or Continue to Train from Scratch\"", ".", "format", "(", "BACKBONE_RESUME_ROOT", ",", "HEAD_RESUME_ROOT", ")", ")", "\n", "", "print", "(", "\"=\"", "*", "60", ")", "\n", "\n", "\n", "", "backbone", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "backbone", ",", "device_ids", "=", "[", "cfg", "[", "'GPU'", "]", "]", ")", "\n", "head", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "head", ",", "device_ids", "=", "[", "cfg", "[", "'GPU'", "]", "]", ")", "\n", "\n", "# checkpoint and tensorboard dir", "\n", "MODEL_ROOT", "=", "cfg", "[", "'MODEL_ROOT'", "]", "# the root to buffer your checkpoints", "\n", "LOG_ROOT", "=", "cfg", "[", "'LOG_ROOT'", "]", "# the root to log your train/val status", "\n", "STAGES", "=", "cfg", "[", "'STAGES'", "]", "# epoch stages to decay learning rate", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "MODEL_ROOT", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "MODEL_ROOT", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "LOG_ROOT", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "LOG_ROOT", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "LOG_ROOT", ")", "# writer for buffering intermedium results", "\n", "# train", "\n", "for", "epoch", "in", "range", "(", "cfg", "[", "'START_EPOCH'", "]", ",", "cfg", "[", "'NUM_EPOCH'", "]", ")", ":", "\n", "        ", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "cfg", ")", "\n", "\n", "#train for one epoch", "\n", "train", "(", "train_loader", ",", "backbone", ",", "head", ",", "loss", ",", "optimizer", ",", "epoch", ",", "cfg", ",", "writer", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "print", "(", "\"Save Checkpoint...\"", ")", "\n", "if", "cfg", "[", "'RANK'", "]", "%", "ngpus_per_node", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "backbone", ".", "module", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "MODEL_ROOT", ",", "\"Backbone_{}_Epoch_{}_Time_{}_checkpoint.pth\"", ".", "format", "(", "BACKBONE_NAME", ",", "epoch", "+", "1", ",", "get_time", "(", ")", ")", ")", ")", "\n", "save_dict", "=", "{", "'EPOCH'", ":", "epoch", "+", "1", ",", "\n", "'HEAD'", ":", "head", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "'OPTIMIZER'", ":", "optimizer", ".", "state_dict", "(", ")", "}", "\n", "torch", ".", "save", "(", "save_dict", ",", "os", ".", "path", ".", "join", "(", "MODEL_ROOT", ",", "\"Head_{}_Epoch_{}_Time_{}_checkpoint.pth\"", ".", "format", "(", "HEAD_NAME", ",", "epoch", "+", "1", ",", "get_time", "(", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.None.train.train": [[179, 236], ["backbone.train", "head.train", "util.utils.AverageMeter", "util.utils.AverageMeter", "util.utils.AverageMeter", "tqdm.tqdm", "print", "print", "sys.stdout.flush", "print", "iter", "time.time", "inputs.cuda.cuda", "labels.cuda.cuda", "backbone", "head", "criterion", "time.time", "optimizer.zero_grad", "criterion.backward", "optimizer.step", "util.utils.accuracy", "util.utils.AverageMeter.update", "util.utils.AverageMeter.update", "util.utils.AverageMeter.update", "sys.stdout.flush", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "print", "criterion.data.item", "inputs.cuda.size", "prec1.data.item", "inputs.cuda.size", "prec5.data.item", "inputs.cuda.size", "print", "print", "print", "len"], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.None.train.train", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.None.train.train", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.accuracy", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.AverageMeter.update", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.AverageMeter.update", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.AverageMeter.update"], ["", "", "", "def", "train", "(", "train_loader", ",", "backbone", ",", "head", ",", "criterion", ",", "optimizer", ",", "epoch", ",", "cfg", ",", "writer", ")", ":", "\n", "    ", "DISP_FREQ", "=", "100", "# 100 batch", "\n", "batch", "=", "0", "# batch index", "\n", "backbone", ".", "train", "(", ")", "# set to training mode", "\n", "head", ".", "train", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "for", "inputs", ",", "labels", "in", "tqdm", "(", "iter", "(", "train_loader", ")", ")", ":", "\n", "# compute output", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "inputs", "=", "inputs", ".", "cuda", "(", "cfg", "[", "'GPU'", "]", ",", "non_blocking", "=", "True", ")", "\n", "labels", "=", "labels", ".", "cuda", "(", "cfg", "[", "'GPU'", "]", ",", "non_blocking", "=", "True", ")", "\n", "features", ",", "conv_features", "=", "backbone", "(", "inputs", ")", "\n", "\n", "outputs", ",", "original_logits", "=", "head", "(", "features", ",", "labels", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "labels", ")", "\n", "end_time", "=", "time", ".", "time", "(", ")", "\n", "duration", "=", "end_time", "-", "start_time", "\n", "if", "(", "(", "batch", "+", "1", ")", "%", "DISP_FREQ", "==", "0", ")", "and", "batch", "!=", "0", ":", "\n", "            ", "print", "(", "\"batch inference time\"", ",", "duration", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "prec1", ",", "prec5", "=", "accuracy", "(", "original_logits", ".", "data", ",", "labels", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "data", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "data", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "data", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "# dispaly training loss & acc every DISP_FREQ", "\n", "if", "(", "(", "batch", "+", "1", ")", "%", "DISP_FREQ", "==", "0", ")", "or", "batch", "==", "0", ":", "\n", "            ", "print", "(", "\"=\"", "*", "60", ")", "\n", "print", "(", "'Epoch {}/{} Batch {}/{}\\t'", "\n", "'Training Loss {loss.val:.4f} ({loss.avg:.4f})\\t'", "\n", "'Training Prec@1 {top1.val:.3f} ({top1.avg:.3f})\\t'", "\n", "'Training Prec@5 {top5.val:.3f} ({top5.avg:.3f})'", ".", "format", "(", "\n", "epoch", "+", "1", ",", "cfg", "[", "'NUM_EPOCH'", "]", ",", "batch", "+", "1", ",", "len", "(", "train_loader", ")", ",", "loss", "=", "losses", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "batch", "+=", "1", "# batch index", "\n", "", "epoch_loss", "=", "losses", ".", "avg", "\n", "epoch_acc", "=", "top1", ".", "avg", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "print", "(", "'Epoch: {}/{}\\t'", "'Training Loss {loss.val:.4f} ({loss.avg:.4f})\\t'", "\n", "'Training Prec@1 {top1.val:.3f} ({top1.avg:.3f})\\t'", "\n", "'Training Prec@5 {top5.val:.3f} ({top5.avg:.3f})'", ".", "format", "(", "\n", "epoch", "+", "1", ",", "cfg", "[", "'NUM_EPOCH'", "]", ",", "loss", "=", "losses", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "print", "(", "\"=\"", "*", "60", ")", "\n", "if", "cfg", "[", "'RANK'", "]", "==", "0", ":", "\n", "        ", "writer", ".", "add_scalar", "(", "\"Training_Loss\"", ",", "epoch_loss", ",", "epoch", "+", "1", ")", "\n", "writer", ".", "add_scalar", "(", "\"Training_Accuracy\"", ",", "epoch_acc", ",", "epoch", "+", "1", ")", "\n", "writer", ".", "add_scalar", "(", "\"Top1\"", ",", "top1", ".", "avg", ",", "epoch", "+", "1", ")", "\n", "writer", ".", "add_scalar", "(", "\"Top5\"", ",", "top5", ".", "avg", ",", "epoch", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.head.metrics.ArcFace.__init__": [[25, 42], ["torch.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "math.cos", "math.sin", "math.cos", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "math.sin"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "s", "=", "64.0", ",", "m", "=", "0.50", ",", "easy_margin", "=", "False", ")", ":", "\n", "        ", "super", "(", "ArcFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "\n", "self", ".", "s", "=", "s", "\n", "self", ".", "m", "=", "m", "\n", "\n", "self", ".", "kernel", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "#nn.init.xavier_uniform_(self.kernel)", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "kernel", ",", "std", "=", "0.01", ")", "\n", "\n", "self", ".", "easy_margin", "=", "easy_margin", "\n", "self", ".", "cos_m", "=", "math", ".", "cos", "(", "m", ")", "\n", "self", ".", "sin_m", "=", "math", ".", "sin", "(", "m", ")", "\n", "self", ".", "th", "=", "math", ".", "cos", "(", "math", ".", "pi", "-", "m", ")", "\n", "self", ".", "mm", "=", "math", ".", "sin", "(", "math", ".", "pi", "-", "m", ")", "*", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.head.metrics.ArcFace.forward": [[43, 62], ["metrics.l2_norm", "metrics.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "cos_theta.clamp.clamp.clamp", "cos_theta[].view", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "cos_theta.clamp.clamp.scatter_", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "cos_theta.clamp.clamp.clone", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "label.view().long", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "label.view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "l2_norm.size"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.l2_norm", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "        ", "embbedings", "=", "l2_norm", "(", "embbedings", ",", "axis", "=", "1", ")", "\n", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel", ",", "axis", "=", "0", ")", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", ",", "kernel_norm", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "# for numerical stability", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "origin_cos", "=", "cos_theta", ".", "clone", "(", ")", "\n", "", "target_logit", "=", "cos_theta", "[", "torch", ".", "arange", "(", "0", ",", "embbedings", ".", "size", "(", "0", ")", ")", ",", "label", "]", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "\n", "sin_theta", "=", "torch", ".", "sqrt", "(", "1.0", "-", "torch", ".", "pow", "(", "target_logit", ",", "2", ")", ")", "\n", "cos_theta_m", "=", "target_logit", "*", "self", ".", "cos_m", "-", "sin_theta", "*", "self", ".", "sin_m", "#cos(target+margin)", "\n", "if", "self", ".", "easy_margin", ":", "\n", "            ", "final_target_logit", "=", "torch", ".", "where", "(", "target_logit", ">", "0", ",", "cos_theta_m", ",", "target_loit", ")", "\n", "", "else", ":", "\n", "            ", "final_target_logit", "=", "torch", ".", "where", "(", "target_logit", ">", "self", ".", "th", ",", "cos_theta_m", ",", "target_logit", "-", "self", ".", "mm", ")", "\n", "\n", "", "cos_theta", ".", "scatter_", "(", "1", ",", "label", ".", "view", "(", "-", "1", ",", "1", ")", ".", "long", "(", ")", ",", "final_target_logit", ")", "\n", "output", "=", "cos_theta", "*", "self", ".", "s", "\n", "return", "output", ",", "origin_cos", "*", "self", ".", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.head.metrics.CurricularFace.__init__": [[71, 84], ["torch.Module.__init__", "math.cos", "math.sin", "math.cos", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "metrics.CurricularFace.register_buffer", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "math.sin", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "m", "=", "0.5", ",", "s", "=", "64.", ")", ":", "\n", "        ", "super", "(", "CurricularFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "s", "=", "s", "\n", "self", ".", "cos_m", "=", "math", ".", "cos", "(", "m", ")", "\n", "self", ".", "sin_m", "=", "math", ".", "sin", "(", "m", ")", "\n", "self", ".", "threshold", "=", "math", ".", "cos", "(", "math", ".", "pi", "-", "m", ")", "\n", "self", ".", "mm", "=", "math", ".", "sin", "(", "math", ".", "pi", "-", "m", ")", "*", "m", "\n", "self", ".", "kernel", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'t'", ",", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "kernel", ",", "std", "=", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.head.metrics.CurricularFace.forward": [[85, 106], ["metrics.l2_norm", "metrics.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "cos_theta.clamp.clamp.clamp", "cos_theta[].view", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "cos_theta.clamp.clamp.scatter_", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "cos_theta.clamp.clamp.clone", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "label.view().long", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "cos_theta[].view.mean", "label.view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "l2_norm.size"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.l2_norm", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "        ", "embbedings", "=", "l2_norm", "(", "embbedings", ",", "axis", "=", "1", ")", "\n", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel", ",", "axis", "=", "0", ")", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", ",", "kernel_norm", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "# for numerical stability", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "origin_cos", "=", "cos_theta", ".", "clone", "(", ")", "\n", "", "target_logit", "=", "cos_theta", "[", "torch", ".", "arange", "(", "0", ",", "embbedings", ".", "size", "(", "0", ")", ")", ",", "label", "]", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "\n", "sin_theta", "=", "torch", ".", "sqrt", "(", "1.0", "-", "torch", ".", "pow", "(", "target_logit", ",", "2", ")", ")", "\n", "cos_theta_m", "=", "target_logit", "*", "self", ".", "cos_m", "-", "sin_theta", "*", "self", ".", "sin_m", "#cos(target+margin)", "\n", "mask", "=", "cos_theta", ">", "cos_theta_m", "\n", "final_target_logit", "=", "torch", ".", "where", "(", "target_logit", ">", "self", ".", "threshold", ",", "cos_theta_m", ",", "target_logit", "-", "self", ".", "mm", ")", "\n", "\n", "hard_example", "=", "cos_theta", "[", "mask", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "t", "=", "target_logit", ".", "mean", "(", ")", "*", "0.01", "+", "(", "1", "-", "0.01", ")", "*", "self", ".", "t", "\n", "", "cos_theta", "[", "mask", "]", "=", "hard_example", "*", "(", "self", ".", "t", "+", "hard_example", ")", "\n", "cos_theta", ".", "scatter_", "(", "1", ",", "label", ".", "view", "(", "-", "1", ",", "1", ")", ".", "long", "(", ")", ",", "final_target_logit", ")", "\n", "output", "=", "cos_theta", "*", "self", ".", "s", "\n", "return", "output", ",", "origin_cos", "*", "self", ".", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.head.metrics.l2_norm": [[64, 69], ["torch.norm", "torch.norm", "torch.norm", "torch.div", "torch.div", "torch.div"], "function", ["None"], ["", "", "def", "l2_norm", "(", "input", ",", "axis", "=", "1", ")", ":", "\n", "    ", "norm", "=", "torch", ".", "norm", "(", "input", ",", "2", ",", "axis", ",", "True", ")", "\n", "output", "=", "torch", ".", "div", "(", "input", ",", "norm", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.ImageDataset.__init__": [[10, 22], ["torch.utils.data.Dataset.__init__", "datasets.ImageDataset._find_classes", "datasets.ImageDataset._make_dataset", "print", "sorted", "print", "len", "datasets.ImageDataset.label_to_indexes.keys", "len"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.ImageDataset._find_classes", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.ImageDataset._make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "root_dir", ",", "transform", ")", ":", "\n", "        ", "super", "(", "ImageDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "root_dir", "=", "root_dir", "\n", "classes", ",", "class_to_idx", "=", "self", ".", "_find_classes", "(", "self", ".", "root_dir", ")", "\n", "samples", ",", "label_to_indexes", "=", "self", ".", "_make_dataset", "(", "self", ".", "root_dir", ",", "class_to_idx", ")", "\n", "print", "(", "'samples num'", ",", "len", "(", "samples", ")", ")", "\n", "self", ".", "samples", "=", "samples", "\n", "self", ".", "class_to_idx", "=", "class_to_idx", "\n", "self", ".", "label_to_indexes", "=", "label_to_indexes", "\n", "self", ".", "classes", "=", "sorted", "(", "self", ".", "label_to_indexes", ".", "keys", "(", ")", ")", "\n", "print", "(", "'class num'", ",", "len", "(", "self", ".", "classes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.ImageDataset._find_classes": [[23, 28], ["classes.sort", "os.scandir", "d.is_dir", "range", "len"], "methods", ["None"], ["", "def", "_find_classes", "(", "self", ",", "dir", ")", ":", "\n", "        ", "classes", "=", "[", "d", ".", "name", "for", "d", "in", "os", ".", "scandir", "(", "dir", ")", "if", "d", ".", "is_dir", "(", ")", "]", "\n", "classes", ".", "sort", "(", ")", "\n", "class_to_idx", "=", "{", "classes", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "classes", ")", ")", "}", "\n", "return", "classes", ",", "class_to_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.ImageDataset._make_dataset": [[29, 47], ["os.path.expanduser", "collections.defaultdict", "sorted", "class_to_idx.keys", "os.path.join", "sorted", "os.path.isdir", "os.walk", "sorted", "os.path.join", "images.append", "label2index[].append"], "methods", ["None"], ["", "def", "_make_dataset", "(", "self", ",", "root_dir", ",", "class_to_idx", ")", ":", "\n", "        ", "root_dir", "=", "os", ".", "path", ".", "expanduser", "(", "root_dir", ")", "\n", "images", "=", "[", "]", "\n", "label2index", "=", "defaultdict", "(", "list", ")", "\n", "image_index", "=", "0", "\n", "for", "target", "in", "sorted", "(", "class_to_idx", ".", "keys", "(", ")", ")", ":", "\n", "            ", "d", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "target", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "d", ")", ":", "\n", "                ", "continue", "\n", "", "for", "root", ",", "_", ",", "fnames", "in", "sorted", "(", "os", ".", "walk", "(", "d", ")", ")", ":", "\n", "                ", "for", "fname", "in", "sorted", "(", "fnames", ")", ":", "\n", "                    ", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "fname", ")", "\n", "item", "=", "(", "path", ",", "class_to_idx", "[", "target", "]", ")", "\n", "images", ".", "append", "(", "item", ")", "\n", "label2index", "[", "class_to_idx", "[", "target", "]", "]", ".", "append", "(", "image_index", ")", "\n", "image_index", "+=", "1", "\n", "\n", "", "", "", "return", "images", ",", "label2index", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.ImageDataset.__getitem__": [[48, 55], ["PIL.Image.open", "datasets.ImageDataset.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", ",", "target", "=", "self", ".", "samples", "[", "index", "]", "\n", "sample", "=", "Image", ".", "open", "(", "path", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "\n", "", "return", "sample", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.ImageDataset.__len__": [[56, 58], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.FaceDataset.__init__": [[84, 91], ["torch.utils.data.Dataset.__init__", "datasets.read_samples_from_record", "print", "len", "len"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.read_samples_from_record"], ["    ", "def", "__init__", "(", "self", ",", "root_dir", ",", "record_dir", ",", "transform", ",", "Train", "=", "True", ")", ":", "\n", "        ", "super", "(", "FaceDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "root_dir", "=", "root_dir", "\n", "self", ".", "train", "=", "Train", "\n", "self", ".", "imgs", ",", "self", ".", "classes", ",", "self", ".", "names", ",", "self", ".", "label_to_indexes", "=", "read_samples_from_record", "(", "root_dir", ",", "record_dir", ",", "Train", "=", "Train", ")", "\n", "print", "(", "\"Number of Sampels:{} Number of Classes: {}\"", ".", "format", "(", "len", "(", "self", ".", "imgs", ")", ",", "len", "(", "self", ".", "classes", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.FaceDataset.__getitem__": [[92, 102], ["PIL.Image.open", "datasets.FaceDataset.convert", "datasets.FaceDataset.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", ",", "target", "=", "self", ".", "imgs", "[", "index", "]", "\n", "sample", "=", "Image", ".", "open", "(", "path", ")", "\n", "sample", "=", "sample", ".", "convert", "(", "\"RGB\"", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "", "if", "self", ".", "train", ":", "\n", "            ", "return", "sample", ",", "target", "\n", "", "else", ":", "\n", "            ", "return", "sample", ",", "target", ",", "self", ".", "names", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.FaceDataset.__len__": [[103, 105], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.FaceDataset.get_sample_num_of_each_class": [[106, 111], ["sample_num.append", "len"], "methods", ["None"], ["", "def", "get_sample_num_of_each_class", "(", "self", ")", ":", "\n", "        ", "sample_num", "=", "[", "]", "\n", "for", "label", "in", "self", ".", "classes", ":", "\n", "            ", "sample_num", ".", "append", "(", "len", "(", "self", ".", "label_to_indexes", "[", "label", "]", ")", ")", "\n", "", "return", "sample_num", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.dataset.datasets.read_samples_from_record": [[59, 82], ["set", "collections.defaultdict", "open", "enumerate", "line.split.split", "int", "names.append", "os.path.join", "samples.append", "set.add", "label2index[].append", "print", "exit", "len", "len"], "function", ["None"], ["", "", "def", "read_samples_from_record", "(", "root_dir", ",", "record_dir", ",", "Train", ")", ":", "\n", "    ", "samples", "=", "[", "]", "\n", "classes", "=", "set", "(", ")", "\n", "names", "=", "[", "]", "\n", "label2index", "=", "defaultdict", "(", "list", ")", "\n", "with", "open", "(", "record_dir", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "for", "index", ",", "line", "in", "enumerate", "(", "f", ")", ":", "\n", "            ", "line", "=", "line", ".", "split", "(", ")", "\n", "if", "Train", "and", "len", "(", "line", ")", "<", "2", ":", "\n", "                ", "print", "(", "'Error, Label is missing'", ")", "\n", "exit", "(", ")", "\n", "", "elif", "len", "(", "line", ")", "==", "1", ":", "\n", "                ", "image_dir", "=", "line", "[", "0", "]", "\n", "label", "=", "0", "\n", "", "else", ":", "\n", "                ", "image_dir", ",", "label", "=", "line", "[", "0", "]", ",", "line", "[", "1", "]", "\n", "", "label", "=", "int", "(", "label", ")", "\n", "names", ".", "append", "(", "image_dir", ")", "\n", "image_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "image_dir", ")", "\n", "samples", ".", "append", "(", "(", "image_dir", ",", "label", ")", ")", "\n", "classes", ".", "add", "(", "label", ")", "\n", "label2index", "[", "label", "]", ".", "append", "(", "index", ")", "\n", "", "", "return", "samples", ",", "classes", ",", "names", ",", "label2index", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.metrics.find_thresholds_by_FAR": [[31, 60], ["score_neg[].sort", "len", "len", "numpy.unique", "numpy.insert", "numpy.insert", "numpy.array", "numpy.round().astype", "numpy.array", "np.array.append", "numpy.round"], "function", ["None"], ["self", ".", "m", "=", "m", "\n", "\n", "self", ".", "kernel", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "#nn.init.xavier_uniform_(self.kernel)", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "kernel", ",", "std", "=", "0.01", ")", "\n", "\n", "self", ".", "easy_margin", "=", "easy_margin", "\n", "self", ".", "cos_m", "=", "math", ".", "cos", "(", "m", ")", "\n", "self", ".", "sin_m", "=", "math", ".", "sin", "(", "m", ")", "\n", "self", ".", "th", "=", "math", ".", "cos", "(", "math", ".", "pi", "-", "m", ")", "\n", "self", ".", "mm", "=", "math", ".", "sin", "(", "math", ".", "pi", "-", "m", ")", "*", "m", "\n", "\n", "", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "        ", "embbedings", "=", "l2_norm", "(", "embbedings", ",", "axis", "=", "1", ")", "\n", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel", ",", "axis", "=", "0", ")", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", ",", "kernel_norm", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "# for numerical stability", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "origin_cos", "=", "cos_theta", ".", "clone", "(", ")", "\n", "", "target_logit", "=", "cos_theta", "[", "torch", ".", "arange", "(", "0", ",", "embbedings", ".", "size", "(", "0", ")", ")", ",", "label", "]", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "\n", "sin_theta", "=", "torch", ".", "sqrt", "(", "1.0", "-", "torch", ".", "pow", "(", "target_logit", ",", "2", ")", ")", "\n", "cos_theta_m", "=", "target_logit", "*", "self", ".", "cos_m", "-", "sin_theta", "*", "self", ".", "sin_m", "#cos(target+margin)", "\n", "if", "self", ".", "easy_margin", ":", "\n", "            ", "final_target_logit", "=", "torch", ".", "where", "(", "target_logit", ">", "0", ",", "cos_theta_m", ",", "target_loit", ")", "\n", "", "else", ":", "\n", "            ", "final_target_logit", "=", "torch", ".", "where", "(", "target_logit", ">", "self", ".", "th", ",", "cos_theta_m", ",", "target_logit", "-", "self", ".", "mm", ")", "\n", "\n", "", "cos_theta", ".", "scatter_", "(", "1", ",", "label", ".", "view", "(", "-", "1", ",", "1", ")", ".", "long", "(", ")", ",", "final_target_logit", ")", "\n", "output", "=", "cos_theta", "*", "self", ".", "s", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.metrics.ROC": [[63, 94], ["numpy.zeros", "numpy.zeros", "enumerate", "metrics.find_thresholds_by_FAR", "len", "numpy.size", "warnings.warn", "numpy.mean", "numpy.mean", "false_accept_indices.append", "false_reject_indices.append", "numpy.size", "numpy.argwhere().flatten", "numpy.argwhere().flatten", "numpy.argwhere", "numpy.argwhere"], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.metrics.find_thresholds_by_FAR"], ["\n", "", "", "def", "l2_norm", "(", "input", ",", "axis", "=", "1", ")", ":", "\n", "    ", "norm", "=", "torch", ".", "norm", "(", "input", ",", "2", ",", "axis", ",", "True", ")", "\n", "output", "=", "torch", ".", "div", "(", "input", ",", "norm", ")", "\n", "\n", "return", "output", "\n", "\n", "", "class", "CurricularFace", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "m", "=", "0.5", ",", "s", "=", "64.", ")", ":", "\n", "        ", "super", "(", "CurricularFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "s", "=", "s", "\n", "self", ".", "cos_m", "=", "math", ".", "cos", "(", "m", ")", "\n", "self", ".", "sin_m", "=", "math", ".", "sin", "(", "m", ")", "\n", "self", ".", "threshold", "=", "math", ".", "cos", "(", "math", ".", "pi", "-", "m", ")", "\n", "self", ".", "mm", "=", "math", ".", "sin", "(", "math", ".", "pi", "-", "m", ")", "*", "m", "\n", "self", ".", "kernel", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'t'", ",", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "kernel", ",", "std", "=", "0.01", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "        ", "embbedings", "=", "l2_norm", "(", "embbedings", ",", "axis", "=", "1", ")", "\n", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel", ",", "axis", "=", "0", ")", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", ",", "kernel_norm", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "# for numerical stability", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "origin_cos", "=", "cos_theta", ".", "clone", "(", ")", "\n", "", "target_logit", "=", "cos_theta", "[", "torch", ".", "arange", "(", "0", ",", "embbedings", ".", "size", "(", "0", ")", ")", ",", "label", "]", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "\n", "sin_theta", "=", "torch", ".", "sqrt", "(", "1.0", "-", "torch", ".", "pow", "(", "target_logit", ",", "2", ")", ")", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.metrics.ROC_by_mat": [[95, 136], ["numpy.triu_indices", "score_mat.flatten", "label_mat.flatten", "metrics.ROC", "metrics.ROC", "numpy.meshgrid", "numpy.stack", "range", "numpy.arange", "numpy.arange", "rc.reshape.reshape", "len"], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.metrics.ROC", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.metrics.ROC"], ["cos_theta_m", "=", "target_logit", "*", "self", ".", "cos_m", "-", "sin_theta", "*", "self", ".", "sin_m", "#cos(target+margin)", "\n", "mask", "=", "cos_theta", ">", "cos_theta_m", "\n", "final_target_logit", "=", "torch", ".", "where", "(", "target_logit", ">", "self", ".", "threshold", ",", "cos_theta_m", ",", "target_logit", "-", "self", ".", "mm", ")", "\n", "\n", "hard_example", "=", "cos_theta", "[", "mask", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "t", "=", "target_logit", ".", "mean", "(", ")", "*", "0.01", "+", "(", "1", "-", "0.01", ")", "*", "self", ".", "t", "\n", "", "cos_theta", "[", "mask", "]", "=", "hard_example", "*", "(", "self", ".", "t", "+", "hard_example", ")", "\n", "cos_theta", ".", "scatter_", "(", "1", ",", "label", ".", "view", "(", "-", "1", ",", "1", ")", ".", "long", "(", ")", ",", "final_target_logit", ")", "\n", "output", "=", "cos_theta", "*", "self", ".", "s", "\n", "return", "output", ",", "origin_cos", "*", "self", ".", "s", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.metrics.DIR_FAR": [[140, 206], ["numpy.all", "label_mat.astype().any", "print", "numpy.max", "numpy.zeros", "numpy.argsort", "numpy.ndarray", "range", "numpy.zeros", "numpy.zeros", "enumerate", "metrics.find_thresholds_by_FAR", "enumerate", "DIRs.flatten.flatten", "label_mat.astype().sum", "label_mat.astype", "len", "len", "len", "len", "sorted_label_mat_m[].any", "numpy.logical_not", "numpy.logical_not", "numpy.min", "label_mat.astype"], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.metrics.find_thresholds_by_FAR"], []], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.metrics.accuracy": [[207, 236], ["numpy.zeros", "enumerate", "numpy.argmax", "numpy.mean", "len", "len", "len", "numpy.size", "warnings.warn", "numpy.size", "numpy.mean", "numpy.sort", "numpy.size"], "function", ["None"], []], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.calculate_roc": [[36, 95], ["min", "len", "sklearn.model_selection.KFold", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.arange", "enumerate", "numpy.mean", "numpy.mean", "len", "numpy.subtract", "numpy.sum", "sklearn.model_selection.KFold.split", "numpy.zeros", "enumerate", "numpy.argmax", "enumerate", "verification.calculate_accuracy", "numpy.square", "print", "numpy.concatenate", "sklearn.decomposition.PCA", "sklearn.decomposition.PCA.fit", "sklearn.decomposition.PCA.transform", "sklearn.decomposition.PCA.transform", "sklearn.preprocessing.normalize", "sklearn.preprocessing.normalize", "numpy.subtract", "numpy.sum", "verification.calculate_accuracy", "verification.calculate_accuracy", "numpy.square", "bad_case.append"], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.calculate_accuracy", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.calculate_accuracy", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.calculate_accuracy"], ["def", "calculate_roc", "(", "thresholds", ",", "embeddings1", ",", "embeddings2", ",", "actual_issame", ",", "nrof_folds", "=", "10", ",", "pca", "=", "0", ")", ":", "\n", "    ", "assert", "(", "embeddings1", ".", "shape", "[", "0", "]", "==", "embeddings2", ".", "shape", "[", "0", "]", ")", "\n", "assert", "(", "embeddings1", ".", "shape", "[", "1", "]", "==", "embeddings2", ".", "shape", "[", "1", "]", ")", "\n", "nrof_pairs", "=", "min", "(", "len", "(", "actual_issame", ")", ",", "embeddings1", ".", "shape", "[", "0", "]", ")", "\n", "nrof_thresholds", "=", "len", "(", "thresholds", ")", "\n", "k_fold", "=", "KFold", "(", "n_splits", "=", "nrof_folds", ",", "shuffle", "=", "False", ")", "\n", "\n", "tprs", "=", "np", ".", "zeros", "(", "(", "nrof_folds", ",", "nrof_thresholds", ")", ")", "\n", "fprs", "=", "np", ".", "zeros", "(", "(", "nrof_folds", ",", "nrof_thresholds", ")", ")", "\n", "\n", "accuracy", "=", "np", ".", "zeros", "(", "(", "nrof_folds", ")", ")", "\n", "best_thresholds", "=", "np", ".", "zeros", "(", "(", "nrof_folds", ")", ")", "\n", "indices", "=", "np", ".", "arange", "(", "nrof_pairs", ")", "\n", "# print('pca', pca)", "\n", "bad_case", "=", "[", "]", "\n", "if", "pca", "==", "0", ":", "\n", "        ", "diff", "=", "np", ".", "subtract", "(", "embeddings1", ",", "embeddings2", ")", "\n", "dist", "=", "np", ".", "sum", "(", "np", ".", "square", "(", "diff", ")", ",", "1", ")", "\n", "# dist = pdist(np.vstack([embeddings1, embeddings2]), 'cosine')", "\n", "\n", "", "for", "fold_idx", ",", "(", "train_set", ",", "test_set", ")", "in", "enumerate", "(", "k_fold", ".", "split", "(", "indices", ")", ")", ":", "\n", "# print('train_set', train_set)", "\n", "# print('test_set', test_set)", "\n", "        ", "if", "pca", ">", "0", ":", "\n", "            ", "print", "(", "\"doing pca on\"", ",", "fold_idx", ")", "\n", "embed1_train", "=", "embeddings1", "[", "train_set", "]", "\n", "embed2_train", "=", "embeddings2", "[", "train_set", "]", "\n", "_embed_train", "=", "np", ".", "concatenate", "(", "(", "embed1_train", ",", "embed2_train", ")", ",", "axis", "=", "0", ")", "\n", "# print(_embed_train.shape)", "\n", "pca_model", "=", "PCA", "(", "n_components", "=", "pca", ")", "\n", "pca_model", ".", "fit", "(", "_embed_train", ")", "\n", "embed1", "=", "pca_model", ".", "transform", "(", "embeddings1", ")", "\n", "embed2", "=", "pca_model", ".", "transform", "(", "embeddings2", ")", "\n", "embed1", "=", "sklearn", ".", "preprocessing", ".", "normalize", "(", "embed1", ")", "\n", "embed2", "=", "sklearn", ".", "preprocessing", ".", "normalize", "(", "embed2", ")", "\n", "# print(embed1.shape, embed2.shape)", "\n", "diff", "=", "np", ".", "subtract", "(", "embed1", ",", "embed2", ")", "\n", "dist", "=", "np", ".", "sum", "(", "np", ".", "square", "(", "diff", ")", ",", "1", ")", "\n", "\n", "# Find the best threshold for the fold", "\n", "", "acc_train", "=", "np", ".", "zeros", "(", "(", "nrof_thresholds", ")", ")", "\n", "for", "threshold_idx", ",", "threshold", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "            ", "_", ",", "_", ",", "acc_train", "[", "threshold_idx", "]", "=", "calculate_accuracy", "(", "threshold", ",", "dist", "[", "train_set", "]", ",", "actual_issame", "[", "train_set", "]", ")", "\n", "", "best_threshold_index", "=", "np", ".", "argmax", "(", "acc_train", ")", "\n", "#         print('best_threshold_index', best_threshold_index, acc_train[best_threshold_index])", "\n", "best_thresholds", "[", "fold_idx", "]", "=", "thresholds", "[", "best_threshold_index", "]", "\n", "for", "threshold_idx", ",", "threshold", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "            ", "tprs", "[", "fold_idx", ",", "threshold_idx", "]", ",", "fprs", "[", "fold_idx", ",", "threshold_idx", "]", ",", "_", "=", "calculate_accuracy", "(", "threshold", ",", "\n", "dist", "[", "test_set", "]", ",", "\n", "actual_issame", "[", "\n", "test_set", "]", ")", "\n", "", "_", ",", "_", ",", "accuracy", "[", "fold_idx", "]", "=", "calculate_accuracy", "(", "thresholds", "[", "best_threshold_index", "]", ",", "dist", "[", "test_set", "]", ",", "actual_issame", "[", "test_set", "]", ")", "\n", "for", "i", "in", "test_set", ":", "\n", "             ", "if", "actual_issame", "[", "i", "]", "==", "True", "and", "dist", "[", "i", "]", ">", "thresholds", "[", "best_threshold_index", "]", ":", "\n", "                ", "bad_case", ".", "append", "(", "i", ")", "\n", "\n", "", "", "", "tpr", "=", "np", ".", "mean", "(", "tprs", ",", "0", ")", "\n", "fpr", "=", "np", ".", "mean", "(", "fprs", ",", "0", ")", "\n", "return", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", ",", "bad_case", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.calculate_accuracy": [[98, 109], ["numpy.less", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "float", "numpy.logical_not", "numpy.logical_not", "numpy.logical_not", "numpy.logical_not", "float", "float", "float", "float"], "function", ["None"], ["", "def", "calculate_accuracy", "(", "threshold", ",", "dist", ",", "actual_issame", ")", ":", "\n", "    ", "predict_issame", "=", "np", ".", "less", "(", "dist", ",", "threshold", ")", "\n", "tp", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "predict_issame", ",", "actual_issame", ")", ")", "\n", "fp", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "predict_issame", ",", "np", ".", "logical_not", "(", "actual_issame", ")", ")", ")", "\n", "tn", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "np", ".", "logical_not", "(", "predict_issame", ")", ",", "np", ".", "logical_not", "(", "actual_issame", ")", ")", ")", "\n", "fn", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "np", ".", "logical_not", "(", "predict_issame", ")", ",", "actual_issame", ")", ")", "\n", "\n", "tpr", "=", "0", "if", "(", "tp", "+", "fn", "==", "0", ")", "else", "float", "(", "tp", ")", "/", "float", "(", "tp", "+", "fn", ")", "\n", "fpr", "=", "0", "if", "(", "fp", "+", "tn", "==", "0", ")", "else", "float", "(", "fp", ")", "/", "float", "(", "fp", "+", "tn", ")", "\n", "acc", "=", "float", "(", "tp", "+", "tn", ")", "/", "dist", ".", "size", "\n", "return", "tpr", ",", "fpr", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.calculate_val": [[111, 153], ["min", "len", "sklearn.model_selection.KFold", "numpy.zeros", "numpy.zeros", "numpy.subtract", "numpy.sum", "numpy.arange", "enumerate", "numpy.mean", "numpy.mean", "numpy.std", "len", "numpy.square", "sklearn.model_selection.KFold.split", "numpy.zeros", "enumerate", "verification.calculate_val_far", "verification.calculate_val_far", "numpy.max", "scipy.interpolate.interp1d", "interpolate.interp1d."], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.calculate_val_far", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.calculate_val_far"], ["", "def", "calculate_val", "(", "thresholds", ",", "embeddings1", ",", "embeddings2", ",", "actual_issame", ",", "far_target", ",", "nrof_folds", "=", "10", ")", ":", "\n", "    ", "'''\n    Copy from [insightface](https://github.com/deepinsight/insightface)\n    :param thresholds:\n    :param embeddings1:\n    :param embeddings2:\n    :param actual_issame:\n    :param far_target:\n    :param nrof_folds:\n    :return:\n    '''", "\n", "assert", "(", "embeddings1", ".", "shape", "[", "0", "]", "==", "embeddings2", ".", "shape", "[", "0", "]", ")", "\n", "assert", "(", "embeddings1", ".", "shape", "[", "1", "]", "==", "embeddings2", ".", "shape", "[", "1", "]", ")", "\n", "nrof_pairs", "=", "min", "(", "len", "(", "actual_issame", ")", ",", "embeddings1", ".", "shape", "[", "0", "]", ")", "\n", "nrof_thresholds", "=", "len", "(", "thresholds", ")", "\n", "k_fold", "=", "KFold", "(", "n_splits", "=", "nrof_folds", ",", "shuffle", "=", "False", ")", "\n", "\n", "val", "=", "np", ".", "zeros", "(", "nrof_folds", ")", "\n", "far", "=", "np", ".", "zeros", "(", "nrof_folds", ")", "\n", "\n", "diff", "=", "np", ".", "subtract", "(", "embeddings1", ",", "embeddings2", ")", "\n", "dist", "=", "np", ".", "sum", "(", "np", ".", "square", "(", "diff", ")", ",", "1", ")", "\n", "indices", "=", "np", ".", "arange", "(", "nrof_pairs", ")", "\n", "\n", "for", "fold_idx", ",", "(", "train_set", ",", "test_set", ")", "in", "enumerate", "(", "k_fold", ".", "split", "(", "indices", ")", ")", ":", "\n", "\n", "# Find the threshold that gives FAR = far_target", "\n", "        ", "far_train", "=", "np", ".", "zeros", "(", "nrof_thresholds", ")", "\n", "for", "threshold_idx", ",", "threshold", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "            ", "_", ",", "far_train", "[", "threshold_idx", "]", "=", "calculate_val_far", "(", "threshold", ",", "dist", "[", "train_set", "]", ",", "actual_issame", "[", "train_set", "]", ")", "\n", "", "if", "np", ".", "max", "(", "far_train", ")", ">=", "far_target", ":", "\n", "            ", "f", "=", "interpolate", ".", "interp1d", "(", "far_train", ",", "thresholds", ",", "kind", "=", "'slinear'", ")", "\n", "threshold", "=", "f", "(", "far_target", ")", "\n", "", "else", ":", "\n", "            ", "threshold", "=", "0.0", "\n", "\n", "", "val", "[", "fold_idx", "]", ",", "far", "[", "fold_idx", "]", "=", "calculate_val_far", "(", "threshold", ",", "dist", "[", "test_set", "]", ",", "actual_issame", "[", "test_set", "]", ")", "\n", "\n", "", "val_mean", "=", "np", ".", "mean", "(", "val", ")", "\n", "far_mean", "=", "np", ".", "mean", "(", "far", ")", "\n", "val_std", "=", "np", ".", "std", "(", "val", ")", "\n", "return", "val_mean", ",", "val_std", ",", "far_mean", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.calculate_val_far": [[155, 164], ["numpy.less", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.logical_and", "numpy.logical_and", "numpy.logical_not", "float", "float", "float", "float", "numpy.logical_not"], "function", ["None"], ["", "def", "calculate_val_far", "(", "threshold", ",", "dist", ",", "actual_issame", ")", ":", "\n", "    ", "predict_issame", "=", "np", ".", "less", "(", "dist", ",", "threshold", ")", "\n", "true_accept", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "predict_issame", ",", "actual_issame", ")", ")", "\n", "false_accept", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "predict_issame", ",", "np", ".", "logical_not", "(", "actual_issame", ")", ")", ")", "\n", "n_same", "=", "np", ".", "sum", "(", "actual_issame", ")", "\n", "n_diff", "=", "np", ".", "sum", "(", "np", ".", "logical_not", "(", "actual_issame", ")", ")", "\n", "val", "=", "float", "(", "true_accept", ")", "/", "float", "(", "n_same", ")", "\n", "far", "=", "float", "(", "false_accept", ")", "/", "float", "(", "n_diff", ")", "\n", "return", "val", ",", "far", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.evaluate_with_uncertainty": [[165, 173], ["calculate_roc_with_uncertainty", "numpy.asarray"], "function", ["None"], ["", "def", "evaluate_with_uncertainty", "(", "embeddings", ",", "uncertaintys", ",", "actual_issame", ",", "nrof_folds", "=", "10", ",", "mls", "=", "True", ")", ":", "\n", "# Calculate evaluation metrics", "\n", "    ", "embeddings1", "=", "embeddings", "[", "0", ":", ":", "2", "]", "\n", "uncertainty1", "=", "uncertaintys", "[", "0", ":", ":", "2", "]", "\n", "embeddings2", "=", "embeddings", "[", "1", ":", ":", "2", "]", "\n", "uncertainty2", "=", "uncertaintys", "[", "1", ":", ":", "2", "]", "\n", "accuracy", ",", "best_thresholds", "=", "calculate_roc_with_uncertainty", "(", "embeddings1", ",", "embeddings2", ",", "uncertainty1", ",", "uncertainty2", ",", "np", ".", "asarray", "(", "actual_issame", ")", ",", "nrof_folds", "=", "nrof_folds", ",", "mls", "=", "mls", ")", "\n", "return", "accuracy", ",", "best_thresholds", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.evaluate": [[174, 187], ["numpy.arange", "verification.calculate_roc", "numpy.asarray"], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.calculate_roc"], ["", "def", "evaluate", "(", "embeddings", ",", "actual_issame", ",", "nrof_folds", "=", "10", ",", "pca", "=", "0", ")", ":", "\n", "# Calculate evaluation metrics", "\n", "    ", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "4", ",", "0.01", ")", "\n", "embeddings1", "=", "embeddings", "[", "0", ":", ":", "2", "]", "\n", "embeddings2", "=", "embeddings", "[", "1", ":", ":", "2", "]", "\n", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", ",", "bad_case", "=", "calculate_roc", "(", "thresholds", ",", "embeddings1", ",", "embeddings2", ",", "np", ".", "asarray", "(", "actual_issame", ")", ",", "\n", "nrof_folds", "=", "nrof_folds", ",", "pca", "=", "pca", ")", "\n", "#     thresholds = np.arange(0, 4, 0.001)", "\n", "#     val, val_std, far = calculate_val(thresholds, embeddings1, embeddings2,", "\n", "#                                       np.asarray(actual_issame), 1e-3, nrof_folds=nrof_folds)", "\n", "#     return tpr, fpr, accuracy, best_thresholds, val, val_std, far", "\n", "\n", "return", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", ",", "bad_case", "\n", "", ""]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.AverageMeter.__init__": [[177, 179], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.AverageMeter.reset": [[180, 185], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.AverageMeter.update": [[186, 191], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.get_time": [[17, 19], ["[].replace().replace", "[].replace", "str", "datetime.datetime.now"], "function", ["None"], ["def", "get_time", "(", ")", ":", "\n", "    ", "return", "(", "str", "(", "datetime", ".", "now", "(", ")", ")", "[", ":", "-", "10", "]", ")", ".", "replace", "(", "' '", ",", "'-'", ")", ".", "replace", "(", "':'", ",", "'-'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.l2_norm": [[21, 25], ["torch.norm", "torch.norm", "torch.div", "torch.div"], "function", ["None"], ["", "def", "l2_norm", "(", "input", ",", "axis", "=", "1", ")", ":", "\n", "    ", "norm", "=", "torch", ".", "norm", "(", "input", ",", "2", ",", "axis", ",", "True", ")", "\n", "output", "=", "torch", ".", "div", "(", "input", ",", "norm", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.get_val_pair": [[26, 31], ["bcolz.carray", "numpy.load", "os.path.join"], "function", ["None"], ["", "def", "get_val_pair", "(", "path", ",", "name", ")", ":", "\n", "    ", "carray", "=", "bcolz", ".", "carray", "(", "rootdir", "=", "os", ".", "path", ".", "join", "(", "path", ",", "name", ")", ",", "mode", "=", "'r'", ")", "\n", "issame", "=", "np", ".", "load", "(", "'{}/{}_list.npy'", ".", "format", "(", "path", ",", "name", ")", ")", "\n", "\n", "return", "carray", ",", "issame", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.get_val_data": [[33, 41], ["utils.get_val_pair", "utils.get_val_pair", "utils.get_val_pair", "utils.get_val_pair", "utils.get_val_pair"], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.get_val_pair", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.get_val_pair", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.get_val_pair", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.get_val_pair", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.get_val_pair"], ["", "def", "get_val_data", "(", "data_path", ")", ":", "\n", "    ", "lfw", ",", "lfw_issame", "=", "get_val_pair", "(", "data_path", ",", "'lfw'", ")", "\n", "cfp_fp", ",", "cfp_fp_issame", "=", "get_val_pair", "(", "data_path", ",", "'cfp_fp'", ")", "\n", "agedb_30", ",", "agedb_30_issame", "=", "get_val_pair", "(", "data_path", ",", "'agedb_30'", ")", "\n", "calfw", ",", "calfw_issame", "=", "get_val_pair", "(", "data_path", ",", "'calfw'", ")", "\n", "cplfw", ",", "cplfw_issame", "=", "get_val_pair", "(", "data_path", ",", "'cplfw'", ")", "\n", "\n", "return", "lfw", ",", "cfp_fp", ",", "agedb_30", ",", "cplfw", ",", "calfw", ",", "lfw_issame", ",", "cfp_fp_issame", ",", "agedb_30_issame", ",", "cplfw_issame", ",", "calfw_issame", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.separate_irse_bn_paras": [[42, 58], ["isinstance", "str", "str", "modules.modules", "str", "paras_only_bn.extend", "paras_wo_bn.extend", "layer.parameters", "layer.parameters"], "function", ["None"], ["", "def", "separate_irse_bn_paras", "(", "modules", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "modules", ",", "list", ")", ":", "\n", "        ", "modules", "=", "[", "*", "modules", ".", "modules", "(", ")", "]", "\n", "", "paras_only_bn", "=", "[", "]", "\n", "paras_wo_bn", "=", "[", "]", "\n", "for", "layer", "in", "modules", ":", "\n", "        ", "if", "'model'", "in", "str", "(", "layer", ".", "__class__", ")", ":", "\n", "            ", "continue", "\n", "", "if", "'container'", "in", "str", "(", "layer", ".", "__class__", ")", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "if", "'batchnorm'", "in", "str", "(", "layer", ".", "__class__", ")", ":", "\n", "                ", "paras_only_bn", ".", "extend", "(", "[", "*", "layer", ".", "parameters", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "                ", "paras_wo_bn", ".", "extend", "(", "[", "*", "layer", ".", "parameters", "(", ")", "]", ")", "\n", "", "", "", "return", "paras_only_bn", ",", "paras_wo_bn", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.separate_resnet_bn_paras": [[60, 72], ["modules.parameters", "modules.named_parameters", "list", "list", "map", "filter", "pname.find", "paras_only_bn.append", "id"], "function", ["None"], ["", "def", "separate_resnet_bn_paras", "(", "modules", ")", ":", "\n", "    ", "all_parameters", "=", "modules", ".", "parameters", "(", ")", "\n", "paras_only_bn", "=", "[", "]", "\n", "\n", "for", "pname", ",", "p", "in", "modules", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "pname", ".", "find", "(", "'bn'", ")", ">=", "0", ":", "\n", "            ", "paras_only_bn", ".", "append", "(", "p", ")", "\n", "\n", "", "", "paras_only_bn_id", "=", "list", "(", "map", "(", "id", ",", "paras_only_bn", ")", ")", "\n", "paras_wo_bn", "=", "list", "(", "filter", "(", "lambda", "p", ":", "id", "(", "p", ")", "not", "in", "paras_only_bn_id", ",", "all_parameters", ")", ")", "\n", "\n", "return", "paras_only_bn", ",", "paras_wo_bn", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.warm_up_lr": [[74, 77], ["None"], "function", ["None"], ["", "def", "warm_up_lr", "(", "batch", ",", "num_batch_warm_up", ",", "init_lr", ",", "optimizer", ")", ":", "\n", "    ", "for", "params", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "params", "[", "'lr'", "]", "=", "batch", "*", "init_lr", "/", "num_batch_warm_up", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.schedule_lr": [[81, 86], ["print"], "function", ["None"], ["", "", "def", "schedule_lr", "(", "optimizer", ")", ":", "\n", "    ", "for", "params", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "params", "[", "'lr'", "]", "/=", "10.", "\n", "\n", "", "print", "(", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.de_preprocess": [[88, 91], ["None"], "function", ["None"], ["", "def", "de_preprocess", "(", "tensor", ")", ":", "\n", "\n", "    ", "return", "tensor", "*", "0.5", "+", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.hflip_batch": [[102, 108], ["torch.empty_like", "torch.empty_like", "enumerate", "hflip"], "function", ["None"], ["def", "hflip_batch", "(", "imgs_tensor", ")", ":", "\n", "    ", "hfliped_imgs", "=", "torch", ".", "empty_like", "(", "imgs_tensor", ")", "\n", "for", "i", ",", "img_ten", "in", "enumerate", "(", "imgs_tensor", ")", ":", "\n", "        ", "hfliped_imgs", "[", "i", "]", "=", "hflip", "(", "img_ten", ")", "\n", "\n", "", "return", "hfliped_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.perform_val": [[117, 150], ["backbone.eval", "numpy.zeros", "verification.evaluate", "utils.gen_plot", "PIL.Image.open", "torch.no_grad", "torch.no_grad", "torchvision.ToTensor", "accuracy.mean", "best_thresholds.mean", "len", "len", "torch.tensor", "torch.tensor", "len", "torch.tensor", "torch.tensor", "utils.ccrop_batch", "utils.hflip_batch", "utils.l2_norm", "utils.ccrop_batch", "l2_norm().cpu", "utils.ccrop_batch", "utils.hflip_batch", "utils.l2_norm", "utils.ccrop_batch", "l2_norm().cpu", "[].cpu", "[].cpu", "[].cpu", "[].cpu", "utils.l2_norm", "utils.l2_norm", "backbone", "backbone", "backbone", "ccrop_batch.cuda", "backbone", "backbone", "backbone", "ccrop_batch.cuda", "hflip_batch.cuda", "ccrop_batch.cuda", "hflip_batch.cuda", "ccrop_batch.cuda"], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.verification.evaluate", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.gen_plot", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.ccrop_batch", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.hflip_batch", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.l2_norm", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.ccrop_batch", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.ccrop_batch", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.hflip_batch", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.l2_norm", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.ccrop_batch", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.l2_norm", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.l2_norm"], ["def", "perform_val", "(", "embedding_size", ",", "batch_size", ",", "backbone", ",", "carray", ",", "issame", ",", "nrof_folds", "=", "10", ",", "tta", "=", "True", ")", ":", "\n", "    ", "backbone", ".", "eval", "(", ")", "# switch to evaluation mode", "\n", "\n", "idx", "=", "0", "\n", "embeddings", "=", "np", ".", "zeros", "(", "[", "len", "(", "carray", ")", ",", "embedding_size", "]", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "while", "idx", "+", "batch_size", "<=", "len", "(", "carray", ")", ":", "\n", "            ", "batch", "=", "torch", ".", "tensor", "(", "carray", "[", "idx", ":", "idx", "+", "batch_size", "]", "[", ":", ",", "[", "2", ",", "1", ",", "0", "]", ",", ":", ",", ":", "]", ")", "\n", "if", "tta", ":", "\n", "                ", "ccropped", "=", "ccrop_batch", "(", "batch", ")", "\n", "fliped", "=", "hflip_batch", "(", "ccropped", ")", "\n", "emb_batch", "=", "backbone", "(", "ccropped", ".", "cuda", "(", ")", ")", "[", "0", "]", ".", "cpu", "(", ")", "+", "backbone", "(", "fliped", ".", "cuda", "(", ")", ")", "[", "0", "]", ".", "cpu", "(", ")", "\n", "embeddings", "[", "idx", ":", "idx", "+", "batch_size", "]", "=", "l2_norm", "(", "emb_batch", ")", "\n", "", "else", ":", "\n", "                ", "ccropped", "=", "ccrop_batch", "(", "batch", ")", "\n", "embeddings", "[", "idx", ":", "idx", "+", "batch_size", "]", "=", "l2_norm", "(", "backbone", "(", "ccropped", ".", "cuda", "(", ")", ")", ")", ".", "cpu", "(", ")", "\n", "", "idx", "+=", "batch_size", "\n", "", "if", "idx", "<", "len", "(", "carray", ")", ":", "\n", "            ", "batch", "=", "torch", ".", "tensor", "(", "carray", "[", "idx", ":", "]", "[", ":", ",", "[", "2", ",", "1", ",", "0", "]", ",", ":", ",", ":", "]", ")", "\n", "if", "tta", ":", "\n", "                ", "ccropped", "=", "ccrop_batch", "(", "batch", ")", "\n", "fliped", "=", "hflip_batch", "(", "ccropped", ")", "\n", "emb_batch", "=", "backbone", "(", "ccropped", ".", "cuda", "(", ")", ")", "[", "0", "]", ".", "cpu", "(", ")", "+", "backbone", "(", "fliped", ".", "cuda", "(", ")", ")", "[", "0", "]", ".", "cpu", "(", ")", "\n", "embeddings", "[", "idx", ":", "]", "=", "l2_norm", "(", "emb_batch", ")", "\n", "", "else", ":", "\n", "                ", "ccropped", "=", "ccrop_batch", "(", "batch", ")", "\n", "embeddings", "[", "idx", ":", "]", "=", "l2_norm", "(", "backbone", "(", "ccropped", ".", "cuda", "(", ")", ")", "[", "0", "]", ")", ".", "cpu", "(", ")", "\n", "\n", "", "", "", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", ",", "bad_case", "=", "evaluate", "(", "embeddings", ",", "issame", ",", "nrof_folds", ")", "\n", "buf", "=", "gen_plot", "(", "fpr", ",", "tpr", ")", "\n", "roc_curve", "=", "Image", ".", "open", "(", "buf", ")", "\n", "roc_curve_tensor", "=", "transforms", ".", "ToTensor", "(", ")", "(", "roc_curve", ")", "\n", "return", "accuracy", ".", "mean", "(", ")", ",", "best_thresholds", ".", "mean", "(", ")", ",", "roc_curve_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.gen_plot": [[151, 164], ["matplotlib.figure", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.plot", "io.BytesIO", "matplotlib.savefig", "io.BytesIO.seek", "matplotlib.close"], "function", ["None"], ["", "def", "gen_plot", "(", "fpr", ",", "tpr", ")", ":", "\n", "    ", "\"\"\"Create a pyplot plot and save to buffer.\"\"\"", "\n", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "xlabel", "(", "\"FPR\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "ylabel", "(", "\"TPR\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "title", "(", "\"ROC Curve\"", ",", "fontsize", "=", "14", ")", "\n", "plot", "=", "plt", ".", "plot", "(", "fpr", ",", "tpr", ",", "linewidth", "=", "2", ")", "\n", "buf", "=", "io", ".", "BytesIO", "(", ")", "\n", "plt", ".", "savefig", "(", "buf", ",", "format", "=", "'jpeg'", ")", "\n", "buf", ".", "seek", "(", "0", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "return", "buf", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.ccrop_batch": [[167, 173], ["torch.empty_like", "torch.empty_like", "enumerate", "ccrop"], "function", ["None"], ["", "def", "ccrop_batch", "(", "imgs_tensor", ")", ":", "\n", "    ", "ccropped_imgs", "=", "torch", ".", "empty_like", "(", "imgs_tensor", ")", "\n", "for", "i", ",", "img_ten", "in", "enumerate", "(", "imgs_tensor", ")", ":", "\n", "        ", "ccropped_imgs", "[", "i", "]", "=", "ccrop", "(", "img_ten", ")", "\n", "\n", "", "return", "ccropped_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.util.utils.accuracy": [[193, 208], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "\n", "", "return", "res", "\n", "", ""]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.Flatten.forward": [[12, 14], ["input.view", "input.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.SEModule.__init__": [[24, 37], ["torch.nn.Module.__init__", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "reduction", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc1", "=", "Conv2d", "(", "\n", "channels", ",", "channels", "//", "reduction", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc1", ".", "weight", ".", "data", ")", "\n", "\n", "self", ".", "relu", "=", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "fc2", "=", "Conv2d", "(", "\n", "channels", "//", "reduction", ",", "channels", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "sigmoid", "=", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.SEModule.forward": [[38, 47], ["model_irse.SEModule.avg_pool", "model_irse.SEModule.fc1", "model_irse.SEModule.relu", "model_irse.SEModule.fc2", "model_irse.SEModule.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "module_input", "=", "x", "\n", "x", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "sigmoid", "(", "x", ")", "\n", "\n", "return", "module_input", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.bottleneck_IR.__init__": [[50, 63], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "MaxPool2d", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "Sequential", "(", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias", "=", "False", ")", ",", "BatchNorm2d", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "Sequential", "(", "\n", "BatchNorm2d", "(", "in_channel", ")", ",", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "PReLU", "(", "depth", ")", ",", "\n", "Conv2d", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "depth", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.bottleneck_IR.forward": [[64, 69], ["model_irse.bottleneck_IR.shortcut_layer", "model_irse.bottleneck_IR.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.bottleneck_IR_SE.__init__": [[72, 87], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "model_irse.SEModule", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR_SE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "MaxPool2d", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "Sequential", "(", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "Sequential", "(", "\n", "BatchNorm2d", "(", "in_channel", ")", ",", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "PReLU", "(", "depth", ")", ",", "\n", "Conv2d", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "depth", ")", ",", "\n", "SEModule", "(", "depth", ",", "16", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.bottleneck_IR_SE.forward": [[89, 94], ["model_irse.bottleneck_IR_SE.shortcut_layer", "model_irse.bottleneck_IR_SE.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.Backbone.__init__": [[132, 168], ["torch.nn.Module.__init__", "model_irse.get_blocks", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "model_irse.Backbone._initialize_weights", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Dropout", "torch.nn.Dropout", "model_irse.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Dropout", "torch.nn.Dropout", "model_irse.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "modules.append", "unit_module"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_blocks", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.MobileFaceNet._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "num_layers", ",", "mode", "=", "'ir'", ")", ":", "\n", "        ", "super", "(", "Backbone", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "input_size", "[", "0", "]", "in", "[", "112", ",", "224", "]", ",", "\"input_size should be [112, 112] or [224, 224]\"", "\n", "assert", "num_layers", "in", "[", "50", ",", "100", ",", "152", "]", ",", "\"num_layers should be 50, 100 or 152\"", "\n", "assert", "mode", "in", "[", "'ir'", ",", "'ir_se'", "]", ",", "\"mode should be ir or ir_se\"", "\n", "blocks", "=", "get_blocks", "(", "num_layers", ")", "\n", "if", "mode", "==", "'ir'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR", "\n", "", "elif", "mode", "==", "'ir_se'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR_SE", "\n", "", "self", ".", "input_layer", "=", "Sequential", "(", "Conv2d", "(", "3", ",", "64", ",", "(", "3", ",", "3", ")", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "64", ")", ",", "\n", "PReLU", "(", "64", ")", ")", "\n", "if", "input_size", "[", "0", "]", "==", "112", ":", "\n", "            ", "self", ".", "output_layer", "=", "Sequential", "(", "BatchNorm2d", "(", "512", ")", ",", "\n", "Dropout", "(", "0.4", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "Linear", "(", "512", "*", "7", "*", "7", ",", "512", ")", ",", "\n", "BatchNorm1d", "(", "512", ",", "affine", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "output_layer", "=", "Sequential", "(", "BatchNorm2d", "(", "512", ")", ",", "\n", "Dropout", "(", "0.4", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "Linear", "(", "512", "*", "14", "*", "14", ",", "512", ")", ",", "\n", "BatchNorm1d", "(", "512", ",", "affine", "=", "False", ")", ")", "\n", "\n", "", "modules", "=", "[", "]", "\n", "for", "block", "in", "blocks", ":", "\n", "            ", "for", "bottleneck", "in", "block", ":", "\n", "                ", "modules", ".", "append", "(", "\n", "unit_module", "(", "bottleneck", ".", "in_channel", ",", "\n", "bottleneck", ".", "depth", ",", "\n", "bottleneck", ".", "stride", ")", ")", "\n", "", "", "self", ".", "body", "=", "Sequential", "(", "*", "modules", ")", "\n", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.Backbone.forward": [[169, 176], ["model_irse.Backbone.input_layer", "model_irse.Backbone.body", "model_irse.Backbone.view", "model_irse.Backbone.output_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "input_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "conv_out", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "output_layer", "(", "x", ")", "\n", "\n", "return", "x", ",", "conv_out", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.Backbone._initialize_weights": [[177, 190], ["model_irse.Backbone.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "m.bias.data.zero_", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.l2_norm": [[16, 21], ["torch.norm", "torch.norm", "torch.div", "torch.div"], "function", ["None"], ["", "", "def", "l2_norm", "(", "input", ",", "axis", "=", "1", ")", ":", "\n", "    ", "norm", "=", "torch", ".", "norm", "(", "input", ",", "2", ",", "axis", ",", "True", ")", "\n", "output", "=", "torch", ".", "div", "(", "input", ",", "norm", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block": [[100, 103], ["model_irse.Bottleneck", "model_irse.Bottleneck", "range"], "function", ["None"], ["", "def", "get_block", "(", "in_channel", ",", "depth", ",", "num_units", ",", "stride", "=", "2", ")", ":", "\n", "\n", "    ", "return", "[", "Bottleneck", "(", "in_channel", ",", "depth", ",", "stride", ")", "]", "+", "[", "Bottleneck", "(", "depth", ",", "depth", ",", "1", ")", "for", "i", "in", "range", "(", "num_units", "-", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_blocks": [[105, 129], ["model_irse.get_block", "model_irse.get_block", "model_irse.get_block", "model_irse.get_block", "model_irse.get_block", "model_irse.get_block", "model_irse.get_block", "model_irse.get_block", "model_irse.get_block", "model_irse.get_block", "model_irse.get_block", "model_irse.get_block"], "function", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.get_block"], ["", "def", "get_blocks", "(", "num_layers", ")", ":", "\n", "    ", "if", "num_layers", "==", "50", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "4", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "14", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "100", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "13", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "30", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "152", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "8", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "36", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "\n", "", "return", "blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.IR_50": [[191, 197], ["model_irse.Backbone"], "function", ["None"], ["", "", "", "", "", "def", "IR_50", "(", "input_size", ")", ":", "\n", "    ", "\"\"\"Constructs a ir-50 model.\n    \"\"\"", "\n", "model", "=", "Backbone", "(", "input_size", ",", "50", ",", "'ir'", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.IR_101": [[199, 205], ["model_irse.Backbone"], "function", ["None"], ["", "def", "IR_101", "(", "input_size", ")", ":", "\n", "    ", "\"\"\"Constructs a ir-101 model.\n    \"\"\"", "\n", "model", "=", "Backbone", "(", "input_size", ",", "100", ",", "'ir'", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.IR_152": [[207, 213], ["model_irse.Backbone"], "function", ["None"], ["", "def", "IR_152", "(", "input_size", ")", ":", "\n", "    ", "\"\"\"Constructs a ir-152 model.\n    \"\"\"", "\n", "model", "=", "Backbone", "(", "input_size", ",", "152", ",", "'ir'", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.IR_SE_50": [[215, 221], ["model_irse.Backbone"], "function", ["None"], ["", "def", "IR_SE_50", "(", "input_size", ")", ":", "\n", "    ", "\"\"\"Constructs a ir_se-50 model.\n    \"\"\"", "\n", "model", "=", "Backbone", "(", "input_size", ",", "50", ",", "'ir_se'", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.IR_SE_101": [[223, 229], ["model_irse.Backbone"], "function", ["None"], ["", "def", "IR_SE_101", "(", "input_size", ")", ":", "\n", "    ", "\"\"\"Constructs a ir_se-101 model.\n    \"\"\"", "\n", "model", "=", "Backbone", "(", "input_size", ",", "100", ",", "'ir_se'", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_irse.IR_SE_152": [[231, 237], ["model_irse.Backbone"], "function", ["None"], ["", "def", "IR_SE_152", "(", "input_size", ")", ":", "\n", "    ", "\"\"\"Constructs a ir_se-152 model.\n    \"\"\"", "\n", "model", "=", "Backbone", "(", "input_size", ",", "152", ",", "'ir_se'", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.BasicBlock.__init__": [[24, 33], ["torch.nn.Module.__init__", "model_resnet.conv3x3", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "model_resnet.conv3x3", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.conv3x3", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.BasicBlock.forward": [[34, 51], ["model_resnet.BasicBlock.conv1", "model_resnet.BasicBlock.bn1", "model_resnet.BasicBlock.relu", "model_resnet.BasicBlock.conv2", "model_resnet.BasicBlock.bn2", "model_resnet.BasicBlock.relu", "model_resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.Bottleneck.__init__": [[56, 67], ["torch.nn.Module.__init__", "model_resnet.conv1x1", "torch.nn.BatchNorm2d", "model_resnet.conv3x3", "torch.nn.BatchNorm2d", "model_resnet.conv1x1", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.conv1x1", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.conv3x3", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "planes", ")", "\n", "self", ".", "bn1", "=", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.Bottleneck.forward": [[68, 89], ["model_resnet.Bottleneck.conv1", "model_resnet.Bottleneck.bn1", "model_resnet.Bottleneck.relu", "model_resnet.Bottleneck.conv2", "model_resnet.Bottleneck.bn2", "model_resnet.Bottleneck.relu", "model_resnet.Bottleneck.conv3", "model_resnet.Bottleneck.bn3", "model_resnet.Bottleneck.relu", "model_resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.ResNet.__init__": [[93, 130], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "model_resnet.ResNet._make_layer", "model_resnet.ResNet._make_layer", "model_resnet.ResNet._make_layer", "model_resnet.ResNet._make_layer", "torch.nn.BatchNorm2d", "torch.nn.Dropout", "torch.nn.BatchNorm1d", "model_resnet.ResNet.modules", "torch.nn.Linear", "torch.nn.Linear", "isinstance", "model_resnet.ResNet.modules", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "block", ",", "layers", ",", "zero_init_residual", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "input_size", "[", "0", "]", "in", "[", "112", ",", "224", "]", ",", "\"input_size should be [112, 112] or [224, 224]\"", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "conv1", "=", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "bn_o1", "=", "BatchNorm2d", "(", "2048", ")", "\n", "self", ".", "dropout", "=", "Dropout", "(", ")", "\n", "if", "input_size", "[", "0", "]", "==", "112", ":", "\n", "            ", "self", ".", "fc", "=", "Linear", "(", "2048", "*", "4", "*", "4", ",", "512", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc", "=", "Linear", "(", "2048", "*", "8", "*", "8", ",", "512", ")", "\n", "", "self", ".", "bn_o2", "=", "BatchNorm1d", "(", "512", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.ResNet._make_layer": [[131, 146], ["layers.append", "range", "torch.nn.Sequential", "torch.nn.Sequential", "block", "layers.append", "model_resnet.conv1x1", "torch.nn.BatchNorm2d", "block"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.ResNet.forward": [[147, 165], ["model_resnet.ResNet.conv1", "model_resnet.ResNet.bn1", "model_resnet.ResNet.relu", "model_resnet.ResNet.maxpool", "model_resnet.ResNet.layer1", "model_resnet.ResNet.layer2", "model_resnet.ResNet.layer3", "model_resnet.ResNet.layer4", "model_resnet.ResNet.bn_o1", "model_resnet.ResNet.dropout", "model_resnet.ResNet.view", "model_resnet.ResNet.fc", "model_resnet.ResNet.bn_o2", "model_resnet.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "bn_o1", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "x", "=", "self", ".", "bn_o2", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.conv3x3": [[8, 13], ["torch.nn.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "\n", "return", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.conv1x1": [[15, 19], ["torch.nn.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "\n", "return", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.ResNet_50": [[167, 173], ["model_resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet_50", "(", "input_size", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "input_size", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.ResNet_101": [[175, 181], ["model_resnet.ResNet"], "function", ["None"], ["", "def", "ResNet_101", "(", "input_size", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "input_size", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_resnet.ResNet_152": [[183, 189], ["model_resnet.ResNet"], "function", ["None"], ["", "def", "ResNet_152", "(", "input_size", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "input_size", ",", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.Flatten.forward": [[12, 14], ["input.view", "input.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.Conv_block.__init__": [[18, 23], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Conv_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv2d", "(", "in_c", ",", "out_channels", "=", "out_c", ",", "kernel_size", "=", "kernel", ",", "groups", "=", "groups", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "BatchNorm2d", "(", "out_c", ")", "\n", "self", ".", "prelu", "=", "PReLU", "(", "out_c", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.Conv_block.forward": [[23, 28], ["model_mobilefacenet.Conv_block.conv", "model_mobilefacenet.Conv_block.bn", "model_mobilefacenet.Conv_block.prelu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "prelu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.Linear_block.__init__": [[30, 34], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Linear_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv2d", "(", "in_c", ",", "out_channels", "=", "out_c", ",", "kernel_size", "=", "kernel", ",", "groups", "=", "groups", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "BatchNorm2d", "(", "out_c", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.Linear_block.forward": [[34, 38], ["model_mobilefacenet.Linear_block.conv", "model_mobilefacenet.Linear_block.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.Depth_Wise.__init__": [[40, 46], ["torch.nn.Module.__init__", "model_mobilefacenet.Conv_block", "model_mobilefacenet.Conv_block", "model_mobilefacenet.Linear_block"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["     ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "residual", "=", "False", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Depth_Wise", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv_block", "(", "in_c", ",", "out_c", "=", "groups", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_dw", "=", "Conv_block", "(", "groups", ",", "groups", ",", "groups", "=", "groups", ",", "kernel", "=", "kernel", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ")", "\n", "self", ".", "project", "=", "Linear_block", "(", "groups", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "residual", "=", "residual", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.Depth_Wise.forward": [[46, 57], ["model_mobilefacenet.Depth_Wise.conv", "model_mobilefacenet.Depth_Wise.conv_dw", "model_mobilefacenet.Depth_Wise.project"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "residual", ":", "\n", "            ", "short_cut", "=", "x", "\n", "", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_dw", "(", "x", ")", "\n", "x", "=", "self", ".", "project", "(", "x", ")", "\n", "if", "self", ".", "residual", ":", "\n", "            ", "output", "=", "short_cut", "+", "x", "\n", "", "else", ":", "\n", "            ", "output", "=", "x", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.Residual.__init__": [[59, 65], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "modules.append", "model_mobilefacenet.Depth_Wise"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ",", "num_block", ",", "groups", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "        ", "super", "(", "Residual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_block", ")", ":", "\n", "            ", "modules", ".", "append", "(", "Depth_Wise", "(", "c", ",", "c", ",", "residual", "=", "True", ",", "kernel", "=", "kernel", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "groups", "=", "groups", ")", ")", "\n", "", "self", ".", "model", "=", "Sequential", "(", "*", "modules", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.Residual.forward": [[65, 67], ["model_mobilefacenet.Residual.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.GNAP.__init__": [[69, 76], ["torch.nn.Module.__init__", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", ")", ":", "\n", "        ", "super", "(", "GNAP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "embedding_size", "==", "512", "\n", "self", ".", "bn1", "=", "BatchNorm2d", "(", "512", ",", "affine", "=", "False", ")", "\n", "self", ".", "pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "bn2", "=", "BatchNorm1d", "(", "512", ",", "affine", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.GNAP.forward": [[77, 87], ["model_mobilefacenet.GNAP.bn1", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model_mobilefacenet.GNAP.pool", "x.view.view.view", "model_mobilefacenet.GNAP.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x_norm", "=", "torch", ".", "norm", "(", "x", ",", "2", ",", "1", ",", "True", ")", "\n", "x_norm_mean", "=", "torch", ".", "mean", "(", "x_norm", ")", "\n", "weight", "=", "x_norm_mean", "/", "x_norm", "\n", "x", "=", "x", "*", "weight", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "feature", "=", "self", ".", "bn2", "(", "x", ")", "\n", "return", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.GDC.__init__": [[89, 96], ["torch.nn.Module.__init__", "model_mobilefacenet.Linear_block", "model_mobilefacenet.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", ")", ":", "\n", "        ", "super", "(", "GDC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_6_dw", "=", "Linear_block", "(", "512", ",", "512", ",", "groups", "=", "512", ",", "kernel", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ")", "\n", "self", ".", "conv_6_flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "linear", "=", "Linear", "(", "512", ",", "embedding_size", ",", "bias", "=", "False", ")", "\n", "#self.bn = BatchNorm1d(embedding_size, affine=False)", "\n", "self", ".", "bn", "=", "BatchNorm1d", "(", "embedding_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.GDC.forward": [[97, 103], ["model_mobilefacenet.GDC.conv_6_dw", "model_mobilefacenet.GDC.conv_6_flatten", "model_mobilefacenet.GDC.linear", "model_mobilefacenet.GDC.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_6_dw", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_6_flatten", "(", "x", ")", "\n", "x", "=", "self", ".", "linear", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.MobileFaceNet.__init__": [[105, 124], ["torch.nn.Module.__init__", "model_mobilefacenet.Conv_block", "model_mobilefacenet.Conv_block", "model_mobilefacenet.Depth_Wise", "model_mobilefacenet.Residual", "model_mobilefacenet.Depth_Wise", "model_mobilefacenet.Residual", "model_mobilefacenet.Depth_Wise", "model_mobilefacenet.Residual", "model_mobilefacenet.Conv_block", "model_mobilefacenet.MobileFaceNet._initialize_weights", "model_mobilefacenet.GNAP", "model_mobilefacenet.GDC"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__", "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.MobileFaceNet._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "embedding_size", "=", "512", ",", "output_name", "=", "\"GDC\"", ")", ":", "\n", "        ", "super", "(", "MobileFaceNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "output_name", "in", "[", "\"GNAP\"", ",", "'GDC'", "]", "\n", "assert", "input_size", "[", "0", "]", "in", "[", "112", "]", "\n", "self", ".", "conv1", "=", "Conv_block", "(", "3", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv2_dw", "=", "Conv_block", "(", "64", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "64", ")", "\n", "self", ".", "conv_23", "=", "Depth_Wise", "(", "64", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "128", ")", "\n", "self", ".", "conv_3", "=", "Residual", "(", "64", ",", "num_block", "=", "4", ",", "groups", "=", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_34", "=", "Depth_Wise", "(", "64", ",", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "256", ")", "\n", "self", ".", "conv_4", "=", "Residual", "(", "128", ",", "num_block", "=", "6", ",", "groups", "=", "256", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_45", "=", "Depth_Wise", "(", "128", ",", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "512", ")", "\n", "self", ".", "conv_5", "=", "Residual", "(", "128", ",", "num_block", "=", "2", ",", "groups", "=", "256", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_6_sep", "=", "Conv_block", "(", "128", ",", "512", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ")", "\n", "if", "output_name", "==", "\"GNAP\"", ":", "\n", "            ", "self", ".", "output_layer", "=", "GNAP", "(", "512", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "output_layer", "=", "GDC", "(", "embedding_size", ")", "\n", "\n", "", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.MobileFaceNet._initialize_weights": [[125, 138], ["model_mobilefacenet.MobileFaceNet.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "m.bias.data.zero_", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.backbone.model_mobilefacenet.MobileFaceNet.forward": [[140, 160], ["model_mobilefacenet.MobileFaceNet.conv1", "model_mobilefacenet.MobileFaceNet.conv2_dw", "model_mobilefacenet.MobileFaceNet.conv_23", "model_mobilefacenet.MobileFaceNet.conv_3", "model_mobilefacenet.MobileFaceNet.conv_34", "model_mobilefacenet.MobileFaceNet.conv_4", "model_mobilefacenet.MobileFaceNet.conv_45", "model_mobilefacenet.MobileFaceNet.conv_5", "model_mobilefacenet.MobileFaceNet.conv_6_sep", "model_mobilefacenet.MobileFaceNet.output_layer"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "\n", "out", "=", "self", ".", "conv2_dw", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_23", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_3", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_34", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_4", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_45", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_5", "(", "out", ")", "\n", "\n", "conv_features", "=", "self", ".", "conv_6_sep", "(", "out", ")", "\n", "out", "=", "self", ".", "output_layer", "(", "conv_features", ")", "\n", "return", "out", ",", "conv_features", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__": [[9, 14], ["torch.Module.__init__", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gamma", "=", "2", ",", "eps", "=", "1e-7", ")", ":", "\n", "        ", "super", "(", "FocalLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "ce", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HuangYG123_CurricularFace.loss.focal.FocalLoss.forward": [[15, 20], ["focal.FocalLoss.ce", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "loss.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "logp", "=", "self", ".", "ce", "(", "input", ",", "target", ")", "\n", "p", "=", "torch", ".", "exp", "(", "-", "logp", ")", "\n", "loss", "=", "(", "1", "-", "p", ")", "**", "self", ".", "gamma", "*", "logp", "\n", "return", "loss", ".", "mean", "(", ")", "\n", "", "", ""]]}