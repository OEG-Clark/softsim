{"home.repos.pwc.inspect_result.chenlabgccri_CancerTypePrediction.Hyperparameter tuning.vanilla_CNN_33class_hyperparameters.make_model": [[75, 102], ["len", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.summary", "len", "len", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dense"], "function", ["None"], ["def", "make_model", "(", "dense_layer_sizes", ",", "filters", ",", "kernel_size", ")", ":", "\n", "    ", "img_rows", ",", "img_cols", "=", "len", "(", "x_test", "[", "0", "]", ")", ",", "len", "(", "x_test", "[", "0", "]", "[", "0", "]", ")", "\n", "num_classes", "=", "len", "(", "y_train", "[", "0", "]", ")", "\n", "input_shape", "=", "(", "img_rows", ",", "img_cols", ",", "1", ")", "\n", "\n", "model", "=", "Sequential", "(", ")", "\n", "## *********** First layer Conv", "\n", "model", ".", "add", "(", "Conv2D", "(", "filters", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "stride", ",", "\n", "input_shape", "=", "input_shape", ")", ")", "\n", "# model.add(BatchNormalization())", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "# model.add(LeakyReLU())", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "2", ",", "2", ")", ")", "\n", "model", ".", "output_shape", "\n", "\n", "## ********* Classification layer", "\n", "model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "dense_layer_sizes", ",", "activation", "=", "'relu'", ")", ")", "\n", "\n", "model", ".", "add", "(", "Dense", "(", "num_classes", ",", "activation", "=", "'softmax'", ")", ")", "\n", "model", ".", "output_shape", "\n", "\n", "model", ".", "compile", "(", "loss", "=", "'categorical_crossentropy'", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "metrics", "=", "[", "'categorical_accuracy'", "]", ")", "\n", "model", ".", "summary", "(", ")", "\n", "return", "model", "\n", "", "dense_size_candidates", "=", "[", "64", ",", "128", ",", "512", "]", "\n"]], "home.repos.pwc.inspect_result.chenlabgccri_CancerTypePrediction.Hyperparameter tuning.1d_CNN_33class_hyperparameters.make_model": [[75, 102], ["len", "keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.compile", "keras.models.Sequential.summary", "len", "len", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dense"], "function", ["None"], ["def", "make_model", "(", "dense_layer_sizes", ",", "filters", ",", "kernel_size", ")", ":", "\n", "    ", "img_rows", ",", "img_cols", "=", "len", "(", "x_test", "[", "0", "]", ")", ",", "len", "(", "x_test", "[", "0", "]", "[", "0", "]", ")", "\n", "num_classes", "=", "len", "(", "y_train", "[", "0", "]", ")", "\n", "input_shape", "=", "(", "img_rows", ",", "img_cols", ",", "1", ")", "\n", "\n", "model", "=", "Sequential", "(", ")", "\n", "## *********** First layer Conv", "\n", "model", ".", "add", "(", "Conv2D", "(", "filters", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "(", "1", ",", "1", ")", ",", "\n", "input_shape", "=", "input_shape", ")", ")", "\n", "# model.add(BatchNormalization())", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "# model.add(LeakyReLU())", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "1", ",", "2", ")", ")", "\n", "model", ".", "output_shape", "\n", "\n", "## ********* Classification layer", "\n", "model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "dense_layer_sizes", ",", "activation", "=", "'relu'", ")", ")", "\n", "\n", "model", ".", "add", "(", "Dense", "(", "num_classes", ",", "activation", "=", "'softmax'", ")", ")", "\n", "model", ".", "output_shape", "\n", "\n", "model", ".", "compile", "(", "loss", "=", "'categorical_crossentropy'", ",", "\n", "optimizer", "=", "'adam'", ",", "\n", "metrics", "=", "[", "'categorical_accuracy'", "]", ")", "\n", "model", ".", "summary", "(", ")", "\n", "return", "model", "\n", "", "dense_size_candidates", "=", "[", "64", ",", "128", ",", "512", "]", "\n"]]}