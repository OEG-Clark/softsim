{"home.repos.pwc.inspect_result.uci-soe_fairytaleqadata.None.starter.get_question_df": [[17, 42], ["pandas.concat", "print", "len", "pandas.read_csv", "starter.get_question_df.get_q_file"], "function", ["None"], ["def", "get_question_df", "(", "origins", "=", "[", "]", ",", "split", "=", "\"\"", ")", ":", "\n", "  ", "if", "split", "not", "in", "[", "\"\"", ",", "\"train\"", ",", "\"test\"", ",", "\"val\"", "]", ":", "\n", "    ", "print", "(", "'Incorrect split argument: expected \"train\", \"test\", \"val\", or default empty string.'", ")", "\n", "return", "\n", "\n", "", "if", "split", "==", "\"\"", ":", "\n", "    ", "filtered_meta", "=", "meta_df", "\n", "", "else", ":", "\n", "    ", "filtered_meta", "=", "meta_df", "[", "meta_df", "[", "'split'", "]", "==", "split", "]", "\n", "\n", "", "if", "len", "(", "origins", ")", "!=", "0", ":", "\n", "    ", "filtered_meta", "=", "meta_df", "[", "meta_df", "[", "'origin'", "]", ".", "isin", "(", "origins", ")", "]", "\n", "\n", "", "def", "get_q_file", "(", "row", ")", ":", "\n", "    ", "df", "=", "pd", ".", "read_csv", "(", "'data-by-train-split/questions/'", "+", "row", "[", "1", "]", "+", "'/'", "+", "row", "[", "0", "]", "+", "'-questions.csv'", ")", "\n", "df", "[", "'filename'", "]", "=", "row", "[", "0", "]", "+", "'-questions.csv'", "\n", "df", "[", "'split'", "]", "=", "row", "[", "1", "]", "\n", "df", "[", "'origin'", "]", "=", "row", "[", "2", "]", "\n", "return", "df", "\n", "\n", "", "qdfs", "=", "[", "get_q_file", "(", "row", ")", "\n", "for", "row", "in", "zip", "(", "filtered_meta", "[", "'filename'", "]", ".", "to_list", "(", ")", ",", "filtered_meta", "[", "'split'", "]", ".", "to_list", "(", ")", ",", "filtered_meta", "[", "'origin'", "]", ".", "to_list", "(", ")", ")", "\n", "]", "\n", "\n", "return", "pd", ".", "concat", "(", "qdfs", ",", "ignore_index", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uci-soe_fairytaleqadata.None.starter.get_story_df": [[51, 84], ["pandas.concat", "print", "len", "pandas.read_csv", "starter.get_story_df.get_s_file"], "function", ["None"], ["", "def", "get_story_df", "(", "origins", "=", "[", "]", ",", "split", "=", "\"\"", ",", "sent_level", "=", "False", ")", ":", "\n", "  ", "if", "split", "not", "in", "[", "\"\"", ",", "\"train\"", ",", "\"test\"", ",", "\"val\"", "]", ":", "\n", "    ", "print", "(", "'Incorrect split argument: expected \"train\", \"test\", \"val\", or default empty string.'", ")", "\n", "return", "\n", "\n", "", "if", "split", "==", "\"\"", ":", "\n", "    ", "filtered_meta", "=", "meta_df", "\n", "", "else", ":", "\n", "    ", "filtered_meta", "=", "meta_df", "[", "meta_df", "[", "'split'", "]", "==", "split", "]", "\n", "\n", "", "if", "len", "(", "origins", ")", "!=", "0", ":", "\n", "    ", "filtered_meta", "=", "meta_df", "[", "meta_df", "[", "'origin'", "]", ".", "isin", "(", "origins", ")", "]", "\n", "\n", "", "def", "get_s_file", "(", "row", ")", ":", "\n", "    ", "file_str", "=", "'data-by-train-split/'", "\n", "if", "sent_level", ":", "\n", "      ", "file_str", "+=", "'sentence-stories/'", "\n", "", "else", ":", "\n", "      ", "file_str", "+=", "'section-stories/'", "\n", "\n", "", "file_str", "+=", "row", "[", "1", "]", "+", "'/'", "+", "row", "[", "0", "]", "+", "'-story.csv'", "\n", "\n", "df", "=", "pd", ".", "read_csv", "(", "file_str", ")", "\n", "df", "[", "'filename'", "]", "=", "row", "[", "0", "]", "+", "'-questions.csv'", "\n", "df", "[", "'split'", "]", "=", "row", "[", "1", "]", "\n", "df", "[", "'origin'", "]", "=", "row", "[", "2", "]", "\n", "return", "df", "\n", "\n", "", "sdfs", "=", "[", "get_s_file", "(", "row", ")", "\n", "for", "row", "in", "zip", "(", "filtered_meta", "[", "'filename'", "]", ".", "to_list", "(", ")", ",", "filtered_meta", "[", "'split'", "]", ".", "to_list", "(", ")", ",", "filtered_meta", "[", "'origin'", "]", ".", "to_list", "(", ")", ")", "\n", "]", "\n", "\n", "return", "pd", ".", "concat", "(", "sdfs", ",", "ignore_index", "=", "True", ")", "", "", ""]]}