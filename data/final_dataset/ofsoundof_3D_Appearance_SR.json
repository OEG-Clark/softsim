{"home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer_finetune.TrainerFT.__init__": [[17, 29], ["trainer.Trainer.__init__", "trainer_finetune.TrainerFT.args.model.lower", "trainer_finetune.TrainerFT.make_optimizer"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.make_optimizer"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "loader", ",", "my_model", ",", "my_loss", ",", "ckp", ")", ":", "\n", "        ", "super", "(", "TrainerFT", ",", "self", ")", ".", "__init__", "(", "args", ",", "loader", ",", "my_model", ",", "my_loss", ",", "ckp", ")", "\n", "# self.args = args", "\n", "# self.scale = args.scale", "\n", "#", "\n", "# self.ckp = ckp", "\n", "# self.loader_train = loader.loader_train", "\n", "# self.loader_test = loader.loader_test", "\n", "# self.model = my_model", "\n", "# self.loss = my_loss", "\n", "if", "self", ".", "args", ".", "model", ".", "lower", "(", ")", "==", "'finetune'", ":", "\n", "            ", "self", ".", "optimizer", "=", "self", ".", "make_optimizer", "(", "args", ",", "self", ".", "model", ")", "\n", "# self.scheduler = utility.make_scheduler(args, self.optimizer)", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer_finetune.TrainerFT.train": [[39, 84], ["trainer_finetune.TrainerFT.scheduler.step", "trainer_finetune.TrainerFT.loss.step", "trainer_finetune.TrainerFT.ckp.write_log", "trainer_finetune.TrainerFT.loss.start_log", "trainer_finetune.TrainerFT.model.train", "enumerate", "trainer_finetune.TrainerFT.loss.end_log", "trainer_finetune.TrainerFT.scheduler.get_lr", "utility.timer", "utility.timer", "trainer_finetune.TrainerFT.prepare", "timer_data.hold", "timer_model.tic", "trainer_finetune.TrainerFT.optimizer.zero_grad", "trainer_finetune.TrainerFT.model", "trainer_finetune.TrainerFT.loss", "timer_model.hold", "timer_data.tic", "len", "decimal.Decimal", "trainer_finetune.TrainerFT.item", "trainer_finetune.TrainerFT.backward", "trainer_finetune.TrainerFT.optimizer.step", "print", "trainer_finetune.TrainerFT.ckp.write_log", "trainer_finetune.TrainerFT.item", "len", "trainer_finetune.TrainerFT.loss.display_loss", "timer_model.release", "timer_data.release"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.start_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.train", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.end_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.hold", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.tic", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.hold", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.tic", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.display_loss", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.release", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.release"], ["", "", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "self", ".", "loss", ".", "step", "(", ")", "\n", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "lr", "=", "self", ".", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[Epoch {}]\\tLearning rate: {:.2e}'", ".", "format", "(", "epoch", ",", "Decimal", "(", "lr", ")", ")", "\n", ")", "\n", "self", ".", "loss", ".", "start_log", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "timer_data", ",", "timer_model", "=", "utility", ".", "timer", "(", ")", ",", "utility", ".", "timer", "(", ")", "\n", "for", "batch", ",", "(", "lr", ",", "nl", ",", "mk", ",", "hr", ",", "_", ",", "idx_scale", ")", "in", "enumerate", "(", "self", ".", "loader_train", ")", ":", "\n", "# from IPython import embed; embed(); exit()", "\n", "            ", "lr", ",", "nl", ",", "mk", ",", "hr", "=", "self", ".", "prepare", "(", "[", "lr", ",", "nl", ",", "mk", ",", "hr", "]", ")", "\n", "timer_data", ".", "hold", "(", ")", "\n", "timer_model", ".", "tic", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "sr", "=", "self", ".", "model", "(", "idx_scale", ",", "lr", ",", "nl", ",", "mk", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "loss", "=", "self", ".", "loss", "(", "sr", ",", "hr", ")", "\n", "if", "loss", ".", "item", "(", ")", "<", "self", ".", "args", ".", "skip_threshold", "*", "self", ".", "error_last", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Skip this batch {}! (Loss: {})'", ".", "format", "(", "\n", "batch", "+", "1", ",", "loss", ".", "item", "(", ")", "\n", ")", ")", "\n", "\n", "", "timer_model", ".", "hold", "(", ")", "\n", "\n", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                ", "self", ".", "ckp", ".", "write_log", "(", "'[{}/{}]\\t{}\\t{:.3f}+{:.3f}s'", ".", "format", "(", "\n", "(", "batch", "+", "1", ")", "*", "self", ".", "args", ".", "batch_size", ",", "\n", "len", "(", "self", ".", "loader_train", ".", "dataset", ")", ",", "\n", "self", ".", "loss", ".", "display_loss", "(", "batch", ")", ",", "\n", "timer_model", ".", "release", "(", ")", ",", "\n", "timer_data", ".", "release", "(", ")", ")", ")", "\n", "\n", "", "timer_data", ".", "tic", "(", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "", "self", ".", "loss", ".", "end_log", "(", "len", "(", "self", ".", "loader_train", ")", ")", "\n", "self", ".", "error_last", "=", "self", ".", "loss", ".", "log", "[", "-", "1", ",", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer_finetune.TrainerFT.test": [[85, 141], ["trainer_finetune.TrainerFT.ckp.write_log", "trainer_finetune.TrainerFT.ckp.add_log", "trainer_finetune.TrainerFT.model.eval", "utility.timer", "trainer_finetune.TrainerFT.ckp.write_log", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "trainer_finetune.TrainerFT.ckp.save", "len", "trainer_finetune.TrainerFT.loader_test.dataset.set_scale", "tqdm.tqdm.tqdm", "enumerate", "trainer_finetune.TrainerFT.ckp.log.max", "trainer_finetune.TrainerFT.ckp.write_log", "utility.timer.toc", "print", "trainer_finetune.TrainerFT.model", "utility.quantize", "len", "hr.nelement", "trainer_finetune.TrainerFT.prepare", "trainer_finetune.TrainerFT.prepare", "utility.calc_psnr", "save_list.extend", "trainer_finetune.TrainerFT.ckp.save_results"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.add_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData.set_scale", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.toc", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.quantize", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.calc_psnr", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.save_results"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "self", ".", "ckp", ".", "write_log", "(", "'\\nEvaluation:'", ")", "\n", "self", ".", "ckp", ".", "add_log", "(", "torch", ".", "zeros", "(", "1", ",", "len", "(", "self", ".", "scale", ")", ")", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "timer_test", "=", "utility", ".", "timer", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "eval_acc", "=", "0", "\n", "self", ".", "loader_test", ".", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "tqdm_test", "=", "tqdm", "(", "self", ".", "loader_test", ",", "ncols", "=", "80", ")", "\n", "for", "idx_img", ",", "(", "lr", ",", "nl", ",", "mk", ",", "hr", ",", "filename", ",", "_", ")", "in", "enumerate", "(", "tqdm_test", ")", ":", "\n", "# print('FLAG')", "\n", "# print(filename)", "\n", "                    ", "filename", "=", "filename", "[", "0", "]", "\n", "print", "(", "filename", ")", "\n", "no_eval", "=", "(", "hr", ".", "nelement", "(", ")", "==", "1", ")", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "lr", ",", "nl", ",", "mk", ",", "hr", "=", "self", ".", "prepare", "(", "[", "lr", ",", "nl", ",", "mk", ",", "hr", "]", ")", "\n", "", "else", ":", "\n", "                        ", "lr", ",", "nl", ",", "mk", ",", "=", "self", ".", "prepare", "(", "[", "lr", ",", "nl", ",", "mk", "]", ")", "\n", "\n", "", "sr", "=", "self", ".", "model", "(", "idx_scale", ",", "lr", ",", "nl", ",", "mk", ")", "\n", "sr", "=", "utility", ".", "quantize", "(", "sr", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "# print(sr.shape)", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "sr", ".", "shape", "\n", "hr", "=", "hr", "[", ":", ",", ":", ",", ":", "h", ",", ":", "w", "]", "\n", "save_list", "=", "[", "sr", "]", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "eval_acc", "+=", "utility", ".", "calc_psnr", "(", "\n", "sr", ",", "hr", ",", "scale", ",", "self", ".", "args", ".", "rgb_range", ",", "\n", "benchmark", "=", "self", ".", "loader_test", ".", "dataset", ".", "benchmark", "\n", ")", "\n", "save_list", ".", "extend", "(", "[", "lr", ",", "hr", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "                        ", "self", ".", "ckp", ".", "save_results", "(", "filename", ",", "save_list", ",", "scale", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", "=", "eval_acc", "/", "len", "(", "self", ".", "loader_test", ")", "\n", "best", "=", "self", ".", "ckp", ".", "log", ".", "max", "(", "0", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[{} x{}]\\tPSNR: {:.3f} (Best: {:.3f} @epoch {})'", ".", "format", "(", "\n", "self", ".", "args", ".", "data_test", ",", "\n", "scale", ",", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", ",", "\n", "best", "[", "0", "]", "[", "idx_scale", "]", ",", "\n", "best", "[", "1", "]", "[", "idx_scale", "]", "+", "1", "\n", ")", "\n", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "write_log", "(", "\n", "'Total time: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ",", "refresh", "=", "True", "\n", ")", "\n", "if", "not", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "ckp", ".", "save", "(", "self", ",", "epoch", ",", "is_best", "=", "(", "best", "[", "1", "]", "[", "0", "]", "+", "1", "==", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer_finetune.TrainerFT.make_optimizer": [[142, 171], ["filter", "filter", "filter", "filter", "optimizer_function", "model.model.parameters", "list", "list", "model.model.parameters", "map", "map", "model.model.body_ft.parameters", "model.model.tail_ft.parameters", "id", "id"], "methods", ["None"], ["", "", "def", "make_optimizer", "(", "self", ",", "args", ",", "model", ")", ":", "\n", "        ", "trainable", "=", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "model", ".", "model", ".", "parameters", "(", ")", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "finetune_id", "=", "list", "(", "map", "(", "id", ",", "model", ".", "model", ".", "body_ft", ".", "parameters", "(", ")", ")", ")", "+", "list", "(", "map", "(", "id", ",", "model", ".", "model", ".", "tail_ft", ".", "parameters", "(", ")", ")", ")", "#\\", "\n", "#+ list(map(id, model.model.tail_ft2.parameters()))", "\n", "base_params", "=", "filter", "(", "lambda", "x", ":", "id", "(", "x", ")", "not", "in", "finetune_id", ",", "trainable", ")", "\n", "trainable", "=", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "model", ".", "model", ".", "parameters", "(", ")", ")", "\n", "finetune_params", "=", "filter", "(", "lambda", "x", ":", "id", "(", "x", ")", "in", "finetune_id", ",", "trainable", ")", "\n", "if", "args", ".", "optimizer", "==", "'SGD'", ":", "\n", "            ", "optimizer_function", "=", "optim", ".", "SGD", "\n", "kwargs", "=", "{", "'momentum'", ":", "args", ".", "momentum", "}", "\n", "", "elif", "args", ".", "optimizer", "==", "'ADAM'", ":", "\n", "            ", "optimizer_function", "=", "optim", ".", "Adam", "\n", "kwargs", "=", "{", "\n", "'betas'", ":", "(", "args", ".", "beta1", ",", "args", ".", "beta2", ")", ",", "\n", "'eps'", ":", "args", ".", "epsilon", "\n", "}", "\n", "", "elif", "args", ".", "optimizer", "==", "'RMSprop'", ":", "\n", "            ", "optimizer_function", "=", "optim", ".", "RMSprop", "\n", "kwargs", "=", "{", "'eps'", ":", "args", ".", "epsilon", "}", "\n", "\n", "", "kwargs", "[", "'lr'", "]", "=", "args", ".", "lr", "*", "0.1", "\n", "kwargs", "[", "'weight_decay'", "]", "=", "args", ".", "weight_decay", "\n", "# from IPython import embed; embed(); exit()", "\n", "return", "optimizer_function", "(", "[", "\n", "{", "'params'", ":", "base_params", "}", ",", "\n", "{", "'params'", ":", "finetune_params", ",", "'lr'", ":", "args", ".", "lr", "}", "\n", "]", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.__init__": [[19, 22], ["utility.timer.tic"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.tic"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "=", "0", "\n", "self", ".", "tic", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.tic": [[23, 25], ["time.time"], "methods", ["None"], ["", "def", "tic", "(", "self", ")", ":", "\n", "        ", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.toc": [[26, 28], ["time.time"], "methods", ["None"], ["", "def", "toc", "(", "self", ")", ":", "\n", "        ", "return", "time", ".", "time", "(", ")", "-", "self", ".", "t0", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.hold": [[29, 31], ["utility.timer.toc"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.toc"], ["", "def", "hold", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "+=", "self", ".", "toc", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.release": [[32, 37], ["None"], "methods", ["None"], ["", "def", "release", "(", "self", ")", ":", "\n", "        ", "ret", "=", "self", ".", "acc", "\n", "self", ".", "acc", "=", "0", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.reset": [[38, 40], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "acc", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.__init__": [[42, 78], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "datetime.datetime.now().strftime", "utility.checkpoint.__init__._make_dir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "ok", "=", "True", "\n", "self", ".", "log", "=", "torch", ".", "Tensor", "(", ")", "\n", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "self", ".", "img_sfx", "=", "args", ".", "model", "+", "'_'", "+", "args", ".", "submodel", "\n", "\n", "if", "args", ".", "load", "==", "'.'", ":", "\n", "            ", "if", "args", ".", "save", "==", "'.'", ":", "args", ".", "save", "=", "now", "\n", "self", ".", "dir", "=", "args", ".", "dir", "+", "args", ".", "save", "\n", "", "else", ":", "\n", "            ", "self", ".", "dir", "=", "args", ".", "dir", "+", "args", ".", "load", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", ")", ":", "\n", "                ", "args", ".", "load", "=", "'.'", "\n", "", "else", ":", "\n", "                ", "self", ".", "log", "=", "torch", ".", "load", "(", "self", ".", "dir", "+", "'/psnr_log.pt'", ")", "\n", "print", "(", "'Continue from epoch {}...'", ".", "format", "(", "len", "(", "self", ".", "log", ")", ")", ")", "\n", "\n", "", "", "if", "args", ".", "reset", ":", "\n", "            ", "os", ".", "system", "(", "'rm -rf '", "+", "self", ".", "dir", ")", "\n", "args", ".", "load", "=", "'.'", "\n", "\n", "", "def", "_make_dir", "(", "path", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "os", ".", "makedirs", "(", "path", ")", "\n", "\n", "", "_make_dir", "(", "self", ".", "dir", ")", "\n", "_make_dir", "(", "self", ".", "dir", "+", "'/model'", ")", "\n", "_make_dir", "(", "self", ".", "dir", "+", "'/results'", ")", "\n", "\n", "open_type", "=", "'a'", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", "+", "'/log.txt'", ")", "else", "'w'", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "dir", "+", "'/log.txt'", ",", "open_type", ")", "\n", "with", "open", "(", "self", ".", "dir", "+", "'/config.txt'", ",", "open_type", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "now", "+", "'\\n\\n'", ")", "\n", "for", "arg", "in", "vars", "(", "args", ")", ":", "\n", "                ", "f", ".", "write", "(", "'{}: {}\\n'", ".", "format", "(", "arg", ",", "getattr", "(", "args", ",", "arg", ")", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.save": [[79, 89], ["trainer.model.save", "trainer.loss.save", "trainer.loss.plot_loss", "utility.checkpoint.plot_psnr", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "trainer.optimizer.state_dict", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.plot_loss", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.plot_psnr", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict"], ["", "", "def", "save", "(", "self", ",", "trainer", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "trainer", ".", "model", ".", "save", "(", "self", ".", "dir", ",", "epoch", ",", "is_best", "=", "is_best", ")", "\n", "trainer", ".", "loss", ".", "save", "(", "self", ".", "dir", ")", "\n", "trainer", ".", "loss", ".", "plot_loss", "(", "self", ".", "dir", ",", "epoch", ")", "\n", "\n", "self", ".", "plot_psnr", "(", "epoch", ")", "\n", "torch", ".", "save", "(", "self", ".", "log", ",", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "'psnr_log.pt'", ")", ")", "\n", "torch", ".", "save", "(", "\n", "trainer", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "'optimizer.pt'", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.add_log": [[91, 93], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "add_log", "(", "self", ",", "log", ")", ":", "\n", "        ", "self", ".", "log", "=", "torch", ".", "cat", "(", "[", "self", ".", "log", ",", "log", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log": [[94, 100], ["print", "utility.checkpoint.log_file.write", "utility.checkpoint.log_file.close", "open"], "methods", ["None"], ["", "def", "write_log", "(", "self", ",", "log", ",", "refresh", "=", "False", ")", ":", "\n", "        ", "print", "(", "log", ")", "\n", "self", ".", "log_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "if", "refresh", ":", "\n", "            ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "dir", "+", "'/log.txt'", ",", "'a'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.done": [[101, 103], ["utility.checkpoint.log_file.close"], "methods", ["None"], ["", "", "def", "done", "(", "self", ")", ":", "\n", "        ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.plot_psnr": [[104, 121], ["numpy.linspace", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "enumerate", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "matplotlib.plot", "matplotlib.plot", "utility.checkpoint.log[].numpy"], "methods", ["None"], ["", "def", "plot_psnr", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "axis", "=", "np", ".", "linspace", "(", "1", ",", "epoch", ",", "epoch", ")", "\n", "label", "=", "'SR on {}'", ".", "format", "(", "self", ".", "args", ".", "data_test", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "title", "(", "label", ")", "\n", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "args", ".", "scale", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "\n", "axis", ",", "\n", "self", ".", "log", "[", ":", ",", "idx_scale", "]", ".", "numpy", "(", ")", ",", "\n", "label", "=", "'Scale {}'", ".", "format", "(", "scale", ")", "\n", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'PSNR'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "'{}/test_{}.pdf'", ".", "format", "(", "self", ".", "dir", ",", "self", ".", "args", ".", "data_test", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.save_results": [[122, 129], ["zip", "v[].data.mul", "v[].data.mul.byte().permute().cpu().numpy", "scipy.imsave", "v[].data.mul.byte().permute().cpu", "v[].data.mul.byte().permute", "v[].data.mul.byte"], "methods", ["None"], ["", "def", "save_results", "(", "self", ",", "filename", ",", "save_list", ",", "scale", ")", ":", "\n", "        ", "filename", "=", "'{}/results/{}_x{}_'", ".", "format", "(", "self", ".", "dir", ",", "filename", ",", "scale", ")", "\n", "postfix", "=", "(", "self", ".", "img_sfx", ",", "'LR'", ",", "'HR'", ")", "\n", "for", "v", ",", "p", "in", "zip", "(", "save_list", ",", "postfix", ")", ":", "\n", "            ", "normalized", "=", "v", "[", "0", "]", ".", "data", ".", "mul", "(", "255", "/", "self", ".", "args", ".", "rgb_range", ")", "\n", "ndarr", "=", "normalized", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "misc", ".", "imsave", "(", "'{}{}.png'", ".", "format", "(", "filename", ",", "p", ")", ",", "ndarr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.quantize": [[143, 146], ["img.mul().clamp().round().div", "img.mul().clamp().round", "img.mul().clamp", "img.mul"], "function", ["None"], ["", "", "", "def", "quantize", "(", "img", ",", "rgb_range", ")", ":", "\n", "    ", "pixel_range", "=", "255", "/", "rgb_range", "\n", "return", "img", ".", "mul", "(", "pixel_range", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "round", "(", ")", ".", "div", "(", "pixel_range", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.calc_psnr": [[147, 174], ["valid.pow().mean", "diff.sum.size", "diff.sum.new", "diff.sum.mul_().div_", "diff.sum.sum", "math.log10", "valid.pow", "diff.sum.mul_"], "function", ["None"], ["", "def", "calc_psnr", "(", "sr", ",", "hr", ",", "scale", ",", "rgb_range", ",", "benchmark", "=", "False", ")", ":", "\n", "    ", "diff", "=", "(", "sr", "-", "hr", ")", ".", "data", ".", "div", "(", "rgb_range", ")", "\n", "shave", "=", "scale", "\n", "if", "diff", ".", "size", "(", "1", ")", ">", "1", ":", "\n", "        ", "convert", "=", "diff", ".", "new", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "convert", "[", "0", ",", "0", ",", "0", ",", "0", "]", "=", "65.738", "\n", "convert", "[", "0", ",", "1", ",", "0", ",", "0", "]", "=", "129.057", "\n", "convert", "[", "0", ",", "2", ",", "0", ",", "0", "]", "=", "25.064", "\n", "diff", ".", "mul_", "(", "convert", ")", ".", "div_", "(", "256", ")", "\n", "diff", "=", "diff", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "'''\n    if benchmark:\n        shave = scale\n        if diff.size(1) > 1:\n            convert = diff.new(1, 3, 1, 1)\n            convert[0, 0, 0, 0] = 65.738\n            convert[0, 1, 0, 0] = 129.057\n            convert[0, 2, 0, 0] = 25.064\n            diff.mul_(convert).div_(256)\n            diff = diff.sum(dim=1, keepdim=True)\n    else:\n        shave = scale + 6\n    '''", "\n", "valid", "=", "diff", "[", ":", ",", ":", ",", "shave", ":", "-", "shave", ",", "shave", ":", "-", "shave", "]", "\n", "mse", "=", "valid", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n", "return", "-", "10", "*", "math", ".", "log10", "(", "mse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.make_optimizer": [[175, 195], ["filter", "optimizer_function", "my_model.parameters"], "function", ["None"], ["", "def", "make_optimizer", "(", "args", ",", "my_model", ")", ":", "\n", "    ", "trainable", "=", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "my_model", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "args", ".", "optimizer", "==", "'SGD'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "SGD", "\n", "kwargs", "=", "{", "'momentum'", ":", "args", ".", "momentum", "}", "\n", "", "elif", "args", ".", "optimizer", "==", "'ADAM'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "Adam", "\n", "kwargs", "=", "{", "\n", "'betas'", ":", "(", "args", ".", "beta1", ",", "args", ".", "beta2", ")", ",", "\n", "'eps'", ":", "args", ".", "epsilon", "\n", "}", "\n", "", "elif", "args", ".", "optimizer", "==", "'RMSprop'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "RMSprop", "\n", "kwargs", "=", "{", "'eps'", ":", "args", ".", "epsilon", "}", "\n", "\n", "", "kwargs", "[", "'lr'", "]", "=", "args", ".", "lr", "\n", "kwargs", "[", "'weight_decay'", "]", "=", "args", ".", "weight_decay", "\n", "\n", "return", "optimizer_function", "(", "trainable", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.make_scheduler": [[196, 214], ["torch.StepLR", "args.decay_type.find", "args.decay_type.split", "list.pop", "list", "torch.MultiStepLR", "map", "int"], "function", ["None"], ["", "def", "make_scheduler", "(", "args", ",", "my_optimizer", ")", ":", "\n", "    ", "if", "args", ".", "decay_type", "==", "'step'", ":", "\n", "        ", "scheduler", "=", "lrs", ".", "StepLR", "(", "\n", "my_optimizer", ",", "\n", "step_size", "=", "args", ".", "lr_decay", ",", "\n", "gamma", "=", "args", ".", "gamma", "\n", ")", "\n", "", "elif", "args", ".", "decay_type", ".", "find", "(", "'step'", ")", ">=", "0", ":", "\n", "        ", "milestones", "=", "args", ".", "decay_type", ".", "split", "(", "'_'", ")", "\n", "milestones", ".", "pop", "(", "0", ")", "\n", "milestones", "=", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ")", ",", "milestones", ")", ")", "\n", "scheduler", "=", "lrs", ".", "MultiStepLR", "(", "\n", "my_optimizer", ",", "\n", "milestones", "=", "milestones", ",", "\n", "gamma", "=", "args", ".", "gamma", "\n", ")", "\n", "\n", "", "return", "scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.__init__": [[12, 31], ["utility.make_optimizer", "utility.make_scheduler", "trainer.Trainer.optimizer.load_state_dict", "range", "torch.load", "len", "trainer.Trainer.scheduler.step", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.make_optimizer", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.make_scheduler", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.RCAN.load_state_dict", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "loader", ",", "my_model", ",", "my_loss", ",", "ckp", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n", "self", ".", "ckp", "=", "ckp", "\n", "self", ".", "loader_train", "=", "loader", ".", "loader_train", "\n", "self", ".", "loader_test", "=", "loader", ".", "loader_test", "\n", "self", ".", "model", "=", "my_model", "\n", "self", ".", "loss", "=", "my_loss", "\n", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "args", ",", "self", ".", "model", ")", "\n", "self", ".", "scheduler", "=", "utility", ".", "make_scheduler", "(", "args", ",", "self", ".", "optimizer", ")", "\n", "\n", "if", "self", ".", "args", ".", "load", "!=", "'.'", ":", "\n", "            ", "self", ".", "optimizer", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ckp", ".", "dir", ",", "'optimizer.pt'", ")", ")", "\n", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "ckp", ".", "log", ")", ")", ":", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "self", ".", "error_last", "=", "1e8", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.train": [[32, 76], ["trainer.Trainer.scheduler.step", "trainer.Trainer.loss.step", "trainer.Trainer.ckp.write_log", "trainer.Trainer.loss.start_log", "trainer.Trainer.model.train", "enumerate", "trainer.Trainer.loss.end_log", "trainer.Trainer.scheduler.get_lr", "utility.timer", "utility.timer", "trainer.Trainer.prepare", "timer_data.hold", "timer_model.tic", "trainer.Trainer.optimizer.zero_grad", "trainer.Trainer.model", "trainer.Trainer.loss", "timer_model.hold", "timer_data.tic", "len", "decimal.Decimal", "trainer.Trainer.item", "trainer.Trainer.backward", "trainer.Trainer.optimizer.step", "print", "trainer.Trainer.ckp.write_log", "trainer.Trainer.item", "len", "trainer.Trainer.loss.display_loss", "timer_model.release", "timer_data.release"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.start_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.train", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.end_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.hold", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.tic", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.hold", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.tic", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.display_loss", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.release", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.release"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "self", ".", "loss", ".", "step", "(", ")", "\n", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "lr", "=", "self", ".", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[Epoch {}]\\tLearning rate: {:.2e}'", ".", "format", "(", "epoch", ",", "Decimal", "(", "lr", ")", ")", "\n", ")", "\n", "self", ".", "loss", ".", "start_log", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "timer_data", ",", "timer_model", "=", "utility", ".", "timer", "(", ")", ",", "utility", ".", "timer", "(", ")", "\n", "for", "batch", ",", "(", "lr", ",", "hr", ",", "_", ",", "idx_scale", ")", "in", "enumerate", "(", "self", ".", "loader_train", ")", ":", "\n", "            ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "[", "lr", ",", "hr", "]", ")", "\n", "timer_data", ".", "hold", "(", ")", "\n", "timer_model", ".", "tic", "(", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "sr", "=", "self", ".", "model", "(", "idx_scale", ",", "lr", ")", "\n", "loss", "=", "self", ".", "loss", "(", "sr", ",", "hr", ")", "\n", "if", "loss", ".", "item", "(", ")", "<", "self", ".", "args", ".", "skip_threshold", "*", "self", ".", "error_last", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Skip this batch {}! (Loss: {})'", ".", "format", "(", "\n", "batch", "+", "1", ",", "loss", ".", "item", "(", ")", "\n", ")", ")", "\n", "\n", "", "timer_model", ".", "hold", "(", ")", "\n", "\n", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                ", "self", ".", "ckp", ".", "write_log", "(", "'[{}/{}]\\t{}\\t{:.3f}+{:.3f}s'", ".", "format", "(", "\n", "(", "batch", "+", "1", ")", "*", "self", ".", "args", ".", "batch_size", ",", "\n", "len", "(", "self", ".", "loader_train", ".", "dataset", ")", ",", "\n", "self", ".", "loss", ".", "display_loss", "(", "batch", ")", ",", "\n", "timer_model", ".", "release", "(", ")", ",", "\n", "timer_data", ".", "release", "(", ")", ")", ")", "\n", "\n", "", "timer_data", ".", "tic", "(", ")", "\n", "\n", "", "self", ".", "loss", ".", "end_log", "(", "len", "(", "self", ".", "loader_train", ")", ")", "\n", "self", ".", "error_last", "=", "self", ".", "loss", ".", "log", "[", "-", "1", ",", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.test": [[77, 130], ["trainer.Trainer.ckp.write_log", "trainer.Trainer.ckp.add_log", "trainer.Trainer.model.eval", "utility.timer", "trainer.Trainer.ckp.write_log", "torch.zeros", "torch.no_grad", "enumerate", "trainer.Trainer.ckp.save", "len", "trainer.Trainer.loader_test.dataset.set_scale", "tqdm.tqdm.tqdm", "enumerate", "trainer.Trainer.ckp.log.max", "trainer.Trainer.ckp.write_log", "utility.timer.toc", "trainer.Trainer.model", "utility.quantize", "len", "hr.nelement", "trainer.Trainer.prepare", "utility.calc_psnr", "save_list.extend", "trainer.Trainer.ckp.save_results", "trainer.Trainer.prepare"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.add_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData.set_scale", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.timer.toc", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.quantize", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.calc_psnr", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.checkpoint.save_results", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.prepare"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "self", ".", "ckp", ".", "write_log", "(", "'\\nEvaluation:'", ")", "\n", "self", ".", "ckp", ".", "add_log", "(", "torch", ".", "zeros", "(", "1", ",", "len", "(", "self", ".", "scale", ")", ")", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "timer_test", "=", "utility", ".", "timer", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "eval_acc", "=", "0", "\n", "self", ".", "loader_test", ".", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "tqdm_test", "=", "tqdm", "(", "self", ".", "loader_test", ",", "ncols", "=", "80", ")", "\n", "for", "idx_img", ",", "(", "lr", ",", "hr", ",", "filename", ",", "_", ")", "in", "enumerate", "(", "tqdm_test", ")", ":", "\n", "\n", "# from IPython import embed; embed();", "\n", "                    ", "filename", "=", "filename", "[", "0", "]", "\n", "no_eval", "=", "(", "hr", ".", "nelement", "(", ")", "==", "1", ")", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "[", "lr", ",", "hr", "]", ")", "\n", "", "else", ":", "\n", "                        ", "lr", "=", "self", ".", "prepare", "(", "[", "lr", "]", ")", "[", "0", "]", "\n", "\n", "", "sr", "=", "self", ".", "model", "(", "idx_scale", ",", "lr", ")", "\n", "sr", "=", "utility", ".", "quantize", "(", "sr", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "\n", "save_list", "=", "[", "sr", "]", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "eval_acc", "+=", "utility", ".", "calc_psnr", "(", "\n", "sr", ",", "hr", ",", "scale", ",", "self", ".", "args", ".", "rgb_range", ",", "\n", "benchmark", "=", "self", ".", "loader_test", ".", "dataset", ".", "benchmark", "\n", ")", "\n", "save_list", ".", "extend", "(", "[", "lr", ",", "hr", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "                        ", "self", ".", "ckp", ".", "save_results", "(", "filename", ",", "save_list", ",", "scale", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", "=", "eval_acc", "/", "len", "(", "self", ".", "loader_test", ")", "\n", "best", "=", "self", ".", "ckp", ".", "log", ".", "max", "(", "0", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[{} x{}]\\tPSNR: {:.3f} (Best: {:.3f} @epoch {})'", ".", "format", "(", "\n", "self", ".", "args", ".", "data_test", ",", "\n", "scale", ",", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", ",", "\n", "best", "[", "0", "]", "[", "idx_scale", "]", ",", "\n", "best", "[", "1", "]", "[", "idx_scale", "]", "+", "1", "\n", ")", "\n", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "write_log", "(", "\n", "'Total time: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ",", "refresh", "=", "True", "\n", ")", "\n", "if", "not", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "ckp", ".", "save", "(", "self", ",", "epoch", ",", "is_best", "=", "(", "best", "[", "1", "]", "[", "0", "]", "+", "1", "==", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.prepare": [[131, 138], ["torch.device", "tensor.half.half.to", "trainer.Trainer.prepare._prepare"], "methods", ["None"], ["", "", "def", "prepare", "(", "self", ",", "l", ",", "volatile", "=", "False", ")", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "self", ".", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "def", "_prepare", "(", "tensor", ")", ":", "\n", "            ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "_l", ")", "for", "_l", "in", "l", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.terminate": [[139, 146], ["trainer.Trainer.test"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.trainer.Trainer.test"], ["", "def", "terminate", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "test", "(", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "return", "epoch", ">=", "self", ".", "args", ".", "epochs", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.dataloader_new._MSDataLoaderIter.__init__": [[84, 152], ["iter", "torch.LongTensor().random_().item", "torch.LongTensor().random_().item", "torch.LongTensor().random_().item", "torch.LongTensor().random_().item", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.Queue", "torch.Queue", "torch.Event", "torch.Event", "range", "torch._C._update_worker_pids", "torch._C._update_worker_pids", "torch.utils.data.dataloader._set_SIGCHLD_handler", "torch.utils.data.dataloader._set_SIGCHLD_handler", "range", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.Queue", "torch.Queue", "torch.Queue.cancel_join_thread", "torch.Process", "torch.Process", "torch.Process.start", "dataloader_new._MSDataLoaderIter.index_queues.append", "dataloader_new._MSDataLoaderIter.workers.append", "queue.Queue", "threading.Thread", "threading.Thread.start", "id", "tuple", "dataloader_new._MSDataLoaderIter._put_indices", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "loader", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "loader", ".", "dataset", "\n", "self", ".", "collate_fn", "=", "loader", ".", "collate_fn", "\n", "self", ".", "scale", "=", "loader", ".", "scale", "\n", "self", ".", "batch_sampler", "=", "loader", ".", "batch_sampler", "\n", "self", ".", "num_workers", "=", "loader", ".", "num_workers", "\n", "self", ".", "pin_memory", "=", "loader", ".", "pin_memory", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "self", ".", "timeout", "=", "loader", ".", "timeout", "\n", "\n", "self", ".", "sample_iter", "=", "iter", "(", "self", ".", "batch_sampler", ")", "\n", "\n", "base_seed", "=", "torch", ".", "LongTensor", "(", "1", ")", ".", "random_", "(", ")", ".", "item", "(", ")", "\n", "\n", "if", "self", ".", "num_workers", ">", "0", ":", "\n", "            ", "self", ".", "worker_init_fn", "=", "loader", ".", "worker_init_fn", "\n", "self", ".", "worker_queue_idx", "=", "0", "\n", "self", ".", "worker_result_queue", "=", "multiprocessing", ".", "Queue", "(", ")", "\n", "self", ".", "batches_outstanding", "=", "0", "\n", "self", ".", "worker_pids_set", "=", "False", "\n", "self", ".", "shutdown", "=", "False", "\n", "self", ".", "send_idx", "=", "0", "\n", "self", ".", "rcvd_idx", "=", "0", "\n", "self", ".", "reorder_dict", "=", "{", "}", "\n", "self", ".", "done_event", "=", "multiprocessing", ".", "Event", "(", ")", "\n", "\n", "self", ".", "index_queues", "=", "[", "]", "\n", "self", ".", "workers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_workers", ")", ":", "\n", "                ", "index_queue", "=", "multiprocessing", ".", "Queue", "(", ")", "\n", "index_queue", ".", "cancel_join_thread", "(", ")", "\n", "w", "=", "multiprocessing", ".", "Process", "(", "\n", "target", "=", "_ms_loop", ",", "\n", "args", "=", "(", "self", ".", "dataset", ",", "index_queue", ",", "\n", "self", ".", "worker_result_queue", ",", "self", ".", "done_event", ",", "\n", "self", ".", "collate_fn", ",", "self", ".", "scale", ",", "base_seed", "+", "i", ",", "\n", "self", ".", "worker_init_fn", ",", "i", ")", ")", "\n", "w", ".", "daemon", "=", "True", "\n", "# NB: Process.start() actually take some time as it needs to", "\n", "#     start a process and pass the arguments over via a pipe.", "\n", "#     Therefore, we only add a worker to self.workers list after", "\n", "#     it started, so that we do not call .join() if program dies", "\n", "#     before it starts, and __del__ tries to join but will get:", "\n", "#     AssertionError: can only join a started process.", "\n", "w", ".", "start", "(", ")", "\n", "self", ".", "index_queues", ".", "append", "(", "index_queue", ")", "\n", "self", ".", "workers", ".", "append", "(", "w", ")", "\n", "\n", "", "if", "self", ".", "pin_memory", ":", "\n", "                ", "self", ".", "data_queue", "=", "queue", ".", "Queue", "(", ")", "\n", "pin_memory_thread", "=", "threading", ".", "Thread", "(", "\n", "target", "=", "_pin_memory_loop", ",", "\n", "args", "=", "(", "self", ".", "worker_result_queue", ",", "self", ".", "data_queue", ",", "\n", "torch", ".", "cuda", ".", "current_device", "(", ")", ",", "self", ".", "done_event", ")", ")", "\n", "pin_memory_thread", ".", "daemon", "=", "True", "\n", "pin_memory_thread", ".", "start", "(", ")", "\n", "# Similar to workers (see comment above), we only register", "\n", "# pin_memory_thread once it is started.", "\n", "self", ".", "pin_memory_thread", "=", "pin_memory_thread", "\n", "", "else", ":", "\n", "                ", "self", ".", "data_queue", "=", "self", ".", "worker_result_queue", "\n", "\n", "", "_update_worker_pids", "(", "id", "(", "self", ")", ",", "tuple", "(", "w", ".", "pid", "for", "w", "in", "self", ".", "workers", ")", ")", "\n", "_set_SIGCHLD_handler", "(", ")", "\n", "self", ".", "worker_pids_set", "=", "True", "\n", "\n", "# prime the prefetch loop", "\n", "for", "_", "in", "range", "(", "2", "*", "self", ".", "num_workers", ")", ":", "\n", "                ", "self", ".", "_put_indices", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.dataloader_new.MSDataLoader.__init__": [[155, 169], ["torch.utils.data.dataloader.DataLoader.__init__"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "args", ",", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "sampler", "=", "None", ",", "batch_sampler", "=", "None", ",", "num_workers", "=", "0", ",", "\n", "collate_fn", "=", "default_collate", ",", "pin_memory", "=", "False", ",", "drop_last", "=", "False", ",", "\n", "timeout", "=", "0", ",", "worker_init_fn", "=", "None", ")", ":", "\n", "\n", "        ", "super", "(", "MSDataLoader", ",", "self", ")", ".", "__init__", "(", "\n", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "\n", "sampler", "=", "sampler", ",", "batch_sampler", "=", "batch_sampler", ",", "\n", "num_workers", "=", "num_workers", ",", "collate_fn", "=", "collate_fn", ",", "\n", "pin_memory", "=", "pin_memory", ",", "drop_last", "=", "drop_last", ",", "\n", "timeout", "=", "timeout", ",", "worker_init_fn", "=", "worker_init_fn", ")", "\n", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.dataloader_new.MSDataLoader.__iter__": [[170, 172], ["dataloader_new._MSDataLoaderIter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "_MSDataLoaderIter", "(", "self", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.dataloader_new._ms_loop": [[28, 81], ["torch._C._set_worker_signal_handlers", "torch.set_num_threads", "torch.set_num_threads", "random.seed", "torch.manual_seed", "torch.manual_seed", "data_queue.cancel_join_thread", "torch.utils.data.dataloader.ManagerWatchdog", "torch.utils.data.dataloader.ManagerWatchdog.is_alive", "init_fn", "index_queue.get", "done_event.is_set", "done_event.is_set", "collate_fn", "collate_fn.append", "data_queue.put", "random.randrange", "dataset.set_scale", "data_queue.put", "len", "len", "torch.utils.data.dataloader.ExceptionWrapper", "sys.exc_info"], "function", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData.set_scale"], ["", "def", "_ms_loop", "(", "dataset", ",", "index_queue", ",", "data_queue", ",", "done_event", ",", "collate_fn", ",", "scale", ",", "seed", ",", "init_fn", ",", "worker_id", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "global", "_use_shared_memory", "\n", "_use_shared_memory", "=", "True", "\n", "\n", "_set_worker_signal_handlers", "(", ")", "\n", "\n", "torch", ".", "set_num_threads", "(", "1", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "\n", "data_queue", ".", "cancel_join_thread", "(", ")", "\n", "\n", "if", "init_fn", "is", "not", "None", ":", "\n", "            ", "init_fn", "(", "worker_id", ")", "\n", "\n", "", "watchdog", "=", "ManagerWatchdog", "(", ")", "\n", "\n", "while", "watchdog", ".", "is_alive", "(", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "r", "=", "index_queue", ".", "get", "(", "timeout", "=", "MP_STATUS_CHECK_INTERVAL", ")", "\n", "", "except", "queue", ".", "Empty", ":", "\n", "                ", "continue", "\n", "", "if", "r", "is", "None", ":", "\n", "# Received the final signal", "\n", "                ", "assert", "done_event", ".", "is_set", "(", ")", "\n", "return", "\n", "", "elif", "done_event", ".", "is_set", "(", ")", ":", "\n", "# Done event is set. But I haven't received the final signal", "\n", "# (None) yet. I will keep continuing until get it, and skip the", "\n", "# processing steps.", "\n", "                ", "continue", "\n", "", "idx", ",", "batch_indices", "=", "r", "\n", "try", ":", "\n", "                ", "idx_scale", "=", "0", "\n", "if", "len", "(", "scale", ")", ">", "1", "and", "dataset", ".", "train", ":", "\n", "                    ", "idx_scale", "=", "random", ".", "randrange", "(", "0", ",", "len", "(", "scale", ")", ")", "\n", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "samples", "=", "collate_fn", "(", "[", "dataset", "[", "i", "]", "for", "i", "in", "batch_indices", "]", ")", "\n", "samples", ".", "append", "(", "idx_scale", ")", "\n", "#This is why idx_scale appears in the samples of the train loader", "\n", "\n", "", "except", "Exception", ":", "\n", "# It is important that we don't store exc_info in a variable,", "\n", "# see NOTE [ Python Traceback Reference Cycle Problem ]", "\n", "                ", "data_queue", ".", "put", "(", "(", "idx", ",", "ExceptionWrapper", "(", "sys", ".", "exc_info", "(", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "data_queue", ".", "put", "(", "(", "idx", ",", "samples", ")", ")", "\n", "del", "samples", "\n", "", "", "", "except", "KeyboardInterrupt", ":", "\n", "# Main process will raise KeyboardInterrupt anyways.", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.dataloader._MSDataLoaderIter.__init__": [[57, 128], ["threading.Event", "iter", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.SimpleQueue", "torch.SimpleQueue", "torch._C._update_worker_pids", "torch._C._update_worker_pids", "torch.utils.data.dataloader._set_SIGCHLD_handler", "torch.utils.data.dataloader._set_SIGCHLD_handler", "range", "torch.Queue", "torch.Queue", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.Process", "torch.Process", "queue.Queue", "threading.Thread", "dataloader._MSDataLoaderIter.worker_manager_thread.start", "w.start", "id", "tuple", "dataloader._MSDataLoaderIter._put_indices", "range", "range", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "loader", ")", ":", "\n", "# from IPython import embed; embed(); exit()", "\n", "        ", "self", ".", "dataset", "=", "loader", ".", "dataset", "\n", "self", ".", "scale", "=", "loader", ".", "scale", "\n", "self", ".", "collate_fn", "=", "loader", ".", "collate_fn", "\n", "self", ".", "batch_sampler", "=", "loader", ".", "batch_sampler", "\n", "self", ".", "num_workers", "=", "loader", ".", "num_workers", "\n", "self", ".", "pin_memory", "=", "loader", ".", "pin_memory", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "self", ".", "timeout", "=", "loader", ".", "timeout", "\n", "self", ".", "done_event", "=", "threading", ".", "Event", "(", ")", "\n", "\n", "self", ".", "sample_iter", "=", "iter", "(", "self", ".", "batch_sampler", ")", "\n", "\n", "if", "self", ".", "num_workers", ">", "0", ":", "\n", "            ", "self", ".", "worker_init_fn", "=", "loader", ".", "worker_init_fn", "\n", "self", ".", "index_queues", "=", "[", "\n", "multiprocessing", ".", "Queue", "(", ")", "for", "_", "in", "range", "(", "self", ".", "num_workers", ")", "\n", "]", "\n", "self", ".", "worker_queue_idx", "=", "0", "\n", "self", ".", "worker_result_queue", "=", "multiprocessing", ".", "SimpleQueue", "(", ")", "\n", "self", ".", "batches_outstanding", "=", "0", "\n", "self", ".", "worker_pids_set", "=", "False", "\n", "self", ".", "shutdown", "=", "False", "\n", "self", ".", "send_idx", "=", "0", "\n", "self", ".", "rcvd_idx", "=", "0", "\n", "self", ".", "reorder_dict", "=", "{", "}", "\n", "\n", "base_seed", "=", "torch", ".", "LongTensor", "(", "1", ")", ".", "random_", "(", ")", "[", "0", "]", "\n", "self", ".", "workers", "=", "[", "\n", "multiprocessing", ".", "Process", "(", "\n", "target", "=", "_ms_loop", ",", "\n", "args", "=", "(", "\n", "self", ".", "dataset", ",", "\n", "self", ".", "index_queues", "[", "i", "]", ",", "\n", "self", ".", "worker_result_queue", ",", "\n", "self", ".", "collate_fn", ",", "\n", "self", ".", "scale", ",", "\n", "base_seed", "+", "i", ",", "\n", "self", ".", "worker_init_fn", ",", "\n", "i", "\n", ")", "\n", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_workers", ")", "]", "\n", "\n", "if", "self", ".", "pin_memory", "or", "self", ".", "timeout", ">", "0", ":", "\n", "                ", "self", ".", "data_queue", "=", "queue", ".", "Queue", "(", ")", "\n", "if", "self", ".", "pin_memory", ":", "\n", "                    ", "maybe_device_id", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "", "else", ":", "\n", "# do not initialize cuda context if not necessary", "\n", "                    ", "maybe_device_id", "=", "None", "\n", "", "self", ".", "worker_manager_thread", "=", "threading", ".", "Thread", "(", "\n", "target", "=", "_worker_manager_loop", ",", "\n", "args", "=", "(", "self", ".", "worker_result_queue", ",", "self", ".", "data_queue", ",", "self", ".", "done_event", ",", "self", ".", "pin_memory", ",", "\n", "maybe_device_id", ")", ")", "\n", "self", ".", "worker_manager_thread", ".", "daemon", "=", "True", "\n", "self", ".", "worker_manager_thread", ".", "start", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "data_queue", "=", "self", ".", "worker_result_queue", "\n", "\n", "", "for", "w", "in", "self", ".", "workers", ":", "\n", "                ", "w", ".", "daemon", "=", "True", "# ensure that the worker exits on process exit", "\n", "w", ".", "start", "(", ")", "\n", "\n", "", "_update_worker_pids", "(", "id", "(", "self", ")", ",", "tuple", "(", "w", ".", "pid", "for", "w", "in", "self", ".", "workers", ")", ")", "\n", "_set_SIGCHLD_handler", "(", ")", "\n", "self", ".", "worker_pids_set", "=", "True", "\n", "\n", "# prime the prefetch loop", "\n", "for", "_", "in", "range", "(", "2", "*", "self", ".", "num_workers", ")", ":", "\n", "                ", "self", ".", "_put_indices", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.dataloader.MSDataLoader.__init__": [[130, 144], ["torch.utils.data.dataloader.DataLoader.__init__"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "args", ",", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "sampler", "=", "None", ",", "batch_sampler", "=", "None", ",", "\n", "collate_fn", "=", "default_collate", ",", "pin_memory", "=", "False", ",", "drop_last", "=", "False", ",", "\n", "timeout", "=", "0", ",", "worker_init_fn", "=", "None", ")", ":", "\n", "\n", "        ", "super", "(", "MSDataLoader", ",", "self", ")", ".", "__init__", "(", "\n", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "\n", "sampler", "=", "sampler", ",", "batch_sampler", "=", "batch_sampler", ",", "\n", "num_workers", "=", "args", ".", "n_threads", ",", "collate_fn", "=", "collate_fn", ",", "\n", "pin_memory", "=", "pin_memory", ",", "drop_last", "=", "drop_last", ",", "\n", "timeout", "=", "timeout", ",", "worker_init_fn", "=", "worker_init_fn", ")", "\n", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.dataloader.MSDataLoader.__iter__": [[145, 147], ["dataloader._MSDataLoaderIter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "_MSDataLoaderIter", "(", "self", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.dataloader._ms_loop": [[29, 55], ["torch._C._set_worker_signal_handlers", "torch.set_num_threads", "torch.set_num_threads", "torch.manual_seed", "torch.manual_seed", "index_queue.get", "collate_fn", "collate_fn.append", "data_queue.put", "random.randrange", "dataset.set_scale", "data_queue.put", "len", "len", "torch.utils.data.dataloader.ExceptionWrapper", "sys.exc_info"], "function", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData.set_scale"], ["", "def", "_ms_loop", "(", "dataset", ",", "index_queue", ",", "data_queue", ",", "collate_fn", ",", "scale", ",", "seed", ",", "init_fn", ",", "worker_id", ")", ":", "\n", "    ", "global", "_use_shared_memory", "\n", "_use_shared_memory", "=", "True", "\n", "_set_worker_signal_handlers", "(", ")", "\n", "\n", "torch", ".", "set_num_threads", "(", "1", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "while", "True", ":", "\n", "        ", "r", "=", "index_queue", ".", "get", "(", ")", "\n", "if", "r", "is", "None", ":", "\n", "            ", "break", "\n", "", "idx", ",", "batch_indices", "=", "r", "\n", "try", ":", "\n", "            ", "idx_scale", "=", "0", "\n", "if", "len", "(", "scale", ")", ">", "1", "and", "dataset", ".", "train", ":", "\n", "                ", "idx_scale", "=", "random", ".", "randrange", "(", "0", ",", "len", "(", "scale", ")", ")", "\n", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "samples", "=", "collate_fn", "(", "[", "dataset", "[", "i", "]", "for", "i", "in", "batch_indices", "]", ")", "\n", "samples", ".", "append", "(", "idx_scale", ")", "\n", "#This is why idx_scale appears in the samples of the train loader", "\n", "\n", "", "except", "Exception", ":", "\n", "            ", "data_queue", ".", "put", "(", "(", "idx", ",", "ExceptionWrapper", "(", "sys", ".", "exc_info", "(", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "data_queue", ".", "put", "(", "(", "idx", ",", "samples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.template.set_template": [[1, 39], ["args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find"], "function", ["None"], ["def", "set_template", "(", "args", ")", ":", "\n", "# Set the templates here", "\n", "    ", "if", "args", ".", "template", ".", "find", "(", "'jpeg'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "data_train", "=", "'DIV2K_jpeg'", "\n", "args", ".", "data_test", "=", "'DIV2K_jpeg'", "\n", "args", ".", "epochs", "=", "200", "\n", "args", ".", "lr_decay", "=", "100", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'EDSR_paper'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'EDSR'", "\n", "args", ".", "n_resblocks", "=", "32", "\n", "args", ".", "n_feats", "=", "256", "\n", "args", ".", "res_scale", "=", "0.1", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'MDSR'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'MDSR'", "\n", "args", ".", "patch_size", "=", "48", "\n", "args", ".", "epochs", "=", "650", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'DDBPN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'DDBPN'", "\n", "args", ".", "patch_size", "=", "128", "\n", "args", ".", "scale", "=", "'4'", "\n", "\n", "args", ".", "data_test", "=", "'Set5'", "\n", "\n", "args", ".", "batch_size", "=", "20", "\n", "args", ".", "epochs", "=", "1000", "\n", "args", ".", "lr_decay", "=", "500", "\n", "args", ".", "gamma", "=", "0.1", "\n", "args", ".", "weight_decay", "=", "1e-4", "\n", "\n", "args", ".", "loss", "=", "'1*MSE'", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'GAN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "epochs", "=", "200", "\n", "args", ".", "lr", "=", "5e-5", "\n", "args", ".", "lr_decay", "=", "150", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.LMDB_TEST._get_paths_from_lmdb": [[10, 23], ["lmdb.open", "os.path.join", "os.path.isfile", "sorted", "print", "pickle.load", "pickle.dump", "open", "lmdb.open.begin", "print", "open", "key.encode", "key.decode", "txn.cursor", "key.endswith"], "function", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load"], ["def", "_get_paths_from_lmdb", "(", "dataroot", ")", ":", "\n", "    ", "env", "=", "lmdb", ".", "open", "(", "dataroot", ",", "max_readers", "=", "1", ",", "readonly", "=", "True", ",", "lock", "=", "False", ",", "readahead", "=", "False", ",", "meminit", "=", "False", ")", "\n", "keys_cache_file", "=", "os", ".", "path", ".", "join", "(", "dataroot", ",", "'_keys_cache.p'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "keys_cache_file", ")", ":", "\n", "        ", "print", "(", "'read lmdb keys from cache: {}'", ".", "format", "(", "keys_cache_file", ")", ")", "\n", "keys", "=", "pickle", ".", "load", "(", "open", "(", "keys_cache_file", ",", "\"rb\"", ")", ")", "\n", "", "else", ":", "\n", "        ", "with", "env", ".", "begin", "(", "write", "=", "False", ")", "as", "txn", ":", "\n", "            ", "print", "(", "'creating lmdb keys cache: {}'", ".", "format", "(", "keys_cache_file", ")", ")", "\n", "keys", "=", "[", "key", ".", "decode", "(", "'ascii'", ")", "for", "key", ",", "_", "in", "txn", ".", "cursor", "(", ")", "]", "\n", "", "pickle", ".", "dump", "(", "keys", ",", "open", "(", "keys_cache_file", ",", "'wb'", ")", ")", "\n", "", "paths", "=", "sorted", "(", "[", "key", ".", "encode", "(", "'ascii'", ")", "for", "key", "in", "keys", "if", "not", "key", ".", "endswith", "(", "'.meta'", ")", "]", ")", "\n", "return", "env", ",", "paths", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.LMDB_TEST.get_image_paths": [[25, 35], ["LMDB_TEST._get_paths_from_lmdb", "NotImplementedError"], "function", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.LMDB_TEST._get_paths_from_lmdb"], ["", "def", "get_image_paths", "(", "data_type", ",", "dataroot", ")", ":", "\n", "    ", "env", ",", "paths", "=", "None", ",", "None", "\n", "if", "dataroot", "is", "not", "None", ":", "\n", "        ", "if", "data_type", "==", "'lmdb'", ":", "\n", "            ", "env", ",", "paths", "=", "_get_paths_from_lmdb", "(", "dataroot", ")", "\n", "", "elif", "data_type", "==", "'img'", ":", "\n", "            ", "paths", "=", "[", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'data_type [{:s}] is not recognized.'", ".", "format", "(", "data_type", ")", ")", "\n", "", "", "return", "env", ",", "paths", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.LMDB_TEST._read_lmdb_img": [[37, 51], ["caffe.proto.caffe_pb2.Datum", "caffe.proto.caffe_pb2.Datum.ParseFromString", "numpy.frombuffer", "env.begin", "txn.get", "np.frombuffer.reshape", "np.frombuffer.reshape", "int", "int"], "function", ["None"], ["", "def", "_read_lmdb_img", "(", "env", ",", "path", ")", ":", "\n", "    ", "with", "env", ".", "begin", "(", "write", "=", "False", ")", "as", "txn", ":", "\n", "        ", "buf", "=", "txn", ".", "get", "(", "path", ")", "#.encode('ascii'))", "\n", "#buf_meta = txn.get((path + '.meta').encode('ascii')).decode('ascii')", "\n", "", "datum", "=", "caffe", ".", "proto", ".", "caffe_pb2", ".", "Datum", "(", ")", "\n", "datum", ".", "ParseFromString", "(", "buf", ")", "\n", "img_flat", "=", "np", ".", "frombuffer", "(", "datum", ".", "data", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "#H, W, C = [int(s) for s in buf_meta.split(',')]", "\n", "#print(img_flat.shape)", "\n", "if", "img_flat", ".", "shape", "[", "0", "]", "==", "691200", ":", "\n", "        ", "img", "=", "img_flat", ".", "reshape", "(", "480", ",", "480", ",", "3", ")", "\n", "", "else", ":", "\n", "        ", "img", "=", "img_flat", ".", "reshape", "(", "int", "(", "480", "/", "4", ")", ",", "int", "(", "480", "/", "4", ")", ",", "3", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.LMDB_TEST.read_img": [[53, 67], ["np.expand_dims.astype", "cv2.imread", "LMDB_TEST._read_lmdb_img", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.LMDB_TEST._read_lmdb_img"], ["", "def", "read_img", "(", "env", ",", "path", ")", ":", "\n", "# read image by cv2 or from lmdb", "\n", "# return: Numpy float32, HWC, BGR, [0,1]", "\n", "    ", "if", "env", "is", "None", ":", "# img", "\n", "        ", "img", "=", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "\n", "", "else", ":", "\n", "        ", "img", "=", "_read_lmdb_img", "(", "env", ",", "path", ")", "\n", "", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "        ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "# some images have 4 channels", "\n", "", "if", "img", ".", "shape", "[", "2", "]", ">", "3", ":", "\n", "        ", "img", "=", "img", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.myssim.crop": [[24, 59], ["numpy.array", "numpy.lib.arraypad._validate_lengths", "slice", "numpy.array", "enumerate"], "function", ["None"], ["def", "crop", "(", "ar", ",", "crop_width", ",", "copy", "=", "False", ",", "order", "=", "'K'", ")", ":", "\n", "    ", "\"\"\"Crop array `ar` by `crop_width` along each dimension.\n    Parameters\n    ----------\n    ar : array-like of rank N\n        Input array.\n    crop_width : {sequence, int}\n        Number of values to remove from the edges of each axis.\n        ``((before_1, after_1),`` ... ``(before_N, after_N))`` specifies\n        unique crop widths at the start and end of each axis.\n        ``((before, after),)`` specifies a fixed start and end crop\n        for every axis.\n        ``(n,)`` or ``n`` for integer ``n`` is a shortcut for\n        before = after = ``n`` for all axes.\n    copy : bool, optional\n        If `True`, ensure the returned array is a contiguous copy. Normally,\n        a crop operation will return a discontiguous view of the underlying\n        input array.\n    order : {'C', 'F', 'A', 'K'}, optional\n        If ``copy==True``, control the memory layout of the copy. See\n        ``np.copy``.\n    Returns\n    -------\n    cropped : array\n        The cropped array. If ``copy=False`` (default), this is a sliced\n        view of the input array.\n    \"\"\"", "\n", "ar", "=", "np", ".", "array", "(", "ar", ",", "copy", "=", "False", ")", "\n", "crops", "=", "_validate_lengths", "(", "ar", ",", "crop_width", ")", "\n", "slices", "=", "[", "slice", "(", "a", ",", "ar", ".", "shape", "[", "i", "]", "-", "b", ")", "for", "i", ",", "(", "a", ",", "b", ")", "in", "enumerate", "(", "crops", ")", "]", "\n", "if", "copy", ":", "\n", "        ", "cropped", "=", "np", ".", "array", "(", "ar", "[", "slices", "]", ",", "order", "=", "order", ",", "copy", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "cropped", "=", "ar", "[", "slices", "]", "\n", "", "return", "cropped", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.myssim.compare_ssim": [[60, 270], ["kwargs.pop", "kwargs.pop", "kwargs.pop", "kwargs.pop", "numpy.any", "X.astype.astype", "Y.astype.astype", "filter_func", "filter_func", "filter_func", "filter_func", "filter_func", "crop().mean", "ValueError", "ValueError", "dict", "dict.update", "numpy.empty", "range", "mssim.mean.mean", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError", "filter_func", "numpy.empty", "numpy.empty", "myssim.compare_ssim", "myssim.crop", "filter_func", "filter_func", "numpy.asarray"], "function", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.myssim.compare_ssim", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.myssim.crop"], ["", "def", "compare_ssim", "(", "X", ",", "Y", ",", "win_size", "=", "None", ",", "gradient", "=", "False", ",", "\n", "data_range", "=", "None", ",", "multichannel", "=", "False", ",", "gaussian_weights", "=", "False", ",", "\n", "full", "=", "False", ",", "dynamic_range", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Compute the mean structural similarity index between two images.\n    Parameters\n    ----------\n    X, Y : ndarray\n        Image.  Any dimensionality.\n    win_size : int or None\n        The side-length of the sliding window used in comparison.  Must be an\n        odd value.  If `gaussian_weights` is True, this is ignored and the\n        window size will depend on `sigma`.\n    gradient : bool, optional\n        If True, also return the gradient.\n    data_range : int, optional\n        The data range of the input image (distance between minimum and\n        maximum possible values).  By default, this is estimated from the image\n        data-type.\n    multichannel : bool, optional\n        If True, treat the last dimension of the array as channels. Similarity\n        calculations are done independently for each channel then averaged.\n    gaussian_weights : bool, optional\n        If True, each patch has its mean and variance spatially weighted by a\n        normalized Gaussian kernel of width sigma=1.5.\n    full : bool, optional\n        If True, return the full structural similarity image instead of the\n        mean value.\n    Other Parameters\n    ----------------\n    use_sample_covariance : bool\n        if True, normalize covariances by N-1 rather than, N where N is the\n        number of pixels within the sliding window.\n    K1 : float\n        algorithm parameter, K1 (small constant, see [1]_)\n    K2 : float\n        algorithm parameter, K2 (small constant, see [1]_)\n    sigma : float\n        sigma for the Gaussian when `gaussian_weights` is True.\n    Returns\n    -------\n    mssim : float\n        The mean structural similarity over the image.\n    grad : ndarray\n        The gradient of the structural similarity index between X and Y [2]_.\n        This is only returned if `gradient` is set to True.\n    S : ndarray\n        The full SSIM image.  This is only returned if `full` is set to True.\n    Notes\n    -----\n    To match the implementation of Wang et. al. [1]_, set `gaussian_weights`\n    to True, `sigma` to 1.5, and `use_sample_covariance` to False.\n    References\n    ----------\n    .. [1] Wang, Z., Bovik, A. C., Sheikh, H. R., & Simoncelli, E. P.\n       (2004). Image quality assessment: From error visibility to\n       structural similarity. IEEE Transactions on Image Processing,\n       13, 600-612.\n       https://ece.uwaterloo.ca/~z70wang/publications/ssim.pdf,\n       DOI:10.1.1.11.2477\n    .. [2] Avanaki, A. N. (2009). Exact global histogram specification\n       optimized for structural similarity. Optical Review, 16, 613-621.\n       http://arxiv.org/abs/0901.0065,\n       DOI:10.1007/s10043-009-0119-z\n    \"\"\"", "\n", "if", "not", "X", ".", "dtype", "==", "Y", ".", "dtype", ":", "\n", "        ", "raise", "ValueError", "(", "'Input images must have the same dtype.'", ")", "\n", "\n", "", "if", "not", "X", ".", "shape", "==", "Y", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "'Input images must have the same dimensions.'", ")", "\n", "\n", "", "if", "dynamic_range", "is", "not", "None", ":", "\n", "#warn('`dynamic_range` has been deprecated in favor of '", "\n", "#     '`data_range`. The `dynamic_range` keyword argument '", "\n", "#     'will be removed in v0.14', skimage_deprecation)", "\n", "        ", "data_range", "=", "dynamic_range", "\n", "\n", "", "if", "multichannel", ":", "\n", "# loop over channels", "\n", "        ", "args", "=", "dict", "(", "win_size", "=", "win_size", ",", "\n", "gradient", "=", "gradient", ",", "\n", "data_range", "=", "data_range", ",", "\n", "multichannel", "=", "False", ",", "\n", "gaussian_weights", "=", "gaussian_weights", ",", "\n", "full", "=", "full", ")", "\n", "args", ".", "update", "(", "kwargs", ")", "\n", "nch", "=", "X", ".", "shape", "[", "-", "1", "]", "\n", "mssim", "=", "np", ".", "empty", "(", "nch", ")", "\n", "if", "gradient", ":", "\n", "            ", "G", "=", "np", ".", "empty", "(", "X", ".", "shape", ")", "\n", "", "if", "full", ":", "\n", "            ", "S", "=", "np", ".", "empty", "(", "X", ".", "shape", ")", "\n", "", "for", "ch", "in", "range", "(", "nch", ")", ":", "\n", "            ", "ch_result", "=", "compare_ssim", "(", "X", "[", "...", ",", "ch", "]", ",", "Y", "[", "...", ",", "ch", "]", ",", "**", "args", ")", "\n", "if", "gradient", "and", "full", ":", "\n", "                ", "mssim", "[", "...", ",", "ch", "]", ",", "G", "[", "...", ",", "ch", "]", ",", "S", "[", "...", ",", "ch", "]", "=", "ch_result", "\n", "", "elif", "gradient", ":", "\n", "                ", "mssim", "[", "...", ",", "ch", "]", ",", "G", "[", "...", ",", "ch", "]", "=", "ch_result", "\n", "", "elif", "full", ":", "\n", "                ", "mssim", "[", "...", ",", "ch", "]", ",", "S", "[", "...", ",", "ch", "]", "=", "ch_result", "\n", "", "else", ":", "\n", "                ", "mssim", "[", "...", ",", "ch", "]", "=", "ch_result", "\n", "", "", "mssim", "=", "mssim", ".", "mean", "(", ")", "\n", "if", "gradient", "and", "full", ":", "\n", "            ", "return", "mssim", ",", "G", ",", "S", "\n", "", "elif", "gradient", ":", "\n", "            ", "return", "mssim", ",", "G", "\n", "", "elif", "full", ":", "\n", "            ", "return", "mssim", ",", "S", "\n", "", "else", ":", "\n", "            ", "return", "mssim", "\n", "\n", "", "", "K1", "=", "kwargs", ".", "pop", "(", "'K1'", ",", "0.01", ")", "\n", "K2", "=", "kwargs", ".", "pop", "(", "'K2'", ",", "0.03", ")", "\n", "sigma", "=", "kwargs", ".", "pop", "(", "'sigma'", ",", "1.5", ")", "\n", "if", "K1", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\"K1 must be positive\"", ")", "\n", "", "if", "K2", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\"K2 must be positive\"", ")", "\n", "", "if", "sigma", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\"sigma must be positive\"", ")", "\n", "", "use_sample_covariance", "=", "kwargs", ".", "pop", "(", "'use_sample_covariance'", ",", "True", ")", "\n", "\n", "if", "win_size", "is", "None", ":", "\n", "        ", "if", "gaussian_weights", ":", "\n", "            ", "win_size", "=", "11", "# 11 to match Wang et. al. 2004", "\n", "", "else", ":", "\n", "            ", "win_size", "=", "7", "# backwards compatibility", "\n", "\n", "", "", "if", "np", ".", "any", "(", "(", "np", ".", "asarray", "(", "X", ".", "shape", ")", "-", "win_size", ")", "<", "0", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"win_size exceeds image extent.  If the input is a multichannel \"", "\n", "\"(color) image, set multichannel=True.\"", ")", "\n", "\n", "", "if", "not", "(", "win_size", "%", "2", "==", "1", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Window size must be odd.'", ")", "\n", "\n", "", "if", "data_range", "is", "None", ":", "\n", "        ", "dmin", ",", "dmax", "=", "dtype_range", "[", "X", ".", "dtype", ".", "type", "]", "\n", "data_range", "=", "dmax", "-", "dmin", "\n", "\n", "", "ndim", "=", "X", ".", "ndim", "\n", "\n", "if", "gaussian_weights", ":", "\n", "# sigma = 1.5 to approximately match filter in Wang et. al. 2004", "\n", "# this ends up giving a 13-tap rather than 11-tap Gaussian", "\n", "        ", "filter_func", "=", "gaussian_filter", "\n", "filter_args", "=", "{", "'sigma'", ":", "sigma", "}", "\n", "\n", "", "else", ":", "\n", "        ", "filter_func", "=", "uniform_filter", "\n", "filter_args", "=", "{", "'size'", ":", "win_size", "}", "\n", "\n", "# ndimage filters need floating point data", "\n", "", "X", "=", "X", ".", "astype", "(", "np", ".", "float64", ")", "\n", "Y", "=", "Y", ".", "astype", "(", "np", ".", "float64", ")", "\n", "\n", "NP", "=", "win_size", "**", "ndim", "\n", "\n", "# filter has already normalized by NP", "\n", "if", "use_sample_covariance", ":", "\n", "        ", "cov_norm", "=", "NP", "/", "(", "NP", "-", "1", ")", "# sample covariance", "\n", "", "else", ":", "\n", "        ", "cov_norm", "=", "1.0", "# population covariance to match Wang et. al. 2004", "\n", "\n", "# compute (weighted) means", "\n", "", "ux", "=", "filter_func", "(", "X", ",", "**", "filter_args", ")", "\n", "uy", "=", "filter_func", "(", "Y", ",", "**", "filter_args", ")", "\n", "\n", "# compute (weighted) variances and covariances", "\n", "uxx", "=", "filter_func", "(", "X", "*", "X", ",", "**", "filter_args", ")", "\n", "uyy", "=", "filter_func", "(", "Y", "*", "Y", ",", "**", "filter_args", ")", "\n", "uxy", "=", "filter_func", "(", "X", "*", "Y", ",", "**", "filter_args", ")", "\n", "vx", "=", "cov_norm", "*", "(", "uxx", "-", "ux", "*", "ux", ")", "\n", "vy", "=", "cov_norm", "*", "(", "uyy", "-", "uy", "*", "uy", ")", "\n", "vxy", "=", "cov_norm", "*", "(", "uxy", "-", "ux", "*", "uy", ")", "\n", "\n", "R", "=", "data_range", "\n", "C1", "=", "(", "K1", "*", "R", ")", "**", "2", "\n", "C2", "=", "(", "K2", "*", "R", ")", "**", "2", "\n", "\n", "A1", ",", "A2", ",", "B1", ",", "B2", "=", "(", "(", "2", "*", "ux", "*", "uy", "+", "C1", ",", "\n", "2", "*", "vxy", "+", "C2", ",", "\n", "ux", "**", "2", "+", "uy", "**", "2", "+", "C1", ",", "\n", "vx", "+", "vy", "+", "C2", ")", ")", "\n", "D", "=", "B1", "*", "B2", "\n", "S", "=", "(", "A1", "*", "A2", ")", "/", "D", "\n", "\n", "# to avoid edge effects will ignore filter radius strip around edges", "\n", "pad", "=", "(", "win_size", "-", "1", ")", "//", "2", "\n", "\n", "# compute (weighted) mean of ssim", "\n", "mssim", "=", "crop", "(", "S", ",", "pad", ")", ".", "mean", "(", ")", "\n", "\n", "if", "gradient", ":", "\n", "# The following is Eqs. 7-8 of Avanaki 2009.", "\n", "        ", "grad", "=", "filter_func", "(", "A1", "/", "D", ",", "**", "filter_args", ")", "*", "X", "\n", "grad", "+=", "filter_func", "(", "-", "S", "/", "B2", ",", "**", "filter_args", ")", "*", "Y", "\n", "grad", "+=", "filter_func", "(", "(", "ux", "*", "(", "A2", "-", "A1", ")", "-", "uy", "*", "(", "B2", "-", "B1", ")", "*", "S", ")", "/", "D", ",", "\n", "**", "filter_args", ")", "\n", "grad", "*=", "(", "2", "/", "X", ".", "size", ")", "\n", "\n", "if", "full", ":", "\n", "            ", "return", "mssim", ",", "grad", ",", "S", "\n", "", "else", ":", "\n", "            ", "return", "mssim", ",", "grad", "\n", "", "", "else", ":", "\n", "        ", "if", "full", ":", "\n", "            ", "return", "mssim", ",", "S", "\n", "", "else", ":", "\n", "            ", "return", "mssim", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.shave": [[10, 12], ["None"], "function", ["None"], ["def", "shave", "(", "img", ",", "scale", ")", ":", "\n", "    ", "return", "img", "[", "scale", ":", "-", "scale", ",", "scale", ":", "-", "scale", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.cal_pnsr": [[13, 22], ["numpy.sum", "numpy.sum", "numpy.log10", "numpy.square"], "function", ["None"], ["", "def", "cal_pnsr", "(", "img_hr", ",", "img_mr", ",", "mask", ")", ":", "\n", "    ", "'''\n    compute psnr value. Black regions are excluded from the computing.\n    '''", "\n", "mask_sum", "=", "np", ".", "sum", "(", "mask", ")", "\n", "mask_sum", "=", "mask_sum", "*", "3", "if", "img_hr", ".", "ndim", "==", "3", "else", "mask_sum", "\n", "mse", "=", "np", ".", "sum", "(", "np", ".", "square", "(", "img_hr", "-", "img_mr", ")", ")", "/", "mask_sum", "\n", "psnr", "=", "10", "*", "np", ".", "log10", "(", "255", "**", "2", "/", "mse", ")", "\n", "return", "psnr", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.cal_pnsr_all": [[23, 33], ["rgb2ycbcr().astype", "rgb2ycbcr().astype", "img_hr.astype.astype", "img_mr.astype.astype", "compute_PSNR_UP.cal_pnsr", "compute_PSNR_UP.cal_pnsr", "compute_PSNR_UP.rgb2ycbcr", "compute_PSNR_UP.rgb2ycbcr"], "function", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.cal_pnsr", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.cal_pnsr", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.rgb2ycbcr", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.rgb2ycbcr"], ["", "def", "cal_pnsr_all", "(", "img_hr", ",", "img_mr", ")", ":", "\n", "    ", "img_hr_y", "=", "rgb2ycbcr", "(", "img_hr", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_mr_y", "=", "rgb2ycbcr", "(", "img_mr", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "mask", "=", "(", "img_hr_y", "!=", "16", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_hr", "=", "img_hr", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_mr", "=", "img_mr", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "psnr_y", "=", "cal_pnsr", "(", "img_hr_y", ",", "img_mr_y", ",", "mask", ")", "\n", "psnr", "=", "cal_pnsr", "(", "img_hr", ",", "img_mr", ",", "mask", ")", "\n", "return", "psnr_y", ",", "psnr", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.rgb2ycbcr": [[34, 56], ["img.astype.astype", "rlt.round.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        uint8, [0, 255]\n        float, [0, 1]\n    '''", "\n", "in_img_type", "=", "img", ".", "dtype", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "in_img_type", "!=", "np", ".", "uint8", ":", "\n", "        ", "img", "*=", "255.", "\n", "# convert", "\n", "", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "if", "in_img_type", "==", "np", ".", "uint8", ":", "\n", "        ", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "", "else", ":", "\n", "        ", "rlt", "/=", "255.", "\n", "", "return", "rlt", ".", "astype", "(", "in_img_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.bgr2ycbcr": [[57, 79], ["img.astype", "rlt.round.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "bgr2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''bgr version of rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        uint8, [0, 255]\n        float, [0, 1]\n    '''", "\n", "in_img_type", "=", "img", ".", "dtype", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "in_img_type", "!=", "np", ".", "uint8", ":", "\n", "        ", "img", "*=", "255.", "\n", "# convert", "\n", "", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "24.966", ",", "128.553", ",", "65.481", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "if", "in_img_type", "==", "np", ".", "uint8", ":", "\n", "        ", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "", "else", ":", "\n", "        ", "rlt", "/=", "255.", "\n", "", "return", "rlt", ".", "astype", "(", "in_img_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.ycbcr2rgb": [[80, 98], ["img.astype", "rlt.round.astype", "rlt.round.round", "numpy.matmul"], "function", ["None"], ["", "def", "ycbcr2rgb", "(", "img", ")", ":", "\n", "    ", "'''same as matlab ycbcr2rgb\n    Input:\n        uint8, [0, 255]\n        float, [0, 1]\n    '''", "\n", "in_img_type", "=", "img", ".", "dtype", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "in_img_type", "!=", "np", ".", "uint8", ":", "\n", "        ", "img", "*=", "255.", "\n", "# convert", "\n", "", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "0.00456621", ",", "0.00456621", ",", "0.00456621", "]", ",", "[", "0", ",", "-", "0.00153632", ",", "0.00791071", "]", ",", "\n", "[", "0.00625893", ",", "-", "0.00318811", ",", "0", "]", "]", ")", "*", "255.0", "+", "[", "-", "222.921", ",", "135.576", ",", "-", "276.836", "]", "\n", "if", "in_img_type", "==", "np", ".", "uint8", ":", "\n", "        ", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "", "else", ":", "\n", "        ", "rlt", "/=", "255.", "\n", "", "return", "rlt", ".", "astype", "(", "in_img_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.modcrop": [[99, 113], ["numpy.copy", "ValueError"], "function", ["None"], ["", "def", "modcrop", "(", "img_in", ",", "scale", ")", ":", "\n", "# img_in: Numpy, HWC or HW", "\n", "    ", "img", "=", "np", ".", "copy", "(", "img_in", ")", "\n", "if", "img", ".", "ndim", "==", "2", ":", "\n", "        ", "H", ",", "W", "=", "img", ".", "shape", "\n", "H_r", ",", "W_r", "=", "H", "%", "scale", ",", "W", "%", "scale", "\n", "img", "=", "img", "[", ":", "H", "-", "H_r", ",", ":", "W", "-", "W_r", "]", "\n", "", "elif", "img", ".", "ndim", "==", "3", ":", "\n", "        ", "H", ",", "W", ",", "C", "=", "img", ".", "shape", "\n", "H_r", ",", "W_r", "=", "H", "%", "scale", ",", "W", "%", "scale", "\n", "img", "=", "img", "[", ":", "H", "-", "H_r", ",", ":", "W", "-", "W_r", ",", ":", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Wrong img ndim: [{:d}].'", ".", "format", "(", "img", ".", "ndim", ")", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.save_file": [[114, 117], ["open", "f.write"], "function", ["None"], ["", "def", "save_file", "(", "cont", ",", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "cont", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.html_table": [[118, 126], ["None"], "function", ["None"], ["", "", "def", "html_table", "(", "lol", ",", "cap", ")", ":", "\n", "    ", "yield", "'<table border=\"1\">'", "\n", "yield", "'  <caption>{}</caption>'", ".", "format", "(", "cap", ")", "\n", "for", "sublist", "in", "lol", ":", "\n", "        ", "yield", "'  <tr>'", "\n", "yield", "'    <td>'", "+", "'</td>  <td>'", ".", "join", "(", "sublist", ")", "+", "'</td>'", "\n", "yield", "'  </tr>'", "\n", "", "yield", "'</table>'", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.save_html_tbl": [[127, 137], ["img_name.insert", "numpy.round().astype().tolist", "np.round().astype().tolist.insert", "range", "compute_PSNR_UP.save_file", "len", "content[].insert", "compute_PSNR_UP.html_table", "numpy.round().astype", "numpy.round"], "function", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.save_file", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.html_table"], ["", "def", "save_html_tbl", "(", "img_name", ",", "test_res", ",", "opt", ",", "path", ")", ":", "\n", "    ", "img_name", ".", "insert", "(", "0", ",", "'Average'", ")", "\n", "content", "=", "np", ".", "round", "(", "test_res", ",", "decimals", "=", "4", ")", ".", "astype", "(", "str", ")", ".", "tolist", "(", ")", "\n", "content", ".", "insert", "(", "0", ",", "img_name", ")", "\n", "row_name", "=", "[", "''", ",", "'PSNR'", ",", "'SSIM'", ",", "'Runtime'", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "row_name", ")", ")", ":", "\n", "        ", "content", "[", "i", "]", ".", "insert", "(", "0", ",", "row_name", "[", "i", "]", ")", "\n", "", "cont_str", "=", "'\\n'", ".", "join", "(", "html_table", "(", "content", ",", "'Table 1: PSNR/SSIM/Runtime for {} on {}'", ".", "format", "(", "opt", ".", "ckpt_name", ",", "opt", ".", "test_set", ")", ")", ")", "\n", "path", "+=", "'/PSNR_SSIM_Runtime_{}.html'", ".", "format", "(", "opt", ".", "test_set", ")", "\n", "save_file", "(", "cont_str", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.save_html": [[138, 159], ["numpy.round().astype", "copy.copy", "copy.copy.append", "range", "content.insert", "compute_PSNR_UP.save_file", "value[].tolist", "range", "content.extend", "content.append", "compute_PSNR_UP.html_table", "numpy.round", "len", "content_s[].insert", "content_s[].insert", "len"], "function", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.save_file", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.html_table"], ["", "def", "save_html", "(", "img_name", ",", "method", ",", "value", ",", "set", ",", "path", ")", ":", "\n", "    ", "value", "=", "np", ".", "round", "(", "value", ",", "decimals", "=", "2", ")", ".", "astype", "(", "str", ")", "\n", "img_name", "=", "copy", ".", "copy", "(", "img_name", ")", "\n", "img_name", ".", "append", "(", "'Average'", ")", "\n", "_", ",", "_", ",", "scale", "=", "value", ".", "shape", "\n", "content", "=", "[", "]", "\n", "for", "s", "in", "range", "(", "scale", ")", ":", "\n", "        ", "content_s", "=", "value", "[", ":", ",", ":", ",", "s", "]", ".", "tolist", "(", ")", "\n", "# from IPython import embed; embed()", "\n", "for", "i", "in", "range", "(", "len", "(", "img_name", ")", ")", ":", "\n", "            ", "content_s", "[", "i", "]", ".", "insert", "(", "0", ",", "'x{}'", ".", "format", "(", "s", "+", "2", ")", ")", "\n", "content_s", "[", "i", "]", ".", "insert", "(", "0", ",", "img_name", "[", "i", "]", ")", "\n", "\n", "", "content", ".", "extend", "(", "content_s", ")", "\n", "content", ".", "append", "(", "[", "''", ".", "join", "(", "[", "'-'", "]", "*", "10", ")", "]", "*", "(", "len", "(", "method", ")", "+", "2", ")", ")", "\n", "\n", "", "method", "=", "[", "'Image'", ",", "'Scale'", "]", "+", "method", "\n", "content", ".", "insert", "(", "0", ",", "method", ")", "\n", "\n", "cont_str", "=", "'\\n'", ".", "join", "(", "html_table", "(", "content", ",", "'Table 1: PSNR for dataset {}'", ".", "format", "(", "set", ")", ")", ")", "\n", "save_file", "(", "cont_str", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.prepare_psnr_table.save_html_table": [[9, 27], ["numpy.round().astype", "np.round().astype.tolist", "range", "value.tolist.insert", "len", "content[].insert", "compute_PSNR_UP.html_table", "open", "f.write", "numpy.round", "range", "range"], "function", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.utils.compute_PSNR_UP.html_table"], ["def", "save_html_table", "(", "method", ",", "value", ",", "path", ")", ":", "\n", "    ", "value", "=", "np", ".", "round", "(", "value", ",", "decimals", "=", "2", ")", ".", "astype", "(", "str", ")", "\n", "value", "[", "4", ",", "1", ":", ":", "3", "]", "=", "'--'", "\n", "value", "[", "5", ",", "[", "4", ",", "7", "]", "]", "=", "'--'", "\n", "value", "[", "5", ",", "0", ":", "3", "]", "=", "'--'", "\n", "value", "[", "5", ",", "9", ":", "]", "=", "'--'", "\n", "content", "=", "value", ".", "tolist", "(", ")", "\n", "content", "=", "[", "[", "'& '", "+", "content", "[", "i", "]", "[", "j", "]", "for", "j", "in", "range", "(", "15", ")", "]", "for", "i", "in", "range", "(", "14", ")", "]", "\n", "# from IPython import embed; embed()", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "method", ")", ")", ":", "\n", "        ", "content", "[", "i", "]", ".", "insert", "(", "0", ",", "method", "[", "i", "]", ")", "\n", "", "content", ".", "insert", "(", "0", ",", "[", "'Method'", "]", "+", "[", "'x2'", ",", "'x3'", ",", "'x4'", "]", "*", "5", ")", "\n", "# from IPython import embed; embed()", "\n", "\n", "cont_str", "=", "'\\n'", ".", "join", "(", "html_table", "(", "content", ",", "'Table 1: PSNR for all of the datasets'", ")", ")", "\n", "with", "open", "(", "path", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "cont_str", ")", "\n", "#save_file(cont_str, path)", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.edsr.EDSR.__init__": [[9, 44], ["torch.Module.__init__", "torch.ReLU", "model.common.MeanShift", "m_body.append", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "model.common.ResBlock", "conv", "model.common.Upsampler", "conv", "range"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "EDSR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "n_resblock", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "# define head module", "\n", "m_head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "# define body module", "\n", "m_body", "=", "[", "\n", "common", ".", "ResBlock", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", "\n", ")", "for", "_", "in", "range", "(", "n_resblock", ")", "\n", "]", "\n", "m_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "# define tail module", "\n", "m_tail", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "\n", "]", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "m_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "m_tail", ")", "\n", "# from IPython import embed; embed(); exit()", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.edsr.EDSR.forward": [[46, 57], ["edsr.EDSR.sub_mean", "edsr.EDSR.head", "edsr.EDSR.body", "edsr.EDSR.tail", "edsr.EDSR.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.edsr.EDSR.load_state_dict": [[58, 76], ["edsr.EDSR.state_dict", "state_dict.items", "isinstance", "own_state[].copy_", "name.find", "KeyError", "name.find", "RuntimeError", "own_state[].size", "param.size"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", "=", "True", ")", ":", "\n", "        ", "own_state", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "own_state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "try", ":", "\n", "                    ", "own_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                        ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the model are {} and '", "\n", "'whose dimensions in the checkpoint are {}.'", "\n", ".", "format", "(", "name", ",", "own_state", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "", "", "", "elif", "strict", ":", "\n", "                ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                    ", "raise", "KeyError", "(", "'unexpected key \"{}\" in state_dict'", "\n", ".", "format", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.edsr.make_model": [[5, 7], ["edsr.EDSR"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "EDSR", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.CALayer.__init__": [[10, 20], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "channel", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", "//", "reduction", ",", "channel", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.CALayer.forward": [[22, 26], ["rcan.CALayer.avg_pool", "rcan.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.RCAB.__init__": [[29, 42], ["torch.ReLU", "torch.Module.__init__", "range", "modules_body.append", "torch.Sequential", "modules_body.append", "rcan.CALayer", "conv", "modules_body.append", "modules_body.append", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "RCAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "modules_body", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "modules_body", ".", "append", "(", "act", ")", "\n", "", "modules_body", ".", "append", "(", "CALayer", "(", "n_feat", ",", "reduction", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.RCAB.forward": [[43, 48], ["rcan.RCAB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "#res = self.body(x).mul(self.res_scale)", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.ResidualGroup.__init__": [[51, 60], ["torch.Module.__init__", "modules_body.append", "torch.Sequential", "rcan.RCAB", "conv", "range", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "res_scale", ",", "n_resblocks", ")", ":", "\n", "        ", "super", "(", "ResidualGroup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", "=", "[", "\n", "RCAB", "(", "\n", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", "for", "_", "in", "range", "(", "n_resblocks", ")", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.ResidualGroup.forward": [[61, 65], ["rcan.ResidualGroup.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.RCAN.__init__": [[68, 105], ["torch.Module.__init__", "torch.ReLU", "model.common.MeanShift", "modules_body.append", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "rcan.ResidualGroup", "conv", "model.common.Upsampler", "conv", "range"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "RCAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "n_resgroups", "=", "args", ".", "n_resgroups", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "reduction", "=", "args", ".", "reduction", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# RGB mean for DIV2K", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "# define head module", "\n", "modules_head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "# define body module", "\n", "modules_body", "=", "[", "\n", "ResidualGroup", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "reduction", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", ",", "n_resblocks", "=", "n_resblocks", ")", "for", "_", "in", "range", "(", "n_resgroups", ")", "]", "\n", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "# define tail module", "\n", "modules_tail", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "modules_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "modules_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.RCAN.forward": [[106, 117], ["rcan.RCAN.sub_mean", "rcan.RCAN.head", "rcan.RCAN.body", "rcan.RCAN.tail", "rcan.RCAN.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.RCAN.load_state_dict": [[118, 143], ["rcan.RCAN.state_dict", "state_dict.items", "isinstance", "set", "set", "len", "KeyError", "own_state[].copy_", "rcan.RCAN.keys", "state_dict.keys", "name.find", "KeyError", "name.find", "print", "RuntimeError", "own_state[].size", "param.size"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", "=", "False", ")", ":", "\n", "        ", "own_state", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "own_state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "try", ":", "\n", "                    ", "own_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "if", "name", ".", "find", "(", "'tail'", ")", ">=", "0", ":", "\n", "                        ", "print", "(", "'Replace pre-trained upsampler to new one...'", ")", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the model are {} and '", "\n", "'whose dimensions in the checkpoint are {}.'", "\n", ".", "format", "(", "name", ",", "own_state", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "", "", "", "elif", "strict", ":", "\n", "                ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                    ", "raise", "KeyError", "(", "'unexpected key \"{}\" in state_dict'", "\n", ".", "format", "(", "name", ")", ")", "\n", "\n", "", "", "", "if", "strict", ":", "\n", "            ", "missing", "=", "set", "(", "own_state", ".", "keys", "(", ")", ")", "-", "set", "(", "state_dict", ".", "keys", "(", ")", ")", "\n", "if", "len", "(", "missing", ")", ">", "0", ":", "\n", "                ", "raise", "KeyError", "(", "'missing keys in state_dict: \"{}\"'", ".", "format", "(", "missing", ")", ")", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.make_model": [[5, 7], ["rcan.RCAN"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "RCAN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.MeanShift.__init__": [[12, 27], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "ops.MeanShift.shifter.parameters", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mean_rgb", ",", "sub", ")", ":", "\n", "        ", "super", "(", "MeanShift", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "sign", "=", "-", "1", "if", "sub", "else", "1", "\n", "r", "=", "mean_rgb", "[", "0", "]", "*", "sign", "\n", "g", "=", "mean_rgb", "[", "1", "]", "*", "sign", "\n", "b", "=", "mean_rgb", "[", "2", "]", "*", "sign", "\n", "\n", "self", ".", "shifter", "=", "nn", ".", "Conv2d", "(", "3", ",", "3", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "shifter", ".", "weight", ".", "data", "=", "torch", ".", "eye", "(", "3", ")", ".", "view", "(", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "shifter", ".", "bias", ".", "data", "=", "torch", ".", "Tensor", "(", "[", "r", ",", "g", ",", "b", "]", ")", "\n", "\n", "# Freeze the mean shift layer", "\n", "for", "params", "in", "self", ".", "shifter", ".", "parameters", "(", ")", ":", "\n", "            ", "params", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.MeanShift.forward": [[28, 31], ["ops.MeanShift.shifter"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "shifter", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.BasicBlock.__init__": [[34, 45], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ops.init_weights", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "out_channels", ",", "\n", "ksize", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "ksize", ",", "stride", ",", "pad", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "\n", "init_weights", "(", "self", ".", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.BasicBlock.forward": [[46, 49], ["ops.BasicBlock.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "body", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.ResidualBlock.__init__": [[52, 63], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ops.init_weights", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "init_weights", "(", "self", ".", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.ResidualBlock.forward": [[64, 68], ["ops.ResidualBlock.body", "torch.relu", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "body", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", "+", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.EResidualBlock.__init__": [[71, 85], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ops.init_weights", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "out_channels", ",", "\n", "group", "=", "1", ")", ":", "\n", "        ", "super", "(", "EResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "group", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "group", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_channels", ",", "out_channels", ",", "1", ",", "1", ",", "0", ")", ",", "\n", ")", "\n", "\n", "init_weights", "(", "self", ".", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.EResidualBlock.forward": [[86, 90], ["ops.EResidualBlock.body", "torch.relu", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "body", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", "+", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.UpsampleBlock.__init__": [[93, 106], ["torch.Module.__init__", "ops._UpsampleBlock", "ops._UpsampleBlock", "ops._UpsampleBlock", "ops._UpsampleBlock"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "n_channels", ",", "scale", ",", "multi_scale", ",", "\n", "group", "=", "1", ")", ":", "\n", "        ", "super", "(", "UpsampleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "multi_scale", ":", "\n", "            ", "self", ".", "up2", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "2", ",", "group", "=", "group", ")", "\n", "self", ".", "up3", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "3", ",", "group", "=", "group", ")", "\n", "self", ".", "up4", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "4", ",", "group", "=", "group", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "up", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "scale", ",", "group", "=", "group", ")", "\n", "\n", "", "self", ".", "multi_scale", "=", "multi_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.UpsampleBlock.forward": [[107, 117], ["ops.UpsampleBlock.up", "ops.UpsampleBlock.up2", "ops.UpsampleBlock.up3", "ops.UpsampleBlock.up4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "scale", ")", ":", "\n", "        ", "if", "self", ".", "multi_scale", ":", "\n", "            ", "if", "scale", "==", "2", ":", "\n", "                ", "return", "self", ".", "up2", "(", "x", ")", "\n", "", "elif", "scale", "==", "3", ":", "\n", "                ", "return", "self", ".", "up3", "(", "x", ")", "\n", "", "elif", "scale", "==", "4", ":", "\n", "                ", "return", "self", ".", "up4", "(", "x", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "self", ".", "up", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops._UpsampleBlock.__init__": [[120, 136], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ops.init_weights", "range", "int", "math.log", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "\n", "n_channels", ",", "scale", ",", "\n", "group", "=", "1", ")", ":", "\n", "        ", "super", "(", "_UpsampleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "modules", "=", "[", "]", "\n", "if", "scale", "==", "2", "or", "scale", "==", "4", "or", "scale", "==", "8", ":", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "modules", "+=", "[", "nn", ".", "Conv2d", "(", "n_channels", ",", "4", "*", "n_channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "group", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "modules", "+=", "[", "nn", ".", "PixelShuffle", "(", "2", ")", "]", "\n", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "modules", "+=", "[", "nn", ".", "Conv2d", "(", "n_channels", ",", "9", "*", "n_channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "group", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "modules", "+=", "[", "nn", ".", "PixelShuffle", "(", "3", ")", "]", "\n", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "init_weights", "(", "self", ".", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops._UpsampleBlock.forward": [[137, 140], ["ops._UpsampleBlock.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "body", "(", "x", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ops.init_weights": [[7, 9], ["None"], "function", ["None"], ["def", "init_weights", "(", "modules", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.common.MeanShift.__init__": [[29, 37], ["torch.Conv2d.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "common.MeanShift.weight.data.div_", "common.MeanShift.bias.data.div_", "torch.Tensor.view", "torch.Tensor.view", "torch.Tensor.view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "sign", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "MeanShift", ",", "self", ")", ".", "__init__", "(", "3", ",", "3", ",", "kernel_size", "=", "1", ")", "\n", "std", "=", "torch", ".", "Tensor", "(", "rgb_std", ")", "\n", "self", ".", "weight", ".", "data", "=", "torch", ".", "eye", "(", "3", ")", ".", "view", "(", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "weight", ".", "data", ".", "div_", "(", "std", ".", "view", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bias", ".", "data", "=", "sign", "*", "rgb_range", "*", "torch", ".", "Tensor", "(", "rgb_mean", ")", "\n", "self", ".", "bias", ".", "data", ".", "div_", "(", "std", ")", "\n", "self", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.common.GroupNorm.__init__": [[39, 45], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_groups", "=", "32", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", "GroupNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "num_features", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_features", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "num_groups", "=", "num_groups", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.common.GroupNorm.forward": [[46, 58], ["x.view.view.size", "x.view.view.view", "x.view.view.mean", "x.view.view.var", "x.view.view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "G", "=", "self", ".", "num_groups", "\n", "assert", "C", "%", "G", "==", "0", "\n", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "G", ",", "-", "1", ")", "\n", "mean", "=", "x", ".", "mean", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "var", "=", "x", ".", "var", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "x", "=", "(", "x", "-", "mean", ")", "/", "(", "var", "+", "self", ".", "eps", ")", ".", "sqrt", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "C", ",", "H", ",", "W", ")", "\n", "return", "x", "*", "self", ".", "weight", "+", "self", ".", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.common.BasicBlock.__init__": [[60, 71], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "bias", "=", "False", ",", "\n", "bn", "=", "True", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "\n", "        ", "m", "=", "[", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ")", "\n", "]", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", "\n", "if", "act", "is", "not", "None", ":", "m", ".", "append", "(", "act", ")", "\n", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.common.ResBlock.__init__": [[73, 86], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "m.append", "conv", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ",", "num_conv", "=", "2", ")", ":", "\n", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "m", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_conv", ")", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "m", ".", "append", "(", "act", ")", "\n", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.common.ResBlock.forward": [[87, 92], ["common.ResBlock.body().mul", "common.ResBlock.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", ".", "mul", "(", "self", ".", "res_scale", ")", "\n", "res", "+=", "x", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.common.Upsampler.__init__": [[94, 112], ["torch.Sequential.__init__", "range", "int", "m.append", "m.append", "m.append", "m.append", "math.log", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "scale", ",", "n_feat", ",", "bn", "=", "False", ",", "act", "=", "False", ",", "bias", "=", "True", ")", ":", "\n", "\n", "        ", "m", "=", "[", "]", "\n", "if", "(", "scale", "&", "(", "scale", "-", "1", ")", ")", "==", "0", ":", "# Is scale = 2^n?", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "4", "*", "n_feat", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "act", ":", "m", ".", "append", "(", "nn", ".", "PReLU", "(", ")", ")", "\n", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "9", "*", "n_feat", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "3", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "act", ":", "m", ".", "append", "(", "nn", ".", "PReLU", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "super", "(", "Upsampler", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.common.default_conv": [[9, 13], ["torch.Conv2d"], "function", ["None"], ["def", "default_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.common.act_vconv": [[14, 27], ["res_act.lower.lower", "torch.Softplus", "torch.Sigmoid", "torch.Tanh", "torch.ELU"], "function", ["None"], ["", "def", "act_vconv", "(", "res_act", ")", ":", "\n", "    ", "res_act", "=", "res_act", ".", "lower", "(", ")", "\n", "if", "res_act", "==", "'softplus'", ":", "\n", "        ", "act", "=", "nn", ".", "Softplus", "(", ")", "\n", "", "elif", "res_act", "==", "'sigmoid'", ":", "\n", "        ", "act", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "res_act", "==", "'tanh'", ":", "\n", "        ", "act", "=", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "res_act", "==", "'elu'", ":", "\n", "        ", "act", "=", "nn", ".", "ELU", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "return", "act", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.carn.Block.__init__": [[10, 21], ["torch.Module.__init__", "model.ResidualBlock", "model.ResidualBlock", "model.ResidualBlock", "model.BasicBlock", "model.BasicBlock", "model.BasicBlock"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "out_channels", ",", "\n", "group", "=", "1", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "b1", "=", "ops", ".", "ResidualBlock", "(", "64", ",", "64", ")", "\n", "self", ".", "b2", "=", "ops", ".", "ResidualBlock", "(", "64", ",", "64", ")", "\n", "self", ".", "b3", "=", "ops", ".", "ResidualBlock", "(", "64", ",", "64", ")", "\n", "self", ".", "c1", "=", "ops", ".", "BasicBlock", "(", "64", "*", "2", ",", "64", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "c2", "=", "ops", ".", "BasicBlock", "(", "64", "*", "3", ",", "64", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "c3", "=", "ops", ".", "BasicBlock", "(", "64", "*", "4", ",", "64", ",", "1", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.carn.Block.forward": [[22, 38], ["carn.Block.b1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "carn.Block.c1", "carn.Block.b2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "carn.Block.c2", "carn.Block.b3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "carn.Block.c3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "c0", "=", "o0", "=", "x", "\n", "\n", "b1", "=", "self", ".", "b1", "(", "o0", ")", "\n", "c1", "=", "torch", ".", "cat", "(", "[", "c0", ",", "b1", "]", ",", "dim", "=", "1", ")", "\n", "o1", "=", "self", ".", "c1", "(", "c1", ")", "\n", "\n", "b2", "=", "self", ".", "b2", "(", "o1", ")", "\n", "c2", "=", "torch", ".", "cat", "(", "[", "c1", ",", "b2", "]", ",", "dim", "=", "1", ")", "\n", "o2", "=", "self", ".", "c2", "(", "c2", ")", "\n", "\n", "b3", "=", "self", ".", "b3", "(", "o2", ")", "\n", "c3", "=", "torch", ".", "cat", "(", "[", "c2", ",", "b3", "]", ",", "dim", "=", "1", ")", "\n", "o3", "=", "self", ".", "c3", "(", "c3", ")", "\n", "\n", "return", "o3", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.carn.CARN.__init__": [[41, 72], ["torch.Module.__init__", "model.common.MeanShift", "model.common.MeanShift", "torch.Conv2d", "torch.Conv2d", "carn.Block", "carn.Block", "carn.Block", "model.BasicBlock", "model.BasicBlock", "model.BasicBlock", "model.UpsampleBlock", "torch.Conv2d", "torch.Conv2d", "len"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "CARN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "#scale = kwargs.get(\"scale\")", "\n", "#multi_scale = kwargs.get(\"multi_scale\")", "\n", "#group = kwargs.get(\"group\", 1)", "\n", "multi_scale", "=", "len", "(", "args", ".", "scale", ")", ">", "1", "\n", "self", ".", "scale_idx", "=", "0", "\n", "scale", "=", "args", ".", "scale", "[", "self", ".", "scale_idx", "]", "\n", "group", "=", "1", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "#self.sub_mean = ops.MeanShift((0.4488, 0.4371, 0.4040), sub=True)", "\n", "#self.add_mean = ops.MeanShift((0.4488, 0.4371, 0.4040), sub=False)", "\n", "\n", "self", ".", "entry", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "b1", "=", "Block", "(", "64", ",", "64", ")", "\n", "self", ".", "b2", "=", "Block", "(", "64", ",", "64", ")", "\n", "self", ".", "b3", "=", "Block", "(", "64", ",", "64", ")", "\n", "self", ".", "c1", "=", "ops", ".", "BasicBlock", "(", "64", "*", "2", ",", "64", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "c2", "=", "ops", ".", "BasicBlock", "(", "64", "*", "3", ",", "64", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "c3", "=", "ops", ".", "BasicBlock", "(", "64", "*", "4", ",", "64", ",", "1", ",", "1", ",", "0", ")", "\n", "\n", "self", ".", "upsample", "=", "ops", ".", "UpsampleBlock", "(", "64", ",", "scale", "=", "scale", ",", "\n", "multi_scale", "=", "multi_scale", ",", "\n", "group", "=", "group", ")", "\n", "self", ".", "exit", "=", "nn", ".", "Conv2d", "(", "64", ",", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.carn.CARN.forward": [[73, 97], ["carn.CARN.sub_mean", "carn.CARN.entry", "carn.CARN.b1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "carn.CARN.c1", "carn.CARN.b2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "carn.CARN.c2", "carn.CARN.b3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "carn.CARN.c3", "carn.CARN.upsample", "carn.CARN.exit", "carn.CARN.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "entry", "(", "x", ")", "\n", "c0", "=", "o0", "=", "x", "\n", "\n", "b1", "=", "self", ".", "b1", "(", "o0", ")", "\n", "c1", "=", "torch", ".", "cat", "(", "[", "c0", ",", "b1", "]", ",", "dim", "=", "1", ")", "\n", "o1", "=", "self", ".", "c1", "(", "c1", ")", "\n", "\n", "b2", "=", "self", ".", "b2", "(", "o1", ")", "\n", "c2", "=", "torch", ".", "cat", "(", "[", "c1", ",", "b2", "]", ",", "dim", "=", "1", ")", "\n", "o2", "=", "self", ".", "c2", "(", "c2", ")", "\n", "\n", "b3", "=", "self", ".", "b3", "(", "o2", ")", "\n", "c3", "=", "torch", ".", "cat", "(", "[", "c2", ",", "b3", "]", ",", "dim", "=", "1", ")", "\n", "o3", "=", "self", ".", "c3", "(", "c3", ")", "\n", "\n", "scale", "=", "self", ".", "scale", "[", "self", ".", "scale_idx", "]", "\n", "out", "=", "self", ".", "upsample", "(", "o3", ",", "scale", "=", "scale", ")", "\n", "\n", "out", "=", "self", ".", "exit", "(", "out", ")", "\n", "out", "=", "self", ".", "add_mean", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.carn.CARN.set_scale": [[98, 100], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "scale_idx", ")", ":", "\n", "        ", "self", ".", "scale_idx", "=", "scale_idx", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.carn.make_model": [[6, 8], ["carn.CARN"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "     ", "return", "CARN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.NHR_Res32.__init__": [[22, 53], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "tail_ft2.append", "model.edsr.EDSR", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.common.ResBlock", "conv", "model.common.Upsampler", "body.children", "list.pop", "range"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "NHR_Res32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "args", ".", "n_resblocks", "=", "args", ".", "n_resblocks", "-", "args", ".", "n_resblocks_ft", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "tail_ft2", "=", "[", "\n", "common", ".", "ResBlock", "(", "\n", "conv", ",", "n_feats", "+", "4", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", "\n", ")", "for", "_", "in", "range", "(", "args", ".", "n_resblocks_ft", ")", "\n", "]", "\n", "tail_ft2", ".", "append", "(", "conv", "(", "n_feats", "+", "4", ",", "args", ".", "n_colors", ",", "kernel_size", ")", ")", "\n", "\n", "tail_ft1", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "]", "\n", "premodel", "=", "EDSR", "(", "args", ")", "\n", "self", ".", "sub_mean", "=", "premodel", ".", "sub_mean", "\n", "self", ".", "head", "=", "premodel", ".", "head", "\n", "body", "=", "premodel", ".", "body", "\n", "body_child", "=", "list", "(", "body", ".", "children", "(", ")", ")", "\n", "body_ft", "=", "[", "body_child", ".", "pop", "(", ")", "]", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body_child", ")", "\n", "self", ".", "body_ft", "=", "nn", ".", "Sequential", "(", "*", "body_ft", ")", "\n", "self", ".", "tail_ft1", "=", "nn", ".", "Sequential", "(", "*", "tail_ft1", ")", "\n", "self", ".", "tail_ft2", "=", "nn", ".", "Sequential", "(", "*", "tail_ft2", ")", "\n", "self", ".", "add_mean", "=", "premodel", ".", "add_mean", "\n", "args", ".", "n_resblocks", "=", "n_resblocks", "\n", "# self.premodel = EDSR(args)", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.NHR_Res32.forward": [[55, 74], ["finetune.NHR_Res32.sub_mean", "finetune.NHR_Res32.head", "finetune.NHR_Res32.body", "finetune.NHR_Res32.body_ft", "finetune.NHR_Res32.tail_ft1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "finetune.NHR_Res32.tail_ft2", "finetune.NHR_Res32.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "inputs", "[", "0", "]", "\n", "y", "=", "inputs", "[", "1", "]", "\n", "# z = inputs[2]", "\n", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "=", "self", ".", "body_ft", "(", "res", ")", "\n", "# print(res.shape)", "\n", "# print(y.shape)", "\n", "res", "+=", "x", "\n", "x", "=", "self", ".", "tail_ft1", "(", "x", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "y", ")", ",", "dim", "=", "1", ")", "\n", "#res = self.body_ft(res)", "\n", "#res += x", "\n", "\n", "x", "=", "self", ".", "tail_ft2", "(", "x", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "return", "x", "\n", "# return self.premodel(inputs[0])", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.HRST_CNN.__init__": [[77, 109], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "body_ft.append", "model.edsr.EDSR", "list", "list.pop", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.common.ResBlock", "conv", "conv", "conv", "conv", "body.children", "range"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "HRST_CNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "args", ".", "n_resblocks", "=", "args", ".", "n_resblocks", "-", "args", ".", "n_resblocks_ft", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "body_ft", "=", "[", "\n", "common", ".", "ResBlock", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", "\n", ")", "for", "_", "in", "range", "(", "args", ".", "n_resblocks_ft", ")", "\n", "]", "\n", "body_ft", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "tail_ft", "=", "[", "\n", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ",", "\n", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ",", "\n", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "\n", "]", "\n", "premodel", "=", "EDSR", "(", "args", ")", "\n", "self", ".", "sub_mean", "=", "premodel", ".", "sub_mean", "\n", "self", ".", "head", "=", "premodel", ".", "head", "\n", "body", "=", "premodel", ".", "body", "\n", "body_child", "=", "list", "(", "body", ".", "children", "(", ")", ")", "\n", "body_child", ".", "pop", "(", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body_child", ")", "\n", "self", ".", "body_ft", "=", "nn", ".", "Sequential", "(", "*", "body_ft", ")", "\n", "self", ".", "tail_ft", "=", "nn", ".", "Sequential", "(", "*", "tail_ft", ")", "\n", "self", ".", "add_mean", "=", "premodel", ".", "add_mean", "\n", "args", ".", "n_resblocks", "=", "n_resblocks", "\n", "# self.premodel = EDSR(args)", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.HRST_CNN.forward": [[111, 127], ["finetune.HRST_CNN.sub_mean", "finetune.HRST_CNN.head", "finetune.HRST_CNN.body", "finetune.HRST_CNN.body_ft", "finetune.HRST_CNN.tail_ft", "finetune.HRST_CNN.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "inputs", "[", "0", "]", "\n", "#y = inputs[1]", "\n", "# z = inputs[2]", "\n", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "# print(res.shape)", "\n", "# print(y.shape)", "\n", "#res = torch.cat((res, y), dim=1)", "\n", "res", "=", "self", ".", "body_ft", "(", "res", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail_ft", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "return", "x", "\n", "# return self.premodel(inputs[0])", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.NLR.__init__": [[130, 161], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "body_ft.append", "model.edsr.EDSR", "list", "list.pop", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.common.ResBlock", "conv", "model.common.Upsampler", "conv", "body.children", "range"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "NLR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "args", ".", "n_resblocks", "=", "args", ".", "n_resblocks", "-", "args", ".", "n_resblocks_ft", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "body_ft", "=", "[", "\n", "common", ".", "ResBlock", "(", "\n", "conv", ",", "n_feats", "+", "4", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", "\n", ")", "for", "_", "in", "range", "(", "args", ".", "n_resblocks_ft", ")", "\n", "]", "\n", "body_ft", ".", "append", "(", "conv", "(", "n_feats", "+", "4", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "tail_ft", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "\n", "]", "\n", "premodel", "=", "EDSR", "(", "args", ")", "\n", "self", ".", "sub_mean", "=", "premodel", ".", "sub_mean", "\n", "self", ".", "head", "=", "premodel", ".", "head", "\n", "body", "=", "premodel", ".", "body", "\n", "body_child", "=", "list", "(", "body", ".", "children", "(", ")", ")", "\n", "body_child", ".", "pop", "(", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body_child", ")", "\n", "self", ".", "body_ft", "=", "nn", ".", "Sequential", "(", "*", "body_ft", ")", "\n", "self", ".", "tail_ft", "=", "nn", ".", "Sequential", "(", "*", "tail_ft", ")", "\n", "self", ".", "add_mean", "=", "premodel", ".", "add_mean", "\n", "args", ".", "n_resblocks", "=", "n_resblocks", "\n", "# self.premodel = EDSR(args)", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.NLR.forward": [[163, 179], ["finetune.NLR.sub_mean", "finetune.NLR.head", "finetune.NLR.body", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "finetune.NLR.body_ft", "finetune.NLR.tail_ft", "finetune.NLR.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "inputs", "[", "0", "]", "\n", "y", "=", "inputs", "[", "1", "]", "\n", "# z = inputs[2]", "\n", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "# print(res.shape)", "\n", "# print(y.shape)", "\n", "res", "=", "torch", ".", "cat", "(", "(", "res", ",", "y", ")", ",", "dim", "=", "1", ")", "\n", "res", "=", "self", ".", "body_ft", "(", "res", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail_ft", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "return", "x", "\n", "# return self.premodel(inputs[0])", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.NHR.__init__": [[182, 237], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "model.edsr.EDSR", "list", "list.pop", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "body_ft.append", "body_ft.append", "body.children", "finetune.ResBlock", "finetune.conv2d", "model.common.Upsampler", "finetune.conv2d", "finetune.conv2d", "finetune.conv2d", "finetune.conv2d", "finetune.conv2d", "finetune.ResBlock", "finetune.ResBlock", "finetune.conv2d", "model.common.Upsampler", "finetune.conv2d", "finetune.conv2d", "finetune.conv2d", "finetune.conv2d", "finetune.conv2d", "range"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "NHR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "args", ".", "n_resblocks", "=", "args", ".", "n_resblocks", "-", "args", ".", "n_resblocks_ft", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "n_color", "=", "args", ".", "n_colors", "\n", "self", ".", "normal_lr", "=", "args", ".", "normal_lr", "==", "'lr'", "\n", "self", ".", "args", "=", "args", "\n", "if", "self", ".", "normal_lr", ":", "\n", "            ", "body_ft", "=", "[", "\n", "ResBlock", "(", "\n", "conv", ",", "n_feats", "+", "4", ",", "n_feats", "+", "4", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", "\n", ")", "for", "_", "in", "range", "(", "args", ".", "n_resblocks_ft", ")", "\n", "]", "\n", "body_ft", ".", "append", "(", "conv2d", "(", "n_feats", "+", "4", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "True", ")", ")", "\n", "\n", "tail_ft1", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "True", ")", ",", "\n", "conv2d", "(", "n_feats", ",", "n_feats", "+", "4", ",", "kernel_size", ",", "act", "=", "True", ")", ",", "\n", "]", "\n", "tail_ft2", "=", "[", "conv2d", "(", "n_feats", "+", "4", ",", "n_feats", "+", "4", ",", "kernel_size", ",", "act", "=", "True", ")", ",", "\n", "conv2d", "(", "n_feats", "+", "4", ",", "n_feats", "+", "4", ",", "kernel_size", ",", "act", "=", "True", ")", ",", "\n", "conv2d", "(", "n_feats", "+", "4", ",", "n_feats", "+", "4", ",", "kernel_size", ",", "act", "=", "True", ")", ",", "\n", "conv2d", "(", "n_feats", "+", "4", ",", "n_color", ",", "kernel_size", ",", "act", "=", "False", ")", "]", "\n", "", "else", ":", "\n", "            ", "body_ft", "=", "[", "ResBlock", "(", "conv", ",", "n_feats", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", ")", ",", "\n", "ResBlock", "(", "conv", ",", "n_feats", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", ")", "]", "\n", "# ResBlock(conv, n_feats+4, n_feats+4, kernel_size, act=act, res_scale=args.res_scale)", "\n", "#]", "\n", "body_ft", ".", "append", "(", "conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "True", ")", ")", "\n", "\n", "tail_ft1", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "True", ")", ",", "\n", "conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "True", ")", ",", "\n", "]", "\n", "tail_ft2", "=", "[", "conv2d", "(", "n_feats", "+", "4", ",", "n_feats", "+", "4", ",", "kernel_size", ",", "act", "=", "True", ")", ",", "\n", "conv2d", "(", "n_feats", "+", "4", ",", "n_feats", "+", "4", ",", "kernel_size", ",", "act", "=", "True", ")", ",", "\n", "conv2d", "(", "n_feats", "+", "4", ",", "n_feats", "+", "4", ",", "kernel_size", ",", "act", "=", "True", ")", ",", "\n", "conv2d", "(", "n_feats", "+", "4", ",", "n_color", ",", "kernel_size", ",", "act", "=", "False", ")", "]", "\n", "\n", "", "premodel", "=", "EDSR", "(", "args", ")", "\n", "self", ".", "sub_mean", "=", "premodel", ".", "sub_mean", "\n", "self", ".", "head", "=", "premodel", ".", "head", "\n", "body", "=", "premodel", ".", "body", "\n", "body_child", "=", "list", "(", "body", ".", "children", "(", ")", ")", "\n", "body_child", ".", "pop", "(", ")", "\n", "self", ".", "body", "=", "premodel", ".", "body", "\n", "self", ".", "body_ft", "=", "nn", ".", "Sequential", "(", "*", "body_ft", ")", "\n", "self", ".", "tail_ft1", "=", "nn", ".", "Sequential", "(", "*", "tail_ft1", ")", "\n", "self", ".", "tail_ft2", "=", "nn", ".", "Sequential", "(", "*", "tail_ft2", ")", "\n", "self", ".", "add_mean", "=", "premodel", ".", "add_mean", "\n", "args", ".", "n_resblocks", "=", "n_resblocks", "\n", "# self.premodel = EDSR(args)", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.NHR.forward": [[239, 255], ["finetune.NHR.sub_mean", "finetune.NHR.head", "finetune.NHR.body", "finetune.NHR.body_ft", "finetune.NHR.tail_ft1", "finetune.NHR.tail_ft2", "finetune.NHR.add_mean", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "x", "=", "inputs", "[", "0", "]", "\n", "y", "=", "inputs", "[", "1", "]", "\n", "# z = inputs[2]", "\n", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "if", "self", ".", "normal_lr", ":", "res", "=", "torch", ".", "cat", "(", "(", "res", ",", "y", ")", ",", "dim", "=", "1", ")", "\n", "res", "=", "self", ".", "body_ft", "(", "res", ")", "\n", "res", "+=", "x", "\n", "x", "=", "self", ".", "tail_ft1", "(", "res", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "if", "not", "self", ".", "normal_lr", ":", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "y", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "tail_ft2", "(", "x", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "return", "x", "\n", "# return self.premodel(inputs[0])", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.ResBlock.__init__": [[258, 270], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "m.append", "conv", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "in_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "m", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "feat", "=", "in_feat", "if", "i", "==", "0", "else", "n_feat", "\n", "m", ".", "append", "(", "conv", "(", "feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "m", ".", "append", "(", "act", ")", "\n", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.ResBlock.forward": [[271, 276], ["finetune.ResBlock.body().mul", "finetune.ResBlock.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", ".", "mul", "(", "self", ".", "res_scale", ")", "\n", "res", "+=", "x", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.make_model": [[8, 20], ["finetune.HRST_CNN", "finetune.NLR", "finetune.NHR", "finetune.NHR_Res32", "NotImplementedError"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "m", "=", "args", ".", "submodel", "\n", "if", "m", "==", "'HRST_CNN'", ":", "\n", "        ", "return", "HRST_CNN", "(", "args", ")", "\n", "", "elif", "m", "==", "'NLR'", ":", "\n", "        ", "return", "NLR", "(", "args", ")", "\n", "", "elif", "m", "==", "'NHR'", ":", "\n", "        ", "return", "NHR", "(", "args", ")", "\n", "", "elif", "m", "==", "'NHR_Res32'", ":", "\n", "        ", "return", "NHR_Res32", "(", "args", ")", "\n", "", "else", ":", "\n", "        ", "NotImplementedError", "(", "'The architecture {} is not implemented.'", ".", "format", "(", "m", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.finetune.conv2d": [[277, 281], ["torch.Sequential", "torch.Conv2d", "c.append", "torch.ReLU"], "function", ["None"], ["", "", "def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "bias", "=", "True", ",", "act", "=", "True", ")", ":", "\n", "    ", "c", "=", "[", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ")", "]", "\n", "if", "act", ":", "c", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "return", "nn", ".", "Sequential", "(", "*", "c", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.mdsr.MDSR.__init__": [[9, 51], ["torch.Module.__init__", "torch.ReLU", "model.common.MeanShift", "torch.ModuleList", "m_body.append", "torch.ModuleList", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "model.common.ResBlock", "conv", "conv", "torch.Sequential", "range", "model.common.Upsampler", "model.common.ResBlock", "model.common.ResBlock"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "MDSR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "self", ".", "scale_idx", "=", "0", "\n", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "m_head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "pre_process", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Sequential", "(", "\n", "common", ".", "ResBlock", "(", "conv", ",", "n_feats", ",", "5", ",", "act", "=", "act", ")", ",", "\n", "common", ".", "ResBlock", "(", "conv", ",", "n_feats", ",", "5", ",", "act", "=", "act", ")", "\n", ")", "for", "_", "in", "args", ".", "scale", "\n", "]", ")", "\n", "\n", "m_body", "=", "[", "\n", "common", ".", "ResBlock", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "act", "\n", ")", "for", "_", "in", "range", "(", "n_resblocks", ")", "\n", "]", "\n", "m_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "self", ".", "upsample", "=", "nn", ".", "ModuleList", "(", "[", "\n", "common", ".", "Upsampler", "(", "\n", "conv", ",", "s", ",", "n_feats", ",", "act", "=", "False", "\n", ")", "for", "s", "in", "args", ".", "scale", "\n", "]", ")", "\n", "\n", "m_tail", "=", "[", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "m_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "m_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.mdsr.MDSR.forward": [[52, 65], ["mdsr.MDSR.sub_mean", "mdsr.MDSR.head", "mdsr.MDSR.body", "mdsr.MDSR.tail", "mdsr.MDSR.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", "=", "self", ".", "pre_process", "[", "self", ".", "scale_idx", "]", "(", "x", ")", "\n", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "upsample", "[", "self", ".", "scale_idx", "]", "(", "res", ")", "\n", "x", "=", "self", ".", "tail", "(", "x", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.mdsr.MDSR.set_scale": [[66, 68], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "scale_idx", ")", ":", "\n", "        ", "self", ".", "scale_idx", "=", "scale_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.mdsr.make_model": [[5, 7], ["mdsr.MDSR"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "MDSR", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.__init__": [[9, 40], ["torch.Module.__init__", "print", "torch.device", "torch.device", "torch.device", "torch.device", "importlib.import_module", "importlib.import_module.make_model().to", "print", "__init__.Model.load", "__init__.Model.model.half", "torch.DataParallel", "torch.DataParallel", "print", "args.model.lower", "importlib.import_module.make_model", "range"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.make_model"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.forward": [[41, 62], ["__init__.Model.get_model", "hasattr", "__init__.Model.set_scale", "__init__.Model.forward_x8", "__init__.Model.forward_chop", "__init__.Model.model_flag.lower", "__init__.Model.model", "__init__.Model.model"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData.set_scale", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.forward_x8", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.forward_chop"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.get_model": [[63, 68], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.state_dict": [[69, 72], ["__init__.Model.get_model", "__init__.Model.state_dict"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.save": [[73, 89], ["__init__.Model.get_model", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Model.state_dict", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Model.state_dict", "os.path.join", "__init__.Model.state_dict", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.load": [[91, 119], ["print", "__init__.Model.get_model().load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "__init__.Model.get_model().load_state_dict", "__init__.Model.get_model", "os.path.join", "print", "__init__.Model.get_model().load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "__init__.Model.get_model", "os.path.join", "__init__.Model.get_model"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.RCAN.load_state_dict", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.RCAN.load_state_dict", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.RCAN.load_state_dict", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.get_model"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.forward_chop": [[121, 191], ["min", "x[].size", "x[].new", "__init__.Model.model_flag.lower", "__init__.Model.forward_chop._patch_division"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.__init__.Model.forward_x8": [[192, 226], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.mean", "torch.cat.mean", "v.float.float.data.cpu().numpy", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "lr_list.extend", "forward_function", "len", "v.float.float.float", "v2np[].copy", "ret.half.half.half", "__init__.Model.forward_x8._transform"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ddbpn.DenseProjection.__init__": [[30, 53], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ddbpn.projection_conv", "torch.PReLU", "torch.PReLU", "ddbpn.projection_conv", "torch.PReLU", "torch.PReLU", "ddbpn.projection_conv", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ddbpn.projection_conv", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ddbpn.projection_conv", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ddbpn.projection_conv"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "nr", ",", "scale", ",", "up", "=", "True", ",", "bottleneck", "=", "True", ")", ":", "\n", "        ", "super", "(", "DenseProjection", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "bottleneck", ":", "\n", "            ", "self", ".", "bottleneck", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "nr", ",", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "nr", ")", "\n", "]", ")", "\n", "inter_channels", "=", "nr", "\n", "", "else", ":", "\n", "            ", "self", ".", "bottleneck", "=", "None", "\n", "inter_channels", "=", "in_channels", "\n", "\n", "", "self", ".", "conv_1", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "projection_conv", "(", "inter_channels", ",", "nr", ",", "scale", ",", "up", ")", ",", "\n", "nn", ".", "PReLU", "(", "nr", ")", "\n", "]", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "projection_conv", "(", "nr", ",", "inter_channels", ",", "scale", ",", "not", "up", ")", ",", "\n", "nn", ".", "PReLU", "(", "inter_channels", ")", "\n", "]", ")", "\n", "self", ".", "conv_3", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "projection_conv", "(", "inter_channels", ",", "nr", ",", "scale", ",", "up", ")", ",", "\n", "nn", ".", "PReLU", "(", "nr", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ddbpn.DenseProjection.forward": [[55, 67], ["ddbpn.DenseProjection.conv_1", "ddbpn.DenseProjection.conv_2", "ddbpn.DenseProjection.sub", "ddbpn.DenseProjection.conv_3", "ddbpn.DenseProjection.add", "ddbpn.DenseProjection.bottleneck"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "bottleneck", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "bottleneck", "(", "x", ")", "\n", "\n", "", "a_0", "=", "self", ".", "conv_1", "(", "x", ")", "\n", "b_0", "=", "self", ".", "conv_2", "(", "a_0", ")", "\n", "e", "=", "b_0", ".", "sub", "(", "x", ")", "\n", "a_1", "=", "self", ".", "conv_3", "(", "e", ")", "\n", "\n", "out", "=", "a_0", ".", "add", "(", "a_1", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ddbpn.DDBPN.__init__": [[69, 111], ["torch.Module.__init__", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "range", "torch.Sequential", "torch.Sequential", "model.common.MeanShift", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "ddbpn.DDBPN.upmodules.append", "ddbpn.DDBPN.downmodules.append", "torch.Conv2d", "torch.Conv2d", "ddbpn.DenseProjection", "ddbpn.DenseProjection"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "DDBPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "\n", "n0", "=", "128", "\n", "nr", "=", "32", "\n", "self", ".", "depth", "=", "6", "\n", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "initial", "=", "[", "\n", "nn", ".", "Conv2d", "(", "args", ".", "n_colors", ",", "n0", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "n0", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n0", ",", "nr", ",", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "nr", ")", "\n", "]", "\n", "self", ".", "initial", "=", "nn", ".", "Sequential", "(", "*", "initial", ")", "\n", "\n", "self", ".", "upmodules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "downmodules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "channels", "=", "nr", "\n", "for", "i", "in", "range", "(", "self", ".", "depth", ")", ":", "\n", "            ", "self", ".", "upmodules", ".", "append", "(", "\n", "DenseProjection", "(", "channels", ",", "nr", ",", "scale", ",", "True", ",", "i", ">", "1", ")", "\n", ")", "\n", "if", "i", "!=", "0", ":", "\n", "                ", "channels", "+=", "nr", "\n", "\n", "", "", "channels", "=", "nr", "\n", "for", "i", "in", "range", "(", "self", ".", "depth", "-", "1", ")", ":", "\n", "            ", "self", ".", "downmodules", ".", "append", "(", "\n", "DenseProjection", "(", "channels", ",", "nr", ",", "scale", ",", "False", ",", "i", "!=", "0", ")", "\n", ")", "\n", "channels", "+=", "nr", "\n", "\n", "", "reconstruction", "=", "[", "\n", "nn", ".", "Conv2d", "(", "self", ".", "depth", "*", "nr", ",", "args", ".", "n_colors", ",", "3", ",", "padding", "=", "1", ")", "\n", "]", "\n", "self", ".", "reconstruction", "=", "nn", ".", "Sequential", "(", "*", "reconstruction", ")", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ddbpn.DDBPN.forward": [[112, 131], ["ddbpn.DDBPN.sub_mean", "ddbpn.DDBPN.initial", "range", "h_list.append", "ddbpn.DDBPN.reconstruction", "ddbpn.DDBPN.add_mean", "h_list.append", "l_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "initial", "(", "x", ")", "\n", "\n", "h_list", "=", "[", "]", "\n", "l_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "depth", "-", "1", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "l", "=", "x", "\n", "", "else", ":", "\n", "                ", "l", "=", "torch", ".", "cat", "(", "l_list", ",", "dim", "=", "1", ")", "\n", "", "h_list", ".", "append", "(", "self", ".", "upmodules", "[", "i", "]", "(", "l", ")", ")", "\n", "l_list", ".", "append", "(", "self", ".", "downmodules", "[", "i", "]", "(", "torch", ".", "cat", "(", "h_list", ",", "dim", "=", "1", ")", ")", ")", "\n", "\n", "", "h_list", ".", "append", "(", "self", ".", "upmodules", "[", "-", "1", "]", "(", "torch", ".", "cat", "(", "l_list", ",", "dim", "=", "1", ")", ")", ")", "\n", "out", "=", "self", ".", "reconstruction", "(", "torch", ".", "cat", "(", "h_list", ",", "dim", "=", "1", ")", ")", "\n", "out", "=", "self", ".", "add_mean", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ddbpn.make_model": [[10, 12], ["ddbpn.DDBPN"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "DDBPN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.ddbpn.projection_conv": [[13, 27], ["conv_f"], "function", ["None"], ["", "def", "projection_conv", "(", "in_channels", ",", "out_channels", ",", "scale", ",", "up", "=", "True", ")", ":", "\n", "    ", "kernel_size", ",", "stride", ",", "padding", "=", "{", "\n", "2", ":", "(", "6", ",", "2", ",", "2", ")", ",", "\n", "4", ":", "(", "8", ",", "4", ",", "2", ")", ",", "\n", "8", ":", "(", "12", ",", "8", ",", "2", ")", "\n", "}", "[", "scale", "]", "\n", "if", "up", ":", "\n", "        ", "conv_f", "=", "nn", ".", "ConvTranspose2d", "\n", "", "else", ":", "\n", "        ", "conv_f", "=", "nn", ".", "Conv2d", "\n", "\n", "", "return", "conv_f", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.VarBlockSimple.__init__": [[28, 38], ["torch.Softplus", "torch.Softplus", "torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", "=", "common", ".", "default_conv", ",", "n_feats", "=", "64", ",", "kernel_size", "=", "3", ",", "reg_act", "=", "nn", ".", "Softplus", "(", ")", ",", "rescale", "=", "1", ",", "norm_f", "=", "None", ")", ":", "\n", "        ", "super", "(", "VarBlockSimple", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_f", "is", "not", "None", ":", "\n", "            ", "conv_mask", "=", "[", "norm_f", ",", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "kernel_size", "//", "2", ",", "groups", "=", "n_feats", ")", ",", "reg_act", "]", "\n", "", "else", ":", "\n", "            ", "conv_mask", "=", "[", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "kernel_size", "//", "2", ",", "groups", "=", "n_feats", ")", ",", "reg_act", "]", "\n", "", "conv_body", "=", "[", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ",", "nn", ".", "PReLU", "(", ")", "]", "\n", "self", ".", "rescale", "=", "rescale", "\n", "self", ".", "conv_mask", "=", "nn", ".", "Sequential", "(", "*", "conv_mask", ")", "\n", "self", ".", "conv_body", "=", "nn", ".", "Sequential", "(", "*", "conv_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.VarBlockSimple.forward": [[39, 43], ["srresnet.VarBlockSimple.conv_body", "srresnet.VarBlockSimple.mul", "srresnet.VarBlockSimple.conv_mask"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "conv_body", "(", "self", ".", "conv_mask", "(", "x", ")", "*", "x", ")", "\n", "x", "=", "res", ".", "mul", "(", "self", ".", "rescale", ")", "+", "x", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.JointAttention.__init__": [[46, 57], ["torch.Softplus", "torch.Softplus", "torch.Module.__init__", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Softmax2d", "torch.Softmax2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "conv", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", "=", "common", ".", "default_conv", ",", "n_feats", "=", "64", ",", "kernel_size", "=", "3", ",", "reg_act", "=", "nn", ".", "Softplus", "(", ")", ",", "rescale", "=", "1", ",", "norm_f", "=", "None", ")", ":", "\n", "        ", "super", "(", "JointAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "mask_conv", "=", "[", "nn", ".", "Conv2d", "(", "n_feats", ",", "16", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "4", ",", "padding", "=", "kernel_size", "//", "2", ")", ",", "nn", ".", "PReLU", "(", ")", "]", "\n", "mask_deconv", "=", "nn", ".", "ConvTranspose2d", "(", "16", ",", "n_feats", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "4", ",", "padding", "=", "1", ")", "\n", "mask_deconv_act", "=", "nn", ".", "Softmax2d", "(", ")", "\n", "conv_body", "=", "[", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ",", "nn", ".", "PReLU", "(", ")", "]", "\n", "self", ".", "mask_conv", "=", "nn", ".", "Sequential", "(", "*", "mask_conv", ")", "\n", "self", ".", "mask_deconv", "=", "mask_deconv", "\n", "self", ".", "mask_deconv_act", "=", "mask_deconv_act", "\n", "# self.ca = CALayer(n_feats)", "\n", "self", ".", "conv_body", "=", "nn", ".", "Sequential", "(", "*", "conv_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.JointAttention.forward": [[58, 65], ["srresnet.JointAttention.mask_deconv_act", "srresnet.JointAttention.conv_body", "srresnet.JointAttention.mask_deconv", "srresnet.JointAttention.mask_conv", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "mask", "=", "self", ".", "mask_deconv_act", "(", "self", ".", "mask_deconv", "(", "self", ".", "mask_conv", "(", "x", ")", ",", "output_size", "=", "x", ".", "size", "(", ")", ")", ")", "\n", "res", "=", "mask", "*", "x", "\n", "# res = self.ca(res)", "\n", "res", "=", "self", ".", "conv_body", "(", "res", ")", "\n", "x", "=", "res", "+", "x", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.UpsampleBlock.__init__": [[67, 80], ["torch.Module.__init__", "srresnet._UpsampleBlock", "srresnet._UpsampleBlock", "srresnet._UpsampleBlock", "srresnet._UpsampleBlock"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "n_channels", ",", "scale", ",", "multi_scale", ",", "\n", "group", "=", "1", ")", ":", "\n", "        ", "super", "(", "UpsampleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "multi_scale", ":", "\n", "            ", "self", ".", "up2", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "2", ",", "group", "=", "group", ")", "\n", "self", ".", "up3", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "3", ",", "group", "=", "group", ")", "\n", "self", ".", "up4", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "4", ",", "group", "=", "group", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "up", "=", "_UpsampleBlock", "(", "n_channels", ",", "scale", "=", "scale", ",", "group", "=", "group", ")", "\n", "\n", "", "self", ".", "multi_scale", "=", "multi_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.UpsampleBlock.forward": [[81, 91], ["srresnet.UpsampleBlock.up", "srresnet.UpsampleBlock.up2", "srresnet.UpsampleBlock.up3", "srresnet.UpsampleBlock.up4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "scale", ")", ":", "\n", "        ", "if", "self", ".", "multi_scale", ":", "\n", "            ", "if", "scale", "==", "2", ":", "\n", "                ", "return", "self", ".", "up2", "(", "x", ")", "\n", "", "elif", "scale", "==", "3", ":", "\n", "                ", "return", "self", ".", "up3", "(", "x", ")", "\n", "", "elif", "scale", "==", "4", ":", "\n", "                ", "return", "self", ".", "up4", "(", "x", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "self", ".", "up", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet._UpsampleBlock.__init__": [[94, 109], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "range", "int", "math.log", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PixelShuffle", "torch.PixelShuffle"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "n_channels", ",", "scale", ",", "\n", "group", "=", "1", ")", ":", "\n", "        ", "super", "(", "_UpsampleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "modules", "=", "[", "]", "\n", "if", "scale", "==", "2", "or", "scale", "==", "4", "or", "scale", "==", "8", ":", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "modules", "+=", "[", "nn", ".", "Conv2d", "(", "n_channels", ",", "4", "*", "n_channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "group", ")", ",", "nn", ".", "PReLU", "(", ")", "]", "\n", "modules", "+=", "[", "nn", ".", "PixelShuffle", "(", "2", ")", "]", "\n", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "modules", "+=", "[", "nn", ".", "Conv2d", "(", "n_channels", ",", "9", "*", "n_channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "group", ")", ",", "nn", ".", "PReLU", "(", ")", "]", "\n", "modules", "+=", "[", "nn", ".", "PixelShuffle", "(", "3", ")", "]", "\n", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet._UpsampleBlock.forward": [[110, 113], ["srresnet._UpsampleBlock.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "body", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.SRResNet.__init__": [[116, 165], ["torch.Module.__init__", "torch.PReLU", "torch.PReLU", "srresnet.norm", "model.common.act_vconv", "srresnet.UpsampleBlock", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.common.MeanShift", "len", "conv", "srresnet.JointAttention", "conv", "conv", "range"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.norm", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.common.act_vconv"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "SRResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "# scale = args.scale[0]", "\n", "act", "=", "nn", ".", "PReLU", "(", ")", "\n", "\n", "multi_scale", "=", "len", "(", "args", ".", "scale", ")", ">", "1", "\n", "self", ".", "scale_idx", "=", "0", "\n", "scale", "=", "args", ".", "scale", "[", "self", ".", "scale_idx", "]", "\n", "group", "=", "1", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "\n", "norm_f", "=", "norm", "(", "args", ".", "norm_type", ",", "args", ".", "n_feats", ",", "args", ".", "n_groups", ")", "\n", "act_vconv", "=", "common", ".", "act_vconv", "(", "args", ".", "res_act", ")", "\n", "\n", "head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", ",", "act", "]", "\n", "body_r", "=", "[", "JointAttention", "(", "conv", ",", "n_feats", ",", "kernel_size", ",", "reg_act", "=", "act_vconv", ",", "norm_f", "=", "norm_f", ",", "rescale", "=", "args", ".", "res_scale", ")", "\n", "for", "_", "in", "range", "(", "n_resblocks", ")", "]", "\n", "#body_r = [common.ResBlock(conv, n_feats, kernel_size, bn=False, act=act, res_scale=args.res_scale, num_conv=2)", "\n", "#                 for _ in range(n_resblocks)]", "\n", "\n", "\n", "body_conv", "=", "[", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "#body_conv = [conv(n_feats, n_feats, kernel_size), nn.BatchNorm2d(n_feats)]", "\n", "\n", "# tail = [", "\n", "#     common.Upsampler(conv, scale, n_feats, act=act),", "\n", "#     conv(n_feats, args.n_colors, kernel_size)", "\n", "# ]", "\n", "\n", "tail", "=", "UpsampleBlock", "(", "n_feats", ",", "\n", "scale", "=", "scale", ",", "\n", "multi_scale", "=", "multi_scale", ",", "\n", "group", "=", "group", ")", "\n", "tail_conv", "=", "[", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "head", ")", "\n", "self", ".", "body_r", "=", "nn", ".", "Sequential", "(", "*", "body_r", ")", "\n", "self", ".", "body_conv", "=", "nn", ".", "Sequential", "(", "*", "body_conv", ")", "\n", "self", ".", "tail", "=", "tail", "\n", "self", ".", "tail_conv", "=", "nn", ".", "Sequential", "(", "*", "tail_conv", ")", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.SRResNet.forward": [[166, 176], ["srresnet.SRResNet.sub_mean", "srresnet.SRResNet.head", "srresnet.SRResNet.body_r", "srresnet.SRResNet.body_conv", "srresnet.SRResNet.tail", "srresnet.SRResNet.tail_conv", "srresnet.SRResNet.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "f", "=", "self", ".", "body_r", "(", "x", ")", "\n", "f", "=", "self", ".", "body_conv", "(", "f", ")", "\n", "scale", "=", "self", ".", "scale", "[", "self", ".", "scale_idx", "]", "\n", "x", "=", "self", ".", "tail", "(", "x", "+", "f", ",", "scale", ")", "\n", "x", "=", "self", ".", "tail_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.SRResNet.set_scale": [[177, 179], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "scale_idx", ")", ":", "\n", "        ", "self", ".", "scale_idx", "=", "scale_idx", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.make_model": [[8, 10], ["srresnet.SRResNet"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "SRResNet", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.norm": [[11, 25], ["torch.BatchNorm2d", "torch.GroupNorm", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LayerNorm"], "function", ["None"], ["", "def", "norm", "(", "norm_type", ",", "channel", ",", "group", ")", ":", "\n", "    ", "if", "norm_type", "==", "'batchnorm'", ":", "\n", "        ", "norm", "=", "nn", ".", "BatchNorm2d", "(", "channel", ")", "\n", "", "elif", "norm_type", "==", "'groupnorm'", ":", "\n", "        ", "norm", "=", "nn", ".", "GroupNorm", "(", "group", ",", "channel", ")", "\n", "", "elif", "norm_type", "==", "'instancenorm'", ":", "\n", "        ", "norm", "=", "nn", ".", "InstanceNorm2d", "(", "channel", ")", "\n", "", "elif", "norm_type", "==", "'instancenorm_affine'", ":", "\n", "        ", "norm", "=", "nn", ".", "InstanceNorm2d", "(", "channel", ",", "affine", "=", "True", ")", "\n", "", "elif", "norm_type", "==", "'layernorm'", ":", "\n", "        ", "norm", "=", "nn", ".", "LayerNorm", "(", "channel", ")", "\n", "", "else", ":", "\n", "        ", "norm", "=", "None", "\n", "", "return", "norm", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.demo.Demo.__init__": [[12, 25], ["os.listdir", "demo.Demo.filelist.sort", "demo.Demo.filelist.append", "f.find", "f.find", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "name", "=", "'Demo'", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "train", "=", "False", "\n", "self", ".", "benchmark", "=", "False", "\n", "\n", "self", ".", "filelist", "=", "[", "]", "\n", "for", "f", "in", "os", ".", "listdir", "(", "args", ".", "dir_demo", ")", ":", "\n", "            ", "if", "f", ".", "find", "(", "'.png'", ")", ">=", "0", "or", "f", ".", "find", "(", "'.jp'", ")", ">=", "0", ":", "\n", "                ", "self", ".", "filelist", ".", "append", "(", "os", ".", "path", ".", "join", "(", "args", ".", "dir_demo", ",", "f", ")", ")", "\n", "", "", "self", ".", "filelist", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.demo.Demo.__getitem__": [[26, 33], ["os.path.splitext", "scipy.imread", "os.path.split", "torch.common.set_channel", "torch.common.np2Tensor"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.set_channel", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.np2Tensor"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "split", "(", "self", ".", "filelist", "[", "idx", "]", ")", "[", "-", "1", "]", "\n", "filename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "\n", "lr", "=", "misc", ".", "imread", "(", "self", ".", "filelist", "[", "idx", "]", ")", "\n", "lr", "=", "common", ".", "set_channel", "(", "[", "lr", "]", ",", "self", ".", "args", ".", "n_colors", ")", "[", "0", "]", "\n", "\n", "return", "common", ".", "np2Tensor", "(", "[", "lr", "]", ",", "self", ".", "args", ".", "rgb_range", ")", "[", "0", "]", ",", "-", "1", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.demo.Demo.__len__": [[34, 36], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "filelist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.demo.Demo.set_scale": [[37, 39], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2ksub.DIV2KSUB.__init__": [[13, 17], ["data.srdata.SRData.__init__", "max", "round"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ")", ":", "\n", "        ", "super", "(", "DIV2KSUB", ",", "self", ")", ".", "__init__", "(", "args", ",", "train", ")", "\n", "self", ".", "repeat", "=", "max", "(", "round", "(", "args", ".", "test_every", "/", "(", "args", ".", "n_train", "/", "args", ".", "batch_size", ")", ")", ",", "1", ")", "\n", "self", ".", "n_train", "=", "args", ".", "n_train", "\n", "", "def", "_scan", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2ksub.DIV2KSUB._scan": [[17, 23], ["sorted", "glob.glob", "sorted", "os.path.join", "glob.glob", "os.path.join"], "methods", ["None"], ["", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "list_hr", "=", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dir_hr", ",", "'*.png'", ")", ")", ")", "\n", "list_lr", "=", "[", "sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dir_lr", "+", "'{}'", ".", "format", "(", "s", ")", ",", "'*.png'", ")", ")", ")", "for", "s", "in", "self", ".", "scale", "]", "\n", "#for si, s in enumerate(self.scale):", "\n", "\n", "return", "list_hr", ",", "list_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2ksub.DIV2KSUB._set_filesystem": [[24, 29], ["os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "dir_data", "+", "'/DIV2K'", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'GT_sub'", ")", "\n", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'GT_sub_bicLRx'", ")", "\n", "self", ".", "ext", "=", "'.png'", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2ksub.DIV2KSUB._name_hrbin": [[30, 35], ["os.path.join"], "methods", ["None"], ["", "def", "_name_hrbin", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_HR.npy'", ".", "format", "(", "self", ".", "split", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2ksub.DIV2KSUB._name_lrbin": [[37, 42], ["os.path.join"], "methods", ["None"], ["", "def", "_name_lrbin", "(", "self", ",", "scale", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_LR_X{}.npy'", ".", "format", "(", "self", ".", "split", ",", "scale", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2ksub.DIV2KSUB.__len__": [[44, 49], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "self", ".", "n_train", "*", "self", ".", "repeat", "#len(self.images_hr) * self.repeat", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "n_train", "#len(self.images_hr)", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2ksub.DIV2KSUB._get_index": [[50, 55], ["None"], "methods", ["None"], ["", "", "def", "_get_index", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "idx", "%", "self", ".", "n_train", "#len(self.images_hr)", "\n", "", "else", ":", "\n", "            ", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData.__init__": [[12, 78], ["srdata.SRData._set_filesystem", "numpy.load", "srdata.SRData._scan", "srdata.SRData._name_hrbin", "numpy.load", "args.ext.find", "srdata.SRData._scan", "srdata.SRData._name_lrbin", "args.ext.find", "print", "enumerate", "v.replace", "args.ext.find", "print", "scipy.imread", "v.replace", "numpy.save", "v.replace", "range", "print", "srdata.SRData.__init__._load_bin"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark_texture_sr.BenchmarkTextureSR._set_filesystem", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark_texture_sr.BenchmarkTextureSR._scan", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._name_hrbin", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark_texture_sr.BenchmarkTextureSR._scan", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._name_lrbin", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "split", "=", "'train'", "if", "train", "else", "'test'", "\n", "self", ".", "benchmark", "=", "benchmark", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "color", "=", "'RGB'", "if", "args", ".", "n_colors", "==", "3", "else", "'Y'", "\n", "\n", "self", ".", "_set_filesystem", "(", "args", ".", "dir_data", ")", "\n", "\n", "def", "_load_bin", "(", ")", ":", "\n", "            ", "self", ".", "images_hr", "=", "np", ".", "load", "(", "self", ".", "_name_hrbin", "(", ")", ")", "\n", "self", ".", "images_lr", "=", "[", "\n", "np", ".", "load", "(", "self", ".", "_name_lrbin", "(", "s", ")", ")", "for", "s", "in", "self", ".", "scale", "\n", "]", "\n", "\n", "", "if", "args", ".", "ext", "==", "'img'", "or", "benchmark", ":", "\n", "            ", "self", ".", "images_hr", ",", "self", ".", "images_lr", "=", "self", ".", "_scan", "(", ")", "\n", "", "elif", "args", ".", "ext", ".", "find", "(", "'sep'", ")", ">=", "0", ":", "\n", "            ", "self", ".", "images_hr", ",", "self", ".", "images_lr", "=", "self", ".", "_scan", "(", ")", "\n", "if", "args", ".", "ext", ".", "find", "(", "'reset'", ")", ">=", "0", ":", "\n", "                ", "print", "(", "'Preparing seperated binary files'", ")", "\n", "for", "v", "in", "self", ".", "images_hr", ":", "\n", "\n", "                    ", "hr", "=", "misc", ".", "imread", "(", "v", ")", "\n", "name_sep", "=", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "\n", "np", ".", "save", "(", "name_sep", ",", "hr", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                    ", "for", "v", "in", "self", ".", "images_lr", "[", "si", "]", ":", "\n", "                        ", "lr", "=", "misc", ".", "imread", "(", "v", ")", "\n", "name_sep", "=", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "\n", "np", ".", "save", "(", "name_sep", ",", "lr", ")", "\n", "\n", "", "", "", "self", ".", "images_hr", "=", "[", "\n", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "for", "v", "in", "self", ".", "images_hr", "\n", "]", "\n", "self", ".", "images_lr", "=", "[", "\n", "[", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "for", "v", "in", "self", ".", "images_lr", "[", "i", "]", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "scale", ")", ")", "\n", "]", "\n", "# from IPython import embed; embed(); exit()", "\n", "", "elif", "args", ".", "ext", ".", "find", "(", "'bin'", ")", ">=", "0", ":", "\n", "            ", "try", ":", "\n", "                ", "if", "args", ".", "ext", ".", "find", "(", "'reset'", ")", ">=", "0", ":", "\n", "                    ", "raise", "IOError", "\n", "", "print", "(", "'Loading a binary file'", ")", "\n", "_load_bin", "(", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "'Preparing a binary file'", ")", "\n", "bin_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'bin'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "bin_path", ")", ":", "\n", "                    ", "os", ".", "mkdir", "(", "bin_path", ")", "\n", "\n", "", "list_hr", ",", "list_lr", "=", "self", ".", "_scan", "(", ")", "\n", "hr", "=", "[", "misc", ".", "imread", "(", "f", ")", "for", "f", "in", "list_hr", "]", "\n", "np", ".", "save", "(", "self", ".", "_name_hrbin", "(", ")", ",", "hr", ")", "\n", "del", "hr", "\n", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                    ", "lr_scale", "=", "[", "misc", ".", "imread", "(", "f", ")", "for", "f", "in", "list_lr", "[", "si", "]", "]", "\n", "np", ".", "save", "(", "self", ".", "_name_lrbin", "(", "s", ")", ",", "lr_scale", ")", "\n", "del", "lr_scale", "\n", "", "_load_bin", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "'Please define data type'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData._scan": [[79, 81], ["None"], "methods", ["None"], ["", "", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData._set_filesystem": [[82, 84], ["None"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData._name_hrbin": [[85, 87], ["None"], "methods", ["None"], ["", "def", "_name_hrbin", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData._name_lrbin": [[88, 90], ["None"], "methods", ["None"], ["", "def", "_name_lrbin", "(", "self", ",", "scale", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData.__getitem__": [[91, 97], ["srdata.SRData._load_file", "srdata.SRData._get_patch", "torch.common.set_channel", "torch.common.np2Tensor"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._load_file", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._get_patch", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.set_channel", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.np2Tensor"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "lr", ",", "hr", ",", "filename", "=", "self", ".", "_load_file", "(", "idx", ")", "\n", "lr", ",", "hr", "=", "self", ".", "_get_patch", "(", "lr", ",", "hr", ")", "\n", "lr", ",", "hr", "=", "common", ".", "set_channel", "(", "[", "lr", ",", "hr", "]", ",", "self", ".", "args", ".", "n_colors", ")", "\n", "lr_tensor", ",", "hr_tensor", "=", "common", ".", "np2Tensor", "(", "[", "lr", ",", "hr", "]", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "return", "lr_tensor", ",", "hr_tensor", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData.__len__": [[98, 100], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images_hr", ")", "if", "not", "self", ".", "benchmark", "else", "len", "(", "self", ".", "images_hr", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData._get_index": [[101, 103], ["None"], "methods", ["None"], ["", "def", "_get_index", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData._load_file": [[104, 123], ["srdata.SRData._get_index", "scipy.imread", "scipy.imread", "os.path.splitext", "srdata.SRData.args.ext.find", "numpy.load", "numpy.load", "str", "os.path.split"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._get_index", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load"], ["", "def", "_load_file", "(", "self", ",", "idx", ")", ":", "\n", "        ", "idx", "=", "self", ".", "_get_index", "(", "idx", ")", "\n", "# from IPython import embed; embed()", "\n", "lr", "=", "self", ".", "images_lr", "[", "self", ".", "idx_scale", "]", "[", "idx", "]", "\n", "hr", "=", "self", ".", "images_hr", "[", "idx", "]", "if", "not", "self", ".", "benchmark", "else", "self", ".", "images_hr", "[", "self", ".", "idx_scale", "]", "[", "idx", "]", "\n", "if", "self", ".", "args", ".", "ext", "==", "'img'", "or", "self", ".", "benchmark", ":", "\n", "            ", "filename", "=", "hr", "\n", "lr", "=", "misc", ".", "imread", "(", "lr", ")", "\n", "hr", "=", "misc", ".", "imread", "(", "hr", ")", "\n", "", "elif", "self", ".", "args", ".", "ext", ".", "find", "(", "'sep'", ")", ">=", "0", ":", "\n", "            ", "filename", "=", "hr", "\n", "lr", "=", "np", ".", "load", "(", "lr", ")", "\n", "hr", "=", "np", ".", "load", "(", "hr", ")", "\n", "", "else", ":", "\n", "            ", "filename", "=", "str", "(", "idx", "+", "1", ")", "\n", "\n", "", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "filename", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "lr", ",", "hr", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData._get_patch": [[124, 140], ["len", "torch.common.get_patch", "torch.common.augment", "torch.common.add_noise"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.get_patch", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.augment", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.add_noise"], ["", "def", "_get_patch", "(", "self", ",", "lr", ",", "hr", ")", ":", "\n", "        ", "patch_size", "=", "self", ".", "args", ".", "patch_size", "\n", "scale", "=", "self", ".", "scale", "[", "self", ".", "idx_scale", "]", "\n", "multi_scale", "=", "len", "(", "self", ".", "scale", ")", ">", "1", "\n", "if", "self", ".", "train", ":", "\n", "#from IPython import embed; embed(); exit()", "\n", "            ", "lr", ",", "hr", "=", "common", ".", "get_patch", "(", "\n", "lr", ",", "hr", ",", "patch_size", ",", "scale", ",", "multi_scale", "=", "multi_scale", "\n", ")", "\n", "lr", ",", "hr", "=", "common", ".", "augment", "(", "[", "lr", ",", "hr", "]", ")", "\n", "lr", "=", "common", ".", "add_noise", "(", "lr", ",", "self", ".", "args", ".", "noise", ")", "\n", "", "else", ":", "\n", "            ", "ih", ",", "iw", "=", "lr", ".", "shape", "[", "0", ":", "2", "]", "\n", "hr", "=", "hr", "[", "0", ":", "ih", "*", "scale", ",", "0", ":", "iw", "*", "scale", "]", "\n", "\n", "", "return", "lr", ",", "hr", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srdata.SRData.set_scale": [[141, 143], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData.__init__": [[15, 106], ["srtexture.SRData._set_filesystem", "numpy.load", "srtexture.SRData._scan", "srtexture.SRData._name_hrbin", "numpy.load", "args.ext.find", "srtexture.SRData._scan", "srtexture.SRData._name_lrbin", "args.ext.find", "print", "enumerate", "v.replace", "args.ext.find", "print", "scipy.imread", "v.replace", "numpy.save", "range", "v.replace", "range", "v.replace", "range", "v.replace", "range", "print", "srtexture.SRData.__init__._load_bin"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark_texture_sr.BenchmarkTextureSR._set_filesystem", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark_texture_sr.BenchmarkTextureSR._scan", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._name_hrbin", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark_texture_sr.BenchmarkTextureSR._scan", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._name_lrbin", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "split", "=", "'train'", "if", "train", "else", "'test'", "\n", "self", ".", "benchmark", "=", "benchmark", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "color", "=", "'RGB'", "if", "args", ".", "n_colors", "==", "3", "else", "'Y'", "\n", "self", ".", "model_one", "=", "args", ".", "model_one", "==", "'one'", "\n", "self", ".", "model_flag", "=", "args", ".", "model", "\n", "self", ".", "data_train", "=", "args", ".", "data_train", "\n", "self", ".", "subset", "=", "args", ".", "subset", "\n", "self", ".", "normal_lr", "=", "args", ".", "normal_lr", "==", "'lr'", "\n", "self", ".", "input_res", "=", "args", ".", "input_res", "\n", "self", ".", "_set_filesystem", "(", "args", ".", "dir_data", ")", "\n", "\n", "def", "_load_bin", "(", ")", ":", "\n", "            ", "self", ".", "images_hr", "=", "np", ".", "load", "(", "self", ".", "_name_hrbin", "(", ")", ")", "\n", "self", ".", "images_lr", "=", "[", "\n", "np", ".", "load", "(", "self", ".", "_name_lrbin", "(", "s", ")", ")", "for", "s", "in", "self", ".", "scale", "\n", "]", "\n", "\n", "", "if", "args", ".", "ext", "==", "'img'", "or", "benchmark", ":", "\n", "            ", "self", ".", "images_hr", ",", "self", ".", "images_lr", ",", "self", ".", "normals_lr", ",", "self", ".", "masks_lr", "=", "self", ".", "_scan", "(", ")", "\n", "", "elif", "args", ".", "ext", ".", "find", "(", "'sep'", ")", ">=", "0", ":", "\n", "            ", "self", ".", "images_hr", ",", "self", ".", "images_lr", ",", "self", ".", "normals_lr", ",", "self", ".", "masks_lr", "=", "self", ".", "_scan", "(", ")", "\n", "if", "args", ".", "ext", ".", "find", "(", "'reset'", ")", ">=", "0", ":", "\n", "                ", "print", "(", "'Preparing seperated binary files'", ")", "\n", "for", "v", "in", "self", ".", "images_hr", ":", "\n", "\n", "                    ", "hr", "=", "misc", ".", "imread", "(", "v", ")", "\n", "name_sep", "=", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "\n", "np", ".", "save", "(", "name_sep", ",", "hr", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                    ", "for", "n", "in", "range", "(", "len", "(", "self", ".", "images_lr", "[", "si", "]", ")", ")", ":", "\n", "                        ", "v", "=", "self", ".", "images_lr", "[", "si", "]", "[", "n", "]", "\n", "#from IPython import embed; embed(); exit()", "\n", "lr", "=", "misc", ".", "imread", "(", "v", ")", "\n", "name_sep", "=", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "\n", "np", ".", "save", "(", "name_sep", ",", "lr", ")", "\n", "\n", "v", "=", "self", ".", "normals_lr", "[", "si", "]", "[", "n", "]", "\n", "lr", "=", "misc", ".", "imread", "(", "v", ")", "\n", "name_sep", "=", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "\n", "np", ".", "save", "(", "name_sep", ",", "lr", ")", "\n", "\n", "v", "=", "self", ".", "masks_lr", "[", "si", "]", "[", "n", "]", "\n", "lr", "=", "np", ".", "expand_dims", "(", "misc", ".", "imread", "(", "v", ")", ",", "2", ")", "\n", "name_sep", "=", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "\n", "np", ".", "save", "(", "name_sep", ",", "lr", ")", "\n", "# from IPython import embed; embed(); exit()", "\n", "", "", "", "self", ".", "images_hr", "=", "[", "\n", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "for", "v", "in", "self", ".", "images_hr", "\n", "]", "\n", "self", ".", "images_lr", "=", "[", "\n", "[", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "for", "v", "in", "self", ".", "images_lr", "[", "i", "]", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "scale", ")", ")", "\n", "]", "\n", "self", ".", "normals_lr", "=", "[", "\n", "[", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "for", "v", "in", "self", ".", "normals_lr", "[", "i", "]", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "scale", ")", ")", "\n", "]", "\n", "self", ".", "masks_lr", "=", "[", "\n", "[", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "for", "v", "in", "self", ".", "masks_lr", "[", "i", "]", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "scale", ")", ")", "\n", "]", "\n", "# from IPython import embed; embed(); exit()", "\n", "", "elif", "args", ".", "ext", ".", "find", "(", "'bin'", ")", ">=", "0", ":", "\n", "            ", "try", ":", "\n", "                ", "if", "args", ".", "ext", ".", "find", "(", "'reset'", ")", ">=", "0", ":", "\n", "                    ", "raise", "IOError", "\n", "", "print", "(", "'Loading a binary file'", ")", "\n", "_load_bin", "(", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "'Preparing a binary file'", ")", "\n", "bin_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'bin'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "bin_path", ")", ":", "\n", "                    ", "os", ".", "mkdir", "(", "bin_path", ")", "\n", "\n", "", "list_hr", ",", "list_lr", "=", "self", ".", "_scan", "(", ")", "\n", "hr", "=", "[", "misc", ".", "imread", "(", "f", ")", "for", "f", "in", "list_hr", "]", "\n", "np", ".", "save", "(", "self", ".", "_name_hrbin", "(", ")", ",", "hr", ")", "\n", "del", "hr", "\n", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                    ", "lr_scale", "=", "[", "misc", ".", "imread", "(", "f", ")", "for", "f", "in", "list_lr", "[", "si", "]", "]", "\n", "np", ".", "save", "(", "self", ".", "_name_lrbin", "(", "s", ")", ",", "lr_scale", ")", "\n", "del", "lr_scale", "\n", "", "_load_bin", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "'Please define data type'", ")", "\n", "# from IPython import embed; embed(); exit()", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._scan": [[107, 109], ["None"], "methods", ["None"], ["", "", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._set_filesystem": [[110, 112], ["None"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._name_hrbin": [[113, 115], ["None"], "methods", ["None"], ["", "def", "_name_hrbin", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._name_lrbin": [[116, 118], ["None"], "methods", ["None"], ["", "def", "_name_lrbin", "(", "self", ",", "scale", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData.__getitem__": [[119, 127], ["srtexture.SRData._load_file", "srtexture.SRData._get_patch", "torch.common.set_channel", "torch.common.np2Tensor"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._load_file", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._get_patch", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.set_channel", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.np2Tensor"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "lr", ",", "nl", ",", "mk", ",", "hr", ",", "filename", "=", "self", ".", "_load_file", "(", "idx", ")", "\n", "lr", ",", "nl", ",", "mk", ",", "hr", "=", "self", ".", "_get_patch", "(", "lr", ",", "nl", ",", "mk", ",", "hr", ")", "\n", "lr", ",", "hr", "=", "common", ".", "set_channel", "(", "[", "lr", ",", "hr", "]", ",", "self", ".", "args", ".", "n_colors", ")", "\n", "#print('The size of lr, hr images are {}, {}'.format(lr.shape, hr.shape))", "\n", "lr_tensor", ",", "nl_tensor", ",", "mk_tensor", ",", "hr_tensor", "=", "common", ".", "np2Tensor", "(", "[", "lr", ",", "nl", ",", "mk", ",", "hr", "]", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "# if self.model_flag.lower() == 'finetune':", "\n", "return", "lr_tensor", ",", "nl_tensor", ",", "mk_tensor", ",", "hr_tensor", ",", "filename", "\n", "# else:", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData.__len__": [[130, 132], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images_hr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._get_index": [[133, 135], ["None"], "methods", ["None"], ["", "def", "_get_index", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._load_file": [[136, 167], ["srtexture.SRData._get_index", "scipy.imread", "scipy.imread", "scipy.imread", "scipy.imread", "os.path.splitext", "srtexture.SRData.args.ext.find", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "str", "os.path.split"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._get_index", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load"], ["", "def", "_load_file", "(", "self", ",", "idx", ")", ":", "\n", "        ", "idx", "=", "self", ".", "_get_index", "(", "idx", ")", "\n", "# from IPython import embed; embed()", "\n", "# print('The hr images are {}'.format(self.images_hr))", "\n", "lr", "=", "self", ".", "images_lr", "[", "self", ".", "idx_scale", "]", "[", "idx", "]", "\n", "nl", "=", "self", ".", "normals_lr", "[", "self", ".", "idx_scale", "]", "[", "idx", "]", "\n", "mk", "=", "self", ".", "masks_lr", "[", "self", ".", "idx_scale", "]", "[", "idx", "]", "\n", "hr", "=", "self", ".", "images_hr", "[", "idx", "]", "\n", "\n", "# print(self.images_hr)", "\n", "# print('......................................................')", "\n", "# print(hr)", "\n", "if", "self", ".", "args", ".", "ext", "==", "'img'", "or", "self", ".", "benchmark", ":", "\n", "            ", "filename", "=", "hr", "\n", "lr", "=", "misc", ".", "imread", "(", "lr", ")", "\n", "nl", "=", "misc", ".", "imread", "(", "nl", ")", "\n", "mk", "=", "misc", ".", "imread", "(", "mk", ")", "\n", "hr", "=", "misc", ".", "imread", "(", "hr", ")", "\n", "", "elif", "self", ".", "args", ".", "ext", ".", "find", "(", "'sep'", ")", ">=", "0", ":", "\n", "            ", "filename", "=", "hr", "\n", "lr", "=", "np", ".", "load", "(", "lr", ")", "\n", "nl", "=", "np", ".", "load", "(", "nl", ")", "\n", "mk", "=", "np", ".", "load", "(", "mk", ")", "\n", "hr", "=", "np", ".", "load", "(", "hr", ")", "\n", "\n", "", "else", ":", "\n", "            ", "filename", "=", "str", "(", "idx", "+", "1", ")", "\n", "#print('The resolution of lr, hr images are {}, {}'.format(lr.shape, hr.shape))", "\n", "", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "filename", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "#print('the filename is {}'.format(filename))", "\n", "return", "lr", ",", "nl", ",", "mk", ",", "hr", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData._get_patch": [[168, 186], ["len", "srtexture.SRData.get_patch", "torch.common.augment", "torch.common.add_noise"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.get_patch", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.augment", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.add_noise"], ["", "def", "_get_patch", "(", "self", ",", "lr", ",", "nl", ",", "mk", ",", "hr", ")", ":", "\n", "        ", "patch_size", "=", "self", ".", "args", ".", "patch_size", "\n", "scale", "=", "self", ".", "scale", "[", "self", ".", "idx_scale", "]", "\n", "multi_scale", "=", "len", "(", "self", ".", "scale", ")", ">", "1", "\n", "if", "self", ".", "train", ":", "\n", "#from IPython import embed; embed(); exit()", "\n", "            ", "lr", ",", "nl", ",", "mk", ",", "hr", "=", "self", ".", "get_patch", "(", "\n", "lr", ",", "nl", ",", "mk", ",", "hr", ",", "patch_size", ",", "scale", ",", "multi_scale", "=", "multi_scale", "\n", ")", "\n", "lr", ",", "nl", ",", "mk", ",", "hr", "=", "common", ".", "augment", "(", "[", "lr", ",", "nl", ",", "mk", ",", "hr", "]", ")", "\n", "lr", "=", "common", ".", "add_noise", "(", "lr", ",", "self", ".", "args", ".", "noise", ")", "\n", "", "else", ":", "\n", "            ", "ih", ",", "iw", "=", "lr", ".", "shape", "[", "0", ":", "2", "]", "\n", "hr", "=", "hr", "[", "0", ":", "ih", "*", "scale", ",", "0", ":", "iw", "*", "scale", "]", "\n", "if", "not", "self", ".", "normal_lr", ":", "\n", "                ", "nl", "=", "nl", "[", "0", ":", "ih", "*", "scale", ",", "0", ":", "iw", "*", "scale", "]", "\n", "\n", "", "", "return", "lr", ",", "nl", ",", "mk", ",", "hr", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData.get_patch": [[187, 212], ["random.randrange", "random.randrange"], "methods", ["None"], ["", "def", "get_patch", "(", "self", ",", "img_in", ",", "nml_in", ",", "msk_in", ",", "img_tar", ",", "patch_size", ",", "scale", ",", "multi_scale", "=", "False", ")", ":", "\n", "        ", "ih", ",", "iw", "=", "img_in", ".", "shape", "[", ":", "2", "]", "\n", "\n", "p", "=", "scale", "if", "multi_scale", "else", "1", "\n", "tp", "=", "p", "*", "patch_size", "\n", "ip", "=", "tp", "//", "scale", "\n", "\n", "ix", "=", "random", ".", "randrange", "(", "0", ",", "iw", "-", "ip", "+", "1", ")", "\n", "iy", "=", "random", ".", "randrange", "(", "0", ",", "ih", "-", "ip", "+", "1", ")", "\n", "tx", ",", "ty", "=", "scale", "*", "ix", ",", "scale", "*", "iy", "\n", "if", "self", ".", "input_res", "==", "'lr'", ":", "\n", "            ", "img_in", "=", "img_in", "[", "iy", ":", "iy", "+", "ip", ",", "ix", ":", "ix", "+", "ip", ",", ":", "]", "\n", "msk_in", "=", "msk_in", "[", "iy", ":", "iy", "+", "ip", ",", "ix", ":", "ix", "+", "ip", "]", "\n", "img_tar", "=", "img_tar", "[", "ty", ":", "ty", "+", "tp", ",", "tx", ":", "tx", "+", "tp", ",", ":", "]", "\n", "if", "self", ".", "normal_lr", ":", "\n", "                ", "nml_in", "=", "nml_in", "[", "iy", ":", "iy", "+", "ip", ",", "ix", ":", "ix", "+", "ip", ",", ":", "]", "\n", "", "else", ":", "\n", "                ", "nml_in", "=", "nml_in", "[", "ty", ":", "ty", "+", "tp", ",", "tx", ":", "tx", "+", "tp", ",", ":", "]", "\n", "", "", "else", ":", "\n", "            ", "img_in", "=", "img_in", "[", "iy", ":", "iy", "+", "ip", ",", "ix", ":", "ix", "+", "ip", ",", ":", "]", "\n", "msk_in", "=", "msk_in", "[", "iy", ":", "iy", "+", "ip", ",", "ix", ":", "ix", "+", "ip", "]", "\n", "img_tar", "=", "img_tar", "[", "iy", ":", "iy", "+", "ip", ",", "ix", ":", "ix", "+", "ip", ",", ":", "]", "\n", "nml_in", "=", "nml_in", "[", "iy", ":", "iy", "+", "ip", ",", "ix", ":", "ix", "+", "ip", ",", ":", "]", "\n", "\n", "", "return", "img_in", ",", "nml_in", ",", "msk_in", ",", "img_tar", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.srtexture.SRData.set_scale": [[213, 215], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.get_patch": [[11, 26], ["random.randrange", "random.randrange"], "function", ["None"], ["in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ")", "\n", "\n", "", "def", "act_vconv", "(", "res_act", ")", ":", "\n", "    ", "res_act", "=", "res_act", ".", "lower", "(", ")", "\n", "if", "res_act", "==", "'softplus'", ":", "\n", "        ", "act", "=", "nn", ".", "Softplus", "(", ")", "\n", "", "elif", "res_act", "==", "'sigmoid'", ":", "\n", "        ", "act", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "res_act", "==", "'tanh'", ":", "\n", "        ", "act", "=", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "res_act", "==", "'elu'", ":", "\n", "        ", "act", "=", "nn", ".", "ELU", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "return", "act", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.set_channel": [[27, 41], ["common.set_channel._set_channel"], "function", ["None"], ["\n", "", "class", "MeanShift", "(", "nn", ".", "Conv2d", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "sign", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "MeanShift", ",", "self", ")", ".", "__init__", "(", "3", ",", "3", ",", "kernel_size", "=", "1", ")", "\n", "std", "=", "torch", ".", "Tensor", "(", "rgb_std", ")", "\n", "self", ".", "weight", ".", "data", "=", "torch", ".", "eye", "(", "3", ")", ".", "view", "(", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "weight", ".", "data", ".", "div_", "(", "std", ".", "view", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bias", ".", "data", "=", "sign", "*", "rgb_range", "*", "torch", ".", "Tensor", "(", "rgb_mean", ")", "\n", "self", ".", "bias", ".", "data", ".", "div_", "(", "std", ")", "\n", "self", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "class", "GroupNorm", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_groups", "=", "32", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", "GroupNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "num_features", ",", "1", ",", "1", ")", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.np2Tensor": [[42, 51], ["numpy.ascontiguousarray", "torch.from_numpy().float", "torch.from_numpy().float.mul_", "common.np2Tensor._np2Tensor"], "function", ["None"], ["self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_features", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "num_groups", "=", "num_groups", "\n", "self", ".", "eps", "=", "eps", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "G", "=", "self", ".", "num_groups", "\n", "assert", "C", "%", "G", "==", "0", "\n", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "G", ",", "-", "1", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.add_noise": [[52, 68], ["int", "x_noise.clip().astype.clip().astype", "numpy.random.normal", "noises.round.round", "x.astype", "noises.round.astype", "x_noise.clip().astype.clip", "numpy.random.poisson", "noises.round.mean().mean", "noises.round.mean"], "function", ["None"], ["mean", "=", "x", ".", "mean", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "var", "=", "x", ".", "var", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "x", "=", "(", "x", "-", "mean", ")", "/", "(", "var", "+", "self", ".", "eps", ")", ".", "sqrt", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "C", ",", "H", ",", "W", ")", "\n", "return", "x", "*", "self", ".", "weight", "+", "self", ".", "bias", "\n", "\n", "", "", "class", "BasicBlock", "(", "nn", ".", "Sequential", ")", ":", "\n", "    ", "def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "bias", "=", "False", ",", "\n", "bn", "=", "True", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "\n", "        ", "m", "=", "[", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ")", "\n", "]", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.common.augment": [[69, 82], ["common.augment._augment"], "function", ["None"], ["if", "act", "is", "not", "None", ":", "m", ".", "append", "(", "act", ")", "\n", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n", "", "", "class", "ResBlock", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ",", "num_conv", "=", "2", ")", ":", "\n", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "m", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_conv", ")", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "m", ".", "append", "(", "act", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture.texture.__init__": [[16, 30], ["data.srtexture.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ")", ":", "\n", "        ", "super", "(", "texture", ",", "self", ")", ".", "__init__", "(", "args", ",", "train", ")", "\n", "\n", "if", "self", ".", "subset", "==", "'.'", ":", "\n", "            ", "self", ".", "num_all", "=", "24", "\n", "self", ".", "num_split", "=", "12", "\n", "if", "train", ":", "\n", "                ", "self", ".", "repeat", "=", "args", ".", "test_every", "//", "(", "self", ".", "num_split", "//", "args", ".", "batch_size", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "num_all", "=", "self", ".", "all", "[", "self", ".", "subset_idx", "[", "0", "]", "]", "\n", "if", "(", "self", ".", "train", "and", "self", ".", "model_one", ")", "or", "(", "not", "self", ".", "train", "and", "not", "self", ".", "model_one", ")", ":", "\n", "                ", "self", ".", "num_split", "=", "self", ".", "split", "[", "self", ".", "subset_idx", "[", "0", "]", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "num_split", "=", "self", ".", "num_all", "-", "self", ".", "split", "[", "self", ".", "subset_idx", "[", "0", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture.texture._scan": [[31, 59], ["enumerate", "list", "os.path.join", "sorted", "range", "texture.texture.set.index", "glob.glob", "n.replace", "n.replace().replace().replace", "n.replace().replace().replace", "n.replace().replace", "n.replace().replace", "n.replace().replace", "n.replace", "n.replace", "n.replace"], "methods", ["None"], ["", "", "", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "list_hr", "=", "[", "]", "\n", "list_lr", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "list_lr_normal", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "list_lr_mask", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "self", ".", "subset_idx", "=", "list", "(", "range", "(", "4", ")", ")", "if", "self", ".", "subset", "==", "'.'", "else", "[", "self", ".", "set", ".", "index", "(", "self", ".", "subset", ")", "]", "\n", "for", "s", "in", "self", ".", "subset_idx", ":", "\n", "            ", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "self", ".", "set", "[", "s", "]", ",", "'x1/Texture/*.png'", ")", "\n", "list_hr_set", "=", "sorted", "(", "glob", ".", "glob", "(", "dir_hr", ")", ")", "\n", "if", "self", ".", "data_train", "==", "'texture'", ":", "\n", "                ", "if", "(", "self", ".", "train", "and", "self", ".", "model_one", ")", "or", "(", "not", "self", ".", "train", "and", "not", "self", ".", "model_one", ")", ":", "\n", "                    ", "list_hr_split", "=", "list_hr_set", "[", ":", "self", ".", "split", "[", "s", "]", "]", "\n", "list_hr", "+=", "list_hr_split", "\n", "", "else", ":", "\n", "                    ", "list_hr_split", "=", "list_hr_set", "[", "self", ".", "split", "[", "s", "]", ":", "]", "\n", "list_hr", "+=", "list_hr_split", "\n", "", "", "else", ":", "\n", "                ", "list_hr", "+=", "list_hr_set", "\n", "", "", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "            ", "list_lr", "[", "si", "]", "=", "[", "n", ".", "replace", "(", "'x1'", ",", "'x{}'", ".", "format", "(", "s", ")", ")", "for", "n", "in", "list_hr", "]", "\n", "if", "self", ".", "normal_lr", ":", "\n", "# from IPython import embed; embed(); exit()", "\n", "                ", "list_lr_normal", "[", "si", "]", "=", "[", "n", ".", "replace", "(", "'x1'", ",", "'x{}'", ".", "format", "(", "s", ")", ")", ".", "replace", "(", "'Texture/'", ",", "'normal/'", ")", ".", "replace", "(", "'Texture.png'", ",", "'normal.png'", ")", "for", "n", "in", "list_hr", "]", "\n", "", "else", ":", "\n", "                ", "list_lr_normal", "[", "si", "]", "=", "[", "n", ".", "replace", "(", "'Texture/'", ",", "'normal/'", ")", ".", "replace", "(", "'Texture.png'", ",", "'normal.png'", ")", "for", "n", "in", "list_hr", "]", "\n", "", "list_lr_mask", "[", "si", "]", "=", "[", "n", ".", "replace", "(", "'x1'", ",", "'x{}'", ".", "format", "(", "s", ")", ")", ".", "replace", "(", "'Texture/'", ",", "'mask/'", ")", ".", "replace", "(", "'Texture.png'", ",", "'mask.png'", ")", "for", "n", "in", "list_hr", "]", "\n", "# from IPython import embed; embed(); exit()", "\n", "", "return", "list_hr", ",", "list_lr", ",", "list_lr_normal", ",", "list_lr_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture.texture._set_filesystem": [[60, 66], ["None"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "dir_data", "+", "'Texture_map'", "\n", "self", ".", "set", "=", "[", "'MiddleBury'", ",", "'ETH3D'", ",", "'Collection'", ",", "'SyB3R'", "]", "\n", "self", ".", "ext", "=", "'.png'", "\n", "self", ".", "split", "=", "[", "1", ",", "6", ",", "3", ",", "2", "]", "#[1, 7, 3, 1]", "\n", "self", ".", "all", "=", "[", "2", ",", "13", ",", "6", ",", "3", "]", "\n", "# if self.model_one:", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture.texture._name_hrbin": [[69, 74], ["os.path.join"], "methods", ["None"], ["", "def", "_name_hrbin", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_HR.npy'", ".", "format", "(", "self", ".", "split", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture.texture._name_lrbin": [[76, 81], ["os.path.join"], "methods", ["None"], ["", "def", "_name_lrbin", "(", "self", ",", "scale", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_LR_X{}.npy'", ".", "format", "(", "self", ".", "split", ",", "scale", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture.texture.__len__": [[83, 94], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "if", "self", ".", "subset", "==", "'.'", ":", "\n", "                ", "return", "self", ".", "num_split", "*", "self", ".", "repeat", "\n", "", "else", ":", "\n", "                ", "return", "2400", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "data_train", "==", "'texture'", ":", "\n", "                ", "return", "self", ".", "num_split", "\n", "", "else", ":", "\n", "                ", "return", "self", ".", "num_all", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture.texture._get_index": [[95, 100], ["None"], "methods", ["None"], ["", "", "", "def", "_get_index", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "idx", "%", "self", ".", "num_split", "\n", "", "else", ":", "\n", "            ", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark.Benchmark.__init__": [[12, 14], ["data.srdata.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ")", ":", "\n", "        ", "super", "(", "Benchmark", ",", "self", ")", ".", "__init__", "(", "args", ",", "train", ",", "benchmark", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark.Benchmark._scan": [[34, 42], ["list_hr.append", "list_lr.append", "sorted", "sorted", "glob.glob", "glob.glob", "benchmark.Benchmark.dir_hr.format", "benchmark.Benchmark.dir_lr.format"], "methods", ["None"], ["", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "list_hr", "=", "[", "]", "\n", "list_lr", "=", "[", "]", "\n", "for", "s", "in", "self", ".", "scale", ":", "\n", "            ", "list_hr", ".", "append", "(", "sorted", "(", "glob", ".", "glob", "(", "self", ".", "dir_hr", ".", "format", "(", "s", ",", "self", ".", "color", ")", ")", ")", ")", "\n", "list_lr", ".", "append", "(", "sorted", "(", "glob", ".", "glob", "(", "self", ".", "dir_lr", ".", "format", "(", "s", ",", "self", ".", "color", ")", ")", ")", ")", "\n", "\n", "", "return", "list_hr", ",", "list_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark.Benchmark._set_filesystem": [[43, 48], ["os.path.join"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "os", ".", "path", ".", "join", "(", "dir_data", ",", "'Test'", ",", "self", ".", "args", ".", "data_test", ")", "\n", "self", ".", "dir_hr", "=", "self", ".", "apath", "+", "'_X{}_high{}/*.png'", "\n", "self", ".", "dir_lr", "=", "self", ".", "apath", "+", "'_X{}_low{}/*.png'", "\n", "self", ".", "ext", "=", "'.png'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture_hr.texture_hr.__init__": [[16, 29], ["data.srtexture.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ")", ":", "\n", "        ", "super", "(", "texture_hr", ",", "self", ")", ".", "__init__", "(", "args", ",", "train", ")", "\n", "\n", "if", "self", ".", "subset", "==", "'.'", ":", "\n", "            ", "self", ".", "num_all", "=", "8", "\n", "self", ".", "num_split", "=", "4", "\n", "#self.repeat = args.test_every // (self.num_split // args.batch_size)", "\n", "", "else", ":", "\n", "            ", "self", ".", "num_all", "=", "self", ".", "all", "[", "self", ".", "subset_idx", "[", "0", "]", "]", "\n", "if", "(", "self", ".", "train", "and", "self", ".", "model_one", ")", "or", "(", "not", "self", ".", "train", "and", "not", "self", ".", "model_one", ")", ":", "\n", "                ", "self", ".", "num_split", "=", "self", ".", "split", "[", "self", ".", "subset_idx", "[", "0", "]", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "num_split", "=", "self", ".", "num_all", "-", "self", ".", "split", "[", "self", ".", "subset_idx", "[", "0", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture_hr.texture_hr._scan": [[30, 55], ["enumerate", "os.path.join", "sorted", "texture_hr.texture_hr.set.index", "glob.glob", "n.replace().replace", "n.replace", "n.replace", "n.replace"], "methods", ["None"], ["", "", "", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "list_hr", "=", "[", "]", "\n", "list_lr", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "list_lr_normal", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "list_lr_mask", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "self", ".", "subset_idx", "=", "[", "0", ",", "2", "]", "if", "self", ".", "subset", "==", "'.'", "else", "[", "self", ".", "set", ".", "index", "(", "self", ".", "subset", ")", "]", "\n", "for", "s", "in", "self", ".", "subset_idx", ":", "\n", "            ", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "self", ".", "set", "[", "s", "]", ",", "'x1/Texture/*.png'", ")", "\n", "list_hr_set", "=", "sorted", "(", "glob", ".", "glob", "(", "dir_hr", ")", ")", "\n", "if", "self", ".", "data_train", "==", "'texture_hr'", ":", "\n", "                ", "if", "(", "self", ".", "train", "and", "self", ".", "model_one", ")", "or", "(", "not", "self", ".", "train", "and", "not", "self", ".", "model_one", ")", ":", "\n", "                    ", "list_hr_split", "=", "list_hr_set", "[", ":", "self", ".", "split", "[", "s", "]", "]", "\n", "list_hr", "+=", "list_hr_split", "\n", "", "else", ":", "\n", "                    ", "list_hr_split", "=", "list_hr_set", "[", "self", ".", "split", "[", "s", "]", ":", "]", "\n", "list_hr", "+=", "list_hr_split", "\n", "", "", "else", ":", "\n", "                ", "list_hr", "+=", "list_hr_set", "\n", "", "", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "            ", "list_lr", "[", "si", "]", "=", "[", "n", ".", "replace", "(", "'/scratch_net/ofsoundof/yawli/Datasets/texture_map'", ",", "'/home/yawli/Documents/3d-appearance-benchmark/SR/texture'", ")", ".", "replace", "(", "'x1/Texture'", ",", "'x{}'", ".", "format", "(", "s", ")", ")", "for", "n", "in", "list_hr", "]", "\n", "#list_lr[si] = [n.replace('MiddleBury', 'ColMapMiddlebury') if 'MiddleBury' in n else n for n in list_lr[si]]", "\n", "list_lr_normal", "[", "si", "]", "=", "[", "n", ".", "replace", "(", "'Texture'", ",", "'normal'", ")", "for", "n", "in", "list_hr", "]", "\n", "list_lr_mask", "[", "si", "]", "=", "[", "n", ".", "replace", "(", "'Texture'", ",", "'mask'", ")", "for", "n", "in", "list_hr", "]", "\n", "#from IPython import embed; embed(); exit()", "\n", "", "return", "list_hr", ",", "list_lr", ",", "list_lr_normal", ",", "list_lr_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture_hr.texture_hr._set_filesystem": [[56, 62], ["None"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "dir_data", "+", "'/texture_map'", "\n", "self", ".", "set", "=", "[", "'MiddleBury'", ",", "'ETH3D'", ",", "'Collection'", ",", "'SyB3R'", "]", "\n", "self", ".", "ext", "=", "'.png'", "\n", "self", ".", "split", "=", "[", "1", ",", "6", ",", "3", ",", "2", "]", "#[1, 7, 3, 1]", "\n", "self", ".", "all", "=", "[", "2", ",", "13", ",", "6", ",", "3", "]", "\n", "# if self.model_one:", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture_hr.texture_hr._name_hrbin": [[65, 70], ["os.path.join"], "methods", ["None"], ["", "def", "_name_hrbin", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_HR.npy'", ".", "format", "(", "self", ".", "split", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture_hr.texture_hr._name_lrbin": [[72, 77], ["os.path.join"], "methods", ["None"], ["", "def", "_name_lrbin", "(", "self", ",", "scale", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_LR_X{}.npy'", ".", "format", "(", "self", ".", "split", ",", "scale", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture_hr.texture_hr.__len__": [[79, 90], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "if", "self", ".", "subset", "==", "'.'", ":", "\n", "                ", "return", "2400", "\n", "", "else", ":", "\n", "                ", "return", "2400", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "data_train", "==", "'texture_hr'", ":", "\n", "                ", "return", "self", ".", "num_split", "\n", "", "else", ":", "\n", "                ", "return", "self", ".", "num_all", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.texture_hr.texture_hr._get_index": [[91, 96], ["None"], "methods", ["None"], ["", "", "", "def", "_get_index", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "idx", "%", "self", ".", "num_split", "\n", "", "else", ":", "\n", "            ", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K.__init__": [[13, 16], ["data.srdata.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ")", ":", "\n", "        ", "super", "(", "DIV2K", ",", "self", ")", ".", "__init__", "(", "args", ",", "train", ")", "\n", "self", ".", "repeat", "=", "args", ".", "test_every", "//", "(", "args", ".", "n_train", "//", "args", ".", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._scan": [[17, 37], ["range", "list_hr.append", "enumerate", "os.path.join", "list_lr[].append", "os.path.join"], "methods", ["None"], ["", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "list_hr", "=", "[", "]", "\n", "list_lr", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "if", "self", ".", "train", ":", "\n", "            ", "idx_begin", "=", "0", "\n", "idx_end", "=", "self", ".", "args", ".", "n_train", "\n", "", "else", ":", "\n", "            ", "idx_begin", "=", "self", ".", "args", ".", "n_train", "\n", "idx_end", "=", "self", ".", "args", ".", "offset_val", "+", "self", ".", "args", ".", "n_val", "\n", "\n", "", "for", "i", "in", "range", "(", "idx_begin", "+", "1", ",", "idx_end", "+", "1", ")", ":", "\n", "            ", "filename", "=", "'{:0>4}'", ".", "format", "(", "i", ")", "\n", "list_hr", ".", "append", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dir_hr", ",", "filename", "+", "self", ".", "ext", ")", ")", "\n", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "list_lr", "[", "si", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dir_lr", ",", "\n", "'X{}/{}x{}{}'", ".", "format", "(", "s", ",", "filename", ",", "s", ",", "self", ".", "ext", ")", "\n", ")", ")", "\n", "\n", "", "", "return", "list_hr", ",", "list_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._set_filesystem": [[38, 43], ["os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "dir_data", "+", "'/DIV2K'", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'DIV2K_train_HR'", ")", "\n", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'DIV2K_train_LR_bicubic'", ")", "\n", "self", ".", "ext", "=", "'.png'", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._name_hrbin": [[44, 49], ["os.path.join"], "methods", ["None"], ["", "def", "_name_hrbin", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_HR.npy'", ".", "format", "(", "self", ".", "split", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._name_lrbin": [[51, 56], ["os.path.join"], "methods", ["None"], ["", "def", "_name_lrbin", "(", "self", ",", "scale", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_LR_X{}.npy'", ".", "format", "(", "self", ".", "split", ",", "scale", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K.__len__": [[58, 63], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "images_hr", ")", "*", "self", ".", "repeat", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "images_hr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.div2k.DIV2K._get_index": [[64, 69], ["len"], "methods", ["None"], ["", "", "def", "_get_index", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "idx", "%", "len", "(", "self", ".", "images_hr", ")", "\n", "", "else", ":", "\n", "            ", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.__init__.Data.__init__": [[8, 67], ["dataloader_new.MSDataLoader", "importlib.import_module", "dataloader_new.MSDataLoader", "getattr", "importlib.import_module", "importlib.import_module", "importlib.import_module", "importlib.import_module", "args.data_train.lower", "getattr", "getattr", "getattr", "getattr", "args.data_test.lower"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark_texture_sr.BenchmarkTextureSR.__init__": [[12, 14], ["data.srdata.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ")", ":", "\n", "        ", "super", "(", "BenchmarkTextureSR", ",", "self", ")", ".", "__init__", "(", "args", ",", "train", ",", "benchmark", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark_texture_sr.BenchmarkTextureSR._scan": [[34, 42], ["list_hr.append", "list_lr.append", "sorted", "sorted", "glob.glob", "glob.glob", "benchmark_texture_sr.BenchmarkTextureSR.dir_lr.format"], "methods", ["None"], ["", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "list_hr", "=", "[", "]", "\n", "list_lr", "=", "[", "]", "\n", "for", "s", "in", "self", ".", "scale", ":", "\n", "            ", "list_hr", ".", "append", "(", "sorted", "(", "glob", ".", "glob", "(", "self", ".", "dir_hr", ")", ")", ")", "\n", "list_lr", ".", "append", "(", "sorted", "(", "glob", ".", "glob", "(", "self", ".", "dir_lr", ".", "format", "(", "s", ")", ")", ")", ")", "\n", "\n", "", "return", "list_hr", ",", "list_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.data.benchmark_texture_sr.BenchmarkTextureSR._set_filesystem": [[43, 48], ["os.path.join"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "os", ".", "path", ".", "join", "(", "dir_data", ",", "self", ".", "args", ".", "data_test", ",", "self", ".", "args", ".", "data_test_texture_sr", ")", "\n", "self", ".", "dir_hr", "=", "self", ".", "apath", "+", "'/x1/Images/*.png'", "\n", "self", ".", "dir_lr", "=", "self", ".", "apath", "+", "'/x{}/Images/*.png'", "\n", "self", ".", "ext", "=", "'.png'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.discriminator.Discriminator.__init__": [[6, 39], ["torch.Module.__init__", "torch.LeakyReLU", "range", "torch.Sequential", "torch.Sequential", "model.common.BasicBlock", "m_features.append", "torch.Linear", "torch.Linear", "model.common.BasicBlock"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "gan_type", "=", "'GAN'", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "in_channels", "=", "3", "\n", "out_channels", "=", "64", "\n", "depth", "=", "7", "\n", "#bn = not gan_type == 'WGAN_GP'", "\n", "bn", "=", "True", "\n", "act", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ",", "inplace", "=", "True", ")", "\n", "\n", "m_features", "=", "[", "\n", "common", ".", "BasicBlock", "(", "args", ".", "n_colors", ",", "out_channels", ",", "3", ",", "bn", "=", "bn", ",", "act", "=", "act", ")", "\n", "]", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "in_channels", "=", "out_channels", "\n", "if", "i", "%", "2", "==", "1", ":", "\n", "                ", "stride", "=", "1", "\n", "out_channels", "*=", "2", "\n", "", "else", ":", "\n", "                ", "stride", "=", "2", "\n", "", "m_features", ".", "append", "(", "common", ".", "BasicBlock", "(", "\n", "in_channels", ",", "out_channels", ",", "3", ",", "stride", "=", "stride", ",", "bn", "=", "bn", ",", "act", "=", "act", "\n", ")", ")", "\n", "\n", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "m_features", ")", "\n", "\n", "patch_size", "=", "args", ".", "patch_size", "//", "(", "2", "**", "(", "(", "depth", "+", "1", ")", "//", "2", ")", ")", "\n", "m_classifier", "=", "[", "\n", "nn", ".", "Linear", "(", "out_channels", "*", "patch_size", "**", "2", ",", "1024", ")", ",", "\n", "act", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "1", ")", "\n", "]", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "*", "m_classifier", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.discriminator.Discriminator.forward": [[40, 45], ["discriminator.Discriminator.features", "discriminator.Discriminator.classifier", "discriminator.Discriminator.view", "discriminator.Discriminator.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "features", "=", "self", ".", "features", "(", "x", ")", "\n", "output", "=", "self", ".", "classifier", "(", "features", ".", "view", "(", "features", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.vgg.VGG.__init__": [[10, 23], ["torch.Module.__init__", "model.common.MeanShift", "torchvision.vgg19", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_index", ",", "rgb_range", "=", "1", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_features", "=", "models", ".", "vgg19", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "modules", "=", "[", "m", "for", "m", "in", "vgg_features", "]", "\n", "if", "conv_index", "==", "'22'", ":", "\n", "            ", "self", ".", "vgg", "=", "nn", ".", "Sequential", "(", "*", "modules", "[", ":", "8", "]", ")", "\n", "", "elif", "conv_index", "==", "'54'", ":", "\n", "            ", "self", ".", "vgg", "=", "nn", ".", "Sequential", "(", "*", "modules", "[", ":", "35", "]", ")", "\n", "\n", "", "vgg_mean", "=", "(", "0.485", ",", "0.456", ",", "0.406", ")", "\n", "vgg_std", "=", "(", "0.229", "*", "rgb_range", ",", "0.224", "*", "rgb_range", ",", "0.225", "*", "rgb_range", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "rgb_range", ",", "vgg_mean", ",", "vgg_std", ")", "\n", "self", ".", "vgg", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.vgg.VGG.forward": [[24, 37], ["vgg.VGG.forward._forward"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "sr", ",", "hr", ")", ":", "\n", "        ", "def", "_forward", "(", "x", ")", ":", "\n", "            ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "vgg", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "vgg_sr", "=", "_forward", "(", "sr", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "vgg_hr", "=", "_forward", "(", "hr", ".", "detach", "(", ")", ")", "\n", "\n", "", "loss", "=", "F", ".", "mse_loss", "(", "vgg_sr", ",", "vgg_hr", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.__init__": [[12, 25], ["torch.Module.__init__", "loss.discriminator.Discriminator", "utility.make_scheduler", "utility.make_optimizer", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "adversarial.Adversarial.discriminator.parameters"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.make_scheduler", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.code.utility.make_optimizer"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "gan_type", ")", ":", "\n", "        ", "super", "(", "Adversarial", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gan_type", "=", "gan_type", "\n", "self", ".", "gan_k", "=", "args", ".", "gan_k", "\n", "self", ".", "discriminator", "=", "discriminator", ".", "Discriminator", "(", "args", ",", "gan_type", ")", "\n", "if", "gan_type", "!=", "'WGAN_GP'", ":", "\n", "            ", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "args", ",", "self", ".", "discriminator", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "\n", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "\n", "betas", "=", "(", "0", ",", "0.9", ")", ",", "eps", "=", "1e-8", ",", "lr", "=", "1e-5", "\n", ")", "\n", "", "self", ".", "scheduler", "=", "utility", ".", "make_scheduler", "(", "args", ",", "self", ".", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.forward": [[26, 77], ["fake.detach", "range", "adversarial.Adversarial.discriminator", "adversarial.Adversarial.optimizer.zero_grad", "adversarial.Adversarial.discriminator", "adversarial.Adversarial.discriminator", "loss_d.item", "loss_d.backward", "adversarial.Adversarial.optimizer.step", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "adversarial.Adversarial.discriminator.parameters", "adversarial.Adversarial.gan_type.find", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "adversarial.Adversarial.gan_type.find", "p.data.clamp_", "adversarial.Adversarial.mean", "adversarial.Adversarial.gan_type.find", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "adversarial.Adversarial.discriminator", "gradients.view.view.view", "gradients.view.view.norm", "fake.detach.mul", "real.mul", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "gradients.view.view.size", "gradients.view.norm.sub().pow().mean", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "adversarial.Adversarial.sum", "gradients.view.norm.sub().pow", "gradients.view.norm.sub"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.srresnet.norm"], ["", "def", "forward", "(", "self", ",", "fake", ",", "real", ")", ":", "\n", "        ", "fake_detach", "=", "fake", ".", "detach", "(", ")", "\n", "\n", "self", ".", "loss", "=", "0", "\n", "for", "_", "in", "range", "(", "self", ".", "gan_k", ")", ":", "\n", "            ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "d_fake", "=", "self", ".", "discriminator", "(", "fake_detach", ")", "\n", "d_real", "=", "self", ".", "discriminator", "(", "real", ")", "\n", "if", "self", ".", "gan_type", "==", "'GAN'", ":", "\n", "                ", "label_fake", "=", "torch", ".", "zeros_like", "(", "d_fake", ")", "\n", "label_real", "=", "torch", ".", "ones_like", "(", "d_real", ")", "\n", "loss_d", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "d_fake", ",", "label_fake", ")", "+", "F", ".", "binary_cross_entropy_with_logits", "(", "d_real", ",", "label_real", ")", "\n", "", "elif", "self", ".", "gan_type", ".", "find", "(", "'WGAN'", ")", ">=", "0", ":", "\n", "                ", "loss_d", "=", "(", "d_fake", "-", "d_real", ")", ".", "mean", "(", ")", "\n", "if", "self", ".", "gan_type", ".", "find", "(", "'GP'", ")", ">=", "0", ":", "\n", "                    ", "epsilon", "=", "torch", ".", "rand_like", "(", "fake", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "hat", "=", "fake_detach", ".", "mul", "(", "1", "-", "epsilon", ")", "+", "real", ".", "mul", "(", "epsilon", ")", "\n", "hat", ".", "requires_grad", "=", "True", "\n", "d_hat", "=", "self", ".", "discriminator", "(", "hat", ")", "\n", "gradients", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "outputs", "=", "d_hat", ".", "sum", "(", ")", ",", "inputs", "=", "hat", ",", "\n", "retain_graph", "=", "True", ",", "create_graph", "=", "True", ",", "only_inputs", "=", "True", "\n", ")", "[", "0", "]", "\n", "gradients", "=", "gradients", ".", "view", "(", "gradients", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "gradient_norm", "=", "gradients", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "\n", "gradient_penalty", "=", "10", "*", "gradient_norm", ".", "sub", "(", "1", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "loss_d", "+=", "gradient_penalty", "\n", "\n", "# Discriminator update", "\n", "", "", "self", ".", "loss", "+=", "loss_d", ".", "item", "(", ")", "\n", "loss_d", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "self", ".", "gan_type", "==", "'WGAN'", ":", "\n", "                ", "for", "p", "in", "self", ".", "discriminator", ".", "parameters", "(", ")", ":", "\n", "                    ", "p", ".", "data", ".", "clamp_", "(", "-", "1", ",", "1", ")", "\n", "\n", "", "", "", "self", ".", "loss", "/=", "self", ".", "gan_k", "\n", "\n", "d_fake_for_g", "=", "self", ".", "discriminator", "(", "fake", ")", "\n", "if", "self", ".", "gan_type", "==", "'GAN'", ":", "\n", "            ", "loss_g", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "\n", "d_fake_for_g", ",", "label_real", "\n", ")", "\n", "", "elif", "self", ".", "gan_type", ".", "find", "(", "'WGAN'", ")", ">=", "0", ":", "\n", "            ", "loss_g", "=", "-", "d_fake_for_g", ".", "mean", "(", ")", "\n", "\n", "# Generator loss", "\n", "", "return", "loss_g", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict": [[78, 83], ["adversarial.Adversarial.discriminator.state_dict", "adversarial.Adversarial.optimizer.state_dict", "dict"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict"], ["", "def", "state_dict", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "state_discriminator", "=", "self", ".", "discriminator", ".", "state_dict", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "state_optimizer", "=", "self", ".", "optimizer", ".", "state_dict", "(", ")", "\n", "\n", "return", "dict", "(", "**", "state_discriminator", ",", "**", "state_optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__": [[15, 68], ["super().__init__", "print", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "args.loss.split", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "__init__.Loss.loss_module.to", "loss.split", "__init__.Loss.loss.append", "len", "__init__.Loss.loss.append", "__init__.Loss.loss_module.half", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "__init__.Loss.load", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "loss_type.find", "__init__.Loss.loss.append", "print", "__init__.Loss.loss_module.append", "range", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss", "float", "loss_type.find", "importlib.import_module", "getattr", "loss_type.find", "importlib.import_module", "getattr"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.forward": [[69, 85], ["enumerate", "sum", "len", "sum.item", "losses.append", "effective_loss.item"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step": [[86, 90], ["__init__.Loss.get_loss_module", "hasattr", "l.scheduler.step"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.get_loss_module", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.start_log": [[91, 93], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.end_log": [[94, 96], ["__init__.Loss.log[].div_"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.display_loss": [[97, 104], ["zip", "log.append"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.plot_loss": [[105, 118], ["numpy.linspace", "enumerate", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "__init__.Loss.log[].numpy"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.get_loss_module": [[119, 124], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save": [[125, 128], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Loss.state_dict", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.adversarial.Adversarial.state_dict"], []], "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load": [[129, 143], ["__init__.Loss.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "hasattr", "os.path.join", "range", "len", "l.scheduler.step"], "methods", ["home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.model.rcan.RCAN.load_state_dict", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.ofsoundof_3D_Appearance_SR.loss.__init__.Loss.step"], []]}