{"home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.fit.get_args": [[12, 26], ["util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.parse_args", "os.path.join"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "# Data", "\n", "    ", "argparser", ".", "add_argument", "(", "'--batch-size'", ",", "type", "=", "int", ",", "default", "=", "1024", ")", "\n", "argparser", ".", "add_argument", "(", "'--train-folds'", ",", "type", "=", "int", ",", "default", "=", "8", ")", "\n", "# Model", "\n", "argparser", ".", "add_argument", "(", "'--model-type'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "# Save", "\n", "argparser", ".", "add_argument", "(", "'--checkpoints-path'", ",", "type", "=", "str", ")", "\n", "\n", "args", "=", "argparser", ".", "parse_args", "(", ")", "\n", "\n", "args", ".", "reverse", "=", "(", "args", ".", "model_type", "in", "constants", ".", "REVERSE_MODELS", ")", "\n", "args", ".", "model_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoints_path", ",", "args", ".", "model_type", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.fit.get_model": [[28, 31], ["h02_learn.model.get_model_cls", "h02_learn.model.get_model_cls.to", "h02_learn.model.get_model_cls."], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.__init__.get_model_cls"], ["", "def", "get_model", "(", "alphabet", ",", "args", ")", ":", "\n", "    ", "model_cls", "=", "get_model_cls", "(", "args", ".", "model_type", ")", "\n", "return", "model_cls", "(", "alphabet", ")", ".", "to", "(", "device", "=", "constants", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.fit.fit": [[33, 36], ["model.fit_batch"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.unigram.UnigramLM.fit_batch"], ["", "def", "fit", "(", "trainloader", ",", "model", ")", ":", "\n", "    ", "for", "x", ",", "y", "in", "trainloader", ":", "\n", "        ", "model", ".", "fit_batch", "(", "x", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.fit.main": [[38, 55], ["fit.get_args", "print", "h02_learn.dataset.get_data_loaders", "print", "fit.get_model", "fit.fit", "h02_learn.train.eval_all", "h02_learn.train.save_checkpoints", "list", "range", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_data_loaders", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.get_model", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.fit.fit", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.eval_all", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.save_checkpoints"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "folds", "=", "[", "list", "(", "range", "(", "args", ".", "train_folds", ")", ")", ",", "[", "8", "]", ",", "[", "9", "]", "]", "\n", "print", "(", "args", ")", "\n", "\n", "trainloader", ",", "devloader", ",", "testloader", ",", "alphabet", "=", "get_data_loaders", "(", "args", ".", "data_file", ",", "folds", ",", "args", ".", "batch_size", ")", "\n", "print", "(", "'Train size: %d Dev size: %d Test size: %d Alphabet size: %d'", "%", "\n", "(", "len", "(", "trainloader", ".", "dataset", ")", ",", "len", "(", "devloader", ".", "dataset", ")", ",", "\n", "len", "(", "testloader", ".", "dataset", ")", ",", "len", "(", "alphabet", ")", ")", ")", "\n", "\n", "model", "=", "get_model", "(", "alphabet", ",", "args", ")", "\n", "fit", "(", "trainloader", ",", "model", ")", "\n", "\n", "train_loss", ",", "dev_loss", ",", "test_loss", "=", "eval_all", "(", "trainloader", ",", "devloader", ",", "testloader", ",", "model", ")", "\n", "save_checkpoints", "(", "model", ",", "train_loss", ",", "dev_loss", ",", "test_loss", ",", "args", ".", "model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.get_args": [[15, 36], ["util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.parse_args", "os.path.join"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "# Data", "\n", "    ", "argparser", ".", "add_argument", "(", "'--batch-size'", ",", "type", "=", "int", ",", "default", "=", "32", ")", "\n", "# Model", "\n", "argparser", ".", "add_argument", "(", "'--nlayers'", ",", "type", "=", "int", ",", "default", "=", "2", ")", "\n", "argparser", ".", "add_argument", "(", "'--embedding-size'", ",", "type", "=", "int", ",", "default", "=", "64", ")", "\n", "argparser", ".", "add_argument", "(", "'--hidden-size'", ",", "type", "=", "int", ",", "default", "=", "256", ")", "\n", "argparser", ".", "add_argument", "(", "'--dropout'", ",", "type", "=", "float", ",", "default", "=", ".33", ")", "\n", "argparser", ".", "add_argument", "(", "'--model-type'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "# Optimization", "\n", "argparser", ".", "add_argument", "(", "'--eval-batches'", ",", "type", "=", "int", ",", "default", "=", "20", ")", "\n", "argparser", ".", "add_argument", "(", "'--wait-epochs'", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "# Save", "\n", "argparser", ".", "add_argument", "(", "'--checkpoints-path'", ",", "type", "=", "str", ")", "\n", "\n", "args", "=", "argparser", ".", "parse_args", "(", ")", "\n", "args", ".", "wait_iterations", "=", "args", ".", "wait_epochs", "*", "args", ".", "eval_batches", "\n", "\n", "args", ".", "reverse", "=", "(", "args", ".", "model_type", "in", "constants", ".", "REVERSE_MODELS", ")", "\n", "args", ".", "model_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoints_path", ",", "args", ".", "model_type", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.get_model": [[38, 47], ["h02_learn.model.get_model_cls", "h02_learn.model.get_model_cls.", "model_cls.to"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.__init__.get_model_cls"], ["", "def", "get_model", "(", "alphabet", ",", "args", ")", ":", "\n", "# pylint: disable=too-many-function-args,unexpected-keyword-arg", "\n", "\n", "    ", "model_cls", "=", "get_model_cls", "(", "args", ".", "model_type", ")", "\n", "model", "=", "model_cls", "(", "\n", "alphabet", ",", "args", ".", "embedding_size", ",", "args", ".", "hidden_size", ",", "\n", "nlayers", "=", "args", ".", "nlayers", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "\n", "return", "model", ".", "to", "(", "device", "=", "constants", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.train_batch": [[49, 57], ["optimizer.zero_grad", "model", "model.get_loss", "model.get_loss.backward", "optimizer.step", "model.get_loss.item"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_loss"], ["", "def", "train_batch", "(", "x", ",", "y", ",", "model", ",", "optimizer", ")", ":", "\n", "    ", "optimizer", ".", "zero_grad", "(", ")", "\n", "y_hat", "=", "model", "(", "x", ")", "\n", "loss", "=", "model", ".", "get_loss", "(", "y_hat", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "return", "loss", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train._evaluate": [[59, 70], ["model", "model.get_loss"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_loss"], ["", "def", "_evaluate", "(", "evalloader", ",", "model", ")", ":", "\n", "    ", "dev_loss", ",", "n_instances", "=", "0", ",", "0", "\n", "for", "x", ",", "y", "in", "evalloader", ":", "\n", "        ", "y_hat", "=", "model", "(", "x", ")", "\n", "loss", "=", "model", ".", "get_loss", "(", "y_hat", ",", "y", ")", "\n", "\n", "batch_size", "=", "y", ".", "shape", "[", "0", "]", "\n", "dev_loss", "+=", "(", "loss", "*", "batch_size", ")", "\n", "n_instances", "+=", "batch_size", "\n", "\n", "", "return", "(", "dev_loss", "/", "n_instances", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.evaluate": [[72, 78], ["model.eval", "model.train", "torch.no_grad", "torch.no_grad", "train._evaluate"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.eval", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.train", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train._evaluate"], ["", "def", "evaluate", "(", "evalloader", ",", "model", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "result", "=", "_evaluate", "(", "evalloader", ",", "model", ")", "\n", "", "model", ".", "train", "(", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.train": [[80, 101], ["torch.Adam", "h02_learn.train_info.TrainInfo", "model.recover_best", "model.parameters", "train.train_batch", "h02_learn.train_info.TrainInfo.new_batch", "train.evaluate", "h02_learn.train_info.TrainInfo.is_best", "h02_learn.train_info.TrainInfo.print_progress", "model.set_best"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.recover_best", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.train_batch", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.new_batch", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.evaluate", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.is_best", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.print_progress", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.set_best"], ["", "def", "train", "(", "trainloader", ",", "devloader", ",", "model", ",", "eval_batches", ",", "wait_iterations", ")", ":", "\n", "# optimizer = optim.AdamW(model.parameters())", "\n", "    ", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "train_info", "=", "TrainInfo", "(", "wait_iterations", ",", "eval_batches", ")", "\n", "\n", "while", "not", "train_info", ".", "finish", ":", "\n", "        ", "for", "x", ",", "y", "in", "trainloader", ":", "\n", "            ", "loss", "=", "train_batch", "(", "x", ",", "y", ",", "model", ",", "optimizer", ")", "\n", "train_info", ".", "new_batch", "(", "loss", ")", "\n", "\n", "if", "train_info", ".", "eval", ":", "\n", "                ", "dev_loss", "=", "evaluate", "(", "devloader", ",", "model", ")", "\n", "\n", "if", "train_info", ".", "is_best", "(", "dev_loss", ")", ":", "\n", "                    ", "model", ".", "set_best", "(", ")", "\n", "", "elif", "train_info", ".", "finish", ":", "\n", "                    ", "break", "\n", "\n", "", "train_info", ".", "print_progress", "(", "dev_loss", ")", "\n", "\n", "", "", "", "model", ".", "recover_best", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.eval_all": [[103, 111], ["train.evaluate", "train.evaluate", "train.evaluate", "print"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.evaluate", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.evaluate", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.evaluate"], ["", "def", "eval_all", "(", "trainloader", ",", "devloader", ",", "testloader", ",", "model", ")", ":", "\n", "    ", "train_loss", "=", "evaluate", "(", "trainloader", ",", "model", ")", "\n", "dev_loss", "=", "evaluate", "(", "devloader", ",", "model", ")", "\n", "test_loss", "=", "evaluate", "(", "testloader", ",", "model", ")", "\n", "\n", "print", "(", "'Final Training loss: %.4f Dev loss: %.4f Test loss: %.4f'", "%", "\n", "(", "train_loss", ",", "dev_loss", ",", "test_loss", ")", ")", "\n", "return", "(", "train_loss", ",", "dev_loss", ",", "test_loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.save_results": [[113, 121], ["model.get_args", "util.util.write_csv", "list", "list", "model.get_args.keys", "model.get_args.values"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.write_csv"], ["", "def", "save_results", "(", "model", ",", "train_loss", ",", "dev_loss", ",", "test_loss", ",", "results_fname", ")", ":", "\n", "    ", "args", "=", "model", ".", "get_args", "(", ")", "\n", "del", "args", "[", "'alphabet'", "]", "\n", "results", "=", "[", "[", "'name'", ",", "'train_loss'", ",", "'dev_loss'", ",", "'test_loss'", ",", "'alphabet_size'", "]", "+", "\n", "list", "(", "args", ".", "keys", "(", ")", ")", "]", "\n", "results", "+=", "[", "[", "model", ".", "name", ",", "train_loss", ",", "dev_loss", ",", "test_loss", ",", "model", ".", "alphabet_size", "]", "+", "\n", "list", "(", "args", ".", "values", "(", ")", ")", "]", "\n", "util", ".", "write_csv", "(", "results_fname", ",", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.save_checkpoints": [[123, 127], ["model.save", "train.save_results"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.save", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.save_results"], ["", "def", "save_checkpoints", "(", "model", ",", "train_loss", ",", "dev_loss", ",", "test_loss", ",", "model_path", ")", ":", "\n", "    ", "model", ".", "save", "(", "model_path", ")", "\n", "results_fname", "=", "model_path", "+", "'/results.csv'", "\n", "save_results", "(", "model", ",", "train_loss", ",", "dev_loss", ",", "test_loss", ",", "results_fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.main": [[129, 147], ["train.get_args", "print", "h02_learn.dataset.get_data_loaders", "print", "train.get_model", "train.train", "train.eval_all", "train.save_checkpoints", "list", "range", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_data_loaders", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.get_model", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.train", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.eval_all", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train.save_checkpoints"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "folds", "=", "[", "list", "(", "range", "(", "8", ")", ")", ",", "[", "8", "]", ",", "[", "9", "]", "]", "\n", "print", "(", "args", ")", "\n", "\n", "trainloader", ",", "devloader", ",", "testloader", ",", "alphabet", "=", "get_data_loaders", "(", "args", ".", "data_file", ",", "folds", ",", "args", ".", "batch_size", ",", "reverse", "=", "args", ".", "reverse", ")", "\n", "print", "(", "'Train size: %d Dev size: %d Test size: %d Alphabet size: %d'", "%", "\n", "(", "len", "(", "trainloader", ".", "dataset", ")", ",", "len", "(", "devloader", ".", "dataset", ")", ",", "\n", "len", "(", "testloader", ".", "dataset", ")", ",", "len", "(", "alphabet", ")", ")", ")", "\n", "\n", "model", "=", "get_model", "(", "alphabet", ",", "args", ")", "\n", "train", "(", "trainloader", ",", "devloader", ",", "model", ",", "args", ".", "eval_batches", ",", "args", ".", "wait_iterations", ")", "\n", "\n", "train_loss", ",", "dev_loss", ",", "test_loss", "=", "eval_all", "(", "trainloader", ",", "devloader", ",", "testloader", ",", "model", ")", "\n", "\n", "save_checkpoints", "(", "model", ",", "train_loss", ",", "dev_loss", ",", "test_loss", ",", "args", ".", "model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.__init__": [[8, 11], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "wait_iterations", ",", "eval_batches", ")", ":", "\n", "        ", "self", ".", "wait_iterations", "=", "wait_iterations", "\n", "self", ".", "eval_batches", "=", "eval_batches", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.finish": [[12, 15], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "finish", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "batch_id", "-", "self", ".", "best_batch", ")", ">=", "self", ".", "wait_iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.eval": [[16, 19], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "eval", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "batch_id", "%", "self", ".", "eval_batches", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.max_epochs": [[20, 23], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "max_epochs", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "best_batch", "+", "self", ".", "wait_iterations", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.avg_loss": [[24, 27], ["sum", "len"], "methods", ["None"], ["", "@", "property", "\n", "def", "avg_loss", "(", "self", ")", ":", "\n", "        ", "return", "sum", "(", "self", ".", "running_loss", ")", "/", "len", "(", "self", ".", "running_loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.new_batch": [[28, 31], ["None"], "methods", ["None"], ["", "def", "new_batch", "(", "self", ",", "loss", ")", ":", "\n", "        ", "self", ".", "batch_id", "+=", "1", "\n", "self", ".", "running_loss", "+=", "[", "loss", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.is_best": [[32, 39], ["None"], "methods", ["None"], ["", "def", "is_best", "(", "self", ",", "dev_loss", ")", ":", "\n", "        ", "if", "dev_loss", "<", "self", ".", "best_loss", ":", "\n", "            ", "self", ".", "best_loss", "=", "dev_loss", "\n", "self", ".", "best_batch", "=", "self", ".", "batch_id", "\n", "return", "True", "\n", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.reset_loss": [[40, 42], ["None"], "methods", ["None"], ["", "def", "reset_loss", "(", "self", ")", ":", "\n", "        ", "self", ".", "running_loss", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.print_progress": [[43, 47], ["print", "train_info.TrainInfo.reset_loss"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.reset_loss"], ["", "def", "print_progress", "(", "self", ",", "dev_loss", ")", ":", "\n", "        ", "print", "(", "'(%05d/%05d) Training loss: %.4f Dev loss: %.4f'", "%", "\n", "(", "self", ".", "batch_id", ",", "self", ".", "max_epochs", ",", "self", ".", "avg_loss", ",", "dev_loss", ")", ")", "\n", "self", ".", "reset_loss", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_all.get_args": [[9, 11], ["util.argparser.parse_args"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "    ", "return", "argparser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_all.main": [[13, 27], ["train_all.get_args", "h01_data.dataset.get_languages", "enumerate", "print", "print", "print", "subprocess.check_call", "print", "len"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_languages"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "languages", "=", "get_languages", "(", "args", ".", "dataset", ",", "args", ".", "data_path", ")", "\n", "\n", "for", "i", ",", "lang", "in", "enumerate", "(", "languages", ")", ":", "\n", "        ", "print", "(", ")", "\n", "print", "(", "'(%03d/%03d) Training on dataset: %s. Language: %s.'", "%", "(", "i", "+", "1", ",", "len", "(", "languages", ")", ",", "args", ".", "dataset", ",", "lang", ")", ")", "\n", "cmd", "=", "[", "'make'", ",", "\n", "'LANGUAGE=%s'", "%", "(", "lang", ")", ",", "\n", "'DATASET=%s'", "%", "(", "args", ".", "dataset", ")", "]", "\n", "print", "(", "cmd", ")", "\n", "subprocess", ".", "check_call", "(", "cmd", ")", "\n", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.types.TypeDataset.__init__": [[9, 15], ["types.TypeDataset.process_train"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.types.TypeDataset.process_train"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "folds", ",", "reverse", "=", "False", ")", ":", "\n", "        ", "self", ".", "data", "=", "data", "\n", "self", ".", "folds", "=", "folds", "\n", "self", ".", "reverse", "=", "reverse", "\n", "self", ".", "process_train", "(", "data", ",", "reverse", "=", "reverse", ")", "\n", "self", ".", "_train", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.types.TypeDataset.process_train": [[16, 28], ["len", "torch.LongTensor", "types.TypeDataset.get_word_idx", "list"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.types.TypeDataset.get_word_idx"], ["", "def", "process_train", "(", "self", ",", "data", ",", "reverse", "=", "False", ")", ":", "\n", "        ", "folds_data", "=", "data", "[", "0", "]", "\n", "self", ".", "alphabet", "=", "data", "[", "1", "]", "\n", "\n", "folds_words", "=", "[", "instance", "[", "'tgt'", "]", "for", "fold", "in", "self", ".", "folds", "for", "instance", "in", "folds_data", "[", "fold", "]", "]", "\n", "if", "not", "reverse", ":", "\n", "            ", "self", ".", "words", "=", "folds_words", "\n", "", "else", ":", "\n", "            ", "self", ".", "words", "=", "[", "list", "(", "word", ")", "[", ":", ":", "-", "1", "]", "for", "word", "in", "folds_words", "]", "\n", "\n", "", "self", ".", "word_train", "=", "[", "torch", ".", "LongTensor", "(", "self", ".", "get_word_idx", "(", "word", ")", ")", "for", "word", "in", "self", ".", "words", "]", "\n", "self", ".", "n_instances", "=", "len", "(", "self", ".", "word_train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.types.TypeDataset.get_word_idx": [[29, 33], ["types.TypeDataset.alphabet.word2idx", "types.TypeDataset.alphabet.char2idx", "types.TypeDataset.alphabet.char2idx"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.word2idx", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.char2idx", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.char2idx"], ["", "def", "get_word_idx", "(", "self", ",", "word", ")", ":", "\n", "        ", "return", "[", "self", ".", "alphabet", ".", "char2idx", "(", "'SOS'", ")", "]", "+", "self", ".", "alphabet", ".", "word2idx", "(", "word", ")", "+", "[", "self", ".", "alphabet", ".", "char2idx", "(", "'EOS'", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.types.TypeDataset.__len__": [[34, 36], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_instances", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.types.TypeDataset.__getitem__": [[37, 39], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "(", "self", ".", "word_train", "[", "index", "]", ",", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.generate_batch": [[9, 36], ["len", "tensor.new_zeros", "tensor.new_zeros", "enumerate", "max", "tensor.new_zeros.to", "tensor.new_zeros.to", "len", "len"], "function", ["None"], ["def", "generate_batch", "(", "batch", ")", ":", "\n", "    ", "r\"\"\"\n    Since the text entries have different lengths, a custom function\n    generate_batch() is used to generate data batches and offsets,\n    which are compatible with EmbeddingBag. The function is passed\n    to 'collate_fn' in torch.utils.data.DataLoader. The input to\n    'collate_fn' is a list of tensors with the size of batch_size,\n    and the 'collate_fn' function packs them into a mini-batch.[len(entry[0][0]) for entry in batch]\n    Pay attention here and make sure that 'collate_fn' is declared\n    as a top level def. This ensures that the function is available\n    in each worker.\n    \"\"\"", "\n", "\n", "tensor", "=", "batch", "[", "0", "]", "[", "0", "]", "\n", "batch_size", "=", "len", "(", "batch", ")", "\n", "max_length", "=", "max", "(", "[", "len", "(", "entry", "[", "0", "]", ")", "for", "entry", "in", "batch", "]", ")", "-", "1", "# Does not need to predict SOS", "\n", "\n", "x", "=", "tensor", ".", "new_zeros", "(", "batch_size", ",", "max_length", ")", "\n", "y", "=", "tensor", ".", "new_zeros", "(", "batch_size", ",", "max_length", ")", "\n", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "batch", ")", ":", "\n", "        ", "sentence", "=", "item", "[", "0", "]", "\n", "sent_len", "=", "len", "(", "sentence", ")", "-", "1", "# Does not need to predict SOS", "\n", "x", "[", "i", ",", ":", "sent_len", "]", "=", "sentence", "[", ":", "-", "1", "]", "\n", "y", "[", "i", ",", ":", "sent_len", "]", "=", "sentence", "[", "1", ":", "]", "\n", "\n", "", "return", "x", ".", "to", "(", "device", "=", "constants", ".", "device", ")", ",", "y", ".", "to", "(", "device", "=", "constants", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.load_data": [[38, 40], ["util.util.read_data"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.read_data"], ["", "def", "load_data", "(", "fname", ")", ":", "\n", "    ", "return", "util", ".", "read_data", "(", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_alphabet": [[42, 45], ["None"], "function", ["None"], ["", "def", "get_alphabet", "(", "data", ")", ":", "\n", "    ", "alphabet", "=", "data", "[", "1", "]", "\n", "return", "alphabet", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_data": [[47, 52], ["__init__.load_data", "__init__.get_alphabet"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.load_data", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_alphabet"], ["", "def", "get_data", "(", "fname", ")", ":", "\n", "    ", "data", "=", "load_data", "(", "fname", ")", "\n", "alphabet", "=", "get_alphabet", "(", "data", ")", "\n", "\n", "return", "data", ",", "alphabet", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_data_loader": [[54, 59], ["types.TypeDataset", "torch.utils.data.DataLoader"], "function", ["None"], ["", "def", "get_data_loader", "(", "fname", ",", "folds", ",", "reverse", ",", "batch_size", ",", "shuffle", ")", ":", "\n", "    ", "trainset", "=", "TypeDataset", "(", "fname", ",", "folds", ",", "reverse", "=", "reverse", ")", "\n", "trainloader", "=", "DataLoader", "(", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "\n", "collate_fn", "=", "generate_batch", ")", "\n", "return", "trainloader", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_data_loaders": [[61, 71], ["__init__.get_data", "__init__.get_data_loader", "__init__.get_data_loader", "__init__.get_data_loader"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.get_data", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_data_loader", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_data_loader", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_data_loader"], ["", "def", "get_data_loaders", "(", "fname", ",", "folds", ",", "batch_size", ",", "reverse", "=", "False", ")", ":", "\n", "    ", "data", ",", "alphabet", "=", "get_data", "(", "fname", ")", "\n", "\n", "trainloader", "=", "get_data_loader", "(", "\n", "data", ",", "folds", "[", "0", "]", ",", "reverse", "=", "reverse", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "devloader", "=", "get_data_loader", "(", "\n", "data", ",", "folds", "[", "1", "]", ",", "reverse", "=", "reverse", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "testloader", "=", "get_data_loader", "(", "\n", "data", ",", "folds", "[", "2", "]", ",", "reverse", "=", "reverse", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ")", "\n", "return", "trainloader", ",", "devloader", ",", "testloader", ",", "alphabet", "\n", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.base.BaseDataProcesser.__init__": [[9, 13], ["None"], "methods", ["None"], ["class", "BaseLM", "(", "nn", ".", "Module", ",", "ABC", ")", ":", "\n", "# pylint: disable=abstract-method,not-callable", "\n", "    ", "name", "=", "'base'", "\n", "criterion_cls", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.base.BaseDataProcesser.process_data": [[14, 17], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "alphabet", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alphabet", "=", "alphabet", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.base.BaseDataProcesser.get_fold_splits": [[18, 25], ["sorted", "numpy.random.shuffle", "numpy.array_split", "list", "data.keys"], "methods", ["None"], ["self", ".", "best_state_dict", "=", "None", "\n", "self", ".", "alphabet_size", "=", "len", "(", "self", ".", "alphabet", ")", "\n", "self", ".", "pad_idx", "=", "alphabet", ".", "PAD_IDX", "\n", "self", ".", "eos_idx", "=", "alphabet", ".", "EOS_IDX", "\n", "\n", "self", ".", "criterion", "=", "self", ".", "criterion_cls", "(", "ignore_index", "=", "self", ".", "pad_idx", ")", ".", "to", "(", "device", "=", "constants", ".", "device", ")", "\n", "self", ".", "criterion_full", "=", "self", ".", "criterion_cls", "(", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.base.BaseDataProcesser.write_data": [[26, 31], ["util.util.util.mkdir", "os.path.join", "util.util.util.write_data", "list", "split.values"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.mkdir", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.write_data"], ["ignore_index", "=", "self", ".", "pad_idx", ",", "reduction", "=", "'none'", ")", ".", "to", "(", "device", "=", "constants", ".", "device", ")", "\n", "\n", "", "def", "get_loss", "(", "self", ",", "y_hat", ",", "y", ")", ":", "\n", "        ", "return", "self", ".", "criterion", "(", "\n", "y_hat", ".", "reshape", "(", "-", "1", ",", "y_hat", ".", "shape", "[", "-", "1", "]", ")", ",", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.northeuralex.Northeuralex.process_data": [[10, 21], ["northeuralex.Northeuralex.read_data", "northeuralex.Northeuralex.Language_ID.unique", "northeuralex.Northeuralex.iterrows", "h01_data.alphabet.Alphabet", "h01_data.alphabet.Alphabet", "northeuralex.Northeuralex.process_row"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.read_data", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.celex.Celex.process_row"], ["    ", "def", "process_data", "(", "self", ")", ":", "\n", "        ", "df", "=", "self", ".", "read_data", "(", "self", ".", "fname", ")", "\n", "self", ".", "languages", "=", "df", ".", "Language_ID", ".", "unique", "(", ")", "\n", "self", ".", "alphabets", "=", "{", "lang", ":", "Alphabet", "(", ")", "for", "lang", "in", "self", ".", "languages", "}", "\n", "self", ".", "pos_classes", "=", "{", "lang", ":", "Alphabet", "(", ")", "for", "lang", "in", "self", ".", "languages", "}", "\n", "\n", "word_info", "=", "{", "}", "\n", "for", "_", ",", "row", "in", "df", ".", "iterrows", "(", ")", ":", "\n", "            ", "self", ".", "process_row", "(", "row", ",", "word_info", ")", "\n", "\n", "", "return", "word_info", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.northeuralex.Northeuralex.read_data": [[22, 28], ["pandas.read_csv", "range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "read_data", "(", "fname", ")", ":", "\n", "        ", "df", "=", "pd", ".", "read_csv", "(", "fname", ",", "delimiter", "=", "'\\t'", ")", "\n", "df", "[", "'id'", "]", "=", "range", "(", "df", ".", "shape", "[", "0", "]", ")", "\n", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.northeuralex.Northeuralex.process_row": [[29, 55], ["northeuralex.Northeuralex.get_word", "northeuralex.Northeuralex.alphabet.add_word", "northeuralex.Northeuralex.alphabets[].add_word", "northeuralex.Northeuralex.alphabets[].word2idx", "northeuralex.Northeuralex.pos_classes[].add_char", "northeuralex.Northeuralex.pos_classes[].char2idx", "row.Concept_ID.split"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.northeuragraph.NortheuraGraph.get_word", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.add_word", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.add_word", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.word2idx", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.add_char", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.char2idx"], ["", "def", "process_row", "(", "self", ",", "row", ",", "word_info", ")", ":", "\n", "        ", "word", "=", "self", ".", "get_word", "(", "row", ")", "\n", "lang", "=", "row", ".", "Language_ID", "\n", "\n", "self", ".", "alphabet", ".", "add_word", "(", "word", ")", "\n", "self", ".", "alphabets", "[", "lang", "]", ".", "add_word", "(", "word", ")", "\n", "idx", "=", "self", ".", "alphabets", "[", "lang", "]", ".", "word2idx", "(", "word", ")", "\n", "\n", "pos_tag", "=", "row", ".", "Concept_ID", ".", "split", "(", "':'", ")", "[", "-", "1", "]", "\n", "self", ".", "pos_classes", "[", "lang", "]", ".", "add_char", "(", "pos_tag", ")", "\n", "pos_idx", "=", "self", ".", "pos_classes", "[", "lang", "]", ".", "char2idx", "(", "pos_tag", ")", "\n", "\n", "if", "row", ".", "Concept_ID", "not", "in", "word_info", ":", "\n", "            ", "word_info", "[", "row", ".", "Concept_ID", "]", "=", "[", "]", "\n", "\n", "", "word_info", "[", "row", ".", "Concept_ID", "]", "+=", "[", "{", "\n", "'count'", ":", "1", ",", "\n", "'idx'", ":", "idx", ",", "\n", "'concept'", ":", "row", ".", "Concept_ID", ",", "\n", "'tgt'", ":", "word", ",", "\n", "'word'", ":", "''", ".", "join", "(", "word", ")", ",", "\n", "'id'", ":", "row", ".", "id", ",", "\n", "'grapheme'", ":", "row", ".", "Word_Form", ",", "\n", "'lang'", ":", "lang", ",", "\n", "'pos'", ":", "pos_tag", ",", "\n", "'pos_idx'", ":", "pos_idx", ",", "\n", "}", "]", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.northeuralex.Northeuralex.get_word": [[57, 60], ["str().split", "str"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_word", "(", "row", ")", ":", "\n", "        ", "return", "str", "(", "row", ".", "IPA", ")", ".", "split", "(", "' '", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.northeuralex.Northeuralex.write_data": [[61, 81], ["enumerate", "data.items", "os.path.join", "util.util.util.write_data", "split.items", "os.path.join", "util.util.util.mkdir", "os.path.join", "util.util.util.write_data"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.items", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.write_data", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.items", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.mkdir", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.write_data"], ["", "def", "write_data", "(", "self", ",", "tgt_path", ",", "splits", ")", ":", "\n", "        ", "data", "=", "{", "lang", ":", "[", "[", "]", "for", "_", "in", "splits", "]", "for", "lang", "in", "self", ".", "languages", "}", "\n", "\n", "for", "i", ",", "split", "in", "enumerate", "(", "splits", ")", ":", "\n", "            ", "for", "_", ",", "datum", "in", "split", ".", "items", "(", ")", ":", "\n", "                ", "for", "instance", "in", "datum", ":", "\n", "                    ", "lang", "=", "instance", "[", "'lang'", "]", "\n", "data", "[", "lang", "]", "[", "i", "]", "+=", "[", "\n", "instance", "\n", "]", "\n", "\n", "", "", "", "for", "lang", ",", "datum", "in", "data", ".", "items", "(", ")", ":", "\n", "            ", "lang_path", "=", "os", ".", "path", ".", "join", "(", "tgt_path", ",", "lang", ")", "\n", "util", ".", "mkdir", "(", "lang_path", ")", "\n", "\n", "lang_fname", "=", "os", ".", "path", ".", "join", "(", "lang_path", ",", "'processed.pckl'", ")", "\n", "util", ".", "write_data", "(", "lang_fname", ",", "(", "data", "[", "lang", "]", ",", "self", ".", "alphabets", "[", "lang", "]", ",", "self", ".", "pos_classes", "[", "lang", "]", ")", ")", "\n", "\n", "", "tgt_fname", "=", "os", ".", "path", ".", "join", "(", "tgt_path", ",", "'processed.pckl'", ")", "\n", "util", ".", "write_data", "(", "tgt_fname", ",", "(", "data", ",", "self", ".", "alphabet", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.northeuralex.Northeuralex.get_languages": [[82, 87], ["os.path.join", "cls.read_data", "cls.read_data.Language_ID.unique"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.read_data"], ["", "@", "classmethod", "\n", "def", "get_languages", "(", "cls", ",", "data_path", ")", ":", "\n", "        ", "fname", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'northeuralex-0.9-forms.tsv'", ")", "\n", "df", "=", "cls", ".", "read_data", "(", "fname", ")", "\n", "return", "df", ".", "Language_ID", ".", "unique", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.celex.Celex.process_data": [[14, 24], ["pandas.read_csv", "h01_data.alphabet.Alphabet", "pandas.read_csv.iterrows", "celex.Celex.process_row"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.celex.Celex.process_row"], ["def", "process_data", "(", "self", ")", ":", "\n", "        ", "df", "=", "pd", ".", "read_csv", "(", "self", ".", "fname", ",", "delimiter", "=", "'\\t'", ")", "\n", "self", ".", "pos_classes", "=", "Alphabet", "(", ")", "\n", "\n", "word_info", "=", "{", "}", "\n", "\n", "for", "_", ",", "row", "in", "df", ".", "iterrows", "(", ")", ":", "\n", "            ", "self", ".", "process_row", "(", "row", ",", "word_info", ")", "\n", "\n", "", "return", "word_info", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.celex.Celex.process_row": [[25, 40], ["celex.Celex.get_word", "celex.Celex.alphabet.add_word", "celex.Celex.pos_classes.add_char", "celex.Celex.alphabet.word2idx", "celex.Celex.pos_classes.char2idx"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.northeuragraph.NortheuraGraph.get_word", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.add_word", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.add_char", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.word2idx", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.char2idx"], ["", "def", "process_row", "(", "self", ",", "row", ",", "word_info", ")", ":", "\n", "        ", "tgt_word", ",", "tgt_splits", "=", "self", ".", "get_word", "(", "row", ")", "\n", "pos_tag", "=", "row", ".", "pos", "\n", "\n", "self", ".", "alphabet", ".", "add_word", "(", "tgt_splits", ")", "\n", "self", ".", "pos_classes", ".", "add_char", "(", "pos_tag", ")", "\n", "\n", "word_info", "[", "tgt_word", "]", "=", "{", "\n", "'count'", ":", "row", ".", "freq", ",", "\n", "'idx'", ":", "self", ".", "alphabet", ".", "word2idx", "(", "tgt_splits", ")", ",", "\n", "'word'", ":", "tgt_word", ",", "\n", "'tgt'", ":", "tgt_splits", ",", "\n", "'grapheme'", ":", "row", ".", "word", ",", "\n", "'pos'", ":", "pos_tag", ",", "\n", "'pos_idx'", ":", "self", ".", "pos_classes", ".", "char2idx", "(", "pos_tag", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.celex.Celex.get_word": [[42, 45], ["list"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_word", "(", "row", ")", ":", "\n", "        ", "return", "row", ".", "phones", ",", "list", "(", "row", ".", "phones", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.celex.Celex.get_languages": [[46, 49], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "get_languages", "(", "cls", ",", "*", "_", ")", ":", "\n", "        ", "return", "cls", ".", "languages", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.syllex.Syllex.get_word": [[7, 10], ["row.syllables.split"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "get_word", "(", "row", ")", ":", "\n", "        ", "return", "row", ".", "phones", ",", "row", ".", "syllables", ".", "split", "(", "'-'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.northeuragraph.NortheuraGraph.get_word": [[7, 10], ["list", "str"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "get_word", "(", "row", ")", ":", "\n", "        ", "return", "list", "(", "str", "(", "row", ".", "Word_Form", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.__init__": [[16, 22], ["base.BaseDataProcesser.__init__", "util.util.util.get_script", "wikipedia.Wikipedia.fname.split"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.get_script"], ["def", "__init__", "(", "self", ",", "fname", ",", "alphabet", ",", "max_words", "=", "None", ",", "max_len", "=", "50", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "fname", ",", "alphabet", ",", "max_words", "=", "max_words", ")", "\n", "\n", "self", ".", "max_len", "=", "max_len", "\n", "self", ".", "lang", "=", "self", ".", "fname", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "\n", "self", ".", "script", "=", "util", ".", "get_script", "(", "self", ".", "lang", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.process_data": [[23, 39], ["util.util.util.get_n_lines", "print", "wikipedia.Wikipedia.print_info", "wikipedia.Wikipedia.filter_data", "print", "wikipedia.Wikipedia.print_info", "open", "tqdm.tqdm.tqdm", "wikipedia.Wikipedia.process_line"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.get_n_lines", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.print_info", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.filter_data", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.print_info", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.process_line"], ["", "def", "process_data", "(", "self", ")", ":", "\n", "        ", "n_lines", "=", "util", ".", "get_n_lines", "(", "self", ".", "fname", ")", "\n", "\n", "word_info", "=", "{", "}", "\n", "with", "open", "(", "self", ".", "fname", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "tqdm", "(", "f", ",", "total", "=", "n_lines", ",", "desc", "=", "'Processing wiki data'", ")", ":", "\n", "                ", "self", ".", "process_line", "(", "line", ",", "word_info", ")", "\n", "\n", "", "", "print", "(", "'Preview:'", ")", "\n", "self", ".", "print_info", "(", "word_info", ")", "\n", "\n", "word_info", "=", "self", ".", "filter_data", "(", "word_info", ")", "\n", "print", "(", "'Real:'", ")", "\n", "self", ".", "print_info", "(", "word_info", ")", "\n", "\n", "return", "word_info", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.process_line": [[40, 61], ["line.strip().split", "wikipedia.Wikipedia.alphabet.add_word", "line.strip", "len", "util.util.util.is_word", "wikipedia.Wikipedia.alphabet.word2idx"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.add_word", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.is_word", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.word2idx"], ["", "def", "process_line", "(", "self", ",", "line", ",", "word_info", ")", ":", "\n", "        ", "for", "word", "in", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", ":", "\n", "            ", "if", "self", ".", "lang", "in", "self", ".", "reverse_langs", ":", "\n", "                ", "word", "=", "word", "[", ":", ":", "-", "1", "]", "\n", "\n", "", "if", "len", "(", "word", ")", ">", "self", ".", "max_len", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "not", "util", ".", "is_word", "(", "word", ",", "self", ".", "script", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "self", ".", "alphabet", ".", "add_word", "(", "word", ")", "\n", "\n", "if", "word", "in", "word_info", ":", "\n", "                ", "word_info", "[", "word", "]", "[", "'count'", "]", "+=", "1", "\n", "", "else", ":", "\n", "                ", "word_info", "[", "word", "]", "=", "{", "\n", "'count'", ":", "1", ",", "\n", "'idx'", ":", "self", ".", "alphabet", ".", "word2idx", "(", "word", ")", ",", "\n", "'word'", ":", "word", ",", "\n", "'tgt'", ":", "word", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.filter_data": [[63, 75], ["sorted", "dict", "word_info.items", "x.strip"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.items"], ["", "", "", "def", "filter_data", "(", "self", ",", "word_info", ")", ":", "\n", "        ", "words_sorted", "=", "sorted", "(", "word_info", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", "[", "'count'", "]", ",", "reverse", "=", "True", ")", "\n", "words_filtered", "=", "[", "\n", "(", "x", ",", "info", ")", "for", "x", ",", "info", "in", "words_sorted", "if", "x", ".", "strip", "(", ")", "!=", "''", "]", "\n", "\n", "if", "self", ".", "max_words", ":", "\n", "            ", "words_capped", "=", "words_filtered", "[", ":", "self", ".", "max_words", "]", "\n", "", "else", ":", "\n", "            ", "words_capped", "=", "words_filtered", "\n", "\n", "", "data", "=", "dict", "(", "words_capped", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.print_info": [[76, 83], ["cls.count_tokens", "cls.count_types", "print", "print"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.count_tokens", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.count_types"], ["", "@", "classmethod", "\n", "def", "print_info", "(", "cls", ",", "words_info", ")", ":", "\n", "        ", "n_tokens", "=", "cls", ".", "count_tokens", "(", "words_info", ")", "\n", "n_types", "=", "cls", ".", "count_types", "(", "words_info", ")", "\n", "\n", "print", "(", "'# tokens:'", ",", "n_tokens", ")", "\n", "print", "(", "'# types:'", ",", "n_types", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.count_tokens": [[84, 87], ["sum", "word_info.values"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "count_tokens", "(", "word_info", ")", ":", "\n", "        ", "return", "sum", "(", "[", "x", "[", "'count'", "]", "for", "x", "in", "word_info", ".", "values", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.count_types": [[88, 91], ["len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "count_types", "(", "word_info", ")", ":", "\n", "        ", "return", "len", "(", "word_info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.get_languages": [[92, 95], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "get_languages", "(", "cls", ",", "*", "_", ")", ":", "\n", "        ", "return", "cls", ".", "languages", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_dataset_cls": [[8, 17], ["None"], "function", ["None"], ["\n", "def", "generate_batch", "(", "batch", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_languages": [[19, 22], ["__init__.get_dataset_cls", "get_dataset_cls.get_languages"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_dataset_cls", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_languages"], ["\n", "\n", "tensor", "=", "batch", "[", "0", "]", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.__init__": [[14, 28], ["super().__init__", "len", "base.BaseLM.criterion_cls().to", "base.BaseLM.criterion_cls().to", "base.BaseLM.criterion_cls", "base.BaseLM.criterion_cls"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["def", "__init__", "(", "self", ",", "alphabet", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alphabet", "=", "alphabet", "\n", "\n", "self", ".", "best_state_dict", "=", "None", "\n", "self", ".", "alphabet_size", "=", "len", "(", "self", ".", "alphabet", ")", "\n", "self", ".", "pad_idx", "=", "alphabet", ".", "PAD_IDX", "\n", "self", ".", "eos_idx", "=", "alphabet", ".", "EOS_IDX", "\n", "\n", "self", ".", "criterion", "=", "self", ".", "criterion_cls", "(", "ignore_index", "=", "self", ".", "pad_idx", ")", ".", "to", "(", "device", "=", "constants", ".", "device", ")", "\n", "self", ".", "criterion_full", "=", "self", ".", "criterion_cls", "(", "\n", "ignore_index", "=", "self", ".", "pad_idx", ",", "reduction", "=", "'none'", ")", ".", "to", "(", "device", "=", "constants", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_loss": [[29, 33], ["base.BaseLM.criterion", "y_hat.reshape", "y.reshape"], "methods", ["None"], ["", "def", "get_loss", "(", "self", ",", "y_hat", ",", "y", ")", ":", "\n", "        ", "return", "self", ".", "criterion", "(", "\n", "y_hat", ".", "reshape", "(", "-", "1", ",", "y_hat", ".", "shape", "[", "-", "1", "]", ")", ",", "\n", "y", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_loss_full": [[34, 39], ["base.BaseLM.criterion_full().reshape_as", "base.BaseLM.criterion_full", "y_hat.reshape", "y.reshape"], "methods", ["None"], ["", "def", "get_loss_full", "(", "self", ",", "y_hat", ",", "y", ")", ":", "\n", "        ", "return", "self", ".", "criterion_full", "(", "\n", "y_hat", ".", "reshape", "(", "-", "1", ",", "y_hat", ".", "shape", "[", "-", "1", "]", ")", ",", "\n", "y", ".", "reshape", "(", "-", "1", ")", ")", ".", "reshape_as", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_loss_no_eos": [[40, 43], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_loss_no_eos", "(", "self", ",", "y_hat", ",", "y", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.set_best": [[44, 46], ["copy.deepcopy", "base.BaseLM.state_dict"], "methods", ["None"], ["", "def", "set_best", "(", "self", ")", ":", "\n", "        ", "self", ".", "best_state_dict", "=", "copy", ".", "deepcopy", "(", "self", ".", "state_dict", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.recover_best": [[47, 49], ["base.BaseLM.load_state_dict"], "methods", ["None"], ["", "def", "recover_best", "(", "self", ")", ":", "\n", "        ", "self", ".", "load_state_dict", "(", "self", ".", "best_state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.save": [[50, 56], ["base.BaseLM.get_name", "torch.save", "torch.save", "torch.save", "torch.save", "base.BaseLM.get_args", "base.BaseLM.state_dict"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_name", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.save", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.save", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.save", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.save", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args"], ["", "def", "save", "(", "self", ",", "path", ")", ":", "\n", "        ", "fname", "=", "self", ".", "get_name", "(", "path", ")", "\n", "torch", ".", "save", "(", "{", "\n", "'kwargs'", ":", "self", ".", "get_args", "(", ")", ",", "\n", "'model_state_dict'", ":", "self", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_args": [[57, 60], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_args", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.load": [[61, 67], ["cls.load_checkpoint", "cls", "cls.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.load_checkpoint"], ["", "@", "classmethod", "\n", "def", "load", "(", "cls", ",", "path", ")", ":", "\n", "        ", "checkpoints", "=", "cls", ".", "load_checkpoint", "(", "path", ")", "\n", "model", "=", "cls", "(", "**", "checkpoints", "[", "'kwargs'", "]", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoints", "[", "'model_state_dict'", "]", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.load_checkpoint": [[68, 72], ["cls.get_name", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_name", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.load", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.load", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.load", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.load"], ["", "@", "classmethod", "\n", "def", "load_checkpoint", "(", "cls", ",", "path", ")", ":", "\n", "        ", "fname", "=", "cls", ".", "get_name", "(", "path", ")", "\n", "return", "torch", ".", "load", "(", "fname", ",", "map_location", "=", "constants", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_name": [[73, 76], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "get_name", "(", "cls", ",", "path", ")", ":", "\n", "        ", "return", "'%s/model.tch'", "%", "(", "path", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.position_nn.PositionLM.__init__": [[9, 20], ["cloze.TransformerCloze.__init__", "modules.TransformerLM"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "alphabet", ",", "embedding_size", ",", "hidden_size", ",", "\n", "nlayers", ",", "dropout", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "alphabet", ",", "embedding_size", ",", "hidden_size", ",", "\n", "nlayers", ",", "dropout", ")", "\n", "\n", "self", ".", "sos_idx", "=", "self", ".", "alphabet", ".", "SOS_IDX", "\n", "\n", "self", ".", "transformer", "=", "TransformerLM", "(", "\n", "self", ".", "alphabet_size", "+", "1", ",", "self", ".", "pad_idx", ",", "\n", "embedding_size", ",", "hidden_size", ",", "\n", "nlayers", ",", "dropout", ",", "tie_weights", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.position_nn.PositionLM.forward": [[21, 28], ["position_nn.PositionLM.shift_input", "position_nn.PositionLM.transformer"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.cloze.TransformerCloze.shift_input"], ["", "def", "forward", "(", "self", ",", "x_orig", ")", ":", "\n", "        ", "x", "=", "self", ".", "shift_input", "(", "x_orig", ")", "\n", "\n", "chars_mask", "=", "(", "x", "!=", "self", ".", "eos_idx", ")", "&", "(", "x", "!=", "self", ".", "pad_idx", ")", "\n", "x", "[", "chars_mask", "]", "=", "self", ".", "sos_idx", "\n", "\n", "return", "self", ".", "transformer", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.ScaledDotProductAttention.__init__": [[12, 16], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "temperature", "=", "1", ",", "dropout", "=", "0.3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.ScaledDotProductAttention.forward": [[17, 29], ["torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "modules.ScaledDotProductAttention.dropout", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "k.transpose", "mask.unsqueeze.unsqueeze.unsqueeze", "weights.masked_fill.masked_fill.masked_fill", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "        ", "q_temp", "=", "q", "/", "self", ".", "temperature", "\n", "\n", "weights", "=", "torch", ".", "matmul", "(", "q_temp", ",", "k", ".", "transpose", "(", "2", ",", "3", ")", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "-", "2", ")", "\n", "weights", "=", "weights", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "", "attn", "=", "self", ".", "dropout", "(", "torch", ".", "softmax", "(", "weights", ",", "dim", "=", "-", "1", ")", ")", "\n", "\n", "output", "=", "torch", ".", "matmul", "(", "attn", ",", "v", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.MultiHeadAttention.__init__": [[33, 51], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "modules.ScaledDotProductAttention", "torch.Dropout", "torch.Dropout", "torch.LayerNorm", "torch.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_heads", ",", "d_input", ",", "d_key", ",", "d_value", ",", "dropout", "=", "0.3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_heads", "=", "n_heads", "\n", "self", ".", "d_input", "=", "d_input", "\n", "self", ".", "d_key", "=", "d_key", "\n", "self", ".", "d_value", "=", "d_value", "\n", "self", ".", "dropout_p", "=", "dropout", "\n", "\n", "self", ".", "linear_key", "=", "nn", ".", "Linear", "(", "d_input", ",", "n_heads", "*", "d_key", ")", "\n", "self", ".", "linear_query", "=", "nn", ".", "Linear", "(", "d_input", ",", "n_heads", "*", "d_key", ")", "\n", "self", ".", "linear_value", "=", "nn", ".", "Linear", "(", "d_input", ",", "n_heads", "*", "d_value", ")", "\n", "self", ".", "linear_out", "=", "nn", ".", "Linear", "(", "n_heads", "*", "d_value", ",", "d_input", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "d_key", "**", "0.5", ",", "dropout", "=", "dropout", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_input", ",", "eps", "=", "1e-6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.MultiHeadAttention.forward": [[52, 76], ["modules.MultiHeadAttention.layer_norm", "modules.MultiHeadAttention.linear_query().reshape", "modules.MultiHeadAttention.linear_key().reshape", "modules.MultiHeadAttention.linear_value().reshape", "modules.MultiHeadAttention.attention", "hidden.transpose().contiguous().reshape.transpose().contiguous().reshape.transpose().contiguous().reshape", "modules.MultiHeadAttention.dropout", "modules.MultiHeadAttention.transpose", "modules.MultiHeadAttention.transpose", "modules.MultiHeadAttention.transpose", "mask.unsqueeze.unsqueeze.unsqueeze", "modules.MultiHeadAttention.linear_out", "modules.MultiHeadAttention.linear_query", "modules.MultiHeadAttention.linear_key", "modules.MultiHeadAttention.linear_value", "hidden.transpose().contiguous().reshape.transpose().contiguous().reshape.transpose().contiguous", "hidden.transpose().contiguous().reshape.transpose().contiguous().reshape.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "        ", "residual", "=", "q", "\n", "q", "=", "self", ".", "layer_norm", "(", "q", ")", "\n", "\n", "batch_size", ",", "len_q", ",", "_", "=", "q", ".", "shape", "\n", "\n", "q", "=", "self", ".", "linear_query", "(", "q", ")", ".", "reshape", "(", "batch_size", ",", "len_q", ",", "self", ".", "n_heads", ",", "self", ".", "d_key", ")", "\n", "k", "=", "self", ".", "linear_key", "(", "k", ")", ".", "reshape", "(", "batch_size", ",", "k", ".", "shape", "[", "1", "]", ",", "self", ".", "n_heads", ",", "self", ".", "d_key", ")", "\n", "v", "=", "self", ".", "linear_value", "(", "v", ")", ".", "reshape", "(", "batch_size", ",", "v", ".", "shape", "[", "1", "]", ",", "self", ".", "n_heads", ",", "self", ".", "d_key", ")", "\n", "\n", "# Transpose for the attention", "\n", "q", ",", "k", ",", "v", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ",", "v", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", "\n", "", "hidden", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", ")", "\n", "\n", "# Transpose to move the head dimension back: bs x lq x n x dv", "\n", "# Combine the last two dimensions to concatenate all the heads together: b x lq x (n*dv)", "\n", "hidden", "=", "hidden", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "reshape", "(", "batch_size", ",", "len_q", ",", "-", "1", ")", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "linear_out", "(", "hidden", ")", ")", "\n", "output", "+=", "residual", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.MultiHeadSelfAttention.forward": [[80, 82], ["modules.MultiHeadAttention.forward"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.unigram.UnigramLM.forward"], ["    ", "def", "forward", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "return", "super", "(", ")", ".", "forward", "(", "x", ",", "x", ",", "x", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.MlpBottleneck.__init__": [[86, 93], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.LayerNorm", "torch.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "d_input", ",", "d_hidden", ",", "dropout", "=", "0.3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "linear_in", "=", "nn", ".", "Linear", "(", "d_input", ",", "d_hidden", ")", "\n", "self", ".", "linear_out", "=", "nn", ".", "Linear", "(", "d_hidden", ",", "d_input", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.MlpBottleneck.forward": [[94, 105], ["modules.MlpBottleneck.layer_norm", "modules.MlpBottleneck.linear_in", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "modules.MlpBottleneck.linear_out", "modules.MlpBottleneck.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "x", "=", "self", ".", "layer_norm", "(", "x", ")", "\n", "x", "=", "self", ".", "linear_in", "(", "x", ")", "\n", "x", "=", "torch", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "linear_out", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "\n", "x", "+=", "residual", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.Transformer.__init__": [[109, 121], ["torch.Module.__init__", "modules.Transformer.build_attentions"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.Transformer.build_attentions"], ["    ", "def", "__init__", "(", "self", ",", "n_layers", ",", "n_heads", ",", "d_input", ",", "d_key", ",", "d_value", ",", "d_bottleneck", ",", "dropout", "=", "0.3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "self", ".", "n_heads", "=", "n_heads", "\n", "self", ".", "d_input", "=", "d_input", "\n", "self", ".", "d_key", "=", "d_key", "\n", "self", ".", "d_value", "=", "d_value", "\n", "self", ".", "d_bottleneck", "=", "d_bottleneck", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "self", ".", "attentions", "=", "self", ".", "build_attentions", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.Transformer.build_attentions": [[122, 138], ["range", "torch.ModuleList", "torch.ModuleList", "modules.MultiHeadSelfAttention", "modules.MlpBottleneck", "torch.ModuleList", "torch.ModuleList"], "methods", ["None"], ["", "def", "build_attentions", "(", "self", ")", ":", "\n", "        ", "self_attentions", "=", "[", "]", "\n", "for", "layer", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "self_attention", "=", "MultiHeadSelfAttention", "(", "\n", "self", ".", "n_heads", ",", "self", ".", "d_input", ",", "self", ".", "d_key", ",", "self", ".", "d_value", ",", "\n", "dropout", "=", "self", ".", "dropout", ")", "\n", "mlp_positional", "=", "MlpBottleneck", "(", "self", ".", "d_input", ",", "self", ".", "d_bottleneck", ",", "dropout", "=", "self", ".", "dropout", ")", "\n", "\n", "layer", "=", "nn", ".", "ModuleList", "(", "[", "\n", "self_attention", ",", "\n", "mlp_positional", "\n", "]", ")", "\n", "self_attentions", "+=", "[", "layer", "]", "\n", "\n", "", "attentions", "=", "nn", ".", "ModuleList", "(", "self_attentions", ")", "\n", "return", "attentions", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.Transformer.forward": [[139, 145], ["attn", "mlp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask", ")", ":", "\n", "        ", "for", "attn", ",", "mlp", "in", "self", ".", "attentions", ":", "\n", "            ", "x", "=", "attn", "(", "x", ",", "mask", ")", "\n", "x", "=", "mlp", "(", "x", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.PositionalEmbedding.__init__": [[149, 160], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "modules.PositionalEmbedding.parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "param.dim", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_positions", ",", "d_embedding", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_positions", "=", "n_positions", "\n", "self", ".", "d_embedding", "=", "d_embedding", "\n", "\n", "self", ".", "embedding", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "n_positions", ",", "d_embedding", ")", ")", "\n", "\n", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "if", "param", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_uniform_", "(", "param", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.PositionalEmbedding.forward": [[161, 165], ["embs.unsqueeze.unsqueeze.unsqueeze", "embs.unsqueeze.unsqueeze.repeat"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "embs", "=", "self", ".", "embedding", "[", ":", "x", ".", "shape", "[", "1", "]", "]", "\n", "embs", "=", "embs", ".", "unsqueeze", "(", "0", ")", "\n", "return", "embs", ".", "repeat", "(", "x", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.TransformerLM.__init__": [[169, 200], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "modules.PositionalEmbedding", "torch.Linear", "torch.Linear", "modules.Transformer", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LayerNorm", "torch.LayerNorm", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "alphabet_size", ",", "pad_idx", ",", "embedding_size", ",", "hidden_size", ",", "\n", "nlayers", ",", "dropout", ",", "n_positions", "=", "500", ",", "tie_weights", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "alphabet_size", "=", "alphabet_size", "\n", "self", ".", "pad_idx", "=", "pad_idx", "\n", "self", ".", "nlayers", "=", "nlayers", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "embedding_size", "=", "embedding_size", "\n", "self", ".", "dropout_p", "=", "dropout", "\n", "self", ".", "tie_weights", "=", "tie_weights", "\n", "\n", "# Alphabet + <MASK> embeddings", "\n", "self", ".", "char_embedding", "=", "nn", ".", "Embedding", "(", "alphabet_size", ",", "embedding_size", ")", "\n", "self", ".", "pos_embedding", "=", "PositionalEmbedding", "(", "n_positions", ",", "embedding_size", ")", "\n", "self", ".", "linear_in", "=", "nn", ".", "Linear", "(", "embedding_size", "*", "2", ",", "hidden_size", ")", "\n", "\n", "self", ".", "transformer", "=", "Transformer", "(", "\n", "2", ",", "10", ",", "hidden_size", ",", "int", "(", "hidden_size", "/", "10", ")", ",", "int", "(", "hidden_size", "/", "10", ")", ",", "\n", "int", "(", "hidden_size", "/", "2", ")", ",", "dropout", "=", "dropout", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "embedding_size", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "embedding_size", ",", "alphabet_size", ")", "\n", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "hidden_size", ",", "eps", "=", "1e-6", ")", "\n", "\n", "# Tie weights", "\n", "self", ".", "logit_scale", "=", "(", "embedding_size", "**", "-", "0.5", ")", "\n", "if", "tie_weights", ":", "\n", "            ", "self", ".", "out", ".", "weight", "=", "self", ".", "char_embedding", ".", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.TransformerLM.forward": [[201, 213], ["modules.TransformerLM.get_embeddings", "modules.TransformerLM.linear_in", "modules.TransformerLM.transformer", "modules.TransformerLM.layer_norm", "modules.TransformerLM.dropout().contiguous", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "modules.TransformerLM.out", "modules.TransformerLM.linear", "modules.TransformerLM.dropout"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.lstm.LstmLM.get_embeddings"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_emb", ",", "mask", "=", "self", ".", "get_embeddings", "(", "x", ")", "\n", "\n", "hidden", "=", "self", ".", "linear_in", "(", "x_emb", ")", "\n", "hidden", "=", "self", ".", "transformer", "(", "hidden", ",", "mask", ")", "\n", "\n", "hidden", "=", "self", ".", "layer_norm", "(", "hidden", ")", "\n", "hidden", "=", "self", ".", "dropout", "(", "hidden", ")", ".", "contiguous", "(", ")", "\n", "\n", "hidden", "=", "torch", ".", "relu", "(", "self", ".", "linear", "(", "hidden", ")", ")", "\n", "logits", "=", "self", ".", "out", "(", "hidden", ")", "\n", "return", "logits", "*", "self", ".", "logit_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.modules.TransformerLM.get_embeddings": [[214, 221], ["modules.TransformerLM.char_embedding", "modules.TransformerLM.pos_embedding", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.TransformerLM.dropout"], "methods", ["None"], ["", "def", "get_embeddings", "(", "self", ",", "instance", ")", ":", "\n", "        ", "mask", "=", "(", "instance", "!=", "self", ".", "pad_idx", ")", "\n", "char_emb", "=", "self", ".", "char_embedding", "(", "instance", ")", "\n", "pos_emb", "=", "self", ".", "pos_embedding", "(", "instance", ")", "\n", "\n", "emb", "=", "torch", ".", "cat", "(", "[", "char_emb", ",", "pos_emb", "]", ",", "dim", "=", "-", "1", ")", "\n", "return", "self", ".", "dropout", "(", "emb", ")", ",", "mask", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.cloze.TransformerCloze.__init__": [[12, 24], ["base_pytorch.BasePytorchLM.__init__", "modules.TransformerLM"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["def", "__init__", "(", "self", ",", "alphabet", ",", "embedding_size", ",", "hidden_size", ",", "\n", "nlayers", ",", "dropout", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "alphabet", ",", "embedding_size", ",", "hidden_size", ",", "\n", "nlayers", ",", "dropout", ")", "\n", "\n", "self", ".", "eos_idx", "=", "self", ".", "alphabet", ".", "EOS_IDX", "\n", "self", ".", "mask_idx", "=", "self", ".", "alphabet_size", "\n", "\n", "self", ".", "transformer", "=", "TransformerLM", "(", "\n", "self", ".", "alphabet_size", "+", "1", ",", "self", ".", "pad_idx", ",", "\n", "embedding_size", ",", "hidden_size", ",", "\n", "nlayers", ",", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.cloze.TransformerCloze.forward": [[25, 29], ["cloze.TransformerCloze.shift_input", "cloze.TransformerCloze.get_positional_logits"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.cloze.TransformerCloze.shift_input", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.cloze.TransformerCloze.get_positional_logits"], ["", "def", "forward", "(", "self", ",", "x_orig", ")", ":", "\n", "        ", "batch_size", ",", "max_len", "=", "x_orig", ".", "shape", "\n", "x", "=", "self", ".", "shift_input", "(", "x_orig", ")", "\n", "return", "self", ".", "get_positional_logits", "(", "x", ",", "batch_size", ",", "max_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.cloze.TransformerCloze.get_positional_logits": [[30, 39], ["torch.zeros().to", "range", "cloze.TransformerCloze.get_positional_logit", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.cloze.TransformerCloze.get_positional_logit"], ["", "def", "get_positional_logits", "(", "self", ",", "x", ",", "batch_size", ",", "max_len", ")", ":", "\n", "        ", "logits", "=", "torch", ".", "zeros", "(", "batch_size", ",", "max_len", ",", "self", ".", "alphabet_size", ")", ".", "to", "(", "device", "=", "constants", ".", "device", ")", "\n", "for", "position", "in", "range", "(", "max_len", ")", ":", "\n", "            ", "logits_pos", "=", "self", ".", "get_positional_logit", "(", "x", ",", "position", ")", "\n", "\n", "logits", "[", ":", ",", "position", "]", "=", "logits_pos", "[", ":", ",", "position", ",", ":", "-", "1", "]", "\n", "\n", "", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.cloze.TransformerCloze.get_positional_logit": [[40, 44], ["x.clone", "cloze.TransformerCloze.transformer"], "methods", ["None"], ["", "def", "get_positional_logit", "(", "self", ",", "x", ",", "position", ")", ":", "\n", "        ", "x_pos", "=", "x", ".", "clone", "(", ")", "\n", "x_pos", "[", ":", ",", "position", "]", "=", "self", ".", "mask_idx", "\n", "return", "self", ".", "transformer", "(", "x_pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.cloze.TransformerCloze.shift_input": [[45, 56], ["torch.zeros_like", "range"], "methods", ["None"], ["", "def", "shift_input", "(", "self", ",", "x_orig", ")", ":", "\n", "        ", "assert", "self", ".", "eos_idx", "not", "in", "x_orig", ",", "'EOS should never already be in the input'", "\n", "batch_size", ",", "max_len", "=", "x_orig", ".", "shape", "\n", "lengths", "=", "(", "x_orig", "!=", "self", ".", "pad_idx", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "x", "=", "torch", ".", "zeros_like", "(", "x_orig", ")", "\n", "x", "[", ":", ",", ":", "max_len", "-", "1", "]", "=", "x_orig", "[", ":", ",", "1", ":", "]", "\n", "x", "[", "range", "(", "batch_size", ")", ",", "lengths", "-", "1", "]", "=", "self", ".", "eos_idx", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.lstm.LstmLM.__init__": [[11, 28], ["base_pytorch.BasePytorchLM.__init__", "torch.Embedding", "torch.Embedding", "torch.LSTM", "torch.LSTM", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["def", "__init__", "(", "self", ",", "alphabet", ",", "embedding_size", ",", "hidden_size", ",", "\n", "nlayers", ",", "dropout", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "alphabet", ",", "embedding_size", ",", "hidden_size", ",", "\n", "nlayers", ",", "dropout", ")", "\n", "\n", "self", ".", "embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "alphabet_size", ",", "embedding_size", ")", "\n", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTM", "(", "embedding_size", ",", "hidden_size", ",", "nlayers", ",", "\n", "dropout", "=", "(", "dropout", "if", "nlayers", ">", "1", "else", "0", ")", ",", "\n", "batch_first", "=", "True", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "embedding_size", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "embedding_size", ",", "self", ".", "alphabet_size", ")", "\n", "\n", "# Tie weights", "\n", "self", ".", "out", ".", "weight", "=", "self", ".", "embedding", ".", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.lstm.LstmLM.forward": [[29, 38], ["lstm.LstmLM.get_embeddings", "lstm.LstmLM.lstm", "lstm.LstmLM.dropout().contiguous", "torch.relu", "torch.relu", "lstm.LstmLM.out", "lstm.LstmLM.linear", "lstm.LstmLM.dropout"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.lstm.LstmLM.get_embeddings"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_emb", "=", "self", ".", "get_embeddings", "(", "x", ")", "\n", "\n", "c_t", ",", "_", "=", "self", ".", "lstm", "(", "x_emb", ")", "\n", "c_t", "=", "self", ".", "dropout", "(", "c_t", ")", ".", "contiguous", "(", ")", "\n", "\n", "hidden", "=", "F", ".", "relu", "(", "self", ".", "linear", "(", "c_t", ")", ")", "\n", "logits", "=", "self", ".", "out", "(", "hidden", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.lstm.LstmLM.get_embeddings": [[39, 43], ["lstm.LstmLM.dropout", "lstm.LstmLM.embedding"], "methods", ["None"], ["", "def", "get_embeddings", "(", "self", ",", "instance", ")", ":", "\n", "        ", "emb", "=", "self", ".", "dropout", "(", "self", ".", "embedding", "(", "instance", ")", ")", "\n", "\n", "return", "emb", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.unigram.UnigramLM.__init__": [[12, 18], ["base.BaseLM.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.LongTensor().zero_", "torch.LongTensor().zero_", "torch.LongTensor().zero_", "torch.LongTensor().zero_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["def", "__init__", "(", "self", ",", "alphabet", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "alphabet", ")", "\n", "\n", "self", ".", "probs", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "alphabet_size", ")", ")", "\n", "self", ".", "log_probs", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "alphabet_size", ")", ")", "\n", "self", ".", "count", "=", "torch", ".", "LongTensor", "(", "self", ".", "alphabet_size", ")", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.unigram.UnigramLM.fit_batch": [[19, 29], ["x.unique", "torch.log", "torch.log", "torch.log", "torch.log", "unigram.UnigramLM.count.float", "unigram.UnigramLM.count.sum"], "methods", ["None"], ["", "def", "fit_batch", "(", "self", ",", "_", ",", "x", ")", ":", "\n", "        ", "for", "char", "in", "x", ".", "unique", "(", ")", ":", "\n", "            ", "if", "char", "==", "self", ".", "pad_idx", ":", "\n", "                ", "continue", "\n", "\n", "", "self", ".", "count", "[", "char", "]", "+=", "(", "x", "==", "char", ")", ".", "sum", "(", ")", "\n", "\n", "", "self", ".", "probs", "[", ":", "]", "=", "(", "self", ".", "count", ".", "float", "(", ")", "+", "1", ")", "/", "(", "self", ".", "count", ".", "sum", "(", ")", "+", "self", ".", "alphabet_size", ")", "\n", "self", ".", "log_probs", "[", ":", "]", "=", "torch", ".", "log", "(", "self", ".", "probs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.unigram.UnigramLM.forward": [[30, 37], ["unigram.UnigramLM.log_probs.reshape().repeat", "unigram.UnigramLM.log_probs.reshape"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", ",", "max_len", "=", "x", ".", "shape", "\n", "y_hat", "=", "self", ".", "log_probs", ".", "reshape", "(", "1", ",", "1", ",", "-", "1", ")", ".", "repeat", "(", "batch_size", ",", "max_len", ",", "1", ")", "\n", "\n", "return", "y_hat", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.unigram.UnigramLM.get_loss_no_eos": [[38, 45], ["torch.log.exp", "torch.log.exp", "torch.log", "torch.log", "torch.log", "torch.log", "unigram.UnigramLM.get_loss_full", "torch.log.exp.sum"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_loss_full"], ["", "def", "get_loss_no_eos", "(", "self", ",", "y_hat", ",", "y", ")", ":", "\n", "        ", "probs", "=", "y_hat", ".", "exp", "(", ")", "\n", "probs", "[", ":", ",", ":", ",", "self", ".", "eos_idx", "]", "=", "0", "\n", "probs", "=", "probs", "/", "probs", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "y_hat", "=", "torch", ".", "log", "(", "probs", ")", "\n", "\n", "return", "self", ".", "get_loss_full", "(", "y_hat", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.unigram.UnigramLM.get_args": [[46, 49], ["None"], "methods", ["None"], ["", "def", "get_args", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'alphabet'", ":", "self", ".", "alphabet", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base_pytorch.BasePytorchLM.__init__": [[10, 18], ["base.BaseLM.__init__"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__"], ["def", "__init__", "(", "self", ",", "alphabet", ",", "embedding_size", ",", "hidden_size", ",", "\n", "nlayers", ",", "dropout", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "alphabet", ")", "\n", "\n", "self", ".", "nlayers", "=", "nlayers", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "embedding_size", "=", "embedding_size", "\n", "self", ".", "dropout_p", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base_pytorch.BasePytorchLM.get_loss_no_eos": [[19, 22], ["base_pytorch.BasePytorchLM.get_loss_full"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_loss_full"], ["", "def", "get_loss_no_eos", "(", "self", ",", "y_hat", ",", "y", ")", ":", "\n", "        ", "y_hat", "[", ":", ",", ":", ",", "self", ".", "eos_idx", "]", "=", "-", "1e9", "\n", "return", "self", ".", "get_loss_full", "(", "y_hat", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base_pytorch.BasePytorchLM.get_args": [[23, 30], ["None"], "methods", ["None"], ["", "def", "get_args", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'nlayers'", ":", "self", ".", "nlayers", ",", "\n", "'hidden_size'", ":", "self", ".", "hidden_size", ",", "\n", "'embedding_size'", ":", "self", ".", "embedding_size", ",", "\n", "'dropout'", ":", "self", ".", "dropout_p", ",", "\n", "'alphabet'", ":", "self", ".", "alphabet", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.__init__.get_model_cls": [[7, 20], ["ValueError"], "function", ["None"], ["\n", "\n", "def", "generate_batch", "(", "batch", ")", ":", "\n", "    ", "r\"\"\"\n    Since the text entries have different lengths, a custom function\n    generate_batch() is used to generate data batches and offsets,\n    which are compatible with EmbeddingBag. The function is passed\n    to 'collate_fn' in torch.utils.data.DataLoader. The input to\n    'collate_fn' is a list of tensors with the size of batch_size,\n    and the 'collate_fn' function packs them into a mini-batch.[len(entry[0][0]) for entry in batch]\n    Pay attention here and make sure that 'collate_fn' is declared\n    as a top level def. This ensures that the function is available\n    in each worker.\n    \"\"\"", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_args": [[15, 26], ["util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.parse_args"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "# Models", "\n", "    ", "argparser", ".", "add_argument", "(", "'--checkpoints-path'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "# Other", "\n", "argparser", ".", "add_argument", "(", "'--analyse'", ",", "type", "=", "str", ",", "default", "=", "'none'", ",", "\n", "choices", "=", "[", "'none'", ",", "'vowels'", ",", "'consonants'", "]", ")", "\n", "argparser", ".", "add_argument", "(", "'--n-permutations'", ",", "type", "=", "int", ",", "default", "=", "100000", ")", "\n", "\n", "args", "=", "argparser", ".", "parse_args", "(", ")", "\n", "args", ".", "analyse", "=", "None", "if", "args", ".", "analyse", "==", "'none'", "else", "args", ".", "analyse", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_pos": [[28, 32], ["None"], "function", ["None"], ["", "def", "get_pos", "(", "pos", ",", "length", ",", "model_type", ")", ":", "\n", "    ", "if", "model_type", "==", "'rev'", ":", "\n", "        ", "return", "length", "-", "(", "pos", "+", "1", ")", "\n", "", "return", "pos", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_pos_bin": [[34, 47], ["abs"], "function", ["None"], ["", "def", "get_pos_bin", "(", "pos", ",", "length", ",", "model_type", ")", ":", "\n", "    ", "if", "pos", "<", "(", "length", "-", "1", ")", "/", "2", ":", "\n", "        ", "which_bin", "=", "0", "\n", "", "elif", "pos", ">", "(", "length", "-", "1", ")", "/", "2", ":", "\n", "        ", "which_bin", "=", "1", "\n", "", "elif", "length", "==", "1", ":", "\n", "        ", "which_bin", "=", "-", "5", "\n", "", "else", ":", "\n", "        ", "which_bin", "=", "-", "2", "\n", "\n", "", "if", "model_type", "==", "'rev'", ":", "\n", "        ", "return", "abs", "(", "which_bin", "-", "1", ")", "\n", "", "return", "which_bin", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_dataframe": [[49, 66], ["pandas.DataFrame", "get_pos_func", "p_values_bin.get_pos_bin", "tuple", "enumerate", "enumerate"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_pos_bin"], ["", "def", "get_dataframe", "(", "losses", ",", "y_values", ",", "lengths", ",", "model_type", ",", "get_pos_func", "=", "get_pos", ")", ":", "\n", "    ", "points", "=", "[", "\n", "{", "\n", "'loss'", ":", "loss", ",", "\n", "'char'", ":", "y_values", "[", "i", ",", "pos", "]", ",", "\n", "'pos'", ":", "get_pos_func", "(", "pos", ",", "lengths", "[", "i", "]", ",", "model_type", ")", ",", "\n", "'pos_bin'", ":", "get_pos_bin", "(", "pos", ",", "lengths", "[", "i", "]", ",", "model_type", ")", ",", "\n", "'length'", ":", "lengths", "[", "i", "]", ",", "\n", "'word'", ":", "tuple", "(", "y_values", "[", "i", "]", "[", ":", "lengths", "[", "i", "]", "]", ")", ",", "\n", "'idx'", ":", "i", ",", "\n", "}", "\n", "for", "i", ",", "word", "in", "enumerate", "(", "losses", ")", "\n", "for", "pos", ",", "loss", "in", "enumerate", "(", "word", ")", "\n", "if", "y_values", "[", "i", ",", "pos", "]", "!=", "0", "\n", "]", "\n", "\n", "return", "pd", ".", "DataFrame", "(", "points", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_bin_diffs": [[68, 74], ["df.groupby().agg", "groups[].to_dict", "df.groupby"], "function", ["None"], ["", "def", "get_bin_diffs", "(", "df", ",", "pos_column", ")", ":", "\n", "    ", "groups", "=", "df", ".", "groupby", "(", "pos_column", ")", ".", "agg", "(", "'mean'", ")", "\n", "means", "=", "groups", "[", "'loss'", "]", ".", "to_dict", "(", ")", "\n", "diff", "=", "means", "[", "1", "]", "-", "means", "[", "0", "]", "\n", "\n", "return", "diff", ",", "means", "[", "0", "]", ",", "means", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_p_value": [[76, 95], ["pandas.pivot_table().reset_index", "df.dropna.dropna", "df[].mean", "df[].values.copy().reshape", "range", "numpy.concatenate", "math.ceil", "pandas.pivot_table", "df[].values.copy", "numpy.random.randint", "numpy.abs", "abs", "df[].values.copy().reshape.repeat"], "function", ["None"], ["", "def", "get_p_value", "(", "df", ",", "n_permutations", ",", "step", "=", "1000", ")", ":", "\n", "    ", "df", "=", "pd", ".", "pivot_table", "(", "df", ",", "values", "=", "'loss'", ",", "index", "=", "[", "'idx'", "]", ",", "columns", "=", "[", "'pos_bin'", "]", ",", "aggfunc", "=", "np", ".", "mean", ")", ".", "reset_index", "(", ")", "\n", "\n", "df", "=", "df", ".", "dropna", "(", ")", "\n", "df", "[", "'diff'", "]", "=", "df", "[", "1", "]", "-", "df", "[", "0", "]", "\n", "diff_avg", "=", "df", "[", "'diff'", "]", ".", "mean", "(", ")", "\n", "\n", "diffs", "=", "df", "[", "'diff'", "]", ".", "values", ".", "copy", "(", ")", ".", "reshape", "(", "df", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "\n", "diff_permuts", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "math", ".", "ceil", "(", "n_permutations", "/", "step", ")", ")", ":", "\n", "        ", "signs", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ",", "(", "df", ".", "shape", "[", "0", "]", ",", "step", ")", ")", "*", "2", "-", "1", "\n", "diff_permut", "=", "(", "diffs", ".", "repeat", "(", "step", ",", "1", ")", "*", "signs", ")", ".", "mean", "(", "0", ")", "\n", "diff_permuts", "+=", "[", "diff_permut", "]", "\n", "", "diff_permuts", "=", "np", ".", "concatenate", "(", "diff_permuts", ")", "\n", "\n", "p_value", "=", "(", "np", ".", "abs", "(", "diff_permuts", ")", ">=", "abs", "(", "diff_avg", ")", ")", ".", "mean", "(", ")", "\n", "\n", "return", "p_value", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.analyse_loss": [[97, 112], ["p_values_bin.get_dataframe", "df.groupby().agg().reset_index.groupby().agg().reset_index", "df.groupby().agg().reset_index.groupby().agg", "df.groupby().agg.loss.mean", "df.groupby().agg.length.mean", "p_values_bin.get_bin_diffs", "p_values_bin.get_p_value", "df.groupby().agg().reset_index.groupby().agg", "df.groupby().agg().reset_index.groupby", "df.groupby().agg().reset_index.pos_bin.isin", "df.groupby().agg().reset_index.groupby"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.get_dataframe", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_bin_diffs", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_p_value"], ["", "def", "analyse_loss", "(", "lang", ",", "losses", ",", "y_values", ",", "lengths", ",", "n_permutations", "=", "100000", ",", "alpha", "=", "0.01", ",", "model_type", "=", "'norm'", ")", ":", "\n", "    ", "n_words", ",", "max_length", "=", "losses", ".", "shape", "\n", "df", "=", "get_dataframe", "(", "losses", ",", "y_values", ",", "lengths", ",", "model_type", "=", "model_type", ")", "\n", "df", "=", "df", ".", "groupby", "(", "[", "'pos_bin'", ",", "'idx'", "]", ")", ".", "agg", "(", "'mean'", ")", ".", "reset_index", "(", ")", "\n", "\n", "df_word", "=", "df", ".", "groupby", "(", "'idx'", ")", ".", "agg", "(", "'mean'", ")", "\n", "surp_avg", "=", "df_word", ".", "loss", ".", "mean", "(", ")", "\n", "length_avg", "=", "df_word", ".", "length", ".", "mean", "(", ")", "\n", "\n", "df", "=", "df", "[", "df", ".", "pos_bin", ".", "isin", "(", "{", "0", ",", "1", "}", ")", "]", "\n", "diff", ",", "surp_initial", ",", "surp_final", "=", "get_bin_diffs", "(", "df", ",", "'pos_bin'", ")", "\n", "\n", "p_value", "=", "get_p_value", "(", "df", ",", "n_permutations", "=", "n_permutations", ")", "\n", "\n", "return", "diff", ",", "surp_initial", ",", "surp_final", ",", "surp_avg", ",", "length_avg", ",", "p_value", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.analyse_language": [[114, 117], ["p_values_bin.analyse_loss"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.analyse_loss"], ["", "def", "analyse_language", "(", "lang", ",", "losses", ",", "y_values", ",", "lengths", ",", "n_permutations", "=", "100000", ",", "model_type", "=", "'norm'", ")", ":", "\n", "\n", "    ", "return", "analyse_loss", "(", "lang", ",", "losses", "[", "model_type", "]", ",", "y_values", "[", "model_type", "]", ",", "lengths", "[", "model_type", "]", ",", "n_permutations", "=", "n_permutations", ",", "model_type", "=", "model_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.analyse_languages": [[119, 127], ["tqdm.tqdm", "losses.keys", "p_values_bin.analyse_language"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.analyse_language"], ["", "def", "analyse_languages", "(", "losses", ",", "y_values", ",", "lengths", ",", "model_type", "=", "'norm'", ",", "n_permutations", "=", "1000", ")", ":", "\n", "\n", "    ", "results", "=", "[", "[", "'language'", ",", "'diff'", ",", "'surp_initial'", ",", "'surp_final'", ",", "'surp_avg'", ",", "'length_avg'", ",", "'p_value'", ",", "'n_permutations'", "]", "]", "\n", "for", "lang", "in", "tqdm", "(", "losses", ".", "keys", "(", ")", ",", "desc", "=", "'Getting p_values'", ")", ":", "\n", "        ", "diff", ",", "surp_initial", ",", "surp_final", ",", "surp_avg", ",", "length_avg", ",", "p_value", "=", "analyse_language", "(", "lang", ",", "losses", "[", "lang", "]", ",", "y_values", "[", "lang", "]", ",", "lengths", "[", "lang", "]", ",", "n_permutations", "=", "n_permutations", ",", "model_type", "=", "model_type", ")", "\n", "results", "+=", "[", "[", "lang", ",", "diff", ",", "surp_initial", ",", "surp_final", ",", "surp_avg", ",", "length_avg", ",", "p_value", ",", "n_permutations", "]", "]", "\n", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_p_values": [[129, 137], ["print", "h04_analysis.load_results.get_results", "p_values_bin.analyse_languages", "util.util.write_csv", "str", "str"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.load_results.get_results", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.analyse_languages", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.write_csv"], ["", "def", "get_p_values", "(", "keep_eos", ",", "args", ",", "model", ")", ":", "\n", "    ", "print", "(", "'\\nRunning model: %s - %s'", "%", "(", "model", ",", "str", "(", "keep_eos", ")", ")", ")", "\n", "(", "losses", ",", "y_values", ",", "lengths", ")", "=", "get_results", "(", "args", ".", "checkpoints_path", ",", "keep_eos", "=", "keep_eos", ",", "models", "=", "[", "model", "]", ")", "\n", "\n", "results", "=", "analyse_languages", "(", "losses", ",", "y_values", ",", "lengths", ",", "model_type", "=", "model", ",", "n_permutations", "=", "args", ".", "n_permutations", ")", "\n", "\n", "fname", "=", "'%s_%s__%s--%d.tsv'", "%", "(", "args", ".", "dataset", ",", "model", ",", "str", "(", "keep_eos", ")", ",", "args", ".", "n_permutations", ")", "\n", "util", ".", "write_csv", "(", "'results/p_values/bin--%s'", "%", "fname", ",", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.main": [[139, 146], ["p_values_bin.get_args", "p_values_bin.get_p_values"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.p_values_bin.get_p_values"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "models", "=", "[", "'position-nn'", ",", "'norm'", ",", "'cloze'", ",", "'rev'", ",", "'unigram'", "]", "\n", "\n", "for", "model", "in", "models", ":", "\n", "        ", "for", "keep_eos", "in", "[", "False", ",", "True", "]", ":", "\n", "            ", "get_p_values", "(", "keep_eos", ",", "args", ",", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.get_args": [[17, 22], ["util.argparser.add_argument", "util.argparser.parse_args"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "# Models", "\n", "    ", "argparser", ".", "add_argument", "(", "'--checkpoints-path'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "\n", "return", "argparser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.get_df": [[24, 30], ["h04_analysis.p_values_bin.get_dataframe"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.get_dataframe"], ["", "def", "get_df", "(", "lang", ",", "model_type", ",", "losses", ",", "y_values", ",", "lengths", ")", ":", "\n", "    ", "df", "=", "get_dataframe", "(", "losses", ",", "y_values", ",", "lengths", ",", "model_type", "=", "model_type", ")", "\n", "df", "[", "'lang'", "]", "=", "lang", "\n", "df", "[", "'model_type'", "]", "=", "model_type", "\n", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.get_df_full": [[32, 47], ["print", "losses.keys", "pandas.concat", "losses_lang.keys", "len", "print_eow.get_df"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.get_df"], ["", "def", "get_df_full", "(", "losses", ",", "y_values", ",", "lengths", ")", ":", "\n", "    ", "print", "(", "'# Languages: %d\\n'", "%", "len", "(", "losses", ")", ")", "\n", "\n", "dfs", "=", "[", "]", "\n", "for", "lang", "in", "losses", ".", "keys", "(", ")", ":", "\n", "        ", "losses_lang", "=", "losses", "[", "lang", "]", "\n", "for", "model_type", "in", "losses_lang", ".", "keys", "(", ")", ":", "\n", "            ", "dfs", "+=", "[", "\n", "get_df", "(", "lang", ",", "model_type", ",", "losses", "[", "lang", "]", "[", "model_type", "]", ",", "\n", "y_values", "[", "lang", "]", "[", "model_type", "]", ",", "\n", "lengths", "[", "lang", "]", "[", "model_type", "]", ")", "\n", "]", "\n", "\n", "", "", "dfs", "=", "pd", ".", "concat", "(", "dfs", ")", "\n", "return", "dfs", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.get_data": [[49, 70], ["pandas.concat", "df.groupby().agg().reset_index.groupby().agg().reset_index", "os.path.join", "h04_analysis.load_results.get_results", "print_eow.get_df_full", "df.groupby().agg().reset_index.groupby().agg", "df.groupby().agg().reset_index.groupby().agg().reset_index", "df.groupby().agg().reset_index.groupby().agg", "df.groupby().agg().reset_index.drop_duplicates", "df.groupby().agg().reset_index.groupby", "df.groupby().agg().reset_index.groupby().agg", "df.groupby().agg().reset_index.groupby", "df.groupby().agg().reset_index.groupby"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.load_results.get_results", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.get_df_full"], ["", "def", "get_data", "(", "models", ",", "eow_symbol", ",", "args", ")", ":", "\n", "    ", "dfs", "=", "[", "]", "\n", "for", "dataset", "in", "[", "'celex'", ",", "'wiki'", ",", "'northeuralex'", "]", ":", "\n", "        ", "checkpoints_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoints_path", ",", "dataset", ")", "\n", "(", "losses", ",", "y_values", ",", "lengths", ")", "=", "get_results", "(", "checkpoints_path", ",", "keep_eos", "=", "True", ",", "models", "=", "models", ")", "\n", "\n", "df", "=", "get_df_full", "(", "losses", ",", "y_values", ",", "lengths", ")", "\n", "\n", "n_words", "=", "df", ".", "drop_duplicates", "(", "[", "'idx'", ",", "'lang'", ",", "'model_type'", "]", ")", ".", "shape", "[", "0", "]", "\n", "n_eow", "=", "(", "df", ".", "char", "==", "eow_symbol", ")", ".", "sum", "(", ")", "\n", "assert", "(", "n_eow", "==", "n_words", ")", ",", "'Number of eow symbols should equal number of analysed words'", "\n", "\n", "df", "[", "'is_eow'", "]", "=", "(", "df", "[", "'char'", "]", "==", "eow_symbol", ")", "\n", "df", "=", "df", ".", "groupby", "(", "[", "'is_eow'", ",", "'model_type'", ",", "'lang'", "]", ")", ".", "agg", "(", "'mean'", ")", "\n", "df", "=", "df", ".", "groupby", "(", "[", "'is_eow'", ",", "'model_type'", "]", ")", ".", "agg", "(", "'mean'", ")", ".", "reset_index", "(", ")", "\n", "df", "[", "'dataset'", "]", "=", "dataset", "\n", "\n", "dfs", "+=", "[", "df", "]", "\n", "\n", "", "df", "=", "pd", ".", "concat", "(", "dfs", ")", "\n", "return", "df", ".", "groupby", "(", "[", "'is_eow'", ",", "'model_type'", "]", ")", ".", "agg", "(", "'mean'", ")", ".", "reset_index", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.print_eow": [[72, 82], ["df[].loss.item", "print", "df[].loss.item"], "function", ["None"], ["", "def", "print_eow", "(", "df", ",", "models", ",", "model_names", ")", ":", "\n", "    ", "latex_str", "=", "'%s & %.2f & %.2f \\\\\\\\'", "\n", "for", "model", "in", "models", ":", "\n", "        ", "if", "model", "in", "[", "'position-nn'", ",", "'cloze'", "]", ":", "\n", "            ", "eow_loss", "=", "0", "\n", "", "else", ":", "\n", "            ", "eow_loss", "=", "df", "[", "(", "df", ".", "model_type", "==", "model", ")", "&", "(", "df", ".", "is_eow", "==", "True", ")", "]", ".", "loss", ".", "item", "(", ")", "\n", "", "neow_loss", "=", "df", "[", "(", "df", ".", "model_type", "==", "model", ")", "&", "(", "df", ".", "is_eow", "==", "False", ")", "]", ".", "loss", ".", "item", "(", ")", "\n", "\n", "print", "(", "latex_str", "%", "(", "model_names", "[", "model", "]", ",", "eow_loss", ",", "neow_loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.main": [[84, 99], ["print_eow.get_args", "print_eow.get_data", "print_eow.print_eow"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.get_data", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_eow.print_eow"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "eow_symbol", "=", "2", "\n", "\n", "model_names", "=", "{", "\n", "'norm'", ":", "'Forward'", ",", "\n", "'rev'", ":", "'Backward'", ",", "\n", "'unigram'", ":", "'Unigram'", ",", "\n", "'position-nn'", ":", "'Position'", ",", "\n", "'cloze'", ":", "'Cloze'", ",", "\n", "}", "\n", "models", "=", "[", "'norm'", ",", "'rev'", ",", "'unigram'", ",", "'position-nn'", ",", "'cloze'", "]", "\n", "\n", "df", "=", "get_data", "(", "models", ",", "eow_symbol", ",", "args", ")", "\n", "print_eow", "(", "df", ",", "models", ",", "model_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_significant_diffs.get_args": [[14, 28], ["util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.parse_args"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "# Models", "\n", "# argparser.add_argument('--checkpoints-path', type=str, required=True)", "\n", "    ", "argparser", ".", "add_argument", "(", "'--model-type'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "# Other", "\n", "argparser", ".", "add_argument", "(", "'--n-permutations'", ",", "type", "=", "int", ",", "default", "=", "100000", ")", "\n", "# argparser.add_argument('--analyse', type=str, default='none',", "\n", "#                        choices=['none', 'vowels', 'consonants'])", "\n", "\n", "args", "=", "argparser", ".", "parse_args", "(", ")", "\n", "args", ".", "keep_eos", "=", "args", ".", "model_type", "in", "[", "'norm'", ",", "'rev'", "]", "\n", "# args.reverse = (args.model_type in constants.REVERSE_MODELS)", "\n", "# args.analyse = None if args.analyse == 'none' else args.analyse", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_significant_diffs.corrections": [[30, 42], ["df.sort_values", "range", "[].max"], "function", ["None"], ["", "def", "corrections", "(", "df", ",", "alpha", ")", ":", "\n", "    ", "df", ".", "sort_values", "(", "'p_value'", ",", "inplace", "=", "True", ")", "\n", "df", "[", "'count'", "]", "=", "range", "(", "1", ",", "df", ".", "shape", "[", "0", "]", "+", "1", ")", "\n", "df", "[", "'threshold'", "]", "=", "df", "[", "'count'", "]", "*", "alpha", "/", "df", ".", "shape", "[", "0", "]", "\n", "df", "[", "'significant'", "]", "=", "df", "[", "'p_value'", "]", "<=", "df", "[", "'threshold'", "]", "\n", "last", "=", "df", "[", "df", "[", "'significant'", "]", "]", "[", "'count'", "]", ".", "max", "(", ")", "\n", "df", ".", "loc", "[", "df", ".", "iloc", "[", ":", "last", "]", ".", "index", ",", "'significant'", "]", "=", "True", "\n", "\n", "del", "df", "[", "'count'", "]", "\n", "del", "df", "[", "'threshold'", "]", "\n", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_significant_diffs.main": [[44, 70], ["print_significant_diffs.get_args", "print", "pandas.read_csv", "print_significant_diffs.corrections", "set", "set", "set", "print", "print", "print", "print", "print", "df_sign[].language.unique", "df_sign[].language.unique", "df[].language.unique", "str", "str", "len", "str", "len", "str", "str", "sorted", "sorted", "len", "sorted", "len"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_significant_diffs.corrections"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "alpha", "=", "0.01", "\n", "\n", "print", "(", "'\\nRunning model: %s - %s'", "%", "(", "args", ".", "model_type", ",", "str", "(", "args", ".", "keep_eos", ")", ")", ")", "\n", "\n", "fname", "=", "'bin--%s_%s__%s--%d.tsv'", "%", "(", "args", ".", "dataset", ",", "args", ".", "model_type", ",", "str", "(", "args", ".", "keep_eos", ")", ",", "args", ".", "n_permutations", ")", "\n", "df", "=", "pd", ".", "read_csv", "(", "'results/p_values/%s'", "%", "fname", ",", "sep", "=", "'\\t'", ")", "\n", "\n", "df", "=", "corrections", "(", "df", ",", "alpha", ")", "\n", "# print(df)", "\n", "# print(\"Average:\", df['surp_avg'].mean())", "\n", "# # print(df['diff'].min())", "\n", "# # print(df['diff'].max())", "\n", "\n", "# # import ipdb; ipdb.set_trace()", "\n", "df_sign", "=", "df", "[", "df", ".", "significant", "]", "\n", "sign_neg", "=", "set", "(", "df_sign", "[", "df_sign", "[", "'diff'", "]", "<", "0", "]", ".", "language", ".", "unique", "(", ")", ")", "\n", "sign_pos", "=", "set", "(", "df_sign", "[", "df_sign", "[", "'diff'", "]", ">", "0", "]", ".", "language", ".", "unique", "(", ")", ")", "\n", "insign", "=", "set", "(", "df", "[", "~", "df", ".", "significant", "]", ".", "language", ".", "unique", "(", ")", ")", "\n", "\n", "print", "(", "'Significance Results:'", ")", "\n", "print", "(", "'\\t# Significant Initial Languages: %d -- %s'", "%", "(", "len", "(", "sign_neg", ")", ",", "str", "(", "sorted", "(", "sign_neg", ")", ")", ")", ")", "\n", "print", "(", "'\\t# Significant Final Languages: %d -- %s'", "%", "(", "len", "(", "sign_pos", ")", ",", "str", "(", "sorted", "(", "sign_pos", ")", ")", ")", ")", "\n", "print", "(", "'\\t# Insignificant Languages: %d -- %s'", "%", "(", "df", ".", "shape", "[", "0", "]", "-", "len", "(", "sign_pos", ")", "-", "len", "(", "sign_neg", ")", ",", "str", "(", "sorted", "(", "insign", ")", ")", ")", ")", "\n", "print", "(", "'\\t# Total Languages: %d'", "%", "df", ".", "shape", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.get_args": [[34, 41], ["util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.parse_args"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "# Models", "\n", "    ", "argparser", ".", "add_argument", "(", "'--checkpoints-path'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "# Results", "\n", "argparser", ".", "add_argument", "(", "'--results-path'", ",", "type", "=", "str", ",", "default", "=", "'results/'", ")", "\n", "\n", "return", "argparser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.get_dataframe": [[43, 57], ["max", "pandas.DataFrame", "enumerate", "enumerate"], "function", ["None"], ["", "def", "get_dataframe", "(", "losses", ",", "y_values", ",", "lengths", ",", "model_type", "=", "'norm'", ")", ":", "\n", "    ", "max_length", "=", "max", "(", "lengths", ")", "\n", "points", "=", "[", "\n", "{", "\n", "'loss'", ":", "loss", ",", "\n", "'pos_split'", ":", "pos", "if", "model_type", "not", "in", "[", "'rev'", ",", "'trie-rev'", "]", "else", "-", "pos", ",", "\n", "'idx'", ":", "i", ",", "\n", "}", "\n", "for", "i", ",", "word", "in", "enumerate", "(", "losses", ")", "\n", "for", "pos", ",", "loss", "in", "enumerate", "(", "word", ")", "\n", "if", "y_values", "[", "i", ",", "pos", "]", "!=", "0", "\n", "]", "\n", "\n", "return", "pd", ".", "DataFrame", "(", "points", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.get_dataframe_dataset": [[59, 71], ["losses.keys", "pandas.concat", "plot_forward_backward.get_dataframe"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.get_dataframe"], ["", "def", "get_dataframe_dataset", "(", "losses", ",", "y_values", ",", "lengths", ",", "model_types", ")", ":", "\n", "    ", "dfs", "=", "[", "]", "\n", "\n", "for", "lang", "in", "losses", ".", "keys", "(", ")", ":", "\n", "        ", "for", "model_type", "in", "model_types", ":", "\n", "            ", "df", "=", "get_dataframe", "(", "losses", "[", "lang", "]", "[", "model_type", "]", ",", "y_values", "[", "lang", "]", "[", "model_type", "]", ",", "lengths", "[", "lang", "]", "[", "model_type", "]", ",", "model_type", ")", "\n", "df", "[", "'lang'", "]", "=", "lang", "\n", "df", "[", "'model_type'", "]", "=", "model_type", "\n", "\n", "dfs", "+=", "[", "df", "]", "\n", "\n", "", "", "return", "pd", ".", "concat", "(", "dfs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.get_dataframe_full": [[73, 88], ["pandas.concat", "os.path.join", "os.path.join", "h04_analysis.load_results.get_results", "plot_forward_backward.get_dataframe_dataset"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.load_results.get_results", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.get_dataframe_dataset"], ["", "def", "get_dataframe_full", "(", "models", ",", "args", ",", "keep_eos", "=", "True", ")", ":", "\n", "    ", "dfs", "=", "[", "]", "\n", "dataset_name", "=", "{", "'wiki'", ":", "'wikipedia'", "}", "\n", "\n", "for", "dataset", "in", "[", "'celex'", ",", "'wiki'", ",", "'northeuralex'", "]", ":", "\n", "        ", "data_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "dataset", ")", "\n", "checkpoints_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoints_path", ",", "dataset", ")", "\n", "\n", "(", "losses", ",", "y_values", ",", "lengths", ")", "=", "get_results", "(", "checkpoints_path", ",", "keep_eos", "=", "keep_eos", ",", "models", "=", "models", ")", "\n", "df", "=", "get_dataframe_dataset", "(", "losses", ",", "y_values", ",", "lengths", ",", "model_types", "=", "models", ")", "\n", "df", "[", "'dataset'", "]", "=", "dataset_name", "[", "dataset", "]", "if", "dataset", "in", "dataset_name", "else", "dataset", "\n", "\n", "dfs", "+=", "[", "df", "]", "\n", "\n", "", "return", "pd", ".", "concat", "(", "dfs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.format_dataframe": [[90, 102], ["df[].apply"], "function", ["None"], ["", "def", "format_dataframe", "(", "df", ")", ":", "\n", "    ", "label", "=", "{", "\n", "'norm'", ":", "'standard'", ",", "\n", "'rev'", ":", "'reversed'", ",", "\n", "}", "\n", "\n", "y_value", "=", "'Surprisal'", "\n", "\n", "df", "[", "y_value", "]", "=", "df", "[", "'loss'", "]", "\n", "df", "[", "'model'", "]", "=", "df", "[", "'model_type'", "]", ".", "apply", "(", "lambda", "x", ":", "label", "[", "x", "]", ")", "\n", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.plot_languages_split": [[104, 137], ["df[].copy", "numpy.sort", "df[].unique", "ax.set_xlim", "ax.legend", "seaborn.regplot", "int", "int", "len", "len"], "function", ["None"], ["", "def", "plot_languages_split", "(", "df", ",", "results_path", ",", "model_type", ",", "ax", ")", ":", "\n", "    ", "hue", "=", "'Dataset'", "\n", "\n", "if", "model_type", "in", "[", "'rev'", "]", ":", "\n", "        ", "y_value", "=", "'Backward'", "\n", "x_value", "=", "'Position from End'", "\n", "", "else", ":", "\n", "        ", "y_value", "=", "'Forward'", "\n", "x_value", "=", "'Position from Start'", "\n", "\n", "", "df", "=", "df", "[", "df", "[", "'model_type'", "]", "==", "model_type", "]", ".", "copy", "(", ")", "\n", "df", "[", "hue", "]", "=", "df", "[", "'dataset'", "]", "\n", "df", "[", "y_value", "]", "=", "df", "[", "'Surprisal'", "]", "\n", "df", "[", "x_value", "]", "=", "df", "[", "'pos_split'", "]", "\n", "\n", "lengths", "=", "np", ".", "sort", "(", "df", "[", "x_value", "]", ".", "values", ")", "\n", "if", "model_type", "in", "[", "'rev'", "]", ":", "\n", "        ", "x_len", "=", "lengths", "[", "int", "(", "0.1", "*", "len", "(", "lengths", ")", ")", "-", "1", "]", "\n", "xlim", "=", "[", "x_len", "-", ".25", ",", "0.25", "]", "\n", "", "else", ":", "\n", "        ", "x_len", "=", "lengths", "[", "int", "(", "0.9", "*", "len", "(", "lengths", ")", ")", "+", "1", "]", "\n", "xlim", "=", "[", "-", "0.25", ",", "x_len", "+", ".25", "]", "\n", "\n", "", "lines", ",", "legends", "=", "[", "]", ",", "[", "]", "\n", "for", "mode", "in", "df", "[", "hue", "]", ".", "unique", "(", ")", ":", "\n", "        ", "df_temp", "=", "df", "[", "df", "[", "hue", "]", "==", "mode", "]", "\n", "sns", ".", "regplot", "(", "df_temp", "[", "x_value", "]", ",", "df_temp", "[", "y_value", "]", ",", "ax", "=", "ax", ",", "x_bins", "=", "10", ",", "label", "=", "mode", ")", "\n", "legends", "+=", "[", "mode", "]", "\n", "\n", "", "ax", ".", "set_xlim", "(", "xlim", ")", "\n", "ax", ".", "legend", "(", "handletextpad", "=", "0", ",", "borderpad", "=", "0.1", ",", "borderaxespad", "=", "0.2", ",", "labelspacing", "=", "0.1", ")", "\n", "\n", "return", "lines", ",", "legends", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.plot_langs": [[139, 155], ["matplotlib.subplots", "matplotlib.subplots_adjust", "plot_forward_backward.plot_languages_split", "plot_forward_backward.plot_languages_split", "matplotlib.ylim", "os.path.join", "fig.savefig"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.plot_languages_split", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.plot_languages_split"], ["", "def", "plot_langs", "(", "df", ",", "models", ",", "results_path", ")", ":", "\n", "    ", "name", "=", "{", "\n", "'trie'", ":", "'trie'", ",", "\n", "'norm'", ":", "'lstm'", ",", "\n", "}", "\n", "fig", ",", "(", "ax1", ",", "ax2", ")", "=", "plt", ".", "subplots", "(", "nrows", "=", "2", ",", "sharey", "=", "True", ")", "\n", "plt", ".", "subplots_adjust", "(", "hspace", "=", ".7", ")", "\n", "\n", "plot_languages_split", "(", "df", ",", "results_path", ",", "models", "[", "0", "]", ",", "ax", "=", "ax1", ")", "\n", "lines", ",", "legends", "=", "plot_languages_split", "(", "df", ",", "results_path", ",", "models", "[", "1", "]", ",", "ax", "=", "ax2", ")", "\n", "\n", "plt", ".", "ylim", "(", "[", "1.3", ",", "5", "]", ")", "\n", "\n", "fname", "=", "'surprisal--forward_backward.pdf'", "\n", "fname", "=", "os", ".", "path", ".", "join", "(", "results_path", ",", "fname", ")", "\n", "fig", ".", "savefig", "(", "fname", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.main": [[157, 165], ["plot_forward_backward.get_args", "plot_forward_backward.get_dataframe_full", "plot_forward_backward.format_dataframe", "plot_forward_backward.plot_langs"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.get_dataframe_full", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.format_dataframe", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_forward_backward.plot_langs"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "\n", "models", "=", "[", "'norm'", ",", "'rev'", "]", "\n", "df", "=", "get_dataframe_full", "(", "models", ",", "args", ",", "keep_eos", "=", "True", ")", "\n", "\n", "df", "=", "format_dataframe", "(", "df", ")", "\n", "plot_langs", "(", "df", ",", "models", ",", "args", ".", "results_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_bin.get_args": [[40, 46], ["util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.parse_args"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "# Other", "\n", "    ", "argparser", ".", "add_argument", "(", "'--n-permutations'", ",", "type", "=", "int", ",", "default", "=", "100000", ")", "\n", "argparser", ".", "add_argument", "(", "'--results-path'", ",", "type", "=", "str", ",", "default", "=", "'results/'", ")", "\n", "\n", "return", "argparser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_bin.plot_languages_new": [[48, 72], ["min", "max", "seaborn.scatterplot", "matplotlib.plot", "sns.scatterplot.get_legend_handles_labels", "sns.scatterplot.legend", "os.path.join", "matplotlib.savefig", "matplotlib.close", "df[].min", "df[].min", "df[].max", "df[].max"], "function", ["None"], ["", "def", "plot_languages_new", "(", "df", ",", "results_path", ",", "model", ")", ":", "\n", "    ", "hue", "=", "'Name'", "\n", "y_value", "=", "'Surprisal'", "\n", "x_value", "=", "'Position'", "\n", "\n", "x_label", "=", "'Initial Surprisal (bits)'", "\n", "y_label", "=", "'Final Surprisal (bits)'", "\n", "\n", "df", "[", "x_label", "]", "=", "df", "[", "'surp_initial'", "]", "\n", "df", "[", "y_label", "]", "=", "df", "[", "'surp_final'", "]", "\n", "markers", "=", "{", "'celex'", ":", "'s'", ",", "'northeuralex'", ":", "'X'", ",", "'wikipedia'", ":", "'.'", "}", "\n", "\n", "min_x", "=", "min", "(", "df", "[", "x_label", "]", ".", "min", "(", ")", ",", "df", "[", "y_label", "]", ".", "min", "(", ")", ")", "\n", "max_x", "=", "max", "(", "df", "[", "x_label", "]", ".", "max", "(", ")", ",", "df", "[", "y_label", "]", ".", "max", "(", ")", ")", "\n", "fig", "=", "sns", ".", "scatterplot", "(", "x", "=", "x_label", ",", "y", "=", "y_label", ",", "data", "=", "df", ",", "hue", "=", "'dataset'", ",", "style", "=", "'dataset'", ",", "s", "=", "200", ",", "alpha", "=", ".8", ")", "\n", "plt", ".", "plot", "(", "[", "min_x", ",", "max_x", "]", ",", "[", "min_x", ",", "max_x", "]", ",", "'--'", ",", "color", "=", "'C7'", ",", "alpha", "=", ".5", ",", "linewidth", "=", "3", ")", "\n", "\n", "handles", ",", "labels", "=", "fig", ".", "get_legend_handles_labels", "(", ")", "\n", "fig", ".", "legend", "(", "handles", "=", "handles", "[", "1", ":", "]", ",", "labels", "=", "labels", "[", "1", ":", "]", ",", "handletextpad", "=", "0", ",", "borderpad", "=", "0.2", ",", "borderaxespad", "=", "0.1", ",", "labelspacing", "=", "0.1", ")", "\n", "\n", "fname", "=", "'surprisal--diff_%s.pdf'", "%", "model", "\n", "fname", "=", "os", ".", "path", ".", "join", "(", "results_path", ",", "fname", ")", "\n", "plt", ".", "savefig", "(", "fname", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_bin.get_data_an_plot": [[74, 90], ["pandas.concat", "pd.read_csv.sort_values", "plot_bin.plot_languages_new", "pandas.read_csv", "str"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_bin.plot_languages_new"], ["", "def", "get_data_an_plot", "(", "args", ",", "model", ",", "keep_eos", ")", ":", "\n", "    ", "datasets", "=", "[", "'celex'", ",", "'northeuralex'", ",", "'wiki'", "]", "\n", "dataset_name", "=", "{", "'wiki'", ":", "'wikipedia'", "}", "\n", "\n", "dfs", "=", "[", "]", "\n", "for", "dataset", "in", "datasets", ":", "\n", "        ", "fname", "=", "'bin--%s_%s__%s--%d.tsv'", "%", "(", "dataset", ",", "model", ",", "str", "(", "keep_eos", ")", ",", "args", ".", "n_permutations", ")", "\n", "df", "=", "pd", ".", "read_csv", "(", "'results/p_values/%s'", "%", "fname", ",", "sep", "=", "'\\t'", ")", "\n", "df", "[", "'dataset'", "]", "=", "dataset_name", "[", "dataset", "]", "if", "dataset", "in", "dataset_name", "else", "dataset", "\n", "dfs", "+=", "[", "df", "]", "\n", "\n", "", "df", "=", "pd", ".", "concat", "(", "dfs", ")", "\n", "df", ".", "sort_values", "(", "'dataset'", ",", "ascending", "=", "False", ",", "inplace", "=", "True", ")", "\n", "\n", "df", "[", "'diff'", "]", "=", "-", "df", "[", "'diff'", "]", "\n", "df", "=", "plot_languages_new", "(", "df", ",", "args", ".", "results_path", ",", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_bin.main": [[92, 103], ["plot_bin.get_args", "plot_bin.get_data_an_plot", "plot_bin.get_data_an_plot"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_bin.get_data_an_plot", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.plot_bin.get_data_an_plot"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "model", "=", "'cloze'", "\n", "\n", "keep_eos", "=", "False", "\n", "for", "model", "in", "[", "'cloze'", ",", "'unigram'", ",", "'position-nn'", "]", ":", "\n", "        ", "get_data_an_plot", "(", "args", ",", "model", ",", "keep_eos", ")", "\n", "\n", "", "keep_eos", "=", "True", "\n", "for", "model", "in", "[", "'norm'", ",", "'rev'", "]", ":", "\n", "        ", "get_data_an_plot", "(", "args", ",", "model", ",", "keep_eos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.load_results.load_alphabet": [[14, 18], ["os.path.join", "h02_learn.dataset.load_data", "h02_learn.dataset.get_alphabet"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.load_data", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_alphabet"], ["def", "load_alphabet", "(", "data_path", ",", "lang", ")", ":", "\n", "    ", "fname", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "lang", ",", "'processed.pckl'", ")", "\n", "data", "=", "load_data", "(", "fname", ")", "\n", "return", "get_alphabet", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.load_results.load_losses": [[20, 42], ["util.util.read_data", "[].cpu().numpy", "[].cpu().numpy", "math.log", "[].cpu", "[].cpu"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.read_data"], ["", "def", "load_losses", "(", "lang", ",", "model_path", ",", "keep_eos", "=", "False", ")", ":", "\n", "    ", "fname", "=", "'losses.pckl'", "\n", "results_file", "=", "'%s/%s'", "%", "(", "model_path", ",", "fname", ")", "\n", "results", "=", "util", ".", "read_data", "(", "results_file", ")", "\n", "\n", "if", "not", "keep_eos", ":", "\n", "        ", "loss_value", "=", "'losses_no_eos'", "\n", "", "else", ":", "\n", "        ", "loss_value", "=", "'losses'", "\n", "\n", "", "loss", "=", "results", "[", "'test'", "]", "[", "loss_value", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "/", "math", ".", "log", "(", "2", ")", "\n", "y_values", "=", "results", "[", "'test'", "]", "[", "'y_values'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "not", "keep_eos", ":", "\n", "        ", "mask", "=", "(", "y_values", "==", "2", ")", "\n", "loss", "[", "mask", "]", "=", "0", "\n", "y_values", "[", "mask", "]", "=", "0", "\n", "\n", "", "lengths", "=", "(", "y_values", "!=", "0", ")", ".", "sum", "(", "1", ")", "\n", "if", "keep_eos", ":", "\n", "        ", "lengths", "=", "lengths", "-", "1", "\n", "\n", "", "return", "loss", ",", "y_values", ",", "lengths", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.load_results.get_results": [[44, 83], ["util.util.get_dirs", "lang_path.split", "os.path.join", "load_results.load_losses", "print"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.get_dirs", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.load_results.load_losses"], ["", "def", "get_results", "(", "checkpoints_path", ",", "keep_eos", "=", "False", ",", "models", "=", "None", ")", ":", "\n", "# pylint: disable=too-many-locals", "\n", "    ", "languages", "=", "util", ".", "get_dirs", "(", "checkpoints_path", ")", "\n", "\n", "if", "models", "is", "None", ":", "\n", "        ", "models", "=", "[", "'rev'", ",", "'norm'", ",", "'unigram'", ",", "'cloze'", ",", "'position-nn'", "]", "\n", "\n", "", "losses", "=", "{", "}", "\n", "y_values", "=", "{", "}", "\n", "lengths", "=", "{", "}", "\n", "\n", "for", "lang_path", "in", "languages", ":", "\n", "\n", "        ", "lang", "=", "lang_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "\n", "losses", "[", "lang", "]", "=", "{", "}", "\n", "y_values", "[", "lang", "]", "=", "{", "}", "\n", "lengths", "[", "lang", "]", "=", "{", "}", "\n", "\n", "try", ":", "\n", "            ", "for", "model_type", "in", "models", ":", "\n", "                ", "model_path", "=", "os", ".", "path", ".", "join", "(", "lang_path", ",", "model_type", ")", "\n", "\n", "loss", ",", "y_value", ",", "length", "=", "load_losses", "(", "\n", "lang", ",", "model_path", ",", "keep_eos", "=", "keep_eos", ")", "\n", "\n", "losses", "[", "lang", "]", "[", "model_type", "]", "=", "loss", "\n", "y_values", "[", "lang", "]", "[", "model_type", "]", "=", "y_value", "\n", "lengths", "[", "lang", "]", "[", "model_type", "]", "=", "length", "\n", "\n", "", "", "except", "FileNotFoundError", "as", "err", ":", "\n", "            ", "print", "(", "'Error loading lang %s results'", "%", "lang", ")", "\n", "\n", "del", "losses", "[", "lang", "]", "\n", "del", "y_values", "[", "lang", "]", "\n", "del", "lengths", "[", "lang", "]", "\n", "continue", "\n", "\n", "", "", "return", "(", "losses", ",", "y_values", ",", "lengths", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_diff_table.get_args": [[9, 13], ["util.argparser.add_argument", "util.argparser.parse_args"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "# Other", "\n", "    ", "argparser", ".", "add_argument", "(", "'--n-permutations'", ",", "type", "=", "int", ",", "default", "=", "100000", ")", "\n", "return", "argparser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h04_analysis.print_diff_table.main": [[15, 57], ["print_diff_table.get_args", "print", "pandas.concat", "pandas.read_csv", "tuple", "df[].mean", "df[].mean", "str", "max", "df[].mean", "df[].mean", "df[].mean"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "\n", "model_names", "=", "{", "\n", "'norm'", ":", "'Forward'", ",", "\n", "'rev'", ":", "'Backward'", ",", "\n", "'unigram'", ":", "'Unigram'", ",", "\n", "'position-nn'", ":", "'Position'", ",", "\n", "'cloze'", ":", "'Cloze'", ",", "\n", "}", "\n", "datasets", "=", "[", "'celex'", ",", "'northeuralex'", ",", "'wiki'", "]", "\n", "models", "=", "[", "'norm'", ",", "'rev'", ",", "'unigram'", ",", "'position-nn'", ",", "'cloze'", "]", "\n", "\n", "latex_str", "=", "'%s & %s & %s & %s & %s & %s & %s \\\\\\\\'", "\n", "\n", "for", "model", "in", "models", ":", "\n", "        ", "results", "=", "[", "model_names", "[", "model", "]", "]", "\n", "for", "keep_eos", "in", "[", "True", ",", "False", "]", ":", "\n", "            ", "if", "model", "in", "[", "'unigram'", ",", "'position-nn'", ",", "'cloze'", "]", "and", "keep_eos", "==", "True", ":", "\n", "                ", "results", "+=", "[", "'-'", ",", "'-'", ",", "'-'", "]", "\n", "continue", "\n", "\n", "", "dfs", "=", "[", "]", "\n", "for", "dataset", "in", "datasets", ":", "\n", "                ", "fname", "=", "'bin--%s_%s__%s--%d.tsv'", "%", "(", "dataset", ",", "model", ",", "str", "(", "keep_eos", ")", ",", "args", ".", "n_permutations", ")", "\n", "df", "=", "pd", ".", "read_csv", "(", "'results/p_values/%s'", "%", "fname", ",", "sep", "=", "'\\t'", ")", "\n", "\n", "df", "[", "'diff'", "]", "=", "-", "df", "[", "'diff'", "]", "\n", "df", "[", "'dataset'", "]", "=", "dataset", "\n", "\n", "dfs", "+=", "[", "df", "]", "\n", "\n", "", "df", "=", "pd", ".", "concat", "(", "dfs", ")", "\n", "\n", "results", "+=", "[", "\n", "'%.2f'", "%", "df", "[", "'surp_initial'", "]", ".", "mean", "(", ")", ",", "'%.2f'", "%", "df", "[", "'surp_final'", "]", ".", "mean", "(", ")", ",", "\n", "'%.1f \\\\%%'", "%", "(", "\n", "100", "*", "df", "[", "'diff'", "]", ".", "mean", "(", ")", "/", "\n", "max", "(", "df", "[", "'surp_initial'", "]", ".", "mean", "(", ")", ",", "df", "[", "'surp_final'", "]", ".", "mean", "(", ")", ")", "\n", ")", "]", "\n", "\n", "", "print", "(", "latex_str", "%", "tuple", "(", "results", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument": [[20, 22], ["parser.add_argument"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument"], ["def", "add_argument", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "parser", ".", "add_argument", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.set_defaults": [[24, 26], ["parser.set_defaults"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.set_defaults"], ["", "def", "set_defaults", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "parser", ".", "set_defaults", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.get_default": [[28, 30], ["parser.get_default"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.get_default"], ["", "def", "get_default", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "parser", ".", "get_default", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args": [[32, 37], ["parser.parse_args", "util.util.config"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.config"], ["", "def", "parse_args", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "util", ".", "config", "(", "args", ".", "seed", ")", "\n", "return", "args", "\n", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.config": [[15, 19], ["numpy.random.seed", "torch.manual_seed", "random.seed"], "function", ["None"], ["def", "config", "(", "seed", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.write_csv": [[21, 25], ["io.open", "csv.writer", "csv.writer.writerows"], "function", ["None"], ["", "def", "write_csv", "(", "filename", ",", "results", ")", ":", "\n", "    ", "with", "io", ".", "open", "(", "filename", ",", "'w'", ",", "encoding", "=", "'utf8'", ")", "as", "f", ":", "\n", "        ", "writer", "=", "csv", ".", "writer", "(", "f", ",", "delimiter", "=", "'\\t'", ")", "\n", "writer", ".", "writerows", "(", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.write_data": [[27, 30], ["open", "pickle.dump"], "function", ["None"], ["", "", "def", "write_data", "(", "filename", ",", "embeddings", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "\"wb\"", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "embeddings", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.read_data": [[32, 36], ["open", "pickle.load"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.load"], ["", "", "def", "read_data", "(", "filename", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "\"rb\"", ")", "as", "f", ":", "\n", "        ", "embeddings", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "return", "embeddings", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.read_data_if_exists": [[38, 43], ["util.read_data"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.read_data"], ["", "def", "read_data_if_exists", "(", "filename", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "return", "read_data", "(", "filename", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.remove_if_exists": [[45, 50], ["os.remove"], "function", ["None"], ["", "", "def", "remove_if_exists", "(", "fname", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "remove", "(", "fname", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.get_filenames": [[52, 57], ["sorted", "os.path.join", "os.listdir", "os.path.isfile", "os.path.join"], "function", ["None"], ["", "", "def", "get_filenames", "(", "filepath", ")", ":", "\n", "    ", "filenames", "=", "[", "os", ".", "path", ".", "join", "(", "filepath", ",", "f", ")", "\n", "for", "f", "in", "os", ".", "listdir", "(", "filepath", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "filepath", ",", "f", ")", ")", "]", "\n", "return", "sorted", "(", "filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.get_dirs": [[59, 64], ["sorted", "os.path.join", "os.listdir", "os.path.isdir", "os.path.join"], "function", ["None"], ["", "def", "get_dirs", "(", "filepath", ")", ":", "\n", "    ", "filenames", "=", "[", "os", ".", "path", ".", "join", "(", "filepath", ",", "f", ")", "\n", "for", "f", "in", "os", ".", "listdir", "(", "filepath", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "filepath", ",", "f", ")", ")", "]", "\n", "return", "sorted", "(", "filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.get_n_lines": [[66, 72], ["open", "tqdm.tqdm"], "function", ["None"], ["", "def", "get_n_lines", "(", "fname", ")", ":", "\n", "    ", "with", "open", "(", "fname", ",", "'r'", ")", "as", "file", ":", "\n", "        ", "count", "=", "0", "\n", "for", "_", "in", "tqdm", "(", "file", ",", "desc", "=", "'Getting file length'", ")", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.get_script": [[74, 86], ["homoglyphs.Languages.get_alphabet", "homoglyphs.Categories.get_alphabet", "x.upper"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_alphabet", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_alphabet"], ["", "def", "get_script", "(", "language", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "alphabet", "=", "hg", ".", "Languages", ".", "get_alphabet", "(", "[", "language", "]", ")", "\n", "", "except", "ValueError", ":", "\n", "        ", "if", "constants", ".", "scripts", "[", "language", "]", "is", "not", "None", ":", "\n", "            ", "alphabet", "=", "hg", ".", "Categories", ".", "get_alphabet", "(", "\n", "[", "x", ".", "upper", "(", ")", "for", "x", "in", "constants", ".", "scripts", "[", "language", "]", "]", "\n", ")", "\n", "", "else", ":", "\n", "            ", "alphabet", "=", "None", "\n", "\n", "", "", "return", "alphabet", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.is_word": [[88, 90], ["all"], "function", ["None"], ["", "def", "is_word", "(", "token", ",", "alphabet", ")", ":", "\n", "    ", "return", "all", "(", "[", "x", "in", "alphabet", "for", "x", "in", "token", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.mkdir": [[92, 94], ["pathlib.Path().mkdir", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.mkdir"], ["", "def", "mkdir", "(", "folder", ")", ":", "\n", "    ", "pathlib", ".", "Path", "(", "folder", ")", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.clean_words": [[14, 17], ["extract_lex_celex.clean_word"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.clean_word"], ["def", "clean_words", "(", "corpus", ")", ":", "\n", "    ", "for", "x", "in", "corpus", ":", "\n", "        ", "x", "[", "'phones'", "]", ",", "x", "[", "'syllables'", "]", "=", "clean_word", "(", "x", "[", "'phones'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.clean_word": [[19, 25], ["re.sub", "re.sub", "re.sub"], "function", ["None"], ["", "", "def", "clean_word", "(", "word_in", ")", ":", "\n", "    ", "\"\"\"Remove stress and syllable boundaries.\"\"\"", "\n", "word_in", "=", "re", ".", "sub", "(", "\"'\"", ",", "\"\"", ",", "word_in", ")", "\n", "syllables", "=", "re", ".", "sub", "(", "'\"'", ",", "\"\"", ",", "word_in", ")", "\n", "word", "=", "re", ".", "sub", "(", "\"-\"", ",", "\"\"", ",", "syllables", ")", "\n", "return", "word", ",", "syllables", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.substitute_diphthongs": [[27, 36], ["extract_lex_celex.check_valid_phones", "extract_lex_celex.celex_diphthong_sub", "extract_lex_celex.celex_diphthong_sub"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.check_valid_phones", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.celex_diphthong_sub", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.celex_diphthong_sub"], ["", "def", "substitute_diphthongs", "(", "corpus", ",", "language", ")", ":", "\n", "    ", "new_corpus", "=", "[", "]", "\n", "for", "x", "in", "corpus", ":", "\n", "        ", "phones", "=", "x", "[", "'phones'", "]", "\n", "if", "check_valid_phones", "(", "phones", ",", "language", ")", ":", "\n", "            ", "x", "[", "'phones'", "]", "=", "celex_diphthong_sub", "(", "phones", ")", "\n", "x", "[", "'syllables'", "]", "=", "celex_diphthong_sub", "(", "x", "[", "'syllables'", "]", ")", "\n", "new_corpus", "+=", "[", "x", "]", "\n", "", "", "return", "new_corpus", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.check_valid_phones": [[38, 46], ["set", "set"], "function", ["None"], ["", "def", "check_valid_phones", "(", "word", ",", "language", ")", ":", "\n", "    ", "filtered_chars", "=", "set", "(", "[", "'c'", ",", "'q'", ",", "'0'", ",", "'~'", ",", "'^'", ",", "'*'", ",", "'<'", "]", ")", "\n", "contains_invalid", "=", "filtered_chars", "&", "set", "(", "word", ")", "\n", "\n", "if", "not", "contains_invalid", "and", "(", "(", "language", "==", "'english'", ")", "|", "(", "\"_\"", "not", "in", "word", ")", ")", ":", "\n", "        ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.celex_diphthong_sub": [[48, 61], ["re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub"], "function", ["None"], ["", "def", "celex_diphthong_sub", "(", "word", ")", ":", "\n", "    ", "\"\"\" Do celex dipthong subs. \"\"\"", "\n", "word", "=", "re", ".", "sub", "(", "\"2\"", ",", "\"#I\"", ",", "word", ")", "\n", "word", "=", "re", ".", "sub", "(", "\"4\"", ",", "\"QI\"", ",", "word", ")", "\n", "word", "=", "re", ".", "sub", "(", "\"6\"", ",", "\"#U\"", ",", "word", ")", "\n", "word", "=", "re", ".", "sub", "(", "\"7\"", ",", "\"I@\"", ",", "word", ")", "\n", "word", "=", "re", ".", "sub", "(", "\"8\"", ",", "\"E@\"", ",", "word", ")", "\n", "word", "=", "re", ".", "sub", "(", "\"9\"", ",", "\"U@\"", ",", "word", ")", "\n", "word", "=", "re", ".", "sub", "(", "\"X\"", ",", "\"Oy\"", ",", "word", ")", "\n", "word", "=", "re", ".", "sub", "(", "\"W\"", ",", "\"ai\"", ",", "word", ")", "\n", "word", "=", "re", ".", "sub", "(", "\"B\"", ",", "\"au\"", ",", "word", ")", "\n", "word", "=", "re", ".", "sub", "(", "\"K\"", ",", "\"EI\"", ",", "word", ")", "\n", "return", "word", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_cv": [[64, 73], ["None"], "function", ["None"], ["", "def", "get_cv", "(", "word", ")", ":", "\n", "    ", "cv_info", "=", "\"\"", "\n", "for", "letter", "in", "word", ":", "\n", "        ", "if", "letter", "in", "VOWELS", ":", "\n", "            ", "cv_info", "+=", "\"V\"", "\n", "", "else", ":", "\n", "            ", "cv_info", "+=", "\"C\"", "\n", "\n", "", "", "return", "cv_info", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_path": [[75, 81], ["os.path.join"], "function", ["None"], ["", "def", "get_celex_path", "(", "path", ",", "language", ",", "dtype", ",", "lemma", ")", ":", "\n", "    ", "\"\"\" Return celex path, given root, lemma, language. \"\"\"", "\n", "return", "os", ".", "path", ".", "join", "(", "\n", "path", ",", "language", ",", "\n", "\"{lang}{dtype}{lem}/{lang}{dtype}{lem}.cd\"", "\n", ".", "format", "(", "lang", "=", "language", "[", "0", "]", ",", "dtype", "=", "dtype", "[", "0", "]", ",", "lem", "=", "lemma", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.read_in_celex_lines": [[83, 86], ["line.strip().split", "open().readlines", "line.strip", "open"], "function", ["None"], ["", "def", "read_in_celex_lines", "(", "path", ")", ":", "\n", "    ", "\"\"\" Return lines in given celex file. \"\"\"", "\n", "return", "[", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\\\\"", ")", "for", "line", "in", "open", "(", "path", ",", "\"r\"", ")", ".", "readlines", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_monos": [[88, 95], ["extract_lex_celex.get_celex_path", "extract_lex_celex.read_in_celex_lines"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_path", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.read_in_celex_lines"], ["", "def", "get_celex_monos", "(", "path_base", ",", "language", ")", ":", "\n", "    ", "\"\"\" Return list of celex ids for monomorphemes. \"\"\"", "\n", "path", "=", "get_celex_path", "(", "path_base", ",", "language", ",", "'morphology'", ",", "'lemma'", ")", "\n", "lines", "=", "read_in_celex_lines", "(", "path", ")", "\n", "\n", "# 0 is ID and 3 is if it is monomorphemic", "\n", "return", "{", "x", "[", "0", "]", "for", "x", "in", "lines", "if", "x", "[", "3", "]", "==", "\"M\"", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_class": [[97, 108], ["extract_lex_celex.get_celex_path", "extract_lex_celex.read_in_celex_lines", "dict", "dict", "dict", "re.sub", "re.sub", "re.sub", "x[].split", "x[].split", "x[].split"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_path", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.read_in_celex_lines"], ["", "def", "get_celex_class", "(", "path_base", ",", "language", ")", ":", "\n", "    ", "\"\"\" Return list of tuples of (celex ids; class) \"\"\"", "\n", "path", "=", "get_celex_path", "(", "path_base", ",", "language", ",", "'morphology'", ",", "'lemma'", ")", "\n", "lines", "=", "read_in_celex_lines", "(", "path", ")", "\n", "\n", "# 0 is ID and 21/13/12 is pos tag  information", "\n", "if", "language", "==", "\"english\"", ":", "\n", "        ", "return", "dict", "(", "(", "x", "[", "0", "]", ",", "re", ".", "sub", "(", "\"]\"", ",", "\"\"", ",", "x", "[", "21", "]", ".", "split", "(", "\"[\"", ")", "[", "-", "1", "]", ")", ")", "for", "x", "in", "lines", ")", "\n", "", "if", "language", "==", "\"german\"", ":", "\n", "        ", "return", "dict", "(", "(", "x", "[", "0", "]", ",", "re", ".", "sub", "(", "\"]\"", ",", "\"\"", ",", "x", "[", "13", "]", ".", "split", "(", "\"[\"", ")", "[", "-", "1", "]", ")", ")", "for", "x", "in", "lines", ")", "\n", "", "return", "dict", "(", "(", "x", "[", "0", "]", ",", "re", ".", "sub", "(", "\"]\"", ",", "\"\"", ",", "x", "[", "12", "]", ".", "split", "(", "\"[\"", ")", "[", "-", "1", "]", ")", ")", "for", "x", "in", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_freq": [[110, 117], ["extract_lex_celex.get_celex_path", "extract_lex_celex.read_in_celex_lines", "dict"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_path", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.read_in_celex_lines"], ["", "def", "get_celex_freq", "(", "path_base", ",", "language", ")", ":", "\n", "    ", "\"\"\" Return tuples of celex ids and freq per million word. \"\"\"", "\n", "path", "=", "get_celex_path", "(", "path_base", ",", "language", ",", "'frequency'", ",", "'lemma'", ")", "\n", "lines", "=", "read_in_celex_lines", "(", "path", ")", "\n", "\n", "# 0 is ID and 2 is frequency in the corpus", "\n", "return", "dict", "(", "(", "x", "[", "0", "]", ",", "x", "[", "2", "]", ")", "for", "x", "in", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.celex_pron_loc": [[119, 131], ["None"], "function", ["None"], ["", "def", "celex_pron_loc", "(", "language", ",", "lemma", ")", ":", "\n", "    ", "\"\"\" Return location of pronunciation in celex, given language. \"\"\"", "\n", "locations", "=", "{", "\n", "'english'", ":", "5", ",", "\n", "'german'", ":", "3", ",", "\n", "'dutch'", ":", "3", ",", "\n", "}", "\n", "pron", "=", "locations", "[", "language", "]", "\n", "\n", "if", "lemma", "==", "\"wordform\"", ":", "\n", "        ", "pron", "+=", "1", "\n", "", "return", "pron", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_main_celex_corpus": [[133, 137], ["extract_lex_celex.get_celex_path", "print", "extract_lex_celex.read_in_celex_lines"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_path", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.read_in_celex_lines"], ["", "def", "get_main_celex_corpus", "(", "path_base", ",", "language", ",", "lemma", ")", ":", "\n", "    ", "path", "=", "get_celex_path", "(", "path_base", ",", "language", ",", "'phonology'", ",", "lemma", ")", "\n", "print", "(", "path", ")", "\n", "return", "read_in_celex_lines", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.filter_monos": [[139, 142], ["extract_lex_celex.get_celex_monos"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_monos"], ["", "def", "filter_monos", "(", "lines", ",", "path", ",", "language", ")", ":", "\n", "    ", "monos", "=", "get_celex_monos", "(", "path", ",", "language", ")", "\n", "return", "[", "line", "for", "line", "in", "lines", "if", "line", "[", "0", "]", "in", "monos", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.extract_celex_info": [[144, 161], ["set", "set", "word.isalpha", "word.islower", "int", "extract_lex_celex.celex_pron_loc"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.celex_pron_loc"], ["", "def", "extract_celex_info", "(", "line", ",", "freqs", ",", "gram", ",", "language", "=", "\"english\"", ",", "lemma", "=", "\"lemma\"", ")", ":", "\n", "    ", "\"\"\" Return celex word (ortho or phonemic) and its freq from celex line. \"\"\"", "\n", "word", "=", "line", "[", "1", "]", "\n", "\n", "filtered_chars", "=", "set", "(", "[", "'-'", ",", "'.'", ",", "'\\''", ",", "' '", "]", ")", "\n", "contains_invalid", "=", "filtered_chars", "&", "set", "(", "word", ")", "\n", "\n", "if", "word", ".", "isalpha", "(", ")", "and", "(", "(", "word", ".", "islower", "(", ")", ")", "|", "(", "language", "==", "'german'", ")", ")", "and", "not", "contains_invalid", ":", "\n", "        ", "idx", "=", "line", "[", "0", "]", "\n", "return", "{", "\n", "'phones'", ":", "line", "[", "celex_pron_loc", "(", "language", ",", "lemma", ")", "]", ",", "\n", "'freq'", ":", "int", "(", "freqs", "[", "idx", "]", ")", ",", "\n", "'word'", ":", "word", ",", "\n", "'pos'", ":", "gram", "[", "idx", "]", ",", "\n", "}", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.extract_corpus": [[163, 166], ["extract_lex_celex.extract_celex_info"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.extract_celex_info"], ["", "def", "extract_corpus", "(", "lines", ",", "freqs", ",", "gram", ",", "language", ",", "lemma", ")", ":", "\n", "    ", "corpus", "=", "[", "extract_celex_info", "(", "line", ",", "freqs", ",", "gram", ",", "language", ",", "lemma", ")", "for", "line", "in", "lines", "]", "\n", "return", "[", "x", "for", "x", "in", "corpus", "if", "x", "is", "not", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.build_celex_corpus": [[168, 178], ["extract_lex_celex.get_main_celex_corpus", "extract_lex_celex.get_celex_freq", "extract_lex_celex.get_celex_class", "extract_lex_celex.extract_corpus", "extract_lex_celex.filter_monos"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_main_celex_corpus", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_freq", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_celex_class", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.extract_corpus", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.filter_monos"], ["", "def", "build_celex_corpus", "(", "path", ",", "language", ",", "lemma", ",", "mono", ")", ":", "\n", "    ", "\"\"\" Return corpus from celex, given path and parameters. \"\"\"", "\n", "lines", "=", "get_main_celex_corpus", "(", "path", ",", "language", ",", "lemma", ")", "\n", "if", "mono", ":", "\n", "        ", "lines", "=", "filter_monos", "(", "lines", ",", "path", ",", "language", ")", "\n", "\n", "", "freqs", "=", "get_celex_freq", "(", "path", ",", "language", ")", "\n", "gram", "=", "get_celex_class", "(", "path", ",", "language", ")", "\n", "\n", "return", "extract_corpus", "(", "lines", ",", "freqs", ",", "gram", ",", "language", ",", "lemma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.remove_zero_frequency": [[180, 182], ["None"], "function", ["None"], ["", "def", "remove_zero_frequency", "(", "corpus", ")", ":", "\n", "    ", "return", "[", "c", "for", "c", "in", "corpus", "if", "c", "[", "'freq'", "]", ">", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.filter_length": [[184, 188], ["len", "len", "re.sub", "re.sub"], "function", ["None"], ["", "def", "filter_length", "(", "corpus", ",", "minlength", ",", "maxlength", ")", ":", "\n", "    ", "return", "[", "x", "for", "x", "in", "corpus", "\n", "if", "(", "len", "(", "re", ".", "sub", "(", "\"-\"", ",", "\"\"", ",", "x", "[", "'phones'", "]", ")", ")", ">=", "minlength", "and", "\n", "len", "(", "re", ".", "sub", "(", "\"-\"", ",", "\"\"", ",", "x", "[", "'phones'", "]", ")", ")", "<=", "maxlength", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.clean_pronunciation": [[190, 197], ["extract_lex_celex.clean_words", "extract_lex_celex.substitute_diphthongs", "extract_lex_celex.filter_length"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.clean_words", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.substitute_diphthongs", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.filter_length"], ["", "def", "clean_pronunciation", "(", "corpus", ",", "language", ",", "minlength", ",", "maxlength", ")", ":", "\n", "# reduce celex to just pronunciation", "\n", "    ", "clean_words", "(", "corpus", ")", "\n", "\n", "corpus", "=", "substitute_diphthongs", "(", "corpus", ",", "language", ")", "\n", "corpus", "=", "filter_length", "(", "corpus", ",", "minlength", ",", "maxlength", ")", "\n", "return", "corpus", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.filter_homophony": [[199, 209], ["[].to_dict", "[].to_dict", "df.sort_values", "df.drop_duplicates", "df.phones.apply", "df.phones.apply", "df.groupby().agg", "df.groupby().agg", "df.groupby", "df.groupby"], "function", ["None"], ["", "def", "filter_homophony", "(", "df", ")", ":", "\n", "    ", "phones_freq_agg", "=", "df", ".", "groupby", "(", "'phones'", ")", ".", "agg", "(", "'sum'", ")", "[", "'freq'", "]", ".", "to_dict", "(", ")", "\n", "phones_count", "=", "df", ".", "groupby", "(", "'phones'", ")", ".", "agg", "(", "'count'", ")", "[", "'freq'", "]", ".", "to_dict", "(", ")", "\n", "\n", "df", ".", "sort_values", "(", "'freq'", ",", "ascending", "=", "False", ",", "inplace", "=", "True", ")", "\n", "df", ".", "drop_duplicates", "(", "'phones'", ",", "keep", "=", "'first'", ",", "inplace", "=", "True", ")", "\n", "\n", "df", "[", "'freq'", "]", "=", "df", ".", "phones", ".", "apply", "(", "lambda", "x", ":", "phones_freq_agg", "[", "x", "]", ")", "\n", "df", "[", "'homo'", "]", "=", "df", ".", "phones", ".", "apply", "(", "lambda", "x", ":", "phones_count", "[", "x", "]", ")", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.build_real_lex": [[211, 229], ["extract_lex_celex.build_celex_corpus", "print", "extract_lex_celex.remove_zero_frequency", "print", "extract_lex_celex.clean_pronunciation", "print", "pandas.DataFrame", "print", "len", "len", "extract_lex_celex.filter_homophony", "len"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.build_celex_corpus", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.remove_zero_frequency", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.clean_pronunciation", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.filter_homophony"], ["", "def", "build_real_lex", "(", "path", ",", "lemma", ",", "language", ",", "mono", ",", "homophily", ",", "minlength", ",", "maxlength", ")", ":", "\n", "    ", "corpus", "=", "build_celex_corpus", "(", "path", ",", "language", ",", "lemma", ",", "mono", ")", "\n", "print", "(", "\"number of words:\"", ",", "len", "(", "corpus", ")", ")", "\n", "\n", "corpus", "=", "remove_zero_frequency", "(", "corpus", ")", "\n", "print", "(", "\"number of words in lex after selecting words frequency > 0:\"", ",", "len", "(", "corpus", ")", ")", "\n", "\n", "corpus", "=", "clean_pronunciation", "(", "corpus", ",", "language", ",", "minlength", ",", "maxlength", ")", "\n", "print", "(", "\"number of words in lex after cleaning pronunciation: %d\"", "%", "\n", "len", "(", "corpus", ")", ")", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "corpus", ")", "\n", "\n", "if", "not", "homophily", ":", "\n", "        ", "df", "=", "filter_homophony", "(", "df", ")", "\n", "\n", "", "print", "(", "\">>>TOTAL NB OF WORDS\"", ",", "df", ".", "shape", "[", "0", "]", ")", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.get_args": [[231, 256], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "float"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["", "def", "get_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--src-path'", ",", "type", "=", "str", ",", "\n", "help", "=", "'The path with raw celex data'", ")", "\n", "parser", ".", "add_argument", "(", "'--tgt-path'", ",", "type", "=", "str", ",", "\n", "help", "=", "'The tgt path where to save data'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--lemma'", ",", "type", "=", "str", ",", "nargs", "=", "'?'", ",", "\n", "help", "=", "'lemma or wordform in celex'", ",", "default", "=", "\"lemma\"", ")", "\n", "parser", ".", "add_argument", "(", "'--language'", ",", "type", "=", "str", ",", "\n", "default", "=", "\"eng\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--mono'", ",", "action", "=", "'store_true'", ",", "default", "=", "True", ",", "\n", "help", "=", "'Get only monomorphemic words (this is the default)'", ")", "\n", "parser", ".", "add_argument", "(", "'--not-mono'", ",", "action", "=", "'store_false'", ",", "dest", "=", "'mono'", ",", "\n", "help", "=", "'Get non monomorphemic words'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--homophily'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'Flag to allow homophones in celex'", ")", "\n", "parser", ".", "add_argument", "(", "'--minlength'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "\n", "help", "=", "'minimum length of word allowed from celex'", ")", "\n", "parser", ".", "add_argument", "(", "'--maxlength'", ",", "type", "=", "int", ",", "default", "=", "float", "(", "'inf'", ")", ",", "\n", "help", "=", "'maximum length of word allowed from celex'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.main": [[258, 284], ["extract_lex_celex.get_args", "os.path.join", "os.path.join", "extract_lex_celex.build_real_lex", "build_real_lex.to_csv", "str"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.extract_lex_celex.build_real_lex"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "\n", "language_dict", "=", "{", "\n", "'en'", ":", "'english'", ",", "\n", "'eng'", ":", "'english'", ",", "\n", "'de'", ":", "'german'", ",", "\n", "'deu'", ":", "'german'", ",", "\n", "'nl'", ":", "'dutch'", ",", "\n", "'nld'", ":", "'dutch'", ",", "\n", "}", "\n", "language", "=", "language_dict", "[", "args", ".", "language", "]", "\n", "\n", "celex_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "src_path", ",", "'CELEX_V2'", ")", "\n", "\n", "celex_list", "=", "[", "\n", "args", ".", "language", ",", "args", ".", "lemma", ",", "args", ".", "mono", ",", "\n", "args", ".", "homophily", ",", "args", ".", "minlength", ",", "args", ".", "maxlength", "]", "\n", "fname", "=", "\"_\"", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "celex_list", "]", ")", "+", "\".tsv\"", "\n", "fpath", "=", "os", ".", "path", ".", "join", "(", "args", ".", "tgt_path", ",", "fname", ")", "\n", "\n", "df", "=", "build_real_lex", "(", "\n", "celex_path", ",", "args", ".", "lemma", ",", "language", ",", "args", ".", "mono", ",", "args", ".", "homophily", ",", "\n", "args", ".", "minlength", ",", "args", ".", "maxlength", ")", "\n", "\n", "df", ".", "to_csv", "(", "fpath", ",", "sep", "=", "'\\t'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.process_data.get_args": [[10, 22], ["util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.parse_args"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "    ", "argparser", ".", "add_argument", "(", "\n", "\"--src-file\"", ",", "type", "=", "str", ",", "\n", "help", "=", "\"The file from which to read data\"", ")", "\n", "argparser", ".", "add_argument", "(", "\n", "\"--n-folds\"", ",", "type", "=", "int", ",", "default", "=", "10", ",", "\n", "help", "=", "\"Number of folds to split data\"", ")", "\n", "argparser", ".", "add_argument", "(", "\n", "\"--max-words\"", ",", "type", "=", "int", ",", "default", "=", "10000", ",", "\n", "help", "=", "\"Number of types to use\"", ")", "\n", "\n", "return", "argparser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.process_data.get_dataset": [[24, 27], ["h01_data.dataset.get_dataset_cls", "h01_data.dataset.get_dataset_cls."], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_dataset_cls"], ["", "def", "get_dataset", "(", "dataset_name", ",", "src_fname", ",", "alphabet", ",", "max_words", ")", ":", "\n", "    ", "dataset_cls", "=", "get_dataset_cls", "(", "dataset_name", ")", "\n", "return", "dataset_cls", "(", "src_fname", ",", "alphabet", ",", "max_words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.process_data.process": [[29, 39], ["h01_data.alphabet.Alphabet", "process_data.get_dataset", "get_dataset.process_data", "get_dataset.get_fold_splits", "get_dataset.write_data", "print", "len"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.process_data.get_dataset", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.wikipedia.Wikipedia.process_data", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.base.BaseDataProcesser.get_fold_splits", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.write_data"], ["", "def", "process", "(", "src_fname", ",", "dataset", ",", "tgt_fname", ",", "n_folds", ",", "max_words", ")", ":", "\n", "    ", "alphabet", "=", "Alphabet", "(", ")", "\n", "\n", "dataset", "=", "get_dataset", "(", "dataset", ",", "src_fname", ",", "alphabet", ",", "max_words", ")", "\n", "words_info", "=", "dataset", ".", "process_data", "(", ")", "\n", "splits", "=", "dataset", ".", "get_fold_splits", "(", "words_info", ",", "n_folds", ")", "\n", "\n", "dataset", ".", "write_data", "(", "tgt_fname", ",", "splits", ")", "\n", "\n", "print", "(", "'# unique chars:'", ",", "len", "(", "alphabet", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.process_data.main": [[41, 46], ["process_data.get_args", "logging.info", "process_data.process"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.process_data.process"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "logging", ".", "info", "(", "args", ")", "\n", "\n", "process", "(", "args", ".", "src_file", ",", "args", ".", "dataset", ",", "args", ".", "data_path", ",", "args", ".", "n_folds", ",", "args", ".", "max_words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__init__": [[7, 20], ["alphabet.Alphabet._chars2idx.items"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.items"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_chars2idx", "=", "{", "\n", "'PAD'", ":", "0", ",", "\n", "'SOS'", ":", "1", ",", "\n", "'EOS'", ":", "2", "\n", "}", "\n", "self", ".", "_chars_count", "=", "{", "\n", "'PAD'", ":", "0", ",", "\n", "'SOS'", ":", "0", ",", "\n", "'EOS'", ":", "0", ",", "\n", "}", "\n", "self", ".", "_idx2chars", "=", "{", "idx", ":", "char", "for", "char", ",", "idx", "in", "self", ".", "_chars2idx", ".", "items", "(", ")", "}", "\n", "self", ".", "_updated", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.add_char": [[22, 29], ["len"], "methods", ["None"], ["", "def", "add_char", "(", "self", ",", "char", ")", ":", "\n", "        ", "if", "char", "not", "in", "self", ".", "_chars2idx", ":", "\n", "            ", "self", ".", "_chars2idx", "[", "char", "]", "=", "len", "(", "self", ".", "_chars2idx", ")", "\n", "self", ".", "_chars_count", "[", "char", "]", "=", "1", "\n", "self", ".", "_updated", "=", "False", "\n", "", "else", ":", "\n", "            ", "self", ".", "_chars_count", "[", "char", "]", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.add_word": [[30, 33], ["alphabet.Alphabet.add_char"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.add_char"], ["", "", "def", "add_word", "(", "self", ",", "word", ")", ":", "\n", "        ", "for", "char", "in", "word", ":", "\n", "            ", "self", ".", "add_char", "(", "char", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.word2idx": [[34, 36], ["None"], "methods", ["None"], ["", "", "def", "word2idx", "(", "self", ",", "word", ")", ":", "\n", "        ", "return", "[", "self", ".", "_chars2idx", "[", "char", "]", "for", "char", "in", "word", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.char2idx": [[37, 39], ["None"], "methods", ["None"], ["", "def", "char2idx", "(", "self", ",", "char", ")", ":", "\n", "        ", "return", "self", ".", "_chars2idx", "[", "char", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.idx2word": [[40, 45], ["alphabet.Alphabet._chars2idx.items"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.items"], ["", "def", "idx2word", "(", "self", ",", "idx_word", ")", ":", "\n", "        ", "if", "not", "self", ".", "_updated", ":", "\n", "            ", "self", ".", "_idx2chars", "=", "{", "idx", ":", "char", "for", "char", ",", "idx", "in", "self", ".", "_chars2idx", ".", "items", "(", ")", "}", "\n", "self", ".", "_updated", "=", "True", "\n", "", "return", "[", "self", ".", "_idx2chars", "[", "idx", "]", "for", "idx", "in", "idx_word", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.idx2char": [[46, 51], ["alphabet.Alphabet._chars2idx.items"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.items"], ["", "def", "idx2char", "(", "self", ",", "idx_char", ")", ":", "\n", "        ", "if", "not", "self", ".", "_updated", ":", "\n", "            ", "self", ".", "_idx2chars", "=", "{", "idx", ":", "char", "for", "char", ",", "idx", "in", "self", ".", "_chars2idx", ".", "items", "(", ")", "}", "\n", "self", ".", "_updated", "=", "True", "\n", "", "return", "self", ".", "_idx2chars", "[", "idx_char", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.__len__": [[52, 54], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_chars2idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.items": [[55, 58], ["alphabet.Alphabet._chars2idx.items"], "methods", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.items"], ["", "def", "items", "(", "self", ")", ":", "\n", "        ", "for", "chars", ",", "idx", "in", "self", ".", "_chars2idx", ".", "items", "(", ")", ":", "\n", "            ", "yield", "chars", ",", "idx", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args": [[14, 25], ["util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.add_argument", "util.argparser.parse_args", "os.path.join"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.add_argument", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.argparser.parse_args"], ["def", "get_args", "(", ")", ":", "\n", "# Data", "\n", "    ", "argparser", ".", "add_argument", "(", "'--batch-size'", ",", "type", "=", "int", ",", "default", "=", "512", ")", "\n", "# Models", "\n", "argparser", ".", "add_argument", "(", "'--checkpoints-path'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "argparser", ".", "add_argument", "(", "'--model-type'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "\n", "args", "=", "argparser", ".", "parse_args", "(", ")", "\n", "args", ".", "reverse", "=", "args", ".", "model_type", "in", "constants", ".", "REVERSE_MODELS", "\n", "args", ".", "model_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoints_path", ",", "args", ".", "model_type", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.load_model": [[27, 30], ["h02_learn.model.get_model_cls", "h02_learn.model.get_model_cls.load().to", "h02_learn.model.get_model_cls.load"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.__init__.get_model_cls", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.load"], ["", "def", "load_model", "(", "fpath", ",", "model_type", ")", ":", "\n", "    ", "model_cls", "=", "get_model_cls", "(", "model_type", ")", "\n", "return", "model_cls", ".", "load", "(", "fpath", ")", ".", "to", "(", "device", "=", "constants", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.merge_tensors": [[32, 46], ["max", "sum", "torch.ones"], "function", ["None"], ["", "def", "merge_tensors", "(", "losses", ",", "fill", "=", "0", ")", ":", "\n", "    ", "max_len", "=", "max", "(", "x", ".", "shape", "[", "-", "1", "]", "for", "x", "in", "losses", ")", "\n", "n_sentences", "=", "sum", "(", "x", ".", "shape", "[", "0", "]", "for", "x", "in", "losses", ")", "\n", "\n", "full_loss", "=", "torch", ".", "ones", "(", "n_sentences", ",", "max_len", ")", "*", "fill", "\n", "\n", "start", ",", "end", "=", "0", ",", "0", "\n", "for", "loss", "in", "losses", ":", "\n", "        ", "end", "+=", "loss", ".", "shape", "[", "0", "]", "\n", "batch_len", "=", "loss", ".", "shape", "[", "-", "1", "]", "\n", "full_loss", "[", "start", ":", "end", ",", ":", "batch_len", "]", "=", "loss", "\n", "start", "=", "end", "\n", "\n", "", "return", "full_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.eval_per_char": [[48, 82], ["model.eval", "tqdm.tqdm", "eval.merge_tensors", "eval.merge_tensors", "eval.merge_tensors", "torch.cat", "model", "model.get_loss_full", "model.get_loss_no_eos", "model.get_loss_full.cpu", "model.get_loss_no_eos.cpu", "y.cpu", "sent_lengths.cpu", "model.get_loss_full.sum"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h02_learn.train_info.TrainInfo.eval", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.merge_tensors", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.merge_tensors", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.merge_tensors", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base.BaseLM.get_loss_full", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.model.base_pytorch.BasePytorchLM.get_loss_no_eos"], ["", "def", "eval_per_char", "(", "dataloader", ",", "model", ",", "pad_idx", ")", ":", "\n", "# pylint: disable=too-many-locals", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "y_values", ",", "losses", ",", "losses_no_eos", ",", "lengths", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "dev_loss", ",", "n_instances", "=", "0", ",", "0", "\n", "for", "x", ",", "y", "in", "tqdm", "(", "dataloader", ",", "desc", "=", "'Evaluating per char'", ")", ":", "\n", "        ", "y_hat", "=", "model", "(", "x", ")", "\n", "loss", "=", "model", ".", "get_loss_full", "(", "y_hat", ",", "y", ")", "\n", "loss_no_eos", "=", "model", ".", "get_loss_no_eos", "(", "y_hat", ",", "y", ")", "\n", "\n", "sent_lengths", "=", "(", "y", "!=", "pad_idx", ")", ".", "sum", "(", "-", "1", ")", "\n", "batch_size", "=", "y", ".", "shape", "[", "0", "]", "\n", "dev_loss", "+=", "(", "loss", ".", "sum", "(", "-", "1", ")", "/", "sent_lengths", ")", ".", "sum", "(", ")", "\n", "n_instances", "+=", "batch_size", "\n", "losses", "+=", "[", "loss", ".", "cpu", "(", ")", "]", "\n", "losses_no_eos", "+=", "[", "loss_no_eos", ".", "cpu", "(", ")", "]", "\n", "y_values", "+=", "[", "y", ".", "cpu", "(", ")", "]", "\n", "lengths", "+=", "[", "sent_lengths", ".", "cpu", "(", ")", "]", "\n", "\n", "", "losses", "=", "merge_tensors", "(", "losses", ")", "\n", "losses_no_eos", "=", "merge_tensors", "(", "losses_no_eos", ")", "\n", "y_values", "=", "merge_tensors", "(", "y_values", ",", "fill", "=", "pad_idx", ")", "\n", "lengths", "=", "torch", ".", "cat", "(", "lengths", ",", "dim", "=", "0", ")", "\n", "\n", "results", "=", "{", "\n", "'losses'", ":", "losses", ",", "\n", "'losses_no_eos'", ":", "losses_no_eos", ",", "\n", "'y_values'", ":", "y_values", ",", "\n", "'lengths'", ":", "lengths", ",", "\n", "'pad_idx'", ":", "pad_idx", ",", "\n", "}", "\n", "\n", "return", "results", ",", "(", "dev_loss", "/", "n_instances", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.eval_all": [[84, 107], ["alphabet.char2idx", "eval.load_model", "eval.eval_per_char", "eval.eval_per_char", "eval.eval_per_char", "print", "model_path.split"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h01_data.alphabet.Alphabet.char2idx", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.load_model", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.eval_per_char", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.eval_per_char", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.eval_per_char"], ["", "def", "eval_all", "(", "model_path", ",", "dataloader", ",", "model_type", ")", ":", "\n", "# pylint: disable=too-many-locals", "\n", "    ", "trainloader", ",", "devloader", ",", "testloader", ",", "alphabet", "=", "dataloader", "\n", "pad_idx", "=", "alphabet", ".", "char2idx", "(", "'PAD'", ")", "\n", "\n", "model", "=", "load_model", "(", "model_path", ",", "model_type", ")", "\n", "model_name", "=", "model_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "\n", "train_res", ",", "train_loss", "=", "eval_per_char", "(", "trainloader", ",", "model", ",", "pad_idx", ")", "\n", "dev_res", ",", "dev_loss", "=", "eval_per_char", "(", "devloader", ",", "model", ",", "pad_idx", ")", "\n", "test_res", ",", "test_loss", "=", "eval_per_char", "(", "testloader", ",", "model", ",", "pad_idx", ")", "\n", "\n", "print", "(", "'Training loss: %.4f Dev loss: %.4f Test loss: %.4f'", "%", "\n", "(", "train_loss", ",", "dev_loss", ",", "test_loss", ")", ")", "\n", "\n", "results", "=", "{", "\n", "'name'", ":", "model_name", ",", "\n", "'train'", ":", "train_res", ",", "\n", "'dev'", ":", "dev_res", ",", "\n", "'test'", ":", "test_res", ",", "\n", "}", "\n", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.main": [[109, 121], ["eval.get_args", "h02_learn.dataset.get_data_loaders", "util.util.write_data", "list", "torch.no_grad", "eval.eval_all", "range"], "function", ["home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.get_args", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.dataset.__init__.get_data_loaders", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.util.util.write_data", "home.repos.pwc.inspect_result.tpimentelms_frontload-disambiguation.h03_eval.eval.eval_all"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "folds", "=", "[", "list", "(", "range", "(", "8", ")", ")", ",", "[", "8", "]", ",", "[", "9", "]", "]", "\n", "\n", "dataloader", "=", "get_data_loaders", "(", "\n", "args", ".", "data_file", ",", "folds", ",", "args", ".", "batch_size", ",", "reverse", "=", "args", ".", "reverse", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "results", "=", "eval_all", "(", "args", ".", "model_path", ",", "dataloader", ",", "args", ".", "model_type", ")", "\n", "\n", "", "results_file", "=", "'%s/losses.pckl'", "%", "(", "args", ".", "model_path", ")", "\n", "util", ".", "write_data", "(", "results_file", ",", "results", ")", "\n", "\n"]]}