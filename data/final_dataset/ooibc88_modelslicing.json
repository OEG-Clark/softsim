{"home.repos.pwc.inspect_result.ooibc88_modelslicing.None.data_loader.data_loader": [[6, 81], ["args.dataset.startswith", "torchvision.Normalize", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "os.path.join", "os.path.join", "torchvision.Normalize", "torchvision.ImageFolder", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "Exception", "torchvision.ToTensor", "torchvision.CIFAR100", "torchvision.CIFAR100", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "Exception", "torchvision.Compose", "torchvision.ImageFolder", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.CIFAR10", "torchvision.CIFAR10", "torchvision.Compose", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor"], "function", ["None"], ["def", "data_loader", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "dataset", ".", "startswith", "(", "'cifar'", ")", ":", "\n", "        ", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "x", "/", "255.0", "for", "x", "in", "[", "125.3", ",", "123.0", ",", "113.9", "]", "]", ",", "\n", "std", "=", "[", "x", "/", "255.0", "for", "x", "in", "[", "63.0", ",", "62.1", ",", "66.7", "]", "]", ")", "\n", "if", "args", ".", "augment", ":", "\n", "            ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", "\n", "", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'cifar100'", ":", "\n", "            ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR100", "(", "args", ".", "data_dir", ",", "train", "=", "True", ",", "download", "=", "False", ",", "transform", "=", "transform_train", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR100", "(", "args", ".", "data_dir", ",", "train", "=", "False", ",", "transform", "=", "transform_test", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "class_num", "=", "100", "\n", "", "elif", "args", ".", "dataset", "==", "'cifar10'", ":", "\n", "            ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR10", "(", "args", ".", "data_dir", ",", "train", "=", "True", ",", "download", "=", "False", ",", "transform", "=", "transform_train", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR10", "(", "args", ".", "data_dir", ",", "train", "=", "False", ",", "transform", "=", "transform_test", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "class_num", "=", "10", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'unknown dataset: {}'", ".", "format", "(", "args", ".", "dataset", ")", ")", "\n", "", "return", "train_loader", ",", "val_loader", ",", "class_num", "\n", "\n", "", "elif", "args", ".", "dataset", "==", "'imagenet'", ":", "\n", "        ", "traindir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_dir", ",", "'train'", ")", "\n", "valdir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_dir", ",", "'val'", ")", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "train_dataset", "=", "datasets", ".", "ImageFolder", "(", "\n", "traindir", ",", "\n", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "valdir", ",", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "class_num", "=", "1000", "\n", "return", "train_loader", ",", "val_loader", ",", "class_num", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'unknown dataset: {}'", ".", "format", "(", "args", ".", "dataset", ")", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.main": [[74, 124], ["utils.utilities.logger", "utils.utilities.logger.info", "train.create_model", "models.upgrade_dynamic_layers", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.CrossEntropyLoss().cuda", "torch.nn.CrossEntropyLoss().cuda", "torch.optim.SGD", "torch.optim.SGD", "train.create_lr_scheduler", "models.create_sr_scheduler", "range", "vars", "torch.nn.DataParallel().cuda.parameters", "train.load_checkpoint", "load_checkpoint.values", "torch.nn.DataParallel().cuda.load_state_dict", "torch.optim.SGD.load_state_dict", "create_lr_scheduler.load_state_dict", "utils.utilities.logger.info", "utils.utilities.logger.info", "train.run", "create_lr_scheduler.step", "reversed", "min", "utils.utilities.logger.info", "train.save_checkpoint", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "range", "torch.nn.DataParallel().cuda.module.update_sr_idx", "train.run", "collections.OrderedDict", "len", "create_lr_scheduler.get_lr", "torch.nn.DataParallel().cuda.state_dict", "torch.optim.SGD.state_dict", "create_lr_scheduler.state_dict"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.logger", "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.create_model", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.upgrade_dynamic_layers", "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.create_lr_scheduler", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.create_sr_scheduler", "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.load_checkpoint", "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.run", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.lr_scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.save_checkpoint", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.update_sr_idx", "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.run", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.lr_scheduler.GradualWarmupScheduler.get_lr"], ["def", "main", "(", ")", ":", "\n", "    ", "global", "args", ",", "best_err1", ",", "best_err5", "\n", "print_logger", "=", "logger", "(", "args", ".", "log_path", ",", "True", ",", "True", ")", "\n", "print_logger", ".", "info", "(", "vars", "(", "args", ")", ")", "\n", "\n", "# create model and upgrade model to support model slicing", "\n", "model", "=", "create_model", "(", "args", ",", "print_logger", ")", "\n", "model", "=", "upgrade_dynamic_layers", "(", "model", ",", "args", ".", "groups", ",", "args", ".", "sr_list", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", ".", "cuda", "(", ")", "\n", "\n", "criterion", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ",", "nesterov", "=", "True", ")", "\n", "scheduler", "=", "create_lr_scheduler", "(", "args", ",", "optimizer", ")", "\n", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "checkpoint", "=", "load_checkpoint", "(", "print_logger", ")", "\n", "epoch", ",", "best_err1", ",", "best_err5", ",", "model_state", ",", "optimizer_state", ",", "scheduler_state", "=", "checkpoint", ".", "values", "(", ")", "\n", "args", ".", "start_epoch", "=", "epoch", "+", "1", "\n", "model", ".", "load_state_dict", "(", "model_state", ")", "\n", "optimizer", ".", "load_state_dict", "(", "optimizer_state", ")", "\n", "scheduler", ".", "load_state_dict", "(", "optimizer_state", ")", "\n", "print_logger", ".", "info", "(", "\"==> finish loading checkpoint '{}' (epoch {})\"", ".", "format", "(", "args", ".", "resume", ",", "epoch", ")", ")", "\n", "\n", "", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "# start training", "\n", "sr_scheduler", "=", "create_sr_scheduler", "(", "args", ".", "sr_scheduler_type", ",", "args", ".", "sr_list", ",", "args", ".", "sr_rand_num", ",", "args", ".", "sr_train_prob", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "args", ".", "epoch", ")", ":", "\n", "        ", "print_logger", ".", "info", "(", "'Epoch: [{0}/{1}]\\tLR: {LR:.6f}'", ".", "format", "(", "epoch", ",", "args", ".", "epoch", ",", "LR", "=", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", ")", ")", "\n", "\n", "# train one epoch", "\n", "run", "(", "epoch", ",", "model", ",", "train_loader", ",", "criterion", ",", "print_logger", ",", "sr_scheduler", ",", "optimizer", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n", "# evaluate on all the sr_idxs, from the smallest subnet to the largest", "\n", "for", "sr_idx", "in", "reversed", "(", "range", "(", "len", "(", "args", ".", "sr_list", ")", ")", ")", ":", "\n", "            ", "args", ".", "sr_idx", "=", "sr_idx", "\n", "model", ".", "module", ".", "update_sr_idx", "(", "sr_idx", ")", "\n", "err1", ",", "err5", "=", "run", "(", "epoch", ",", "model", ",", "val_loader", ",", "criterion", ",", "print_logger", ")", "\n", "\n", "# record the best prec@1 for the largest subnet and save checkpoint", "\n", "", "is_best", "=", "err1", "<=", "best_err1", "\n", "best_err1", "=", "min", "(", "err1", ",", "best_err1", ")", "\n", "if", "is_best", ":", "best_err5", "=", "err5", "\n", "print_logger", ".", "info", "(", "'Current best accuracy:\\ttop1 = {top1:.4f} | top5 = {top5:.4f}'", ".", "\n", "format", "(", "top1", "=", "best_err1", ",", "top5", "=", "best_err5", ")", ")", "\n", "save_checkpoint", "(", "OrderedDict", "(", "[", "(", "'epoch'", ",", "epoch", ")", ",", "(", "'best_err1'", ",", "best_err1", ")", ",", "(", "'best_err5'", ",", "best_err5", ")", ",", "\n", "(", "'model_state'", ",", "model", ".", "state_dict", "(", ")", ")", ",", "(", "'optimizer_state'", ",", "optimizer", ".", "state_dict", "(", ")", ")", ",", "\n", "(", "'scheduler_state'", ",", "scheduler", ".", "state_dict", "(", ")", ")", "]", ")", ",", "is_best", ",", "args", ".", "checkpoint_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.create_model": [[125, 132], ["print_logger.info", "importlib.import_module", "args.dataset.startswith", "print_logger.info", "getattr", "sum", "getattr", "p.data.nelement", "model.parameters"], "function", ["None"], ["", "", "def", "create_model", "(", "args", ",", "print_logger", ")", ":", "\n", "    ", "print_logger", ".", "info", "(", "\"==> creating model '{}'\"", ".", "format", "(", "args", ".", "net_type", ")", ")", "\n", "models", "=", "importlib", ".", "import_module", "(", "'models'", ")", "\n", "if", "args", ".", "dataset", ".", "startswith", "(", "'cifar'", ")", ":", "model", "=", "getattr", "(", "models", ",", "'cifar_{0}'", ".", "format", "(", "args", ".", "net_type", ")", ")", "(", "args", ")", "\n", "elif", "args", ".", "dataset", "==", "'imagenet'", ":", "model", "=", "getattr", "(", "models", ",", "'imagenet_{0}'", ".", "format", "(", "args", ".", "net_type", ")", ")", "(", "args", ")", "\n", "print_logger", ".", "info", "(", "'the number of model parameters: {}'", ".", "format", "(", "sum", "(", "[", "p", ".", "data", ".", "nelement", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "]", ")", ")", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.create_lr_scheduler": [[133, 145], ["torch.optim.lr_scheduler.CosineAnnealingLR", "args.dataset.startswith", "torch.optim.lr_scheduler.MultiStepLR", "Exception", "int", "int", "torch.optim.lr_scheduler.CosineAnnealingLR", "utils.lr_scheduler.GradualWarmupScheduler", "torch.optim.lr_scheduler.MultiStepLR", "int", "int", "int"], "function", ["None"], ["", "def", "create_lr_scheduler", "(", "args", ",", "optimizer", ")", ":", "\n", "    ", "if", "args", ".", "cosine", ":", "return", "lr_scheduler", ".", "CosineAnnealingLR", "(", "optimizer", ",", "args", ".", "epoch", ")", "\n", "elif", "args", ".", "dataset", ".", "startswith", "(", "'cifar'", ")", ":", "return", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "\n", "[", "int", "(", "args", ".", "epoch", "*", "0.5", ")", ",", "int", "(", "args", ".", "epoch", "*", "0.75", ")", "]", ",", "gamma", "=", "0.1", ")", "\n", "elif", "args", ".", "dataset", "==", "'imagenet'", ":", "\n", "        ", "if", "args", ".", "warmup", ":", "\n", "            ", "scheduler", "=", "lr_scheduler", ".", "CosineAnnealingLR", "(", "optimizer", ",", "100", "-", "args", ".", "warmup_epoch", ")", "\n", "return", "GradualWarmupScheduler", "(", "optimizer", ",", "multiplier", "=", "args", ".", "lr_multiplier", ",", "\n", "warmup_epoch", "=", "args", ".", "warmup_epoch", ",", "scheduler", "=", "scheduler", ")", "\n", "", "else", ":", "return", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "\n", "[", "int", "(", "args", ".", "epoch", "*", "0.3", ")", ",", "int", "(", "args", ".", "epoch", "*", "0.6", ")", ",", "int", "(", "args", ".", "epoch", "*", "0.9", ")", "]", ",", "gamma", "=", "0.1", ")", "\n", "", "else", ":", "raise", "Exception", "(", "'unknown scheduler for dataset: {}'", ".", "format", "(", "args", ".", "dataset", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.load_checkpoint": [[146, 157], ["print_logger.info", "os.path.isfile", "torch.load", "torch.load", "Exception", "torch.load", "torch.load", "torch.load", "torch.load"], "function", ["None"], ["", "def", "load_checkpoint", "(", "print_logger", ")", ":", "\n", "    ", "print_logger", ".", "info", "(", "\"==> loading checkpoint '{}'\"", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "\n", "if", "os", ".", "path", ".", "isfile", "(", "args", ".", "resume", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "", "elif", "args", ".", "resume", "==", "'checkpoint'", ":", "\n", "        ", "if", "args", ".", "resume_best", ":", "checkpoint", "=", "torch", ".", "load", "(", "'{0}{1}'", ".", "format", "(", "args", ".", "checkpoint_dir", ",", "'best_checkpoint.ckpt'", ")", ")", "\n", "else", ":", "checkpoint", "=", "torch", ".", "load", "(", "'{0}{1}'", ".", "format", "(", "args", ".", "checkpoint_dir", ",", "'checkpoint.ckpt'", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"=> no checkpoint found at '{}'\"", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "", "return", "checkpoint", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.save_checkpoint": [[158, 163], ["torch.save", "torch.save", "os.path.exists", "os.makedirs", "shutil.copyfile"], "function", ["None"], ["", "def", "save_checkpoint", "(", "checkpoint", ",", "is_best", ",", "checkpoint_dir", ",", "checkpoint_name", "=", "'checkpoint.ckpt'", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "checkpoint_dir", ")", ":", "os", ".", "makedirs", "(", "checkpoint_dir", ")", "\n", "ckpt_name", "=", "\"{0}{1}\"", ".", "format", "(", "checkpoint_dir", ",", "checkpoint_name", ")", "\n", "torch", ".", "save", "(", "checkpoint", ",", "ckpt_name", ")", "\n", "if", "is_best", ":", "shutil", ".", "copyfile", "(", "ckpt_name", ",", "\"{0}{1}\"", ".", "format", "(", "checkpoint_dir", ",", "'best_'", "+", "checkpoint_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.None.train.run": [[164, 217], ["utils.utilities.AverageMeter", "time.time", "enumerate", "print_logger.info", "model.train", "model.eval", "utils.utilities.AverageMeter", "utils.utilities.AverageMeter", "utils.utilities.AverageMeter", "torch.cuda.is_available", "torch.cuda.is_available", "utils.utilities.accuracy", "loss_avg.update", "top1_avg.update", "top5_avg.update", "utils.utilities.AverageMeter.update", "time.time", "input.cuda.cuda", "target.cuda.cuda", "optimizer.zero_grad", "next", "optimizer.step", "criterion.item", "print_logger.info", "utils.utilities.timeSince", "model.module.update_sr_idx", "model", "criterion", "criterion.backward", "torch.no_grad", "torch.no_grad", "model", "criterion", "input.cuda.size", "input.cuda.size", "input.cuda.size", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.accuracy", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.AverageMeter.update", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.AverageMeter.update", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.AverageMeter.update", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.AverageMeter.update", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.lr_scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.timeSince", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.update_sr_idx"], ["", "def", "run", "(", "epoch", ",", "model", ",", "data_loader", ",", "criterion", ",", "print_logger", ",", "sr_scheduler", "=", "None", ",", "optimizer", "=", "None", ")", ":", "\n", "    ", "global", "args", "\n", "is_train", "=", "True", "if", "optimizer", "!=", "None", "else", "False", "\n", "if", "is_train", ":", "model", ".", "train", "(", ")", "\n", "else", ":", "model", ".", "eval", "(", ")", "\n", "\n", "batch_time_avg", "=", "AverageMeter", "(", ")", "\n", "loss_avg", ",", "top1_avg", ",", "top5_avg", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "\n", "timestamp", "=", "time", ".", "time", "(", ")", "\n", "for", "idx", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "# torch.cuda.synchronize();print('start batch training', time.time())", "\n", "        ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "# torch.cuda.synchronize();print('loaded data to cuda', time.time())", "\n", "", "if", "is_train", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "for", "args", ".", "sr_idx", "in", "next", "(", "sr_scheduler", ")", ":", "\n", "# update slice rate idx", "\n", "                ", "model", ".", "module", ".", "update_sr_idx", "(", "args", ".", "sr_idx", ")", "# DataParallel .module", "\n", "\n", "output", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "target", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "output", "=", "model", "(", "input", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "target", ")", "\n", "# torch.cuda.synchronize();print('finnish batch training', time.time())", "\n", "", "", "err1", ",", "err5", "=", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "loss_avg", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "input", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "top1_avg", ".", "update", "(", "err1", ",", "input", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "top5_avg", ".", "update", "(", "err5", ",", "input", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "\n", "batch_time_avg", ".", "update", "(", "time", ".", "time", "(", ")", "-", "timestamp", ")", ";", "timestamp", "=", "time", ".", "time", "(", ")", "\n", "\n", "# torch.cuda.synchronize();print('start logging', time.time())", "\n", "if", "idx", "%", "args", ".", "log_freq", "==", "0", ":", "\n", "            ", "print_logger", ".", "info", "(", "'Epoch: [{0}/{1}][{2}/{3}][SR-{4}]\\t'", "\n", "'Time {batch_time.val:.3f} ({batch_time.avg:.3f})\\tLoss {loss.val:.4f} ({loss.avg:.4f})\\t'", "\n", "'Top 1-err {top1.val:.4f} ({top1.avg:.4f})\\tTop 5-err {top5.val:.4f} ({top5.avg:.4f})'", ".", "format", "(", "\n", "epoch", ",", "args", ".", "epoch", ",", "idx", ",", "len", "(", "data_loader", ")", ",", "args", ".", "sr_list", "[", "args", ".", "sr_idx", "]", ",", "\n", "batch_time", "=", "batch_time_avg", ",", "loss", "=", "loss_avg", ",", "top1", "=", "top1_avg", ",", "top5", "=", "top5_avg", ")", ")", "\n", "\n", "", "", "print_logger", ".", "info", "(", "'* Epoch: [{0}/{1}]{2:>8s}  Total Time: {3}\\tTop 1-err {top1.avg:.4f}  '", "\n", "'Top 5-err {top5.avg:.4f}\\tTest Loss {loss.avg:.4f}'", ".", "format", "(", "epoch", ",", "args", ".", "epoch", ",", "\n", "(", "'[train]'", "if", "is_train", "else", "'[val]'", ")", ",", "timeSince", "(", "s", "=", "batch_time_avg", ".", "sum", ")", ",", "\n", "top1", "=", "top1_avg", ",", "top5", "=", "top5_avg", ",", "loss", "=", "loss_avg", ")", ")", "\n", "return", "top1_avg", ".", "avg", ",", "top5_avg", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.Timer.__init__": [[23, 27], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "self", ".", "verbose", "=", "verbose", "\n", "self", ".", "start", "=", "None", "\n", "self", ".", "end", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.Timer.__enter__": [[28, 31], ["time.time"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "start", "=", "time", ".", "time", "(", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.Timer.__exit__": [[32, 36], ["time.time", "print"], "methods", ["None"], ["", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "end", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "time", "=", "self", ".", "end", "-", "self", ".", "start", "\n", "if", "self", ".", "verbose", ":", "print", "(", "'Elapsed time: %f ms.'", "%", "self", ".", "time", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.calc_layer_param": [[37, 39], ["sum", "functools.reduce", "i.size", "model.parameters"], "function", ["None"], ["", "", "def", "calc_layer_param", "(", "model", ")", ":", "\n", "    ", "return", "sum", "(", "[", "reduce", "(", "operator", ".", "mul", ",", "i", ".", "size", "(", ")", ",", "1", ")", "for", "i", "in", "model", ".", "parameters", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.profile_forward": [[40, 46], ["int", "profiling.Timer", "range", "layer.old_forward", "torch.cuda.is_available", "torch.cuda.synchronize"], "function", ["None"], ["", "def", "profile_forward", "(", "layer", ",", "input", ")", ":", "\n", "    ", "with", "Timer", "(", ")", "as", "t", ":", "\n", "        ", "for", "_", "in", "range", "(", "forward_num", ")", ":", "\n", "            ", "layer", ".", "old_forward", "(", "input", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "", "", "return", "int", "(", "t", ".", "time", "*", "1e9", "/", "forward_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.profile_layer": [[47, 121], ["isinstance", "int", "int", "profiling.calc_layer_param", "profiling.profile_forward", "isinstance", "print", "layer.bias.numel", "profiling.calc_layer_param", "profiling.profile_forward", "isinstance", "layer.weight.numel", "functools.reduce", "profiling.profile_forward", "type", "x.size", "int", "int", "profiling.calc_layer_param", "profiling.profile_forward", "isinstance", "x.size", "profiling.calc_layer_param", "profiling.profile_forward", "str().ljust", "x.size", "x.size", "x.size", "type", "profiling.calc_layer_param", "profiling.profile_forward", "x.size", "x.size", "x.size", "x.size", "type", "profiling.calc_layer_param", "profiling.profile_forward", "str", "x.size", "x.size", "type", "TypeError", "str"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.calc_layer_param", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.profile_forward", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.calc_layer_param", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.profile_forward", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.profile_forward", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.calc_layer_param", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.profile_forward", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.calc_layer_param", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.profile_forward", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.calc_layer_param", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.profile_forward", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.calc_layer_param", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.profile_forward"], ["", "def", "profile_layer", "(", "layer", ",", "x", ")", ":", "\n", "    ", "global", "total_flops", ",", "total_params", ",", "total_time", ",", "module_cnt", ",", "verbose", ",", "MULTI_ADD", "\n", "delta_ops", ",", "delta_params", ",", "delta_time", "=", "0", ",", "0", ",", "0.", "\n", "\n", "# Conv2d", "\n", "if", "isinstance", "(", "layer", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "out_h", "=", "int", "(", "(", "x", ".", "size", "(", "2", ")", "+", "2", "*", "layer", ".", "padding", "[", "0", "]", "-", "layer", ".", "kernel_size", "[", "0", "]", ")", "/", "\n", "layer", ".", "stride", "[", "0", "]", "+", "1", ")", "\n", "out_w", "=", "int", "(", "(", "x", ".", "size", "(", "3", ")", "+", "2", "*", "layer", ".", "padding", "[", "1", "]", "-", "layer", ".", "kernel_size", "[", "1", "]", ")", "/", "\n", "layer", ".", "stride", "[", "1", "]", "+", "1", ")", "\n", "delta_ops", "=", "layer", ".", "in_channels", "*", "layer", ".", "out_channels", "*", "layer", ".", "kernel_size", "[", "0", "]", "*", "layer", ".", "kernel_size", "[", "1", "]", "*", "out_h", "*", "out_w", "/", "layer", ".", "groups", "*", "MULTI_ADD", "\n", "delta_params", "=", "calc_layer_param", "(", "layer", ")", "\n", "delta_time", "=", "profile_forward", "(", "layer", ",", "x", ")", "\n", "module_cnt", "+=", "1", "\n", "\n", "# Linear", "\n", "", "elif", "isinstance", "(", "layer", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "weight_ops", "=", "layer", ".", "weight", ".", "numel", "(", ")", "*", "MULTI_ADD", "\n", "bias_ops", "=", "layer", ".", "bias", ".", "numel", "(", ")", "\n", "delta_ops", "=", "(", "weight_ops", "+", "bias_ops", ")", "\n", "delta_params", "=", "calc_layer_param", "(", "layer", ")", "\n", "delta_time", "=", "profile_forward", "(", "layer", ",", "x", ")", "\n", "module_cnt", "+=", "1", "\n", "\n", "# ReLU can be omited", "\n", "", "elif", "isinstance", "(", "layer", ",", "nn", ".", "ReLU", ")", ":", "\n", "        ", "delta_ops", "=", "reduce", "(", "operator", ".", "mul", ",", "x", ".", "size", "(", ")", "[", "1", ":", "]", ")", "\n", "delta_time", "=", "profile_forward", "(", "layer", ",", "x", ")", "\n", "module_cnt", "+=", "1", "\n", "\n", "# Pool2d", "\n", "", "elif", "type", "(", "layer", ")", "in", "[", "nn", ".", "AvgPool2d", ",", "nn", ".", "MaxPool2d", "]", ":", "\n", "        ", "in_w", "=", "x", ".", "size", "(", "2", ")", "\n", "kernel_ops", "=", "layer", ".", "kernel_size", "*", "layer", ".", "kernel_size", "\n", "out_w", "=", "int", "(", "(", "in_w", "+", "2", "*", "layer", ".", "padding", "-", "layer", ".", "kernel_size", ")", "/", "layer", ".", "stride", "+", "1", ")", "\n", "out_h", "=", "int", "(", "(", "in_w", "+", "2", "*", "layer", ".", "padding", "-", "layer", ".", "kernel_size", ")", "/", "layer", ".", "stride", "+", "1", ")", "\n", "delta_ops", "=", "x", ".", "size", "(", "1", ")", "*", "out_w", "*", "out_h", "*", "kernel_ops", "\n", "delta_params", "=", "calc_layer_param", "(", "layer", ")", "\n", "delta_time", "=", "profile_forward", "(", "layer", ",", "x", ")", "\n", "module_cnt", "+=", "1", "\n", "\n", "# AdaptiveAvgPool2d", "\n", "", "elif", "isinstance", "(", "layer", ",", "nn", ".", "AdaptiveAvgPool2d", ")", ":", "\n", "        ", "delta_ops", "=", "x", ".", "size", "(", "1", ")", "*", "x", ".", "size", "(", "2", ")", "*", "x", ".", "size", "(", "3", ")", "\n", "delta_params", "=", "calc_layer_param", "(", "layer", ")", "\n", "delta_time", "=", "profile_forward", "(", "layer", ",", "x", ")", "\n", "\n", "# BatchNorm2d, GroupNorm", "\n", "", "elif", "type", "(", "layer", ")", "in", "[", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", "]", ":", "\n", "        ", "delta_ops", "=", "x", ".", "size", "(", "1", ")", "*", "x", ".", "size", "(", "2", ")", "*", "x", ".", "size", "(", "3", ")", "\n", "delta_params", "=", "calc_layer_param", "(", "layer", ")", "\n", "delta_time", "=", "profile_forward", "(", "layer", ",", "x", ")", "\n", "\n", "# ops ignore flops", "\n", "", "elif", "type", "(", "layer", ")", "in", "[", "nn", ".", "Dropout2d", ",", "nn", ".", "Dropout", "]", ":", "\n", "        ", "delta_params", "=", "calc_layer_param", "(", "layer", ")", "\n", "delta_time", "=", "profile_forward", "(", "layer", ",", "x", ")", "\n", "\n", "# ignore layer type", "\n", "", "elif", "type", "(", "layer", ")", "in", "[", "nn", ".", "Sequential", "]", ":", "# nn.BatchNorm2d, nn.GroupNorm, nn.ReLU", "\n", "        ", "return", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "'unknown layer type: %s'", "%", "str", "(", "layer", ")", ")", "\n", "\n", "", "total_flops", "+=", "delta_ops", "\n", "total_params", "+=", "delta_params", "\n", "total_time", "+=", "delta_time", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "str", "(", "layer", ")", ".", "ljust", "(", "name_space", ",", "' '", ")", "+", "\n", "'{:,}'", ".", "format", "(", "delta_params", ")", ".", "rjust", "(", "param_space", ",", "' '", ")", "+", "\n", "'{:,}'", ".", "format", "(", "delta_ops", ")", ".", "rjust", "(", "flop_space", ",", "' '", ")", "+", "\n", "'{:,}'", ".", "format", "(", "delta_time", ")", ".", "rjust", "(", "time_space", ",", "' '", ")", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.profiling.profiling": [[123, 174], ["torch.zeros", "print", "profiling.profiling.modify_forward"], "function", ["None"], ["", "def", "profiling", "(", "model", ",", "H", ",", "W", ",", "C", "=", "3", ",", "B", "=", "1", ",", "debug", "=", "False", ")", ":", "\n", "    ", "global", "total_flops", ",", "total_params", ",", "total_time", ",", "module_cnt", ",", "verbose", "\n", "total_flops", ",", "total_params", ",", "module_cnt", ",", "verbose", "=", "0", ",", "0", ",", "0", ",", "debug", "\n", "data", "=", "torch", ".", "zeros", "(", "B", ",", "C", ",", "H", ",", "W", ")", "\n", "\n", "def", "is_leaf", "(", "model", ")", ":", "\n", "        ", "''' measure all leaf nodes '''", "\n", "return", "len", "(", "list", "(", "model", ".", "children", "(", ")", ")", ")", "==", "0", "\n", "\n", "", "def", "modify_forward", "(", "model", ")", ":", "\n", "        ", "for", "child", "in", "model", ".", "children", "(", ")", ":", "\n", "            ", "if", "is_leaf", "(", "child", ")", ":", "\n", "                ", "def", "new_forward", "(", "m", ")", ":", "\n", "                    ", "def", "lambda_forward", "(", "x", ")", ":", "\n", "                        ", "profile_layer", "(", "m", ",", "x", ")", "\n", "return", "m", ".", "old_forward", "(", "x", ")", "\n", "", "return", "lambda_forward", "\n", "", "child", ".", "old_forward", "=", "child", ".", "forward", "\n", "child", ".", "forward", "=", "new_forward", "(", "child", ")", "\n", "", "else", ":", "\n", "                ", "modify_forward", "(", "child", ")", "\n", "\n", "", "", "", "def", "restore_forward", "(", "model", ")", ":", "\n", "        ", "for", "child", "in", "model", ".", "children", "(", ")", ":", "\n", "# leaf node", "\n", "            ", "if", "is_leaf", "(", "child", ")", "and", "hasattr", "(", "child", ",", "'old_forward'", ")", ":", "\n", "                ", "child", ".", "forward", "=", "child", ".", "old_forward", "\n", "child", ".", "old_forward", "=", "None", "\n", "", "else", ":", "\n", "                ", "restore_forward", "(", "child", ")", "\n", "\n", "", "", "", "def", "line_breaker", "(", ")", ":", "\n", "        ", "print", "(", "''", ".", "center", "(", "name_space", "+", "param_space", "+", "\n", "flop_space", "+", "time_space", ",", "'-'", ")", ")", "\n", "\n", "", "print", "(", "'Item'", ".", "ljust", "(", "name_space", ",", "' '", ")", "+", "\n", "'params'", ".", "rjust", "(", "param_space", ",", "' '", ")", "+", "\n", "'flops'", ".", "rjust", "(", "flop_space", ",", "' '", ")", "+", "\n", "'nanosecs'", ".", "rjust", "(", "time_space", ",", "' '", ")", ")", "\n", "if", "verbose", ":", "line_breaker", "(", ")", "\n", "modify_forward", "(", "model", ")", "\n", "model", ".", "forward", "(", "data", ")", "\n", "restore_forward", "(", "model", ")", "\n", "if", "verbose", ":", "\n", "        ", "line_breaker", "(", ")", "\n", "print", "(", "'Total'", ".", "ljust", "(", "name_space", ",", "' '", ")", "+", "\n", "'{:,}'", ".", "format", "(", "total_params", ")", ".", "rjust", "(", "param_space", ",", "' '", ")", "+", "\n", "'{:,}'", ".", "format", "(", "total_flops", ")", ".", "rjust", "(", "flop_space", ",", "' '", ")", "+", "\n", "'{:,}'", ".", "format", "(", "total_time", ")", ".", "rjust", "(", "time_space", ",", "' '", ")", ")", "\n", "\n", "", "return", "total_params", ",", "total_flops", ",", "total_time", "\n", "", ""]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.AverageMeter.__init__": [[36, 38], ["utilities.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.AverageMeter.reset": [[39, 44], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.AverageMeter.update": [[45, 50], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.logger": [[7, 23], ["logging.getLogger", "logging.getLogger.setLevel", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.getLogger.addHandler", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.getLogger.addHandler", "logging.FileHandler.setFormatter", "logging.StreamHandler.setFormatter"], "function", ["None"], ["def", "logger", "(", "log_dir", ",", "need_time", "=", "True", ",", "need_stdout", "=", "False", ")", ":", "\n", "    ", "log", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "log", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "log_dir", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "fmt", "=", "'%(asctime)s %(message)s'", ",", "datefmt", "=", "'%m/%d/%Y-%I:%M:%S'", ")", "\n", "if", "need_stdout", ":", "\n", "        ", "ch", "=", "logging", ".", "StreamHandler", "(", "sys", ".", "stdout", ")", "\n", "ch", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "log", ".", "addHandler", "(", "ch", ")", "\n", "", "if", "need_time", ":", "\n", "        ", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "if", "need_stdout", ":", "\n", "            ", "ch", ".", "setFormatter", "(", "formatter", ")", "\n", "", "", "log", ".", "addHandler", "(", "fh", ")", "\n", "return", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.timeSince": [[24, 32], ["math.floor", "math.floor", "int", "time.time"], "function", ["None"], ["", "def", "timeSince", "(", "since", "=", "None", ",", "s", "=", "None", ")", ":", "\n", "    ", "if", "s", "is", "None", ":", "\n", "        ", "s", "=", "int", "(", "time", ".", "time", "(", ")", "-", "since", ")", "\n", "", "m", "=", "math", ".", "floor", "(", "s", "/", "60", ")", "\n", "s", "%=", "60", "\n", "h", "=", "math", ".", "floor", "(", "m", "/", "60", ")", "\n", "m", "%=", "60", "\n", "return", "'%dh %dm %ds'", "%", "(", "h", ",", "m", ",", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.accuracy": [[51, 67], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "wrong_k.mul_().item", "target.view", "correct[].view().float", "wrong_k.mul_", "correct[].view"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "wrong_k", "=", "batch_size", "-", "correct_k", "\n", "res", ".", "append", "(", "wrong_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ".", "item", "(", ")", ")", "\n", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.lr_scheduler.GradualWarmupScheduler.__init__": [[13, 20], ["torch.optim.lr_scheduler.StepLR.__init__"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["def", "__init__", "(", "self", ",", "optimizer", ",", "warmup_epoch", ",", "multiplier", "=", "1.0", ",", "scheduler", "=", "None", ")", ":", "\n", "        ", "assert", "multiplier", ">", "1.", ",", "'multiplier should be greater than 1.'", "\n", "self", ".", "multiplier", "=", "multiplier", "\n", "self", ".", "warmup_epoch", "=", "warmup_epoch", "\n", "self", ".", "scheduler", "=", "scheduler", "\n", "self", ".", "finish_warmup", "=", "False", "\n", "super", "(", ")", ".", "__init__", "(", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.lr_scheduler.GradualWarmupScheduler.get_lr": [[21, 31], ["lr_scheduler.GradualWarmupScheduler.scheduler.get_lr"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.lr_scheduler.GradualWarmupScheduler.get_lr"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "last_epoch", ">", "self", ".", "warmup_epoch", ":", "\n", "            ", "if", "self", ".", "scheduler", ":", "\n", "                ", "if", "not", "self", ".", "finish_warmup", ":", "\n", "                    ", "self", ".", "scheduler", ".", "base_lrs", "=", "[", "base_lr", "*", "self", ".", "multiplier", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "self", ".", "finish_warmup", "=", "True", "\n", "", "return", "self", ".", "scheduler", ".", "get_lr", "(", ")", "\n", "", "return", "[", "base_lr", "*", "self", ".", "multiplier", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n", "", "return", "[", "base_lr", "*", "(", "(", "self", ".", "multiplier", "-", "1.", ")", "*", "self", ".", "last_epoch", "/", "self", ".", "warmup_epoch", "+", "1.", ")", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.lr_scheduler.GradualWarmupScheduler.step": [[32, 38], ["super().step", "lr_scheduler.GradualWarmupScheduler.scheduler.step", "lr_scheduler.GradualWarmupScheduler.scheduler.step"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.lr_scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.lr_scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.lr_scheduler.GradualWarmupScheduler.step"], ["", "def", "step", "(", "self", ",", "epoch", "=", "None", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "finish_warmup", "and", "self", ".", "scheduler", ":", "\n", "            ", "if", "epoch", "is", "None", ":", "self", ".", "scheduler", ".", "step", "(", "None", ")", "\n", "else", ":", "self", ".", "scheduler", ".", "step", "(", "epoch", "-", "self", ".", "warmup_epoch", ")", "\n", "", "else", ":", "\n", "            ", "return", "super", "(", "GradualWarmupScheduler", ",", "self", ")", ".", "step", "(", "epoch", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_cifar.CifarVGG.__init__": [[11, 16], ["torch.Module.__init__", "vgg_cifar.CifarVGG._make_layers", "torch.Linear", "int"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_cifar.CifarVGG._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "num_classes", "=", "10", ",", "widen_factor", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "CifarVGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "widen_factor", "=", "widen_factor", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "'VGG{0}'", ".", "format", "(", "depth", ")", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "int", "(", "512", "*", "widen_factor", ")", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_cifar.CifarVGG.forward": [[17, 22], ["vgg_cifar.CifarVGG.features", "vgg_cifar.CifarVGG.view", "vgg_cifar.CifarVGG.classifier", "vgg_cifar.CifarVGG.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_cifar.CifarVGG._make_layers": [[23, 37], ["torch.Sequential", "torch.AvgPool2d", "int", "torch.MaxPool2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "x", "=", "int", "(", "x", "*", "self", ".", "widen_factor", ")", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "8", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_cifar.cifar_vgg": [[38, 40], ["vgg_cifar.CifarVGG"], "function", ["None"], ["", "", "def", "cifar_vgg", "(", "args", ")", ":", "\n", "    ", "return", "CifarVGG", "(", "args", ".", "depth", ",", "args", ".", "class_num", ",", "args", ".", "arg1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2.InvertedResidual.__init__": [[48, 78], ["torch.Module.__init__", "round", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.Conv2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", ",", "expand_ratio", ")", ":", "\n", "        ", "super", "(", "InvertedResidual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "stride", "in", "[", "1", ",", "2", "]", "\n", "\n", "hidden_dim", "=", "round", "(", "inp", "*", "expand_ratio", ")", "\n", "self", ".", "identity", "=", "stride", "==", "1", "and", "inp", "==", "oup", "\n", "\n", "if", "expand_ratio", "==", "1", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "hidden_dim", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "hidden_dim", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "hidden_dim", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2.InvertedResidual.forward": [[80, 85], ["mobilenetv2.InvertedResidual.conv", "mobilenetv2.InvertedResidual.conv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "identity", ":", "\n", "            ", "return", "x", "+", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2.MobileNetV2.__init__": [[88, 120], ["torch.Module.__init__", "mobilenetv2._make_divisible", "torch.Sequential", "mobilenetv2.conv_1x1_bn", "torch.AdaptiveAvgPool2d", "torch.Linear", "mobilenetv2.MobileNetV2._initialize_weights", "mobilenetv2.conv_3x3_bn", "mobilenetv2._make_divisible", "range", "mobilenetv2._make_divisible", "layers.append", "block"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2._make_divisible", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2.conv_1x1_bn", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.VGG._initialize_weights", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2.conv_3x3_bn", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2._make_divisible", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2._make_divisible"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ",", "width_mult", "=", "1.", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# setting of inverted residual blocks", "\n", "self", ".", "cfgs", "=", "[", "\n", "# t, c, n, s", "\n", "[", "1", ",", "16", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "24", ",", "2", ",", "2", "]", ",", "\n", "[", "6", ",", "32", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "64", ",", "4", ",", "2", "]", ",", "\n", "[", "6", ",", "96", ",", "3", ",", "1", "]", ",", "\n", "[", "6", ",", "160", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "320", ",", "1", ",", "1", "]", ",", "\n", "]", "\n", "\n", "# building first layer", "\n", "input_channel", "=", "_make_divisible", "(", "32", "*", "width_mult", ",", "4", "if", "width_mult", "==", "0.1", "else", "8", ")", "\n", "layers", "=", "[", "conv_3x3_bn", "(", "3", ",", "input_channel", ",", "2", ")", "]", "\n", "# building inverted residual blocks", "\n", "block", "=", "InvertedResidual", "\n", "for", "t", ",", "c", ",", "n", ",", "s", "in", "self", ".", "cfgs", ":", "\n", "            ", "output_channel", "=", "_make_divisible", "(", "c", "*", "width_mult", ",", "4", "if", "width_mult", "==", "0.1", "else", "8", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "                ", "layers", ".", "append", "(", "block", "(", "input_channel", ",", "output_channel", ",", "s", "if", "i", "==", "0", "else", "1", ",", "t", ")", ")", "\n", "input_channel", "=", "output_channel", "\n", "", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "# building last several layers", "\n", "output_channel", "=", "_make_divisible", "(", "1280", "*", "width_mult", ",", "4", "if", "width_mult", "==", "0.1", "else", "8", ")", "if", "width_mult", ">", "1.0", "else", "1280", "\n", "self", ".", "conv", "=", "conv_1x1_bn", "(", "input_channel", ",", "output_channel", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "output_channel", ",", "num_classes", ")", "\n", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2.MobileNetV2.forward": [[121, 128], ["mobilenetv2.MobileNetV2.features", "mobilenetv2.MobileNetV2.conv", "mobilenetv2.MobileNetV2.avgpool", "mobilenetv2.MobileNetV2.view", "mobilenetv2.MobileNetV2.classifier", "mobilenetv2.MobileNetV2.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2.MobileNetV2._initialize_weights": [[129, 142], ["mobilenetv2.MobileNetV2.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.bias.data.zero_", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.normal_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2._make_divisible": [[11, 29], ["max", "int"], "function", ["None"], ["def", "_make_divisible", "(", "v", ",", "divisor", ",", "min_value", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    This function is taken from the original tf repo.\n    It ensures that all layers have a channel number that is divisible by 8\n    It can be seen here:\n    https://github.com/tensorflow/models/blob/master/research/slim/nets/mobilenet/mobilenet.py\n    :param v:\n    :param divisor:\n    :param min_value:\n    :return:\n    \"\"\"", "\n", "if", "min_value", "is", "None", ":", "\n", "        ", "min_value", "=", "divisor", "\n", "", "new_v", "=", "max", "(", "min_value", ",", "int", "(", "v", "+", "divisor", "/", "2", ")", "//", "divisor", "*", "divisor", ")", "\n", "# Make sure that round down does not go down by more than 10%.", "\n", "if", "new_v", "<", "0.9", "*", "v", ":", "\n", "        ", "new_v", "+=", "divisor", "\n", "", "return", "new_v", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2.conv_3x3_bn": [[31, 36], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["", "def", "conv_3x3_bn", "(", "inp", ",", "oup", ",", "stride", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "3", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2.conv_1x1_bn": [[39, 44], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["", "def", "conv_1x1_bn", "(", "inp", ",", "oup", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.mobilenetv2.imagenet_mobilenetv2": [[143, 148], ["mobilenetv2.MobileNetV2"], "function", ["None"], ["", "", "", "", "def", "imagenet_mobilenetv2", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Constructs a MobileNet V2 model\n    \"\"\"", "\n", "return", "MobileNetV2", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_cifar.BasicBlock.__init__": [[11, 23], ["torch.Module.__init__", "torch.BatchNorm2d", "resnet_cifar.conv3x3", "torch.BatchNorm2d", "resnet_cifar.conv3x3", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.conv3x3", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "preact", "=", "'no_preact'", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "preact", "=", "preact", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_cifar.BasicBlock.forward": [[24, 45], ["resnet_cifar.BasicBlock.bn1", "resnet_cifar.BasicBlock.relu", "resnet_cifar.BasicBlock.conv1", "resnet_cifar.BasicBlock.bn2", "resnet_cifar.BasicBlock.relu", "resnet_cifar.BasicBlock.conv2", "resnet_cifar.BasicBlock.downsample", "resnet_cifar.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "bn1", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "if", "self", ".", "preact", "==", "'preact'", ":", "\n", "                ", "residual", "=", "self", ".", "downsample", "(", "out", ")", "\n", "", "else", ":", "\n", "                ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "out", "+=", "residual", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_cifar.Bottleneck.__init__": [[49, 63], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "preact", "=", "'no_preact'", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "Bottleneck", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "preact", "=", "preact", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_cifar.Bottleneck.forward": [[64, 89], ["resnet_cifar.Bottleneck.bn1", "resnet_cifar.Bottleneck.relu", "resnet_cifar.Bottleneck.conv1", "resnet_cifar.Bottleneck.bn2", "resnet_cifar.Bottleneck.relu", "resnet_cifar.Bottleneck.conv2", "resnet_cifar.Bottleneck.bn3", "resnet_cifar.Bottleneck.relu", "resnet_cifar.Bottleneck.conv3", "resnet_cifar.Bottleneck.downsample", "resnet_cifar.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "bn1", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "if", "self", ".", "preact", "==", "'preact'", ":", "\n", "                ", "residual", "=", "self", ".", "downsample", "(", "out", ")", "\n", "", "else", ":", "\n", "                ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "\n", "out", "+=", "residual", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_cifar.CifarResNet.__init__": [[92, 110], ["torch.Module.__init__", "int", "torch.Conv2d", "resnet_cifar.CifarResNet._make_layer", "resnet_cifar.CifarResNet._make_layer", "resnet_cifar.CifarResNet._make_layer", "torch.BatchNorm2d", "torch.ReLU", "torch.AvgPool2d", "torch.Linear", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.ResNet._make_layer", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.ResNet._make_layer", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "num_classes", "=", "10", ",", "widen_factor", "=", "1.", ",", "bottleneck", "=", "True", ")", ":", "\n", "        ", "super", "(", "CifarResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "int", "(", "16", "*", "widen_factor", ")", "\n", "if", "bottleneck", "==", "True", ":", "\n", "            ", "n", "=", "int", "(", "(", "depth", "-", "2", ")", "/", "9", ")", "\n", "block", "=", "Bottleneck", "\n", "", "else", ":", "\n", "            ", "n", "=", "int", "(", "(", "depth", "-", "2", ")", "/", "6", ")", "\n", "block", "=", "BasicBlock", "\n", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "int", "(", "16", "*", "widen_factor", ")", ",", "n", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "int", "(", "32", "*", "widen_factor", ")", ",", "n", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "int", "(", "64", "*", "widen_factor", ")", ",", "n", ",", "stride", "=", "2", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "int", "(", "64", "*", "widen_factor", ")", "*", "block", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "int", "(", "64", "*", "widen_factor", ")", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_cifar.CifarResNet._make_layer": [[111, 126], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "preact", "=", "'preact'", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "preact", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_cifar.CifarResNet.forward": [[127, 141], ["resnet_cifar.CifarResNet.conv1", "resnet_cifar.CifarResNet.layer1", "resnet_cifar.CifarResNet.layer2", "resnet_cifar.CifarResNet.layer3", "resnet_cifar.CifarResNet.bn1", "resnet_cifar.CifarResNet.relu", "resnet_cifar.CifarResNet.avgpool", "resnet_cifar.CifarResNet.view", "resnet_cifar.CifarResNet.fc", "resnet_cifar.CifarResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_cifar.conv3x3": [[3, 7], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_cifar.cifar_resnet": [[142, 144], ["resnet_cifar.CifarResNet"], "function", ["None"], ["", "", "def", "cifar_resnet", "(", "args", ")", ":", "\n", "    ", "return", "CifarResNet", "(", "args", ".", "depth", ",", "args", ".", "class_num", ",", "args", ".", "arg1", ",", "True", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.BasicBlock.__init__": [[28, 37], ["torch.Module.__init__", "resnet_imagenet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "resnet_imagenet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.conv3x3", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.BasicBlock.forward": [[38, 55], ["resnet_imagenet.BasicBlock.conv1", "resnet_imagenet.BasicBlock.bn1", "resnet_imagenet.BasicBlock.relu", "resnet_imagenet.BasicBlock.conv2", "resnet_imagenet.BasicBlock.bn2", "resnet_imagenet.BasicBlock.relu", "resnet_imagenet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.Bottleneck.__init__": [[60, 72], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.Bottleneck.forward": [[73, 94], ["resnet_imagenet.Bottleneck.conv1", "resnet_imagenet.Bottleneck.bn1", "resnet_imagenet.Bottleneck.relu", "resnet_imagenet.Bottleneck.conv2", "resnet_imagenet.Bottleneck.bn2", "resnet_imagenet.Bottleneck.relu", "resnet_imagenet.Bottleneck.conv3", "resnet_imagenet.Bottleneck.bn3", "resnet_imagenet.Bottleneck.relu", "resnet_imagenet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.ResNet.__init__": [[98, 120], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet_imagenet.ResNet._make_layer", "resnet_imagenet.ResNet._make_layer", "resnet_imagenet.ResNet._make_layer", "resnet_imagenet.ResNet._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "resnet_imagenet.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.ResNet._make_layer", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.ResNet._make_layer", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.ResNet._make_layer", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ",", "stride", "=", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.ResNet._make_layer": [[121, 137], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.ResNet.forward": [[138, 154], ["resnet_imagenet.ResNet.conv1", "resnet_imagenet.ResNet.bn1", "resnet_imagenet.ResNet.relu", "resnet_imagenet.ResNet.maxpool", "resnet_imagenet.ResNet.layer1", "resnet_imagenet.ResNet.layer2", "resnet_imagenet.ResNet.layer3", "resnet_imagenet.ResNet.layer4", "resnet_imagenet.ResNet.avgpool", "resnet_imagenet.ResNet.view", "resnet_imagenet.ResNet.fc", "resnet_imagenet.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.conv3x3": [[19, 23], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.resnet18": [[156, 166], ["resnet_imagenet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.resnet34": [[168, 178], ["resnet_imagenet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.resnet50": [[180, 190], ["resnet_imagenet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.resnet101": [[192, 202], ["resnet_imagenet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.resnet152": [[204, 214], ["resnet_imagenet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.imagenet_resnet": [[215, 222], ["resnet_imagenet.resnet18", "resnet_imagenet.resnet34", "resnet_imagenet.resnet50", "resnet_imagenet.resnet101", "resnet_imagenet.resnet152", "Exception"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.resnet18", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.resnet34", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.resnet50", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.resnet101", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.resnet_imagenet.resnet152"], ["", "def", "imagenet_resnet", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "depth", "==", "18", ":", "return", "resnet18", "(", ")", "\n", "elif", "args", ".", "depth", "==", "34", ":", "return", "resnet34", "(", ")", "\n", "elif", "args", ".", "depth", "==", "50", ":", "return", "resnet50", "(", ")", "\n", "elif", "args", ".", "depth", "==", "101", ":", "return", "resnet101", "(", ")", "\n", "elif", "args", ".", "depth", "==", "152", ":", "return", "resnet152", "(", ")", "\n", "else", ":", "raise", "Exception", "(", "'not support depth: {} for resnet'", ".", "format", "(", "args", ".", "depth", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.googlenet_imagenet.GoogLeNet.__init__": [[19, 54], ["torch.Module.__init__", "googlenet_imagenet.BasicConv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "googlenet_imagenet.BasicConv2d", "googlenet_imagenet.BasicConv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "googlenet_imagenet.Inception", "googlenet_imagenet.Inception", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "googlenet_imagenet.Inception", "googlenet_imagenet.Inception", "googlenet_imagenet.Inception", "googlenet_imagenet.Inception", "googlenet_imagenet.Inception", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "googlenet_imagenet.Inception", "googlenet_imagenet.Inception", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "googlenet_imagenet.InceptionAux", "googlenet_imagenet.InceptionAux", "googlenet_imagenet.GoogLeNet._initialize_weights"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.VGG._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ",", "aux_logits", "=", "True", ",", "transform_input", "=", "False", ",", "init_weights", "=", "True", ")", ":", "\n", "        ", "super", "(", "GoogLeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "aux_logits", "=", "aux_logits", "\n", "self", ".", "transform_input", "=", "transform_input", "\n", "\n", "self", ".", "conv1", "=", "BasicConv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ")", "\n", "self", ".", "maxpool1", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "conv2", "=", "BasicConv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "conv3", "=", "BasicConv2d", "(", "64", ",", "192", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "maxpool2", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "inception3a", "=", "Inception", "(", "192", ",", "64", ",", "96", ",", "128", ",", "16", ",", "32", ",", "32", ")", "\n", "self", ".", "inception3b", "=", "Inception", "(", "256", ",", "128", ",", "128", ",", "192", ",", "32", ",", "96", ",", "64", ")", "\n", "self", ".", "maxpool3", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "inception4a", "=", "Inception", "(", "480", ",", "192", ",", "96", ",", "208", ",", "16", ",", "48", ",", "64", ")", "\n", "self", ".", "inception4b", "=", "Inception", "(", "512", ",", "160", ",", "112", ",", "224", ",", "24", ",", "64", ",", "64", ")", "\n", "self", ".", "inception4c", "=", "Inception", "(", "512", ",", "128", ",", "128", ",", "256", ",", "24", ",", "64", ",", "64", ")", "\n", "self", ".", "inception4d", "=", "Inception", "(", "512", ",", "112", ",", "144", ",", "288", ",", "32", ",", "64", ",", "64", ")", "\n", "self", ".", "inception4e", "=", "Inception", "(", "528", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", "\n", "self", ".", "maxpool4", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "inception5a", "=", "Inception", "(", "832", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", "\n", "self", ".", "inception5b", "=", "Inception", "(", "832", ",", "384", ",", "192", ",", "384", ",", "48", ",", "128", ",", "128", ")", "\n", "\n", "if", "aux_logits", ":", "\n", "            ", "self", ".", "aux1", "=", "InceptionAux", "(", "512", ",", "num_classes", ")", "\n", "self", ".", "aux2", "=", "InceptionAux", "(", "528", ",", "num_classes", ")", "\n", "\n", "", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.2", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", "\n", "\n", "if", "init_weights", ":", "\n", "            ", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.googlenet_imagenet.GoogLeNet._initialize_weights": [[55, 67], ["googlenet_imagenet.GoogLeNet.modules", "isinstance", "isinstance", "stats.truncnorm", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "values.view.view.view", "isinstance", "stats.truncnorm.rvs", "m.weight.size", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "m.weight.copy_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "m.weight.numel"], "methods", ["None"], ["", "", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "import", "scipy", ".", "stats", "as", "stats", "\n", "X", "=", "stats", ".", "truncnorm", "(", "-", "2", ",", "2", ",", "scale", "=", "0.01", ")", "\n", "values", "=", "torch", ".", "as_tensor", "(", "X", ".", "rvs", "(", "m", ".", "weight", ".", "numel", "(", ")", ")", ",", "dtype", "=", "m", ".", "weight", ".", "dtype", ")", "\n", "values", "=", "values", ".", "view", "(", "m", ".", "weight", ".", "size", "(", ")", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "m", ".", "weight", ".", "copy_", "(", "values", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.googlenet_imagenet.GoogLeNet.forward": [[68, 126], ["googlenet_imagenet.GoogLeNet.conv1", "googlenet_imagenet.GoogLeNet.maxpool1", "googlenet_imagenet.GoogLeNet.conv2", "googlenet_imagenet.GoogLeNet.conv3", "googlenet_imagenet.GoogLeNet.maxpool2", "googlenet_imagenet.GoogLeNet.inception3a", "googlenet_imagenet.GoogLeNet.inception3b", "googlenet_imagenet.GoogLeNet.maxpool3", "googlenet_imagenet.GoogLeNet.inception4a", "googlenet_imagenet.GoogLeNet.inception4b", "googlenet_imagenet.GoogLeNet.inception4c", "googlenet_imagenet.GoogLeNet.inception4d", "googlenet_imagenet.GoogLeNet.inception4e", "googlenet_imagenet.GoogLeNet.maxpool4", "googlenet_imagenet.GoogLeNet.inception5a", "googlenet_imagenet.GoogLeNet.inception5b", "googlenet_imagenet.GoogLeNet.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "googlenet_imagenet.GoogLeNet.dropout", "googlenet_imagenet.GoogLeNet.fc", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "googlenet_imagenet.GoogLeNet.aux1", "googlenet_imagenet.GoogLeNet.aux2", "_GoogLeNetOutputs", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "transform_input", ":", "\n", "            ", "x_ch0", "=", "torch", ".", "unsqueeze", "(", "x", "[", ":", ",", "0", "]", ",", "1", ")", "*", "(", "0.229", "/", "0.5", ")", "+", "(", "0.485", "-", "0.5", ")", "/", "0.5", "\n", "x_ch1", "=", "torch", ".", "unsqueeze", "(", "x", "[", ":", ",", "1", "]", ",", "1", ")", "*", "(", "0.224", "/", "0.5", ")", "+", "(", "0.456", "-", "0.5", ")", "/", "0.5", "\n", "x_ch2", "=", "torch", ".", "unsqueeze", "(", "x", "[", ":", ",", "2", "]", ",", "1", ")", "*", "(", "0.225", "/", "0.5", ")", "+", "(", "0.406", "-", "0.5", ")", "/", "0.5", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x_ch0", ",", "x_ch1", ",", "x_ch2", ")", ",", "1", ")", "\n", "\n", "# N x 3 x 224 x 224", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "# N x 64 x 112 x 112", "\n", "x", "=", "self", ".", "maxpool1", "(", "x", ")", "\n", "# N x 64 x 56 x 56", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "# N x 64 x 56 x 56", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "# N x 192 x 56 x 56", "\n", "x", "=", "self", ".", "maxpool2", "(", "x", ")", "\n", "\n", "# N x 192 x 28 x 28", "\n", "x", "=", "self", ".", "inception3a", "(", "x", ")", "\n", "# N x 256 x 28 x 28", "\n", "x", "=", "self", ".", "inception3b", "(", "x", ")", "\n", "# N x 480 x 28 x 28", "\n", "x", "=", "self", ".", "maxpool3", "(", "x", ")", "\n", "# N x 480 x 14 x 14", "\n", "x", "=", "self", ".", "inception4a", "(", "x", ")", "\n", "# N x 512 x 14 x 14", "\n", "if", "self", ".", "training", "and", "self", ".", "aux_logits", ":", "\n", "            ", "aux1", "=", "self", ".", "aux1", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "inception4b", "(", "x", ")", "\n", "# N x 512 x 14 x 14", "\n", "x", "=", "self", ".", "inception4c", "(", "x", ")", "\n", "# N x 512 x 14 x 14", "\n", "x", "=", "self", ".", "inception4d", "(", "x", ")", "\n", "# N x 528 x 14 x 14", "\n", "if", "self", ".", "training", "and", "self", ".", "aux_logits", ":", "\n", "            ", "aux2", "=", "self", ".", "aux2", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "inception4e", "(", "x", ")", "\n", "# N x 832 x 14 x 14", "\n", "x", "=", "self", ".", "maxpool4", "(", "x", ")", "\n", "# N x 832 x 7 x 7", "\n", "x", "=", "self", ".", "inception5a", "(", "x", ")", "\n", "# N x 832 x 7 x 7", "\n", "x", "=", "self", ".", "inception5b", "(", "x", ")", "\n", "# N x 1024 x 7 x 7", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "# N x 1024 x 1 x 1", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "# N x 1024", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "# N x 1000 (num_classes)", "\n", "if", "self", ".", "training", "and", "self", ".", "aux_logits", ":", "\n", "            ", "return", "_GoogLeNetOutputs", "(", "x", ",", "aux2", ",", "aux1", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.googlenet_imagenet.Inception.__init__": [[130, 148], ["torch.Module.__init__", "googlenet_imagenet.BasicConv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "googlenet_imagenet.BasicConv2d", "googlenet_imagenet.BasicConv2d", "googlenet_imagenet.BasicConv2d", "googlenet_imagenet.BasicConv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "googlenet_imagenet.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "ch1x1", ",", "ch3x3red", ",", "ch3x3", ",", "ch5x5red", ",", "ch5x5", ",", "pool_proj", ")", ":", "\n", "        ", "super", "(", "Inception", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "branch1", "=", "BasicConv2d", "(", "in_channels", ",", "ch1x1", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "branch2", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "in_channels", ",", "ch3x3red", ",", "kernel_size", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "ch3x3red", ",", "ch3x3", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", ")", "\n", "\n", "self", ".", "branch3", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "in_channels", ",", "ch5x5red", ",", "kernel_size", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "ch5x5red", ",", "ch5x5", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", ")", "\n", "\n", "self", ".", "branch4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", ",", "\n", "BasicConv2d", "(", "in_channels", ",", "pool_proj", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.googlenet_imagenet.Inception.forward": [[150, 158], ["googlenet_imagenet.Inception.branch1", "googlenet_imagenet.Inception.branch2", "googlenet_imagenet.Inception.branch3", "googlenet_imagenet.Inception.branch4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1", "=", "self", ".", "branch1", "(", "x", ")", "\n", "branch2", "=", "self", ".", "branch2", "(", "x", ")", "\n", "branch3", "=", "self", ".", "branch3", "(", "x", ")", "\n", "branch4", "=", "self", ".", "branch4", "(", "x", ")", "\n", "\n", "outputs", "=", "[", "branch1", ",", "branch2", ",", "branch3", ",", "branch4", "]", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.googlenet_imagenet.InceptionAux.__init__": [[162, 168], ["torch.Module.__init__", "googlenet_imagenet.BasicConv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "InceptionAux", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "BasicConv2d", "(", "in_channels", ",", "128", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "2048", ",", "1024", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.googlenet_imagenet.InceptionAux.forward": [[169, 185], ["torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "googlenet_imagenet.InceptionAux.conv", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.relu", "torch.relu", "torch.relu", "torch.dropout", "torch.dropout", "torch.dropout", "googlenet_imagenet.InceptionAux.fc2", "googlenet_imagenet.InceptionAux.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# aux1: N x 512 x 14 x 14, aux2: N x 528 x 14 x 14", "\n", "        ", "x", "=", "F", ".", "adaptive_avg_pool2d", "(", "x", ",", "(", "4", ",", "4", ")", ")", "\n", "# aux1: N x 512 x 4 x 4, aux2: N x 528 x 4 x 4", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "# N x 128 x 4 x 4", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "# N x 2048", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "x", ")", ",", "inplace", "=", "True", ")", "\n", "# N x 2048", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "0.7", ",", "training", "=", "self", ".", "training", ")", "\n", "# N x 2048", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "# N x 1024", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.googlenet_imagenet.BasicConv2d.__init__": [[189, 193], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "BasicConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "bias", "=", "False", ",", "**", "kwargs", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ",", "eps", "=", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.googlenet_imagenet.BasicConv2d.forward": [[194, 198], ["googlenet_imagenet.BasicConv2d.conv", "googlenet_imagenet.BasicConv2d.bn", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "return", "F", ".", "relu", "(", "x", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.googlenet_imagenet.imagenet_googlenet": [[200, 202], ["googlenet_imagenet.GoogLeNet"], "function", ["None"], ["", "", "def", "imagenet_googlenet", "(", "args", ")", ":", "\n", "    ", "return", "GoogLeNet", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.VGG.__init__": [[26, 40], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "vgg_imagenet.VGG._initialize_weights"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.VGG._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "features", ",", "num_classes", "=", "1000", ",", "init_weights", "=", "True", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "features", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "7", "*", "7", ",", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "num_classes", ")", ",", "\n", ")", "\n", "if", "init_weights", ":", "\n", "            ", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.VGG.forward": [[41, 46], ["vgg_imagenet.VGG.features", "vgg_imagenet.VGG.view", "vgg_imagenet.VGG.classifier", "vgg_imagenet.VGG.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.VGG._initialize_weights": [[47, 60], ["vgg_imagenet.VGG.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.bias.data.zero_", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.normal_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.make_layers": [[62, 76], ["torch.Sequential", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], ["", "", "", "", "def", "make_layers", "(", "cfg", ",", "batch_norm", "=", "False", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "v", "in", "cfg", ":", "\n", "        ", "if", "v", "==", "'M'", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "if", "batch_norm", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg11": [[86, 98], ["vgg_imagenet.VGG", "vgg_imagenet.make_layers", "VGG.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.make_layers"], ["def", "vgg11", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 11-layer model (configuration \"A\")\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "if", "pretrained", ":", "\n", "        ", "kwargs", "[", "'init_weights'", "]", "=", "False", "\n", "", "model", "=", "VGG", "(", "make_layers", "(", "cfg", "[", "'A'", "]", ")", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'vgg11'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg11_bn": [[100, 112], ["vgg_imagenet.VGG", "vgg_imagenet.make_layers", "VGG.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.make_layers"], ["", "def", "vgg11_bn", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 11-layer model (configuration \"A\") with batch normalization\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "if", "pretrained", ":", "\n", "        ", "kwargs", "[", "'init_weights'", "]", "=", "False", "\n", "", "model", "=", "VGG", "(", "make_layers", "(", "cfg", "[", "'A'", "]", ",", "batch_norm", "=", "True", ")", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'vgg11_bn'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg13": [[114, 126], ["vgg_imagenet.VGG", "vgg_imagenet.make_layers", "VGG.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.make_layers"], ["", "def", "vgg13", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 13-layer model (configuration \"B\")\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "if", "pretrained", ":", "\n", "        ", "kwargs", "[", "'init_weights'", "]", "=", "False", "\n", "", "model", "=", "VGG", "(", "make_layers", "(", "cfg", "[", "'B'", "]", ")", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'vgg13'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg13_bn": [[128, 140], ["vgg_imagenet.VGG", "vgg_imagenet.make_layers", "VGG.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.make_layers"], ["", "def", "vgg13_bn", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 13-layer model (configuration \"B\") with batch normalization\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "if", "pretrained", ":", "\n", "        ", "kwargs", "[", "'init_weights'", "]", "=", "False", "\n", "", "model", "=", "VGG", "(", "make_layers", "(", "cfg", "[", "'B'", "]", ",", "batch_norm", "=", "True", ")", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'vgg13_bn'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg16": [[142, 154], ["vgg_imagenet.VGG", "vgg_imagenet.make_layers", "VGG.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.make_layers"], ["", "def", "vgg16", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 16-layer model (configuration \"D\")\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "if", "pretrained", ":", "\n", "        ", "kwargs", "[", "'init_weights'", "]", "=", "False", "\n", "", "model", "=", "VGG", "(", "make_layers", "(", "cfg", "[", "'D'", "]", ")", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'vgg16'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg16_bn": [[156, 168], ["vgg_imagenet.VGG", "vgg_imagenet.make_layers", "VGG.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.make_layers"], ["", "def", "vgg16_bn", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 16-layer model (configuration \"D\") with batch normalization\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "if", "pretrained", ":", "\n", "        ", "kwargs", "[", "'init_weights'", "]", "=", "False", "\n", "", "model", "=", "VGG", "(", "make_layers", "(", "cfg", "[", "'D'", "]", ",", "batch_norm", "=", "True", ")", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'vgg16_bn'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg19": [[170, 182], ["vgg_imagenet.VGG", "vgg_imagenet.make_layers", "VGG.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.make_layers"], ["", "def", "vgg19", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 19-layer model (configuration \"E\")\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "if", "pretrained", ":", "\n", "        ", "kwargs", "[", "'init_weights'", "]", "=", "False", "\n", "", "model", "=", "VGG", "(", "make_layers", "(", "cfg", "[", "'E'", "]", ")", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'vgg19'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg19_bn": [[184, 196], ["vgg_imagenet.VGG", "vgg_imagenet.make_layers", "VGG.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.make_layers"], ["", "def", "vgg19_bn", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 19-layer model (configuration 'E') with batch normalization\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "if", "pretrained", ":", "\n", "        ", "kwargs", "[", "'init_weights'", "]", "=", "False", "\n", "", "model", "=", "VGG", "(", "make_layers", "(", "cfg", "[", "'E'", "]", ",", "batch_norm", "=", "True", ")", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'vgg19_bn'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.imagenet_vgg": [[197, 203], ["vgg_imagenet.vgg11_bn", "vgg_imagenet.vgg13_bn", "vgg_imagenet.vgg16_bn", "vgg_imagenet.vgg19_bn", "Exception"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg11_bn", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg13_bn", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg16_bn", "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.vgg_imagenet.vgg19_bn"], ["", "def", "imagenet_vgg", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "depth", "==", "11", ":", "return", "vgg11_bn", "(", ")", "\n", "elif", "args", ".", "depth", "==", "13", ":", "return", "vgg13_bn", "(", ")", "\n", "elif", "args", ".", "depth", "==", "16", ":", "return", "vgg16_bn", "(", ")", "\n", "elif", "args", ".", "depth", "==", "19", ":", "return", "vgg19_bn", "(", ")", "\n", "else", ":", "raise", "Exception", "(", "'not support depth: {} for vgg'", ".", "format", "(", "args", ".", "depth", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicConv2d.__init__": [[10, 17], ["torch.Conv2d.__init__", "sorted", "sorted", "set", "set"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "sr_in_list", "=", "(", "1.", ",", ")", ",", "sr_out_list", "=", "None", ")", ":", "\n", "        ", "self", ".", "sr_idx", ",", "self", ".", "sr_in_list", "=", "0", ",", "sorted", "(", "set", "(", "sr_in_list", ")", ",", "reverse", "=", "True", ")", "\n", "if", "sr_out_list", "is", "not", "None", ":", "self", ".", "sr_out_list", "=", "sorted", "(", "set", "(", "sr_out_list", ")", ",", "reverse", "=", "True", ")", "\n", "else", ":", "self", ".", "sr_out_list", "=", "self", ".", "sr_in_list", "\n", "super", "(", "DynamicConv2d", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "stride", ",", "padding", ",", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicConv2d.forward": [[18, 25], ["round", "round", "torch.nn.functional.conv2d", "round"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "in_channels", "=", "round", "(", "self", ".", "in_channels", "*", "self", ".", "sr_in_list", "[", "self", ".", "sr_idx", "]", ")", "\n", "out_channels", "=", "round", "(", "self", ".", "out_channels", "*", "self", ".", "sr_out_list", "[", "self", ".", "sr_idx", "]", ")", "\n", "weight", ",", "bias", "=", "self", ".", "weight", "[", ":", "out_channels", ",", ":", "in_channels", ",", ":", ",", ":", "]", ",", "None", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "bias", "=", "self", ".", "bias", "[", ":", "out_channels", "]", "\n", "return", "F", ".", "conv2d", "(", "input", ",", "weight", ",", "bias", ",", "self", ".", "stride", ",", "self", ".", "padding", ",", "self", ".", "dilation", ",", "\n", "round", "(", "self", ".", "groups", "*", "self", ".", "sr_in_list", "[", "self", ".", "sr_idx", "]", ")", "if", "self", ".", "groups", ">", "1", "else", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicGN.__init__": [[27, 30], ["torch.GroupNorm.__init__", "sorted", "set"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_groups", ",", "num_channels", ",", "eps", "=", "1e-5", ",", "sr_in_list", "=", "(", "1.", ",", ")", ")", ":", "\n", "        ", "self", ".", "sr_idx", ",", "self", ".", "sr_in_list", "=", "0", ",", "sorted", "(", "set", "(", "sr_in_list", ")", ",", "reverse", "=", "True", ")", "\n", "super", "(", "DynamicGN", ",", "self", ")", ".", "__init__", "(", "num_groups", ",", "num_channels", ",", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicGN.forward": [[31, 36], ["int", "torch.nn.functional.group_norm", "round", "float"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "num_channels", "=", "int", "(", "self", ".", "num_channels", "*", "self", ".", "sr_in_list", "[", "self", ".", "sr_idx", "]", ")", "\n", "weight", ",", "bias", "=", "self", ".", "weight", "[", ":", "num_channels", "]", ",", "self", ".", "bias", "[", ":", "num_channels", "]", "\n", "return", "F", ".", "group_norm", "(", "input", ",", "round", "(", "num_channels", "*", "self", ".", "num_groups", "/", "float", "(", "self", ".", "num_channels", ")", ")", ",", "\n", "weight", ",", "bias", ",", "self", ".", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicBN.__init__": [[38, 43], ["torch.Module.__init__", "torch.Sequential", "sorted", "set", "torch.BatchNorm2d", "int"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ",", "sr_in_list", "=", "(", "1.", ",", ")", ")", ":", "\n", "        ", "super", "(", "DynamicBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sr_idx", ",", "self", ".", "sr_in_list", "=", "0", ",", "sorted", "(", "set", "(", "sr_in_list", ")", ",", "reverse", "=", "True", ")", "\n", "self", ".", "bn_list", "=", "nn", ".", "Sequential", "(", "*", "[", "nn", ".", "BatchNorm2d", "(", "int", "(", "num_features", "*", "sr", ")", ",", "\n", "affine", "=", "affine", ",", "track_running_stats", "=", "track_running_stats", ")", "for", "sr", "in", "self", ".", "sr_in_list", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicBN.forward": [[44, 46], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "bn_list", "[", "self", ".", "sr_idx", "]", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__": [[48, 53], ["torch.Linear.__init__", "sorted", "sorted", "set", "set"], "methods", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ",", "sr_in_list", "=", "(", "1.0", ",", ")", ",", "sr_out_list", "=", "None", ")", ":", "\n", "        ", "self", ".", "sr_idx", ",", "self", ".", "sr_in_list", "=", "0", ",", "sorted", "(", "set", "(", "sr_in_list", ")", ",", "reverse", "=", "True", ")", "\n", "if", "sr_out_list", "is", "not", "None", ":", "self", ".", "sr_out_list", "=", "sorted", "(", "set", "(", "sr_out_list", ")", ",", "reverse", "=", "True", ")", "\n", "else", ":", "self", ".", "sr_out_list", "=", "self", ".", "sr_in_list", "\n", "super", "(", "DynamicLinear", ",", "self", ")", ".", "__init__", "(", "in_features", ",", "out_features", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.DynamicLinear.forward": [[54, 60], ["round", "round", "torch.nn.functional.linear"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "in_features", "=", "round", "(", "self", ".", "in_features", "*", "self", ".", "sr_in_list", "[", "self", ".", "sr_idx", "]", ")", "\n", "out_features", "=", "round", "(", "self", ".", "out_features", "*", "self", ".", "sr_out_list", "[", "self", ".", "sr_idx", "]", ")", "\n", "weight", ",", "bias", "=", "self", ".", "weight", "[", ":", "out_features", ",", ":", "in_features", "]", ",", "None", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "bias", "=", "self", ".", "bias", "[", ":", "out_features", "]", "\n", "return", "F", ".", "linear", "(", "input", ",", "weight", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.update_sr_idx": [[63, 66], ["model.apply", "hasattr", "setattr"], "function", ["None"], ["def", "update_sr_idx", "(", "model", ",", "idx", ")", ":", "\n", "    ", "model", ".", "apply", "(", "lambda", "module", ":", "(", "setattr", "(", "module", ",", "'sr_idx'", ",", "idx", ")", "\n", "if", "hasattr", "(", "module", ",", "'sr_idx'", ")", "else", "None", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.bind_update_sr_idx": [[67, 69], ["update_sr_idx.__get__"], "function", ["None"], ["", "def", "bind_update_sr_idx", "(", "model", ")", ":", "\n", "    ", "model", ".", "update_sr_idx", "=", "update_sr_idx", ".", "__get__", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.upgrade_dynamic_layers": [[70, 102], ["sorted", "model_slicing.upgrade_dynamic_layers.update"], "function", ["home.repos.pwc.inspect_result.ooibc88_modelslicing.utils.utilities.AverageMeter.update"], ["", "def", "upgrade_dynamic_layers", "(", "model", ",", "num_groups", "=", "8", ",", "sr_in_list", "=", "(", "1.", ",", ")", ")", ":", "\n", "    ", "sr_in_list", "=", "sorted", "(", "set", "(", "sr_in_list", ")", ",", "reverse", "=", "True", ")", "\n", "\n", "def", "update", "(", "model", ")", ":", "\n", "        ", "for", "name", ",", "module", "in", "model", ".", "named_children", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "setattr", "(", "model", ",", "name", ",", "DynamicConv2d", "(", "module", ".", "in_channels", ",", "module", ".", "out_channels", ",", "\n", "module", ".", "kernel_size", ",", "module", ".", "stride", ",", "module", ".", "padding", ",", "module", ".", "dilation", ",", "\n", "module", ".", "groups", ",", "module", ".", "bias", "is", "not", "None", ",", "sr_in_list", ")", ")", "\n", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "setattr", "(", "model", ",", "name", ",", "DynamicLinear", "(", "module", ".", "in_features", ",", "module", ".", "out_features", ",", "\n", "module", ".", "bias", "is", "not", "None", ",", "sr_in_list", ")", ")", "\n", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "if", "num_groups", ">", "0", ":", "setattr", "(", "model", ",", "name", ",", "DynamicGN", "(", "\n", "num_groups", ",", "module", ".", "num_features", ",", "module", ".", "eps", ",", "sr_in_list", ")", ")", "\n", "else", ":", "setattr", "(", "model", ",", "name", ",", "DynamicBN", "(", "module", ".", "num_features", ",", "\n", "module", ".", "affine", ",", "module", ".", "track_running_stats", ",", "sr_in_list", ")", ")", "\n", "\n", "", "update", "(", "module", ")", "\n", "\n", "# replace all conv/bn/linear layers with dynamic counterparts", "\n", "", "", "update", "(", "model", ")", "\n", "# bind all dynamic layers with function update_sr_idx", "\n", "bind_update_sr_idx", "(", "model", ")", "\n", "\n", "# get all modules, and update the 1st module's sr_in_list and last module's sr_out_list to all 1s", "\n", "modules", "=", "list", "(", "filter", "(", "lambda", "module", ":", "isinstance", "(", "module", ",", "DYNAMIC_LAYERS", ")", ",", "model", ".", "modules", "(", ")", ")", ")", "\n", "modules", "[", "0", "]", ".", "sr_in_list", "=", "[", "1.", "for", "_", "in", "range", "(", "len", "(", "sr_in_list", ")", ")", "]", "\n", "modules", "[", "-", "1", "]", ".", "sr_out_list", "=", "[", "1.", "for", "_", "in", "range", "(", "len", "(", "sr_in_list", ")", ")", "]", "\n", "\n", "# return self to support chain operations (optional return)", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.ooibc88_modelslicing.models.model_slicing.create_sr_scheduler": [[103, 131], ["len", "list", "scheduler_type.find", "candidate_idxs.remove", "min_max_idxs.append", "scheduler_type.find", "candidate_idxs.remove", "min_max_idxs.append", "scheduler_type.startswith", "range", "numpy.array", "sum", "numpy.random.choice", "sorted", "Exception", "np.random.choice.tolist"], "function", ["None"], ["", "def", "create_sr_scheduler", "(", "scheduler_type", ",", "sr_list", ",", "sr_rand_num", "=", "1", ",", "sr_prob", "=", "None", ")", ":", "\n", "    ", "'''\n    :param scheduler_type:  round_robin, random+optionally specified min/max slice rate\n    :param sr_list:         slice rate list\n    :param sr_rand_num:     number of slice rates for random sampling\n    :param sr_prob:         probabilities associated with each slice rate for random sampling\n                            default: None for uniform sampling, or len(sr_prob)==sr_rand_num\n    :return:                a list of slice rate for the current training batch\n    '''", "\n", "idx_num", "=", "len", "(", "sr_list", ")", "\n", "min_max_idxs", ",", "candidate_idxs", "=", "[", "]", ",", "list", "(", "range", "(", "idx_num", ")", ")", "\n", "if", "sr_prob", ":", "sr_prob", "=", "np", ".", "array", "(", "sr_prob", ")", "/", "sum", "(", "sr_prob", ")", "\n", "\n", "if", "scheduler_type", ".", "find", "(", "'max'", ")", ">=", "0", ":", "\n", "        ", "candidate_idxs", ".", "remove", "(", "0", ")", "\n", "min_max_idxs", ".", "append", "(", "0", ")", "\n", "", "if", "scheduler_type", ".", "find", "(", "'min'", ")", ">=", "0", ":", "\n", "        ", "candidate_idxs", ".", "remove", "(", "idx_num", "-", "1", ")", "\n", "min_max_idxs", ".", "append", "(", "idx_num", "-", "1", ")", "\n", "\n", "", "while", "True", ":", "\n", "        ", "if", "scheduler_type", ".", "startswith", "(", "'random'", ")", ":", "\n", "            ", "rand_idxs", "=", "np", ".", "random", ".", "choice", "(", "candidate_idxs", ",", "size", "=", "sr_rand_num", ",", "p", "=", "sr_prob", ",", "replace", "=", "False", ")", "\n", "yield", "sorted", "(", "rand_idxs", ".", "tolist", "(", ")", "+", "min_max_idxs", ")", "\n", "", "elif", "scheduler_type", "==", "'round_robin'", ":", "\n", "            ", "yield", "candidate_idxs", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'unknown scheduler type: {}'", ".", "format", "(", "scheduler_type", ")", ")", "", "", "", "", ""]]}