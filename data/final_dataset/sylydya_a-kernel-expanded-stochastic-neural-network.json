{"home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_covertype_split.Net.__init__": [[71, 80], ["torch.Module.__init__", "range", "kstonet_covertype_split.Net.fc_list.append", "kstonet_covertype_split.Net.add_module", "kstonet_covertype_split.Net.fc_list.append", "kstonet_covertype_split.Net.add_module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "str", "str"], "methods", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_hidden", ",", "hidden_dim", ",", "output_dim", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_hidden", "=", "num_hidden", "\n", "self", ".", "fc_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "            ", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "i", "]", ",", "hidden_dim", "[", "i", "+", "1", "]", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "i", "+", "2", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "-", "1", "]", ",", "output_dim", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "num_hidden", "+", "1", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_covertype_split.Net.forward": [[81, 87], ["torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "range", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "torch", ".", "tanh", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_hidden", "-", "1", ")", ":", "\n", "            ", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc_list", "[", "i", "]", "(", "x", ")", ")", "\n", "", "x", "=", "self", ".", "fc_list", "[", "-", "1", "]", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_covertype_split.svr_solver": [[89, 92], ["svr_list[].fit"], "function", ["None"], ["", "", "def", "svr_solver", "(", "svr_list", ",", "X", ",", "Y", ",", "i", ")", ":", "\n", "    ", "svr_list", "[", "i", "]", ".", "fit", "(", "X", ",", "Y", "[", ":", ",", "i", "]", ")", "\n", "return", "svr_list", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_covertype_split.lasso_solver": [[94, 99], ["solver.fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "function", ["None"], ["", "def", "lasso_solver", "(", "weight", ",", "bias", ",", "solver", ",", "device", ",", "X", ",", "Y", ",", "i", ")", ":", "\n", "    ", "clf", "=", "solver", ".", "fit", "(", "X", ",", "Y", "[", ":", ",", "i", "]", ")", "\n", "dim", "=", "weight", ".", "shape", "[", "1", "]", "\n", "weight", ".", "data", "[", "i", ",", ":", "]", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "dim", ")", ".", "to", "(", "device", ")", "\n", "bias", ".", "data", "[", "i", "]", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_covertype_split.main": [[101, 379], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "process_data.preprocess_data", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.device", "torch.device", "torch.device", "x_train.to.to", "y_train.to.to", "x_test.to.to", "y_test.to.to", "torch.MSELoss", "kstonet_covertype_split.Net", "Net.to", "torch.Linear", "nn.Linear.to", "nn.Linear.", "range", "torch.MSELoss", "torch.MSELoss", "int", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "os.path.isdir", "range", "range", "range", "range", "torch.ones().to", "torch.ones().to", "torch.ones().to", "Net.load_state_dict", "os.path.exists", "temp_init.data.cpu().numpy", "range", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "range", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "os.makedirs", "len", "proposal_lr.append", "len", "sigma_list.append", "len", "temperature.append", "len", "lasso_lambda.append", "os.path.exists", "time.sleep", "torch.load", "torch.load", "torch.load", "open", "pickle.load", "open.close", "range", "numpy.zeros", "torch.no_grad", "torch.no_grad", "torch.no_grad", "Net.", "nn.CrossEntropyLoss.", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "hidden_list.append", "momentum_list.append", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "hidden_list.__len__", "reversed", "torch.no_grad", "torch.no_grad", "torch.no_grad", "print", "torch.clone().cpu().detach", "torch.clone().cpu().detach", "torch.clone().cpu().detach", "thundersvm.SVR", "pickle.load.fit", "open", "pickle.dump", "open.close", "range", "torch.save", "torch.save", "torch.save", "str", "torch.ones", "torch.ones", "torch.ones", "str", "print", "open", "pickle.load", "open.close", "svr_list.append", "torch.no_grad", "torch.no_grad", "torch.no_grad", "print", "range", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "temp_init.data.cpu", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "hidden_list.append", "momentum_list.append", "len", "hidden_list_debug.append", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "hidden_likelihood.backward", "x_train.to.cpu", "Net.state_dict", "os.path.isdir", "str", "os.path.exists", "time.sleep", "svr_list[].predict", "os.path.exists", "open", "pickle.dump", "open.close", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.clone", "torch.clone", "torch.clone", "hidden_list[].grad.zero_", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.clone().cpu", "torch.clone().cpu", "torch.clone().cpu", "str", "sklearn.linear_model.Ridge().fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "y_test.to.max", "str", "str", "str", "x_train.to.cpu", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.tanh", "torch.tanh", "torch.tanh", "torch.FloatTensor().to().normal_().mul", "torch.FloatTensor().to().normal_().mul", "torch.FloatTensor().to().normal_().mul", "sklearn.linear_model.Ridge().fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "sklearn.linear_model.LogisticRegression().fit", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "hidden_list[].cpu().detach", "str", "nn.CrossEntropyLoss.", "nn.MSELoss.", "nn.MSELoss.", "numpy.sqrt", "torch.clone", "torch.clone", "torch.clone", "str", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "y_train.to.cpu", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "y_train.to.cpu", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "sklearn.linear_model.Ridge", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "str", "prediction.eq", "torch.FloatTensor().to().normal_", "torch.FloatTensor().to().normal_", "torch.FloatTensor().to().normal_", "sklearn.linear_model.Ridge", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "sklearn.linear_model.LogisticRegression", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "hidden_list[].cpu", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.where", "torch.where", "torch.where", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "numpy.vstack", "numpy.array"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.process_data.preprocess_data"], ["", "def", "main", "(", ")", ":", "\n", "    ", "import", "pickle", "\n", "seed", "=", "args", ".", "seed", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "data_name", "=", "args", ".", "data_name", "\n", "cross_validate_index", "=", "args", ".", "cross_validate", "\n", "\n", "num_hidden", "=", "args", ".", "layer", "\n", "hidden_dim", "=", "args", ".", "unit", "\n", "\n", "regression_flag", "=", "args", ".", "regression_flag", "\n", "num_epochs", "=", "args", ".", "nepoch", "\n", "\n", "# data_name = 'CoverType'", "\n", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "=", "preprocess_data", "(", "data_name", ",", "cross_validate_index", ",", "seed", "=", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "\n", "ntrain", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "ntest", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "dim", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "x_train", "=", "x_train", ".", "to", "(", "device", ")", "\n", "y_train", "=", "y_train", ".", "to", "(", "device", ")", "\n", "\n", "x_test", "=", "x_test", ".", "to", "(", "device", ")", "\n", "y_test", "=", "y_test", ".", "to", "(", "device", ")", "\n", "\n", "\n", "sse", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", "\n", "if", "regression_flag", ":", "\n", "        ", "output_dim", "=", "1", "\n", "loss_func", "=", "nn", ".", "MSELoss", "(", ")", "\n", "loss_func_sum", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", "\n", "\n", "", "else", ":", "\n", "        ", "output_dim", "=", "int", "(", "(", "y_test", ".", "max", "(", ")", "+", "1", ")", ".", "item", "(", ")", ")", "\n", "loss_func", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "loss_func_sum", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'sum'", ")", "\n", "\n", "\n", "", "net", "=", "Net", "(", "num_hidden", ",", "hidden_dim", ",", "output_dim", ")", "\n", "net", ".", "to", "(", "device", ")", "\n", "\n", "PATH", "=", "args", ".", "base_path", "+", "data_name", "+", "'/'", "+", "str", "(", "cross_validate_index", ")", "+", "'/'", "+", "args", ".", "model_path", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "PATH", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Python >2.5", "\n", "            ", "if", "exc", ".", "errno", "==", "errno", ".", "EEXIST", "and", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "\n", "\n", "", "", "", "proposal_lr", "=", "args", ".", "lr", "\n", "sigma_list", "=", "args", ".", "sigma", "\n", "temperature", "=", "args", ".", "temperature", "\n", "lasso_lambda", "=", "args", ".", "lasso", "\n", "\n", "if", "len", "(", "proposal_lr", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_proposal_lr", "=", "proposal_lr", "[", "0", "]", "\n", "proposal_lr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "proposal_lr", ".", "append", "(", "temp_proposal_lr", ")", "\n", "\n", "", "", "if", "len", "(", "sigma_list", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_sigma_list", "=", "sigma_list", "[", "0", "]", "\n", "sigma_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "sigma_list", ".", "append", "(", "temp_sigma_list", ")", "\n", "\n", "", "", "if", "len", "(", "temperature", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_temperature", "=", "temperature", "[", "0", "]", "\n", "temperature", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "temperature", ".", "append", "(", "temp_temperature", ")", "\n", "\n", "", "", "if", "len", "(", "lasso_lambda", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_lasso_lambda", "=", "lasso_lambda", "[", "0", "]", "\n", "lasso_lambda", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "lasso_lambda", ".", "append", "(", "temp_lasso_lambda", ")", "\n", "\n", "", "", "C", "=", "args", ".", "C", "\n", "\n", "different_C", "=", "torch", ".", "ones", "(", "hidden_dim", "[", "0", "]", ")", ".", "to", "(", "device", ")", "*", "C", "\n", "\n", "# for i in range(hidden_dim[0]):", "\n", "#     if i >= 0 and i < 30:", "\n", "#         C = 10", "\n", "#         different_C[i] = C", "\n", "#     if i >= 30 and i < 40:", "\n", "#         C = 10", "\n", "#         different_C[i] = C", "\n", "#     if i >= 40 and i < 45:", "\n", "#         C = 10", "\n", "#         different_C[i] = C", "\n", "#     if i >= 45 and i < 50:", "\n", "#         C = 10", "\n", "#         different_C[i] = C", "\n", "\n", "epsilon", "=", "args", ".", "epsilon", "\n", "\n", "temp_init", "=", "nn", ".", "Linear", "(", "dim", ",", "hidden_dim", "[", "0", "]", ")", "\n", "temp_init", ".", "to", "(", "device", ")", "\n", "svr_output_init", "=", "temp_init", "(", "x_train", ")", "\n", "\n", "svr_list", "=", "[", "]", "\n", "kernel", "=", "args", ".", "kernel", "\n", "\n", "load_epoch", "=", "args", ".", "load_epoch", "\n", "if", "load_epoch", ">=", "0", ":", "\n", "        ", "load_PATH", "=", "args", ".", "base_path", "+", "data_name", "+", "'/'", "+", "str", "(", "cross_validate_index", ")", "+", "'/'", "+", "args", ".", "load_model_path", "\n", "\n", "while", "not", "os", ".", "path", ".", "exists", "(", "load_PATH", "+", "'model'", "+", "str", "(", "load_epoch", ")", "+", "'.pt'", ")", ":", "\n", "            ", "time", ".", "sleep", "(", "60", ")", "\n", "", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_PATH", "+", "'model'", "+", "str", "(", "load_epoch", ")", "+", "'.pt'", ")", ")", "\n", "\n", "svr_out_train_path", "=", "load_PATH", "+", "'svr_out_train_'", "+", "str", "(", "load_epoch", ")", "+", "'.pt'", "\n", "if", "os", ".", "path", ".", "exists", "(", "svr_out_train_path", ")", ":", "\n", "            ", "filename", "=", "svr_out_train_path", "\n", "f", "=", "open", "(", "filename", ",", "'rb'", ")", "\n", "svr_out_train", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                ", "print", "(", "'load model:'", ",", "i", ")", "\n", "filename", "=", "load_PATH", "+", "'model_svr'", "+", "str", "(", "load_epoch", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'.pt'", "\n", "while", "not", "os", ".", "path", ".", "exists", "(", "filename", ")", ":", "\n", "                    ", "time", ".", "sleep", "(", "60", ")", "\n", "", "f", "=", "open", "(", "filename", ",", "'rb'", ")", "\n", "temp", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "svr_list", ".", "append", "(", "temp", ")", "\n", "", "svr_out_train", "=", "np", ".", "zeros", "(", "[", "ntrain", ",", "hidden_dim", "[", "0", "]", "]", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "print", "(", "'epoch: '", ",", "load_epoch", ")", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                    ", "svr_out_train", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_train", ".", "cpu", "(", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "svr_out_train_path", ")", ":", "\n", "                    ", "filename", "=", "svr_out_train_path", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "svr_out_train", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "train_accuracy", "=", "prediction", ".", "eq", "(", "y_train", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntrain", "\n", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ",", "'train accuracy: '", ",", "train_accuracy", ")", "\n", "\n", "", "", "else", ":", "\n", "        ", "svr_out_train", "=", "svr_output_init", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "\n", "", "for", "epoch", "in", "range", "(", "load_epoch", "+", "1", ",", "load_epoch", "+", "2", ")", ":", "\n", "\n", "        ", "hidden_list", "=", "[", "]", "\n", "momentum_list", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "hidden_list", ".", "append", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "momentum_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "hidden_list", "[", "-", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "                ", "hidden_list", ".", "append", "(", "net", ".", "fc_list", "[", "i", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "-", "1", "]", ")", ")", ")", "\n", "momentum_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "hidden_list", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "hidden_list_debug", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "hidden_list", ")", ")", ":", "\n", "                ", "hidden_list_debug", ".", "append", "(", "torch", ".", "clone", "(", "hidden_list", "[", "i", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "hidden_list", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "hidden_list", "[", "i", "]", ".", "requires_grad", "=", "True", "\n", "\n", "", "MH_step", "=", "args", ".", "MH_step", "\n", "alpha", "=", "args", ".", "alpha", "\n", "\n", "forward_hidden", "=", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", "\n", "\n", "for", "repeat", "in", "range", "(", "MH_step", ")", ":", "\n", "            ", "for", "layer_index", "in", "reversed", "(", "range", "(", "num_hidden", ")", ")", ":", "\n", "                ", "if", "hidden_list", "[", "layer_index", "]", ".", "grad", "is", "not", "None", ":", "\n", "                    ", "hidden_list", "[", "layer_index", "]", ".", "grad", ".", "zero_", "(", ")", "\n", "\n", "", "if", "layer_index", "==", "num_hidden", "-", "1", ":", "\n", "                    ", "hidden_likelihood", "=", "-", "loss_func_sum", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ")", ",", "\n", "y_train", ")", "/", "sigma_list", "[", "layer_index", "]", "\n", "", "else", ":", "\n", "                    ", "hidden_likelihood", "=", "-", "sse", "(", "net", ".", "fc_list", "[", "layer_index", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ")", ",", "\n", "hidden_list", "[", "layer_index", "+", "1", "]", ")", "/", "sigma_list", "[", "layer_index", "]", "\n", "", "if", "layer_index", "==", "0", ":", "\n", "                    ", "hidden_likelihood", "=", "hidden_likelihood", "-", "(", "different_C", "*", "torch", ".", "where", "(", "\n", "(", "hidden_list", "[", "layer_index", "]", "-", "forward_hidden", ")", ".", "abs", "(", ")", "-", "epsilon", ">", "0", ",", "\n", "(", "hidden_list", "[", "layer_index", "]", "-", "forward_hidden", ")", ".", "abs", "(", ")", "-", "epsilon", ",", "\n", "torch", ".", "zeros_like", "(", "hidden_list", "[", "0", "]", ")", ")", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "                    ", "hidden_likelihood", "=", "hidden_likelihood", "-", "sse", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "-", "1", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "-", "1", "]", ")", ")", ",", "\n", "hidden_list", "[", "layer_index", "]", ")", "/", "sigma_list", "[", "layer_index", "-", "1", "]", "\n", "\n", "", "hidden_likelihood", ".", "backward", "(", ")", "\n", "step_proposal_lr", "=", "proposal_lr", "[", "layer_index", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "momentum_list", "[", "layer_index", "]", "=", "(", "1", "-", "alpha", ")", "*", "momentum_list", "[", "layer_index", "]", "+", "step_proposal_lr", "/", "2", "*", "hidden_list", "[", "\n", "layer_index", "]", ".", "grad", "+", "torch", ".", "FloatTensor", "(", "\n", "hidden_list", "[", "layer_index", "]", ".", "shape", ")", ".", "to", "(", "device", ")", ".", "normal_", "(", ")", ".", "mul", "(", "\n", "np", ".", "sqrt", "(", "alpha", "*", "step_proposal_lr", "*", "temperature", "[", "layer_index", "]", ")", ")", "\n", "hidden_list", "[", "layer_index", "]", ".", "data", "+=", "momentum_list", "[", "layer_index", "]", "\n", "\n", "", "", "", "a", "=", "1", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "i", "=", "args", ".", "solve_index", "\n", "if", "i", ">=", "0", "and", "i", "<", "30", ":", "\n", "                ", "p_gamma", "=", "0.5", "\n", "", "if", "i", ">=", "30", "and", "i", "<", "40", ":", "\n", "                ", "p_gamma", "=", "1", "\n", "", "if", "i", ">=", "40", "and", "i", "<", "45", ":", "\n", "                ", "p_gamma", "=", "2", "\n", "", "if", "i", ">=", "45", "and", "i", "<", "50", ":", "\n", "                ", "p_gamma", "=", "5", "\n", "\n", "", "print", "(", "'pgamma = '", ",", "p_gamma", ")", "\n", "temp_output", "=", "torch", ".", "clone", "(", "hidden_list", "[", "0", "]", "[", ":", ",", "i", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "temp", "=", "SVR", "(", "C", "=", "C", ",", "epsilon", "=", "epsilon", ",", "kernel", "=", "kernel", ",", "gamma", "=", "1", "/", "p_gamma", ")", "\n", "temp", ".", "fit", "(", "x_train", ".", "cpu", "(", ")", ",", "temp_output", ")", "\n", "filename", "=", "PATH", "+", "'model_svr'", "+", "str", "(", "epoch", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'.pt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "temp", ",", "f", ",", "protocol", "=", "4", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "if", "args", ".", "solve_index", "==", "0", ":", "\n", "            ", "for", "layer_index", "in", "range", "(", "num_hidden", ")", ":", "\n", "                ", "if", "layer_index", "==", "num_hidden", "-", "1", ":", "\n", "                    ", "if", "regression_flag", ":", "\n", "                        ", "clf", "=", "Ridge", "(", "alpha", "=", "lasso_lambda", "[", "layer_index", "]", ",", "max_iter", "=", "-", "1", ")", ".", "fit", "(", "\n", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "y_train", ".", "cpu", "(", ")", ")", "\n", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                        ", "clf", "=", "LogisticRegression", "(", "penalty", "=", "'l2'", ",", "C", "=", "1", "/", "lasso_lambda", "[", "layer_index", "]", ",", "solver", "=", "'saga'", ",", "\n", "max_iter", "=", "10000", ",", "multi_class", "=", "'multinomial'", ",", "n_jobs", "=", "5", ")", ".", "fit", "(", "\n", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "y_train", ".", "cpu", "(", ")", ")", "\n", "\n", "if", "output_dim", "==", "2", ":", "\n", "                            ", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "\n", "np", ".", "vstack", "(", "[", "-", "clf", ".", "coef_", ",", "clf", ".", "coef_", "]", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "\n", "np", ".", "array", "(", "[", "-", "clf", ".", "intercept_", ",", "clf", ".", "intercept_", "]", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                            ", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "", "", "else", ":", "\n", "                    ", "clf", "=", "Ridge", "(", "alpha", "=", "lasso_lambda", "[", "layer_index", "]", ",", "max_iter", "=", "-", "1", ")", ".", "fit", "(", "\n", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "\n", "hidden_list", "[", "layer_index", "+", "1", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ")", "\n", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "PATH", "+", "'model'", "+", "str", "(", "epoch", ")", "+", "'.pt'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet.Net.__init__": [[55, 64], ["torch.Module.__init__", "range", "kstonet.Net.fc_list.append", "kstonet.Net.add_module", "kstonet.Net.fc_list.append", "kstonet.Net.add_module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "str", "str"], "methods", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_hidden", ",", "hidden_dim", ",", "output_dim", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_hidden", "=", "num_hidden", "\n", "self", ".", "fc_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "            ", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "i", "]", ",", "hidden_dim", "[", "i", "+", "1", "]", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "i", "+", "2", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "-", "1", "]", ",", "output_dim", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "num_hidden", "+", "1", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet.Net.forward": [[66, 72], ["torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "range", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "torch", ".", "tanh", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_hidden", "-", "1", ")", ":", "\n", "            ", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc_list", "[", "i", "]", "(", "x", ")", ")", "\n", "", "x", "=", "self", ".", "fc_list", "[", "-", "1", "]", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet.main": [[74, 349], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "process_data.preprocess_data", "torch.device", "torch.device", "torch.device", "torch.MSELoss", "numpy.zeros", "kstonet.Net", "Net.to", "torch.Linear", "nn.Linear.to", "nn.Linear.", "numpy.zeros", "temp_init.data.cpu().numpy", "range", "torch.MSELoss", "torch.MSELoss", "numpy.zeros", "numpy.zeros", "int", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "os.path.isdir", "range", "range", "range", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "time.process_time", "range", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "range", "range", "time.process_time", "torch.save", "torch.save", "torch.save", "range", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "y_train.mean", "y_train.std", "os.makedirs", "len", "proposal_lr.append", "len", "sigma_list.append", "len", "temperature.append", "len", "lasso_lambda.append", "thundersvm.SVR", "svr_list.append", "temp_init.data.cpu", "torch.no_grad", "torch.no_grad", "torch.no_grad", "hidden_list.append", "momentum_list.append", "range", "hidden_list.__len__", "reversed", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "Net.state_dict", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "str", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "hidden_list.append", "momentum_list.append", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "hidden_likelihood.backward", "svr_list[].fit", "sklearn.linear_model.Lasso().fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "os.path.isdir", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "hidden_list[].grad.zero_", "torch.no_grad", "torch.no_grad", "torch.no_grad", "x_train.cpu", "[].cpu().detach", "sklearn.linear_model.Lasso().fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "sklearn.linear_model.LogisticRegression().fit", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "hidden_list[].cpu().detach", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "str", "str", "str", "y_test.max", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.tanh", "torch.tanh", "torch.tanh", "torch.FloatTensor().to().normal_().mul", "torch.FloatTensor().to().normal_().mul", "torch.FloatTensor().to().normal_().mul", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "y_train.cpu", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "y_train.cpu", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "sklearn.linear_model.Lasso", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "x_train.cpu", "x_test.cpu", "x_train.cpu", "x_test.cpu", "nn.CrossEntropyLoss.", "nn.MSELoss.", "torch.where().sum", "torch.where().sum", "torch.where().sum", "nn.MSELoss.", "numpy.sqrt", "[].cpu", "sklearn.linear_model.Lasso", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "sklearn.linear_model.LogisticRegression", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "hidden_list[].cpu", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "str", "torch.FloatTensor().to().normal_", "torch.FloatTensor().to().normal_", "torch.FloatTensor().to().normal_", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.where", "torch.where", "torch.where", "torch.tanh", "torch.tanh", "torch.tanh", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.tanh", "torch.tanh", "torch.tanh", "prediction.eq", "prediction.eq", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.tanh", "torch.tanh", "torch.tanh", "numpy.array", "torch.tanh", "torch.tanh", "torch.tanh", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "numpy.vstack", "numpy.array", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.process_data.preprocess_data"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "import", "pickle", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "data_name", "=", "args", ".", "data_name", "\n", "cross_validate_index", "=", "args", ".", "cross_validate", "\n", "\n", "num_hidden", "=", "args", ".", "layer", "\n", "hidden_dim", "=", "args", ".", "unit", "\n", "\n", "regression_flag", "=", "args", ".", "regression_flag", "\n", "normalize_y_flag", "=", "args", ".", "normalize_y_flag", "\n", "\n", "num_epochs", "=", "args", ".", "nepoch", "\n", "\n", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "=", "preprocess_data", "(", "data_name", ",", "cross_validate_index", ",", "seed", "=", "args", ".", "seed", ")", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "\n", "ntrain", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "ntest", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "dim", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "\n", "\n", "sse", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", "\n", "if", "regression_flag", ":", "\n", "        ", "output_dim", "=", "1", "\n", "loss_func", "=", "nn", ".", "MSELoss", "(", ")", "\n", "loss_func_sum", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "if", "normalize_y_flag", ":", "\n", "            ", "y_train_mean", "=", "y_train", ".", "mean", "(", ")", "\n", "y_train_std", "=", "y_train", ".", "std", "(", ")", "\n", "y_train", "=", "(", "y_train", "-", "y_train_mean", ")", "/", "y_train_std", "\n", "", "", "else", ":", "\n", "        ", "output_dim", "=", "int", "(", "(", "y_test", ".", "max", "(", ")", "+", "1", ")", ".", "item", "(", ")", ")", "\n", "loss_func", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "loss_func_sum", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'sum'", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "train_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "", "time_used_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "\n", "net", "=", "Net", "(", "num_hidden", ",", "hidden_dim", ",", "output_dim", ")", "\n", "net", ".", "to", "(", "device", ")", "\n", "\n", "PATH", "=", "args", ".", "base_path", "+", "data_name", "+", "'/'", "+", "str", "(", "cross_validate_index", ")", "+", "'/'", "+", "args", ".", "model_path", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "PATH", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Python >2.5", "\n", "            ", "if", "exc", ".", "errno", "==", "errno", ".", "EEXIST", "and", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "\n", "\n", "", "", "", "proposal_lr", "=", "args", ".", "lr", "\n", "sigma_list", "=", "args", ".", "sigma", "\n", "temperature", "=", "args", ".", "temperature", "\n", "lasso_lambda", "=", "args", ".", "lasso", "\n", "\n", "if", "len", "(", "proposal_lr", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_proposal_lr", "=", "proposal_lr", "[", "0", "]", "\n", "proposal_lr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "proposal_lr", ".", "append", "(", "temp_proposal_lr", ")", "\n", "\n", "", "", "if", "len", "(", "sigma_list", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_sigma_list", "=", "sigma_list", "[", "0", "]", "\n", "sigma_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "sigma_list", ".", "append", "(", "temp_sigma_list", ")", "\n", "\n", "", "", "if", "len", "(", "temperature", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_temperature", "=", "temperature", "[", "0", "]", "\n", "temperature", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "temperature", ".", "append", "(", "temp_temperature", ")", "\n", "\n", "", "", "if", "len", "(", "lasso_lambda", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_lasso_lambda", "=", "lasso_lambda", "[", "0", "]", "\n", "lasso_lambda", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "lasso_lambda", ".", "append", "(", "temp_lasso_lambda", ")", "\n", "\n", "", "", "C", "=", "args", ".", "C", "\n", "epsilon", "=", "args", ".", "epsilon", "\n", "\n", "temp_init", "=", "nn", ".", "Linear", "(", "dim", ",", "hidden_dim", "[", "0", "]", ")", "\n", "temp_init", ".", "to", "(", "device", ")", "\n", "svr_output_init", "=", "temp_init", "(", "x_train", ")", "\n", "\n", "if", "args", ".", "p_gamma", "is", "None", ":", "\n", "        ", "p_gamma", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "p_gamma", "=", "args", ".", "p_gamma", "\n", "\n", "\n", "", "kernel", "=", "args", ".", "kernel", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "svr_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "            ", "temp", "=", "SVR", "(", "C", "=", "C", ",", "epsilon", "=", "epsilon", ",", "gamma", "=", "1.0", "/", "p_gamma", ",", "kernel", "=", "kernel", ")", "\n", "svr_list", ".", "append", "(", "temp", ")", "\n", "\n", "", "", "svr_out_test", "=", "np", ".", "zeros", "(", "[", "ntest", ",", "hidden_dim", "[", "0", "]", "]", ")", "\n", "\n", "svr_out_train", "=", "svr_output_init", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "\n", "        ", "start_time", "=", "time", ".", "process_time", "(", ")", "\n", "\n", "hidden_list", "=", "[", "]", "\n", "momentum_list", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "hidden_list", ".", "append", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "momentum_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "hidden_list", "[", "-", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "                ", "hidden_list", ".", "append", "(", "net", ".", "fc_list", "[", "i", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "-", "1", "]", ")", ")", ")", "\n", "momentum_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "hidden_list", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "hidden_list", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "hidden_list", "[", "i", "]", ".", "requires_grad", "=", "True", "\n", "\n", "", "MH_step", "=", "args", ".", "MH_step", "\n", "alpha", "=", "args", ".", "alpha", "\n", "\n", "forward_hidden", "=", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", "\n", "\n", "for", "repeat", "in", "range", "(", "MH_step", ")", ":", "\n", "            ", "for", "layer_index", "in", "reversed", "(", "range", "(", "num_hidden", ")", ")", ":", "\n", "                ", "if", "hidden_list", "[", "layer_index", "]", ".", "grad", "is", "not", "None", ":", "\n", "                    ", "hidden_list", "[", "layer_index", "]", ".", "grad", ".", "zero_", "(", ")", "\n", "\n", "", "if", "layer_index", "==", "num_hidden", "-", "1", ":", "\n", "                    ", "hidden_likelihood", "=", "-", "loss_func_sum", "(", "net", ".", "fc_list", "[", "layer_index", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ")", ",", "y_train", ")", "/", "sigma_list", "[", "layer_index", "]", "\n", "", "else", ":", "\n", "                    ", "hidden_likelihood", "=", "-", "sse", "(", "net", ".", "fc_list", "[", "layer_index", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ")", ",", "hidden_list", "[", "layer_index", "+", "1", "]", ")", "/", "sigma_list", "[", "layer_index", "]", "\n", "", "if", "layer_index", "==", "0", ":", "\n", "                    ", "hidden_likelihood", "=", "hidden_likelihood", "-", "C", "*", "torch", ".", "where", "(", "(", "hidden_list", "[", "layer_index", "]", "-", "forward_hidden", ")", ".", "abs", "(", ")", "-", "epsilon", ">", "0", ",", "(", "hidden_list", "[", "layer_index", "]", "-", "forward_hidden", ")", ".", "abs", "(", ")", "-", "epsilon", ",", "torch", ".", "zeros_like", "(", "hidden_list", "[", "0", "]", ")", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "                    ", "hidden_likelihood", "=", "hidden_likelihood", "-", "sse", "(", "net", ".", "fc_list", "[", "layer_index", "-", "1", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "-", "1", "]", ")", ")", ",", "hidden_list", "[", "layer_index", "]", ")", "/", "sigma_list", "[", "layer_index", "-", "1", "]", "\n", "", "hidden_likelihood", ".", "backward", "(", ")", "\n", "step_proposal_lr", "=", "proposal_lr", "[", "layer_index", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "momentum_list", "[", "layer_index", "]", "=", "(", "1", "-", "alpha", ")", "*", "momentum_list", "[", "layer_index", "]", "+", "step_proposal_lr", "/", "2", "*", "hidden_list", "[", "\n", "layer_index", "]", ".", "grad", "+", "torch", ".", "FloatTensor", "(", "\n", "hidden_list", "[", "layer_index", "]", ".", "shape", ")", ".", "to", "(", "device", ")", ".", "normal_", "(", ")", ".", "mul", "(", "\n", "np", ".", "sqrt", "(", "alpha", "*", "step_proposal_lr", "*", "temperature", "[", "layer_index", "]", ")", ")", "\n", "hidden_list", "[", "layer_index", "]", ".", "data", "+=", "momentum_list", "[", "layer_index", "]", "\n", "\n", "\n", "", "", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                ", "svr_list", "[", "i", "]", ".", "fit", "(", "x_train", ".", "cpu", "(", ")", ",", "hidden_list", "[", "0", "]", "[", ":", ",", "i", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ")", "\n", "\n", "", "", "for", "layer_index", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "if", "layer_index", "==", "num_hidden", "-", "1", ":", "\n", "                ", "if", "regression_flag", ":", "\n", "                    ", "clf", "=", "Lasso", "(", "alpha", "=", "lasso_lambda", "[", "layer_index", "]", ",", "max_iter", "=", "-", "1", ")", ".", "fit", "(", "\n", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "y_train", ".", "cpu", "(", ")", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "np", ".", "array", "(", "clf", ".", "intercept_", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                    ", "clf", "=", "LogisticRegression", "(", "penalty", "=", "'l1'", ",", "C", "=", "1", "/", "lasso_lambda", "[", "layer_index", "]", ",", "solver", "=", "'saga'", ",", "max_iter", "=", "10000", ",", "multi_class", "=", "'multinomial'", ",", "n_jobs", "=", "5", ")", ".", "fit", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "y_train", ".", "cpu", "(", ")", ")", "\n", "if", "output_dim", "==", "2", ":", "\n", "                        ", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "np", ".", "vstack", "(", "[", "-", "clf", ".", "coef_", ",", "clf", ".", "coef_", "]", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "np", ".", "array", "(", "[", "-", "clf", ".", "intercept_", ",", "clf", ".", "intercept_", "]", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                        ", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "", "", "else", ":", "\n", "\n", "                ", "clf", "=", "Lasso", "(", "alpha", "=", "lasso_lambda", "[", "layer_index", "]", ",", "max_iter", "=", "-", "1", ")", ".", "fit", "(", "\n", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "hidden_list", "[", "layer_index", "+", "1", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "reshape", "(", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "", "end_time", "=", "time", ".", "process_time", "(", ")", "\n", "time_used_path", "[", "epoch", "]", "=", "end_time", "-", "start_time", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "regression_flag", ":", "\n", "                ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                    ", "svr_out_train", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_train", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "\n", "if", "normalize_y_flag", ":", "\n", "                    ", "train_loss", "=", "train_loss", "*", "y_train_std", "*", "y_train_std", "\n", "", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                    ", "svr_out_test", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_test", ".", "cpu", "(", ")", ")", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_test", ")", ".", "to", "(", "device", ")", ")", "\n", "\n", "if", "normalize_y_flag", ":", "\n", "                    ", "output", "=", "output", "*", "y_train_std", "+", "y_train_mean", "\n", "", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ")", "\n", "\n", "", "else", ":", "\n", "                ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                    ", "svr_out_train", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_train", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "train_accuracy", "=", "prediction", ".", "eq", "(", "y_train", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntrain", "\n", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "train_accuracy_path", "[", "epoch", "]", "=", "train_accuracy", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ",", "'train accuracy: '", ",", "train_accuracy", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                    ", "svr_out_test", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_test", ".", "cpu", "(", ")", ")", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_test", ")", ".", "to", "(", "device", ")", ")", "\n", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "test_accuracy", "=", "prediction", ".", "eq", "(", "y_test", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntest", "\n", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "test_accuracy_path", "[", "epoch", "]", "=", "test_accuracy", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ",", "'test accuracy: '", ",", "test_accuracy", ")", "\n", "\n", "\n", "\n", "", "", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "PATH", "+", "'model'", "+", "str", "(", "epoch", ")", "+", "'.pt'", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "            ", "filename", "=", "PATH", "+", "'model_svr'", "+", "str", "(", "epoch", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'.pt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "svr_list", "[", "i", "]", ",", "f", ",", "protocol", "=", "4", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "if", "args", ".", "confidence_interval_flag", ":", "\n", "            ", "filename", "=", "PATH", "+", "'hidden_state'", "+", "str", "(", "epoch", ")", "+", "'.pt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "hidden_list", ",", "f", ",", "protocol", "=", "4", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "time_used_path", "[", "epoch", "]", "=", "end_time", "-", "start_time", "\n", "\n", "if", "regression_flag", ":", "\n", "            ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "[", "train_loss_path", ",", "test_loss_path", ",", "time_used_path", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "            ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "[", "train_loss_path", ",", "test_loss_path", ",", "train_accuracy_path", ",", "test_accuracy_path", ",", "time_used_path", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "if", "args", ".", "confidence_interval_flag", ":", "\n", "            ", "filename", "=", "PATH", "+", "'data.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "\n", "[", "x_train", ",", "x_test", ",", "y_train", ",", "y_test", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn_cross_validate.Net.__init__": [[41, 53], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "range", "knn_cross_validate.Net.fc_list.append", "knn_cross_validate.Net.add_module", "knn_cross_validate.Net.fc_list.append", "knn_cross_validate.Net.add_module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "str", "str"], "methods", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_hidden", ",", "hidden_dim", ",", "input_dim", ",", "output_dim", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_hidden", "=", "num_hidden", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "input_dim", ",", "hidden_dim", "[", "0", "]", ")", "\n", "self", ".", "fc_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "            ", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "i", "]", ",", "hidden_dim", "[", "i", "+", "1", "]", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "i", "+", "2", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "-", "1", "]", ",", "output_dim", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "num_hidden", "+", "1", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn_cross_validate.Net.forward": [[54, 60], ["torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "range", "knn_cross_validate.Net.fc", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc", "(", "x", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_hidden", "-", "1", ")", ":", "\n", "            ", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc_list", "[", "i", "]", "(", "x", ")", ")", "\n", "", "x", "=", "self", ".", "fc_list", "[", "-", "1", "]", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn_cross_validate.compute_distance": [[63, 88], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.abs", "X.size", "Y.size", "torch.sum.expand", "torch.sum.transpose().expand", "torch.sum.transpose"], "function", ["None"], ["", "", "def", "compute_distance", "(", "X", ",", "Y", ")", ":", "\n", "    ", "r\"\"\"Compute the matrix of all squared pairwise distances.\n\n    Arguments\n    ---------\n    X : torch.Tensor or Variable\n        The first sample, should be of shape ``(n_1, d)``.\n    Y : torch.Tensor or Variable\n        The second sample, should be of shape ``(n_2, d)``.\n\n    Returns\n    -------\n    torch.Tensor or Variable\n        Matrix of shape (n_1, n_2). The [i, j]-th entry is equal to\n        ``|| X[i, :] - Y[j, :] ||_2^2``.\"\"\"", "\n", "n_1", ",", "n_2", "=", "X", ".", "size", "(", "0", ")", ",", "Y", ".", "size", "(", "0", ")", "\n", "\n", "# Compute (a - b)^2 = a^2 + b^2 -2ab", "\n", "norms_1", "=", "torch", ".", "sum", "(", "X", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "norms_2", "=", "torch", ".", "sum", "(", "Y", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "norms", "=", "(", "norms_1", ".", "expand", "(", "n_1", ",", "n_2", ")", "+", "norms_2", ".", "transpose", "(", "0", ",", "1", ")", ".", "expand", "(", "n_1", ",", "n_2", ")", ")", "\n", "distances_squared", "=", "norms", "-", "2", "*", "X", "@", "Y", ".", "T", "\n", "\n", "# Take the absolute value due to numerical imprecision", "\n", "return", "torch", ".", "abs", "(", "distances_squared", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn_cross_validate.Gaussian_kernel": [[89, 91], ["None"], "function", ["None"], ["", "def", "Gaussian_kernel", "(", "x", ",", "y", ",", "sigma", "=", "1", ")", ":", "\n", "    ", "return", "(", "x", "-", "y", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", ")", ".", "mul", "(", "-", "(", "0.5", "/", "sigma", ")", ")", ".", "exp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn_cross_validate.Gaussian_kernel_data": [[92, 108], ["knn_cross_validate.compute_distance", "torch.exp", "torch.exp", "torch.exp", "knn_cross_validate.compute_distance", "torch.exp", "torch.exp", "torch.exp", "knn_cross_validate.compute_distance", "torch.exp", "torch.exp", "torch.exp"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance"], ["", "def", "Gaussian_kernel_data", "(", "x_train", ",", "x_val", "=", "None", ",", "x_test", "=", "None", ",", "sigma", "=", "1", ")", ":", "\n", "    ", "distances_train", "=", "compute_distance", "(", "x_train", ",", "x_train", ")", "\n", "kernel_train", "=", "torch", ".", "exp", "(", "-", "distances_train", "/", "(", "2", "*", "sigma", ")", ")", "\n", "\n", "if", "x_val", "is", "not", "None", ":", "\n", "        ", "distances_val", "=", "compute_distance", "(", "x_val", ",", "x_train", ")", "\n", "kernel_val", "=", "torch", ".", "exp", "(", "-", "distances_val", "/", "(", "2", "*", "sigma", ")", ")", "\n", "", "else", ":", "\n", "        ", "kernel_val", "=", "None", "\n", "\n", "", "if", "x_test", "is", "not", "None", ":", "\n", "        ", "distances_test", "=", "compute_distance", "(", "x_test", ",", "x_train", ")", "\n", "kernel_test", "=", "torch", ".", "exp", "(", "-", "distances_test", "/", "(", "2", "*", "sigma", ")", ")", "\n", "", "else", ":", "\n", "        ", "kernel_test", "=", "None", "\n", "", "return", "kernel_train", ",", "kernel_val", ",", "kernel_test", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn_cross_validate.main": [[110, 249], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "range", "range", "process_data.preprocess_data", "torch.device", "torch.device", "torch.device", "knn_cross_validate.Gaussian_kernel_data", "numpy.zeros", "knn_cross_validate.Net", "Net.to", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "numpy.arange", "range", "x_train.std", "x_test.std", "torch.MSELoss", "numpy.zeros", "numpy.zeros", "int", "torch.CrossEntropyLoss", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "os.path.isdir", "Net.parameters", "time.process_time", "numpy.random.shuffle", "range", "torch.save", "torch.save", "torch.save", "time.process_time", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "x_train.mean", "x_test.mean", "y_train.mean", "y_train.std", "os.makedirs", "torch.optim.SGD.zero_grad", "nn.CrossEntropyLoss.", "loss_func.backward", "Net.parameters", "torch.optim.SGD.step", "torch.no_grad", "torch.no_grad", "torch.no_grad", "Net.state_dict", "x_train_orig.var", "Net.", "para.abs().sum().mul", "print", "Net.", "nn.CrossEntropyLoss.", "print", "Net.", "nn.CrossEntropyLoss.", "print", "print", "Net.", "nn.CrossEntropyLoss.", "print", "Net.", "nn.CrossEntropyLoss.", "print", "str", "os.path.isdir", "net.data.max", "prediction.eq().sum().item", "net.data.max", "prediction.eq().sum().item", "str", "y_test.max", "para.abs().sum", "str", "prediction.eq().sum", "prediction.eq().sum", "para.abs", "prediction.eq", "prediction.eq"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.process_data.preprocess_data", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn.Gaussian_kernel_data"], ["", "def", "main", "(", ")", ":", "\n", "    ", "import", "pickle", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "data_name", "=", "args", ".", "data_name", "\n", "\n", "num_hidden", "=", "args", ".", "layer", "\n", "hidden_dim", "=", "args", ".", "unit", "\n", "\n", "regression_flag", "=", "args", ".", "regression_flag", "\n", "normalize_y_flag", "=", "args", ".", "normalize_y_flag", "\n", "\n", "num_epochs", "=", "args", ".", "nepoch", "\n", "\n", "for", "data_seed", "in", "range", "(", "args", ".", "n_repeat", ")", ":", "\n", "        ", "for", "cross_validate_index", "in", "range", "(", "10", ")", ":", "\n", "            ", "x_train_orig", ",", "y_train", ",", "x_test_orig", ",", "y_test", "=", "preprocess_data", "(", "data_name", ",", "cross_validate_index", ",", "seed", "=", "data_seed", ")", "\n", "dim", "=", "x_train_orig", ".", "shape", "[", "1", "]", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "x_train", ",", "x_val", ",", "x_test", "=", "Gaussian_kernel_data", "(", "x_train_orig", ",", "None", ",", "x_test_orig", ",", "\n", "sigma", "=", "0.5", "*", "dim", "*", "x_train_orig", ".", "var", "(", ")", ")", "\n", "\n", "ntrain", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "ntest", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "dim", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "\n", "x_train", "=", "(", "x_train", "-", "x_train", ".", "mean", "(", "0", ")", ")", "/", "x_train", ".", "std", "(", "0", ")", "\n", "x_test", "=", "(", "x_test", "-", "x_test", ".", "mean", "(", "0", ")", ")", "/", "x_test", ".", "std", "(", "0", ")", "\n", "\n", "if", "regression_flag", ":", "\n", "                ", "output_dim", "=", "1", "\n", "loss_func", "=", "nn", ".", "MSELoss", "(", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "if", "normalize_y_flag", ":", "\n", "                    ", "y_train_mean", "=", "y_train", ".", "mean", "(", ")", "\n", "y_train_std", "=", "y_train", ".", "std", "(", ")", "\n", "y_train", "=", "(", "y_train", "-", "y_train_mean", ")", "/", "y_train_std", "\n", "\n", "", "", "else", ":", "\n", "                ", "output_dim", "=", "int", "(", "(", "y_test", ".", "max", "(", ")", "+", "1", ")", ".", "item", "(", ")", ")", "\n", "loss_func", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "train_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "", "time_used_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "\n", "net", "=", "Net", "(", "num_hidden", ",", "hidden_dim", ",", "dim", ",", "output_dim", ")", "\n", "net", ".", "to", "(", "device", ")", "\n", "\n", "PATH", "=", "args", ".", "base_path", "+", "data_name", "+", "'/'", "+", "'data_split_'", "+", "str", "(", "data_seed", ")", "+", "'/'", "+", "str", "(", "\n", "cross_validate_index", ")", "+", "'/'", "+", "'knn/'", "+", "args", ".", "model_path", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "os", ".", "makedirs", "(", "PATH", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Python >2.5", "\n", "                    ", "if", "exc", ".", "errno", "==", "errno", ".", "EEXIST", "and", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "                        ", "pass", "\n", "", "else", ":", "\n", "                        ", "raise", "\n", "\n", "", "", "", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "net", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "index", "=", "np", ".", "arange", "(", "ntrain", ")", "\n", "subn", "=", "args", ".", "batch_train", "\n", "\n", "lasso_lambda", "=", "args", ".", "lasso", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "                ", "start_time", "=", "time", ".", "process_time", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "index", ")", "\n", "for", "iter", "in", "range", "(", "ntrain", "//", "subn", ")", ":", "\n", "                    ", "subsample", "=", "index", "[", "(", "iter", "*", "subn", ")", ":", "(", "(", "iter", "+", "1", ")", "*", "subn", ")", "]", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", "=", "loss_func", "(", "net", "(", "x_train", "[", "subsample", ",", "]", ")", ",", "y_train", "[", "subsample", ",", "]", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "para", "in", "net", ".", "parameters", "(", ")", ":", "\n", "                        ", "loss", "+=", "para", ".", "abs", "(", ")", ".", "sum", "(", ")", ".", "mul", "(", "lasso_lambda", ")", "\n", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "if", "regression_flag", ":", "\n", "                        ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "output", "=", "net", "(", "x_train", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "if", "normalize_y_flag", ":", "\n", "                            ", "train_loss", "=", "train_loss", "*", "y_train_std", "*", "y_train_std", "\n", "", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ")", "\n", "\n", "output", "=", "net", "(", "x_test", ")", "\n", "if", "normalize_y_flag", ":", "\n", "                            ", "output", "=", "output", "*", "y_train_std", "+", "y_train_mean", "\n", "", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ")", "\n", "\n", "", "else", ":", "\n", "                        ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "output", "=", "net", "(", "x_train", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "train_accuracy", "=", "prediction", ".", "eq", "(", "y_train", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntrain", "\n", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "train_accuracy_path", "[", "epoch", "]", "=", "train_accuracy", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ",", "'train accuracy: '", ",", "train_accuracy", ")", "\n", "\n", "output", "=", "net", "(", "x_test", ")", "\n", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "test_accuracy", "=", "prediction", ".", "eq", "(", "y_test", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntest", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "test_accuracy_path", "[", "epoch", "]", "=", "test_accuracy", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ",", "'test accuracy: '", ",", "test_accuracy", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "PATH", "+", "'model'", "+", "str", "(", "epoch", ")", "+", "'.pt'", ")", "\n", "\n", "end_time", "=", "time", ".", "process_time", "(", ")", "\n", "\n", "time_used_path", "[", "epoch", "]", "=", "end_time", "-", "start_time", "\n", "\n", "", "if", "regression_flag", ":", "\n", "                ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "[", "train_loss_path", ",", "test_loss_path", ",", "time_used_path", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "                ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "[", "train_loss_path", ",", "test_loss_path", ",", "train_accuracy_path", ",", "test_accuracy_path", ",", "time_used_path", "]", ",", "\n", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.process_data.compute_distance": [[12, 21], ["torch.sum", "torch.sum", "torch.abs", "X.size", "Y.size", "torch.sum.expand", "torch.sum.transpose().expand", "torch.sum.transpose"], "function", ["None"], ["def", "compute_distance", "(", "X", ",", "Y", ")", ":", "\n", "    ", "n_1", ",", "n_2", "=", "X", ".", "size", "(", "0", ")", ",", "Y", ".", "size", "(", "0", ")", "\n", "\n", "norms_1", "=", "torch", ".", "sum", "(", "X", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "norms_2", "=", "torch", ".", "sum", "(", "Y", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "norms", "=", "(", "norms_1", ".", "expand", "(", "n_1", ",", "n_2", ")", "+", "norms_2", ".", "transpose", "(", "0", ",", "1", ")", ".", "expand", "(", "n_1", ",", "n_2", ")", ")", "\n", "distances_squared", "=", "norms", "-", "2", "*", "X", "@", "Y", ".", "T", "\n", "\n", "return", "torch", ".", "abs", "(", "distances_squared", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.process_data.RBF_kernel": [[22, 26], ["process_data.compute_distance", "torch.exp"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance"], ["", "def", "RBF_kernel", "(", "x", ",", "y", ",", "gamma", ")", ":", "\n", "    ", "distance", "=", "compute_distance", "(", "x", ",", "y", ")", "\n", "kernel", "=", "torch", ".", "exp", "(", "-", "gamma", "*", "distance", ")", "\n", "return", "kernel", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.process_data.preprocess_data": [[28, 693], ["numpy.random.seed", "torch.manual_seed", "torch.device", "numpy.mat", "numpy.random.normal", "numpy.mat", "range", "numpy.mat", "process_data.RBF_kernel", "svr_input_train.numpy.numpy", "numpy.mat", "numpy.zeros", "range", "numpy.mat", "range", "process_data.RBF_kernel", "svr_input_test.numpy.numpy", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "numpy.matrix", "numpy.matrix", "range", "numpy.matrix", "numpy.matrix", "range", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.matrix", "numpy.matrix", "range", "numpy.tanh", "numpy.tanh", "numpy.matrix", "numpy.matrix", "range", "numpy.tanh", "numpy.tanh", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.cuda.is_available", "numpy.random.normal", "numpy.zeros", "range", "numpy.random.normal", "torch.FloatTensor", "torch.FloatTensor", "numpy.zeros", "sklearn.svm.SVR", "sklearn.svm.SVR.fit", "numpy.matmul", "numpy.random.normal", "numpy.zeros", "range", "torch.FloatTensor", "torch.FloatTensor", "numpy.matmul", "numpy.random.normal", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "range", "numpy.random.choice().reshape", "numpy.random.choice().reshape", "numpy.random.choice().reshape", "numpy.zeros", "numpy.zeros", "range", "numpy.random.normal", "numpy.zeros", "numpy.zeros", "range", "numpy.random.normal", "pandas.read_table", "numpy.mat", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "numpy.mean", "numpy.std", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "numpy.sqrt", "numpy.random.normal", "torch.FloatTensor().to.var", "numpy.matmul", "numpy.sqrt", "numpy.random.normal", "numpy.matmul", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "numpy.sqrt", "numpy.random.normal", "numpy.random.normal", "numpy.random.normal", "numpy.random.normal", "numpy.random.normal", "numpy.random.normal", "numpy.random.normal", "numpy.sqrt", "numpy.random.normal", "numpy.random.normal", "numpy.random.normal", "numpy.random.normal", "numpy.random.normal", "numpy.random.normal", "numpy.random.normal", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "print", "numpy.sqrt", "numpy.random.normal", "print", "numpy.sqrt", "numpy.random.normal", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "numpy.full", "numpy.full", "pandas.read_csv", "numpy.mat", "temp[].astype", "numpy.array().reshape", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.LongTensor().to", "torch.FloatTensor().to", "torch.LongTensor().to", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice", "numpy.sqrt", "numpy.sqrt", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "numpy.full", "numpy.full", "torchvision.Compose", "torchvision.Compose", "torchvision.MNIST", "torchvision.MNIST", "datasets.MNIST.data.type().div().sub().div().reshape", "datasets.MNIST.data.type().div().sub().div().reshape", "torch.FloatTensor().to.to", "torch.FloatTensor().to.to", "torch.FloatTensor().to.to", "torch.FloatTensor().to.to", "numpy.array", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.LongTensor", "torch.FloatTensor", "torch.LongTensor", "torch.device", "pandas.read_csv", "pd.read_csv.drop", "sklearn.model_selection.train_test_split", "numpy.array().astype", "numpy.array().astype", "numpy.array", "numpy.array", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "numpy.sqrt", "numpy.random.normal", "numpy.sqrt", "numpy.random.normal", "numpy.sqrt", "numpy.random.normal", "numpy.sin", "numpy.sqrt", "numpy.random.normal", "numpy.sin", "numpy.random.normal", "numpy.random.normal", "temp[].reshape.astype", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "datasets.MNIST.data.type().div().sub().div", "datasets.MNIST.data.type().div().sub().div", "numpy.full", "numpy.full", "numpy.loadtxt", "temp[].reshape", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "numpy.sqrt", "numpy.sqrt", "numpy.array", "numpy.array", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.LongTensor", "torch.LongTensor", "range", "numpy.full", "numpy.full", "pandas.read_excel", "numpy.mat", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "datasets.MNIST.data.type().div().sub", "datasets.MNIST.data.type().div().sub", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "numpy.full", "numpy.full", "pandas.read_excel", "numpy.mat", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "numpy.full", "numpy.full", "pandas.read_csv", "numpy.mat", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "datasets.MNIST.data.type().div", "datasets.MNIST.data.type().div", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "numpy.full", "numpy.full", "numpy.loadtxt", "temp[].reshape", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "numpy.full", "numpy.full", "pandas.read_csv", "numpy.mat", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "datasets.MNIST.data.type", "datasets.MNIST.data.type", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "numpy.full", "numpy.full", "numpy.loadtxt", "temp[].reshape", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "numpy.full", "numpy.full", "pandas.read_excel", "numpy.mat", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "numpy.full", "numpy.full", "pandas.read_csv", "numpy.matrix", "numpy.random.choice", "numpy.round().astype", "numpy.arange", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "numpy.full", "numpy.full", "pandas.read_table", "numpy.matrix", "numpy.std", "numpy.mean", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "numpy.round", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "numpy.full", "numpy.full", "numpy.full", "numpy.full", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.RBF_kernel", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.RBF_kernel"], ["", "def", "preprocess_data", "(", "data_name", ",", "cross_validate_index", ",", "seed", "=", "1", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "if", "data_name", "==", "'global_optimal'", ":", "\n", "# device = torch.device(\"cpu\")", "\n", "        ", "TotalP", "=", "5", "\n", "NTrain", "=", "5000", "\n", "n_unit", "=", "5", "\n", "second_weight", "=", "np", ".", "mat", "(", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "[", "n_unit", ",", "1", "]", ")", ")", "\n", "second_bias", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "1", ")", "\n", "\n", "x_train", "=", "np", ".", "mat", "(", "np", ".", "zeros", "(", "[", "NTrain", ",", "TotalP", "]", ")", ")", "\n", "sigma", "=", "1.0", "\n", "for", "i", "in", "range", "(", "NTrain", ")", ":", "\n", "            ", "ee", "=", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", "\n", "for", "j", "in", "range", "(", "TotalP", ")", ":", "\n", "                ", "x_train", "[", "i", ",", "j", "]", "=", "(", "ee", "+", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", ")", "/", "np", ".", "sqrt", "(", "2.0", ")", "\n", "\n", "", "", "C", "=", "5", "\n", "epsilon", "=", "0.01", "\n", "p_gamma", "=", "1", "/", "(", "x_train", ".", "shape", "[", "1", "]", "*", "x_train", ".", "var", "(", ")", ")", "\n", "\n", "x_train_hidden", "=", "np", ".", "mat", "(", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "[", "NTrain", ",", "n_unit", "]", ")", ")", "\n", "\n", "svr_input_train", "=", "RBF_kernel", "(", "torch", ".", "FloatTensor", "(", "x_train", ")", ",", "torch", ".", "FloatTensor", "(", "x_train", ")", ",", "p_gamma", ")", "\n", "svr_input_train", "=", "svr_input_train", ".", "numpy", "(", ")", "\n", "\n", "dual_coef", "=", "np", ".", "mat", "(", "np", ".", "zeros", "(", "[", "NTrain", ",", "n_unit", "]", ")", ")", "\n", "dual_bias", "=", "np", ".", "zeros", "(", "[", "n_unit", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_unit", ")", ":", "\n", "            ", "temp_svr", "=", "SVR", "(", "C", "=", "C", ",", "epsilon", "=", "epsilon", ")", "\n", "temp_svr", ".", "fit", "(", "x_train", ",", "x_train_hidden", "[", ":", ",", "i", "]", ")", "\n", "\n", "dual_coef", "[", "temp_svr", ".", "support_", ",", "i", "]", "=", "temp_svr", ".", "dual_coef_", "\n", "dual_bias", "[", "i", "]", "=", "temp_svr", ".", "intercept_", "\n", "\n", "", "x_train_forward_hidden", "=", "np", ".", "matmul", "(", "svr_input_train", ",", "dual_coef", ")", "+", "dual_bias", "\n", "\n", "y_train", "=", "np", ".", "matmul", "(", "x_train_forward_hidden", ",", "second_weight", ")", "+", "second_bias", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "[", "NTrain", ",", "1", "]", ")", "\n", "\n", "NTest", "=", "5000", "\n", "x_test", "=", "np", ".", "mat", "(", "np", ".", "zeros", "(", "[", "NTest", ",", "TotalP", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "NTest", ")", ":", "\n", "            ", "ee", "=", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", "\n", "for", "j", "in", "range", "(", "TotalP", ")", ":", "\n", "                ", "x_test", "[", "i", ",", "j", "]", "=", "(", "ee", "+", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", ")", "/", "np", ".", "sqrt", "(", "2.0", ")", "\n", "\n", "", "", "svr_input_test", "=", "RBF_kernel", "(", "torch", ".", "FloatTensor", "(", "x_test", ")", ",", "torch", ".", "FloatTensor", "(", "x_train", ")", ",", "p_gamma", ")", "\n", "\n", "svr_input_test", "=", "svr_input_test", ".", "numpy", "(", ")", "\n", "\n", "x_test_forward_hidden", "=", "np", ".", "matmul", "(", "svr_input_test", ",", "dual_coef", ")", "+", "dual_bias", "\n", "\n", "y_test", "=", "np", ".", "matmul", "(", "x_test_forward_hidden", ",", "second_weight", ")", "+", "second_bias", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "[", "NTest", ",", "1", "]", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "\n", "", "if", "data_name", "==", "'measurement_error'", ":", "\n", "        ", "TotalP", "=", "5", "\n", "NTrain", "=", "500", "\n", "x_train", "=", "np", ".", "matrix", "(", "np", ".", "zeros", "(", "[", "NTrain", ",", "TotalP", "]", ")", ")", "\n", "y_train", "=", "np", ".", "matrix", "(", "np", ".", "zeros", "(", "[", "NTrain", ",", "1", "]", ")", ")", "\n", "\n", "sigma", "=", "1.0", "\n", "for", "i", "in", "range", "(", "NTrain", ")", ":", "\n", "            ", "ee", "=", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", "\n", "for", "j", "in", "range", "(", "TotalP", ")", ":", "\n", "                ", "x_train", "[", "i", ",", "j", "]", "=", "(", "ee", "+", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", ")", "/", "np", ".", "sqrt", "(", "2.0", ")", "\n", "", "x0", "=", "x_train", "[", "i", ",", "0", "]", "\n", "x1", "=", "x_train", "[", "i", ",", "1", "]", "\n", "x2", "=", "x_train", "[", "i", ",", "2", "]", "\n", "x3", "=", "x_train", "[", "i", ",", "3", "]", "\n", "x4", "=", "x_train", "[", "i", ",", "4", "]", "\n", "\n", "y_train", "[", "i", ",", "0", "]", "=", "5", "*", "x1", "/", "(", "1", "+", "x0", "*", "x0", ")", "+", "5", "*", "np", ".", "sin", "(", "x2", "*", "x3", ")", "+", "2", "*", "x4", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", "\n", "\n", "x_train", "[", "i", ",", "0", "]", "=", "x_train", "[", "i", ",", "0", "]", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "0.5", ")", "\n", "x_train", "[", "i", ",", "1", "]", "=", "x_train", "[", "i", ",", "1", "]", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "0.5", ")", "\n", "x_train", "[", "i", ",", "2", "]", "=", "x_train", "[", "i", ",", "2", "]", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "0.5", ")", "\n", "x_train", "[", "i", ",", "3", "]", "=", "x_train", "[", "i", ",", "3", "]", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "0.5", ")", "\n", "x_train", "[", "i", ",", "4", "]", "=", "x_train", "[", "i", ",", "4", "]", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "0.5", ")", "\n", "\n", "", "NTest", "=", "500", "\n", "x_test", "=", "np", ".", "matrix", "(", "np", ".", "zeros", "(", "[", "NTest", ",", "TotalP", "]", ")", ")", "\n", "y_test", "=", "np", ".", "matrix", "(", "np", ".", "zeros", "(", "[", "NTest", ",", "1", "]", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "NTest", ")", ":", "\n", "            ", "ee", "=", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", "\n", "for", "j", "in", "range", "(", "TotalP", ")", ":", "\n", "                ", "x_test", "[", "i", ",", "j", "]", "=", "(", "ee", "+", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", ")", "/", "np", ".", "sqrt", "(", "2.0", ")", "\n", "", "x0", "=", "x_test", "[", "i", ",", "0", "]", "\n", "x1", "=", "x_test", "[", "i", ",", "1", "]", "\n", "x2", "=", "x_test", "[", "i", ",", "2", "]", "\n", "x3", "=", "x_test", "[", "i", ",", "3", "]", "\n", "x4", "=", "x_test", "[", "i", ",", "4", "]", "\n", "\n", "y_test", "[", "i", ",", "0", "]", "=", "5", "*", "x1", "/", "(", "1", "+", "x0", "*", "x0", ")", "+", "5", "*", "np", ".", "sin", "(", "x2", "*", "x3", ")", "+", "2", "*", "x4", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", "\n", "\n", "x_test", "[", "i", ",", "0", "]", "=", "x_test", "[", "i", ",", "0", "]", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "0.5", ")", "\n", "x_test", "[", "i", ",", "1", "]", "=", "x_test", "[", "i", ",", "1", "]", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "0.5", ")", "\n", "x_test", "[", "i", ",", "2", "]", "=", "x_test", "[", "i", ",", "2", "]", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "0.5", ")", "\n", "x_test", "[", "i", ",", "3", "]", "=", "x_test", "[", "i", ",", "3", "]", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "0.5", ")", "\n", "x_test", "[", "i", ",", "4", "]", "=", "x_test", "[", "i", ",", "4", "]", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "0.5", ")", "\n", "\n", "", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "if", "data_name", "==", "'full_row_rank'", ":", "\n", "        ", "TotalP", "=", "1000", "\n", "a", "=", "1", "\n", "b", "=", "1", "\n", "W1", "=", "np", ".", "matrix", "(", "np", ".", "random", ".", "choice", "(", "[", "-", "2", ",", "-", "1", ",", "1", ",", "2", "]", ",", "size", "=", "TotalP", "*", "5", ",", "replace", "=", "True", ")", ".", "reshape", "(", "[", "TotalP", ",", "5", "]", ")", ")", "\n", "W2", "=", "np", ".", "matrix", "(", "np", ".", "random", ".", "choice", "(", "[", "-", "2", ",", "-", "1", ",", "1", ",", "2", "]", ",", "size", "=", "5", "*", "5", ",", "replace", "=", "True", ")", ".", "reshape", "(", "[", "5", ",", "5", "]", ")", ")", "\n", "W3", "=", "np", ".", "matrix", "(", "np", ".", "random", ".", "choice", "(", "[", "-", "2", ",", "-", "1", ",", "1", ",", "2", "]", ",", "size", "=", "5", "*", "1", ",", "replace", "=", "True", ")", ".", "reshape", "(", "[", "5", ",", "1", "]", ")", ")", "\n", "NTrain", "=", "1000", "\n", "x_train", "=", "np", ".", "matrix", "(", "np", ".", "zeros", "(", "[", "NTrain", ",", "TotalP", "]", ")", ")", "\n", "y_train", "=", "np", ".", "matrix", "(", "np", ".", "zeros", "(", "[", "NTrain", ",", "1", "]", ")", ")", "\n", "sigma", "=", "1.0", "\n", "for", "i", "in", "range", "(", "NTrain", ")", ":", "\n", "            ", "if", "i", "%", "1000", "==", "0", ":", "\n", "                ", "print", "(", "\"x_train generate = \"", ",", "i", ")", "\n", "", "ee", "=", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", "\n", "for", "j", "in", "range", "(", "TotalP", ")", ":", "\n", "                ", "x_train", "[", "i", ",", "j", "]", "=", "(", "a", "*", "ee", "+", "b", "*", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", ")", "/", "np", ".", "sqrt", "(", "a", "*", "a", "+", "b", "*", "b", ")", "\n", "\n", "", "", "temp", "=", "np", ".", "tanh", "(", "x_train", "*", "W1", ")", "\n", "temp", "=", "np", ".", "tanh", "(", "temp", "*", "W2", ")", "\n", "y_train", "=", "temp", "*", "W3", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "size", "=", "y_train", ".", "shape", ")", "\n", "\n", "NTest", "=", "1000", "\n", "x_test", "=", "np", ".", "matrix", "(", "np", ".", "zeros", "(", "[", "NTest", ",", "TotalP", "]", ")", ")", "\n", "y_test", "=", "np", ".", "matrix", "(", "np", ".", "zeros", "(", "[", "NTest", ",", "1", "]", ")", ")", "\n", "\n", "sigma", "=", "1.0", "\n", "for", "i", "in", "range", "(", "NTest", ")", ":", "\n", "            ", "if", "i", "%", "1000", "==", "0", ":", "\n", "                ", "print", "(", "\"x_test generate = \"", ",", "i", ")", "\n", "", "ee", "=", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", "\n", "for", "j", "in", "range", "(", "TotalP", ")", ":", "\n", "                ", "x_test", "[", "i", ",", "j", "]", "=", "(", "a", "*", "ee", "+", "b", "*", "np", ".", "sqrt", "(", "sigma", ")", "*", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ")", ")", "/", "np", ".", "sqrt", "(", "a", "*", "a", "+", "b", "*", "b", ")", "\n", "\n", "", "", "temp", "=", "np", ".", "tanh", "(", "x_test", "*", "W1", ")", "\n", "temp", "=", "np", ".", "tanh", "(", "temp", "*", "W2", ")", "\n", "y_test", "=", "temp", "*", "W3", "+", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "size", "=", "y_test", ".", "shape", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "\n", "", "elif", "data_name", "==", "'parkinson'", ":", "\n", "        ", "temp", "=", "pd", ".", "read_table", "(", "'./data/prakinson_telemonitoring/parkinsons_updrs.data'", ",", "sep", "=", "','", ")", "\n", "\n", "temp", "=", "np", ".", "mat", "(", "temp", ")", "\n", "x_data", "=", "temp", "[", ":", ",", "6", ":", "]", "\n", "y_data", "=", "temp", "[", ":", ",", "5", "]", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.2", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "y_train_mean", "=", "np", ".", "mean", "(", "y_train", ")", "\n", "y_train_std", "=", "np", ".", "std", "(", "y_train", ")", "\n", "\n", "y_train", "=", "(", "y_train", "-", "y_train_mean", ")", "/", "y_train_std", "\n", "\n", "y_test", "=", "(", "y_test", "-", "y_train_mean", ")", "/", "y_train_std", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "data_name", "==", "'qsar'", ":", "\n", "\n", "        ", "temp", "=", "pd", ".", "read_csv", "(", "'./data/qsar/qsar_androgen_receptor.csv'", ",", "sep", "=", "';'", ",", "header", "=", "None", ")", "\n", "temp", "=", "np", ".", "mat", "(", "temp", ")", "\n", "x_data", "=", "temp", "[", ":", ",", "0", ":", "-", "1", "]", ".", "astype", "(", "'float64'", ")", "\n", "y_data", "=", "temp", "[", ":", ",", "-", "1", "]", "\n", "\n", "y_data", "=", "(", "y_data", "==", "'positive'", ")", "\n", "\n", "y_data", "=", "np", ".", "array", "(", "y_data", ".", "astype", "(", "'int'", ")", ")", ".", "reshape", "(", "y_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.2", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "LongTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "LongTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "elif", "data_name", "==", "'MNIST'", ":", "\n", "        ", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "\n", "]", ")", "\n", "\n", "test_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "\n", "]", ")", "\n", "\n", "train_set", "=", "datasets", ".", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "train_transform", ")", "\n", "test_set", "=", "datasets", ".", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "test_transform", ")", "\n", "\n", "x_train", "=", "train_set", ".", "data", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "div", "(", "255", ")", ".", "sub", "(", "0.1307", ")", ".", "div", "(", "0.3081", ")", ".", "reshape", "(", "\n", "[", "train_set", ".", "data", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "x_test", "=", "test_set", ".", "data", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "div", "(", "255", ")", ".", "sub", "(", "0.1307", ")", ".", "div", "(", "0.3081", ")", ".", "reshape", "(", "\n", "[", "test_set", ".", "data", ".", "shape", "[", "0", "]", ",", "-", "1", "]", ")", "\n", "y_train", "=", "train_set", ".", "targets", "\n", "y_test", "=", "test_set", ".", "targets", "\n", "\n", "x_train", "=", "x_train", ".", "to", "(", "device", ")", "\n", "y_train", "=", "y_train", ".", "to", "(", "device", ")", "\n", "x_test", "=", "x_test", ".", "to", "(", "device", ")", "\n", "y_test", "=", "y_test", ".", "to", "(", "device", ")", "\n", "\n", "", "elif", "data_name", "==", "\"CoverType\"", ":", "\n", "\n", "        ", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "df", "=", "pd", ".", "read_csv", "(", "'./data/CoverType/covtype.data'", ",", "sep", "=", "','", ",", "header", "=", "None", ")", "\n", "\n", "y", "=", "df", "[", "54", "]", "\n", "X", "=", "df", ".", "drop", "(", "54", ",", "axis", "=", "1", ")", "\n", "\n", "X_train", ",", "X_test", ",", "y_train", ",", "y_test", "=", "train_test_split", "(", "X", ",", "y", ",", "random_state", "=", "seed", ",", "stratify", "=", "y", ",", "train_size", "=", "0.5", ")", "\n", "\n", "\n", "x_train", "=", "np", ".", "array", "(", "X_train", ")", ".", "astype", "(", "'float64'", ")", "\n", "x_test", "=", "np", ".", "array", "(", "X_test", ")", ".", "astype", "(", "'float64'", ")", "\n", "y_train", "=", "np", ".", "array", "(", "y_train", ")", "\n", "y_test", "=", "np", ".", "array", "(", "y_test", ")", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "[", ":", ",", "0", ":", "10", "]", "=", "(", "x_train", "[", ":", ",", "0", ":", "10", "]", "-", "np", ".", "full", "(", "x_train", "[", ":", ",", "0", ":", "10", "]", ".", "shape", ",", "x_train_mean", "[", "0", ":", "10", "]", ")", ")", "/", "np", ".", "full", "(", "\n", "x_train", "[", ":", ",", "0", ":", "10", "]", ".", "shape", ",", "\n", "x_train_std", "[", "0", ":", "10", "]", ")", "\n", "\n", "x_test", "[", ":", ",", "0", ":", "10", "]", "=", "(", "x_test", "[", ":", ",", "0", ":", "10", "]", "-", "np", ".", "full", "(", "x_test", "[", ":", ",", "0", ":", "10", "]", ".", "shape", ",", "x_train_mean", "[", "0", ":", "10", "]", ")", ")", "/", "np", ".", "full", "(", "\n", "x_test", "[", ":", ",", "0", ":", "10", "]", ".", "shape", ",", "x_train_std", "[", "0", ":", "10", "]", ")", "\n", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "LongTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "y_train", "-", "1", "\n", "y_test", "=", "torch", ".", "LongTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "y_test", "-", "1", "\n", "", "elif", "data_name", "==", "\"Boston\"", ":", "\n", "        ", "temp", "=", "np", ".", "loadtxt", "(", "'./data/Boston/housing.data'", ")", "\n", "x_data", "=", "temp", "[", ":", ",", "0", ":", "-", "1", "]", "\n", "y_data", "=", "temp", "[", ":", ",", "-", "1", "]", ".", "reshape", "(", "[", "temp", ".", "shape", "[", "0", "]", ",", "1", "]", ")", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.1", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "data_name", "==", "'Concrete'", ":", "\n", "        ", "temp", "=", "pd", ".", "read_excel", "(", "'data/Concrete/Concrete_Data.xls'", ")", "\n", "\n", "temp", "=", "np", ".", "mat", "(", "temp", ")", "\n", "x_data", "=", "temp", "[", ":", ",", ":", "8", "]", "\n", "y_data", "=", "temp", "[", ":", ",", "8", "]", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.1", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "data_name", "==", "'Energy'", ":", "\n", "        ", "temp", "=", "pd", ".", "read_excel", "(", "'data/Energy/ENB2012_data.xlsx'", ")", "\n", "\n", "temp", "=", "np", ".", "mat", "(", "temp", ")", "\n", "x_data", "=", "temp", "[", ":", "768", ",", ":", "8", "]", "\n", "y_data", "=", "temp", "[", ":", "768", ",", "9", "]", "\n", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.1", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "elif", "data_name", "==", "'Wine'", ":", "\n", "        ", "temp", "=", "pd", ".", "read_csv", "(", "'data/Wine/winequality-red.csv'", ",", "sep", "=", "';'", ")", "\n", "\n", "temp", "=", "np", ".", "mat", "(", "temp", ")", "\n", "x_data", "=", "temp", "[", ":", ",", "0", ":", "11", "]", "\n", "y_data", "=", "temp", "[", ":", ",", "11", "]", "\n", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.1", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "elif", "data_name", "==", "'Yacht'", ":", "\n", "\n", "        ", "temp", "=", "np", ".", "loadtxt", "(", "'data/Yacht/yacht_hydrodynamics.data'", ")", "\n", "x_data", "=", "temp", "[", ":", ",", "0", ":", "6", "]", "\n", "y_data", "=", "temp", "[", ":", ",", "6", "]", ".", "reshape", "(", "[", "temp", ".", "shape", "[", "0", "]", ",", "1", "]", ")", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.1", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "elif", "data_name", "==", "'kin8nm'", ":", "\n", "        ", "temp", "=", "pd", ".", "read_csv", "(", "'data/kin8nm/dataset_2175_kin8nm.csv'", ")", "\n", "\n", "temp", "=", "np", ".", "mat", "(", "temp", ")", "\n", "x_data", "=", "temp", "[", ":", ",", "0", ":", "8", "]", "\n", "y_data", "=", "temp", "[", ":", ",", "8", "]", "\n", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.1", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "elif", "data_name", "==", "'Naval'", ":", "\n", "\n", "        ", "temp", "=", "np", ".", "loadtxt", "(", "'data/Naval/data.txt'", ")", "\n", "x_data", "=", "temp", "[", ":", ",", "0", ":", "16", "]", "\n", "y_data", "=", "temp", "[", ":", ",", "16", "]", ".", "reshape", "(", "[", "temp", ".", "shape", "[", "0", "]", ",", "1", "]", ")", "\n", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.1", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "elif", "data_name", "==", "'CCPP'", ":", "\n", "        ", "temp", "=", "pd", ".", "read_excel", "(", "'data/CCPP/Folds5x2_pp.xlsx'", ")", "\n", "\n", "temp", "=", "np", ".", "mat", "(", "temp", ")", "\n", "x_data", "=", "temp", "[", ":", ",", ":", "4", "]", "\n", "y_data", "=", "temp", "[", ":", ",", "4", "]", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.1", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "data_name", "==", "'Protein'", ":", "\n", "        ", "temp", "=", "pd", ".", "read_csv", "(", "'data/Protein/CASP.csv'", ")", "\n", "\n", "temp", "=", "np", ".", "matrix", "(", "temp", ")", "\n", "x_data", "=", "temp", "[", ":", ",", "1", ":", "10", "]", "\n", "y_data", "=", "temp", "[", ":", ",", "0", "]", "\n", "\n", "permutation", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "x_data", ".", "shape", "[", "0", "]", ")", ",", "x_data", ".", "shape", "[", "0", "]", ",", "replace", "=", "False", ")", "\n", "size_test", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.1", ")", ".", "astype", "(", "int", ")", "\n", "divid_index", "=", "np", ".", "arange", "(", "x_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "lower_bound", "=", "cross_validate_index", "*", "size_test", "\n", "upper_bound", "=", "(", "cross_validate_index", "+", "1", ")", "*", "size_test", "\n", "test_index", "=", "(", "divid_index", ">=", "lower_bound", ")", "*", "(", "divid_index", "<", "upper_bound", ")", "\n", "\n", "index_train", "=", "permutation", "[", "[", "not", "_", "for", "_", "in", "test_index", "]", "]", "\n", "index_test", "=", "permutation", "[", "test_index", "]", "\n", "\n", "x_train", "=", "x_data", "[", "index_train", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "index_train", "]", "\n", "\n", "x_test", "=", "x_data", "[", "index_test", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "index_test", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "elif", "data_name", "==", "'Year'", ":", "\n", "        ", "temp", "=", "pd", ".", "read_table", "(", "'data/Year/YearPredictionMSD.txt'", ",", "header", "=", "None", ",", "sep", "=", "','", ")", "\n", "\n", "temp", "=", "np", ".", "matrix", "(", "temp", ")", "\n", "x_data", "=", "temp", "[", ":", ",", "1", ":", "]", "\n", "y_data", "=", "temp", "[", ":", ",", "0", "]", "\n", "\n", "x_train", "=", "x_data", "[", "0", ":", "463715", ",", ":", "]", "\n", "y_train", "=", "y_data", "[", "0", ":", "463715", "]", "\n", "\n", "x_test", "=", "x_data", "[", "463715", ":", ",", ":", "]", "\n", "y_test", "=", "y_data", "[", "463715", ":", "]", "\n", "\n", "x_train_std", "=", "np", ".", "std", "(", "x_train", ",", "0", ")", "\n", "x_train_std", "[", "x_train_std", "==", "0", "]", "=", "1", "\n", "x_train_mean", "=", "np", ".", "mean", "(", "x_train", ",", "0", ")", "\n", "\n", "x_train", "=", "(", "x_train", "-", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_train", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_test", "=", "(", "x_test", "-", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_mean", ")", ")", "/", "np", ".", "full", "(", "x_test", ".", "shape", ",", "x_train_std", ")", "\n", "\n", "x_train", "=", "torch", ".", "FloatTensor", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "FloatTensor", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "x_test", "=", "torch", ".", "FloatTensor", "(", "x_test", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "FloatTensor", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "\n", "\n", "", "return", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.Net.__init__": [[64, 73], ["torch.Module.__init__", "range", "kstonet_cross_validate.Net.fc_list.append", "kstonet_cross_validate.Net.add_module", "kstonet_cross_validate.Net.fc_list.append", "kstonet_cross_validate.Net.add_module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "str", "str"], "methods", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_hidden", ",", "hidden_dim", ",", "output_dim", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_hidden", "=", "num_hidden", "\n", "self", ".", "fc_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "            ", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "i", "]", ",", "hidden_dim", "[", "i", "+", "1", "]", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "i", "+", "2", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "-", "1", "]", ",", "output_dim", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "num_hidden", "+", "1", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.Net.forward": [[74, 80], ["kstonet_cross_validate.softplus", "range", "kstonet_cross_validate.softplus"], "methods", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "softplus", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_hidden", "-", "1", ")", ":", "\n", "            ", "x", "=", "softplus", "(", "self", ".", "fc_list", "[", "i", "]", "(", "x", ")", ")", "\n", "", "x", "=", "self", ".", "fc_list", "[", "-", "1", "]", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus": [[60, 62], ["x.exp"], "function", ["None"], ["def", "softplus", "(", "x", ")", ":", "\n", "    ", "return", "(", "x", ".", "exp", "(", ")", "+", "1", ")", ".", "log", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.svr_solver": [[82, 85], ["svr_list[].fit"], "function", ["None"], ["", "", "def", "svr_solver", "(", "svr_list", ",", "X", ",", "Y", ",", "i", ")", ":", "\n", "    ", "svr_list", "[", "i", "]", ".", "fit", "(", "X", ",", "Y", "[", ":", ",", "i", "]", ")", "\n", "return", "svr_list", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.lasso_solver": [[87, 92], ["solver.fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "function", ["None"], ["", "def", "lasso_solver", "(", "weight", ",", "bias", ",", "solver", ",", "device", ",", "X", ",", "Y", ",", "i", ")", ":", "\n", "    ", "clf", "=", "solver", ".", "fit", "(", "X", ",", "Y", "[", ":", ",", "i", "]", ")", "\n", "dim", "=", "weight", ".", "shape", "[", "1", "]", "\n", "weight", ".", "data", "[", "i", ",", ":", "]", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "dim", ")", ".", "to", "(", "device", ")", "\n", "bias", ".", "data", "[", "i", "]", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.main": [[94, 770], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "range", "range", "process_data.preprocess_data", "numpy.round().astype", "torch.device", "torch.device", "torch.device", "numpy.zeros", "range", "numpy.argmin", "print", "torch.MSELoss", "numpy.zeros", "kstonet_cross_validate.Net", "Net.to", "torch.Linear", "nn.Linear.to", "nn.Linear.", "numpy.zeros", "numpy.zeros", "temp_init.data.cpu().numpy", "range", "len", "len", "print", "torch.MSELoss", "numpy.zeros", "kstonet_cross_validate.Net", "Net.to", "torch.Linear", "nn.Linear.to", "nn.Linear.", "numpy.zeros", "numpy.zeros", "temp_init.data.cpu().numpy", "range", "np.zeros.min", "torch.MSELoss", "torch.MSELoss", "numpy.zeros", "numpy.zeros", "numpy.zeros", "int", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "os.path.isdir", "range", "range", "range", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "time.process_time", "range", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "range", "range", "time.process_time", "torch.save", "torch.save", "torch.save", "range", "numpy.round", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "y_train.mean", "y_train.std", "torch.MSELoss", "torch.MSELoss", "numpy.zeros", "numpy.zeros", "numpy.zeros", "int", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "os.path.isdir", "range", "range", "range", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "time.process_time", "range", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "range", "range", "time.process_time", "torch.save", "torch.save", "torch.save", "range", "y_train.mean", "y_train.std", "str", "os.makedirs", "len", "proposal_lr.append", "len", "sigma_list.append", "len", "temperature.append", "len", "lasso_lambda.append", "thundersvm.SVR", "svr_list.append", "temp_init.data.cpu", "torch.no_grad", "torch.no_grad", "torch.no_grad", "hidden_list.append", "momentum_list.append", "range", "hidden_list.__len__", "reversed", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "Net.state_dict", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "str", "os.makedirs", "len", "proposal_lr.append", "len", "sigma_list.append", "len", "temperature.append", "len", "lasso_lambda.append", "thundersvm.SVR", "svr_list.append", "temp_init.data.cpu", "torch.no_grad", "torch.no_grad", "torch.no_grad", "hidden_list.append", "momentum_list.append", "range", "hidden_list.__len__", "reversed", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "Net.state_dict", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "hidden_list.append", "momentum_list.append", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "hidden_likelihood.backward", "svr_list[].fit", "sklearn.linear_model.Lasso().fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "hidden_list.append", "momentum_list.append", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "hidden_likelihood.backward", "svr_list[].fit", "sklearn.linear_model.Lasso().fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "os.path.isdir", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "hidden_list[].grad.zero_", "torch.no_grad", "torch.no_grad", "torch.no_grad", "x_train.cpu", "[].cpu().detach", "sklearn.linear_model.Lasso().fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "sklearn.linear_model.LogisticRegression().fit", "softplus().cpu().detach", "hidden_list[].cpu().detach", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "str", "str", "str", "os.path.isdir", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "hidden_list[].grad.zero_", "torch.no_grad", "torch.no_grad", "torch.no_grad", "x_train.cpu", "[].cpu().detach", "sklearn.linear_model.Lasso().fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "sklearn.linear_model.LogisticRegression().fit", "softplus().cpu().detach", "hidden_list[].cpu().detach", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "str", "str", "str", "y_test.max", "str", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "kstonet_cross_validate.softplus", "torch.FloatTensor().to().normal_().mul", "torch.FloatTensor().to().normal_().mul", "torch.FloatTensor().to().normal_().mul", "softplus().cpu().detach", "y_train.cpu", "softplus().cpu().detach", "y_train.cpu", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "sklearn.linear_model.Lasso", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "x_train.cpu", "x_test.cpu", "x_val.cpu", "x_train.cpu", "x_test.cpu", "x_val.cpu", "y_test.max", "str", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "kstonet_cross_validate.softplus", "torch.FloatTensor().to().normal_().mul", "torch.FloatTensor().to().normal_().mul", "torch.FloatTensor().to().normal_().mul", "softplus().cpu().detach", "y_train.cpu", "softplus().cpu().detach", "y_train.cpu", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "sklearn.linear_model.Lasso", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "x_train.cpu", "x_test.cpu", "x_val.cpu", "x_train.cpu", "x_test.cpu", "x_val.cpu", "nn.CrossEntropyLoss.", "nn.MSELoss.", "torch.where().sum", "torch.where().sum", "torch.where().sum", "nn.MSELoss.", "numpy.sqrt", "[].cpu", "sklearn.linear_model.Lasso", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "sklearn.linear_model.LogisticRegression", "softplus().cpu", "hidden_list[].cpu", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "str", "nn.CrossEntropyLoss.", "nn.MSELoss.", "torch.where().sum", "torch.where().sum", "torch.where().sum", "nn.MSELoss.", "numpy.sqrt", "[].cpu", "sklearn.linear_model.Lasso", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "sklearn.linear_model.LogisticRegression", "softplus().cpu", "hidden_list[].cpu", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "str", "str", "torch.FloatTensor().to().normal_", "torch.FloatTensor().to().normal_", "torch.FloatTensor().to().normal_", "softplus().cpu", "softplus().cpu", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "str", "torch.FloatTensor().to().normal_", "torch.FloatTensor().to().normal_", "torch.FloatTensor().to().normal_", "softplus().cpu", "softplus().cpu", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "kstonet_cross_validate.softplus", "kstonet_cross_validate.softplus", "torch.where", "torch.where", "torch.where", "kstonet_cross_validate.softplus", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "kstonet_cross_validate.softplus", "prediction.eq", "prediction.eq", "prediction.eq", "kstonet_cross_validate.softplus", "kstonet_cross_validate.softplus", "torch.where", "torch.where", "torch.where", "kstonet_cross_validate.softplus", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "kstonet_cross_validate.softplus", "prediction.eq", "prediction.eq", "prediction.eq", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "kstonet_cross_validate.softplus", "numpy.array", "kstonet_cross_validate.softplus", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "kstonet_cross_validate.softplus", "numpy.array", "kstonet_cross_validate.softplus", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "numpy.vstack", "numpy.array", "numpy.vstack", "numpy.array", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.process_data.preprocess_data", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_cross_validate.softplus"], ["", "def", "main", "(", ")", ":", "\n", "    ", "import", "pickle", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "data_name", "=", "args", ".", "data_name", "\n", "\n", "num_hidden", "=", "args", ".", "layer", "\n", "hidden_dim", "=", "args", ".", "unit", "\n", "\n", "regression_flag", "=", "args", ".", "regression_flag", "\n", "normalize_y_flag", "=", "args", ".", "normalize_y_flag", "\n", "\n", "num_epochs", "=", "args", ".", "nepoch", "\n", "\n", "C_list", "=", "args", ".", "C_list", "\n", "\n", "\n", "\n", "for", "data_seed", "in", "range", "(", "0", ",", "20", ")", ":", "\n", "        ", "for", "cross_validate_index", "in", "range", "(", "10", ")", ":", "\n", "            ", "x_data", ",", "y_data", ",", "x_test", ",", "y_test", "=", "preprocess_data", "(", "data_name", ",", "cross_validate_index", ",", "seed", "=", "data_seed", ")", "\n", "\n", "\n", "size_train", "=", "np", ".", "round", "(", "x_data", ".", "shape", "[", "0", "]", "*", "0.8", ")", ".", "astype", "(", "int", ")", "\n", "x_train", "=", "x_data", "[", "0", ":", "size_train", ",", "]", "\n", "y_train", "=", "y_data", "[", "0", ":", "size_train", ",", "]", "\n", "x_val", "=", "x_data", "[", "size_train", ":", ",", "]", "\n", "y_val", "=", "y_data", "[", "size_train", ":", ",", "]", "\n", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "ntrain", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "nval", "=", "x_val", ".", "shape", "[", "0", "]", "\n", "ntest", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "dim", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "\n", "\n", "if", "regression_flag", ":", "\n", "                ", "if", "normalize_y_flag", ":", "\n", "                    ", "y_train_mean", "=", "y_train", ".", "mean", "(", ")", "\n", "y_train_std", "=", "y_train", ".", "std", "(", ")", "\n", "y_train", "=", "(", "y_train", "-", "y_train_mean", ")", "/", "y_train_std", "\n", "\n", "", "", "best_val_loss_list", "=", "np", ".", "zeros", "(", "len", "(", "C_list", ")", ")", "\n", "for", "cross", "in", "range", "(", "len", "(", "C_list", ")", ")", ":", "\n", "                ", "C", "=", "C_list", "[", "cross", "]", "\n", "print", "(", "'C = '", ",", "C", ")", "\n", "sse", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", "\n", "if", "regression_flag", ":", "\n", "                    ", "output_dim", "=", "1", "\n", "loss_func", "=", "nn", ".", "MSELoss", "(", ")", "\n", "loss_func_sum", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "val_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "", "else", ":", "\n", "                    ", "output_dim", "=", "int", "(", "(", "y_test", ".", "max", "(", ")", "+", "1", ")", ".", "item", "(", ")", ")", "\n", "loss_func", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "loss_func_sum", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'sum'", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "val_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "train_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "val_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "", "time_used_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "\n", "net", "=", "Net", "(", "num_hidden", ",", "hidden_dim", ",", "output_dim", ")", "\n", "net", ".", "to", "(", "device", ")", "\n", "\n", "PATH", "=", "args", ".", "base_path", "+", "data_name", "+", "'/'", "+", "'data_split_'", "+", "str", "(", "data_seed", ")", "+", "'/'", "+", "str", "(", "cross_validate_index", ")", "+", "'/'", "+", "'C_'", "+", "str", "(", "\n", "C", ")", "+", "args", ".", "model_path", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "                    ", "try", ":", "\n", "                        ", "os", ".", "makedirs", "(", "PATH", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Python >2.5", "\n", "                        ", "if", "exc", ".", "errno", "==", "errno", ".", "EEXIST", "and", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "                            ", "pass", "\n", "", "else", ":", "\n", "                            ", "raise", "\n", "\n", "", "", "", "proposal_lr", "=", "args", ".", "lr", "\n", "sigma_list", "=", "args", ".", "sigma", "\n", "temperature", "=", "args", ".", "temperature", "\n", "lasso_lambda", "=", "args", ".", "lasso", "\n", "\n", "if", "len", "(", "proposal_lr", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "                    ", "temp_proposal_lr", "=", "proposal_lr", "[", "0", "]", "\n", "proposal_lr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "                        ", "proposal_lr", ".", "append", "(", "temp_proposal_lr", ")", "\n", "\n", "", "", "if", "len", "(", "sigma_list", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "                    ", "temp_sigma_list", "=", "sigma_list", "[", "0", "]", "\n", "sigma_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "                        ", "sigma_list", ".", "append", "(", "temp_sigma_list", ")", "\n", "\n", "", "", "if", "len", "(", "temperature", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "                    ", "temp_temperature", "=", "temperature", "[", "0", "]", "\n", "temperature", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "                        ", "temperature", ".", "append", "(", "temp_temperature", ")", "\n", "\n", "", "", "if", "len", "(", "lasso_lambda", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "                    ", "temp_lasso_lambda", "=", "lasso_lambda", "[", "0", "]", "\n", "lasso_lambda", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "                        ", "lasso_lambda", ".", "append", "(", "temp_lasso_lambda", ")", "\n", "\n", "", "", "epsilon", "=", "args", ".", "epsilon", "\n", "\n", "\n", "temp_init", "=", "nn", ".", "Linear", "(", "dim", ",", "hidden_dim", "[", "0", "]", ")", "\n", "temp_init", ".", "to", "(", "device", ")", "\n", "svr_output_init", "=", "temp_init", "(", "x_train", ")", "\n", "\n", "\n", "if", "args", ".", "p_gamma", "is", "None", ":", "\n", "                    ", "p_gamma", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "                    ", "p_gamma", "=", "args", ".", "p_gamma", "\n", "\n", "", "kernel", "=", "args", ".", "kernel", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "svr_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                        ", "temp", "=", "SVR", "(", "C", "=", "C", ",", "epsilon", "=", "epsilon", ",", "gamma", "=", "1.0", "/", "p_gamma", ",", "kernel", "=", "kernel", ")", "\n", "svr_list", ".", "append", "(", "temp", ")", "\n", "\n", "", "", "svr_out_val", "=", "np", ".", "zeros", "(", "[", "nval", ",", "hidden_dim", "[", "0", "]", "]", ")", "\n", "\n", "svr_out_test", "=", "np", ".", "zeros", "(", "[", "ntest", ",", "hidden_dim", "[", "0", "]", "]", ")", "\n", "\n", "svr_out_train", "=", "svr_output_init", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "\n", "                    ", "start_time", "=", "time", ".", "process_time", "(", ")", "\n", "\n", "hidden_list", "=", "[", "]", "\n", "momentum_list", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                        ", "hidden_list", ".", "append", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "momentum_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "hidden_list", "[", "-", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "                            ", "hidden_list", ".", "append", "(", "net", ".", "fc_list", "[", "i", "]", "(", "softplus", "(", "hidden_list", "[", "-", "1", "]", ")", ")", ")", "\n", "momentum_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "hidden_list", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "hidden_list", ".", "__len__", "(", ")", ")", ":", "\n", "                        ", "hidden_list", "[", "i", "]", ".", "requires_grad", "=", "True", "\n", "\n", "", "MH_step", "=", "args", ".", "MH_step", "\n", "alpha", "=", "args", ".", "alpha", "\n", "\n", "forward_hidden", "=", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", "\n", "\n", "for", "repeat", "in", "range", "(", "MH_step", ")", ":", "\n", "                        ", "for", "layer_index", "in", "reversed", "(", "range", "(", "num_hidden", ")", ")", ":", "\n", "                            ", "if", "hidden_list", "[", "layer_index", "]", ".", "grad", "is", "not", "None", ":", "\n", "                                ", "hidden_list", "[", "layer_index", "]", ".", "grad", ".", "zero_", "(", ")", "\n", "\n", "", "if", "layer_index", "==", "num_hidden", "-", "1", ":", "\n", "                                ", "hidden_likelihood", "=", "-", "loss_func_sum", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", "(", "softplus", "(", "hidden_list", "[", "layer_index", "]", ")", ")", ",", "\n", "y_train", ")", "/", "sigma_list", "[", "layer_index", "]", "\n", "", "else", ":", "\n", "                                ", "hidden_likelihood", "=", "-", "sse", "(", "net", ".", "fc_list", "[", "layer_index", "]", "(", "softplus", "(", "hidden_list", "[", "layer_index", "]", ")", ")", ",", "\n", "hidden_list", "[", "layer_index", "+", "1", "]", ")", "/", "sigma_list", "[", "layer_index", "]", "\n", "", "if", "layer_index", "==", "0", ":", "\n", "                                ", "hidden_likelihood", "=", "hidden_likelihood", "-", "C", "*", "torch", ".", "where", "(", "\n", "(", "hidden_list", "[", "layer_index", "]", "-", "forward_hidden", ")", ".", "abs", "(", ")", "-", "epsilon", ">", "0", ",", "\n", "(", "hidden_list", "[", "layer_index", "]", "-", "forward_hidden", ")", ".", "abs", "(", ")", "-", "epsilon", ",", "\n", "torch", ".", "zeros_like", "(", "hidden_list", "[", "0", "]", ")", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "                                ", "hidden_likelihood", "=", "hidden_likelihood", "-", "sse", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "-", "1", "]", "(", "softplus", "(", "hidden_list", "[", "layer_index", "-", "1", "]", ")", ")", ",", "\n", "hidden_list", "[", "layer_index", "]", ")", "/", "sigma_list", "[", "layer_index", "-", "1", "]", "\n", "\n", "", "hidden_likelihood", ".", "backward", "(", ")", "\n", "step_proposal_lr", "=", "proposal_lr", "[", "layer_index", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                                ", "momentum_list", "[", "layer_index", "]", "=", "(", "1", "-", "alpha", ")", "*", "momentum_list", "[", "\n", "layer_index", "]", "+", "step_proposal_lr", "/", "2", "*", "hidden_list", "[", "\n", "layer_index", "]", ".", "grad", "+", "torch", ".", "FloatTensor", "(", "\n", "hidden_list", "[", "layer_index", "]", ".", "shape", ")", ".", "to", "(", "device", ")", ".", "normal_", "(", ")", ".", "mul", "(", "\n", "np", ".", "sqrt", "(", "alpha", "*", "step_proposal_lr", "*", "temperature", "[", "layer_index", "]", ")", ")", "\n", "hidden_list", "[", "layer_index", "]", ".", "data", "+=", "momentum_list", "[", "layer_index", "]", "\n", "\n", "\n", "", "", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                        ", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                            ", "svr_list", "[", "i", "]", ".", "fit", "(", "x_train", ".", "cpu", "(", ")", ",", "hidden_list", "[", "0", "]", "[", ":", ",", "i", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ")", "\n", "\n", "", "", "for", "layer_index", "in", "range", "(", "num_hidden", ")", ":", "\n", "                        ", "if", "layer_index", "==", "num_hidden", "-", "1", ":", "\n", "                            ", "if", "regression_flag", ":", "\n", "                                ", "clf", "=", "Lasso", "(", "alpha", "=", "lasso_lambda", "[", "layer_index", "]", ",", "max_iter", "=", "-", "1", ")", ".", "fit", "(", "\n", "softplus", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "y_train", ".", "cpu", "(", ")", ")", "\n", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "\n", "np", ".", "array", "(", "clf", ".", "intercept_", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                                ", "clf", "=", "LogisticRegression", "(", "penalty", "=", "'l1'", ",", "C", "=", "1", "/", "lasso_lambda", "[", "layer_index", "]", ",", "solver", "=", "'saga'", ",", "\n", "max_iter", "=", "10000", ",", "multi_class", "=", "'multinomial'", ",", "n_jobs", "=", "5", ")", ".", "fit", "(", "\n", "softplus", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "y_train", ".", "cpu", "(", ")", ")", "\n", "if", "output_dim", "==", "2", ":", "\n", "                                    ", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "\n", "np", ".", "vstack", "(", "[", "-", "clf", ".", "coef_", ",", "clf", ".", "coef_", "]", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "\n", "np", ".", "array", "(", "[", "-", "clf", ".", "intercept_", ",", "clf", ".", "intercept_", "]", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                                    ", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "", "", "else", ":", "\n", "                            ", "clf", "=", "Lasso", "(", "alpha", "=", "lasso_lambda", "[", "layer_index", "]", ",", "max_iter", "=", "-", "1", ")", ".", "fit", "(", "\n", "softplus", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "\n", "hidden_list", "[", "layer_index", "+", "1", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "", "end_time", "=", "time", ".", "process_time", "(", ")", "\n", "time_used_path", "[", "epoch", "]", "=", "end_time", "-", "start_time", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                        ", "if", "regression_flag", ":", "\n", "                            ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                                ", "svr_out_train", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_train", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "if", "normalize_y_flag", ":", "\n", "                                ", "train_loss", "=", "train_loss", "*", "y_train_std", "*", "y_train_std", "\n", "\n", "", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                                ", "svr_out_test", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_test", ".", "cpu", "(", ")", ")", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_test", ")", ".", "to", "(", "device", ")", ")", "\n", "\n", "if", "normalize_y_flag", ":", "\n", "                                ", "output", "=", "output", "*", "y_train_std", "+", "y_train_mean", "\n", "\n", "", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                                ", "svr_out_val", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_val", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_val", ")", ".", "to", "(", "device", ")", ")", "\n", "if", "normalize_y_flag", ":", "\n", "                                ", "output", "=", "output", "*", "y_train_std", "+", "y_train_mean", "\n", "", "val_loss", "=", "loss_func", "(", "output", ",", "y_val", ")", "\n", "\n", "\n", "val_loss_path", "[", "epoch", "]", "=", "val_loss", "\n", "print", "(", "\"val loss: \"", ",", "val_loss", ")", "\n", "\n", "", "else", ":", "\n", "                            ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                                ", "svr_out_train", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_train", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "train_accuracy", "=", "prediction", ".", "eq", "(", "y_train", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntrain", "\n", "\n", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "train_accuracy_path", "[", "epoch", "]", "=", "train_accuracy", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ",", "'train accuracy: '", ",", "train_accuracy", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                                ", "svr_out_test", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_test", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_test", ")", ".", "to", "(", "device", ")", ")", "\n", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "test_accuracy", "=", "prediction", ".", "eq", "(", "y_test", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntest", "\n", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "test_accuracy_path", "[", "epoch", "]", "=", "test_accuracy", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ",", "'test accuracy: '", ",", "test_accuracy", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                                ", "svr_out_val", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_val", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_val", ")", ".", "to", "(", "device", ")", ")", "\n", "val_loss", "=", "loss_func", "(", "output", ",", "y_val", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "val_accuracy", "=", "prediction", ".", "eq", "(", "y_val", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "nval", "\n", "\n", "val_loss_path", "[", "epoch", "]", "=", "val_loss", "\n", "val_accuracy_path", "[", "epoch", "]", "=", "val_accuracy", "\n", "print", "(", "\"val loss: \"", ",", "val_loss", ",", "'val accuracy: '", ",", "val_accuracy", ")", "\n", "\n", "\n", "", "", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "PATH", "+", "'model'", "+", "str", "(", "epoch", ")", "+", "'.pt'", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                        ", "filename", "=", "PATH", "+", "'model_svr'", "+", "str", "(", "epoch", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'.pt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "svr_list", "[", "i", "]", ",", "f", ",", "protocol", "=", "4", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "if", "args", ".", "confidence_interval_flag", ":", "\n", "                        ", "filename", "=", "PATH", "+", "'hidden_state'", "+", "str", "(", "epoch", ")", "+", "'.pt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "hidden_list", ",", "f", ",", "protocol", "=", "4", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "time_used_path", "[", "epoch", "]", "=", "end_time", "-", "start_time", "\n", "\n", "if", "regression_flag", ":", "\n", "                        ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "[", "train_loss_path", ",", "val_loss_path", ",", "test_loss_path", ",", "time_used_path", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "                        ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "\n", "[", "train_loss_path", ",", "test_loss_path", ",", "val_loss_path", ",", "train_accuracy_path", ",", "val_accuracy_path", ",", "test_accuracy_path", ",", "time_used_path", "]", ",", "\n", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "if", "args", ".", "confidence_interval_flag", ":", "\n", "                        ", "filename", "=", "PATH", "+", "'data.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "\n", "[", "x_train", ",", "x_test", ",", "x_val", ",", "y_val", ",", "y_train", ",", "y_test", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "", "best_val_loss_list", "[", "cross", "]", "=", "val_loss_path", ".", "min", "(", ")", "\n", "\n", "", "best_cross", "=", "np", ".", "argmin", "(", "best_val_loss_list", ")", "\n", "C", "=", "C_list", "[", "best_cross", "]", "\n", "\n", "print", "(", "'best C = '", ",", "C", ")", "\n", "\n", "\n", "x_train", "=", "x_data", "\n", "y_train", "=", "y_data", "\n", "x_val", "=", "x_test", "\n", "y_val", "=", "y_test", "\n", "\n", "ntrain", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "nval", "=", "x_val", ".", "shape", "[", "0", "]", "\n", "ntest", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "dim", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "\n", "\n", "sse", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", "\n", "if", "regression_flag", ":", "\n", "                ", "output_dim", "=", "1", "\n", "loss_func", "=", "nn", ".", "MSELoss", "(", ")", "\n", "loss_func_sum", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "val_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "if", "normalize_y_flag", ":", "\n", "                    ", "y_train_mean", "=", "y_train", ".", "mean", "(", ")", "\n", "y_train_std", "=", "y_train", ".", "std", "(", ")", "\n", "y_train", "=", "(", "y_train", "-", "y_train_mean", ")", "/", "y_train_std", "\n", "", "", "else", ":", "\n", "                ", "output_dim", "=", "int", "(", "(", "y_test", ".", "max", "(", ")", "+", "1", ")", ".", "item", "(", ")", ")", "\n", "loss_func", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "loss_func_sum", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'sum'", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "val_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "train_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "val_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "", "time_used_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "\n", "net", "=", "Net", "(", "num_hidden", ",", "hidden_dim", ",", "output_dim", ")", "\n", "net", ".", "to", "(", "device", ")", "\n", "\n", "\n", "PATH", "=", "args", ".", "base_path", "+", "data_name", "+", "'/'", "+", "'data_split_'", "+", "str", "(", "data_seed", ")", "+", "'/'", "+", "str", "(", "\n", "cross_validate_index", ")", "+", "'/'", "+", "'best_C_'", "+", "str", "(", "\n", "C", ")", "+", "args", ".", "model_path", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "os", ".", "makedirs", "(", "PATH", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Python >2.5", "\n", "                    ", "if", "exc", ".", "errno", "==", "errno", ".", "EEXIST", "and", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "                        ", "pass", "\n", "", "else", ":", "\n", "                        ", "raise", "\n", "\n", "", "", "", "proposal_lr", "=", "args", ".", "lr", "\n", "sigma_list", "=", "args", ".", "sigma", "\n", "temperature", "=", "args", ".", "temperature", "\n", "lasso_lambda", "=", "args", ".", "lasso", "\n", "\n", "if", "len", "(", "proposal_lr", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "                ", "temp_proposal_lr", "=", "proposal_lr", "[", "0", "]", "\n", "proposal_lr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "                    ", "proposal_lr", ".", "append", "(", "temp_proposal_lr", ")", "\n", "\n", "", "", "if", "len", "(", "sigma_list", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "                ", "temp_sigma_list", "=", "sigma_list", "[", "0", "]", "\n", "sigma_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "                    ", "sigma_list", ".", "append", "(", "temp_sigma_list", ")", "\n", "\n", "", "", "if", "len", "(", "temperature", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "                ", "temp_temperature", "=", "temperature", "[", "0", "]", "\n", "temperature", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "                    ", "temperature", ".", "append", "(", "temp_temperature", ")", "\n", "\n", "", "", "if", "len", "(", "lasso_lambda", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "                ", "temp_lasso_lambda", "=", "lasso_lambda", "[", "0", "]", "\n", "lasso_lambda", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "                    ", "lasso_lambda", ".", "append", "(", "temp_lasso_lambda", ")", "\n", "\n", "", "", "epsilon", "=", "args", ".", "epsilon", "\n", "\n", "temp_init", "=", "nn", ".", "Linear", "(", "dim", ",", "hidden_dim", "[", "0", "]", ")", "\n", "temp_init", ".", "to", "(", "device", ")", "\n", "svr_output_init", "=", "temp_init", "(", "x_train", ")", "\n", "\n", "\n", "if", "args", ".", "p_gamma", "is", "None", ":", "\n", "                ", "p_gamma", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "                ", "p_gamma", "=", "args", ".", "p_gamma", "\n", "\n", "", "kernel", "=", "args", ".", "kernel", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "svr_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "\n", "                    ", "temp", "=", "SVR", "(", "C", "=", "C", ",", "epsilon", "=", "epsilon", ",", "gamma", "=", "1.0", "/", "p_gamma", ",", "kernel", "=", "kernel", ")", "\n", "svr_list", ".", "append", "(", "temp", ")", "\n", "\n", "", "", "svr_out_val", "=", "np", ".", "zeros", "(", "[", "nval", ",", "hidden_dim", "[", "0", "]", "]", ")", "\n", "\n", "svr_out_test", "=", "np", ".", "zeros", "(", "[", "ntest", ",", "hidden_dim", "[", "0", "]", "]", ")", "\n", "\n", "svr_out_train", "=", "svr_output_init", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "\n", "                ", "start_time", "=", "time", ".", "process_time", "(", ")", "\n", "\n", "hidden_list", "=", "[", "]", "\n", "momentum_list", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "hidden_list", ".", "append", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "momentum_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "hidden_list", "[", "-", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "                        ", "hidden_list", ".", "append", "(", "net", ".", "fc_list", "[", "i", "]", "(", "softplus", "(", "hidden_list", "[", "-", "1", "]", ")", ")", ")", "\n", "momentum_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "hidden_list", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "hidden_list", ".", "__len__", "(", ")", ")", ":", "\n", "                    ", "hidden_list", "[", "i", "]", ".", "requires_grad", "=", "True", "\n", "\n", "", "MH_step", "=", "args", ".", "MH_step", "\n", "alpha", "=", "args", ".", "alpha", "\n", "\n", "forward_hidden", "=", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", "\n", "\n", "for", "repeat", "in", "range", "(", "MH_step", ")", ":", "\n", "                    ", "for", "layer_index", "in", "reversed", "(", "range", "(", "num_hidden", ")", ")", ":", "\n", "                        ", "if", "hidden_list", "[", "layer_index", "]", ".", "grad", "is", "not", "None", ":", "\n", "                            ", "hidden_list", "[", "layer_index", "]", ".", "grad", ".", "zero_", "(", ")", "\n", "\n", "", "if", "layer_index", "==", "num_hidden", "-", "1", ":", "\n", "                            ", "hidden_likelihood", "=", "-", "loss_func_sum", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", "(", "softplus", "(", "hidden_list", "[", "layer_index", "]", ")", ")", ",", "\n", "y_train", ")", "/", "sigma_list", "[", "layer_index", "]", "\n", "", "else", ":", "\n", "                            ", "hidden_likelihood", "=", "-", "sse", "(", "net", ".", "fc_list", "[", "layer_index", "]", "(", "softplus", "(", "hidden_list", "[", "layer_index", "]", ")", ")", ",", "\n", "hidden_list", "[", "layer_index", "+", "1", "]", ")", "/", "sigma_list", "[", "layer_index", "]", "\n", "", "if", "layer_index", "==", "0", ":", "\n", "                            ", "hidden_likelihood", "=", "hidden_likelihood", "-", "C", "*", "torch", ".", "where", "(", "\n", "(", "hidden_list", "[", "layer_index", "]", "-", "forward_hidden", ")", ".", "abs", "(", ")", "-", "epsilon", ">", "0", ",", "\n", "(", "hidden_list", "[", "layer_index", "]", "-", "forward_hidden", ")", ".", "abs", "(", ")", "-", "epsilon", ",", "\n", "torch", ".", "zeros_like", "(", "hidden_list", "[", "0", "]", ")", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "                            ", "hidden_likelihood", "=", "hidden_likelihood", "-", "sse", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "-", "1", "]", "(", "softplus", "(", "hidden_list", "[", "layer_index", "-", "1", "]", ")", ")", ",", "\n", "hidden_list", "[", "layer_index", "]", ")", "/", "sigma_list", "[", "layer_index", "-", "1", "]", "\n", "\n", "", "hidden_likelihood", ".", "backward", "(", ")", "\n", "step_proposal_lr", "=", "proposal_lr", "[", "layer_index", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                            ", "momentum_list", "[", "layer_index", "]", "=", "(", "1", "-", "alpha", ")", "*", "momentum_list", "[", "\n", "layer_index", "]", "+", "step_proposal_lr", "/", "2", "*", "hidden_list", "[", "\n", "layer_index", "]", ".", "grad", "+", "torch", ".", "FloatTensor", "(", "\n", "hidden_list", "[", "layer_index", "]", ".", "shape", ")", ".", "to", "(", "device", ")", ".", "normal_", "(", ")", ".", "mul", "(", "\n", "np", ".", "sqrt", "(", "alpha", "*", "step_proposal_lr", "*", "temperature", "[", "layer_index", "]", ")", ")", "\n", "hidden_list", "[", "layer_index", "]", ".", "data", "+=", "momentum_list", "[", "layer_index", "]", "\n", "\n", "\n", "", "", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                        ", "svr_list", "[", "i", "]", ".", "fit", "(", "x_train", ".", "cpu", "(", ")", ",", "hidden_list", "[", "0", "]", "[", ":", ",", "i", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ")", "\n", "\n", "\n", "", "", "for", "layer_index", "in", "range", "(", "num_hidden", ")", ":", "\n", "                    ", "if", "layer_index", "==", "num_hidden", "-", "1", ":", "\n", "                        ", "if", "regression_flag", ":", "\n", "                            ", "clf", "=", "Lasso", "(", "alpha", "=", "lasso_lambda", "[", "layer_index", "]", ",", "max_iter", "=", "-", "1", ")", ".", "fit", "(", "\n", "softplus", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "y_train", ".", "cpu", "(", ")", ")", "\n", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "\n", "np", ".", "array", "(", "clf", ".", "intercept_", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                            ", "clf", "=", "LogisticRegression", "(", "penalty", "=", "'l1'", ",", "C", "=", "1", "/", "lasso_lambda", "[", "layer_index", "]", ",", "solver", "=", "'saga'", ",", "\n", "max_iter", "=", "10000", ",", "multi_class", "=", "'multinomial'", ",", "n_jobs", "=", "5", ")", ".", "fit", "(", "\n", "softplus", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "y_train", ".", "cpu", "(", ")", ")", "\n", "if", "output_dim", "==", "2", ":", "\n", "                                ", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "\n", "np", ".", "vstack", "(", "[", "-", "clf", ".", "coef_", ",", "clf", ".", "coef_", "]", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "\n", "np", ".", "array", "(", "[", "-", "clf", ".", "intercept_", ",", "clf", ".", "intercept_", "]", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                                ", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "", "", "else", ":", "\n", "                        ", "clf", "=", "Lasso", "(", "alpha", "=", "lasso_lambda", "[", "layer_index", "]", ",", "max_iter", "=", "-", "1", ")", ".", "fit", "(", "\n", "softplus", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "\n", "hidden_list", "[", "layer_index", "+", "1", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "", "end_time", "=", "time", ".", "process_time", "(", ")", "\n", "time_used_path", "[", "epoch", "]", "=", "end_time", "-", "start_time", "\n", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "if", "regression_flag", ":", "\n", "                        ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                            ", "svr_out_train", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_train", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "\n", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "if", "normalize_y_flag", ":", "\n", "                            ", "train_loss", "=", "train_loss", "*", "y_train_std", "*", "y_train_std", "\n", "\n", "", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                            ", "svr_out_test", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_test", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_test", ")", ".", "to", "(", "device", ")", ")", "\n", "\n", "if", "normalize_y_flag", ":", "\n", "                            ", "output", "=", "output", "*", "y_train_std", "+", "y_train_mean", "\n", "\n", "", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                            ", "svr_out_val", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_val", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_val", ")", ".", "to", "(", "device", ")", ")", "\n", "if", "normalize_y_flag", ":", "\n", "                            ", "output", "=", "output", "*", "y_train_std", "+", "y_train_mean", "\n", "", "val_loss", "=", "loss_func", "(", "output", ",", "y_val", ")", "\n", "\n", "val_loss_path", "[", "epoch", "]", "=", "val_loss", "\n", "print", "(", "\"val loss: \"", ",", "val_loss", ")", "\n", "\n", "", "else", ":", "\n", "                        ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                            ", "svr_out_train", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_train", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "train_accuracy", "=", "prediction", ".", "eq", "(", "y_train", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntrain", "\n", "\n", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "train_accuracy_path", "[", "epoch", "]", "=", "train_accuracy", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ",", "'train accuracy: '", ",", "train_accuracy", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                            ", "svr_out_test", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_test", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_test", ")", ".", "to", "(", "device", ")", ")", "\n", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "test_accuracy", "=", "prediction", ".", "eq", "(", "y_test", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntest", "\n", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "test_accuracy_path", "[", "epoch", "]", "=", "test_accuracy", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ",", "'test accuracy: '", ",", "test_accuracy", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                            ", "svr_out_val", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_val", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_val", ")", ".", "to", "(", "device", ")", ")", "\n", "val_loss", "=", "loss_func", "(", "output", ",", "y_val", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "val_accuracy", "=", "prediction", ".", "eq", "(", "y_val", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "nval", "\n", "\n", "val_loss_path", "[", "epoch", "]", "=", "val_loss", "\n", "val_accuracy_path", "[", "epoch", "]", "=", "val_accuracy", "\n", "print", "(", "\"val loss: \"", ",", "val_loss", ",", "'val accuracy: '", ",", "val_accuracy", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "PATH", "+", "'model'", "+", "str", "(", "epoch", ")", "+", "'.pt'", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                    ", "filename", "=", "PATH", "+", "'model_svr'", "+", "str", "(", "epoch", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'.pt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "svr_list", "[", "i", "]", ",", "f", ",", "protocol", "=", "4", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "if", "args", ".", "confidence_interval_flag", ":", "\n", "                    ", "filename", "=", "PATH", "+", "'hidden_state'", "+", "str", "(", "epoch", ")", "+", "'.pt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "hidden_list", ",", "f", ",", "protocol", "=", "4", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "time_used_path", "[", "epoch", "]", "=", "end_time", "-", "start_time", "\n", "\n", "if", "regression_flag", ":", "\n", "                    ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "[", "train_loss_path", ",", "val_loss_path", ",", "test_loss_path", ",", "time_used_path", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "                    ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "\n", "[", "train_loss_path", ",", "test_loss_path", ",", "val_loss_path", ",", "train_accuracy_path", ",", "val_accuracy_path", ",", "\n", "test_accuracy_path", ",", "time_used_path", "]", ",", "\n", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "if", "args", ".", "confidence_interval_flag", ":", "\n", "                    ", "filename", "=", "PATH", "+", "'data.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "\n", "[", "x_train", ",", "x_test", ",", "x_val", ",", "y_val", ",", "y_train", ",", "y_test", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn.Net.__init__": [[44, 56], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "range", "knn.Net.fc_list.append", "knn.Net.add_module", "knn.Net.fc_list.append", "knn.Net.add_module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "str", "str"], "methods", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_hidden", ",", "hidden_dim", ",", "input_dim", ",", "output_dim", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_hidden", "=", "num_hidden", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "input_dim", ",", "hidden_dim", "[", "0", "]", ")", "\n", "self", ".", "fc_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "            ", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "i", "]", ",", "hidden_dim", "[", "i", "+", "1", "]", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "i", "+", "2", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "-", "1", "]", ",", "output_dim", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "num_hidden", "+", "1", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn.Net.forward": [[57, 63], ["torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "range", "knn.Net.fc", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc", "(", "x", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_hidden", "-", "1", ")", ":", "\n", "            ", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc_list", "[", "i", "]", "(", "x", ")", ")", "\n", "", "x", "=", "self", ".", "fc_list", "[", "-", "1", "]", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn.compute_distance": [[66, 91], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.abs", "X.size", "Y.size", "torch.sum.expand", "torch.sum.transpose().expand", "torch.sum.transpose"], "function", ["None"], ["", "", "def", "compute_distance", "(", "X", ",", "Y", ")", ":", "\n", "    ", "r\"\"\"Compute the matrix of all squared pairwise distances.\n\n    Arguments\n    ---------\n    X : torch.Tensor or Variable\n        The first sample, should be of shape ``(n_1, d)``.\n    Y : torch.Tensor or Variable\n        The second sample, should be of shape ``(n_2, d)``.\n\n    Returns\n    -------\n    torch.Tensor or Variable\n        Matrix of shape (n_1, n_2). The [i, j]-th entry is equal to\n        ``|| X[i, :] - Y[j, :] ||_2^2``.\"\"\"", "\n", "n_1", ",", "n_2", "=", "X", ".", "size", "(", "0", ")", ",", "Y", ".", "size", "(", "0", ")", "\n", "\n", "# Compute (a - b)^2 = a^2 + b^2 -2ab", "\n", "norms_1", "=", "torch", ".", "sum", "(", "X", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "norms_2", "=", "torch", ".", "sum", "(", "Y", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "norms", "=", "(", "norms_1", ".", "expand", "(", "n_1", ",", "n_2", ")", "+", "norms_2", ".", "transpose", "(", "0", ",", "1", ")", ".", "expand", "(", "n_1", ",", "n_2", ")", ")", "\n", "distances_squared", "=", "norms", "-", "2", "*", "X", "@", "Y", ".", "T", "\n", "\n", "# Take the absolute value due to numerical imprecision", "\n", "return", "torch", ".", "abs", "(", "distances_squared", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn.Gaussian_kernel": [[92, 94], ["None"], "function", ["None"], ["", "def", "Gaussian_kernel", "(", "x", ",", "y", ",", "sigma", "=", "1", ")", ":", "\n", "    ", "return", "(", "x", "-", "y", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", ")", ".", "mul", "(", "-", "(", "0.5", "/", "sigma", ")", ")", ".", "exp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn.Gaussian_kernel_data": [[95, 111], ["knn.compute_distance", "torch.exp", "torch.exp", "torch.exp", "knn.compute_distance", "torch.exp", "torch.exp", "torch.exp", "knn.compute_distance", "torch.exp", "torch.exp", "torch.exp"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance"], ["", "def", "Gaussian_kernel_data", "(", "x_train", ",", "x_val", "=", "None", ",", "x_test", "=", "None", ",", "sigma", "=", "1", ")", ":", "\n", "    ", "distances_train", "=", "compute_distance", "(", "x_train", ",", "x_train", ")", "\n", "kernel_train", "=", "torch", ".", "exp", "(", "-", "distances_train", "/", "(", "2", "*", "sigma", ")", ")", "\n", "\n", "if", "x_val", "is", "not", "None", ":", "\n", "        ", "distances_val", "=", "compute_distance", "(", "x_val", ",", "x_train", ")", "\n", "kernel_val", "=", "torch", ".", "exp", "(", "-", "distances_val", "/", "(", "2", "*", "sigma", ")", ")", "\n", "", "else", ":", "\n", "        ", "kernel_val", "=", "None", "\n", "\n", "", "if", "x_test", "is", "not", "None", ":", "\n", "        ", "distances_test", "=", "compute_distance", "(", "x_test", ",", "x_train", ")", "\n", "kernel_test", "=", "torch", ".", "exp", "(", "-", "distances_test", "/", "(", "2", "*", "sigma", ")", ")", "\n", "", "else", ":", "\n", "        ", "kernel_test", "=", "None", "\n", "", "return", "kernel_train", ",", "kernel_val", ",", "kernel_test", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn.main": [[113, 233], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "process_data.preprocess_data", "torch.device", "torch.device", "torch.device", "knn.Gaussian_kernel_data", "numpy.zeros", "knn.Net", "Net.to", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "numpy.arange", "range", "x_train.std", "x_test.std", "torch.MSELoss", "numpy.zeros", "numpy.zeros", "int", "torch.CrossEntropyLoss", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "os.path.isdir", "Net.parameters", "time.process_time", "numpy.random.shuffle", "range", "torch.save", "torch.save", "torch.save", "time.process_time", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "x_train.mean", "x_test.mean", "os.makedirs", "torch.optim.SGD.zero_grad", "nn.CrossEntropyLoss.", "loss_func.backward", "Net.parameters", "torch.optim.SGD.step", "torch.no_grad", "torch.no_grad", "torch.no_grad", "Net.state_dict", "x_train_orig.var", "Net.", "para.abs().sum().mul", "print", "Net.", "nn.CrossEntropyLoss.", "print", "Net.", "nn.CrossEntropyLoss.", "print", "print", "Net.", "nn.CrossEntropyLoss.", "print", "Net.", "nn.CrossEntropyLoss.", "print", "os.path.isdir", "net.data.max", "prediction.eq().sum().item", "net.data.max", "prediction.eq().sum().item", "str", "y_test.max", "para.abs().sum", "prediction.eq().sum", "prediction.eq().sum", "para.abs", "prediction.eq", "prediction.eq"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.process_data.preprocess_data", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.knn.Gaussian_kernel_data"], ["", "def", "main", "(", ")", ":", "\n", "    ", "import", "pickle", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "data_name", "=", "args", ".", "data_name", "\n", "cross_validate_index", "=", "args", ".", "cross_validate", "\n", "\n", "num_hidden", "=", "args", ".", "layer", "\n", "hidden_dim", "=", "args", ".", "unit", "\n", "\n", "regression_flag", "=", "args", ".", "regression_flag", "\n", "num_epochs", "=", "args", ".", "nepoch", "\n", "\n", "x_train_orig", ",", "y_train", ",", "x_test_orig", ",", "y_test", "=", "preprocess_data", "(", "data_name", ",", "cross_validate_index", ")", "\n", "dim", "=", "x_train_orig", ".", "shape", "[", "1", "]", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "x_train", ",", "x_val", ",", "x_test", "=", "Gaussian_kernel_data", "(", "x_train_orig", ",", "None", ",", "x_test_orig", ",", "sigma", "=", "0.5", "*", "dim", "*", "x_train_orig", ".", "var", "(", ")", ")", "\n", "\n", "ntrain", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "ntest", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "dim", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "\n", "x_train", "=", "(", "x_train", "-", "x_train", ".", "mean", "(", "0", ")", ")", "/", "x_train", ".", "std", "(", "0", ")", "\n", "x_test", "=", "(", "x_test", "-", "x_test", ".", "mean", "(", "0", ")", ")", "/", "x_test", ".", "std", "(", "0", ")", "\n", "\n", "if", "regression_flag", ":", "\n", "        ", "output_dim", "=", "1", "\n", "loss_func", "=", "nn", ".", "MSELoss", "(", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "", "else", ":", "\n", "        ", "output_dim", "=", "int", "(", "(", "y_test", ".", "max", "(", ")", "+", "1", ")", ".", "item", "(", ")", ")", "\n", "loss_func", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "train_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "", "time_used_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "\n", "net", "=", "Net", "(", "num_hidden", ",", "hidden_dim", ",", "dim", ",", "output_dim", ")", "\n", "net", ".", "to", "(", "device", ")", "\n", "\n", "PATH", "=", "args", ".", "base_path", "+", "data_name", "+", "'_knn/'", "+", "args", ".", "model_path", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "PATH", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Python >2.5", "\n", "            ", "if", "exc", ".", "errno", "==", "errno", ".", "EEXIST", "and", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "\n", "", "", "", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "net", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "index", "=", "np", ".", "arange", "(", "ntrain", ")", "\n", "subn", "=", "args", ".", "batch_train", "\n", "\n", "lasso_lambda", "=", "args", ".", "lasso", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "process_time", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "index", ")", "\n", "for", "iter", "in", "range", "(", "ntrain", "//", "subn", ")", ":", "\n", "            ", "subsample", "=", "index", "[", "(", "iter", "*", "subn", ")", ":", "(", "(", "iter", "+", "1", ")", "*", "subn", ")", "]", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", "=", "loss_func", "(", "net", "(", "x_train", "[", "subsample", ",", "]", ")", ",", "y_train", "[", "subsample", ",", "]", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "para", "in", "net", ".", "parameters", "(", ")", ":", "\n", "                ", "loss", "+=", "para", ".", "abs", "(", ")", ".", "sum", "(", ")", ".", "mul", "(", "lasso_lambda", ")", "\n", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "regression_flag", ":", "\n", "                ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "output", "=", "net", "(", "x_train", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ")", "\n", "\n", "output", "=", "net", "(", "x_test", ")", "\n", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ")", "\n", "\n", "", "else", ":", "\n", "                ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "output", "=", "net", "(", "x_train", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "train_accuracy", "=", "prediction", ".", "eq", "(", "y_train", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntrain", "\n", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "train_accuracy_path", "[", "epoch", "]", "=", "train_accuracy", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ",", "'train accuracy: '", ",", "train_accuracy", ")", "\n", "\n", "output", "=", "net", "(", "x_test", ")", "\n", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "test_accuracy", "=", "prediction", ".", "eq", "(", "y_test", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntest", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "test_accuracy_path", "[", "epoch", "]", "=", "test_accuracy", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ",", "'test accuracy: '", ",", "test_accuracy", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "PATH", "+", "'model'", "+", "str", "(", "epoch", ")", "+", "'.pt'", ")", "\n", "end_time", "=", "time", ".", "process_time", "(", ")", "\n", "time_used_path", "[", "epoch", "]", "=", "end_time", "-", "start_time", "\n", "\n", "", "if", "regression_flag", ":", "\n", "        ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "[", "train_loss_path", ",", "test_loss_path", ",", "time_used_path", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "[", "train_loss_path", ",", "test_loss_path", ",", "train_accuracy_path", ",", "test_accuracy_path", ",", "time_used_path", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.Net.__init__": [[16, 20], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "dim", ",", "5", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "5", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.Net.forward": [[21, 25], ["torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "confidence_interval.Net.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "torch", ".", "tanh", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance": [[26, 35], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "X.size", "Y.size", "torch.sum.expand", "torch.sum.transpose().expand", "torch.sum.transpose"], "function", ["None"], ["", "", "def", "compute_distance", "(", "X", ",", "Y", ")", ":", "\n", "    ", "n_1", ",", "n_2", "=", "X", ".", "size", "(", "0", ")", ",", "Y", ".", "size", "(", "0", ")", "\n", "\n", "norms_1", "=", "torch", ".", "sum", "(", "X", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "norms_2", "=", "torch", ".", "sum", "(", "Y", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "norms", "=", "(", "norms_1", ".", "expand", "(", "n_1", ",", "n_2", ")", "+", "norms_2", ".", "transpose", "(", "0", ",", "1", ")", ".", "expand", "(", "n_1", ",", "n_2", ")", ")", "\n", "distances_squared", "=", "norms", "-", "2", "*", "X", "@", "Y", ".", "T", "\n", "\n", "return", "torch", ".", "abs", "(", "distances_squared", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.RBF_kernel": [[36, 40], ["confidence_interval.compute_distance", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance"], ["", "def", "RBF_kernel", "(", "x", ",", "y", ",", "gamma", ")", ":", "\n", "    ", "distance", "=", "compute_distance", "(", "x", ",", "y", ")", "\n", "kernel", "=", "torch", ".", "exp", "(", "-", "gamma", "*", "distance", ")", "\n", "return", "kernel", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.RBF_kernel_data": [[42, 63], ["confidence_interval.compute_distance", "print", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "print", "confidence_interval.compute_distance", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "confidence_interval.compute_distance", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "x_train.var"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance", "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.compute_distance"], ["", "def", "RBF_kernel_data", "(", "x_train", ",", "x_val", "=", "None", ",", "x_test", "=", "None", ",", "gamma", "=", "None", ")", ":", "\n", "    ", "if", "gamma", "is", "None", ":", "\n", "        ", "gamma", "=", "1", "/", "(", "x_train", ".", "shape", "[", "1", "]", "*", "x_train", ".", "var", "(", ")", ")", "\n", "\n", "", "distances_train", "=", "compute_distance", "(", "x_train", ",", "x_train", ")", "\n", "print", "(", "'haha'", ")", "\n", "kernel_train", "=", "torch", ".", "exp", "(", "-", "gamma", "*", "distances_train", ")", "\n", "\n", "if", "x_val", "is", "not", "None", ":", "\n", "        ", "distances_val", "=", "compute_distance", "(", "x_val", ",", "x_train", ")", "\n", "kernel_val", "=", "torch", ".", "exp", "(", "-", "gamma", "*", "distances_val", ")", "\n", "", "else", ":", "\n", "        ", "kernel_val", "=", "None", "\n", "", "print", "(", "'haha2'", ")", "\n", "\n", "if", "x_test", "is", "not", "None", ":", "\n", "        ", "distances_test", "=", "compute_distance", "(", "x_test", ",", "x_train", ")", "\n", "kernel_test", "=", "torch", ".", "exp", "(", "-", "gamma", "*", "distances_test", ")", "\n", "", "else", ":", "\n", "        ", "kernel_test", "=", "None", "\n", "", "return", "kernel_train", ",", "kernel_val", ",", "kernel_test", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.confidence_interval.dtanh": [[65, 67], ["torch.tanh().pow", "torch.tanh().pow", "torch.tanh().pow", "torch.tanh().pow", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "function", ["None"], ["", "def", "dtanh", "(", "x", ")", ":", "\n", "    ", "return", "1", "-", "torch", ".", "tanh", "(", "x", ")", ".", "pow", "(", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.Net.__init__": [[56, 65], ["torch.Module.__init__", "range", "kstonet_parallel.Net.fc_list.append", "kstonet_parallel.Net.add_module", "kstonet_parallel.Net.fc_list.append", "kstonet_parallel.Net.add_module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "str", "str"], "methods", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_hidden", ",", "hidden_dim", ",", "output_dim", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_hidden", "=", "num_hidden", "\n", "self", ".", "fc_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "            ", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "i", "]", ",", "hidden_dim", "[", "i", "+", "1", "]", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "i", "+", "2", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "", "self", ".", "fc_list", ".", "append", "(", "nn", ".", "Linear", "(", "hidden_dim", "[", "-", "1", "]", ",", "output_dim", ")", ")", "\n", "self", ".", "add_module", "(", "'fc'", "+", "str", "(", "num_hidden", "+", "1", ")", ",", "self", ".", "fc_list", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.Net.forward": [[67, 73], ["torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "range", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "torch", ".", "tanh", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_hidden", "-", "1", ")", ":", "\n", "            ", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc_list", "[", "i", "]", "(", "x", ")", ")", "\n", "", "x", "=", "self", ".", "fc_list", "[", "-", "1", "]", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.svr_solver": [[75, 78], ["svr_list[].fit"], "function", ["None"], ["", "", "def", "svr_solver", "(", "svr_list", ",", "X", ",", "Y", ",", "i", ")", ":", "\n", "    ", "svr_list", "[", "i", "]", ".", "fit", "(", "X", ",", "Y", "[", ":", ",", "i", "]", ")", "\n", "return", "svr_list", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.lasso_solver": [[79, 84], ["solver.fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "function", ["None"], ["", "def", "lasso_solver", "(", "weight", ",", "bias", ",", "solver", ",", "device", ",", "X", ",", "Y", ",", "i", ")", ":", "\n", "    ", "clf", "=", "solver", ".", "fit", "(", "X", ",", "Y", "[", ":", ",", "i", "]", ")", "\n", "dim", "=", "weight", ".", "shape", "[", "1", "]", "\n", "weight", ".", "data", "[", "i", ",", ":", "]", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "dim", ")", ".", "to", "(", "device", ")", "\n", "bias", ".", "data", "[", "i", "]", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.kstonet_parallel.main": [[85, 367], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "process_data.preprocess_data", "torch.device", "torch.device", "torch.device", "torch.MSELoss", "numpy.zeros", "kstonet_parallel.Net", "Net.to", "torch.Linear", "nn.Linear.to", "nn.Linear.", "numpy.zeros", "temp_init.data.cpu().numpy", "range", "torch.MSELoss", "torch.MSELoss", "numpy.zeros", "numpy.zeros", "int", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "os.path.isdir", "range", "range", "range", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "time.process_time", "range", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "range", "range", "time.process_time", "torch.save", "torch.save", "torch.save", "range", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "y_train.mean", "y_train.std", "os.makedirs", "len", "proposal_lr.append", "len", "sigma_list.append", "len", "temperature.append", "len", "lasso_lambda.append", "sklearn.svm.SVR", "svr_list.append", "temp_init.data.cpu", "torch.no_grad", "torch.no_grad", "torch.no_grad", "hidden_list.append", "momentum_list.append", "range", "hidden_list.__len__", "reversed", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "Net.state_dict", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "open", "pickle.dump", "open.close", "str", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "hidden_list.append", "momentum_list.append", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "hidden_likelihood.backward", "joblib.Parallel", "sklearn.linear_model.Lasso", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "hidden_list[].cpu().detach", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "range", "Net.", "nn.CrossEntropyLoss.", "print", "os.path.isdir", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "hidden_list[].grad.zero_", "torch.no_grad", "torch.no_grad", "torch.no_grad", "sklearn.linear_model.Lasso().fit", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "sklearn.linear_model.LogisticRegression().fit", "joblib.Parallel", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "svr_list[].predict", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "net.data.max", "prediction.eq().sum().item", "str", "str", "str", "y_test.max", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.tanh", "torch.tanh", "torch.tanh", "torch.FloatTensor().to().normal_().mul", "torch.FloatTensor().to().normal_().mul", "torch.FloatTensor().to().normal_().mul", "joblib.delayed", "x_train.cpu", "hidden_list[].cpu().detach", "range", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "y_train.cpu", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "torch.tanh().cpu().detach", "y_train.cpu", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.FloatTensor().reshape().to", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "hidden_list[].cpu", "x_train.cpu", "x_test.cpu", "x_train.cpu", "x_test.cpu", "nn.CrossEntropyLoss.", "nn.MSELoss.", "torch.where().sum", "torch.where().sum", "torch.where().sum", "nn.MSELoss.", "numpy.sqrt", "sklearn.linear_model.Lasso", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "sklearn.linear_model.LogisticRegression", "joblib.delayed", "range", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq().sum", "str", "torch.FloatTensor().to().normal_", "torch.FloatTensor().to().normal_", "torch.FloatTensor().to().normal_", "hidden_list[].cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.tanh().cpu", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.FloatTensor().reshape", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.where", "torch.where", "torch.where", "torch.tanh", "torch.tanh", "torch.tanh", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "prediction.eq", "prediction.eq", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.tanh", "torch.tanh", "torch.tanh", "numpy.array", "torch.tanh", "torch.tanh", "torch.tanh", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "numpy.vstack", "numpy.array", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "function", ["home.repos.pwc.inspect_result.sylydya_a-kernel-expanded-stochastic-neural-network.None.process_data.preprocess_data"], ["", "def", "main", "(", ")", ":", "\n", "    ", "import", "pickle", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "data_name", "=", "args", ".", "data_name", "\n", "cross_validate_index", "=", "args", ".", "cross_validate", "\n", "\n", "num_hidden", "=", "args", ".", "layer", "\n", "hidden_dim", "=", "args", ".", "unit", "\n", "\n", "regression_flag", "=", "args", ".", "regression_flag", "\n", "normalize_y_flag", "=", "args", ".", "normalize_y_flag", "\n", "\n", "\n", "num_epochs", "=", "args", ".", "nepoch", "\n", "\n", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", "=", "preprocess_data", "(", "data_name", ",", "cross_validate_index", ",", "seed", "=", "args", ".", "seed", ")", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "ntrain", "=", "x_train", ".", "shape", "[", "0", "]", "\n", "ntest", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "dim", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "\n", "\n", "\n", "sse", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", "\n", "if", "regression_flag", ":", "\n", "        ", "output_dim", "=", "1", "\n", "loss_func", "=", "nn", ".", "MSELoss", "(", ")", "\n", "loss_func_sum", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'sum'", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "if", "normalize_y_flag", ":", "\n", "            ", "y_train_mean", "=", "y_train", ".", "mean", "(", ")", "\n", "y_train_std", "=", "y_train", ".", "std", "(", ")", "\n", "y_train", "=", "(", "y_train", "-", "y_train_mean", ")", "/", "y_train_std", "\n", "", "", "else", ":", "\n", "        ", "output_dim", "=", "int", "(", "(", "y_test", ".", "max", "(", ")", "+", "1", ")", ".", "item", "(", ")", ")", "\n", "loss_func", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "loss_func_sum", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'sum'", ")", "\n", "train_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_loss_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "train_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "test_accuracy_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "", "time_used_path", "=", "np", ".", "zeros", "(", "num_epochs", ")", "\n", "\n", "net", "=", "Net", "(", "num_hidden", ",", "hidden_dim", ",", "output_dim", ")", "\n", "net", ".", "to", "(", "device", ")", "\n", "\n", "PATH", "=", "args", ".", "base_path", "+", "data_name", "+", "'/'", "+", "str", "(", "cross_validate_index", ")", "+", "'/'", "+", "args", ".", "model_path", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "PATH", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Python >2.5", "\n", "            ", "if", "exc", ".", "errno", "==", "errno", ".", "EEXIST", "and", "os", ".", "path", ".", "isdir", "(", "PATH", ")", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "\n", "\n", "\n", "", "", "", "proposal_lr", "=", "args", ".", "lr", "\n", "sigma_list", "=", "args", ".", "sigma", "\n", "temperature", "=", "args", ".", "temperature", "\n", "lasso_lambda", "=", "args", ".", "lasso", "\n", "\n", "\n", "if", "len", "(", "proposal_lr", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_proposal_lr", "=", "proposal_lr", "[", "0", "]", "\n", "proposal_lr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "proposal_lr", ".", "append", "(", "temp_proposal_lr", ")", "\n", "\n", "", "", "if", "len", "(", "sigma_list", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_sigma_list", "=", "sigma_list", "[", "0", "]", "\n", "sigma_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "sigma_list", ".", "append", "(", "temp_sigma_list", ")", "\n", "\n", "", "", "if", "len", "(", "temperature", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_temperature", "=", "temperature", "[", "0", "]", "\n", "temperature", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "temperature", ".", "append", "(", "temp_temperature", ")", "\n", "\n", "", "", "if", "len", "(", "lasso_lambda", ")", "==", "1", "and", "num_hidden", ">", "1", ":", "\n", "        ", "temp_lasso_lambda", "=", "lasso_lambda", "[", "0", "]", "\n", "lasso_lambda", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "lasso_lambda", ".", "append", "(", "temp_lasso_lambda", ")", "\n", "\n", "", "", "C", "=", "args", ".", "C", "\n", "epsilon", "=", "args", ".", "epsilon", "\n", "\n", "temp_init", "=", "nn", ".", "Linear", "(", "dim", ",", "hidden_dim", "[", "0", "]", ")", "\n", "temp_init", ".", "to", "(", "device", ")", "\n", "svr_output_init", "=", "temp_init", "(", "x_train", ")", "\n", "\n", "if", "args", ".", "p_gamma", "is", "None", ":", "\n", "        ", "p_gamma", "=", "x_train", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "p_gamma", "=", "args", ".", "p_gamma", "\n", "\n", "\n", "", "kernel", "=", "args", ".", "kernel", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "svr_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "            ", "temp", "=", "SVR", "(", "C", "=", "C", ",", "epsilon", "=", "epsilon", ",", "gamma", "=", "1.0", "/", "p_gamma", ",", "kernel", "=", "kernel", ")", "\n", "svr_list", ".", "append", "(", "temp", ")", "\n", "\n", "\n", "", "", "svr_out_test", "=", "np", ".", "zeros", "(", "[", "ntest", ",", "hidden_dim", "[", "0", "]", "]", ")", "\n", "\n", "svr_out_train", "=", "svr_output_init", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "\n", "        ", "start_time", "=", "time", ".", "process_time", "(", ")", "\n", "\n", "hidden_list", "=", "[", "]", "\n", "momentum_list", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "hidden_list", ".", "append", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "momentum_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "hidden_list", "[", "-", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "num_hidden", "-", "1", ")", ":", "\n", "                ", "hidden_list", ".", "append", "(", "net", ".", "fc_list", "[", "i", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "-", "1", "]", ")", ")", ")", "\n", "momentum_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "hidden_list", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "hidden_list", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "hidden_list", "[", "i", "]", ".", "requires_grad", "=", "True", "\n", "\n", "", "MH_step", "=", "args", ".", "MH_step", "\n", "alpha", "=", "args", ".", "alpha", "\n", "\n", "forward_hidden", "=", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", "\n", "\n", "for", "repeat", "in", "range", "(", "MH_step", ")", ":", "\n", "            ", "for", "layer_index", "in", "reversed", "(", "range", "(", "num_hidden", ")", ")", ":", "\n", "                ", "if", "hidden_list", "[", "layer_index", "]", ".", "grad", "is", "not", "None", ":", "\n", "                    ", "hidden_list", "[", "layer_index", "]", ".", "grad", ".", "zero_", "(", ")", "\n", "\n", "", "if", "layer_index", "==", "num_hidden", "-", "1", ":", "\n", "                    ", "hidden_likelihood", "=", "-", "loss_func_sum", "(", "net", ".", "fc_list", "[", "layer_index", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ")", ",", "y_train", ")", "/", "sigma_list", "[", "layer_index", "]", "\n", "", "else", ":", "\n", "                    ", "hidden_likelihood", "=", "-", "sse", "(", "net", ".", "fc_list", "[", "layer_index", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ")", ",", "hidden_list", "[", "layer_index", "+", "1", "]", ")", "/", "sigma_list", "[", "layer_index", "]", "\n", "", "if", "layer_index", "==", "0", ":", "\n", "                    ", "hidden_likelihood", "=", "hidden_likelihood", "-", "C", "*", "torch", ".", "where", "(", "(", "hidden_list", "[", "layer_index", "]", "-", "forward_hidden", ")", ".", "abs", "(", ")", "-", "epsilon", ">", "0", ",", "(", "hidden_list", "[", "layer_index", "]", "-", "forward_hidden", ")", ".", "abs", "(", ")", "-", "epsilon", ",", "torch", ".", "zeros_like", "(", "hidden_list", "[", "0", "]", ")", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "                    ", "hidden_likelihood", "=", "hidden_likelihood", "-", "sse", "(", "net", ".", "fc_list", "[", "layer_index", "-", "1", "]", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "-", "1", "]", ")", ")", ",", "hidden_list", "[", "layer_index", "]", ")", "/", "sigma_list", "[", "layer_index", "-", "1", "]", "\n", "\n", "", "hidden_likelihood", ".", "backward", "(", ")", "\n", "step_proposal_lr", "=", "proposal_lr", "[", "layer_index", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "momentum_list", "[", "layer_index", "]", "=", "(", "1", "-", "alpha", ")", "*", "momentum_list", "[", "layer_index", "]", "+", "step_proposal_lr", "/", "2", "*", "hidden_list", "[", "\n", "layer_index", "]", ".", "grad", "+", "torch", ".", "FloatTensor", "(", "\n", "hidden_list", "[", "layer_index", "]", ".", "shape", ")", ".", "to", "(", "device", ")", ".", "normal_", "(", ")", ".", "mul", "(", "\n", "np", ".", "sqrt", "(", "alpha", "*", "step_proposal_lr", "*", "temperature", "[", "layer_index", "]", ")", ")", "\n", "hidden_list", "[", "layer_index", "]", ".", "data", "+=", "momentum_list", "[", "layer_index", "]", "\n", "\n", "", "", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "svr_list", "=", "Parallel", "(", "n_jobs", "=", "5", ")", "(", "delayed", "(", "svr_solver", ")", "(", "svr_list", ",", "x_train", ".", "cpu", "(", ")", ",", "hidden_list", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "i", ")", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ")", "\n", "\n", "", "for", "layer_index", "in", "range", "(", "num_hidden", ")", ":", "\n", "            ", "if", "layer_index", "==", "num_hidden", "-", "1", ":", "\n", "                ", "if", "regression_flag", ":", "\n", "                    ", "clf", "=", "Lasso", "(", "alpha", "=", "lasso_lambda", "[", "layer_index", "]", ",", "max_iter", "=", "-", "1", ")", ".", "fit", "(", "\n", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "y_train", ".", "cpu", "(", ")", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "np", ".", "array", "(", "clf", ".", "intercept_", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                    ", "clf", "=", "LogisticRegression", "(", "penalty", "=", "'l1'", ",", "C", "=", "1", "/", "lasso_lambda", "[", "layer_index", "]", ",", "solver", "=", "'saga'", ",", "max_iter", "=", "10000", ",", "multi_class", "=", "'multinomial'", ",", "n_jobs", "=", "5", ")", ".", "fit", "(", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ",", "y_train", ".", "cpu", "(", ")", ")", "\n", "if", "output_dim", "==", "2", ":", "\n", "                        ", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "np", ".", "vstack", "(", "[", "-", "clf", ".", "coef_", ",", "clf", ".", "coef_", "]", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "np", ".", "array", "(", "[", "-", "clf", ".", "intercept_", ",", "clf", ".", "intercept_", "]", ")", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                        ", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "coef_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "data", "=", "torch", ".", "FloatTensor", "(", "clf", ".", "intercept_", ")", ".", "reshape", "(", "\n", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ".", "shape", ")", ".", "to", "(", "device", ")", "\n", "", "", "", "else", ":", "\n", "                ", "solver", "=", "Lasso", "(", "alpha", "=", "lasso_lambda", "[", "layer_index", "]", ",", "max_iter", "=", "-", "1", ")", "\n", "X", "=", "torch", ".", "tanh", "(", "hidden_list", "[", "layer_index", "]", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Y", "=", "hidden_list", "[", "layer_index", "+", "1", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "Parallel", "(", "n_jobs", "=", "5", ")", "(", "\n", "delayed", "(", "lasso_solver", ")", "(", "net", ".", "fc_list", "[", "layer_index", "]", ".", "weight", ",", "net", ".", "fc_list", "[", "layer_index", "]", ".", "bias", ",", "solver", ",", "\n", "device", ",", "X", ",", "Y", ",", "i", ")", "for", "i", "in", "\n", "range", "(", "hidden_list", "[", "layer_index", "+", "1", "]", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n", "", "", "end_time", "=", "time", ".", "process_time", "(", ")", "\n", "time_used_path", "[", "epoch", "]", "=", "end_time", "-", "start_time", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "regression_flag", ":", "\n", "                ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                    ", "svr_out_train", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_train", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "if", "normalize_y_flag", ":", "\n", "                    ", "train_loss", "=", "train_loss", "*", "y_train_std", "*", "y_train_std", "\n", "", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                    ", "svr_out_test", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_test", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_test", ")", ".", "to", "(", "device", ")", ")", "\n", "\n", "if", "normalize_y_flag", ":", "\n", "                    ", "output", "=", "output", "*", "y_train_std", "+", "y_train_mean", "\n", "", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ")", "\n", "\n", "", "else", ":", "\n", "                ", "print", "(", "'epoch: '", ",", "epoch", ")", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                    ", "svr_out_train", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_train", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_train", ")", ".", "to", "(", "device", ")", ")", "\n", "train_loss", "=", "loss_func", "(", "output", ",", "y_train", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "train_accuracy", "=", "prediction", ".", "eq", "(", "y_train", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntrain", "\n", "\n", "train_loss_path", "[", "epoch", "]", "=", "train_loss", "\n", "train_accuracy_path", "[", "epoch", "]", "=", "train_accuracy", "\n", "print", "(", "\"train loss: \"", ",", "train_loss", ",", "'train accuracy: '", ",", "train_accuracy", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "                    ", "svr_out_test", "[", ":", ",", "i", "]", "=", "svr_list", "[", "i", "]", ".", "predict", "(", "x_test", ".", "cpu", "(", ")", ")", "\n", "\n", "", "output", "=", "net", "(", "torch", ".", "FloatTensor", "(", "svr_out_test", ")", ".", "to", "(", "device", ")", ")", "\n", "test_loss", "=", "loss_func", "(", "output", ",", "y_test", ")", "\n", "prediction", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "test_accuracy", "=", "prediction", ".", "eq", "(", "y_test", ".", "data", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "ntest", "\n", "\n", "test_loss_path", "[", "epoch", "]", "=", "test_loss", "\n", "test_accuracy_path", "[", "epoch", "]", "=", "test_accuracy", "\n", "print", "(", "\"test loss: \"", ",", "test_loss", ",", "'test accuracy: '", ",", "test_accuracy", ")", "\n", "\n", "\n", "\n", "", "", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "PATH", "+", "'model'", "+", "str", "(", "epoch", ")", "+", "'.pt'", ")", "\n", "\n", "for", "i", "in", "range", "(", "hidden_dim", "[", "0", "]", ")", ":", "\n", "            ", "filename", "=", "PATH", "+", "'model_svr'", "+", "str", "(", "epoch", ")", "+", "'_'", "+", "str", "(", "i", ")", "+", "'.pt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "svr_list", "[", "i", "]", ",", "f", ",", "protocol", "=", "4", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "if", "args", ".", "confidence_interval_flag", ":", "\n", "            ", "filename", "=", "PATH", "+", "'hidden_state'", "+", "str", "(", "epoch", ")", "+", "'.pt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "hidden_list", ",", "f", ",", "protocol", "=", "4", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "\n", "", "time_used_path", "[", "epoch", "]", "=", "end_time", "-", "start_time", "\n", "\n", "if", "regression_flag", ":", "\n", "            ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "[", "train_loss_path", ",", "test_loss_path", ",", "time_used_path", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "            ", "filename", "=", "PATH", "+", "'result.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "[", "train_loss_path", ",", "test_loss_path", ",", "train_accuracy_path", ",", "test_accuracy_path", ",", "time_used_path", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "if", "args", ".", "confidence_interval_flag", ":", "\n", "            ", "filename", "=", "PATH", "+", "'data.txt'", "\n", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "\n", "[", "x_train", ",", "x_test", ",", "y_train", ",", "y_test", "]", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]]}