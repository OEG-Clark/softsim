{"home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_mnist.MNIST.__init__": [[38, 60], ["setup_mnist.extract_data", "setup_mnist.extract_labels", "setup_mnist.extract_data", "setup_mnist.extract_labels", "os.path.exists", "os.mkdir", "urllib.request.urlretrieve"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_mnist.extract_data", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_mnist.extract_labels", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_mnist.extract_data", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_mnist.extract_labels"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "\"data\"", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "\"data\"", ")", "\n", "files", "=", "[", "\"train-images-idx3-ubyte.gz\"", ",", "\n", "\"t10k-images-idx3-ubyte.gz\"", ",", "\n", "\"train-labels-idx1-ubyte.gz\"", ",", "\n", "\"t10k-labels-idx1-ubyte.gz\"", "]", "\n", "for", "name", "in", "files", ":", "\n", "\n", "                ", "urllib", ".", "request", ".", "urlretrieve", "(", "'http://yann.lecun.com/exdb/mnist/'", "+", "name", ",", "\"data/\"", "+", "name", ")", "\n", "\n", "", "", "train_data", "=", "extract_data", "(", "\"data/train-images-idx3-ubyte.gz\"", ",", "60000", ")", "\n", "train_labels", "=", "extract_labels", "(", "\"data/train-labels-idx1-ubyte.gz\"", ",", "60000", ")", "\n", "self", ".", "test_data", "=", "extract_data", "(", "\"data/t10k-images-idx3-ubyte.gz\"", ",", "10000", ")", "\n", "self", ".", "test_labels", "=", "extract_labels", "(", "\"data/t10k-labels-idx1-ubyte.gz\"", ",", "10000", ")", "\n", "\n", "VALIDATION_SIZE", "=", "5000", "\n", "\n", "self", ".", "validation_data", "=", "train_data", "[", ":", "VALIDATION_SIZE", ",", ":", ",", ":", ",", ":", "]", "\n", "self", ".", "validation_labels", "=", "train_labels", "[", ":", "VALIDATION_SIZE", "]", "\n", "self", ".", "train_data", "=", "train_data", "[", "VALIDATION_SIZE", ":", ",", ":", ",", ":", ",", ":", "]", "\n", "self", ".", "train_labels", "=", "train_labels", "[", "VALIDATION_SIZE", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_mnist.MNISTModel.__init__": [[63, 92], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.load_weights", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "restore", ",", "session", "=", "None", ")", ":", "\n", "        ", "self", ".", "num_channels", "=", "1", "\n", "self", ".", "image_size", "=", "28", "\n", "self", ".", "num_labels", "=", "10", "\n", "\n", "model", "=", "Sequential", "(", ")", "\n", "\n", "model", ".", "add", "(", "Conv2D", "(", "32", ",", "(", "3", ",", "3", ")", ",", "\n", "input_shape", "=", "(", "28", ",", "28", ",", "1", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "32", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "\n", "model", ".", "add", "(", "Conv2D", "(", "64", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "64", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "\n", "model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "200", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "200", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "10", ")", ")", "\n", "model", ".", "load_weights", "(", "restore", ")", "\n", "\n", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_mnist.MNISTModel.predict": [[93, 95], ["setup_mnist.MNISTModel.model"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "data", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "data", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_mnist.extract_data": [[21, 29], ["gzip.open", "bytestream.read", "bytestream.read", "numpy.frombuffer().astype", "data.reshape.reshape", "numpy.frombuffer"], "function", ["None"], ["def", "extract_data", "(", "filename", ",", "num_images", ")", ":", "\n", "    ", "with", "gzip", ".", "open", "(", "filename", ")", "as", "bytestream", ":", "\n", "        ", "bytestream", ".", "read", "(", "16", ")", "\n", "buf", "=", "bytestream", ".", "read", "(", "num_images", "*", "28", "*", "28", ")", "\n", "data", "=", "np", ".", "frombuffer", "(", "buf", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "data", "=", "(", "data", "/", "255", ")", "-", "0.5", "\n", "data", "=", "data", ".", "reshape", "(", "num_images", ",", "28", ",", "28", ",", "1", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_mnist.extract_labels": [[30, 36], ["gzip.open", "bytestream.read", "bytestream.read", "numpy.frombuffer", "numpy.arange"], "function", ["None"], ["", "", "def", "extract_labels", "(", "filename", ",", "num_images", ")", ":", "\n", "    ", "with", "gzip", ".", "open", "(", "filename", ")", "as", "bytestream", ":", "\n", "        ", "bytestream", ".", "read", "(", "8", ")", "\n", "buf", "=", "bytestream", ".", "read", "(", "1", "*", "num_images", ")", "\n", "labels", "=", "np", ".", "frombuffer", "(", "buf", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "", "return", "(", "np", ".", "arange", "(", "10", ")", "==", "labels", "[", ":", ",", "None", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_attack.CarliniL2.__init__": [[21, 129], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "model.predict", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_max", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "set", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables", "l2_attack.CarliniL2.setup.append", "l2_attack.CarliniL2.setup.append", "l2_attack.CarliniL2.setup.append", "tensorflow.variables_initializer", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "tensorflow.square", "tensorflow.maximum", "tensorflow.maximum", "l2_attack.CarliniL2.timg.assign", "l2_attack.CarliniL2.tlab.assign", "l2_attack.CarliniL2.const.assign", "tensorflow.tanh", "tensorflow.global_variables", "tensorflow.tanh"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "model", ",", "batch_size", "=", "1", ",", "confidence", "=", "CONFIDENCE", ",", "\n", "targeted", "=", "TARGETED", ",", "learning_rate", "=", "LEARNING_RATE", ",", "\n", "binary_search_steps", "=", "BINARY_SEARCH_STEPS", ",", "max_iterations", "=", "MAX_ITERATIONS", ",", "\n", "abort_early", "=", "ABORT_EARLY", ",", "\n", "initial_const", "=", "INITIAL_CONST", ",", "\n", "boxmin", "=", "-", "0.5", ",", "boxmax", "=", "0.5", ")", ":", "\n", "        ", "\"\"\"\n        The L_2 optimized attack. \n\n        This attack is the most efficient and should be used as the primary \n        attack to evaluate potential defenses.\n\n        Returns adversarial examples for the supplied model.\n\n        confidence: Confidence of adversarial examples: higher produces examples\n          that are farther away, but more strongly classified as adversarial.\n        batch_size: Number of attacks to run simultaneously.\n        targeted: True if we should perform a targetted attack, False otherwise.\n        learning_rate: The learning rate for the attack algorithm. Smaller values\n          produce better results but are slower to converge.\n        binary_search_steps: The number of times we perform binary search to\n          find the optimal tradeoff-constant between distance and confidence. \n        max_iterations: The maximum number of iterations. Larger values are more\n          accurate; setting too small will require a large learning rate and will\n          produce poor results.\n        abort_early: If true, allows early aborts if gradient descent gets stuck.\n        initial_const: The initial tradeoff-constant to use to tune the relative\n          importance of distance and confidence. If binary_search_steps is large,\n          the initial constant is not important.\n        boxmin: Minimum pixel value (default -0.5).\n        boxmax: Maximum pixel value (default 0.5).\n        \"\"\"", "\n", "\n", "image_size", ",", "num_channels", ",", "num_labels", "=", "model", ".", "image_size", ",", "model", ".", "num_channels", ",", "model", ".", "num_labels", "\n", "self", ".", "sess", "=", "sess", "\n", "self", ".", "TARGETED", "=", "targeted", "\n", "self", ".", "LEARNING_RATE", "=", "learning_rate", "\n", "self", ".", "MAX_ITERATIONS", "=", "max_iterations", "\n", "self", ".", "BINARY_SEARCH_STEPS", "=", "binary_search_steps", "\n", "self", ".", "ABORT_EARLY", "=", "abort_early", "\n", "self", ".", "CONFIDENCE", "=", "confidence", "\n", "self", ".", "initial_const", "=", "initial_const", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "\n", "self", ".", "repeat", "=", "binary_search_steps", ">=", "10", "\n", "\n", "shape", "=", "(", "batch_size", ",", "image_size", ",", "image_size", ",", "num_channels", ")", "\n", "\n", "# the variable we're going to optimize over", "\n", "self", ".", "modifier", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "#        self.modifier2 = tf.Variable(np.zeros(shape, dtype=np.float32))", "\n", "#        self.modifier3 = tf.Variable(np.zeros(shape, dtype=np.float32))", "\n", "\n", "# these are variables to be more efficient in sending data to tf", "\n", "self", ".", "timg", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "shape", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "tlab", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "(", "batch_size", ",", "num_labels", ")", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "const", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "batch_size", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "# and here's what we use to assign them", "\n", "self", ".", "assign_timg", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", ")", "\n", "self", ".", "assign_tlab", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "(", "batch_size", ",", "num_labels", ")", ")", "\n", "self", ".", "assign_const", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "batch_size", "]", ")", "\n", "\n", "# the resulting image, tanh'd to keep bounded from boxmin to boxmax", "\n", "self", ".", "boxmul", "=", "(", "boxmax", "-", "boxmin", ")", "/", "2.", "\n", "self", ".", "boxplus", "=", "(", "boxmin", "+", "boxmax", ")", "/", "2.", "\n", "self", ".", "newimg", "=", "tf", ".", "tanh", "(", "self", ".", "modifier", "+", "self", ".", "timg", ")", "*", "self", ".", "boxmul", "+", "self", ".", "boxplus", "\n", "\n", "# prediction BEFORE-SOFTMAX of the model", "\n", "self", ".", "output", "=", "model", ".", "predict", "(", "self", ".", "newimg", ")", "\n", "\n", "# distance to the input data", "\n", "self", ".", "l2dist", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "self", ".", "newimg", "-", "(", "tf", ".", "tanh", "(", "self", ".", "timg", ")", "*", "self", ".", "boxmul", "+", "self", ".", "boxplus", ")", ")", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "# compute the probability of the label class versus the maximum other", "\n", "real", "=", "tf", ".", "reduce_sum", "(", "(", "self", ".", "tlab", ")", "*", "self", ".", "output", ",", "1", ")", "\n", "other", "=", "tf", ".", "reduce_max", "(", "(", "1", "-", "self", ".", "tlab", ")", "*", "self", ".", "output", "-", "(", "self", ".", "tlab", "*", "10000", ")", ",", "1", ")", "\n", "\n", "if", "self", ".", "TARGETED", ":", "\n", "# if targetted, optimize for making the other class most likely", "\n", "            ", "loss1", "=", "tf", ".", "maximum", "(", "0.0", ",", "other", "-", "real", "+", "self", ".", "CONFIDENCE", ")", "\n", "", "else", ":", "\n", "# if untargeted, optimize for making this class least likely.", "\n", "            ", "loss1", "=", "tf", ".", "maximum", "(", "0.0", ",", "real", "-", "other", "+", "self", ".", "CONFIDENCE", ")", "\n", "\n", "# sum up the losses", "\n", "", "self", ".", "loss2", "=", "tf", ".", "reduce_sum", "(", "self", ".", "l2dist", ")", "\n", "self", ".", "loss1", "=", "tf", ".", "reduce_sum", "(", "self", ".", "const", "*", "loss1", ")", "\n", "self", ".", "loss", "=", "self", ".", "loss1", "+", "self", ".", "loss2", "\n", "\n", "# Setup the adam optimizer and keep track of variables we're creating", "\n", "start_vars", "=", "set", "(", "x", ".", "name", "for", "x", "in", "tf", ".", "global_variables", "(", ")", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "LEARNING_RATE", ")", "\n", "self", ".", "train", "=", "optimizer", ".", "minimize", "(", "self", ".", "loss", ",", "var_list", "=", "[", "self", ".", "modifier", "]", ")", "\n", "\n", "end_vars", "=", "tf", ".", "global_variables", "(", ")", "\n", "# self.modifier1 = end_vars[14]", "\n", "new_vars", "=", "[", "x", "for", "x", "in", "end_vars", "if", "x", ".", "name", "not", "in", "start_vars", "]", "\n", "\n", "# these are the variables to initialize when we run", "\n", "self", ".", "setup", "=", "[", "]", "\n", "self", ".", "setup", ".", "append", "(", "self", ".", "timg", ".", "assign", "(", "self", ".", "assign_timg", ")", ")", "\n", "self", ".", "setup", ".", "append", "(", "self", ".", "tlab", ".", "assign", "(", "self", ".", "assign_tlab", ")", ")", "\n", "self", ".", "setup", ".", "append", "(", "self", ".", "const", ".", "assign", "(", "self", ".", "assign_const", ")", ")", "\n", "\n", "#      self.modifier = self.modifier2 + self.modifier3 - self.modifier", "\n", "\n", "self", ".", "init", "=", "tf", ".", "variables_initializer", "(", "var_list", "=", "[", "self", ".", "modifier", "]", "+", "new_vars", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_attack.CarliniL2.attack": [[131, 144], ["print", "range", "numpy.array", "len", "len", "print", "r.extend", "l2_attack.CarliniL2.attack_batch"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.attack_batch"], ["", "def", "attack", "(", "self", ",", "imgs", ",", "targets", ")", ":", "\n", "        ", "\"\"\"\n        Perform the L_2 attack on the given images for the given targets.\n\n        If self.targeted is true, then the targets represents the target labels.\n        If self.targeted is false, then targets are the original class labels.\n        \"\"\"", "\n", "r", "=", "[", "]", "\n", "print", "(", "'go up to'", ",", "len", "(", "imgs", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "imgs", ")", ",", "self", ".", "batch_size", ")", ":", "\n", "            ", "print", "(", "'tick'", ",", "i", ")", "\n", "r", ".", "extend", "(", "self", ".", "attack_batch", "(", "imgs", "[", "i", ":", "i", "+", "self", ".", "batch_size", "]", ",", "targets", "[", "i", ":", "i", "+", "self", ".", "batch_size", "]", ")", ")", "\n", "", "return", "np", ".", "array", "(", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_attack.CarliniL2.attack_batch": [[145, 245], ["numpy.arctanh", "numpy.zeros", "range", "numpy.array", "numpy.ones", "numpy.ones", "print", "l2_attack.CarliniL2.sess.run", "l2_attack.CarliniL2.sess.run", "range", "range", "isinstance", "numpy.copy", "numpy.argmax", "l2_attack.CarliniL2.sess.run", "l2_attack.CarliniL2.sess.run", "enumerate", "print", "zip", "l2_attack.CarliniL2.attack_batch.compare"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.compare"], ["", "def", "attack_batch", "(", "self", ",", "imgs", ",", "labs", ")", ":", "\n", "        ", "\"\"\"\n        Run the attack on a batch of images and labels.\n        \"\"\"", "\n", "def", "compare", "(", "x", ",", "y", ")", ":", "\n", "            ", "if", "not", "isinstance", "(", "x", ",", "(", "float", ",", "int", ",", "np", ".", "int64", ")", ")", ":", "\n", "                ", "x", "=", "np", ".", "copy", "(", "x", ")", "\n", "if", "self", ".", "TARGETED", ":", "\n", "                    ", "x", "[", "y", "]", "-=", "self", ".", "CONFIDENCE", "\n", "", "else", ":", "\n", "                    ", "x", "[", "y", "]", "+=", "self", ".", "CONFIDENCE", "\n", "", "x", "=", "np", ".", "argmax", "(", "x", ")", "\n", "", "if", "self", ".", "TARGETED", ":", "\n", "                ", "return", "x", "==", "y", "\n", "", "else", ":", "\n", "                ", "return", "x", "!=", "y", "\n", "\n", "", "", "batch_size", "=", "self", ".", "batch_size", "\n", "\n", "# convert to tanh-space", "\n", "imgs", "=", "np", ".", "arctanh", "(", "(", "imgs", "-", "self", ".", "boxplus", ")", "/", "self", ".", "boxmul", "*", "0.999999", ")", "\n", "\n", "# set the lower and upper bounds accordingly", "\n", "lower_bound", "=", "np", ".", "zeros", "(", "batch_size", ")", "\n", "CONST", "=", "np", ".", "ones", "(", "batch_size", ")", "*", "self", ".", "initial_const", "\n", "upper_bound", "=", "np", ".", "ones", "(", "batch_size", ")", "*", "1e10", "\n", "\n", "# the best l2, score, and image attack", "\n", "o_bestl2", "=", "[", "1e10", "]", "*", "batch_size", "\n", "o_bestscore", "=", "[", "-", "1", "]", "*", "batch_size", "\n", "o_bestattack", "=", "[", "imgs", "[", "0", "]", "]", "*", "batch_size", "\n", "\n", "#       o_bestattack = imgs", "\n", "\n", "for", "outer_step", "in", "range", "(", "self", ".", "BINARY_SEARCH_STEPS", ")", ":", "\n", "            ", "print", "(", "o_bestl2", ")", "\n", "#        print(self.modifier)", "\n", "# completely reset adam's internal state.", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "init", ")", "\n", "batch", "=", "imgs", "[", ":", "batch_size", "]", "\n", "batchlab", "=", "labs", "[", ":", "batch_size", "]", "\n", "\n", "bestl2", "=", "[", "1e10", "]", "*", "batch_size", "\n", "bestscore", "=", "[", "-", "1", "]", "*", "batch_size", "\n", "\n", "# The last iteration (if we run many steps) repeat the search once.", "\n", "if", "self", ".", "repeat", "==", "True", "and", "outer_step", "==", "self", ".", "BINARY_SEARCH_STEPS", "-", "1", ":", "\n", "                ", "CONST", "=", "upper_bound", "\n", "\n", "# set the variables so that we don't have to send them over again", "\n", "", "self", ".", "sess", ".", "run", "(", "self", ".", "setup", ",", "{", "self", ".", "assign_timg", ":", "batch", ",", "\n", "self", ".", "assign_tlab", ":", "batchlab", ",", "\n", "self", ".", "assign_const", ":", "CONST", "}", ")", "\n", "\n", "prev", "=", "1e6", "\n", "for", "iteration", "in", "range", "(", "self", ".", "MAX_ITERATIONS", ")", ":", "\n", "# perform the attack ", "\n", "                ", "ttt", ",", "l", ",", "l2s", ",", "scores", ",", "nimg", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "train", ",", "self", ".", "loss", ",", "\n", "self", ".", "l2dist", ",", "self", ".", "output", ",", "\n", "self", ".", "newimg", "]", ")", "\n", "modi", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "modifier", ")", "\n", "# print out the losses every 10%", "\n", "if", "iteration", "%", "(", "self", ".", "MAX_ITERATIONS", "//", "10", ")", "==", "0", ":", "\n", "                    ", "print", "(", "iteration", ",", "self", ".", "sess", ".", "run", "(", "(", "self", ".", "loss", ",", "self", ".", "loss1", ",", "self", ".", "loss2", ")", ")", ")", "\n", "\n", "# check if we should abort search if we're getting nowhere.", "\n", "", "if", "self", ".", "ABORT_EARLY", "and", "iteration", "%", "(", "self", ".", "MAX_ITERATIONS", "//", "10", ")", "==", "0", ":", "\n", "                    ", "if", "l", ">", "prev", "*", ".9999", ":", "\n", "                        ", "break", "\n", "", "prev", "=", "l", "\n", "\n", "# adjust the best result found so far", "\n", "", "for", "e", ",", "(", "l2", ",", "sc", ",", "ii", ")", "in", "enumerate", "(", "zip", "(", "l2s", ",", "scores", ",", "nimg", ")", ")", ":", "\n", "                    ", "if", "l2", "<", "bestl2", "[", "e", "]", "and", "compare", "(", "sc", ",", "np", ".", "argmax", "(", "batchlab", "[", "e", "]", ")", ")", ":", "\n", "                        ", "bestl2", "[", "e", "]", "=", "l2", "\n", "bestscore", "[", "e", "]", "=", "np", ".", "argmax", "(", "sc", ")", "\n", "", "if", "l2", "<", "o_bestl2", "[", "e", "]", "and", "compare", "(", "sc", ",", "np", ".", "argmax", "(", "batchlab", "[", "e", "]", ")", ")", ":", "\n", "                        ", "o_bestl2", "[", "e", "]", "=", "l2", "\n", "o_bestscore", "[", "e", "]", "=", "np", ".", "argmax", "(", "sc", ")", "\n", "o_bestattack", "[", "e", "]", "=", "ii", "\n", "\n", "# adjust the constant as needed", "\n", "", "", "", "for", "e", "in", "range", "(", "batch_size", ")", ":", "\n", "                ", "if", "compare", "(", "bestscore", "[", "e", "]", ",", "np", ".", "argmax", "(", "batchlab", "[", "e", "]", ")", ")", "and", "bestscore", "[", "e", "]", "!=", "-", "1", ":", "\n", "# success, divide const by two", "\n", "                    ", "upper_bound", "[", "e", "]", "=", "min", "(", "upper_bound", "[", "e", "]", ",", "CONST", "[", "e", "]", ")", "\n", "if", "upper_bound", "[", "e", "]", "<", "1e9", ":", "\n", "                        ", "CONST", "[", "e", "]", "=", "(", "lower_bound", "[", "e", "]", "+", "upper_bound", "[", "e", "]", ")", "/", "2", "\n", "", "", "else", ":", "\n", "# failure, either multiply by 10 if no solution found yet", "\n", "#          or do binary search with the known upper bound", "\n", "                    ", "lower_bound", "[", "e", "]", "=", "max", "(", "lower_bound", "[", "e", "]", ",", "CONST", "[", "e", "]", ")", "\n", "if", "upper_bound", "[", "e", "]", "<", "1e9", ":", "\n", "                        ", "CONST", "[", "e", "]", "=", "(", "lower_bound", "[", "e", "]", "+", "upper_bound", "[", "e", "]", ")", "/", "2", "\n", "", "else", ":", "\n", "                        ", "CONST", "[", "e", "]", "*=", "10", "\n", "\n", "# return the best solution found", "\n", "", "", "", "", "o_bestl2", "=", "np", ".", "array", "(", "o_bestl2", ")", "\n", "return", "o_bestattack", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l0_ADMM_attack.ADMML0.__init__": [[22, 69], ["l0_ADMM_attack.ADMML0.gradient_descent"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.gradient_descent"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "model", ",", "batch_size", "=", "1", ",", "confidence", "=", "CONFIDENCE", ",", "\n", "targeted", "=", "TARGETED", ",", "learning_rate", "=", "LEARNING_RATE", ",", "\n", "binary_search_steps", "=", "BINARY_SEARCH_STEPS", ",", "max_iterations", "=", "MAX_ITERATIONS", ",", "\n", "abort_early", "=", "ABORT_EARLY", ",", "ro", "=", "RO", ",", "\n", "#       initial_const=INITIAL_CONST,", "\n", "boxmin", "=", "-", "0.5", ",", "boxmax", "=", "0.5", ")", ":", "\n", "        ", "\"\"\"\n        The L_2 optimized attack.\n\n        This attack is the most efficient and should be used as the primary\n        attack to evaluate potential defenses.\n\n        Returns adversarial examples for the supplied model.\n\n        confidence: Confidence of adversarial examples: higher produces examples\n          that are farther away, but more strongly classified as adversarial.\n        batch_size: Number of attacks to run simultaneously.\n        targeted: True if we should perform a targetted attack, False otherwise.\n        learning_rate: The learning rate for the attack algorithm. Smaller values\n          produce better results but are slower to converge.\n        binary_search_steps: The number of times we perform binary search to\n          find the optimal tradeoff-constant between distance and confidence.\n        max_iterations: The maximum number of iterations. Larger values are more\n          accurate; setting too small will require a large learning rate and will\n          produce poor results.\n        abort_early: If true, allows early aborts if gradient descent gets stuck.\n        initial_const: The initial tradeoff-constant to use to tune the relative\n          importance of distance and confidence. If binary_search_steps is large,\n          the initial constant is not important.\n        boxmin: Minimum pixel value (default -0.5).\n        boxmax: Maximum pixel value (default 0.5).\n        \"\"\"", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "sess", "=", "sess", "\n", "self", ".", "TARGETED", "=", "targeted", "\n", "self", ".", "LEARNING_RATE", "=", "learning_rate", "\n", "self", ".", "MAX_ITERATIONS", "=", "max_iterations", "\n", "self", ".", "BINARY_SEARCH_STEPS", "=", "binary_search_steps", "\n", "self", ".", "ABORT_EARLY", "=", "abort_early", "\n", "self", ".", "CONFIDENCE", "=", "confidence", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "ro", "=", "ro", "\n", "self", ".", "boxmin", "=", "boxmin", "\n", "self", ".", "boxmax", "=", "boxmax", "\n", "\n", "self", ".", "grad", "=", "self", ".", "gradient_descent", "(", "sess", ",", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l0_ADMM_attack.ADMML0.compare": [[70, 82], ["isinstance", "numpy.copy", "numpy.argmax"], "methods", ["None"], ["", "def", "compare", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "x", ",", "(", "float", ",", "int", ",", "np", ".", "int64", ")", ")", ":", "\n", "            ", "x", "=", "np", ".", "copy", "(", "x", ")", "\n", "if", "self", ".", "TARGETED", ":", "\n", "                ", "x", "[", "y", "]", "-=", "self", ".", "CONFIDENCE", "\n", "", "else", ":", "\n", "                ", "x", "[", "y", "]", "+=", "self", ".", "CONFIDENCE", "\n", "", "x", "=", "np", ".", "argmax", "(", "x", ")", "\n", "", "if", "self", ".", "TARGETED", ":", "\n", "            ", "return", "x", "==", "y", "\n", "", "else", ":", "\n", "            ", "return", "x", "!=", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l0_ADMM_attack.ADMML0.gradient_descent": [[83, 205], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "model.predict", "model.predict", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_max", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "set", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.global_variables", "tensorflow.variables_initializer", "tensorflow.variables_initializer", "setup.append", "setup.append", "setup2.append", "setup2.append", "sess.run", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "tensorflow.square", "tensorflow.maximum", "tensorflow.maximum", "tensorflow.square", "tensorflow.Variable.assign", "tensorflow.Variable.assign", "tensorflow.Variable.assign", "tensorflow.Variable.assign", "sess.run", "sess.run", "sess.run", "range", "sess.run", "enumerate", "tensorflow.tanh", "sess.run", "sess.run", "sess.run", "sess.run", "enumerate", "zip", "l0_ADMM_attack.ADMML0.compare", "tensorflow.tanh", "tensorflow.global_variables", "numpy.zeros", "numpy.zeros", "print", "zip", "numpy.argmax", "tensorflow.tanh", "numpy.array", "numpy.nonzero"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.compare"], ["", "", "def", "gradient_descent", "(", "self", ",", "sess", ",", "model", ")", ":", "\n", "\n", "        ", "batch_size", "=", "self", ".", "batch_size", "\n", "shape", "=", "(", "batch_size", ",", "model", ".", "image_size", ",", "model", ".", "image_size", ",", "model", ".", "num_channels", ")", "\n", "\n", "# the variable we're going to optimize over", "\n", "#modifier = tf.Variable(tf.random_normal(shape, stddev=1.0))", "\n", "modifier", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "# these are variables to be more efficient in sending data to tf", "\n", "timg", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "shape", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "tlab", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "(", "batch_size", ",", "model", ".", "num_labels", ")", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "delta", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "shape", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "multiplier", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "shape", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "# and here's what we use to assign them", "\n", "assign_timg", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", ")", "\n", "assign_tlab", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "(", "batch_size", ",", "model", ".", "num_labels", ")", ")", "\n", "assign_delta", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", ")", "\n", "assign_multiplier", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", ")", "\n", "\n", "# the resulting image, tanh'd to keep bounded from boxmin to boxmax", "\n", "boxmul", "=", "(", "self", ".", "boxmax", "-", "self", ".", "boxmin", ")", "/", "2.", "\n", "boxplus", "=", "(", "self", ".", "boxmin", "+", "self", ".", "boxmax", ")", "/", "2.", "\n", "newimg", "=", "tf", ".", "tanh", "(", "modifier", "+", "timg", ")", "*", "boxmul", "+", "boxplus", "\n", "\n", "modi_real", "=", "newimg", "-", "(", "tf", ".", "tanh", "(", "timg", ")", "*", "boxmul", "+", "boxplus", ")", "\n", "\n", "# prediction BEFORE-SOFTMAX of the model", "\n", "output", "=", "model", ".", "predict", "(", "newimg", ")", "\n", "output2", "=", "model", ".", "predict", "(", "delta", "+", "tf", ".", "tanh", "(", "timg", ")", "*", "boxmul", "+", "boxplus", ")", "\n", "# distance to the input data", "\n", "l2dist", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "delta", "-", "modi_real", "+", "multiplier", ")", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "# compute the probability of the label class versus the maximum other", "\n", "real", "=", "tf", ".", "reduce_sum", "(", "(", "tlab", ")", "*", "output", ",", "1", ")", "\n", "other", "=", "tf", ".", "reduce_max", "(", "(", "1", "-", "tlab", ")", "*", "output", "-", "(", "tlab", "*", "10000", ")", ",", "1", ")", "\n", "\n", "if", "self", ".", "TARGETED", ":", "\n", "# if targetted, optimize for making the other class most likely", "\n", "            ", "loss1", "=", "tf", ".", "maximum", "(", "0.0", ",", "other", "-", "real", "+", "self", ".", "CONFIDENCE", ")", "\n", "", "else", ":", "\n", "# if untargeted, optimize for making this class least likely.", "\n", "            ", "loss1", "=", "tf", ".", "maximum", "(", "0.0", ",", "real", "-", "other", "+", "self", ".", "CONFIDENCE", ")", "\n", "\n", "# sum up the losses", "\n", "", "loss2", "=", "self", ".", "ro", "/", "2.0", "*", "l2dist", "\n", "loss1", "=", "8.0", "*", "loss1", "\n", "loss_batch", "=", "loss1", "+", "loss2", "\n", "loss", "=", "tf", ".", "reduce_sum", "(", "loss_batch", ")", "\n", "\n", "l2dist_real", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "modi_real", ")", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "# Setup the adam optimizer and keep track of variables we're creating", "\n", "start_vars", "=", "set", "(", "x", ".", "name", "for", "x", "in", "tf", ".", "global_variables", "(", ")", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "LEARNING_RATE", ")", "\n", "train", "=", "optimizer", ".", "minimize", "(", "loss", ",", "var_list", "=", "[", "modifier", "]", ")", "\n", "end_vars", "=", "tf", ".", "global_variables", "(", ")", "\n", "new_vars", "=", "[", "x", "for", "x", "in", "end_vars", "if", "x", ".", "name", "not", "in", "start_vars", "]", "\n", "\n", "init", "=", "tf", ".", "variables_initializer", "(", "var_list", "=", "new_vars", ")", "\n", "init1", "=", "tf", ".", "variables_initializer", "(", "var_list", "=", "[", "modifier", "]", ")", "\n", "\n", "# these are the variables to initialize when we run", "\n", "setup", "=", "[", "]", "\n", "setup", ".", "append", "(", "timg", ".", "assign", "(", "assign_timg", ")", ")", "\n", "setup", ".", "append", "(", "tlab", ".", "assign", "(", "assign_tlab", ")", ")", "\n", "\n", "setup2", "=", "[", "]", "\n", "setup2", ".", "append", "(", "delta", ".", "assign", "(", "assign_delta", ")", ")", "\n", "setup2", ".", "append", "(", "multiplier", ".", "assign", "(", "assign_multiplier", ")", ")", "\n", "\n", "sess", ".", "run", "(", "init1", ")", "\n", "def", "doit", "(", "imgs", ",", "labs", ",", "delt", ",", "multi", ")", ":", "\n", "\n", "            ", "sess", ".", "run", "(", "init", ")", "\n", "\n", "batch", "=", "imgs", "[", ":", "batch_size", "]", "\n", "batchlab", "=", "labs", "[", ":", "batch_size", "]", "\n", "\n", "bestl2", "=", "[", "1e10", "]", "*", "batch_size", "\n", "bestscore", "=", "[", "-", "1", "]", "*", "batch_size", "\n", "bestattack", "=", "[", "np", ".", "zeros", "(", "imgs", "[", "0", "]", ".", "shape", ")", "]", "*", "batch_size", "\n", "\n", "sess", ".", "run", "(", "setup", ",", "{", "assign_timg", ":", "batch", ",", "assign_tlab", ":", "batchlab", ",", "}", ")", "\n", "\n", "sess", ".", "run", "(", "setup2", ",", "{", "assign_delta", ":", "delt", ",", "assign_multiplier", ":", "multi", ",", "}", ")", "\n", "\n", "prev", "=", "1e6", "\n", "bestloss", "=", "1e10", "\n", "bestlossbatch", "=", "[", "1e10", "]", "*", "batch_size", "\n", "modi", "=", "[", "np", ".", "zeros", "(", "imgs", "[", "0", "]", ".", "shape", ")", "]", "*", "batch_size", "\n", "for", "iteration", "in", "range", "(", "self", ".", "MAX_ITERATIONS", ")", ":", "\n", "\n", "                ", "sess", ".", "run", "(", "[", "train", "]", ")", "\n", "l", ",", "lb", ",", "l2s", "=", "sess", ".", "run", "(", "[", "loss", ",", "loss_batch", ",", "l2dist_real", "]", ")", "\n", "scores", ",", "nimg", "=", "sess", ".", "run", "(", "[", "output", ",", "newimg", "]", ")", "\n", "if", "iteration", "%", "(", "self", ".", "MAX_ITERATIONS", "//", "10", ")", "==", "0", ":", "\n", "                    ", "print", "(", "iteration", ",", "l", ")", "\n", "\n", "# check if we should abort search if we're getting nowhere.", "\n", "", "if", "self", ".", "ABORT_EARLY", "and", "iteration", "%", "(", "self", ".", "MAX_ITERATIONS", "//", "10", ")", "==", "0", ":", "\n", "                    ", "if", "l", ">", "prev", "*", "1.09999", ":", "\n", "                        ", "break", "\n", "", "prev", "=", "l", "\n", "\n", "", "modi_re", "=", "sess", ".", "run", "(", "modi_real", ")", "\n", "\n", "for", "e", ",", "(", "lbb", ",", "mo", ")", "in", "enumerate", "(", "zip", "(", "lb", ",", "modi_re", ")", ")", ":", "\n", "                    ", "if", "lbb", "<", "bestlossbatch", "[", "e", "]", ":", "\n", "                        ", "bestlossbatch", "[", "e", "]", "=", "lbb", "\n", "modi", "[", "e", "]", "=", "mo", "\n", "\n", "", "", "", "scores2", ",", "_", "=", "sess", ".", "run", "(", "[", "output2", ",", "newimg", "]", ")", "\n", "for", "e", ",", "(", "sc2", ",", "iii", ")", "in", "enumerate", "(", "zip", "(", "scores2", ",", "delt", ")", ")", ":", "\n", "                ", "if", "self", ".", "compare", "(", "sc2", ",", "np", ".", "argmax", "(", "batchlab", "[", "e", "]", ")", ")", ":", "\n", "                    ", "bestl2", "[", "e", "]", "=", "np", ".", "array", "(", "np", ".", "nonzero", "(", "iii", ")", ")", ".", "shape", "[", "1", "]", "\n", "bestscore", "[", "e", "]", "=", "sc2", "\n", "bestattack", "[", "e", "]", "=", "iii", "\n", "\n", "", "", "return", "bestl2", ",", "bestscore", ",", "bestattack", ",", "modi", "\n", "\n", "", "return", "doit", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l0_ADMM_attack.ADMML0.attack": [[206, 219], ["print", "range", "numpy.array", "len", "len", "print", "r.extend", "l0_ADMM_attack.ADMML0.attack_batch"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.attack_batch"], ["", "def", "attack", "(", "self", ",", "imgs", ",", "targets", ")", ":", "\n", "        ", "\"\"\"\n        Perform the L_2 attack on the given images for the given targets.\n\n        If self.targeted is true, then the targets represents the target labels.\n        If self.targeted is false, then targets are the original class labels.\n        \"\"\"", "\n", "r", "=", "[", "]", "\n", "print", "(", "'go up to'", ",", "len", "(", "imgs", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "imgs", ")", ",", "self", ".", "batch_size", ")", ":", "\n", "            ", "print", "(", "'tick'", ",", "i", ")", "\n", "r", ".", "extend", "(", "self", ".", "attack_batch", "(", "imgs", "[", "i", ":", "i", "+", "self", ".", "batch_size", "]", ",", "targets", "[", "i", ":", "i", "+", "self", ".", "batch_size", "]", ")", ")", "\n", "", "return", "np", ".", "array", "(", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l0_ADMM_attack.ADMML0.attack_batch": [[220, 259], ["numpy.arctanh", "range", "range", "o_bestattack.append", "numpy.ones", "numpy.ones", "print", "numpy.where", "print", "l0_ADMM_attack.ADMML0.grad", "enumerate", "zip", "l0_ADMM_attack.ADMML0.compare", "numpy.argmax", "numpy.array", "numpy.argmax", "numpy.where", "numpy.nonzero"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.compare"], ["", "def", "attack_batch", "(", "self", ",", "imgs", ",", "labs", ")", ":", "\n", "        ", "\"\"\"\n        Run the attack on a batch of images and labels.\n        \"\"\"", "\n", "boxmul", "=", "(", "self", ".", "boxmax", "-", "self", ".", "boxmin", ")", "/", "2.", "\n", "boxplus", "=", "(", "self", ".", "boxmin", "+", "self", ".", "boxmax", ")", "/", "2.", "\n", "simgs", "=", "np", ".", "arctanh", "(", "(", "imgs", "-", "boxplus", ")", "/", "boxmul", "*", "0.999999", ")", "\n", "\n", "batch_size", "=", "self", ".", "batch_size", "\n", "o_bestl2", "=", "[", "1e10", "]", "*", "batch_size", "\n", "o_bestscore", "=", "[", "-", "1", "]", "*", "batch_size", "\n", "o_bestattack", "=", "[", "]", "\n", "#o_bestattack = [np.zeros(imgs[0].shape)] * batch_size", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "o_bestattack", ".", "append", "(", "imgs", "[", "i", "]", ")", "\n", "\n", "", "multi", "=", "0.0", "*", "np", ".", "ones", "(", "imgs", ".", "shape", ")", "\n", "modi", "=", "0.0", "*", "np", ".", "ones", "(", "imgs", ".", "shape", ")", "\n", "\n", "for", "outer_step", "in", "range", "(", "self", ".", "BINARY_SEARCH_STEPS", ")", ":", "\n", "            ", "print", "(", "outer_step", ",", "o_bestl2", ")", "\n", "\n", "temp", "=", "(", "modi", "-", "multi", ")", "\n", "\n", "delt", "=", "np", ".", "where", "(", "temp", "**", "2", "<", "(", "2.0", "/", "self", ".", "ro", ")", ",", "0", ",", "temp", ")", "\n", "\n", "print", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "delt", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "\n", "bestl2", ",", "bestscore", ",", "bestattack", ",", "modi", "=", "self", ".", "grad", "(", "simgs", ",", "labs", ",", "delt", ",", "multi", ")", "\n", "\n", "multi", "=", "multi", "+", "delt", "-", "modi", "\n", "\n", "for", "e", ",", "(", "l2", ",", "sc", ",", "ii", ")", "in", "enumerate", "(", "zip", "(", "bestl2", ",", "bestscore", ",", "bestattack", ")", ")", ":", "\n", "                ", "if", "l2", "<", "o_bestl2", "[", "e", "]", "and", "self", ".", "compare", "(", "sc", ",", "np", ".", "argmax", "(", "labs", "[", "e", "]", ")", ")", ":", "\n", "                    ", "o_bestl2", "[", "e", "]", "=", "l2", "\n", "o_bestscore", "[", "e", "]", "=", "np", ".", "argmax", "(", "sc", ")", "\n", "o_bestattack", "[", "e", "]", "=", "np", ".", "where", "(", "ii", "**", "2", "<", "(", "2.0", "/", "self", ".", "ro", ")", ",", "0", ",", "ii", ")", "+", "imgs", "[", "e", "]", "\n", "\n", "", "", "", "return", "o_bestattack", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_L0_attack.show": [[26, 32], ["fig.astype().squeeze.astype().squeeze", "PIL.Image.fromarray", "Image.fromarray.save", "fig.astype().squeeze.astype"], "function", ["None"], ["def", "show", "(", "img", ",", "name", "=", "\"output.png\"", ")", ":", "\n", "    ", "fig", "=", "(", "img", "+", "0.5", ")", "*", "255", "\n", "fig", "=", "fig", ".", "astype", "(", "np", ".", "uint8", ")", ".", "squeeze", "(", ")", "\n", "pic", "=", "Image", ".", "fromarray", "(", "fig", ")", "\n", "# pic.resize((512,512), resample=PIL.Image.BICUBIC)", "\n", "pic", ".", "save", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_L0_attack.generate_data": [[34, 100], ["random.seed", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "random.shuffle", "print", "print", "random.sample", "list", "list", "len", "list.pop", "model.model.predict", "range", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "range", "range", "numpy.reshape", "numpy.argmax", "numpy.argmax", "random.sample.append", "random.sample", "range", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "range", "numpy.argmax", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "generate_data", "(", "data", ",", "model", ",", "samples", ",", "targeted", "=", "True", ",", "target_num", "=", "9", ",", "start", "=", "0", ",", "inception", "=", "False", ",", "seed", "=", "3", ",", "handpick", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Generate the input data to the attack algorithm.\n\n    data: the images to attack\n    samples: number of samples to use\n    targeted: if true, construct targeted attacks, otherwise untargeted attacks\n    start: offset into data to use\n    inception: if targeted and inception, randomly sample 100 targets intead of 1000\n    \"\"\"", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "inputs", "=", "[", "]", "\n", "targets", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "true_ids", "=", "[", "]", "\n", "sample_set", "=", "[", "]", "\n", "\n", "data_d", "=", "data", ".", "test_data", "\n", "labels_d", "=", "data", ".", "test_labels", "\n", "\n", "if", "handpick", ":", "\n", "        ", "if", "inception", ":", "\n", "            ", "deck", "=", "list", "(", "range", "(", "0", ",", "1500", ")", ")", "\n", "", "else", ":", "\n", "            ", "deck", "=", "list", "(", "range", "(", "0", ",", "10000", ")", ")", "\n", "", "random", ".", "shuffle", "(", "deck", ")", "\n", "print", "(", "'Handpicking'", ")", "\n", "\n", "while", "(", "len", "(", "sample_set", ")", "<", "samples", ")", ":", "\n", "            ", "rand_int", "=", "deck", ".", "pop", "(", ")", "\n", "pred", "=", "model", ".", "model", ".", "predict", "(", "data_d", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "\n", "if", "inception", ":", "\n", "                ", "pred", "=", "np", ".", "reshape", "(", "pred", ",", "(", "labels_d", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "labels_d", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "sample_set", ".", "append", "(", "rand_int", ")", "\n", "", "", "print", "(", "'Handpicked'", ")", "\n", "", "else", ":", "\n", "        ", "sample_set", "=", "random", ".", "sample", "(", "range", "(", "0", ",", "10000", ")", ",", "samples", ")", "\n", "\n", "", "for", "i", "in", "sample_set", ":", "\n", "        ", "if", "targeted", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "seq", "=", "random", ".", "sample", "(", "range", "(", "1", ",", "1001", ")", ",", "target_num", ")", "\n", "", "else", ":", "\n", "                ", "seq", "=", "range", "(", "labels_d", ".", "shape", "[", "1", "]", ")", "\n", "\n", "", "for", "j", "in", "seq", ":", "\n", "                ", "if", "(", "j", "==", "np", ".", "argmax", "(", "labels_d", "[", "start", "+", "i", "]", ")", ")", "and", "(", "inception", "==", "False", ")", ":", "\n", "                    ", "continue", "\n", "", "inputs", ".", "append", "(", "data_d", "[", "start", "+", "i", "]", ")", "\n", "targets", ".", "append", "(", "np", ".", "eye", "(", "labels_d", ".", "shape", "[", "1", "]", ")", "[", "j", "]", ")", "\n", "labels", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "true_ids", ".", "append", "(", "start", "+", "i", ")", "\n", "", "", "else", ":", "\n", "            ", "inputs", ".", "append", "(", "data_d", "[", "start", "+", "i", "]", ")", "\n", "targets", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "labels", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "true_ids", ".", "append", "(", "start", "+", "i", ")", "\n", "\n", "", "", "inputs", "=", "np", ".", "array", "(", "inputs", ")", "\n", "targets", "=", "np", ".", "array", "(", "targets", ")", "\n", "labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "true_ids", "=", "np", ".", "array", "(", "true_ids", ")", "\n", "return", "inputs", ",", "targets", ",", "labels", ",", "true_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_L0_attack.l1_l2_li_computation": [[101, 231], ["range", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "len", "range", "enumerate", "numpy.random.randint", "enumerate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "os.path.exists", "os.makedirs", "range", "d_best_l2.append", "d_best_l1.append", "d_best_linf.append", "r_best.append", "r_best.append", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l2.append", "d_average_l1.append", "d_average_linf.append", "r_average.append", "range", "d_worst_l2.append", "d_worst_l1.append", "d_worst_linf.append", "r_worst.append", "range", "pred.append", "pred.append", "numpy.argmax", "numpy.argmax", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.sum", "numpy.amax", "numpy.argmax", "numpy.argmax", "r_worst.append", "numpy.sum", "numpy.amax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "test_L0_attack.show", "test_L0_attack.show", "str", "str", "numpy.reshape", "model.model.predict", "numpy.sum", "numpy.sum", "numpy.amax", "numpy.amax", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "numpy.amax", "numpy.amax", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.reshape", "numpy.reshape", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "model.model.predict", "model.model.predict", "numpy.abs", "numpy.sum", "numpy.abs", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l1_l2_li_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ")", ":", "\n", "\n", "    ", "r_best", "=", "[", "]", "\n", "d_best_l1", "=", "[", "]", "\n", "d_best_l2", "=", "[", "]", "\n", "d_best_linf", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "d_average_l1", "=", "[", "]", "\n", "d_average_l2", "=", "[", "]", "\n", "d_average_linf", "=", "[", "]", "\n", "r_worst", "=", "[", "]", "\n", "d_worst_l1", "=", "[", "]", "\n", "d_worst_l2", "=", "[", "]", "\n", "d_worst_linf", "=", "[", "]", "\n", "\n", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "inputs", ")", ",", "args", "[", "'target_number'", "]", ")", ":", "\n", "        ", "pred", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "pred", ".", "append", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "pred", ".", "append", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ")", "\n", "\n", "", "", "dist_l1", "=", "1e10", "\n", "dist_l2", "=", "1e10", "\n", "dist_linf", "=", "1e10", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_l2_index", "=", "1e10", "\n", "dist_linf_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "if", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "<", "dist_l1", ")", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_l1_index", "=", "j", "\n", "", "if", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "<", "dist_linf", ")", ":", "\n", "                    ", "dist_linf", "=", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_linf_index", "=", "j", "\n", "", "if", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "<", "dist_l2", ")", ":", "\n", "                    ", "dist_l2", "=", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "dist_l2_index", "=", "j", "\n", "", "", "", "if", "(", "dist_l1_index", "!=", "1e10", ")", ":", "\n", "            ", "d_best_l2", ".", "append", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "dist_l2_index", "]", "-", "inputs", "[", "dist_l2_index", "]", ")", "**", "2", ")", "**", ".5", ")", ")", "\n", "d_best_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", "\n", "d_best_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "dist_linf_index", "]", "-", "inputs", "[", "dist_linf_index", "]", ")", ")", ")", "\n", "r_best", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "r_best", ".", "append", "(", "0", ")", "\n", "\n", "", "rand_int", "=", "np", ".", "random", ".", "randint", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", "\n", "if", "inception", ":", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l2", ".", "append", "(", "np", ".", "sum", "(", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "d_average_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", "\n", "d_average_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "", "dist_l1", "=", "0", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_linf", "=", "0", "\n", "dist_linf_index", "=", "1e10", "\n", "dist_l2", "=", "0", "\n", "dist_l2_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "r_worst", ".", "append", "(", "0", ")", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_l2_index", "=", "1e10", "\n", "dist_linf_index", "=", "1e10", "\n", "break", "\n", "", "else", ":", "\n", "                ", "if", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ">", "dist_l1", ")", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_l1_index", "=", "j", "\n", "", "if", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ">", "dist_linf", ")", ":", "\n", "                    ", "dist_linf", "=", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_linf_index", "=", "j", "\n", "", "if", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", ">", "dist_l2", ")", ":", "\n", "                    ", "dist_l2", "=", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "dist_l2_index", "=", "j", "\n", "", "", "", "if", "(", "dist_l1_index", "!=", "1e10", ")", ":", "\n", "            ", "d_worst_l2", ".", "append", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "dist_l2_index", "]", "-", "inputs", "[", "dist_l2_index", "]", ")", "**", "2", ")", "**", ".5", ")", ")", "\n", "d_worst_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", "\n", "d_worst_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "dist_linf_index", "]", "-", "inputs", "[", "dist_linf_index", "]", ")", ")", ")", "\n", "r_worst", ".", "append", "(", "1", ")", "\n", "\n", "", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'batch_size'", "]", ")", ":", "\n", "                ", "target_id", "=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "label_id", "=", "np", ".", "argmax", "(", "labels", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "prev_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ")", ",", "\n", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "adv_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "suffix", "=", "\"id{}_seq{}_lbl{}_prev{}_adv{}_{}_l1_{:.3f}_l2_{:.3f}_linf_{:.3f}\"", ".", "format", "(", "\n", "true_ids", "[", "i", "]", ",", "\n", "target_id", ",", "\n", "label_id", ",", "\n", "prev_id", ",", "\n", "adv_id", ",", "\n", "adv_id", "==", "target_id", ",", "\n", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ",", "\n", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ",", "\n", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", "\n", "\n", "show", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/original_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "show", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/adversarial_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "\n", "", "", "", "print", "(", "'best_case_L1_mean'", ",", "np", ".", "mean", "(", "d_best_l1", ")", ")", "\n", "print", "(", "'best_case_L2_mean'", ",", "np", ".", "mean", "(", "d_best_l2", ")", ")", "\n", "print", "(", "'best_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_best_linf", ")", ")", "\n", "print", "(", "'best_case_prob'", ",", "np", ".", "mean", "(", "r_best", ")", ")", "\n", "print", "(", "'average_case_L1_mean'", ",", "np", ".", "mean", "(", "d_average_l1", ")", ")", "\n", "print", "(", "'average_case_L2_mean'", ",", "np", ".", "mean", "(", "d_average_l2", ")", ")", "\n", "print", "(", "'average_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_average_linf", ")", ")", "\n", "print", "(", "'average_case_prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "print", "(", "'worst_case_L1_mean'", ",", "np", ".", "mean", "(", "d_worst_l1", ")", ")", "\n", "print", "(", "'worst_case_L2_mean'", ",", "np", ".", "mean", "(", "d_worst_l2", ")", ")", "\n", "print", "(", "'worst_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_worst_linf", ")", ")", "\n", "print", "(", "'worst_case_prob'", ",", "np", ".", "mean", "(", "r_worst", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_L0_attack.l0_computation": [[233, 329], ["range", "print", "print", "print", "print", "print", "print", "len", "range", "enumerate", "numpy.random.randint", "enumerate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "os.path.exists", "os.makedirs", "range", "d_best_l1.append", "r_best.append", "r_best.append", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l1.append", "r_average.append", "range", "d_worst_l1.append", "r_worst.append", "range", "pred.append", "pred.append", "numpy.argmax", "numpy.argmax", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_worst.append", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "test_L0_attack.show", "test_L0_attack.show", "str", "str", "numpy.reshape", "model.model.predict", "numpy.reshape", "numpy.reshape", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.array", "numpy.array", "numpy.array", "model.model.predict", "model.model.predict", "numpy.abs", "numpy.sum", "numpy.abs", "str", "str", "numpy.array", "numpy.array", "numpy.nonzero", "numpy.nonzero", "numpy.array", "numpy.array", "numpy.nonzero", "str", "str", "str", "str", "numpy.nonzero", "numpy.nonzero", "numpy.where", "numpy.where", "numpy.nonzero", "numpy.nonzero", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "str", "str", "numpy.abs", "numpy.abs", "numpy.abs", "str", "str", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l0_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ")", ":", "\n", "    ", "r_best", "=", "[", "]", "\n", "d_best_l1", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "d_average_l1", "=", "[", "]", "\n", "r_worst", "=", "[", "]", "\n", "d_worst_l1", "=", "[", "]", "\n", "\n", "if", "args", "[", "'show'", "]", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "inputs", ")", ",", "args", "[", "'target_number'", "]", ")", ":", "\n", "        ", "pred", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "pred", ".", "append", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "pred", ".", "append", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ")", "\n", "\n", "", "", "dist_l1", "=", "1e10", "\n", "dist_l1_index", "=", "1e10", "\n", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ":", "\n", "#if np.array(np.nonzero(adv[j]-inputs[j])).shape[1] < dist_l1:", "\n", "                ", "if", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-6", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "<", "dist_l1", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-6", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "\n", "#abc = np.array(adv[j]-inputs[j])", "\n", "#print(np.nonzero(np.where(adv[j] - inputs[j] < 1e-8, 0, adv[j] - inputs[j])))", "\n", "dist_l1_index", "=", "j", "\n", "", "", "", "if", "dist_l1_index", "!=", "1e10", ":", "\n", "            ", "d_best_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", "<", "1e-6", ",", "0", ",", "\n", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "r_best", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "r_best", ".", "append", "(", "0", ")", "\n", "\n", "", "rand_int", "=", "np", ".", "random", ".", "randint", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", "\n", "if", "inception", ":", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "", "if", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", "<", "1e-6", ",", "0", ",", "\n", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "", "dist_l1", "=", "0", "\n", "dist_l1_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "r_worst", ".", "append", "(", "0", ")", "\n", "dist_l1_index", "=", "1e10", "\n", "break", "\n", "", "else", ":", "\n", "                ", "if", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-6", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ">", "dist_l1", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-6", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "\n", "dist_l1_index", "=", "j", "\n", "\n", "", "", "", "if", "dist_l1_index", "!=", "1e10", ":", "\n", "            ", "d_worst_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", "<", "1e-6", ",", "0", ",", "\n", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "r_worst", ".", "append", "(", "1", ")", "\n", "\n", "", "if", "args", "[", "'show'", "]", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'batch_size'", "]", ")", ":", "\n", "                ", "target_id", "=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "label_id", "=", "np", ".", "argmax", "(", "labels", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "prev_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ")", ",", "\n", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "adv_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "suffix", "=", "\"id{}_seq{}_lbl{}_prev{}_adv{}_{}_l1_{:.3f}_l2_{:.3f}_linf_{:.3f}\"", ".", "format", "(", "\n", "true_ids", "[", "i", "]", ",", "\n", "target_id", ",", "\n", "label_id", ",", "\n", "prev_id", ",", "\n", "adv_id", ",", "\n", "adv_id", "==", "target_id", ",", "\n", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ",", "\n", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ",", "\n", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", "\n", "\n", "show", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/original_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "show", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/adversarial_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "\n", "", "", "", "print", "(", "'best_case_L0_mean'", ",", "np", ".", "mean", "(", "d_best_l1", ")", ")", "\n", "print", "(", "'best_case_prob'", ",", "np", ".", "mean", "(", "r_best", ")", ")", "\n", "print", "(", "'average_case_L0_mean'", ",", "np", ".", "mean", "(", "d_average_l1", ")", ")", "\n", "print", "(", "'average_case_prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "print", "(", "'worst_case_L0_mean'", ",", "np", ".", "mean", "(", "d_worst_l1", ")", ")", "\n", "print", "(", "'worst_case_prob'", ",", "np", ".", "mean", "(", "r_worst", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_L0_attack.main": [[331, 388], ["tensorflow.Session", "test_L0_attack.generate_data", "time.time", "l0_ADMM_attack.ADMML0.attack", "time.time", "print", "setup_mnist.MNISTModel", "setup_mnist.MNISTModel", "setup_cifar.CIFARModel", "l2_attack.CarliniL2", "l0_ADMM_attack.ADMML0", "len", "numpy.save", "numpy.save", "setup_mnist.MNISTModel", "test_L0_attack.l1_l2_li_computation", "test_L0_attack.l0_computation", "setup_mnist.MNIST", "setup_mnist.MNISTModel", "setup_cifar.CIFAR", "setup_cifar.CIFARModel", "setup_inception.ImageNet", "setup_inception.InceptionModel", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.generate_data", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.attack", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l1_l2_li_computation", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l0_computation"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "if", "args", "[", "'dataset'", "]", "==", "'mnist'", ":", "\n", "            ", "data", ",", "model", "=", "MNIST", "(", ")", ",", "MNISTModel", "(", "\"models/mnist\"", ",", "sess", ")", "\n", "handpick", "=", "False", "\n", "inception", "=", "False", "\n", "", "if", "args", "[", "'dataset'", "]", "==", "\"cifar\"", ":", "\n", "            ", "data", ",", "model", "=", "CIFAR", "(", ")", ",", "CIFARModel", "(", "\"models/cifar\"", ",", "sess", ")", "\n", "handpick", "=", "True", "\n", "inception", "=", "False", "\n", "", "if", "args", "[", "'dataset'", "]", "==", "\"imagenet\"", ":", "\n", "            ", "data", ",", "model", "=", "ImageNet", "(", "args", "[", "'seed_imagenet'", "]", ")", ",", "InceptionModel", "(", "sess", ")", "\n", "handpick", "=", "True", "\n", "inception", "=", "True", "\n", "\n", "", "if", "args", "[", "'adversarial'", "]", "!=", "\"none\"", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist_cwl2_admm\"", "+", "str", "(", "args", "[", "'adversarial'", "]", ")", ",", "sess", ")", "\n", "\n", "", "if", "args", "[", "'temp'", "]", "and", "args", "[", "'dataset'", "]", "==", "'mnist'", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist-distilled-\"", "+", "str", "(", "args", "[", "'temp'", "]", ")", ",", "sess", ")", "\n", "", "if", "args", "[", "'temp'", "]", "and", "args", "[", "'dataset'", "]", "==", "'cifar'", ":", "\n", "            ", "model", "=", "CIFARModel", "(", "\"models/cifar-distilled-\"", "+", "str", "(", "args", "[", "'temp'", "]", ")", ",", "sess", ")", "\n", "\n", "", "inputs", ",", "targets", ",", "labels", ",", "true_ids", "=", "generate_data", "(", "data", ",", "model", ",", "samples", "=", "args", "[", "'numimg'", "]", ",", "targeted", "=", "True", ",", "\n", "start", "=", "0", ",", "inception", "=", "inception", ",", "handpick", "=", "handpick", ",", "seed", "=", "args", "[", "'seed'", "]", ")", "\n", "\n", "#print(true_ids)", "\n", "if", "args", "[", "'attack'", "]", "==", "'L2C'", ":", "\n", "            ", "attack", "=", "CarliniL2", "(", "sess", ",", "model", ",", "batch_size", "=", "args", "[", "'batch_size'", "]", ",", "max_iterations", "=", "args", "[", "'maxiter'", "]", ",", "\n", "confidence", "=", "args", "[", "'conf'", "]", ",", "\n", "binary_search_steps", "=", "args", "[", "'binary_steps'", "]", ",", "\n", "abort_early", "=", "args", "[", "'abort_early'", "]", ")", "\n", "\n", "\n", "", "if", "args", "[", "'attack'", "]", "==", "'L0A'", ":", "\n", "            ", "attack", "=", "ADMML0", "(", "sess", ",", "model", ",", "batch_size", "=", "args", "[", "'batch_size'", "]", ",", "max_iterations", "=", "args", "[", "'maxiter'", "]", ",", "\n", "confidence", "=", "args", "[", "'conf'", "]", ",", "binary_search_steps", "=", "args", "[", "'iteration_steps'", "]", ",", "ro", "=", "args", "[", "'ro'", "]", ",", "\n", "abort_early", "=", "args", "[", "'abort_early'", "]", ")", "\n", "\n", "\n", "", "timestart", "=", "time", ".", "time", "(", ")", "\n", "adv", "=", "attack", ".", "attack", "(", "inputs", ",", "targets", ")", "\n", "timeend", "=", "time", ".", "time", "(", ")", "\n", "\n", "print", "(", "\"Took\"", ",", "timeend", "-", "timestart", ",", "\"seconds to run\"", ",", "len", "(", "inputs", ")", ",", "\"samples.\\n\"", ")", "\n", "\n", "if", "args", "[", "'train'", "]", ":", "\n", "            ", "np", ".", "save", "(", "'labels_train.npy'", ",", "labels", ")", "\n", "np", ".", "save", "(", "str", "(", "args", "[", "'attack'", "]", ")", "+", "'_train.npy'", ",", "adv", ")", "\n", "\n", "", "if", "(", "args", "[", "'conf'", "]", "!=", "0", ")", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist-distilled-100\"", ",", "sess", ")", "\n", "\n", "", "if", "args", "[", "'attack'", "]", "!=", "'L0A'", "and", "args", "[", "'attack'", "]", "!=", "'L0AE'", "and", "args", "[", "'attack'", "]", "!=", "'L0C'", "and", "args", "[", "'attack'", "]", "!=", "'L0AE2'", ":", "\n", "            ", "l1_l2_li_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ")", "\n", "", "else", ":", "\n", "            ", "l0_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_cifar.show": [[20, 26], ["fig.astype().squeeze.astype().squeeze", "PIL.Image.fromarray", "Image.fromarray.save", "fig.astype().squeeze.astype"], "function", ["None"], ["def", "show", "(", "img", ",", "name", "=", "\"output.png\"", ")", ":", "\n", "    ", "fig", "=", "(", "img", "+", "0.5", ")", "*", "255", "\n", "fig", "=", "fig", ".", "astype", "(", "np", ".", "uint8", ")", ".", "squeeze", "(", ")", "\n", "pic", "=", "Image", ".", "fromarray", "(", "fig", ")", "\n", "# pic.resize((512,512), resample=PIL.Image.BICUBIC)", "\n", "pic", ".", "save", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_cifar.generate_data": [[28, 95], ["random.seed", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "random.shuffle", "print", "print", "random.sample", "list", "list", "len", "list.pop", "model.model.predict", "range", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "range", "range", "numpy.reshape", "numpy.argmax", "numpy.argmax", "random.sample.append", "random.sample", "range", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "range", "numpy.argmax", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "generate_data", "(", "data", ",", "model", ",", "samples", ",", "targeted", "=", "True", ",", "target_num", "=", "9", ",", "start", "=", "0", ",", "inception", "=", "False", ",", "seed", "=", "3", ",", "handpick", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Generate the input data to the attack algorithm.\n\n    data: the images to attack\n    samples: number of samples to use\n    targeted: if true, construct targeted attacks, otherwise untargeted attacks\n    start: offset into data to use\n    inception: if targeted and inception, randomly sample 100 targets intead of 1000\n    \"\"\"", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "inputs", "=", "[", "]", "\n", "targets", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "true_ids", "=", "[", "]", "\n", "sample_set", "=", "[", "]", "\n", "\n", "data_d", "=", "data", ".", "test_data", "\n", "labels_d", "=", "data", ".", "test_labels", "\n", "\n", "if", "handpick", ":", "\n", "        ", "if", "inception", ":", "\n", "            ", "deck", "=", "list", "(", "range", "(", "0", ",", "1500", ")", ")", "\n", "", "else", ":", "\n", "            ", "deck", "=", "list", "(", "range", "(", "0", ",", "10000", ")", ")", "\n", "", "random", ".", "shuffle", "(", "deck", ")", "\n", "print", "(", "'Handpicking'", ")", "\n", "\n", "while", "(", "len", "(", "sample_set", ")", "<", "samples", ")", ":", "\n", "            ", "rand_int", "=", "deck", ".", "pop", "(", ")", "\n", "pred", "=", "model", ".", "model", ".", "predict", "(", "data_d", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "\n", "if", "inception", ":", "\n", "                ", "pred", "=", "np", ".", "reshape", "(", "pred", ",", "(", "labels_d", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "labels_d", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "sample_set", ".", "append", "(", "rand_int", ")", "\n", "", "", "print", "(", "'Handpicked'", ")", "\n", "", "else", ":", "\n", "        ", "sample_set", "=", "random", ".", "sample", "(", "range", "(", "0", ",", "10000", ")", ",", "samples", ")", "\n", "\n", "", "for", "i", "in", "sample_set", ":", "\n", "        ", "if", "targeted", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "seq", "=", "random", ".", "sample", "(", "range", "(", "1", ",", "1001", ")", ",", "target_num", ")", "\n", "", "else", ":", "\n", "                ", "seq", "=", "range", "(", "labels_d", ".", "shape", "[", "1", "]", ")", "\n", "\n", "#      seq = {1}", "\n", "", "for", "j", "in", "seq", ":", "\n", "                ", "if", "(", "j", "==", "np", ".", "argmax", "(", "labels_d", "[", "start", "+", "i", "]", ")", ")", "and", "(", "inception", "==", "False", ")", ":", "\n", "                    ", "continue", "\n", "", "inputs", ".", "append", "(", "data_d", "[", "start", "+", "i", "]", ")", "\n", "targets", ".", "append", "(", "np", ".", "eye", "(", "labels_d", ".", "shape", "[", "1", "]", ")", "[", "j", "]", ")", "\n", "labels", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "true_ids", ".", "append", "(", "start", "+", "i", ")", "\n", "", "", "else", ":", "\n", "            ", "inputs", ".", "append", "(", "data_d", "[", "start", "+", "i", "]", ")", "\n", "targets", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "labels", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "true_ids", ".", "append", "(", "start", "+", "i", ")", "\n", "\n", "", "", "inputs", "=", "np", ".", "array", "(", "inputs", ")", "\n", "targets", "=", "np", ".", "array", "(", "targets", ")", "\n", "labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "true_ids", "=", "np", ".", "array", "(", "true_ids", ")", "\n", "return", "inputs", ",", "targets", ",", "labels", ",", "true_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_cifar.l1_l2_li_computation": [[96, 245], ["range", "numpy.reshape", "numpy.amin", "numpy.mean", "numpy.amax", "numpy.reshape", "numpy.amin", "numpy.mean", "numpy.amax", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "len", "range", "enumerate", "numpy.random.randint", "enumerate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "os.path.exists", "os.makedirs", "range", "d_best_l2.append", "d_best_l1.append", "d_best_linf.append", "r_best.append", "r_best.append", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l2.append", "d_average_l1.append", "d_average_linf.append", "r_average.append", "range", "d_worst_l2.append", "d_worst_l1.append", "d_worst_linf.append", "r_worst.append", "range", "pred.append", "pred.append", "numpy.argmax", "numpy.argmax", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.sum", "numpy.amax", "numpy.argmax", "numpy.argmax", "r_worst.append", "numpy.sum", "numpy.amax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "test_attack_cifar.show", "test_attack_cifar.show", "numpy.sqrt", "str", "str", "numpy.reshape", "model.model.predict", "numpy.sum", "numpy.sum", "numpy.amax", "numpy.amax", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "numpy.amax", "numpy.amax", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.reshape", "numpy.reshape", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "model.model.predict", "model.model.predict", "numpy.abs", "numpy.sum", "numpy.abs", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l1_l2_li_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", ":", "\n", "\n", "    ", "r_best", "=", "[", "]", "\n", "d_best_l1", "=", "[", "]", "\n", "d_best_l2", "=", "[", "]", "\n", "d_best_linf", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "d_average_l1", "=", "[", "]", "\n", "d_average_l2", "=", "[", "]", "\n", "d_average_linf", "=", "[", "]", "\n", "r_worst", "=", "[", "]", "\n", "d_worst_l1", "=", "[", "]", "\n", "d_worst_l2", "=", "[", "]", "\n", "d_worst_linf", "=", "[", "]", "\n", "\n", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "inputs", ")", ",", "args", "[", "'target_number'", "]", ")", ":", "\n", "        ", "pred", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "pred", ".", "append", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "pred", ".", "append", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ")", "\n", "\n", "", "", "dist_l1", "=", "1e10", "\n", "dist_l2", "=", "1e10", "\n", "dist_linf", "=", "1e10", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_l2_index", "=", "1e10", "\n", "dist_linf_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "if", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "<", "dist_l1", ")", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_l1_index", "=", "j", "\n", "", "if", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "<", "dist_linf", ")", ":", "\n", "                    ", "dist_linf", "=", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_linf_index", "=", "j", "\n", "", "if", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "<", "dist_l2", ")", ":", "\n", "                    ", "dist_l2", "=", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "dist_l2_index", "=", "j", "\n", "", "", "", "if", "(", "dist_l1_index", "!=", "1e10", ")", ":", "\n", "            ", "d_best_l2", ".", "append", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "dist_l2_index", "]", "-", "inputs", "[", "dist_l2_index", "]", ")", "**", "2", ")", "**", ".5", ")", ")", "\n", "d_best_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", "\n", "d_best_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "dist_linf_index", "]", "-", "inputs", "[", "dist_linf_index", "]", ")", ")", ")", "\n", "r_best", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "r_best", ".", "append", "(", "0", ")", "\n", "\n", "", "rand_int", "=", "np", ".", "random", ".", "randint", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", "\n", "if", "inception", ":", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l2", ".", "append", "(", "np", ".", "sum", "(", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "d_average_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", "\n", "d_average_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "", "dist_l1", "=", "0", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_linf", "=", "0", "\n", "dist_linf_index", "=", "1e10", "\n", "dist_l2", "=", "0", "\n", "dist_l2_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "r_worst", ".", "append", "(", "0", ")", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_l2_index", "=", "1e10", "\n", "dist_linf_index", "=", "1e10", "\n", "break", "\n", "", "else", ":", "\n", "                ", "if", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ">", "dist_l1", ")", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_l1_index", "=", "j", "\n", "", "if", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ">", "dist_linf", ")", ":", "\n", "                    ", "dist_linf", "=", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_linf_index", "=", "j", "\n", "", "if", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", ">", "dist_l2", ")", ":", "\n", "                    ", "dist_l2", "=", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "dist_l2_index", "=", "j", "\n", "", "", "", "if", "(", "dist_l1_index", "!=", "1e10", ")", ":", "\n", "            ", "d_worst_l2", ".", "append", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "dist_l2_index", "]", "-", "inputs", "[", "dist_l2_index", "]", ")", "**", "2", ")", "**", ".5", ")", ")", "\n", "d_worst_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", "\n", "d_worst_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "dist_linf_index", "]", "-", "inputs", "[", "dist_linf_index", "]", ")", ")", ")", "\n", "r_worst", ".", "append", "(", "1", ")", "\n", "\n", "", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'batch_size'", "]", ")", ":", "\n", "                ", "target_id", "=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "label_id", "=", "np", ".", "argmax", "(", "labels", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "prev_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ")", ",", "\n", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "adv_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "suffix", "=", "\"id{}_seq{}_lbl{}_prev{}_adv{}_{}_l1_{:.3f}_l2_{:.3f}_linf_{:.3f}\"", ".", "format", "(", "\n", "true_ids", "[", "i", "]", ",", "\n", "target_id", ",", "\n", "label_id", ",", "\n", "prev_id", ",", "\n", "adv_id", ",", "\n", "adv_id", "==", "target_id", ",", "\n", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ",", "\n", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ",", "\n", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", "\n", "\n", "show", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/original_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "show", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/adversarial_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "\n", "", "", "", "querycount", "=", "np", ".", "reshape", "(", "querycount", ",", "(", "-", "1", ",", "9", ")", ")", "\n", "qc_batch_min", "=", "np", ".", "amin", "(", "querycount", ",", "axis", "=", "1", ")", "\n", "qc_batch_mean", "=", "np", ".", "mean", "(", "querycount", ",", "axis", "=", "1", ")", "\n", "qc_batch_max", "=", "np", ".", "amax", "(", "querycount", ",", "axis", "=", "1", ")", "\n", "queryl23", "=", "np", ".", "sqrt", "(", "queryl2", ")", "/", "inputs", ".", "shape", "[", "1", "]", "/", "inputs", ".", "shape", "[", "2", "]", "/", "inputs", ".", "shape", "[", "3", "]", "\n", "queryl23", "=", "np", ".", "reshape", "(", "queryl23", ",", "(", "-", "1", ",", "9", ")", ")", "\n", "qcl2_batch_min", "=", "np", ".", "amin", "(", "queryl23", ",", "axis", "=", "1", ")", "\n", "qcl2_batch_mean", "=", "np", ".", "mean", "(", "queryl23", ",", "axis", "=", "1", ")", "\n", "qcl2_batch_max", "=", "np", ".", "amax", "(", "queryl23", ",", "axis", "=", "1", ")", "\n", "\n", "\n", "print", "(", "'best_case_L1_mean'", ",", "np", ".", "mean", "(", "d_best_l1", ")", ")", "\n", "print", "(", "'best_case_L2_mean'", ",", "np", ".", "mean", "(", "d_best_l2", ")", ")", "\n", "print", "(", "'best_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_best_linf", ")", ")", "\n", "print", "(", "'best_case_prob'", ",", "np", ".", "mean", "(", "r_best", ")", ")", "\n", "print", "(", "'average_case_L1_mean'", ",", "np", ".", "mean", "(", "d_average_l1", ")", ")", "\n", "print", "(", "'average_case_L2_mean'", ",", "np", ".", "mean", "(", "d_average_l2", ")", ")", "\n", "print", "(", "'average_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_average_linf", ")", ")", "\n", "print", "(", "'average_case_prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "print", "(", "'worst_case_L1_mean'", ",", "np", ".", "mean", "(", "d_worst_l1", ")", ")", "\n", "print", "(", "'worst_case_L2_mean'", ",", "np", ".", "mean", "(", "d_worst_l2", ")", ")", "\n", "print", "(", "'worst_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_worst_linf", ")", ")", "\n", "print", "(", "'worst_case_prob'", ",", "np", ".", "mean", "(", "r_worst", ")", ")", "\n", "\n", "print", "(", "'smallest_query_count'", ",", "np", ".", "mean", "(", "qc_batch_min", ")", ")", "\n", "print", "(", "'mean_query_count'", ",", "np", ".", "mean", "(", "qc_batch_mean", ")", ")", "\n", "print", "(", "'largest_query_count'", ",", "np", ".", "mean", "(", "qc_batch_max", ")", ")", "\n", "\n", "print", "(", "'smallest_query_l2_first_success'", ",", "np", ".", "mean", "(", "qcl2_batch_min", ")", ")", "\n", "print", "(", "'mean_query_l2_first_success'", ",", "np", ".", "mean", "(", "qcl2_batch_mean", ")", ")", "\n", "print", "(", "'largest_query_l2_first_success'", ",", "np", ".", "mean", "(", "qcl2_batch_max", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_cifar.l2_computation": [[247, 277], ["range", "print", "print", "print", "print", "print", "print", "len", "numpy.array", "numpy.mean", "numpy.mean", "numpy.min", "numpy.mean", "numpy.max", "os.path.exists", "os.makedirs", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l2.append", "r_average.append", "model.model.predict", "str", "str", "numpy.sum", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l2_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", ":", "\n", "\n", "    ", "d_average_l2", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "j", "in", "range", "(", "len", "(", "inputs", ")", ")", ":", "\n", "#    pred = []", "\n", "        ", "if", "inception", ":", "\n", "#        pred.append(np.reshape(model.model.predict(adv[j:j + 1]), (data.test_labels[0:1].shape)))", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "#       pred.append(model.model.predict(adv[j:j + 1]))", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", "\n", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l2", ".", "append", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "", "", "print", "(", "np", ".", "array", "(", "d_average_l2", ")", ")", "\n", "print", "(", "'average_L2_mean'", ",", "np", ".", "mean", "(", "d_average_l2", ")", ")", "\n", "print", "(", "'average__prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "\n", "print", "(", "'smallest_query_count'", ",", "np", ".", "min", "(", "querycount", ")", ")", "\n", "print", "(", "'mean_query_count'", ",", "np", ".", "mean", "(", "querycount", ")", ")", "\n", "print", "(", "'largest_query_count'", ",", "np", ".", "max", "(", "querycount", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_cifar.l0_computation": [[279, 375], ["range", "print", "print", "print", "print", "print", "print", "len", "range", "enumerate", "numpy.random.randint", "enumerate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "os.path.exists", "os.makedirs", "range", "d_best_l1.append", "r_best.append", "r_best.append", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l1.append", "r_average.append", "range", "d_worst_l1.append", "r_worst.append", "range", "pred.append", "pred.append", "numpy.argmax", "numpy.argmax", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_worst.append", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "test_attack_cifar.show", "test_attack_cifar.show", "str", "str", "numpy.reshape", "model.model.predict", "numpy.reshape", "numpy.reshape", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.array", "numpy.array", "numpy.array", "model.model.predict", "model.model.predict", "numpy.abs", "numpy.sum", "numpy.abs", "str", "str", "numpy.array", "numpy.array", "numpy.nonzero", "numpy.nonzero", "numpy.array", "numpy.array", "numpy.nonzero", "str", "str", "str", "str", "numpy.nonzero", "numpy.nonzero", "numpy.where", "numpy.where", "numpy.nonzero", "numpy.nonzero", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "str", "str", "numpy.abs", "numpy.abs", "numpy.abs", "str", "str", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l0_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ")", ":", "\n", "    ", "r_best", "=", "[", "]", "\n", "d_best_l1", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "d_average_l1", "=", "[", "]", "\n", "r_worst", "=", "[", "]", "\n", "d_worst_l1", "=", "[", "]", "\n", "\n", "if", "args", "[", "'show'", "]", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "inputs", ")", ",", "args", "[", "'target_number'", "]", ")", ":", "\n", "        ", "pred", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "pred", ".", "append", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "pred", ".", "append", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ")", "\n", "\n", "", "", "dist_l1", "=", "1e10", "\n", "dist_l1_index", "=", "1e10", "\n", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ":", "\n", "#if np.array(np.nonzero(adv[j]-inputs[j])).shape[1] < dist_l1:", "\n", "                ", "if", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "<", "dist_l1", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "\n", "#abc = np.array(adv[j]-inputs[j])", "\n", "#print(np.nonzero(np.where(adv[j] - inputs[j] < 1e-8, 0, adv[j] - inputs[j])))", "\n", "dist_l1_index", "=", "j", "\n", "", "", "", "if", "dist_l1_index", "!=", "1e10", ":", "\n", "            ", "d_best_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", "<", "1e-7", ",", "0", ",", "\n", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "r_best", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "r_best", ".", "append", "(", "0", ")", "\n", "\n", "", "rand_int", "=", "np", ".", "random", ".", "randint", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", "\n", "if", "inception", ":", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "", "if", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", "<", "1e-7", ",", "0", ",", "\n", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "", "dist_l1", "=", "0", "\n", "dist_l1_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "r_worst", ".", "append", "(", "0", ")", "\n", "dist_l1_index", "=", "1e10", "\n", "break", "\n", "", "else", ":", "\n", "                ", "if", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ">", "dist_l1", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "\n", "dist_l1_index", "=", "j", "\n", "\n", "", "", "", "if", "dist_l1_index", "!=", "1e10", ":", "\n", "            ", "d_worst_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", "<", "1e-7", ",", "0", ",", "\n", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "r_worst", ".", "append", "(", "1", ")", "\n", "\n", "", "if", "args", "[", "'show'", "]", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'batch_size'", "]", ")", ":", "\n", "                ", "target_id", "=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "label_id", "=", "np", ".", "argmax", "(", "labels", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "prev_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ")", ",", "\n", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "adv_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "suffix", "=", "\"id{}_seq{}_lbl{}_prev{}_adv{}_{}_l1_{:.3f}_l2_{:.3f}_linf_{:.3f}\"", ".", "format", "(", "\n", "true_ids", "[", "i", "]", ",", "\n", "target_id", ",", "\n", "label_id", ",", "\n", "prev_id", ",", "\n", "adv_id", ",", "\n", "adv_id", "==", "target_id", ",", "\n", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ",", "\n", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ",", "\n", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", "\n", "\n", "show", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/original_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "show", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/adversarial_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "\n", "", "", "", "print", "(", "'best_case_L0_mean'", ",", "np", ".", "mean", "(", "d_best_l1", ")", ")", "\n", "print", "(", "'best_case_prob'", ",", "np", ".", "mean", "(", "r_best", ")", ")", "\n", "print", "(", "'average_case_L0_mean'", ",", "np", ".", "mean", "(", "d_average_l1", ")", ")", "\n", "print", "(", "'average_case_prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "print", "(", "'worst_case_L0_mean'", ",", "np", ".", "mean", "(", "d_worst_l1", ")", ")", "\n", "print", "(", "'worst_case_prob'", ",", "np", ".", "mean", "(", "r_worst", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_cifar.main": [[377, 442], ["tensorflow.Session", "layer.weights[].shape.as_list", "test_attack_cifar.generate_data", "time.time", "l2_blackbox_attack.LADMMBB.attack", "time.time", "print", "setup_mnist.MNISTModel", "setup_mnist.MNISTModel", "setup_cifar.CIFARModel", "l2_attack.CarliniL2", "l2_blackbox_attack.LADMMBB", "len", "numpy.save", "numpy.save", "setup_mnist.MNISTModel", "test_attack_cifar.l0_computation", "setup_mnist.MNIST", "setup_mnist.MNISTModel", "setup_cifar.CIFAR", "setup_cifar.CIFARModel", "setup_inception.ImageNet", "setup_inception.InceptionModel", "test_attack_cifar.l1_l2_li_computation", "test_attack_cifar.l2_computation", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.generate_data", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.attack", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l0_computation", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l1_l2_li_computation", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l2_computation"], ["", "def", "main", "(", "args", ")", ":", "\n", "#   gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.7)", "\n", "    ", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "if", "args", "[", "'dataset'", "]", "==", "'mnist'", ":", "\n", "            ", "data", ",", "model", "=", "MNIST", "(", ")", ",", "MNISTModel", "(", "\"models/mnist\"", ",", "sess", ")", "\n", "handpick", "=", "False", "\n", "inception", "=", "False", "\n", "", "if", "args", "[", "'dataset'", "]", "==", "\"cifar\"", ":", "\n", "            ", "data", ",", "model", "=", "CIFAR", "(", ")", ",", "CIFARModel", "(", "\"models/cifar\"", ",", "sess", ")", "\n", "handpick", "=", "True", "\n", "inception", "=", "False", "\n", "", "if", "args", "[", "'dataset'", "]", "==", "\"imagenet\"", ":", "\n", "            ", "data", ",", "model", "=", "ImageNet", "(", "args", "[", "'seed_imagenet'", "]", ")", ",", "InceptionModel", "(", "sess", ")", "\n", "handpick", "=", "True", "\n", "inception", "=", "True", "\n", "\n", "", "if", "args", "[", "'adversarial'", "]", "!=", "\"none\"", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist_cwl2_admm\"", "+", "str", "(", "args", "[", "'adversarial'", "]", ")", ",", "sess", ")", "\n", "\n", "", "if", "args", "[", "'temp'", "]", "and", "args", "[", "'dataset'", "]", "==", "'mnist'", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist-distilled-\"", "+", "str", "(", "args", "[", "'temp'", "]", ")", ",", "sess", ")", "\n", "", "if", "args", "[", "'temp'", "]", "and", "args", "[", "'dataset'", "]", "==", "'cifar'", ":", "\n", "            ", "model", "=", "CIFARModel", "(", "\"models/cifar-distilled-\"", "+", "str", "(", "args", "[", "'temp'", "]", ")", ",", "sess", ")", "\n", "\n", "\n", "", "layer", "=", "model", ".", "model", ".", "layers", "[", "5", "]", "\n", "aa", "=", "layer", ".", "weights", "[", "0", "]", ".", "shape", ".", "as_list", "(", ")", "\n", "\n", "inputs", ",", "targets", ",", "labels", ",", "true_ids", "=", "generate_data", "(", "data", ",", "model", ",", "samples", "=", "args", "[", "'numimg'", "]", ",", "targeted", "=", "args", "[", "'targeted'", "]", ",", "\n", "start", "=", "0", ",", "inception", "=", "inception", ",", "handpick", "=", "handpick", ",", "seed", "=", "args", "[", "'seed'", "]", ")", "\n", "\n", "#print(true_ids)", "\n", "if", "args", "[", "'attack'", "]", "==", "'L2C'", ":", "\n", "            ", "attack", "=", "CarliniL2", "(", "sess", ",", "model", ",", "batch_size", "=", "args", "[", "'batch_size'", "]", ",", "max_iterations", "=", "args", "[", "'maxiter'", "]", ",", "\n", "confidence", "=", "args", "[", "'conf'", "]", ",", "targeted", "=", "args", "[", "'targeted'", "]", ",", "\n", "binary_search_steps", "=", "args", "[", "'binary_steps'", "]", ",", "\n", "abort_early", "=", "args", "[", "'abort_early'", "]", ")", "\n", "\n", "", "if", "args", "[", "'attack'", "]", "==", "'L2BB'", ":", "\n", "            ", "attack", "=", "LADMMBB", "(", "sess", ",", "model", ",", "batch_size", "=", "args", "[", "'batch_size'", "]", ",", "max_iterations", "=", "args", "[", "'maxiter'", "]", ",", "\n", "targeted", "=", "args", "[", "'targeted'", "]", ",", "confidence", "=", "args", "[", "'conf'", "]", ",", "\n", "binary_search_steps", "=", "args", "[", "'iteration_steps'", "]", ",", "ro", "=", "args", "[", "'ro'", "]", ",", "\n", "abort_early", "=", "args", "[", "'abort_early'", "]", ",", "gama", "=", "args", "[", "'gama'", "]", ",", "epi", "=", "args", "[", "'epi'", "]", ")", "\n", "\n", "", "timestart", "=", "time", ".", "time", "(", ")", "\n", "#    adv = attack.attack(inputs, targets)", "\n", "adv", ",", "querycount", ",", "queryl2", "=", "attack", ".", "attack", "(", "inputs", ",", "targets", ")", "\n", "timeend", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"Took\"", ",", "timeend", "-", "timestart", ",", "\"seconds to run\"", ",", "len", "(", "inputs", ")", ",", "\"samples.\\n\"", ")", "\n", "\n", "if", "args", "[", "'train'", "]", ":", "\n", "            ", "np", ".", "save", "(", "'labels_train.npy'", ",", "labels", ")", "\n", "np", ".", "save", "(", "str", "(", "args", "[", "'attack'", "]", ")", "+", "'_train.npy'", ",", "adv", ")", "\n", "\n", "", "if", "(", "args", "[", "'conf'", "]", "!=", "0", ")", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist-distilled-100\"", ",", "sess", ")", "\n", "\n", "", "if", "args", "[", "'attack'", "]", "!=", "'L0LA'", "and", "args", "[", "'attack'", "]", "!=", "'L0C'", "and", "args", "[", "'attack'", "]", "!=", "'L0LA2'", ":", "\n", "            ", "if", "args", "[", "'targeted'", "]", ":", "\n", "                ", "l1_l2_li_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "\n", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", "\n", "", "else", ":", "\n", "                ", "l2_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", "\n", "", "", "else", ":", "\n", "            ", "l0_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.NodeLookup.__init__": [[80, 86], ["setup_inception.NodeLookup.load", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.NodeLookup.load"], ["def", "__init__", "(", "self", ",", "\n", "label_lookup_path", "=", "None", ")", ":", "\n", "    ", "if", "not", "label_lookup_path", ":", "\n", "      ", "label_lookup_path", "=", "os", ".", "path", ".", "join", "(", "\n", "FLAGS", ".", "model_dir", ",", "'labels.txt'", ")", "\n", "", "self", ".", "node_lookup", "=", "self", ".", "load", "(", "label_lookup_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.NodeLookup.load": [[87, 111], ["tensorflow.gfile.GFile().readlines", "tensorflow.gfile.Exists", "tensorflow.logging.fatal", "tensorflow.gfile.GFile", "line.split", "int"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "label_lookup_path", ")", ":", "\n", "    ", "\"\"\"Loads a human readable English name for each softmax node.\n\n    Args:\n      label_lookup_path: string UID to integer node ID.\n      uid_lookup_path: string UID to human-readable string.\n\n    Returns:\n      dict from integer node ID to human-readable string.\n    \"\"\"", "\n", "if", "not", "tf", ".", "gfile", ".", "Exists", "(", "label_lookup_path", ")", ":", "\n", "      ", "tf", ".", "logging", ".", "fatal", "(", "'File does not exist %s'", ",", "label_lookup_path", ")", "\n", "\n", "# Loads mapping from string UID to integer node ID.", "\n", "", "node_id_to_name", "=", "{", "}", "\n", "proto_as_ascii", "=", "tf", ".", "gfile", ".", "GFile", "(", "label_lookup_path", ")", ".", "readlines", "(", ")", "\n", "for", "line", "in", "proto_as_ascii", ":", "\n", "      ", "if", "line", ":", "\n", "        ", "words", "=", "line", ".", "split", "(", "':'", ")", "\n", "target_class", "=", "int", "(", "words", "[", "0", "]", ")", "\n", "name", "=", "words", "[", "1", "]", "\n", "node_id_to_name", "[", "target_class", "]", "=", "name", "\n", "\n", "", "", "return", "node_id_to_name", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.NodeLookup.id_to_string": [[112, 116], ["None"], "methods", ["None"], ["", "def", "id_to_string", "(", "self", ",", "node_id", ")", ":", "\n", "    ", "if", "node_id", "not", "in", "self", ".", "node_lookup", ":", "\n", "      ", "return", "''", "\n", "", "return", "self", ".", "node_lookup", "[", "node_id", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.InceptionModelPrediction.__init__": [[181, 193], ["tensorflow.placeholder", "tensorflow.import_graph_def", "sess.graph.as_graph_def"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "sess", ",", "use_log", "=", "False", ")", ":", "\n", "    ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "use_log", "=", "use_log", "\n", "if", "self", ".", "use_log", ":", "\n", "      ", "output_name", "=", "'InceptionV3/Predictions/Softmax:0'", "\n", "", "else", ":", "\n", "      ", "output_name", "=", "'InceptionV3/Predictions/Reshape:0'", "\n", "", "self", ".", "img", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "(", "None", ",", "299", ",", "299", ",", "3", ")", ")", "\n", "self", ".", "softmax_tensor", "=", "tf", ".", "import_graph_def", "(", "\n", "sess", ".", "graph", ".", "as_graph_def", "(", ")", ",", "\n", "input_map", "=", "{", "'input:0'", ":", "self", ".", "img", "}", ",", "\n", "return_elements", "=", "[", "output_name", "]", ")", "\n", "", "def", "predict", "(", "self", ",", "dat", ")", ":", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.InceptionModelPrediction.predict": [[193, 211], ["numpy.squeeze", "numpy.squeeze.reshape", "setup_inception.InceptionModelPrediction.sess.run", "numpy.squeeze", "setup_inception.NodeLookup", "numpy.squeeze.argsort", "print", "setup_inception.NodeLookup.id_to_string", "print"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.NodeLookup.id_to_string"], ["", "def", "predict", "(", "self", ",", "dat", ")", ":", "\n", "    ", "dat", "=", "np", ".", "squeeze", "(", "dat", ")", "\n", "#    scaled = (0.5 + dat) * 255", "\n", "scaled", "=", "dat", ".", "reshape", "(", "(", "1", ",", ")", "+", "dat", ".", "shape", ")", "\n", "# print(scaled.shape)", "\n", "predictions", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "softmax_tensor", ",", "\n", "{", "self", ".", "img", ":", "scaled", "}", ")", "\n", "predictions", "=", "np", ".", "squeeze", "(", "predictions", ")", "\n", "return", "predictions", "\n", "# Creates node ID --> English string lookup.", "\n", "node_lookup", "=", "NodeLookup", "(", ")", "\n", "top_k", "=", "predictions", ".", "argsort", "(", ")", "#[-FLAGS.num_top_predictions:][::-1]", "\n", "for", "node_id", "in", "top_k", ":", "\n", "      ", "print", "(", "'id'", ",", "node_id", ")", "\n", "human_string", "=", "node_lookup", ".", "id_to_string", "(", "node_id", ")", "\n", "score", "=", "predictions", "[", "node_id", "]", "\n", "print", "(", "'%s (score = %.5f)'", "%", "(", "human_string", ",", "score", ")", ")", "\n", "", "return", "top_k", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.InceptionModel.__init__": [[218, 226], ["setup_inception.InceptionModelPrediction", "setup_inception.create_graph"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.create_graph"], ["def", "__init__", "(", "self", ",", "sess", ",", "use_log", "=", "False", ")", ":", "\n", "    ", "global", "CREATED_GRAPH", "\n", "self", ".", "sess", "=", "sess", "\n", "self", ".", "use_log", "=", "use_log", "\n", "if", "not", "CREATED_GRAPH", ":", "\n", "      ", "create_graph", "(", ")", "\n", "CREATED_GRAPH", "=", "True", "\n", "", "self", ".", "model", "=", "InceptionModelPrediction", "(", "sess", ",", "use_log", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.InceptionModel.predict": [[227, 248], ["img.shape.as_list", "tensorflow.import_graph_def", "tensorflow.import_graph_def", "int", "setup_inception.InceptionModel.sess.graph.as_graph_def", "setup_inception.InceptionModel.sess.graph.as_graph_def"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "img", ")", ":", "\n", "    ", "if", "self", ".", "use_log", ":", "\n", "      ", "output_name", "=", "'InceptionV3/Predictions/Softmax:0'", "\n", "", "else", ":", "\n", "      ", "output_name", "=", "'InceptionV3/Predictions/Reshape:0'", "\n", "#scaled = (0.5+tf.reshape(img,((299,299,3))))*255", "\n", "#scaled = (0.5+img)*255", "\n", "", "if", "img", ".", "shape", ".", "as_list", "(", ")", "[", "0", "]", ":", "\n", "# check if a shape has been specified explicitly", "\n", "      ", "shape", "=", "(", "int", "(", "img", ".", "shape", "[", "0", "]", ")", ",", "1001", ")", "\n", "softmax_tensor", "=", "tf", ".", "import_graph_def", "(", "\n", "self", ".", "sess", ".", "graph", ".", "as_graph_def", "(", ")", ",", "\n", "input_map", "=", "{", "'input:0'", ":", "img", ",", "'InceptionV3/Predictions/Shape:0'", ":", "shape", "}", ",", "\n", "return_elements", "=", "[", "output_name", "]", ")", "\n", "", "else", ":", "\n", "# placeholder shape", "\n", "      ", "softmax_tensor", "=", "tf", ".", "import_graph_def", "(", "\n", "self", ".", "sess", ".", "graph", ".", "as_graph_def", "(", ")", ",", "\n", "input_map", "=", "{", "'input:0'", ":", "img", "}", ",", "\n", "return_elements", "=", "[", "output_name", "]", ")", "\n", "", "return", "softmax_tensor", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.ImageNet.__init__": [[304, 317], ["Pool", "sorted", "random.seed", "Pool.map", "random.shuffle", "zip", "numpy.array", "numpy.zeros", "os.listdir", "len", "numpy.arange", "len"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "seed", ")", ":", "\n", "    ", "from", "multiprocessing", "import", "Pool", "\n", "pool", "=", "Pool", "(", "8", ")", "\n", "file_list", "=", "sorted", "(", "os", ".", "listdir", "(", "\"../imagenetdata/imgs/\"", ")", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "r", "=", "pool", ".", "map", "(", "readimg", ",", "file_list", "[", ":", "2000", "]", ")", "\n", "#print(file_list[:200])", "\n", "random", ".", "shuffle", "(", "file_list", ")", "\n", "r", "=", "[", "x", "for", "x", "in", "r", "if", "x", "!=", "None", "]", "\n", "test_data", ",", "test_labels", "=", "zip", "(", "*", "r", ")", "\n", "self", ".", "test_data", "=", "np", ".", "array", "(", "test_data", ")", "\n", "self", ".", "test_labels", "=", "np", ".", "zeros", "(", "(", "len", "(", "test_labels", ")", ",", "1001", ")", ")", "\n", "self", ".", "test_labels", "[", "np", ".", "arange", "(", "len", "(", "test_labels", ")", ")", ",", "test_labels", "]", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.create_graph": [[118, 130], ["tensorflow.gfile.FastGFile", "tensorflow.GraphDef", "tf.GraphDef.ParseFromString", "tensorflow.import_graph_def", "os.path.join", "f.read"], "function", ["None"], ["", "", "def", "create_graph", "(", ")", ":", "\n", "  ", "\"\"\"Creates a graph from saved GraphDef file and returns a saver.\"\"\"", "\n", "# Creates graph from saved graph_def.pb.", "\n", "with", "tf", ".", "gfile", ".", "FastGFile", "(", "os", ".", "path", ".", "join", "(", "\n", "#  FLAGS.model_dir, 'classify_image_graph_def.pb'), 'rb') as f:", "\n", "FLAGS", ".", "model_dir", ",", "'frozen_inception_v3.pb'", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "    ", "graph_def", "=", "tf", ".", "GraphDef", "(", ")", "\n", "graph_def", ".", "ParseFromString", "(", "f", ".", "read", "(", ")", ")", "\n", "#for line in repr(graph_def).split(\"\\n\"):", "\n", "#  if \"tensor_content\" not in line:", "\n", "#    print(line)", "\n", "_", "=", "tf", ".", "import_graph_def", "(", "graph_def", ",", "name", "=", "''", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.run_inference_on_image": [[132, 179], ["tensorflow.gfile.FastGFile().read", "setup_inception.create_graph", "tensorflow.gfile.Exists", "tensorflow.logging.fatal", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.import_graph_def", "scipy.misc.imresize", "sess.run", "numpy.squeeze", "setup_inception.NodeLookup", "np.squeeze.argsort", "tensorflow.gfile.FastGFile", "sess.graph.as_graph_def", "scipy.misc.imread", "print", "setup_inception.NodeLookup.id_to_string", "print", "tensorflow.reshape"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.create_graph", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.NodeLookup.id_to_string"], ["", "", "def", "run_inference_on_image", "(", "image", ")", ":", "\n", "  ", "\"\"\"Runs inference on an image. (Not updated, not working for inception v3 20160828)\n\n  Args:\n    image: Image file name.\n\n  Returns:\n    Nothing\n  \"\"\"", "\n", "if", "not", "tf", ".", "gfile", ".", "Exists", "(", "image", ")", ":", "\n", "    ", "tf", ".", "logging", ".", "fatal", "(", "'File does not exist %s'", ",", "image", ")", "\n", "", "image_data", "=", "tf", ".", "gfile", ".", "FastGFile", "(", "image", ",", "'rb'", ")", ".", "read", "(", ")", "\n", "\n", "# Creates graph from saved GraphDef.", "\n", "create_graph", "(", ")", "\n", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "# Some useful tensors:", "\n", "# 'softmax:0': A tensor containing the normalized prediction across", "\n", "#   1000 labels.", "\n", "# 'pool_3:0': A tensor containing the next-to-last layer containing 2048", "\n", "#   float description of the image.", "\n", "# 'DecodeJpeg/contents:0': A tensor containing a string providing JPEG", "\n", "#   encoding of the image.", "\n", "# Runs the softmax tensor by feeding the image_data as input to the graph.", "\n", "#softmax_tensor = sess.graph.get_tensor_by_name('softmax:0')", "\n", "    ", "img", "=", "tf", ".", "placeholder", "(", "tf", ".", "uint8", ",", "(", "299", ",", "299", ",", "3", ")", ")", "\n", "softmax_tensor", "=", "tf", ".", "import_graph_def", "(", "\n", "sess", ".", "graph", ".", "as_graph_def", "(", ")", ",", "\n", "input_map", "=", "{", "'DecodeJpeg:0'", ":", "tf", ".", "reshape", "(", "img", ",", "(", "(", "299", ",", "299", ",", "3", ")", ")", ")", "}", ",", "\n", "return_elements", "=", "[", "'softmax/logits:0'", "]", ")", "\n", "\n", "dat", "=", "scipy", ".", "misc", ".", "imresize", "(", "scipy", ".", "misc", ".", "imread", "(", "image", ")", ",", "(", "299", ",", "299", ")", ")", "\n", "predictions", "=", "sess", ".", "run", "(", "softmax_tensor", ",", "\n", "{", "img", ":", "dat", "}", ")", "\n", "\n", "predictions", "=", "np", ".", "squeeze", "(", "predictions", ")", "\n", "\n", "# Creates node ID --> English string lookup.", "\n", "node_lookup", "=", "NodeLookup", "(", ")", "\n", "\n", "top_k", "=", "predictions", ".", "argsort", "(", ")", "#[-FLAGS.num_top_predictions:][::-1]", "\n", "for", "node_id", "in", "top_k", ":", "\n", "      ", "print", "(", "'id'", ",", "node_id", ")", "\n", "human_string", "=", "node_lookup", ".", "id_to_string", "(", "node_id", ")", "\n", "score", "=", "predictions", "[", "node_id", "]", "\n", "print", "(", "'%s (score = %.5f)'", "%", "(", "human_string", ",", "score", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.maybe_download_and_extract": [[250, 267], ["os.path.join", "tarfile.open().extractall", "os.path.exists", "os.makedirs", "DATA_URL.split", "os.path.exists", "six.moves.urllib.request.urlretrieve", "print", "os.stat", "print", "sys.stdout.write", "sys.stdout.flush", "tarfile.open", "float", "float"], "function", ["None"], ["", "", "def", "maybe_download_and_extract", "(", ")", ":", "\n", "  ", "\"\"\"Download and extract model tar file.\"\"\"", "\n", "dest_directory", "=", "FLAGS", ".", "model_dir", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "dest_directory", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "dest_directory", ")", "\n", "", "filename", "=", "DATA_URL", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "dest_directory", ",", "filename", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "filepath", ")", ":", "\n", "    ", "def", "_progress", "(", "count", ",", "block_size", ",", "total_size", ")", ":", "\n", "      ", "sys", ".", "stdout", ".", "write", "(", "'\\r>> Downloading %s %.1f%%'", "%", "(", "\n", "filename", ",", "float", "(", "count", "*", "block_size", ")", "/", "float", "(", "total_size", ")", "*", "100.0", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "", "filepath", ",", "_", "=", "urllib", ".", "request", ".", "urlretrieve", "(", "DATA_URL", ",", "filepath", ",", "_progress", ")", "\n", "print", "(", ")", "\n", "statinfo", "=", "os", ".", "stat", "(", "filepath", ")", "\n", "print", "(", "'Succesfully downloaded'", ",", "filename", ",", "statinfo", ".", "st_size", ",", "'bytes.'", ")", "\n", "", "tarfile", ".", "open", "(", "filepath", ",", "'r:gz'", ")", ".", "extractall", "(", "dest_directory", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.main": [[269, 290], ["setup_inception.maybe_download_and_extract", "setup_inception.create_graph", "os.path.join", "tensorflow.Session", "numpy.array", "setup_inception.InceptionModelPrediction", "setup_inception.InceptionModelPrediction.predict", "setup_inception.NodeLookup", "model.predict.argsort", "scipy.misc.imresize", "print", "setup_inception.NodeLookup.id_to_string", "print", "scipy.misc.imread"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.maybe_download_and_extract", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.create_graph", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.NodeLookup.id_to_string"], ["", "def", "main", "(", "_", ")", ":", "\n", "  ", "maybe_download_and_extract", "(", ")", "\n", "image", "=", "(", "FLAGS", ".", "image_file", "if", "FLAGS", ".", "image_file", "else", "\n", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "model_dir", ",", "'cropped_panda.jpg'", ")", ")", "\n", "# run_inference_on_image(image)", "\n", "create_graph", "(", ")", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "    ", "dat", "=", "np", ".", "array", "(", "scipy", ".", "misc", ".", "imresize", "(", "scipy", ".", "misc", ".", "imread", "(", "image", ")", ",", "(", "299", ",", "299", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "dat", "/=", "255.0", "\n", "dat", "-=", "0.5", "\n", "# print(dat)", "\n", "model", "=", "InceptionModelPrediction", "(", "sess", ",", "True", ")", "\n", "predictions", "=", "model", ".", "predict", "(", "dat", ")", "\n", "# Creates node ID --> English string lookup.", "\n", "node_lookup", "=", "NodeLookup", "(", ")", "\n", "top_k", "=", "predictions", ".", "argsort", "(", ")", "#[-FLAGS.num_top_predictions:][::-1]", "\n", "for", "node_id", "in", "top_k", ":", "\n", "      ", "print", "(", "'id'", ",", "node_id", ")", "\n", "human_string", "=", "node_lookup", ".", "id_to_string", "(", "node_id", ")", "\n", "score", "=", "predictions", "[", "node_id", "]", "\n", "print", "(", "'%s (score = %.5f)'", "%", "(", "human_string", ",", "score", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_inception.readimg": [[292, 302], ["scipy.misc.imread", "int", "numpy.array", "scipy.misc.imresize", "ff.split"], "function", ["None"], ["", "", "", "def", "readimg", "(", "ff", ")", ":", "\n", "  ", "f", "=", "\"../imagenetdata/imgs/\"", "+", "ff", "\n", "img", "=", "scipy", ".", "misc", ".", "imread", "(", "f", ")", "\n", "# skip small images (image should be at least 299x299)", "\n", "if", "img", ".", "shape", "[", "0", "]", "<", "299", "or", "img", ".", "shape", "[", "1", "]", "<", "299", ":", "\n", "    ", "return", "None", "\n", "", "img", "=", "np", ".", "array", "(", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "(", "299", ",", "299", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255", "-", ".5", "\n", "if", "img", ".", "shape", "!=", "(", "299", ",", "299", ",", "3", ")", ":", "\n", "    ", "return", "None", "\n", "", "return", "[", "img", ",", "int", "(", "ff", ".", "split", "(", "\".\"", ")", "[", "0", "]", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_imagenet.show": [[20, 26], ["fig.astype().squeeze.astype().squeeze", "PIL.Image.fromarray", "Image.fromarray.save", "fig.astype().squeeze.astype"], "function", ["None"], ["def", "show", "(", "img", ",", "name", "=", "\"output.png\"", ")", ":", "\n", "    ", "fig", "=", "(", "img", "+", "0.5", ")", "*", "255", "\n", "fig", "=", "fig", ".", "astype", "(", "np", ".", "uint8", ")", ".", "squeeze", "(", ")", "\n", "pic", "=", "Image", ".", "fromarray", "(", "fig", ")", "\n", "# pic.resize((512,512), resample=PIL.Image.BICUBIC)", "\n", "pic", ".", "save", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_imagenet.generate_data": [[28, 95], ["random.seed", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "random.shuffle", "print", "print", "random.sample", "list", "list", "len", "list.pop", "model.model.predict", "range", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "range", "range", "numpy.reshape", "numpy.argmax", "numpy.argmax", "random.sample.append", "random.sample", "range", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "range", "numpy.argmax", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "generate_data", "(", "data", ",", "model", ",", "samples", ",", "targeted", "=", "True", ",", "target_num", "=", "9", ",", "start", "=", "0", ",", "inception", "=", "False", ",", "seed", "=", "3", ",", "handpick", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Generate the input data to the attack algorithm.\n\n    data: the images to attack\n    samples: number of samples to use\n    targeted: if true, construct targeted attacks, otherwise untargeted attacks\n    start: offset into data to use\n    inception: if targeted and inception, randomly sample 100 targets intead of 1000\n    \"\"\"", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "inputs", "=", "[", "]", "\n", "targets", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "true_ids", "=", "[", "]", "\n", "sample_set", "=", "[", "]", "\n", "\n", "data_d", "=", "data", ".", "test_data", "\n", "labels_d", "=", "data", ".", "test_labels", "\n", "\n", "if", "handpick", ":", "\n", "        ", "if", "inception", ":", "\n", "            ", "deck", "=", "list", "(", "range", "(", "0", ",", "1500", ")", ")", "\n", "", "else", ":", "\n", "            ", "deck", "=", "list", "(", "range", "(", "0", ",", "10000", ")", ")", "\n", "", "random", ".", "shuffle", "(", "deck", ")", "\n", "print", "(", "'Handpicking'", ")", "\n", "\n", "while", "(", "len", "(", "sample_set", ")", "<", "samples", ")", ":", "\n", "            ", "rand_int", "=", "deck", ".", "pop", "(", ")", "\n", "pred", "=", "model", ".", "model", ".", "predict", "(", "data_d", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "\n", "if", "inception", ":", "\n", "                ", "pred", "=", "np", ".", "reshape", "(", "pred", ",", "(", "labels_d", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "labels_d", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "sample_set", ".", "append", "(", "rand_int", ")", "\n", "", "", "print", "(", "'Handpicked'", ")", "\n", "", "else", ":", "\n", "        ", "sample_set", "=", "random", ".", "sample", "(", "range", "(", "0", ",", "10000", ")", ",", "samples", ")", "\n", "\n", "", "for", "i", "in", "sample_set", ":", "\n", "        ", "if", "targeted", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "seq", "=", "random", ".", "sample", "(", "range", "(", "1", ",", "1001", ")", ",", "target_num", ")", "\n", "", "else", ":", "\n", "                ", "seq", "=", "range", "(", "labels_d", ".", "shape", "[", "1", "]", ")", "\n", "\n", "#      seq = {1}", "\n", "", "for", "j", "in", "seq", ":", "\n", "                ", "if", "(", "j", "==", "np", ".", "argmax", "(", "labels_d", "[", "start", "+", "i", "]", ")", ")", "and", "(", "inception", "==", "False", ")", ":", "\n", "                    ", "continue", "\n", "", "inputs", ".", "append", "(", "data_d", "[", "start", "+", "i", "]", ")", "\n", "targets", ".", "append", "(", "np", ".", "eye", "(", "labels_d", ".", "shape", "[", "1", "]", ")", "[", "j", "]", ")", "\n", "labels", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "true_ids", ".", "append", "(", "start", "+", "i", ")", "\n", "", "", "else", ":", "\n", "            ", "inputs", ".", "append", "(", "data_d", "[", "start", "+", "i", "]", ")", "\n", "targets", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "labels", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "true_ids", ".", "append", "(", "start", "+", "i", ")", "\n", "\n", "", "", "inputs", "=", "np", ".", "array", "(", "inputs", ")", "\n", "targets", "=", "np", ".", "array", "(", "targets", ")", "\n", "labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "true_ids", "=", "np", ".", "array", "(", "true_ids", ")", "\n", "return", "inputs", ",", "targets", ",", "labels", ",", "true_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_imagenet.l1_l2_li_computation": [[96, 245], ["range", "numpy.reshape", "numpy.amin", "numpy.mean", "numpy.amax", "numpy.reshape", "numpy.amin", "numpy.mean", "numpy.amax", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "len", "range", "enumerate", "numpy.random.randint", "enumerate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "os.path.exists", "os.makedirs", "range", "d_best_l2.append", "d_best_l1.append", "d_best_linf.append", "r_best.append", "r_best.append", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l2.append", "d_average_l1.append", "d_average_linf.append", "r_average.append", "range", "d_worst_l2.append", "d_worst_l1.append", "d_worst_linf.append", "r_worst.append", "range", "pred.append", "pred.append", "numpy.argmax", "numpy.argmax", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.sum", "numpy.amax", "numpy.argmax", "numpy.argmax", "r_worst.append", "numpy.sum", "numpy.amax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "test_attack_imagenet.show", "test_attack_imagenet.show", "numpy.sqrt", "str", "str", "numpy.reshape", "model.model.predict", "numpy.sum", "numpy.sum", "numpy.amax", "numpy.amax", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "numpy.amax", "numpy.amax", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.reshape", "numpy.reshape", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "model.model.predict", "model.model.predict", "numpy.abs", "numpy.sum", "numpy.abs", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l1_l2_li_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", ":", "\n", "\n", "    ", "r_best", "=", "[", "]", "\n", "d_best_l1", "=", "[", "]", "\n", "d_best_l2", "=", "[", "]", "\n", "d_best_linf", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "d_average_l1", "=", "[", "]", "\n", "d_average_l2", "=", "[", "]", "\n", "d_average_linf", "=", "[", "]", "\n", "r_worst", "=", "[", "]", "\n", "d_worst_l1", "=", "[", "]", "\n", "d_worst_l2", "=", "[", "]", "\n", "d_worst_linf", "=", "[", "]", "\n", "\n", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "inputs", ")", ",", "args", "[", "'target_number'", "]", ")", ":", "\n", "        ", "pred", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "pred", ".", "append", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "pred", ".", "append", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ")", "\n", "\n", "", "", "dist_l1", "=", "1e10", "\n", "dist_l2", "=", "1e10", "\n", "dist_linf", "=", "1e10", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_l2_index", "=", "1e10", "\n", "dist_linf_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "if", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "<", "dist_l1", ")", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_l1_index", "=", "j", "\n", "", "if", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "<", "dist_linf", ")", ":", "\n", "                    ", "dist_linf", "=", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_linf_index", "=", "j", "\n", "", "if", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "<", "dist_l2", ")", ":", "\n", "                    ", "dist_l2", "=", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "dist_l2_index", "=", "j", "\n", "", "", "", "if", "(", "dist_l1_index", "!=", "1e10", ")", ":", "\n", "            ", "d_best_l2", ".", "append", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "dist_l2_index", "]", "-", "inputs", "[", "dist_l2_index", "]", ")", "**", "2", ")", "**", ".5", ")", ")", "\n", "d_best_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", "\n", "d_best_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "dist_linf_index", "]", "-", "inputs", "[", "dist_linf_index", "]", ")", ")", ")", "\n", "r_best", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "r_best", ".", "append", "(", "0", ")", "\n", "\n", "", "rand_int", "=", "np", ".", "random", ".", "randint", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", "\n", "if", "inception", ":", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l2", ".", "append", "(", "np", ".", "sum", "(", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "d_average_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", "\n", "d_average_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "", "dist_l1", "=", "0", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_linf", "=", "0", "\n", "dist_linf_index", "=", "1e10", "\n", "dist_l2", "=", "0", "\n", "dist_l2_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "r_worst", ".", "append", "(", "0", ")", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_l2_index", "=", "1e10", "\n", "dist_linf_index", "=", "1e10", "\n", "break", "\n", "", "else", ":", "\n", "                ", "if", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ">", "dist_l1", ")", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_l1_index", "=", "j", "\n", "", "if", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ">", "dist_linf", ")", ":", "\n", "                    ", "dist_linf", "=", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_linf_index", "=", "j", "\n", "", "if", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", ">", "dist_l2", ")", ":", "\n", "                    ", "dist_l2", "=", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "dist_l2_index", "=", "j", "\n", "", "", "", "if", "(", "dist_l1_index", "!=", "1e10", ")", ":", "\n", "            ", "d_worst_l2", ".", "append", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "dist_l2_index", "]", "-", "inputs", "[", "dist_l2_index", "]", ")", "**", "2", ")", "**", ".5", ")", ")", "\n", "d_worst_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", "\n", "d_worst_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "dist_linf_index", "]", "-", "inputs", "[", "dist_linf_index", "]", ")", ")", ")", "\n", "r_worst", ".", "append", "(", "1", ")", "\n", "\n", "", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'batch_size'", "]", ")", ":", "\n", "                ", "target_id", "=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "label_id", "=", "np", ".", "argmax", "(", "labels", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "prev_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ")", ",", "\n", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "adv_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "suffix", "=", "\"id{}_seq{}_lbl{}_prev{}_adv{}_{}_l1_{:.3f}_l2_{:.3f}_linf_{:.3f}\"", ".", "format", "(", "\n", "true_ids", "[", "i", "]", ",", "\n", "target_id", ",", "\n", "label_id", ",", "\n", "prev_id", ",", "\n", "adv_id", ",", "\n", "adv_id", "==", "target_id", ",", "\n", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ",", "\n", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ",", "\n", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", "\n", "\n", "show", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/original_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "show", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/adversarial_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "\n", "", "", "", "querycount", "=", "np", ".", "reshape", "(", "querycount", ",", "(", "-", "1", ",", "9", ")", ")", "\n", "qc_batch_min", "=", "np", ".", "amin", "(", "querycount", ",", "axis", "=", "1", ")", "\n", "qc_batch_mean", "=", "np", ".", "mean", "(", "querycount", ",", "axis", "=", "1", ")", "\n", "qc_batch_max", "=", "np", ".", "amax", "(", "querycount", ",", "axis", "=", "1", ")", "\n", "queryl23", "=", "np", ".", "sqrt", "(", "queryl2", ")", "/", "inputs", ".", "shape", "[", "1", "]", "/", "inputs", ".", "shape", "[", "2", "]", "/", "inputs", ".", "shape", "[", "3", "]", "\n", "queryl23", "=", "np", ".", "reshape", "(", "queryl23", ",", "(", "-", "1", ",", "9", ")", ")", "\n", "qcl2_batch_min", "=", "np", ".", "amin", "(", "queryl23", ",", "axis", "=", "1", ")", "\n", "qcl2_batch_mean", "=", "np", ".", "mean", "(", "queryl23", ",", "axis", "=", "1", ")", "\n", "qcl2_batch_max", "=", "np", ".", "amax", "(", "queryl23", ",", "axis", "=", "1", ")", "\n", "\n", "\n", "print", "(", "'best_case_L1_mean'", ",", "np", ".", "mean", "(", "d_best_l1", ")", ")", "\n", "print", "(", "'best_case_L2_mean'", ",", "np", ".", "mean", "(", "d_best_l2", ")", ")", "\n", "print", "(", "'best_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_best_linf", ")", ")", "\n", "print", "(", "'best_case_prob'", ",", "np", ".", "mean", "(", "r_best", ")", ")", "\n", "print", "(", "'average_case_L1_mean'", ",", "np", ".", "mean", "(", "d_average_l1", ")", ")", "\n", "print", "(", "'average_case_L2_mean'", ",", "np", ".", "mean", "(", "d_average_l2", ")", ")", "\n", "print", "(", "'average_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_average_linf", ")", ")", "\n", "print", "(", "'average_case_prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "print", "(", "'worst_case_L1_mean'", ",", "np", ".", "mean", "(", "d_worst_l1", ")", ")", "\n", "print", "(", "'worst_case_L2_mean'", ",", "np", ".", "mean", "(", "d_worst_l2", ")", ")", "\n", "print", "(", "'worst_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_worst_linf", ")", ")", "\n", "print", "(", "'worst_case_prob'", ",", "np", ".", "mean", "(", "r_worst", ")", ")", "\n", "\n", "print", "(", "'smallest_query_count'", ",", "np", ".", "mean", "(", "qc_batch_min", ")", ")", "\n", "print", "(", "'mean_query_count'", ",", "np", ".", "mean", "(", "qc_batch_mean", ")", ")", "\n", "print", "(", "'largest_query_count'", ",", "np", ".", "mean", "(", "qc_batch_max", ")", ")", "\n", "\n", "print", "(", "'smallest_query_l2_first_success'", ",", "np", ".", "mean", "(", "qcl2_batch_min", ")", ")", "\n", "print", "(", "'mean_query_l2_first_success'", ",", "np", ".", "mean", "(", "qcl2_batch_mean", ")", ")", "\n", "print", "(", "'largest_query_l2_first_success'", ",", "np", ".", "mean", "(", "qcl2_batch_max", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_imagenet.l2_computation": [[247, 277], ["range", "print", "print", "print", "print", "print", "print", "len", "numpy.array", "numpy.mean", "numpy.mean", "numpy.min", "numpy.mean", "numpy.max", "os.path.exists", "os.makedirs", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l2.append", "r_average.append", "model.model.predict", "str", "str", "numpy.sum", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l2_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", ":", "\n", "\n", "    ", "d_average_l2", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "j", "in", "range", "(", "len", "(", "inputs", ")", ")", ":", "\n", "#    pred = []", "\n", "        ", "if", "inception", ":", "\n", "#        pred.append(np.reshape(model.model.predict(adv[j:j + 1]), (data.test_labels[0:1].shape)))", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "#       pred.append(model.model.predict(adv[j:j + 1]))", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", "\n", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l2", ".", "append", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "", "", "print", "(", "np", ".", "array", "(", "d_average_l2", ")", ")", "\n", "print", "(", "'average_L2_mean'", ",", "np", ".", "mean", "(", "d_average_l2", ")", ")", "\n", "print", "(", "'average__prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "\n", "print", "(", "'smallest_query_count'", ",", "np", ".", "min", "(", "querycount", ")", ")", "\n", "print", "(", "'mean_query_count'", ",", "np", ".", "mean", "(", "querycount", ")", ")", "\n", "print", "(", "'largest_query_count'", ",", "np", ".", "max", "(", "querycount", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_imagenet.l0_computation": [[279, 375], ["range", "print", "print", "print", "print", "print", "print", "len", "range", "enumerate", "numpy.random.randint", "enumerate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "os.path.exists", "os.makedirs", "range", "d_best_l1.append", "r_best.append", "r_best.append", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l1.append", "r_average.append", "range", "d_worst_l1.append", "r_worst.append", "range", "pred.append", "pred.append", "numpy.argmax", "numpy.argmax", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_worst.append", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "test_attack_imagenet.show", "test_attack_imagenet.show", "str", "str", "numpy.reshape", "model.model.predict", "numpy.reshape", "numpy.reshape", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.array", "numpy.array", "numpy.array", "model.model.predict", "model.model.predict", "numpy.abs", "numpy.sum", "numpy.abs", "str", "str", "numpy.array", "numpy.array", "numpy.nonzero", "numpy.nonzero", "numpy.array", "numpy.array", "numpy.nonzero", "str", "str", "str", "str", "numpy.nonzero", "numpy.nonzero", "numpy.where", "numpy.where", "numpy.nonzero", "numpy.nonzero", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "str", "str", "numpy.abs", "numpy.abs", "numpy.abs", "str", "str", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l0_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ")", ":", "\n", "    ", "r_best", "=", "[", "]", "\n", "d_best_l1", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "d_average_l1", "=", "[", "]", "\n", "r_worst", "=", "[", "]", "\n", "d_worst_l1", "=", "[", "]", "\n", "\n", "if", "args", "[", "'show'", "]", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "inputs", ")", ",", "args", "[", "'target_number'", "]", ")", ":", "\n", "        ", "pred", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "pred", ".", "append", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "pred", ".", "append", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ")", "\n", "\n", "", "", "dist_l1", "=", "1e10", "\n", "dist_l1_index", "=", "1e10", "\n", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ":", "\n", "#if np.array(np.nonzero(adv[j]-inputs[j])).shape[1] < dist_l1:", "\n", "                ", "if", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "<", "dist_l1", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "\n", "#abc = np.array(adv[j]-inputs[j])", "\n", "#print(np.nonzero(np.where(adv[j] - inputs[j] < 1e-8, 0, adv[j] - inputs[j])))", "\n", "dist_l1_index", "=", "j", "\n", "", "", "", "if", "dist_l1_index", "!=", "1e10", ":", "\n", "            ", "d_best_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", "<", "1e-7", ",", "0", ",", "\n", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "r_best", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "r_best", ".", "append", "(", "0", ")", "\n", "\n", "", "rand_int", "=", "np", ".", "random", ".", "randint", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", "\n", "if", "inception", ":", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "", "if", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", "<", "1e-7", ",", "0", ",", "\n", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "", "dist_l1", "=", "0", "\n", "dist_l1_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "r_worst", ".", "append", "(", "0", ")", "\n", "dist_l1_index", "=", "1e10", "\n", "break", "\n", "", "else", ":", "\n", "                ", "if", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ">", "dist_l1", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "\n", "dist_l1_index", "=", "j", "\n", "\n", "", "", "", "if", "dist_l1_index", "!=", "1e10", ":", "\n", "            ", "d_worst_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", "<", "1e-7", ",", "0", ",", "\n", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "r_worst", ".", "append", "(", "1", ")", "\n", "\n", "", "if", "args", "[", "'show'", "]", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'batch_size'", "]", ")", ":", "\n", "                ", "target_id", "=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "label_id", "=", "np", ".", "argmax", "(", "labels", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "prev_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ")", ",", "\n", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "adv_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "suffix", "=", "\"id{}_seq{}_lbl{}_prev{}_adv{}_{}_l1_{:.3f}_l2_{:.3f}_linf_{:.3f}\"", ".", "format", "(", "\n", "true_ids", "[", "i", "]", ",", "\n", "target_id", ",", "\n", "label_id", ",", "\n", "prev_id", ",", "\n", "adv_id", ",", "\n", "adv_id", "==", "target_id", ",", "\n", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ",", "\n", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ",", "\n", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", "\n", "\n", "show", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/original_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "show", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/adversarial_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "\n", "", "", "", "print", "(", "'best_case_L0_mean'", ",", "np", ".", "mean", "(", "d_best_l1", ")", ")", "\n", "print", "(", "'best_case_prob'", ",", "np", ".", "mean", "(", "r_best", ")", ")", "\n", "print", "(", "'average_case_L0_mean'", ",", "np", ".", "mean", "(", "d_average_l1", ")", ")", "\n", "print", "(", "'average_case_prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "print", "(", "'worst_case_L0_mean'", ",", "np", ".", "mean", "(", "d_worst_l1", ")", ")", "\n", "print", "(", "'worst_case_prob'", ",", "np", ".", "mean", "(", "r_worst", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_imagenet.main": [[377, 438], ["tensorflow.Session", "test_attack_imagenet.generate_data", "time.time", "l2_blackbox_attack.LADMMBB.attack", "time.time", "print", "setup_mnist.MNISTModel", "setup_mnist.MNISTModel", "setup_cifar.CIFARModel", "l2_attack.CarliniL2", "l2_blackbox_attack.LADMMBB", "len", "numpy.save", "numpy.save", "setup_mnist.MNISTModel", "test_attack_imagenet.l0_computation", "setup_mnist.MNIST", "setup_mnist.MNISTModel", "setup_cifar.CIFAR", "setup_cifar.CIFARModel", "setup_inception.ImageNet", "setup_inception.InceptionModel", "test_attack_imagenet.l1_l2_li_computation", "test_attack_imagenet.l2_computation", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.generate_data", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.attack", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l0_computation", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l1_l2_li_computation", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l2_computation"], ["", "def", "main", "(", "args", ")", ":", "\n", "#   gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.7)", "\n", "    ", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "if", "args", "[", "'dataset'", "]", "==", "'mnist'", ":", "\n", "            ", "data", ",", "model", "=", "MNIST", "(", ")", ",", "MNISTModel", "(", "\"models/mnist\"", ",", "sess", ")", "\n", "handpick", "=", "False", "\n", "inception", "=", "False", "\n", "", "if", "args", "[", "'dataset'", "]", "==", "\"cifar\"", ":", "\n", "            ", "data", ",", "model", "=", "CIFAR", "(", ")", ",", "CIFARModel", "(", "\"models/cifar\"", ",", "sess", ")", "\n", "handpick", "=", "True", "\n", "inception", "=", "False", "\n", "", "if", "args", "[", "'dataset'", "]", "==", "\"imagenet\"", ":", "\n", "            ", "data", ",", "model", "=", "ImageNet", "(", "args", "[", "'seed_imagenet'", "]", ")", ",", "InceptionModel", "(", "sess", ")", "\n", "handpick", "=", "True", "\n", "inception", "=", "True", "\n", "\n", "", "if", "args", "[", "'adversarial'", "]", "!=", "\"none\"", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist_cwl2_admm\"", "+", "str", "(", "args", "[", "'adversarial'", "]", ")", ",", "sess", ")", "\n", "\n", "", "if", "args", "[", "'temp'", "]", "and", "args", "[", "'dataset'", "]", "==", "'mnist'", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist-distilled-\"", "+", "str", "(", "args", "[", "'temp'", "]", ")", ",", "sess", ")", "\n", "", "if", "args", "[", "'temp'", "]", "and", "args", "[", "'dataset'", "]", "==", "'cifar'", ":", "\n", "            ", "model", "=", "CIFARModel", "(", "\"models/cifar-distilled-\"", "+", "str", "(", "args", "[", "'temp'", "]", ")", ",", "sess", ")", "\n", "\n", "", "inputs", ",", "targets", ",", "labels", ",", "true_ids", "=", "generate_data", "(", "data", ",", "model", ",", "samples", "=", "args", "[", "'numimg'", "]", ",", "targeted", "=", "args", "[", "'targeted'", "]", ",", "\n", "start", "=", "0", ",", "inception", "=", "inception", ",", "handpick", "=", "handpick", ",", "seed", "=", "args", "[", "'seed'", "]", ")", "\n", "\n", "#print(true_ids)", "\n", "if", "args", "[", "'attack'", "]", "==", "'L2C'", ":", "\n", "            ", "attack", "=", "CarliniL2", "(", "sess", ",", "model", ",", "batch_size", "=", "args", "[", "'batch_size'", "]", ",", "max_iterations", "=", "args", "[", "'maxiter'", "]", ",", "\n", "confidence", "=", "args", "[", "'conf'", "]", ",", "targeted", "=", "args", "[", "'targeted'", "]", ",", "\n", "binary_search_steps", "=", "args", "[", "'binary_steps'", "]", ",", "\n", "abort_early", "=", "args", "[", "'abort_early'", "]", ")", "\n", "\n", "", "if", "args", "[", "'attack'", "]", "==", "'L2BB'", ":", "\n", "            ", "attack", "=", "LADMMBB", "(", "sess", ",", "model", ",", "batch_size", "=", "args", "[", "'batch_size'", "]", ",", "max_iterations", "=", "args", "[", "'maxiter'", "]", ",", "\n", "targeted", "=", "args", "[", "'targeted'", "]", ",", "confidence", "=", "args", "[", "'conf'", "]", ",", "\n", "binary_search_steps", "=", "args", "[", "'iteration_steps'", "]", ",", "ro", "=", "args", "[", "'ro'", "]", ",", "\n", "abort_early", "=", "args", "[", "'abort_early'", "]", ",", "gama", "=", "args", "[", "'gama'", "]", ",", "epi", "=", "args", "[", "'epi'", "]", ")", "\n", "\n", "", "timestart", "=", "time", ".", "time", "(", ")", "\n", "#    adv = attack.attack(inputs, targets)", "\n", "adv", ",", "querycount", ",", "queryl2", "=", "attack", ".", "attack", "(", "inputs", ",", "targets", ")", "\n", "timeend", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"Took\"", ",", "timeend", "-", "timestart", ",", "\"seconds to run\"", ",", "len", "(", "inputs", ")", ",", "\"samples.\\n\"", ")", "\n", "\n", "if", "args", "[", "'train'", "]", ":", "\n", "            ", "np", ".", "save", "(", "'labels_train.npy'", ",", "labels", ")", "\n", "np", ".", "save", "(", "str", "(", "args", "[", "'attack'", "]", ")", "+", "'_train.npy'", ",", "adv", ")", "\n", "\n", "", "if", "(", "args", "[", "'conf'", "]", "!=", "0", ")", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist-distilled-100\"", ",", "sess", ")", "\n", "\n", "", "if", "args", "[", "'attack'", "]", "!=", "'L0LA'", "and", "args", "[", "'attack'", "]", "!=", "'L0C'", "and", "args", "[", "'attack'", "]", "!=", "'L0LA2'", ":", "\n", "            ", "if", "args", "[", "'targeted'", "]", ":", "\n", "                ", "l1_l2_li_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "\n", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", "\n", "", "else", ":", "\n", "                ", "l2_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", "\n", "", "", "else", ":", "\n", "            ", "l0_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.__init__": [[23, 45], ["l2_blackbox_attack.LADMMBB.gradient_descent", "l2_blackbox_attack.LADMMBB.gradient_descent2"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.gradient_descent", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.gradient_descent2"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "model", ",", "batch_size", "=", "1", ",", "confidence", "=", "CONFIDENCE", ",", "\n", "targeted", "=", "TARGETED", ",", "learning_rate", "=", "LEARNING_RATE", ",", "\n", "binary_search_steps", "=", "BINARY_SEARCH_STEPS", ",", "max_iterations", "=", "MAX_ITERATIONS", ",", "\n", "abort_early", "=", "ABORT_EARLY", ",", "ro", "=", "RO", ",", "gama", "=", "GAMA", ",", "epi", "=", "EPI", ")", ":", "\n", "        ", "\"\"\"\n        The L_2 optimized attack.\n        \"\"\"", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "sess", "=", "sess", "\n", "self", ".", "TARGETED", "=", "targeted", "\n", "self", ".", "LEARNING_RATE", "=", "learning_rate", "\n", "self", ".", "MAX_ITERATIONS", "=", "max_iterations", "\n", "self", ".", "BINARY_SEARCH_STEPS", "=", "binary_search_steps", "\n", "self", ".", "ABORT_EARLY", "=", "abort_early", "\n", "self", ".", "CONFIDENCE", "=", "confidence", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "ro", "=", "ro", "\n", "self", ".", "grad", "=", "self", ".", "gradient_descent", "(", "sess", ",", "model", ")", "\n", "self", ".", "grad2", "=", "self", ".", "gradient_descent2", "(", "sess", ",", "model", ")", "\n", "self", ".", "gama", "=", "gama", "\n", "self", ".", "epi", "=", "epi", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.compare": [[46, 58], ["isinstance", "numpy.copy", "numpy.argmax"], "methods", ["None"], ["", "def", "compare", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "x", ",", "(", "float", ",", "int", ",", "np", ".", "int64", ")", ")", ":", "\n", "            ", "x", "=", "np", ".", "copy", "(", "x", ")", "\n", "if", "self", ".", "TARGETED", ":", "\n", "                ", "x", "[", "y", "]", "-=", "self", ".", "CONFIDENCE", "\n", "", "else", ":", "\n", "                ", "x", "[", "y", "]", "+=", "self", ".", "CONFIDENCE", "\n", "", "x", "=", "np", ".", "argmax", "(", "x", ")", "\n", "", "if", "self", ".", "TARGETED", ":", "\n", "            ", "return", "x", "==", "y", "\n", "", "else", ":", "\n", "            ", "return", "x", "!=", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.gradient_descent": [[59, 108], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "model.predict", "tensorflow.reduce_sum", "tensorflow.reduce_max", "setup.append", "setup.append", "setup.append", "numpy.zeros", "numpy.zeros", "numpy.zeros", "tensorflow.square", "tensorflow.maximum", "tensorflow.maximum", "tensorflow.Variable.assign", "tensorflow.Variable.assign", "tensorflow.Variable.assign", "sess.run", "sess.run"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "", "def", "gradient_descent", "(", "self", ",", "sess", ",", "model", ")", ":", "\n", "\n", "        ", "batch_size", "=", "self", ".", "batch_size", "\n", "shape", "=", "(", "batch_size", ",", "model", ".", "image_size", ",", "model", ".", "image_size", ",", "model", ".", "num_channels", ")", "\n", "\n", "tz", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "timg", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "shape", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "tlab", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "(", "batch_size", ",", "model", ".", "num_labels", ")", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "# and here's what we use to assign them", "\n", "assign_timg", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", ")", "\n", "assign_tlab", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "(", "batch_size", ",", "model", ".", "num_labels", ")", ")", "\n", "assign_tz", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", ")", "\n", "\n", "# the resulting image, tanh'd to keep bounded from boxmin to boxmax", "\n", "newimg", "=", "tz", "+", "timg", "\n", "l2dist_real", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "tz", ")", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "output", "=", "model", ".", "predict", "(", "newimg", ")", "\n", "\n", "real", "=", "tf", ".", "reduce_sum", "(", "tlab", "*", "output", ",", "1", ")", "\n", "other", "=", "tf", ".", "reduce_max", "(", "(", "1", "-", "tlab", ")", "*", "output", "-", "(", "tlab", "*", "10000", ")", ",", "1", ")", "\n", "\n", "if", "self", ".", "TARGETED", ":", "\n", "# if targetted, optimize for making the other class most likely", "\n", "            ", "loss1", "=", "tf", ".", "maximum", "(", "0.0", ",", "other", "-", "real", "+", "self", ".", "CONFIDENCE", ")", "\n", "", "else", ":", "\n", "# if untargeted, optimize for making this class least likely.", "\n", "            ", "loss1", "=", "tf", ".", "maximum", "(", "0.0", ",", "real", "-", "other", "+", "self", ".", "CONFIDENCE", ")", "\n", "\n", "#       loss1 = tf.reduce_sum(loss1)", "\n", "\n", "# these are the variables to initialize when we run", "\n", "", "setup", "=", "[", "]", "\n", "setup", ".", "append", "(", "timg", ".", "assign", "(", "assign_timg", ")", ")", "\n", "setup", ".", "append", "(", "tlab", ".", "assign", "(", "assign_tlab", ")", ")", "\n", "setup", ".", "append", "(", "tz", ".", "assign", "(", "assign_tz", ")", ")", "\n", "\n", "def", "doit", "(", "imgs", ",", "labs", ",", "z", ")", ":", "\n", "\n", "            ", "batch", "=", "imgs", "[", ":", "batch_size", "]", "\n", "batchlab", "=", "labs", "[", ":", "batch_size", "]", "\n", "\n", "sess", ".", "run", "(", "setup", ",", "{", "assign_timg", ":", "batch", ",", "assign_tlab", ":", "batchlab", ",", "assign_tz", ":", "z", ",", "}", ")", "\n", "\n", "l2s", ",", "scores", ",", "nimg", ",", "loss", "=", "sess", ".", "run", "(", "[", "l2dist_real", ",", "output", ",", "newimg", ",", "loss1", "]", ")", "\n", "\n", "return", "l2s", ",", "scores", ",", "nimg", ",", "loss", "\n", "\n", "", "return", "doit", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.gradient_descent2": [[109, 156], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reduce_sum", "model.predict", "tensorflow.reduce_sum", "tensorflow.reduce_max", "setup.append", "setup.append", "setup.append", "numpy.zeros", "numpy.zeros", "numpy.zeros", "tensorflow.square", "tensorflow.maximum", "tensorflow.maximum", "tensorflow.Variable.assign", "tensorflow.Variable.assign", "tensorflow.Variable.assign", "sess.run", "sess.run"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "gradient_descent2", "(", "self", ",", "sess", ",", "model", ")", ":", "\n", "\n", "        ", "batch_size", "=", "self", ".", "batch_size", "\n", "shape", "=", "(", "batch_size", ",", "model", ".", "image_size", ",", "model", ".", "image_size", ",", "model", ".", "num_channels", ")", "\n", "\n", "tz", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "timg", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "shape", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "tlab", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "(", "batch_size", ",", "model", ".", "num_labels", ")", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "# and here's what we use to assign them", "\n", "assign_timg", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", ")", "\n", "assign_tlab", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "(", "batch_size", ",", "model", ".", "num_labels", ")", ")", "\n", "assign_tz", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", ")", "\n", "\n", "# the resulting image, tanh'd to keep bounded from boxmin to boxmax", "\n", "newimg", "=", "tz", "+", "timg", "\n", "l2dist_real", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "tz", ")", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "output", "=", "model", ".", "predict", "(", "newimg", ")", "\n", "\n", "real", "=", "tf", ".", "reduce_sum", "(", "tlab", "*", "output", ",", "1", ")", "\n", "other", "=", "tf", ".", "reduce_max", "(", "(", "1", "-", "tlab", ")", "*", "output", "-", "(", "tlab", "*", "10000", ")", ",", "1", ")", "\n", "\n", "if", "self", ".", "TARGETED", ":", "\n", "# if targetted, optimize for making the other class most likely", "\n", "            ", "loss1", "=", "tf", ".", "maximum", "(", "0.0", ",", "other", "-", "real", "+", "self", ".", "CONFIDENCE", ")", "\n", "", "else", ":", "\n", "# if untargeted, optimize for making this class least likely.", "\n", "            ", "loss1", "=", "tf", ".", "maximum", "(", "0.0", ",", "real", "-", "other", "+", "self", ".", "CONFIDENCE", ")", "\n", "\n", "# these are the variables to initialize when we run", "\n", "", "setup", "=", "[", "]", "\n", "setup", ".", "append", "(", "timg", ".", "assign", "(", "assign_timg", ")", ")", "\n", "setup", ".", "append", "(", "tlab", ".", "assign", "(", "assign_tlab", ")", ")", "\n", "setup", ".", "append", "(", "tz", ".", "assign", "(", "assign_tz", ")", ")", "\n", "\n", "def", "doit", "(", "imgs", ",", "labs", ",", "z", ")", ":", "\n", "\n", "            ", "batch", "=", "imgs", "[", ":", "batch_size", "]", "\n", "batchlab", "=", "labs", "[", ":", "batch_size", "]", "\n", "\n", "sess", ".", "run", "(", "setup", ",", "{", "assign_timg", ":", "batch", ",", "assign_tlab", ":", "batchlab", ",", "assign_tz", ":", "z", ",", "}", ")", "\n", "\n", "loss", "=", "sess", ".", "run", "(", "[", "loss1", "]", ")", "\n", "\n", "return", "loss", "\n", "\n", "", "return", "doit", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.attack": [[157, 172], ["print", "range", "len", "len", "print", "l2_blackbox_attack.LADMMBB.attack_batch", "r.extend", "qc.extend", "ql2.extend", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.attack_batch"], ["", "def", "attack", "(", "self", ",", "imgs", ",", "targets", ")", ":", "\n", "        ", "\"\"\"\n        Perform the L_2 attack on the given images for the given targets.\n        \"\"\"", "\n", "r", "=", "[", "]", "\n", "qc", "=", "[", "]", "\n", "ql2", "=", "[", "]", "\n", "print", "(", "'go up to'", ",", "len", "(", "imgs", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "imgs", ")", ",", "self", ".", "batch_size", ")", ":", "\n", "            ", "print", "(", "'tick'", ",", "i", ")", "\n", "attac", ",", "queryc", ",", "queryl2", "=", "self", ".", "attack_batch", "(", "imgs", "[", "i", ":", "i", "+", "self", ".", "batch_size", "]", ",", "targets", "[", "i", ":", "i", "+", "self", ".", "batch_size", "]", ")", "\n", "r", ".", "extend", "(", "attac", ")", "\n", "qc", ".", "extend", "(", "queryc", ")", "\n", "ql2", ".", "extend", "(", "queryl2", ")", "\n", "", "return", "np", ".", "array", "(", "r", ")", ",", "np", ".", "array", "(", "qc", ")", ",", "np", ".", "array", "(", "ql2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.attack_batch": [[173, 236], ["range", "open", "open.write", "open.close", "numpy.ones", "numpy.ones", "print", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "l2_blackbox_attack.LADMMBB.grad2", "numpy.zeros", "range", "numpy.sqrt", "l2_blackbox_attack.LADMMBB.grad", "print", "numpy.sqrt", "enumerate", "str", "numpy.random.normal", "numpy.linalg.norm", "sss.reshape.reshape.reshape", "l2_blackbox_attack.LADMMBB.grad2", "zip", "numpy.random.normal.reshape", "l2_blackbox_attack.LADMMBB.compare", "numpy.argmax", "numpy.argmax"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.compare"], ["", "def", "attack_batch", "(", "self", ",", "imgs", ",", "labs", ")", ":", "\n", "        ", "\"\"\"\n        Run the attack on a batch of images and labels.\n        \"\"\"", "\n", "batch_size", "=", "self", ".", "batch_size", "\n", "o_bestl2", "=", "[", "1e10", "]", "*", "batch_size", "\n", "o_bestscore", "=", "[", "-", "1", "]", "*", "batch_size", "\n", "o_bestattack", "=", "[", "imgs", "[", "0", "]", "]", "*", "batch_size", "\n", "o_querycount", "=", "[", "1e10", "]", "*", "batch_size", "\n", "o_queryl2", "=", "[", "1e10", "]", "*", "batch_size", "\n", "o_conv", "=", "[", "1e10", "]", "*", "self", ".", "BINARY_SEARCH_STEPS", "\n", "\n", "delt", "=", "0.0", "*", "np", ".", "ones", "(", "imgs", ".", "shape", ")", "\n", "s", "=", "0.0", "*", "np", ".", "ones", "(", "imgs", ".", "shape", ")", "\n", "alpha", "=", "10", "\n", "\n", "for", "outer_step", "in", "range", "(", "self", ".", "BINARY_SEARCH_STEPS", ")", ":", "\n", "            ", "print", "(", "outer_step", ",", "o_bestl2", ")", "\n", "\n", "tempa", "=", "delt", "-", "(", "1", "/", "self", ".", "ro", ")", "*", "s", "\n", "\n", "ztemp", "=", "self", ".", "ro", "/", "(", "self", ".", "ro", "+", "2", "*", "self", ".", "gama", ")", "*", "tempa", "\n", "mintemp", "=", "np", ".", "where", "(", "0.5", "-", "imgs", "<", "self", ".", "epi", ",", "0.5", "-", "imgs", ",", "self", ".", "epi", ")", "\n", "maxtemp", "=", "np", ".", "where", "(", "-", "0.5", "-", "imgs", ">", "-", "self", ".", "epi", ",", "-", "0.5", "-", "imgs", ",", "-", "self", ".", "epi", ")", "\n", "ztemp1", "=", "np", ".", "where", "(", "ztemp", ">", "mintemp", ",", "mintemp", ",", "ztemp", ")", "\n", "z", "=", "np", ".", "where", "(", "ztemp1", "<", "maxtemp", ",", "maxtemp", ",", "ztemp1", ")", "\n", "\n", "loss", "=", "self", ".", "grad2", "(", "imgs", ",", "labs", ",", "delt", ")", "\n", "\n", "delt_grads", "=", "np", ".", "zeros", "(", "imgs", ".", "shape", ")", "\n", "\n", "for", "iii", "in", "range", "(", "Query_iterations", ")", ":", "\n", "                ", "dirc", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "imgs", ".", "shape", ")", "\n", "sss", "=", "LA", ".", "norm", "(", "dirc", ".", "reshape", "(", "batch_size", ",", "-", "1", ")", ",", "axis", "=", "1", ")", "\n", "sss", "=", "sss", ".", "reshape", "(", "batch_size", ",", "1", ",", "1", ",", "1", ")", "\n", "dir_normal", "=", "dirc", "/", "sss", "\n", "temploss", "=", "self", ".", "grad2", "(", "imgs", "+", "u", "*", "dir_normal", ",", "labs", ",", "delt", ")", "\n", "delt_grads", "=", "delt_grads", "+", "(", "temploss", "[", "0", "]", "-", "loss", "[", "0", "]", ")", ".", "reshape", "(", "batch_size", ",", "1", ",", "1", ",", "1", ")", "*", "dir_normal", "\n", "\n", "", "delt_grads", "=", "delt_grads", "*", "imgs", ".", "shape", "[", "1", "]", "*", "imgs", ".", "shape", "[", "2", "]", "*", "imgs", ".", "shape", "[", "3", "]", "/", "(", "u", "*", "Query_iterations", ")", "\n", "\n", "eta", "=", "np", ".", "sqrt", "(", "outer_step", "+", "1", ")", "\n", "delt", "=", "1", "/", "(", "alpha", "*", "eta", "+", "self", ".", "ro", ")", "*", "(", "alpha", "*", "eta", "*", "delt", "+", "self", ".", "ro", "*", "z", "+", "s", "-", "delt_grads", ")", "\n", "\n", "l2s", ",", "scores", ",", "nimg", ",", "loss1", "=", "self", ".", "grad", "(", "imgs", ",", "labs", ",", "delt", ")", "\n", "print", "(", "loss1", "[", "0", "]", ")", "\n", "s", "=", "s", "+", "self", ".", "ro", "*", "(", "z", "-", "delt", ")", "\n", "\n", "o_conv", "[", "outer_step", "]", "=", "np", ".", "sqrt", "(", "l2s", "[", "0", "]", ")", "\n", "for", "e", ",", "(", "l2", ",", "sc", ",", "ii", ",", ")", "in", "enumerate", "(", "zip", "(", "l2s", ",", "scores", ",", "nimg", ")", ")", ":", "\n", "                    ", "if", "l2", "<", "o_bestl2", "[", "e", "]", "and", "self", ".", "compare", "(", "sc", ",", "np", ".", "argmax", "(", "labs", "[", "e", "]", ")", ")", ":", "\n", "                        ", "o_bestl2", "[", "e", "]", "=", "l2", "\n", "o_bestscore", "[", "e", "]", "=", "np", ".", "argmax", "(", "sc", ")", "\n", "o_bestattack", "[", "e", "]", "=", "ii", "\n", "if", "o_querycount", "[", "e", "]", "==", "1e10", ":", "\n", "                            ", "o_querycount", "[", "e", "]", "=", "(", "outer_step", "+", "1", ")", "*", "(", "Query_iterations", "+", "1", ")", "\n", "o_queryl2", "[", "e", "]", "=", "l2", "\n", "\n", "", "", "", "", "file", "=", "open", "(", "'conv.txt'", ",", "'w'", ")", "\n", "file", ".", "write", "(", "str", "(", "o_conv", ")", ")", "\n", "file", ".", "close", "(", ")", "\n", "return", "o_bestattack", ",", "o_querycount", ",", "o_queryl2", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show": [[20, 26], ["fig.astype().squeeze.astype().squeeze", "PIL.Image.fromarray", "Image.fromarray.save", "fig.astype().squeeze.astype"], "function", ["None"], ["def", "show", "(", "img", ",", "name", "=", "\"output.png\"", ")", ":", "\n", "    ", "fig", "=", "(", "img", "+", "0.5", ")", "*", "255", "\n", "fig", "=", "fig", ".", "astype", "(", "np", ".", "uint8", ")", ".", "squeeze", "(", ")", "\n", "pic", "=", "Image", ".", "fromarray", "(", "fig", ")", "\n", "# pic.resize((512,512), resample=PIL.Image.BICUBIC)", "\n", "pic", ".", "save", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.generate_data": [[28, 95], ["random.seed", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "random.shuffle", "print", "print", "random.sample", "list", "list", "len", "list.pop", "model.model.predict", "range", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "range", "range", "numpy.reshape", "numpy.argmax", "numpy.argmax", "random.sample.append", "random.sample", "range", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "range", "numpy.argmax", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "generate_data", "(", "data", ",", "model", ",", "samples", ",", "targeted", "=", "True", ",", "target_num", "=", "9", ",", "start", "=", "0", ",", "inception", "=", "False", ",", "seed", "=", "3", ",", "handpick", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Generate the input data to the attack algorithm.\n\n    data: the images to attack\n    samples: number of samples to use\n    targeted: if true, construct targeted attacks, otherwise untargeted attacks\n    start: offset into data to use\n    inception: if targeted and inception, randomly sample 100 targets intead of 1000\n    \"\"\"", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "inputs", "=", "[", "]", "\n", "targets", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "true_ids", "=", "[", "]", "\n", "sample_set", "=", "[", "]", "\n", "\n", "data_d", "=", "data", ".", "test_data", "\n", "labels_d", "=", "data", ".", "test_labels", "\n", "\n", "if", "handpick", ":", "\n", "        ", "if", "inception", ":", "\n", "            ", "deck", "=", "list", "(", "range", "(", "0", ",", "1500", ")", ")", "\n", "", "else", ":", "\n", "            ", "deck", "=", "list", "(", "range", "(", "0", ",", "10000", ")", ")", "\n", "", "random", ".", "shuffle", "(", "deck", ")", "\n", "print", "(", "'Handpicking'", ")", "\n", "\n", "while", "(", "len", "(", "sample_set", ")", "<", "samples", ")", ":", "\n", "            ", "rand_int", "=", "deck", ".", "pop", "(", ")", "\n", "pred", "=", "model", ".", "model", ".", "predict", "(", "data_d", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "\n", "if", "inception", ":", "\n", "                ", "pred", "=", "np", ".", "reshape", "(", "pred", ",", "(", "labels_d", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred", ",", "1", ")", "==", "np", ".", "argmax", "(", "labels_d", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "sample_set", ".", "append", "(", "rand_int", ")", "\n", "", "", "print", "(", "'Handpicked'", ")", "\n", "", "else", ":", "\n", "        ", "sample_set", "=", "random", ".", "sample", "(", "range", "(", "0", ",", "10000", ")", ",", "samples", ")", "\n", "\n", "", "for", "i", "in", "sample_set", ":", "\n", "        ", "if", "targeted", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "seq", "=", "random", ".", "sample", "(", "range", "(", "1", ",", "1001", ")", ",", "target_num", ")", "\n", "", "else", ":", "\n", "                ", "seq", "=", "range", "(", "labels_d", ".", "shape", "[", "1", "]", ")", "\n", "\n", "#      seq = {1}", "\n", "", "for", "j", "in", "seq", ":", "\n", "                ", "if", "(", "j", "==", "np", ".", "argmax", "(", "labels_d", "[", "start", "+", "i", "]", ")", ")", "and", "(", "inception", "==", "False", ")", ":", "\n", "                    ", "continue", "\n", "", "inputs", ".", "append", "(", "data_d", "[", "start", "+", "i", "]", ")", "\n", "targets", ".", "append", "(", "np", ".", "eye", "(", "labels_d", ".", "shape", "[", "1", "]", ")", "[", "j", "]", ")", "\n", "labels", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "true_ids", ".", "append", "(", "start", "+", "i", ")", "\n", "", "", "else", ":", "\n", "            ", "inputs", ".", "append", "(", "data_d", "[", "start", "+", "i", "]", ")", "\n", "targets", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "labels", ".", "append", "(", "labels_d", "[", "start", "+", "i", "]", ")", "\n", "true_ids", ".", "append", "(", "start", "+", "i", ")", "\n", "\n", "", "", "inputs", "=", "np", ".", "array", "(", "inputs", ")", "\n", "targets", "=", "np", ".", "array", "(", "targets", ")", "\n", "labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "true_ids", "=", "np", ".", "array", "(", "true_ids", ")", "\n", "return", "inputs", ",", "targets", ",", "labels", ",", "true_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l1_l2_li_computation": [[96, 245], ["range", "numpy.reshape", "numpy.amin", "numpy.mean", "numpy.amax", "numpy.reshape", "numpy.amin", "numpy.mean", "numpy.amax", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "len", "range", "enumerate", "numpy.random.randint", "enumerate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "os.path.exists", "os.makedirs", "range", "d_best_l2.append", "d_best_l1.append", "d_best_linf.append", "r_best.append", "r_best.append", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l2.append", "d_average_l1.append", "d_average_linf.append", "r_average.append", "range", "d_worst_l2.append", "d_worst_l1.append", "d_worst_linf.append", "r_worst.append", "range", "pred.append", "pred.append", "numpy.argmax", "numpy.argmax", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.sum", "numpy.amax", "numpy.argmax", "numpy.argmax", "r_worst.append", "numpy.sum", "numpy.amax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "test_attack_mnist.show", "test_attack_mnist.show", "numpy.sqrt", "str", "str", "numpy.reshape", "model.model.predict", "numpy.sum", "numpy.sum", "numpy.amax", "numpy.amax", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "numpy.amax", "numpy.amax", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.reshape", "numpy.reshape", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "model.model.predict", "model.model.predict", "numpy.abs", "numpy.sum", "numpy.abs", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l1_l2_li_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", ":", "\n", "\n", "    ", "r_best", "=", "[", "]", "\n", "d_best_l1", "=", "[", "]", "\n", "d_best_l2", "=", "[", "]", "\n", "d_best_linf", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "d_average_l1", "=", "[", "]", "\n", "d_average_l2", "=", "[", "]", "\n", "d_average_linf", "=", "[", "]", "\n", "r_worst", "=", "[", "]", "\n", "d_worst_l1", "=", "[", "]", "\n", "d_worst_l2", "=", "[", "]", "\n", "d_worst_linf", "=", "[", "]", "\n", "\n", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "inputs", ")", ",", "args", "[", "'target_number'", "]", ")", ":", "\n", "        ", "pred", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "pred", ".", "append", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "pred", ".", "append", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ")", "\n", "\n", "", "", "dist_l1", "=", "1e10", "\n", "dist_l2", "=", "1e10", "\n", "dist_linf", "=", "1e10", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_l2_index", "=", "1e10", "\n", "dist_linf_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "if", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "<", "dist_l1", ")", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_l1_index", "=", "j", "\n", "", "if", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "<", "dist_linf", ")", ":", "\n", "                    ", "dist_linf", "=", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_linf_index", "=", "j", "\n", "", "if", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "<", "dist_l2", ")", ":", "\n", "                    ", "dist_l2", "=", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "dist_l2_index", "=", "j", "\n", "", "", "", "if", "(", "dist_l1_index", "!=", "1e10", ")", ":", "\n", "            ", "d_best_l2", ".", "append", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "dist_l2_index", "]", "-", "inputs", "[", "dist_l2_index", "]", ")", "**", "2", ")", "**", ".5", ")", ")", "\n", "d_best_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", "\n", "d_best_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "dist_linf_index", "]", "-", "inputs", "[", "dist_linf_index", "]", ")", ")", ")", "\n", "r_best", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "r_best", ".", "append", "(", "0", ")", "\n", "\n", "", "rand_int", "=", "np", ".", "random", ".", "randint", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", "\n", "if", "inception", ":", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l2", ".", "append", "(", "np", ".", "sum", "(", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "d_average_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", "\n", "d_average_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "", "dist_l1", "=", "0", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_linf", "=", "0", "\n", "dist_linf_index", "=", "1e10", "\n", "dist_l2", "=", "0", "\n", "dist_l2_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "r_worst", ".", "append", "(", "0", ")", "\n", "dist_l1_index", "=", "1e10", "\n", "dist_l2_index", "=", "1e10", "\n", "dist_linf_index", "=", "1e10", "\n", "break", "\n", "", "else", ":", "\n", "                ", "if", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ">", "dist_l1", ")", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_l1_index", "=", "j", "\n", "", "if", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ">", "dist_linf", ")", ":", "\n", "                    ", "dist_linf", "=", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", "\n", "dist_linf_index", "=", "j", "\n", "", "if", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", ">", "dist_l2", ")", ":", "\n", "                    ", "dist_l2", "=", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "dist_l2_index", "=", "j", "\n", "", "", "", "if", "(", "dist_l1_index", "!=", "1e10", ")", ":", "\n", "            ", "d_worst_l2", ".", "append", "(", "(", "np", ".", "sum", "(", "(", "adv", "[", "dist_l2_index", "]", "-", "inputs", "[", "dist_l2_index", "]", ")", "**", "2", ")", "**", ".5", ")", ")", "\n", "d_worst_l1", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", "\n", "d_worst_linf", ".", "append", "(", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "dist_linf_index", "]", "-", "inputs", "[", "dist_linf_index", "]", ")", ")", ")", "\n", "r_worst", ".", "append", "(", "1", ")", "\n", "\n", "", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'batch_size'", "]", ")", ":", "\n", "                ", "target_id", "=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "label_id", "=", "np", ".", "argmax", "(", "labels", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "prev_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ")", ",", "\n", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "adv_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "suffix", "=", "\"id{}_seq{}_lbl{}_prev{}_adv{}_{}_l1_{:.3f}_l2_{:.3f}_linf_{:.3f}\"", ".", "format", "(", "\n", "true_ids", "[", "i", "]", ",", "\n", "target_id", ",", "\n", "label_id", ",", "\n", "prev_id", ",", "\n", "adv_id", ",", "\n", "adv_id", "==", "target_id", ",", "\n", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ",", "\n", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ",", "\n", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", "\n", "\n", "show", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/original_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "show", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/adversarial_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "\n", "", "", "", "querycount", "=", "np", ".", "reshape", "(", "querycount", ",", "(", "-", "1", ",", "9", ")", ")", "\n", "qc_batch_min", "=", "np", ".", "amin", "(", "querycount", ",", "axis", "=", "1", ")", "\n", "qc_batch_mean", "=", "np", ".", "mean", "(", "querycount", ",", "axis", "=", "1", ")", "\n", "qc_batch_max", "=", "np", ".", "amax", "(", "querycount", ",", "axis", "=", "1", ")", "\n", "queryl23", "=", "np", ".", "sqrt", "(", "queryl2", ")", "/", "inputs", ".", "shape", "[", "1", "]", "/", "inputs", ".", "shape", "[", "2", "]", "/", "inputs", ".", "shape", "[", "3", "]", "\n", "queryl23", "=", "np", ".", "reshape", "(", "queryl23", ",", "(", "-", "1", ",", "9", ")", ")", "\n", "qcl2_batch_min", "=", "np", ".", "amin", "(", "queryl23", ",", "axis", "=", "1", ")", "\n", "qcl2_batch_mean", "=", "np", ".", "mean", "(", "queryl23", ",", "axis", "=", "1", ")", "\n", "qcl2_batch_max", "=", "np", ".", "amax", "(", "queryl23", ",", "axis", "=", "1", ")", "\n", "\n", "\n", "print", "(", "'best_case_L1_mean'", ",", "np", ".", "mean", "(", "d_best_l1", ")", ")", "\n", "print", "(", "'best_case_L2_mean'", ",", "np", ".", "mean", "(", "d_best_l2", ")", ")", "\n", "print", "(", "'best_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_best_linf", ")", ")", "\n", "print", "(", "'best_case_prob'", ",", "np", ".", "mean", "(", "r_best", ")", ")", "\n", "print", "(", "'average_case_L1_mean'", ",", "np", ".", "mean", "(", "d_average_l1", ")", ")", "\n", "print", "(", "'average_case_L2_mean'", ",", "np", ".", "mean", "(", "d_average_l2", ")", ")", "\n", "print", "(", "'average_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_average_linf", ")", ")", "\n", "print", "(", "'average_case_prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "print", "(", "'worst_case_L1_mean'", ",", "np", ".", "mean", "(", "d_worst_l1", ")", ")", "\n", "print", "(", "'worst_case_L2_mean'", ",", "np", ".", "mean", "(", "d_worst_l2", ")", ")", "\n", "print", "(", "'worst_case_Linf_mean'", ",", "np", ".", "mean", "(", "d_worst_linf", ")", ")", "\n", "print", "(", "'worst_case_prob'", ",", "np", ".", "mean", "(", "r_worst", ")", ")", "\n", "\n", "print", "(", "'smallest_query_count'", ",", "np", ".", "mean", "(", "qc_batch_min", ")", ")", "\n", "print", "(", "'mean_query_count'", ",", "np", ".", "mean", "(", "qc_batch_mean", ")", ")", "\n", "print", "(", "'largest_query_count'", ",", "np", ".", "mean", "(", "qc_batch_max", ")", ")", "\n", "\n", "print", "(", "'smallest_query_l2_first_success'", ",", "np", ".", "mean", "(", "qcl2_batch_min", ")", ")", "\n", "print", "(", "'mean_query_l2_first_success'", ",", "np", ".", "mean", "(", "qcl2_batch_mean", ")", ")", "\n", "print", "(", "'largest_query_l2_first_success'", ",", "np", ".", "mean", "(", "qcl2_batch_max", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l2_computation": [[247, 285], ["range", "print", "print", "print", "print", "print", "print", "print", "print", "print", "len", "numpy.array", "numpy.mean", "numpy.mean", "numpy.min", "numpy.mean", "numpy.max", "numpy.min", "numpy.mean", "numpy.max", "os.path.exists", "os.makedirs", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l2.append", "r_average.append", "model.model.predict", "numpy.sqrt", "str", "str", "numpy.sum", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l2_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", ":", "\n", "\n", "    ", "d_average_l2", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "if", "(", "args", "[", "'show'", "]", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "j", "in", "range", "(", "len", "(", "inputs", ")", ")", ":", "\n", "#    pred = []", "\n", "        ", "if", "inception", ":", "\n", "#        pred.append(np.reshape(model.model.predict(adv[j:j + 1]), (data.test_labels[0:1].shape)))", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "#       pred.append(model.model.predict(adv[j:j + 1]))", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", "\n", "\n", "", "if", "(", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l2", ".", "append", "(", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ")", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "\n", "", "", "queryl23", "=", "np", ".", "sqrt", "(", "queryl2", ")", "/", "inputs", ".", "shape", "[", "1", "]", "/", "inputs", ".", "shape", "[", "2", "]", "/", "inputs", ".", "shape", "[", "3", "]", "\n", "\n", "\n", "print", "(", "np", ".", "array", "(", "d_average_l2", ")", ")", "\n", "print", "(", "'average_L2_mean'", ",", "np", ".", "mean", "(", "d_average_l2", ")", ")", "\n", "print", "(", "'average__prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "\n", "print", "(", "'smallest_query_count'", ",", "np", ".", "min", "(", "querycount", ")", ")", "\n", "print", "(", "'mean_query_count'", ",", "np", ".", "mean", "(", "querycount", ")", ")", "\n", "print", "(", "'largest_query_count'", ",", "np", ".", "max", "(", "querycount", ")", ")", "\n", "\n", "print", "(", "'smallest_query_l2_first_success'", ",", "np", ".", "min", "(", "queryl23", ")", ")", "\n", "print", "(", "'mean_query_l2_first_success'", ",", "np", ".", "mean", "(", "queryl23", ")", ")", "\n", "print", "(", "'largest_query_l2_first_success'", ",", "np", ".", "max", "(", "queryl23", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l0_computation": [[287, 383], ["range", "print", "print", "print", "print", "print", "print", "len", "range", "enumerate", "numpy.random.randint", "enumerate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "os.path.exists", "os.makedirs", "range", "d_best_l1.append", "r_best.append", "r_best.append", "numpy.reshape", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_average.append", "d_average_l1.append", "r_average.append", "range", "d_worst_l1.append", "r_worst.append", "range", "pred.append", "pred.append", "numpy.argmax", "numpy.argmax", "model.model.predict", "numpy.argmax", "numpy.argmax", "r_worst.append", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "test_attack_mnist.show", "test_attack_mnist.show", "str", "str", "numpy.reshape", "model.model.predict", "numpy.reshape", "numpy.reshape", "numpy.sum", "numpy.amax", "model.model.predict", "numpy.array", "numpy.array", "numpy.array", "model.model.predict", "model.model.predict", "numpy.abs", "numpy.sum", "numpy.abs", "str", "str", "numpy.array", "numpy.array", "numpy.nonzero", "numpy.nonzero", "numpy.array", "numpy.array", "numpy.nonzero", "str", "str", "str", "str", "numpy.nonzero", "numpy.nonzero", "numpy.where", "numpy.where", "numpy.nonzero", "numpy.nonzero", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "str", "str", "numpy.abs", "numpy.abs", "numpy.abs", "str", "str", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.show", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict"], ["", "def", "l0_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ")", ":", "\n", "    ", "r_best", "=", "[", "]", "\n", "d_best_l1", "=", "[", "]", "\n", "r_average", "=", "[", "]", "\n", "d_average_l1", "=", "[", "]", "\n", "r_worst", "=", "[", "]", "\n", "d_worst_l1", "=", "[", "]", "\n", "\n", "if", "args", "[", "'show'", "]", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'attack'", "]", ")", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "inputs", ")", ",", "args", "[", "'target_number'", "]", ")", ":", "\n", "        ", "pred", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ":", "\n", "            ", "if", "inception", ":", "\n", "                ", "pred", ".", "append", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "pred", ".", "append", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ")", "\n", "\n", "", "", "dist_l1", "=", "1e10", "\n", "dist_l1_index", "=", "1e10", "\n", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ":", "\n", "#if np.array(np.nonzero(adv[j]-inputs[j])).shape[1] < dist_l1:", "\n", "                ", "if", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "<", "dist_l1", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "\n", "#abc = np.array(adv[j]-inputs[j])", "\n", "#print(np.nonzero(np.where(adv[j] - inputs[j] < 1e-8, 0, adv[j] - inputs[j])))", "\n", "dist_l1_index", "=", "j", "\n", "", "", "", "if", "dist_l1_index", "!=", "1e10", ":", "\n", "            ", "d_best_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", "<", "1e-7", ",", "0", ",", "\n", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "r_best", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "r_best", ".", "append", "(", "0", ")", "\n", "\n", "", "rand_int", "=", "np", ".", "random", ".", "randint", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", "\n", "if", "inception", ":", "\n", "            ", "pred_r", "=", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", "\n", "", "else", ":", "\n", "            ", "pred_r", "=", "model", ".", "model", ".", "predict", "(", "adv", "[", "rand_int", ":", "rand_int", "+", "1", "]", ")", "\n", "", "if", "np", ".", "argmax", "(", "pred_r", ",", "1", ")", "==", "np", ".", "argmax", "(", "targets", "[", "rand_int", ":", "rand_int", "+", "1", "]", ",", "1", ")", ":", "\n", "            ", "r_average", ".", "append", "(", "1", ")", "\n", "d_average_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", "<", "1e-7", ",", "0", ",", "\n", "adv", "[", "rand_int", "]", "-", "inputs", "[", "rand_int", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "r_average", ".", "append", "(", "0", ")", "\n", "\n", "", "dist_l1", "=", "0", "\n", "dist_l1_index", "=", "1e10", "\n", "for", "k", ",", "j", "in", "enumerate", "(", "range", "(", "i", ",", "i", "+", "args", "[", "'target_number'", "]", ")", ")", ":", "\n", "            ", "if", "(", "np", ".", "argmax", "(", "pred", "[", "k", "]", ",", "1", ")", "!=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", ")", ":", "\n", "                ", "r_worst", ".", "append", "(", "0", ")", "\n", "dist_l1_index", "=", "1e10", "\n", "break", "\n", "", "else", ":", "\n", "                ", "if", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ">", "dist_l1", ":", "\n", "                    ", "dist_l1", "=", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "<", "1e-7", ",", "0", ",", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", ".", "shape", "[", "1", "]", "\n", "dist_l1_index", "=", "j", "\n", "\n", "", "", "", "if", "dist_l1_index", "!=", "1e10", ":", "\n", "            ", "d_worst_l1", ".", "append", "(", "np", ".", "array", "(", "np", ".", "nonzero", "(", "np", ".", "where", "(", "np", ".", "abs", "(", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", "<", "1e-7", ",", "0", ",", "\n", "adv", "[", "dist_l1_index", "]", "-", "inputs", "[", "dist_l1_index", "]", ")", ")", ")", ".", "shape", "[", "1", "]", ")", "\n", "r_worst", ".", "append", "(", "1", ")", "\n", "\n", "", "if", "args", "[", "'show'", "]", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "i", "+", "args", "[", "'batch_size'", "]", ")", ":", "\n", "                ", "target_id", "=", "np", ".", "argmax", "(", "targets", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "label_id", "=", "np", ".", "argmax", "(", "labels", "[", "j", ":", "j", "+", "1", "]", ",", "1", ")", "\n", "prev_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ")", ",", "\n", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "adv_id", "=", "np", ".", "argmax", "(", "np", ".", "reshape", "(", "model", ".", "model", ".", "predict", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ")", ",", "(", "data", ".", "test_labels", "[", "0", ":", "1", "]", ".", "shape", ")", ")", ",", "1", ")", "\n", "suffix", "=", "\"id{}_seq{}_lbl{}_prev{}_adv{}_{}_l1_{:.3f}_l2_{:.3f}_linf_{:.3f}\"", ".", "format", "(", "\n", "true_ids", "[", "i", "]", ",", "\n", "target_id", ",", "\n", "label_id", ",", "\n", "prev_id", ",", "\n", "adv_id", ",", "\n", "adv_id", "==", "target_id", ",", "\n", "np", ".", "sum", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ",", "\n", "np", ".", "sum", "(", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", "**", "2", ")", "**", ".5", ",", "\n", "np", ".", "amax", "(", "np", ".", "abs", "(", "adv", "[", "j", "]", "-", "inputs", "[", "j", "]", ")", ")", ")", "\n", "\n", "show", "(", "inputs", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/original_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "show", "(", "adv", "[", "j", ":", "j", "+", "1", "]", ",", "str", "(", "args", "[", "'save'", "]", ")", "+", "\"/\"", "+", "str", "(", "args", "[", "'dataset'", "]", ")", "+", "\"/\"", "+", "str", "(", "\n", "args", "[", "'attack'", "]", ")", "+", "\"/adversarial_{}.png\"", ".", "format", "(", "suffix", ")", ")", "\n", "\n", "", "", "", "print", "(", "'best_case_L0_mean'", ",", "np", ".", "mean", "(", "d_best_l1", ")", ")", "\n", "print", "(", "'best_case_prob'", ",", "np", ".", "mean", "(", "r_best", ")", ")", "\n", "print", "(", "'average_case_L0_mean'", ",", "np", ".", "mean", "(", "d_average_l1", ")", ")", "\n", "print", "(", "'average_case_prob'", ",", "np", ".", "mean", "(", "r_average", ")", ")", "\n", "print", "(", "'worst_case_L0_mean'", ",", "np", ".", "mean", "(", "d_worst_l1", ")", ")", "\n", "print", "(", "'worst_case_prob'", ",", "np", ".", "mean", "(", "r_worst", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.main": [[385, 448], ["tensorflow.Session", "test_attack_mnist.generate_data", "time.time", "l2_blackbox_attack.LADMMBB.attack", "time.time", "print", "setup_mnist.MNISTModel", "setup_mnist.MNISTModel", "setup_cifar.CIFARModel", "l2_attack.CarliniL2", "l2_blackbox_attack.LADMMBB", "len", "numpy.save", "numpy.save", "setup_mnist.MNISTModel", "test_attack_mnist.l0_computation", "setup_mnist.MNIST", "setup_mnist.MNISTModel", "setup_cifar.CIFAR", "setup_cifar.CIFARModel", "setup_inception.ImageNet", "setup_inception.InceptionModel", "test_attack_mnist.l1_l2_li_computation", "test_attack_mnist.l2_computation", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.generate_data", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.l2_blackbox_attack.LADMMBB.attack", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l0_computation", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l1_l2_li_computation", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.test_attack_mnist.l2_computation"], ["", "def", "main", "(", "args", ")", ":", "\n", "#   gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.7)", "\n", "    ", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "if", "args", "[", "'dataset'", "]", "==", "'mnist'", ":", "\n", "            ", "data", ",", "model", "=", "MNIST", "(", ")", ",", "MNISTModel", "(", "\"models/mnist\"", ",", "sess", ")", "\n", "handpick", "=", "False", "\n", "inception", "=", "False", "\n", "", "if", "args", "[", "'dataset'", "]", "==", "\"cifar\"", ":", "\n", "            ", "data", ",", "model", "=", "CIFAR", "(", ")", ",", "CIFARModel", "(", "\"models/cifar\"", ",", "sess", ")", "\n", "handpick", "=", "True", "\n", "inception", "=", "False", "\n", "", "if", "args", "[", "'dataset'", "]", "==", "\"imagenet\"", ":", "\n", "            ", "data", ",", "model", "=", "ImageNet", "(", "args", "[", "'seed_imagenet'", "]", ")", ",", "InceptionModel", "(", "sess", ")", "\n", "handpick", "=", "True", "\n", "inception", "=", "True", "\n", "\n", "", "if", "args", "[", "'adversarial'", "]", "!=", "\"none\"", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist_cwl2_admm\"", "+", "str", "(", "args", "[", "'adversarial'", "]", ")", ",", "sess", ")", "\n", "\n", "", "if", "args", "[", "'temp'", "]", "and", "args", "[", "'dataset'", "]", "==", "'mnist'", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist-distilled-\"", "+", "str", "(", "args", "[", "'temp'", "]", ")", ",", "sess", ")", "\n", "", "if", "args", "[", "'temp'", "]", "and", "args", "[", "'dataset'", "]", "==", "'cifar'", ":", "\n", "            ", "model", "=", "CIFARModel", "(", "\"models/cifar-distilled-\"", "+", "str", "(", "args", "[", "'temp'", "]", ")", ",", "sess", ")", "\n", "\n", "", "inputs", ",", "targets", ",", "labels", ",", "true_ids", "=", "generate_data", "(", "data", ",", "model", ",", "samples", "=", "args", "[", "'numimg'", "]", ",", "targeted", "=", "args", "[", "'targeted'", "]", ",", "\n", "start", "=", "0", ",", "inception", "=", "inception", ",", "handpick", "=", "handpick", ",", "seed", "=", "args", "[", "'seed'", "]", ")", "\n", "\n", "#print(true_ids)", "\n", "if", "args", "[", "'attack'", "]", "==", "'L2C'", ":", "\n", "            ", "attack", "=", "CarliniL2", "(", "sess", ",", "model", ",", "batch_size", "=", "args", "[", "'batch_size'", "]", ",", "max_iterations", "=", "args", "[", "'maxiter'", "]", ",", "\n", "confidence", "=", "args", "[", "'conf'", "]", ",", "targeted", "=", "args", "[", "'targeted'", "]", ",", "\n", "binary_search_steps", "=", "args", "[", "'binary_steps'", "]", ",", "\n", "abort_early", "=", "args", "[", "'abort_early'", "]", ")", "\n", "\n", "\n", "", "if", "args", "[", "'attack'", "]", "==", "'L2BB'", ":", "\n", "            ", "attack", "=", "LADMMBB", "(", "sess", ",", "model", ",", "batch_size", "=", "args", "[", "'batch_size'", "]", ",", "max_iterations", "=", "args", "[", "'maxiter'", "]", ",", "\n", "targeted", "=", "args", "[", "'targeted'", "]", ",", "confidence", "=", "args", "[", "'conf'", "]", ",", "\n", "binary_search_steps", "=", "args", "[", "'iteration_steps'", "]", ",", "ro", "=", "args", "[", "'ro'", "]", ",", "\n", "abort_early", "=", "args", "[", "'abort_early'", "]", ",", "gama", "=", "args", "[", "'gama'", "]", ",", "epi", "=", "args", "[", "'epi'", "]", ")", "\n", "\n", "\n", "", "timestart", "=", "time", ".", "time", "(", ")", "\n", "#    adv = attack.attack(inputs, targets)", "\n", "adv", ",", "querycount", ",", "queryl2", "=", "attack", ".", "attack", "(", "inputs", ",", "targets", ")", "\n", "timeend", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"Took\"", ",", "timeend", "-", "timestart", ",", "\"seconds to run\"", ",", "len", "(", "inputs", ")", ",", "\"samples.\\n\"", ")", "\n", "\n", "if", "args", "[", "'train'", "]", ":", "\n", "            ", "np", ".", "save", "(", "'labels_train.npy'", ",", "labels", ")", "\n", "np", ".", "save", "(", "str", "(", "args", "[", "'attack'", "]", ")", "+", "'_train.npy'", ",", "adv", ")", "\n", "\n", "", "if", "(", "args", "[", "'conf'", "]", "!=", "0", ")", ":", "\n", "            ", "model", "=", "MNISTModel", "(", "\"models/mnist-distilled-100\"", ",", "sess", ")", "\n", "\n", "", "if", "args", "[", "'attack'", "]", "!=", "'L0LA'", "and", "args", "[", "'attack'", "]", "!=", "'L0C'", "and", "args", "[", "'attack'", "]", "!=", "'L0LA2'", ":", "\n", "            ", "if", "args", "[", "'targeted'", "]", ":", "\n", "                ", "l1_l2_li_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "\n", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", "\n", "", "else", ":", "\n", "                ", "l2_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ",", "querycount", ",", "queryl2", ")", "\n", "", "", "else", ":", "\n", "            ", "l0_computation", "(", "args", ",", "data", ",", "model", ",", "adv", ",", "inception", ",", "inputs", ",", "targets", ",", "labels", ",", "true_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFAR.__init__": [[62, 88], ["range", "numpy.array", "numpy.array", "setup_cifar.load_batch", "os.path.exists", "urllib.request.urlretrieve", "os.popen().read", "setup_cifar.load_batch", "numpy.array.extend", "numpy.array.extend", "os.popen", "str"], "methods", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.load_batch", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.load_batch"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "train_data", "=", "[", "]", "\n", "train_labels", "=", "[", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "\"cifar-10-batches-bin\"", ")", ":", "\n", "            ", "urllib", ".", "request", ".", "urlretrieve", "(", "\"https://www.cs.toronto.edu/~kriz/cifar-10-binary.tar.gz\"", ",", "\n", "\"cifar-data.tar.gz\"", ")", "\n", "os", ".", "popen", "(", "\"tar -xzf cifar-data.tar.gz\"", ")", ".", "read", "(", ")", "\n", "\n", "\n", "", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "            ", "r", ",", "s", "=", "load_batch", "(", "\"cifar-10-batches-bin/data_batch_\"", "+", "str", "(", "i", "+", "1", ")", "+", "\".bin\"", ")", "\n", "train_data", ".", "extend", "(", "r", ")", "\n", "train_labels", ".", "extend", "(", "s", ")", "\n", "\n", "", "train_data", "=", "np", ".", "array", "(", "train_data", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "train_labels", "=", "np", ".", "array", "(", "train_labels", ")", "\n", "\n", "self", ".", "test_data", ",", "self", ".", "test_labels", "=", "load_batch", "(", "\"cifar-10-batches-bin/test_batch.bin\"", ")", "\n", "\n", "VALIDATION_SIZE", "=", "5000", "\n", "\n", "self", ".", "validation_data", "=", "train_data", "[", ":", "VALIDATION_SIZE", ",", ":", ",", ":", ",", ":", "]", "\n", "self", ".", "validation_labels", "=", "train_labels", "[", ":", "VALIDATION_SIZE", "]", "\n", "self", ".", "train_data", "=", "train_data", "[", "VALIDATION_SIZE", ":", ",", ":", ",", ":", ",", ":", "]", "\n", "self", ".", "train_labels", "=", "train_labels", "[", "VALIDATION_SIZE", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.__init__": [[90, 120], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.load_weights", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "restore", ",", "session", "=", "None", ")", ":", "\n", "        ", "self", ".", "num_channels", "=", "3", "\n", "self", ".", "image_size", "=", "32", "\n", "self", ".", "num_labels", "=", "10", "\n", "\n", "model", "=", "Sequential", "(", ")", "\n", "\n", "model", ".", "add", "(", "Conv2D", "(", "64", ",", "(", "3", ",", "3", ")", ",", "\n", "input_shape", "=", "(", "32", ",", "32", ",", "3", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "64", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "\n", "model", ".", "add", "(", "Conv2D", "(", "128", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "128", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "\n", "model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "256", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "256", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "10", ")", ")", "\n", "\n", "model", ".", "load_weights", "(", "restore", ")", "\n", "\n", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.CIFARModel.predict": [[121, 123], ["setup_cifar.CIFARModel.model"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "data", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.setup_cifar.load_batch": [[46, 59], ["open().read", "range", "numpy.fromstring", "arr[].reshape().transpose", "labels.append", "images.append", "numpy.array", "numpy.array", "open", "numpy.identity", "arr[].reshape"], "function", ["None"], ["", "def", "load_batch", "(", "fpath", ")", ":", "\n", "    ", "f", "=", "open", "(", "fpath", ",", "\"rb\"", ")", ".", "read", "(", ")", "\n", "size", "=", "32", "*", "32", "*", "3", "+", "1", "\n", "labels", "=", "[", "]", "\n", "images", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10000", ")", ":", "\n", "        ", "arr", "=", "np", ".", "fromstring", "(", "f", "[", "i", "*", "size", ":", "(", "i", "+", "1", ")", "*", "size", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "lab", "=", "np", ".", "identity", "(", "10", ")", "[", "arr", "[", "0", "]", "]", "\n", "img", "=", "arr", "[", "1", ":", "]", ".", "reshape", "(", "(", "3", ",", "32", ",", "32", ")", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "\n", "labels", ".", "append", "(", "lab", ")", "\n", "images", ".", "append", "(", "(", "img", "/", "255", ")", "-", ".5", ")", "\n", "", "return", "np", ".", "array", "(", "images", ")", ",", "np", ".", "array", "(", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.train_models.train": [[15, 72], ["keras.models.Sequential", "print", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.optimizers.SGD", "keras.models.Sequential.compile", "keras.models.Sequential.fit", "numpy.concatenate", "numpy.concatenate", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dense", "keras.models.Sequential.load_weights", "tensorflow.nn.softmax_cross_entropy_with_logits", "keras.models.Sequential.save"], "function", ["None"], ["def", "train", "(", "data", ",", "file_name", ",", "params", ",", "num_epochs", "=", "50", ",", "batch_size", "=", "128", ",", "train_temp", "=", "1", ",", "init", "=", "None", ",", "\n", "adversarial", "=", "False", ",", "examples", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Standard neural network training procedure.\n    \"\"\"", "\n", "if", "adversarial", ":", "\n", "        ", "data", ".", "train_data", "=", "np", ".", "concatenate", "(", "(", "data", ".", "train_data", ",", "examples", ")", ",", "axis", "=", "0", ")", "\n", "data", ".", "train_labels", "=", "np", ".", "concatenate", "(", "(", "data", ".", "train_labels", ",", "labels", ")", ",", "axis", "=", "0", ")", "\n", "", "model", "=", "Sequential", "(", ")", "\n", "\n", "print", "(", "data", ".", "train_data", ".", "shape", ")", "\n", "\n", "model", ".", "add", "(", "Conv2D", "(", "params", "[", "0", "]", ",", "(", "3", ",", "3", ")", ",", "\n", "input_shape", "=", "data", ".", "train_data", ".", "shape", "[", "1", ":", "]", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "params", "[", "1", "]", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "\n", "model", ".", "add", "(", "Conv2D", "(", "params", "[", "2", "]", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "params", "[", "3", "]", ",", "(", "3", ",", "3", ")", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "\n", "model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "params", "[", "4", "]", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.5", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "params", "[", "5", "]", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "10", ")", ")", "\n", "\n", "if", "init", "!=", "None", ":", "\n", "        ", "model", ".", "load_weights", "(", "init", ")", "\n", "\n", "", "def", "fn", "(", "correct", ",", "predicted", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "labels", "=", "correct", ",", "\n", "logits", "=", "predicted", "/", "train_temp", ")", "\n", "\n", "", "sgd", "=", "SGD", "(", "lr", "=", "0.01", ",", "decay", "=", "1e-6", ",", "momentum", "=", "0.9", ",", "nesterov", "=", "True", ")", "\n", "\n", "model", ".", "compile", "(", "loss", "=", "fn", ",", "\n", "optimizer", "=", "sgd", ",", "\n", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "\n", "model", ".", "fit", "(", "data", ".", "train_data", ",", "data", ".", "train_labels", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "validation_data", "=", "(", "data", ".", "validation_data", ",", "data", ".", "validation_labels", ")", ",", "\n", "nb_epoch", "=", "num_epochs", ",", "\n", "shuffle", "=", "True", ")", "\n", "\n", "\n", "if", "file_name", "!=", "None", ":", "\n", "        ", "model", ".", "save", "(", "file_name", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.train_models.main": [[74, 83], ["os.path.isdir", "os.makedirs", "train_models.train", "train_models.train", "setup_mnist.MNIST", "setup_cifar.CIFAR"], "function", ["home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.train_models.train", "home.repos.pwc.inspect_result.LinLabNEU_Blackbox_ADMM.None.train_models.train"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isdir", "(", "'models'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'models'", ")", "\n", "\n", "\n", "", "if", "args", "[", "'dataset'", "]", "==", "\"mnist\"", "or", "args", "[", "'dataset'", "]", "==", "\"all\"", ":", "\n", "            ", "train", "(", "MNIST", "(", ")", ",", "\"models/mnist\"", ",", "[", "32", ",", "32", ",", "64", ",", "64", ",", "200", ",", "200", "]", ",", "num_epochs", "=", "50", ")", "\n", "", "if", "args", "[", "'dataset'", "]", "==", "'cifar'", "or", "args", "[", "'dataset'", "]", "==", "'all'", ":", "\n", "            ", "train", "(", "CIFAR", "(", ")", ",", "\"models/cifar\"", ",", "[", "64", ",", "64", ",", "128", ",", "128", ",", "256", ",", "256", "]", ",", "num_epochs", "=", "50", ")", "\n", "\n"]]}