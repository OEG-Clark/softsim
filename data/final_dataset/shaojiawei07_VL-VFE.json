{"home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.gamma_layer.__init__": [[55, 61], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "VL_VFE_CIFAR.gamma_layer.H.data.normal_", "VL_VFE_CIFAR.gamma_layer.b.data.normal_", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channel", ",", "output_channel", ")", ":", "\n", "        ", "super", "(", "gamma_layer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "H", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "output_channel", ",", "input_channel", ")", ")", "\n", "self", ".", "b", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "output_channel", ")", ")", "\n", "self", ".", "H", ".", "data", ".", "normal_", "(", "0", ",", "0.1", ")", "\n", "self", ".", "b", ".", "data", ".", "normal_", "(", "0", ",", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.gamma_layer.forward": [[62, 66], ["torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.linear", "torch.linear", "torch.linear", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "H", "=", "torch", ".", "abs", "(", "self", ".", "H", ")", "\n", "x", "=", "F", ".", "linear", "(", "x", ",", "H", ")", "\n", "return", "torch", ".", "tanh", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.gamma_function.__init__": [[69, 75], ["torch.Module.__init__", "VL_VFE_CIFAR.gamma_layer", "VL_VFE_CIFAR.gamma_layer", "VL_VFE_CIFAR.gamma_layer", "VL_VFE_CIFAR.gamma_layer"], "methods", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "gamma_function", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "f1", "=", "gamma_layer", "(", "1", ",", "16", ")", "\n", "self", ".", "f2", "=", "gamma_layer", "(", "16", ",", "16", ")", "\n", "self", ".", "f3", "=", "gamma_layer", "(", "16", ",", "16", ")", "\n", "self", ".", "f4", "=", "gamma_layer", "(", "16", ",", "args", ".", "intermediate_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.gamma_function.forward": [[76, 82], ["VL_VFE_CIFAR.gamma_function.f1", "VL_VFE_CIFAR.gamma_function.f2", "VL_VFE_CIFAR.gamma_function.f3", "VL_VFE_CIFAR.gamma_function.f4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "f1", "(", "x", ")", "\n", "x", "=", "self", ".", "f2", "(", "x", ")", "\n", "x", "=", "self", ".", "f3", "(", "x", ")", "\n", "x", "=", "self", ".", "f4", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.Flatten.forward": [[84, 85], ["x.view", "x.size", "x.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.Mul.__init__": [[87, 90], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "weight", "\n", "", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.Mul.__call__": [[90, 92], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "*", "self", ".", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.Net.__init__": [[94, 190], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "VL_VFE_CIFAR.Net.encoder3_weight.data.normal_", "VL_VFE_CIFAR.Net.encoder3_bias.data.normal_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Tanh", "torch.Tanh", "torch.Tanh", "gamma_function().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "VL_VFE_CIFAR.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "VL_VFE_CIFAR.Mul", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "VL_VFE_CIFAR.gamma_function", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "hidden_channel", "=", "args", ".", "intermediate_dim", "\n", "\n", "self", ".", "prep", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "ceil_mode", "=", "False", ")", "\n", ")", "\n", "self", ".", "layer1_res", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", ")", "\n", "self", ".", "layer3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "ceil_mode", "=", "False", ")", "\n", ")", "\n", "self", ".", "layer3_res", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "classifier1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "ceil_mode", "=", "False", ")", ",", "\n", "Flatten", "(", ")", "\n", ")", "\n", "self", ".", "classifier2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", ",", "10", ",", "bias", "=", "False", ")", ",", "\n", "Mul", "(", "0.125", ")", "\n", ")", "\n", "\n", "self", ".", "encoder1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "encoder2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "64", ",", "64", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "self", ".", "encoder3_weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "hidden_channel", ",", "64", ")", ")", "\n", "self", ".", "encoder3_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "hidden_channel", ")", ")", "\n", "self", ".", "encoder3_weight", ".", "data", ".", "normal_", "(", "0", ",", "0.5", ")", "\n", "self", ".", "encoder3_bias", ".", "data", ".", "normal_", "(", "0", ",", "0.1", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Linear", "(", "self", ".", "hidden_channel", ",", "64", ")", "\n", "self", ".", "decoder1_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "64", ",", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "decoder1_2_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "16", ",", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "16", ",", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "decoder1_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "64", "+", "16", ",", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "decoder2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "Tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "self", ".", "gamma_mu", "=", "gamma_function", "(", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "upper_tri_matrix", "=", "torch", ".", "triu", "(", "torch", ".", "ones", "(", "(", "args", ".", "intermediate_dim", ",", "args", ".", "intermediate_dim", ")", ")", ")", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.Net.forward": [[191, 254], ["VL_VFE_CIFAR.Net.prep", "VL_VFE_CIFAR.Net.layer1", "VL_VFE_CIFAR.Net.layer1_res", "VL_VFE_CIFAR.Net.layer2", "VL_VFE_CIFAR.Net.layer3", "VL_VFE_CIFAR.Net.encoder1", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "channel_noise.to.to.to", "VL_VFE_CIFAR.Net.encoder2", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "l2_norm_squared.pow", "torch.linear", "torch.linear", "torch.linear", "VL_VFE_CIFAR.Net.gamma_mu", "torch.linear", "torch.linear", "torch.linear", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "VL_VFE_CIFAR.Net.KL_log_uniform", "torch.relu", "torch.relu", "torch.relu", "VL_VFE_CIFAR.Net.decoder1_2", "VL_VFE_CIFAR.Net.decoder1_2_2", "noise_feature.expand.expand.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "VL_VFE_CIFAR.Net.decoder1_3", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "VL_VFE_CIFAR.Net.decoder2", "VL_VFE_CIFAR.Net.layer3_res", "VL_VFE_CIFAR.Net.classifier1", "VL_VFE_CIFAR.Net.classifier2", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.tanh.pow", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "VL_VFE_CIFAR.Net.decoder1", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.tanh.detach", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.tanh.detach", "torch.tanh.pow", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.tanh.detach", "torch.tanh.detach", "torch.tanh.detach", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "VL_VFE_CIFAR.Net.get_mask", "VL_VFE_CIFAR.Net.size", "VL_VFE_CIFAR.Net.size", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.tanh.permute", "VL_VFE_CIFAR.Net.get_mask", "VL_VFE_CIFAR.Net.permute"], "methods", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.KL_log_uniform", "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.get_mask", "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.get_mask"], ["", "def", "forward", "(", "self", ",", "x", ",", "epoch", ",", "noise", "=", "0.1", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "prep", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "res", "=", "self", ".", "layer1_res", "(", "x", ")", "\n", "x", "=", "res", "+", "x", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "encoder1", "(", "x", ")", "\n", "x", "=", "torch", ".", "reshape", "(", "x", ",", "(", "x", ".", "size", "(", ")", "[", "0", "]", ",", "4", "*", "4", "*", "4", ")", ")", "\n", "\n", "# Dynamic Channel Conditions", "\n", "if", "self", ".", "training", ":", "\n", "            ", "channel_noise", "=", "torch", ".", "rand", "(", "1", ")", "*", "0.27", "+", "0.05", "\n", "", "else", ":", "\n", "            ", "channel_noise", "=", "torch", ".", "FloatTensor", "(", "[", "1", "]", ")", "*", "noise", "\n", "", "channel_noise", "=", "channel_noise", ".", "to", "(", "device", ")", "\n", "\n", "x", "=", "self", ".", "encoder2", "(", "x", ")", "\n", "x_norm2", "=", "torch", ".", "norm", "(", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "64", "*", "(", "x", ".", "permute", "(", "1", ",", "0", ")", "/", "(", "x_norm2", "+", "1e-6", ")", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "weight3", "=", "F", ".", "tanh", "(", "self", ".", "encoder3_weight", ")", "\n", "bias3", "=", "F", ".", "tanh", "(", "self", ".", "encoder3_bias", ")", "\n", "weight3", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "weight3", ")", ",", "min", "=", "1e-3", ")", "*", "torch", ".", "sign", "(", "weight3", ".", "detach", "(", ")", ")", "\n", "bias3", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "bias3", ")", ",", "min", "=", "1e-3", ")", "*", "torch", ".", "sign", "(", "bias3", ".", "detach", "(", ")", ")", "\n", "l2_norm_squared", "=", "torch", ".", "sum", "(", "weight3", ".", "pow", "(", "2", ")", ",", "dim", "=", "1", ")", "+", "bias3", ".", "pow", "(", "2", ")", "\n", "l2_norm", "=", "l2_norm_squared", ".", "pow", "(", "0.5", ")", "\n", "weight3", "=", "(", "weight3", ".", "permute", "(", "1", ",", "0", ")", "/", "(", "l2_norm", "+", "1e-6", ")", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "bias3", "=", "bias3", "/", "(", "l2_norm", "+", "1e-6", ")", "\n", "x", "=", "F", ".", "linear", "(", "x", ",", "weight3", ",", "bias3", ")", "\n", "\n", "mu", "=", "self", ".", "gamma_mu", "(", "channel_noise", ")", "\n", "mu", "=", "F", ".", "linear", "(", "mu", ",", "self", ".", "upper_tri_matrix", ")", "\n", "mu", "=", "torch", ".", "clamp", "(", "mu", ",", "min", "=", "1e-4", ")", "\n", "encoded_feature", "=", "torch", ".", "tanh", "(", "x", "*", "mu", ")", "\n", "encoded_feature", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "encoded_feature", ")", ",", "min", "=", "1e-2", ")", "*", "torch", ".", "sign", "(", "encoded_feature", ".", "detach", "(", ")", ")", "\n", "\n", "# KL divergence", "\n", "KL", "=", "self", ".", "KL_log_uniform", "(", "channel_noise", ",", "torch", ".", "abs", "(", "encoded_feature", ")", ")", "\n", "\n", "# Gaussian channel noise", "\n", "x", "=", "encoded_feature", "+", "torch", ".", "randn_like", "(", "encoded_feature", ")", "*", "channel_noise", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "if", "epoch", ">", "60", ":", "\n", "                ", "x", "=", "x", "*", "self", ".", "get_mask", "(", "mu", ",", "threshold", "=", "args", ".", "threshold", ")", "\n", "", "", "else", ":", "\n", "            ", "x", "=", "x", "*", "self", ".", "get_mask", "(", "mu", ",", "threshold", "=", "args", ".", "threshold", ")", "\n", "\n", "", "x", "=", "F", ".", "relu", "(", "self", ".", "decoder1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "decoder1_2", "(", "x", ")", "\n", "noise_feature", "=", "self", ".", "decoder1_2_2", "(", "channel_noise", ")", "\n", "noise_feature", "=", "noise_feature", ".", "expand", "(", "x", ".", "size", "(", ")", "[", "0", "]", ",", "16", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "noise_feature", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "decoder1_3", "(", "x", ")", "\n", "x", "=", "torch", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", "4", ",", "4", ",", "4", ")", ")", "\n", "decoded_feature", "=", "self", ".", "decoder2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3_res", "(", "decoded_feature", ")", "\n", "x", "=", "x", "+", "decoded_feature", "\n", "x", "=", "self", ".", "classifier1", "(", "x", ")", "\n", "output", "=", "self", ".", "classifier2", "(", "x", ")", "\n", "\n", "return", "output", ",", "KL", "*", "0.1", "/", "channel_noise", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.Net.KL_log_uniform": [[255, 264], ["alpha.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.softplus", "torch.softplus", "torch.softplus", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "KL_log_uniform", "(", "self", ",", "channel_noise", ",", "encoded_feature", ")", ":", "\n", "\n", "        ", "alpha", "=", "(", "channel_noise", "/", "encoded_feature", ")", "\n", "k1", "=", "0.63576", "\n", "k2", "=", "1.8732", "\n", "k3", "=", "1.48695", "\n", "batch_size", "=", "alpha", ".", "size", "(", "0", ")", "\n", "KL_term", "=", "k1", "*", "F", ".", "sigmoid", "(", "k2", "+", "k3", "*", "2", "*", "torch", ".", "log", "(", "alpha", ")", ")", "-", "0.5", "*", "F", ".", "softplus", "(", "-", "2", "*", "torch", ".", "log", "(", "alpha", ")", ")", "-", "k1", "\n", "return", "-", "torch", ".", "sum", "(", "KL_term", ")", "/", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.Net.get_mask": [[265, 269], ["mu.detach"], "methods", ["None"], ["", "def", "get_mask", "(", "self", ",", "mu", ",", "threshold", "=", "args", ".", "threshold", ")", ":", "\n", "        ", "alpha", "=", "mu", ".", "detach", "(", ")", "\n", "hard_mask", "=", "(", "alpha", ">", "threshold", ")", ".", "float", "(", ")", "\n", "return", "hard_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.Net.get_mask_inference": [[270, 275], ["VL_VFE_CIFAR.Net.gamma_mu", "torch.linear", "torch.linear", "torch.linear"], "methods", ["None"], ["", "def", "get_mask_inference", "(", "self", ",", "channel_noise", ",", "threshold", "=", "args", ".", "threshold", ")", ":", "\n", "        ", "mu", "=", "self", ".", "gamma_mu", "(", "channel_noise", ")", "\n", "alpha", "=", "F", ".", "linear", "(", "mu", ",", "self", ".", "upper_tri_matrix", ")", "\n", "hard_mask", "=", "(", "alpha", ">", "threshold", ")", ".", "float", "(", ")", "\n", "return", "hard_mask", ",", "alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.seed_torch": [[46, 52], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all"], "function", ["None"], ["def", "seed_torch", "(", "seed", "=", "0", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.train": [[280, 328], ["range", "print", "torch.save", "torch.save", "torch.save", "print", "enumerate", "scheduler.step", "VL_VFE_CIFAR.test", "print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "x.to.to", "y.to.to", "model.train", "model", "torch.CrossEntropyLoss", "criterion.to.to", "criterion.to.", "torch.isnan", "torch.isnan", "torch.isnan", "optimizer.zero_grad", "loss.backward", "optimizer.step", "min", "Exception", "copy.deepcopy", "print", "torch.save", "torch.save", "torch.save", "model.state_dict"], "function", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.test", "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.train"], ["def", "train", "(", "model", "=", "model", ")", ":", "\n", "\n", "    ", "test_acc", "=", "0", "\n", "pruned_dim", "=", "0", "\n", "saved_model", "=", "{", "}", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "\n", "        ", "print", "(", "'\\nepoch:{}'", ".", "format", "(", "epoch", ")", ")", "\n", "if", "(", "epoch", ")", "%", "10", "==", "0", ":", "\n", "            ", "data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "4", ",", "pin_memory", "=", "True", ")", "\n", "\n", "", "for", "i", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "            ", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "y", "=", "y", ".", "to", "(", "device", ")", "\n", "model", ".", "train", "(", ")", "\n", "output", ",", "KL", "=", "model", "(", "x", ",", "epoch", ")", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion", "=", "criterion", ".", "to", "(", "device", ")", "\n", "loss1", "=", "criterion", "(", "output", ",", "y", ")", "\n", "if", "epoch", "<=", "20", ":", "\n", "                ", "loss", "=", "loss1", "\n", "", "else", ":", "\n", "                ", "anneal_ratio", "=", "min", "(", "1", ",", "(", "epoch", "-", "20", ")", "/", "20", ")", "\n", "loss", "=", "loss1", "+", "args", ".", "beta", "*", "KL", "*", "anneal_ratio", "\n", "\n", "", "if", "torch", ".", "isnan", "(", "loss", ")", ":", "\n", "                ", "raise", "Exception", "(", "\"NaN value\"", ")", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "scheduler", ".", "step", "(", ")", "\n", "\n", "acc", ",", "pruned_number", "=", "test", "(", "epoch", ",", "noise", "=", "0.1", ")", "\n", "\n", "print", "(", "'Test Accuracy:'", ",", "acc", ",", "'Pruned dim:'", ",", "pruned_number", ",", "'Activated dim:'", ",", "args", ".", "intermediate_dim", "-", "pruned_number", ")", "\n", "\n", "if", "epoch", ">", "180", ":", "\n", "            ", "if", "(", "acc", ">", "test_acc", "and", "pruned_number", "==", "pruned_dim", ")", "or", "pruned_number", ">", "pruned_dim", ":", "\n", "                ", "test_acc", "=", "acc", "\n", "pruned_dim", "=", "pruned_number", "\n", "saved_model", "=", "copy", ".", "deepcopy", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "print", "(", "'Best ckpt:'", ",", "test_acc", ",", "'pruned_number:'", ",", "pruned_dim", ",", "'beta:'", ",", "args", ".", "beta", ")", "\n", "torch", ".", "save", "(", "{", "'model'", ":", "saved_model", "}", ",", "'./CIFAR_best_ckpt_dim:{}_beta:{}_model.pth'", ".", "format", "(", "args", ".", "intermediate_dim", ",", "args", ".", "beta", ")", ")", "\n", "", "", "", "print", "(", "'Best Accuracy:'", ",", "test_acc", ",", "'Intermediate Dim:'", ",", "args", ".", "intermediate_dim", ",", "'Beta:'", ",", "args", ".", "beta", ")", "\n", "torch", ".", "save", "(", "{", "'model'", ":", "saved_model", "}", ",", "'./CIFAR_model_dim:{}_beta:{}_accuracy:{}_model.pth'", ".", "format", "(", "args", ".", "intermediate_dim", "-", "pruned_dim", ",", "args", ".", "beta", ",", "test_acc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.test": [[329, 346], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "model.eval", "enumerate", "model.get_mask_inference", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "images.to.to", "labels.to.to", "model", "labels.to.view", "torch.max", "torch.max", "torch.max", "labels.to.size", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.nonzero().squeeze.size", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.lt", "torch.lt", "torch.lt"], "function", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_CIFAR.Net.get_mask_inference"], ["", "def", "test", "(", "epoch", ",", "noise", "=", "0.1", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "for", "i", ",", "(", "images", ",", "labels", ")", "in", "enumerate", "(", "test_loader_this", ")", ":", "\n", "            ", "images", "=", "images", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "outputs", ",", "_", "=", "model", "(", "images", ",", "epoch", ",", "noise", ")", "\n", "labels_relize", "=", "labels", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "_", ",", "predicted", "=", "torch", ".", "max", "(", "outputs", ".", "data", ",", "1", ")", "\n", "total", "+=", "labels", ".", "size", "(", "0", ")", "\n", "correct", "+=", "(", "predicted", "==", "labels", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "", "hard_mask", ",", "mu", "=", "model", ".", "get_mask_inference", "(", "torch", ".", "FloatTensor", "(", "[", "noise", "]", ")", ".", "to", "(", "device", ")", ")", "\n", "index", "=", "torch", ".", "nonzero", "(", "torch", ".", "lt", "(", "hard_mask", ",", "0.5", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "pruned_number", "=", "index", ".", "size", "(", ")", "[", "0", "]", "\n", "return", "100", "*", "correct", "/", "total", ",", "pruned_number", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.gamma_layer.__init__": [[35, 41], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "VL_VFE_MNIST.gamma_layer.H.data.normal_", "VL_VFE_MNIST.gamma_layer.b.data.normal_", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channel", ",", "output_channel", ")", ":", "\n", "        ", "super", "(", "gamma_layer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "H", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "output_channel", ",", "input_channel", ")", ")", "\n", "self", ".", "b", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "output_channel", ")", ")", "\n", "self", ".", "H", ".", "data", ".", "normal_", "(", "0", ",", "0.1", ")", "\n", "self", ".", "b", ".", "data", ".", "normal_", "(", "0", ",", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.gamma_layer.forward": [[42, 46], ["torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "H", "=", "torch", ".", "abs", "(", "self", ".", "H", ")", "\n", "x", "=", "F", ".", "linear", "(", "x", ",", "H", ")", "\n", "return", "torch", ".", "tanh", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.gamma_function.__init__": [[49, 55], ["torch.Module.__init__", "VL_VFE_MNIST.gamma_layer", "VL_VFE_MNIST.gamma_layer", "VL_VFE_MNIST.gamma_layer", "VL_VFE_MNIST.gamma_layer"], "methods", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "gamma_function", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "f1", "=", "gamma_layer", "(", "1", ",", "16", ")", "\n", "self", ".", "f2", "=", "gamma_layer", "(", "16", ",", "16", ")", "\n", "self", ".", "f3", "=", "gamma_layer", "(", "16", ",", "16", ")", "\n", "self", ".", "f4", "=", "gamma_layer", "(", "16", ",", "args", ".", "intermediate_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.gamma_function.forward": [[56, 62], ["VL_VFE_MNIST.gamma_function.f1", "VL_VFE_MNIST.gamma_function.f2", "VL_VFE_MNIST.gamma_function.f3", "VL_VFE_MNIST.gamma_function.f4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "f1", "(", "x", ")", "\n", "x", "=", "self", ".", "f2", "(", "x", ")", "\n", "x", "=", "self", ".", "f3", "(", "x", ")", "\n", "x", "=", "self", ".", "f4", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.__init__": [[64, 82], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "gamma_function().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.triu().to", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "VL_VFE_MNIST.gamma_function", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.triu", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "784", ",", "args", ".", "intermediate_dim", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "args", ".", "intermediate_dim", ",", "1024", ")", "\n", "self", ".", "fc2_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "1", ",", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "16", ",", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "16", ",", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "1024", "+", "16", ",", "256", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "256", ",", "10", ")", "\n", "self", ".", "gamma_mu", "=", "gamma_function", "(", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "upper_tri_matrix", "=", "torch", ".", "triu", "(", "torch", ".", "ones", "(", "(", "args", ".", "intermediate_dim", ",", "args", ".", "intermediate_dim", ")", ")", ")", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.get_mask": [[83, 86], ["None"], "methods", ["None"], ["", "def", "get_mask", "(", "self", ",", "mu", ",", "threshold", "=", "args", ".", "threshold", ")", ":", "\n", "        ", "hard_mask", "=", "(", "mu", ">", "threshold", ")", ".", "float", "(", ")", "\n", "return", "hard_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.get_mask_test": [[87, 93], ["VL_VFE_MNIST.Net.gamma_mu", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp"], "methods", ["None"], ["", "def", "get_mask_test", "(", "self", ",", "channel_noise", ",", "threshold", "=", "args", ".", "threshold", ")", ":", "\n", "        ", "mu", "=", "self", ".", "gamma_mu", "(", "channel_noise", ")", "\n", "alpha", "=", "F", ".", "linear", "(", "mu", ",", "self", ".", "upper_tri_matrix", ")", "\n", "mu", "=", "torch", ".", "clamp", "(", "mu", ",", "min", "=", "1e-4", ")", "\n", "hard_mask", "=", "(", "alpha", ">", "threshold", ")", ".", "float", "(", ")", "\n", "return", "hard_mask", ",", "alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.forward": [[94, 140], ["VL_VFE_MNIST.Net.view", "l2_norm_squared.pow", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "channel_noise.to.to.to", "VL_VFE_MNIST.Net.fc2_2", "noise_feature.expand.expand.expand", "VL_VFE_MNIST.Net.gamma_mu", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.linear", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "VL_VFE_MNIST.Net.KL_log_uniform", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "VL_VFE_MNIST.Net.fc4", "int", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "bias.pow", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "torch.bernoulli", "VL_VFE_MNIST.Net.fc2", "VL_VFE_MNIST.Net.fc3", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "weight.pow", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "VL_VFE_MNIST.Net.size", "VL_VFE_MNIST.Net.get_mask", "VL_VFE_MNIST.Net.nelement", "weight.permute", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "VL_VFE_MNIST.Net.pow", "VL_VFE_MNIST.Net.get_mask", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "VL_VFE_MNIST.Net.get_mask"], "methods", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.KL_log_uniform", "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.get_mask", "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.get_mask", "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.get_mask"], ["", "def", "forward", "(", "self", ",", "x", ",", "args", ",", "noise", "=", "0.2", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "-", "1", ",", "int", "(", "x", ".", "nelement", "(", ")", "/", "x", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "weight", "=", "self", ".", "fc1", ".", "weight", "\n", "bias", "=", "self", ".", "fc1", ".", "bias", "\n", "l2_norm_squared", "=", "torch", ".", "sum", "(", "weight", ".", "pow", "(", "2", ")", ",", "dim", "=", "1", ")", "+", "bias", ".", "pow", "(", "2", ")", "\n", "l2_norm", "=", "l2_norm_squared", ".", "pow", "(", "0.5", ")", "\n", "fc1_weight", "=", "(", "weight", ".", "permute", "(", "1", ",", "0", ")", "/", "l2_norm", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "fc1_bias", "=", "bias", "/", "l2_norm", "\n", "x", "=", "F", ".", "linear", "(", "x", ",", "fc1_weight", ",", "fc1_bias", ")", "\n", "\n", "# Dynamic Channel Conditions", "\n", "if", "self", ".", "training", ":", "\n", "#b = torch.bernoulli(1/7.0*torch.ones(1))", "\n", "            ", "b", "=", "torch", ".", "bernoulli", "(", "1", "/", "5.0", "*", "torch", ".", "ones", "(", "1", ")", ")", "\n", "if", "b", ">", "0.5", ":", "\n", "                ", "channel_noise", "=", "torch", ".", "ones", "(", "1", ")", "*", "0.3162", "\n", "", "else", ":", "\n", "                ", "channel_noise", "=", "torch", ".", "rand", "(", "1", ")", "*", "0.27", "+", "0.05", "\n", "#channel_noise = torch.rand(1)*0.27 + 0.05", "\n", "", "", "else", ":", "\n", "            ", "channel_noise", "=", "torch", ".", "FloatTensor", "(", "[", "1", "]", ")", "*", "noise", "\n", "", "channel_noise", "=", "channel_noise", ".", "to", "(", "device", ")", "\n", "noise_feature", "=", "self", ".", "fc2_2", "(", "channel_noise", ")", "\n", "noise_feature", "=", "noise_feature", ".", "expand", "(", "x", ".", "size", "(", ")", "[", "0", "]", ",", "16", ")", "\n", "mu", "=", "self", ".", "gamma_mu", "(", "channel_noise", ")", "\n", "mu", "=", "F", ".", "linear", "(", "mu", ",", "self", ".", "upper_tri_matrix", ")", "\n", "mu", "=", "torch", ".", "clamp", "(", "mu", ",", "min", "=", "1e-4", ")", "\n", "x", "=", "torch", ".", "tanh", "(", "mu", "*", "x", ")", "\n", "KL", "=", "self", ".", "KL_log_uniform", "(", "channel_noise", "**", "2", "/", "(", "x", ".", "pow", "(", "2", ")", "+", "1e-4", ")", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "x", "=", "(", "x", "*", "self", ".", "get_mask", "(", "mu", ")", "-", "x", ")", ".", "detach", "(", ")", "+", "x", "\n", "# Gaussian channel noise", "\n", "x", "=", "x", "+", "torch", ".", "randn_like", "(", "x", ")", "*", "channel_noise", "*", "self", ".", "get_mask", "(", "mu", ")", "\n", "", "else", ":", "\n", "# Gaussian channel noise", "\n", "            ", "x", "=", "x", "+", "torch", ".", "randn_like", "(", "x", ")", "*", "channel_noise", "\n", "x", "=", "x", "*", "self", ".", "get_mask", "(", "mu", ")", "\n", "\n", "", "x", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "noise_feature", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc3", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "fc4", "(", "x", ")", "\n", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", ",", "KL", "*", "(", "0.1", "/", "channel_noise", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.KL_log_uniform": [[141, 149], ["alpha_squared.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.softplus", "torch.softplus", "torch.softplus", "torch.softplus", "torch.softplus", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "KL_log_uniform", "(", "self", ",", "alpha_squared", ")", ":", "\n", "        ", "k1", "=", "0.63576", "\n", "k2", "=", "1.8732", "\n", "k3", "=", "1.48695", "\n", "batch_size", "=", "alpha_squared", ".", "size", "(", "0", ")", "\n", "KL_term", "=", "k1", "*", "F", ".", "sigmoid", "(", "k2", "+", "k3", "*", "torch", ".", "log", "(", "alpha_squared", ")", ")", "-", "0.5", "*", "F", ".", "softplus", "(", "-", "1", "*", "torch", ".", "log", "(", "alpha_squared", ")", ")", "-", "k1", "\n", "\n", "return", "-", "torch", ".", "sum", "(", "KL_term", ")", "/", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.seed_torch": [[27, 33], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all"], "function", ["None"], ["def", "seed_torch", "(", "seed", "=", "0", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.train": [[150, 164], ["model.train", "enumerate", "optimizer.zero_grad", "model", "F.nll_loss.backward", "optimizer.step", "data.to", "target.to", "torch.nll_loss", "min", "torch.nll_loss"], "function", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.train"], ["", "", "def", "train", "(", "args", ",", "model", ",", "device", ",", "train_loader", ",", "optimizer", ",", "epoch", ")", ":", "\n", "\n", "    ", "model", ".", "train", "(", ")", "\n", "for", "batch_idx", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "KL", "=", "model", "(", "data", ",", "args", ")", "\n", "if", "epoch", "<=", "5", ":", "\n", "          ", "loss", "=", "F", ".", "nll_loss", "(", "output", ",", "target", ")", "\n", "", "else", ":", "\n", "          ", "anneal_ratio", "=", "min", "(", "1", ",", "(", "epoch", "-", "5", ")", "/", "10", ")", "\n", "loss", "=", "F", ".", "nll_loss", "(", "output", ",", "target", ")", "+", "args", ".", "beta", "*", "KL", "*", "anneal_ratio", "\n", "", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.test": [[165, 183], ["model.eval", "len", "model.get_mask_test", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.nonzero().squeeze.size", "model", "torch.nll_loss().item", "output.argmax", "output.argmax.eq().sum().item", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "len", "data.to", "target.to", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.lt", "torch.lt", "torch.lt", "torch.lt", "torch.lt", "torch.nll_loss", "output.argmax.eq().sum", "output.argmax.eq", "target.view_as"], "function", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.Net.get_mask_test"], ["", "", "def", "test", "(", "args", ",", "model", ",", "device", ",", "test_loader", ",", "noise", "=", "0.2", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "target", "in", "test_loader", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "output", ",", "KL", "=", "model", "(", "data", ",", "args", ",", "noise", "=", "noise", ")", "\n", "test_loss", "+=", "F", ".", "nll_loss", "(", "output", ",", "target", ",", "reduction", "=", "'sum'", ")", ".", "item", "(", ")", "\n", "pred", "=", "output", ".", "argmax", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "correct", "+=", "pred", ".", "eq", "(", "target", ".", "view_as", "(", "pred", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "", "", "test_loss", "/=", "len", "(", "test_loader", ".", "dataset", ")", "\n", "hard_mask", ",", "mu", "=", "model", ".", "get_mask_test", "(", "torch", ".", "FloatTensor", "(", "[", "noise", "]", ")", ".", "to", "(", "device", ")", ")", "\n", "index", "=", "torch", ".", "nonzero", "(", "torch", ".", "lt", "(", "hard_mask", ",", "0.5", ")", ")", ".", "squeeze", "(", "1", ")", "\n", "pruned_number", "=", "index", ".", "size", "(", ")", "[", "0", "]", "\n", "\n", "return", "100.", "*", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", ",", "pruned_number", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.main_train": [[185, 228], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "Net().to", "torch.Adam", "torch.optim.lr_scheduler.StepLR", "range", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torchvision.datasets.MNIST", "Net().to.parameters", "print", "VL_VFE_MNIST.train", "torch.optim.lr_scheduler.StepLR.step", "range", "print", "VL_VFE_MNIST.Net", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "VL_VFE_MNIST.test", "torchvision.transforms.Compose", "torchvision.datasets.MNIST", "copy.deepcopy", "Net().to.state_dict", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.train", "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.test"], ["", "def", "main_train", "(", ")", ":", "\n", "    ", "kwargs", "=", "{", "'num_workers'", ":", "1", ",", "'pin_memory'", ":", "True", "}", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "datasets", ".", "MNIST", "(", "'./data'", ",", "train", "=", "False", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "shuffle", "=", "True", ",", "**", "kwargs", ")", "\n", "\n", "model", "=", "Net", "(", "args", ")", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "5e-5", ")", "\n", "scheduler", "=", "StepLR", "(", "optimizer", ",", "step_size", "=", "45", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "\n", "test_acc", "=", "0", "\n", "pruned_dim", "=", "0", "\n", "saved_model", "=", "{", "}", "\n", "\n", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "epochs", "+", "1", ")", ":", "\n", "        ", "if", "epoch", "%", "10", "==", "1", ":", "\n", "            ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "MNIST", "(", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "**", "kwargs", ")", "\n", "", "print", "(", "'\\nepoch:'", ",", "epoch", ")", "\n", "train", "(", "args", ",", "model", ",", "device", ",", "train_loader", ",", "optimizer", ",", "epoch", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "accuracy", "=", "0", "\n", "t", "=", "5", "\n", "for", "i", "in", "range", "(", "t", ")", ":", "\n", "            ", "acc", ",", "pruned_number", "=", "test", "(", "args", ",", "model", ",", "device", ",", "test_loader", ",", "args", ".", "channel_noise", ")", "\n", "accuracy", "+=", "acc", "\n", "", "print", "(", "'Test Accuracy:'", ",", "accuracy", "/", "t", ",", "'Pruned dim'", ",", "pruned_number", ",", "'Activated dim:'", ",", "args", ".", "intermediate_dim", "-", "pruned_number", ")", "\n", "accuracy", "=", "accuracy", "/", "t", "\n", "\n", "if", "epoch", ">", "300", ":", "\n", "            ", "if", "(", "accuracy", ">", "test_acc", "and", "pruned_number", "==", "pruned_dim", ")", "or", "pruned_number", ">", "pruned_dim", ":", "\n", "                ", "test_acc", "=", "accuracy", "\n", "pruned_dim", "=", "pruned_number", "\n", "saved_model", "=", "copy", ".", "deepcopy", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "", "", "", "print", "(", "'Best Accuray:'", ",", "test_acc", ",", "'pruned_number:'", ",", "pruned_dim", ",", "'activated_dim:'", ",", "args", ".", "intermediate_dim", "-", "pruned_dim", ")", "\n", "torch", ".", "save", "(", "{", "'model'", ":", "saved_model", "}", ",", "'./MNIST_model_dim:{}_beta:{}_accuracy:{:.4f}_model.pth'", ".", "format", "(", "args", ".", "intermediate_dim", "-", "pruned_dim", ",", "args", ".", "beta", ",", "test_acc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.main_test": [[229, 247], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "Net().to", "Net().to.load_state_dict", "range", "print", "torchvision.datasets.MNIST", "VL_VFE_MNIST.test", "VL_VFE_MNIST.Net", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["home.repos.pwc.inspect_result.shaojiawei07_VL-VFE.None.VL_VFE_MNIST.test"], ["", "def", "main_test", "(", ")", ":", "\n", "    ", "kwargs", "=", "{", "'num_workers'", ":", "1", ",", "'pin_memory'", ":", "True", "}", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "MNIST", "(", "'./data'", ",", "train", "=", "False", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "shuffle", "=", "True", ",", "**", "kwargs", ")", "\n", "\n", "model", "=", "Net", "(", "args", ")", ".", "to", "(", "device", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "weights", ")", "[", "'model'", "]", ")", "\n", "\n", "accuracy", "=", "0", "\n", "t", "=", "20", "\n", "for", "i", "in", "range", "(", "t", ")", ":", "\n", "        ", "acc", ",", "pruned_dim", "=", "test", "(", "args", ",", "model", ",", "device", ",", "test_loader", ",", "args", ".", "channel_noise", ")", "\n", "accuracy", "+=", "acc", "\n", "", "print", "(", "'Noise level:'", ",", "args", ".", "channel_noise", ",", "'Test Accuracy:'", ",", "accuracy", "/", "t", ",", "'Pruned dim:'", ",", "pruned_dim", ",", "'Activated dim:'", ",", "args", ".", "intermediate_dim", "-", "pruned_dim", ")", "\n", "\n"]]}