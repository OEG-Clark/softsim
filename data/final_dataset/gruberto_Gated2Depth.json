{"home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu": [[10, 12], ["tensorflow.maximum"], "function", ["None"], ["def", "lrelu", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "x", "*", "0.2", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.upsample_and_concat": [[14, 23], ["tensorflow.Variable", "tensorflow.nn.conv2d_transpose", "tensorflow.concat", "tf.concat.set_shape", "tensorflow.truncated_normal", "tensorflow.shape"], "function", ["None"], ["", "def", "upsample_and_concat", "(", "x1", ",", "x2", ",", "output_channels", ",", "in_channels", ")", ":", "\n", "    ", "pool_size", "=", "2", "\n", "deconv_filter", "=", "tf", ".", "Variable", "(", "tf", ".", "truncated_normal", "(", "[", "pool_size", ",", "pool_size", ",", "output_channels", ",", "in_channels", "]", ",", "stddev", "=", "0.02", ")", ")", "\n", "deconv", "=", "tf", ".", "nn", ".", "conv2d_transpose", "(", "x1", ",", "deconv_filter", ",", "tf", ".", "shape", "(", "x2", ")", ",", "strides", "=", "[", "1", ",", "pool_size", ",", "pool_size", ",", "1", "]", ")", "\n", "\n", "deconv_output", "=", "tf", ".", "concat", "(", "[", "deconv", ",", "x2", "]", ",", "3", ")", "\n", "deconv_output", ".", "set_shape", "(", "[", "None", ",", "None", ",", "None", ",", "output_channels", "*", "2", "]", ")", "\n", "\n", "return", "deconv_output", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.build_unet": [[25, 66], ["tensorflow.variable_scope", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.max_pool2d", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.max_pool2d", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.max_pool2d", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.max_pool2d", "tensorflow.conv2d", "tensorflow.conv2d", "unet.upsample_and_concat", "tensorflow.conv2d", "tensorflow.conv2d", "unet.upsample_and_concat", "tensorflow.conv2d", "tensorflow.conv2d", "unet.upsample_and_concat", "tensorflow.conv2d", "tensorflow.conv2d", "unet.upsample_and_concat", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.conv2d"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.upsample_and_concat", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.upsample_and_concat", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.upsample_and_concat", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.upsample_and_concat"], ["", "def", "build_unet", "(", "input_img", ")", ":", "\n", "    ", "pool_size", "=", "2", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'unet'", ")", ":", "\n", "        ", "conv1", "=", "slim", ".", "conv2d", "(", "input_img", ",", "32", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv1_1'", ")", "\n", "conv1", "=", "slim", ".", "conv2d", "(", "conv1", ",", "32", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv1_2'", ")", "\n", "pool1", "=", "slim", ".", "max_pool2d", "(", "conv1", ",", "[", "pool_size", ",", "pool_size", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "conv2", "=", "slim", ".", "conv2d", "(", "pool1", ",", "64", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv2_1'", ")", "\n", "conv2", "=", "slim", ".", "conv2d", "(", "conv2", ",", "64", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv2_2'", ")", "\n", "pool2", "=", "slim", ".", "max_pool2d", "(", "conv2", ",", "[", "pool_size", ",", "pool_size", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "conv3", "=", "slim", ".", "conv2d", "(", "pool2", ",", "128", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv3_1'", ")", "\n", "conv3", "=", "slim", ".", "conv2d", "(", "conv3", ",", "128", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv3_2'", ")", "\n", "pool3", "=", "slim", ".", "max_pool2d", "(", "conv3", ",", "[", "pool_size", ",", "pool_size", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "conv4", "=", "slim", ".", "conv2d", "(", "pool3", ",", "256", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv4_1'", ")", "\n", "conv4", "=", "slim", ".", "conv2d", "(", "conv4", ",", "256", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv4_2'", ")", "\n", "pool4", "=", "slim", ".", "max_pool2d", "(", "conv4", ",", "[", "pool_size", ",", "pool_size", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "conv5", "=", "slim", ".", "conv2d", "(", "pool4", ",", "512", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv5_1'", ")", "\n", "conv5", "=", "slim", ".", "conv2d", "(", "conv5", ",", "512", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv5_2'", ")", "\n", "\n", "up6", "=", "upsample_and_concat", "(", "conv5", ",", "conv4", ",", "256", ",", "512", ")", "\n", "conv6", "=", "slim", ".", "conv2d", "(", "up6", ",", "256", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv6_1'", ")", "\n", "conv6", "=", "slim", ".", "conv2d", "(", "conv6", ",", "256", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv6_2'", ")", "\n", "\n", "up7", "=", "upsample_and_concat", "(", "conv6", ",", "conv3", ",", "128", ",", "256", ")", "\n", "conv7", "=", "slim", ".", "conv2d", "(", "up7", ",", "128", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv7_1'", ")", "\n", "conv7", "=", "slim", ".", "conv2d", "(", "conv7", ",", "128", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv7_2'", ")", "\n", "\n", "up8", "=", "upsample_and_concat", "(", "conv7", ",", "conv2", ",", "64", ",", "128", ")", "\n", "conv8", "=", "slim", ".", "conv2d", "(", "up8", ",", "64", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv8_1'", ")", "\n", "conv8", "=", "slim", ".", "conv2d", "(", "conv8", ",", "64", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv8_2'", ")", "\n", "\n", "up9", "=", "upsample_and_concat", "(", "conv8", ",", "conv1", ",", "32", ",", "64", ")", "\n", "conv9", "=", "slim", ".", "conv2d", "(", "up9", ",", "32", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv9_1'", ")", "\n", "conv9", "=", "slim", ".", "conv2d", "(", "conv9", ",", "32", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "lrelu", ",", "scope", "=", "'g_conv9_2'", ")", "\n", "\n", "out", "=", "slim", ".", "conv2d", "(", "conv9", ",", "1", ",", "[", "1", ",", "1", "]", ",", "rate", "=", "1", ",", "activation_fn", "=", "None", ",", "scope", "=", "'g_conv10'", ")", "\n", "", "return", "out", ",", "up8", ",", "up7", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.upsample_and_concat3d": [[68, 77], ["tensorflow.Variable", "tensorflow.nn.conv3d_transpose", "tensorflow.concat", "tf.concat.set_shape", "tensorflow.truncated_normal", "tensorflow.shape"], "function", ["None"], ["", "def", "upsample_and_concat3d", "(", "x1", ",", "x2", ",", "output_channels", ",", "in_channels", ")", ":", "\n", "    ", "pool_size", "=", "2", "\n", "deconv_filter", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "truncated_normal", "(", "[", "1", ",", "pool_size", ",", "pool_size", ",", "output_channels", ",", "in_channels", "]", ",", "stddev", "=", "0.02", ")", ")", "\n", "deconv", "=", "tf", ".", "nn", ".", "conv3d_transpose", "(", "x1", ",", "deconv_filter", ",", "tf", ".", "shape", "(", "x2", ")", ",", "strides", "=", "[", "1", ",", "1", ",", "pool_size", ",", "pool_size", ",", "1", "]", ")", "\n", "deconv_output", "=", "tf", ".", "concat", "(", "[", "deconv", ",", "x2", "]", ",", "4", ")", "\n", "deconv_output", ".", "set_shape", "(", "[", "None", ",", "1", ",", "None", ",", "None", ",", "output_channels", "*", "2", "]", ")", "\n", "\n", "return", "deconv_output", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable": [[79, 82], ["tensorflow.get_variable", "tensorflow.contrib.layers.xavier_initializer"], "function", ["None"], ["", "def", "_variable", "(", "name", ",", "shape", ")", ":", "\n", "    ", "var", "=", "tf", ".", "get_variable", "(", "name", ",", "shape", ",", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", "\n", "return", "var", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.conv3d": [[84, 86], ["tensorflow.nn.bias_add", "tensorflow.nn.conv3d"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.conv3d"], ["", "def", "conv3d", "(", "l_input", ",", "w", ",", "b", ",", "name", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "bias_add", "(", "tf", ".", "nn", ".", "conv3d", "(", "l_input", ",", "w", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ",", "name", "=", "name", ")", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d": [[88, 90], ["unet.lrelu", "unet.conv3d"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.conv3d"], ["", "def", "lrelu_conv3d", "(", "l_input", ",", "w", ",", "b", ",", "name", ")", ":", "\n", "    ", "return", "lrelu", "(", "conv3d", "(", "l_input", ",", "w", ",", "b", ",", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.max_pool3d": [[92, 94], ["tensorflow.nn.max_pool3d"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.max_pool3d"], ["", "def", "max_pool3d", "(", "l_input", ",", "k", ",", "name", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "max_pool3d", "(", "l_input", ",", "ksize", "=", "[", "1", ",", "k", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "k", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'SAME'", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.build_3d_conv_unet": [[96, 158], ["tensorflow.variable_scope", "tensorflow.expand_dims", "unet.lrelu_conv3d", "unet.lrelu_conv3d", "unet.max_pool3d", "unet.lrelu_conv3d", "unet.lrelu_conv3d", "unet.max_pool3d", "unet.lrelu_conv3d", "unet.lrelu_conv3d", "unet.max_pool3d", "unet.lrelu_conv3d", "unet.lrelu_conv3d", "unet.max_pool3d", "unet.lrelu_conv3d", "unet.lrelu_conv3d", "unet.upsample_and_concat3d", "unet.lrelu_conv3d", "unet.lrelu_conv3d", "unet.upsample_and_concat3d", "unet.lrelu_conv3d", "unet.lrelu_conv3d", "unet.upsample_and_concat3d", "unet.lrelu_conv3d", "unet.lrelu_conv3d", "unet.upsample_and_concat3d", "unet.lrelu_conv3d", "unet.lrelu_conv3d", "unet.conv3d", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable", "unet._variable"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.max_pool3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.max_pool3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.max_pool3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.max_pool3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.upsample_and_concat3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.upsample_and_concat3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.upsample_and_concat3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.upsample_and_concat3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.lrelu_conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.conv3d", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet._variable"], ["", "def", "build_3d_conv_unet", "(", "input_img", ")", ":", "\n", "    ", "pool_size", "=", "2", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'unet'", ")", ":", "\n", "        ", "input_img", "=", "tf", ".", "expand_dims", "(", "input_img", ",", "axis", "=", "1", ")", "\n", "\n", "conv1", "=", "lrelu_conv3d", "(", "input_img", ",", "_variable", "(", "'wconv1_1'", ",", "[", "2", ",", "3", ",", "3", ",", "3", ",", "32", "]", ")", ",", "_variable", "(", "'bconv1_1'", ",", "[", "32", "]", ")", ",", "\n", "name", "=", "'g_conv1_1'", ")", "\n", "conv2", "=", "lrelu_conv3d", "(", "conv1", ",", "_variable", "(", "'wconv1_2'", ",", "[", "3", ",", "3", ",", "3", ",", "32", ",", "32", "]", ")", ",", "_variable", "(", "'bconv1_2'", ",", "[", "32", "]", ")", ",", "\n", "name", "=", "'g_conv1_2'", ")", "\n", "pool1", "=", "max_pool3d", "(", "conv2", ",", "1", ",", "name", "=", "'pool1'", ")", "\n", "\n", "conv2", "=", "lrelu_conv3d", "(", "pool1", ",", "_variable", "(", "'wconv2_1'", ",", "[", "3", ",", "3", ",", "3", ",", "32", ",", "64", "]", ")", ",", "_variable", "(", "'bconv2_1'", ",", "[", "64", "]", ")", ",", "\n", "name", "=", "'g_conv2_1'", ")", "\n", "conv2", "=", "lrelu_conv3d", "(", "conv2", ",", "_variable", "(", "'wconv2_2'", ",", "[", "3", ",", "3", ",", "3", ",", "64", ",", "64", "]", ")", ",", "_variable", "(", "'bconv2_2'", ",", "[", "64", "]", ")", ",", "\n", "name", "=", "'g_conv2_2'", ")", "\n", "pool2", "=", "max_pool3d", "(", "conv2", ",", "1", ",", "name", "=", "'pool2'", ")", "\n", "\n", "conv3", "=", "lrelu_conv3d", "(", "pool2", ",", "_variable", "(", "'wconv3_1'", ",", "[", "3", ",", "3", ",", "3", ",", "64", ",", "128", "]", ")", ",", "_variable", "(", "'bconv3_1'", ",", "[", "128", "]", ")", ",", "\n", "name", "=", "'g_conv3_1'", ")", "\n", "conv3", "=", "lrelu_conv3d", "(", "conv3", ",", "_variable", "(", "'wconv3_2'", ",", "[", "3", ",", "3", ",", "3", ",", "128", ",", "128", "]", ")", ",", "_variable", "(", "'bconv3_2'", ",", "[", "128", "]", ")", ",", "\n", "name", "=", "'g_conv3_2'", ")", "\n", "pool3", "=", "max_pool3d", "(", "conv3", ",", "1", ",", "name", "=", "'pool3'", ")", "\n", "\n", "conv4", "=", "lrelu_conv3d", "(", "pool3", ",", "_variable", "(", "'wconv4_1'", ",", "[", "3", ",", "3", ",", "3", ",", "128", ",", "256", "]", ")", ",", "_variable", "(", "'bconv4_1'", ",", "[", "256", "]", ")", ",", "\n", "name", "=", "'g_conv4_1'", ")", "\n", "conv4", "=", "lrelu_conv3d", "(", "conv4", ",", "_variable", "(", "'wconv4_2'", ",", "[", "3", ",", "3", ",", "3", ",", "256", ",", "256", "]", ")", ",", "_variable", "(", "'bconv4_2'", ",", "[", "256", "]", ")", ",", "\n", "name", "=", "'g_conv4_2'", ")", "\n", "pool4", "=", "max_pool3d", "(", "conv4", ",", "1", ",", "name", "=", "'pool4'", ")", "\n", "\n", "conv5", "=", "lrelu_conv3d", "(", "pool4", ",", "_variable", "(", "'wconv5_1'", ",", "[", "3", ",", "3", ",", "3", ",", "256", ",", "512", "]", ")", ",", "_variable", "(", "'bconv5_1'", ",", "[", "512", "]", ")", ",", "\n", "name", "=", "'g_conv5_1'", ")", "\n", "conv5", "=", "lrelu_conv3d", "(", "conv5", ",", "_variable", "(", "'wconv5_2'", ",", "[", "3", ",", "3", ",", "3", ",", "512", ",", "512", "]", ")", ",", "_variable", "(", "'bconv5_2'", ",", "[", "512", "]", ")", ",", "\n", "name", "=", "'g_conv5_2'", ")", "\n", "\n", "up6", "=", "upsample_and_concat3d", "(", "conv5", ",", "conv4", ",", "256", ",", "512", ")", "\n", "conv6", "=", "lrelu_conv3d", "(", "up6", ",", "_variable", "(", "'wconv6_1'", ",", "[", "3", ",", "3", ",", "3", ",", "512", ",", "256", "]", ")", ",", "_variable", "(", "'bconv6_1'", ",", "[", "256", "]", ")", ",", "\n", "name", "=", "'g_conv6_1'", ")", "\n", "conv6", "=", "lrelu_conv3d", "(", "conv6", ",", "_variable", "(", "'wconv6_2'", ",", "[", "3", ",", "3", ",", "3", ",", "256", ",", "256", "]", ")", ",", "_variable", "(", "'bconv6_2'", ",", "[", "256", "]", ")", ",", "\n", "name", "=", "'g_conv6_2'", ")", "\n", "\n", "up7", "=", "upsample_and_concat3d", "(", "conv6", ",", "conv3", ",", "128", ",", "256", ")", "\n", "conv7", "=", "lrelu_conv3d", "(", "up7", ",", "_variable", "(", "'wconv7_1'", ",", "[", "3", ",", "3", ",", "3", ",", "256", ",", "128", "]", ")", ",", "_variable", "(", "'bconv7_1'", ",", "[", "128", "]", ")", ",", "\n", "name", "=", "'g_conv7_1'", ")", "\n", "conv7", "=", "lrelu_conv3d", "(", "conv7", ",", "_variable", "(", "'wconv_2'", ",", "[", "3", ",", "3", ",", "3", ",", "128", ",", "128", "]", ")", ",", "_variable", "(", "'bconv7_2'", ",", "[", "128", "]", ")", ",", "\n", "name", "=", "'g_conv7_2'", ")", "\n", "\n", "up8", "=", "upsample_and_concat3d", "(", "conv7", ",", "conv2", ",", "64", ",", "128", ")", "\n", "conv8", "=", "lrelu_conv3d", "(", "up8", ",", "_variable", "(", "'wconv8_1'", ",", "[", "3", ",", "3", ",", "3", ",", "128", ",", "64", "]", ")", ",", "_variable", "(", "'bconv8_1'", ",", "[", "64", "]", ")", ",", "\n", "name", "=", "'g_conv8_1'", ")", "\n", "conv8", "=", "lrelu_conv3d", "(", "conv8", ",", "_variable", "(", "'wconv8_2'", ",", "[", "3", ",", "3", ",", "3", ",", "64", ",", "64", "]", ")", ",", "_variable", "(", "'bconv8_2'", ",", "[", "64", "]", ")", ",", "\n", "name", "=", "'g_conv8_2'", ")", "\n", "\n", "up9", "=", "upsample_and_concat3d", "(", "conv8", ",", "conv1", ",", "32", ",", "64", ")", "\n", "conv9", "=", "lrelu_conv3d", "(", "up9", ",", "_variable", "(", "'wconv9_1'", ",", "[", "3", ",", "3", ",", "3", ",", "64", ",", "32", "]", ")", ",", "_variable", "(", "'bconv9_1'", ",", "[", "32", "]", ")", ",", "\n", "name", "=", "'g_conv9_1'", ")", "\n", "conv9", "=", "lrelu_conv3d", "(", "conv9", ",", "_variable", "(", "'wconv9_2'", ",", "[", "3", ",", "3", ",", "3", ",", "32", ",", "32", "]", ")", ",", "_variable", "(", "'bconv9_2'", ",", "[", "32", "]", ")", ",", "\n", "name", "=", "'g_conv9_2'", ")", "\n", "\n", "out", "=", "conv3d", "(", "conv9", ",", "_variable", "(", "'wconv10_1'", ",", "[", "3", ",", "3", ",", "3", ",", "32", ",", "1", "]", ")", ",", "_variable", "(", "'bconv10_1'", ",", "[", "1", "]", ")", ",", "name", "=", "'g_conv10'", ")", "\n", "\n", "", "return", "tf", ".", "squeeze", "(", "out", ",", "axis", "=", "1", ")", ",", "tf", ".", "squeeze", "(", "up8", ",", "axis", "=", "1", ")", ",", "tf", ".", "squeeze", "(", "up7", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.network": [[160, 184], ["print", "tensorflow.contrib.layers.conv2d", "tensorflow.contrib.layers.conv2d", "print", "print", "unet.build_3d_conv_unet", "unet.build_unet", "print", "unet.build_3d_conv_unet", "unet.build_unet"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.build_3d_conv_unet", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.build_unet", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.build_3d_conv_unet", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.build_unet"], ["", "def", "network", "(", "input_img", ",", "use_multi_scale", ",", "use_3dconv", "=", "False", ")", ":", "\n", "    ", "if", "use_multi_scale", ":", "\n", "        ", "print", "(", "'Using mult-scale'", ")", "\n", "if", "use_3dconv", ":", "\n", "            ", "print", "(", "'Using 3D convs'", ")", "\n", "out", ",", "conv8", ",", "conv7", "=", "build_3d_conv_unet", "(", "input_img", ")", "\n", "", "else", ":", "\n", "            ", "out", ",", "conv8", ",", "conv7", "=", "build_unet", "(", "input_img", ")", "\n", "", "out2", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "conv8", ",", "1", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "padding", "=", "'SAME'", ",", "\n", "activation_fn", "=", "lrelu", ",", "scope", "=", "'out2'", ",", "biases_initializer", "=", "None", ")", "\n", "out3", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "conv7", ",", "1", ",", "[", "3", ",", "3", "]", ",", "rate", "=", "1", ",", "padding", "=", "'SAME'", ",", "\n", "activation_fn", "=", "lrelu", ",", "scope", "=", "'out3'", ",", "biases_initializer", "=", "None", ")", "\n", "out", "=", "{", "'output'", ":", "out", ",", "'half_scale'", ":", "out2", ",", "'fourth_scale'", ":", "out3", "}", "\n", "return", "out", "\n", "\n", "", "else", ":", "\n", "        ", "print", "(", "'not using multi-scale'", ")", "\n", "if", "use_3dconv", ":", "\n", "            ", "print", "(", "'Using 3D convs'", ")", "\n", "out", ",", "_", ",", "_", "=", "build_3d_conv_unet", "(", "input_img", ")", "\n", "", "else", ":", "\n", "            ", "out", ",", "_", ",", "_", "=", "build_unet", "(", "input_img", ")", "\n", "", "out", "=", "{", "'output'", ":", "out", "}", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.dataset_util.read_gated_image": [[9, 33], ["range", "numpy.concatenate", "numpy.expand_dims", "os.path.join", "cv2.imread", "numpy.float32", "gated_imgs.append", "numpy.mean", "numpy.std", "cv2.resize", "os.path.join", "img.copy.copy", "numpy.expand_dims", "numpy.finfo"], "function", ["None"], ["def", "read_gated_image", "(", "base_dir", ",", "gta_pass", ",", "img_id", ",", "data_type", ",", "num_bits", "=", "10", ",", "scale_images", "=", "False", ",", "\n", "scaled_img_width", "=", "None", ",", "scaled_img_height", "=", "None", ",", "\n", "normalize_images", "=", "False", ")", ":", "\n", "    ", "gated_imgs", "=", "[", "]", "\n", "normalizer", "=", "2", "**", "num_bits", "-", "1.", "\n", "\n", "for", "gate_id", "in", "range", "(", "3", ")", ":", "\n", "        ", "gate_dir", "=", "os", ".", "path", ".", "join", "(", "base_dir", ",", "gta_pass", ",", "'gated%d_10bit'", "%", "gate_id", ")", "\n", "img", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "gate_dir", ",", "img_id", "+", "'.png'", ")", ",", "cv2", ".", "IMREAD_ANYCOLOR", "|", "cv2", ".", "IMREAD_ANYDEPTH", ")", "\n", "if", "data_type", "==", "'real'", ":", "\n", "            ", "img", "=", "img", "[", "crop_size", ":", "(", "img", ".", "shape", "[", "0", "]", "-", "crop_size", ")", ",", "crop_size", ":", "(", "img", ".", "shape", "[", "1", "]", "-", "crop_size", ")", "]", "\n", "img", "=", "img", ".", "copy", "(", ")", "\n", "img", "[", "img", ">", "2", "**", "10", "-", "1", "]", "=", "normalizer", "\n", "", "img", "=", "np", ".", "float32", "(", "img", "/", "normalizer", ")", "\n", "gated_imgs", ".", "append", "(", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", ")", "\n", "\n", "", "img", "=", "np", ".", "concatenate", "(", "gated_imgs", ",", "axis", "=", "2", ")", "\n", "if", "normalize_images", ":", "\n", "        ", "mean", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "2", ",", "keepdims", "=", "True", ")", "\n", "std", "=", "np", ".", "std", "(", "img", ",", "axis", "=", "2", ",", "keepdims", "=", "True", ")", "\n", "img", "=", "(", "img", "-", "mean", ")", "/", "(", "std", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", "\n", "", "if", "scale_images", ":", "\n", "        ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "dsize", "=", "(", "scaled_img_width", ",", "scaled_img_height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_AREA", ")", "\n", "", "return", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.dataset_util.read_gt_image": [[35, 62], ["numpy.float32", "numpy.load", "numpy.clip", "cv2.resize", "numpy.expand_dims", "numpy.load", "numpy.expand_dims", "numpy.expand_dims", "os.path.join", "numpy.expand_dims", "os.path.join", "numpy.clip", "numpy.expand_dims", "numpy.expand_dims"], "function", ["None"], ["", "def", "read_gt_image", "(", "base_dir", ",", "gta_pass", ",", "img_id", ",", "data_type", ",", "min_distance", ",", "max_distance", ",", "scale_images", "=", "False", ",", "\n", "scaled_img_width", "=", "None", ",", "\n", "scaled_img_height", "=", "None", ",", "raw_values_only", "=", "False", ")", ":", "\n", "    ", "if", "data_type", "==", "'real'", ":", "\n", "        ", "depth_lidar1", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "base_dir", ",", "gta_pass", ",", "\"depth_hdl64_gated_compressed\"", ",", "img_id", "+", "'.npz'", ")", ")", "[", "'arr_0'", "]", "\n", "depth_lidar1", "=", "depth_lidar1", "[", "crop_size", ":", "(", "depth_lidar1", ".", "shape", "[", "0", "]", "-", "crop_size", ")", ",", "\n", "crop_size", ":", "(", "depth_lidar1", ".", "shape", "[", "1", "]", "-", "crop_size", ")", "]", "\n", "if", "raw_values_only", ":", "\n", "            ", "return", "depth_lidar1", ",", "None", "\n", "\n", "", "gt_mask", "=", "(", "depth_lidar1", ">", "0.", ")", "\n", "\n", "depth_lidar1", "=", "np", ".", "float32", "(", "np", ".", "clip", "(", "depth_lidar1", ",", "min_distance", ",", "max_distance", ")", "/", "max_distance", ")", "\n", "\n", "return", "np", ".", "expand_dims", "(", "np", ".", "expand_dims", "(", "depth_lidar1", ",", "axis", "=", "2", ")", ",", "axis", "=", "0", ")", ",", "np", ".", "expand_dims", "(", "np", ".", "expand_dims", "(", "gt_mask", ",", "axis", "=", "2", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "img", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "base_dir", ",", "gta_pass", ",", "'depth_compressed'", ",", "img_id", "+", "'.npz'", ")", ")", "[", "'arr_0'", "]", "\n", "\n", "if", "raw_values_only", ":", "\n", "        ", "return", "img", ",", "None", "\n", "\n", "", "img", "=", "np", ".", "clip", "(", "img", ",", "min_distance", ",", "max_distance", ")", "/", "max_distance", "\n", "if", "scale_images", ":", "\n", "        ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "dsize", "=", "(", "scaled_img_width", ",", "scaled_img_height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_AREA", ")", "\n", "\n", "", "return", "np", ".", "expand_dims", "(", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", ",", "axis", "=", "0", ")", ",", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.visualize2D.colorize_pointcloud": [[7, 19], ["matplotlib.colors.Normalize", "matplotlib.ScalarMappable", "numpy.argwhere", "numpy.zeros", "range", "tuple", "cv2.circle", "int", "cm.ScalarMappable.to_rgba"], "function", ["None"], ["def", "colorize_pointcloud", "(", "depth", ",", "min_distance", "=", "3", ",", "max_distance", "=", "80", ",", "radius", "=", "3", ")", ":", "\n", "    ", "norm", "=", "mpl", ".", "colors", ".", "Normalize", "(", "vmin", "=", "min_distance", ",", "vmax", "=", "max_distance", ")", "\n", "cmap", "=", "cm", ".", "jet", "\n", "m", "=", "cm", ".", "ScalarMappable", "(", "norm", "=", "norm", ",", "cmap", "=", "cmap", ")", "\n", "pos", "=", "np", ".", "argwhere", "(", "depth", ">", "0", ")", "\n", "\n", "pointcloud_color", "=", "np", ".", "zeros", "(", "(", "depth", ".", "shape", "[", "0", "]", ",", "depth", ".", "shape", "[", "1", "]", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "i", "in", "range", "(", "pos", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "color", "=", "tuple", "(", "[", "int", "(", "255", "*", "value", ")", "for", "value", "in", "m", ".", "to_rgba", "(", "depth", "[", "pos", "[", "i", ",", "0", "]", ",", "pos", "[", "i", ",", "1", "]", "]", ")", "[", "0", ":", "3", "]", "]", ")", "\n", "cv2", ".", "circle", "(", "pointcloud_color", ",", "(", "pos", "[", "i", ",", "1", "]", ",", "pos", "[", "i", ",", "0", "]", ")", ",", "radius", ",", "(", "color", "[", "0", "]", ",", "color", "[", "1", "]", ",", "color", "[", "2", "]", ")", ",", "-", "1", ")", "\n", "\n", "", "return", "pointcloud_color", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.visualize2D.colorize_depth": [[21, 32], ["matplotlib.colors.Normalize", "matplotlib.ScalarMappable", "numpy.isnan", "cm.ScalarMappable.to_rgba"], "function", ["None"], ["", "def", "colorize_depth", "(", "depth", ",", "min_distance", "=", "3", ",", "max_distance", "=", "80", ")", ":", "\n", "    ", "norm", "=", "mpl", ".", "colors", ".", "Normalize", "(", "vmin", "=", "min_distance", ",", "vmax", "=", "max_distance", ")", "\n", "cmap", "=", "cm", ".", "jet", "\n", "m", "=", "cm", ".", "ScalarMappable", "(", "norm", "=", "norm", ",", "cmap", "=", "cmap", ")", "\n", "\n", "depth_color", "=", "(", "255", "*", "m", ".", "to_rgba", "(", "depth", ")", "[", ":", ",", ":", ",", "0", ":", "3", "]", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "depth_color", "[", "depth", "<=", "0", "]", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "depth_color", "[", "np", ".", "isnan", "(", "depth", ")", "]", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "depth_color", "[", "depth", "==", "np", ".", "inf", "]", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "\n", "return", "depth_color", "", "", ""]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.threshold": [[8, 11], ["numpy.maximum", "numpy.mean"], "function", ["None"], ["def", "threshold", "(", "y1", ",", "y2", ",", "thr", "=", "1.25", ")", ":", "\n", "    ", "max_ratio", "=", "np", ".", "maximum", "(", "y1", "/", "y2", ",", "y2", "/", "y1", ")", "\n", "return", "np", ".", "mean", "(", "max_ratio", "<", "thr", ",", "dtype", "=", "np", ".", "float64", ")", "*", "100.", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.rmse": [[13, 16], ["math.sqrt", "numpy.mean"], "function", ["None"], ["", "def", "rmse", "(", "y1", ",", "y2", ")", ":", "\n", "    ", "diff", "=", "y1", "-", "y2", "\n", "return", "math", ".", "sqrt", "(", "np", ".", "mean", "(", "diff", "*", "diff", ",", "dtype", "=", "np", ".", "float64", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.rmse_log": [[18, 20], ["metrics.rmse", "numpy.log", "numpy.log"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.rmse"], ["", "def", "rmse_log", "(", "y1", ",", "y2", ")", ":", "\n", "    ", "return", "rmse", "(", "np", ".", "log", "(", "y1", ")", ",", "np", ".", "log", "(", "y2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.ard": [[22, 24], ["numpy.mean", "numpy.abs"], "function", ["None"], ["", "def", "ard", "(", "y1", ",", "y2", ")", ":", "\n", "    ", "return", "np", ".", "mean", "(", "np", ".", "abs", "(", "y1", "-", "y2", ")", "/", "y2", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.mae": [[26, 28], ["numpy.mean", "numpy.abs"], "function", ["None"], ["", "def", "mae", "(", "y1", ",", "y2", ")", ":", "\n", "    ", "return", "np", ".", "mean", "(", "np", ".", "abs", "(", "y1", "-", "y2", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.calc_metrics": [[30, 40], ["numpy.clip", "numpy.clip", "metrics.rmse", "metrics.rmse_log", "metrics.ard", "metrics.mae", "metrics.threshold", "metrics.threshold", "metrics.threshold"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.rmse", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.rmse_log", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.ard", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.mae", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.threshold", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.threshold", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.threshold"], ["", "def", "calc_metrics", "(", "output", ",", "groundtruth", ",", "min_distance", "=", "3.", ",", "max_distance", "=", "150.", ")", ":", "\n", "    ", "output", "=", "output", "[", "groundtruth", ">", "0", "]", "\n", "groundtruth", "=", "groundtruth", "[", "groundtruth", ">", "0", "]", "\n", "output", "=", "np", ".", "clip", "(", "output", ",", "min_distance", ",", "max_distance", ")", "\n", "groundtruth", "=", "np", ".", "clip", "(", "groundtruth", ",", "min_distance", ",", "max_distance", ")", "\n", "\n", "return", "rmse", "(", "output", ",", "groundtruth", ")", ",", "rmse_log", "(", "output", ",", "groundtruth", ")", ",", "ard", "(", "output", ",", "groundtruth", ")", ",", "mae", "(", "output", ",", "groundtruth", ")", ",", "threshold", "(", "output", ",", "groundtruth", ",", "thr", "=", "1.25", ")", ",", "threshold", "(", "output", ",", "groundtruth", ",", "thr", "=", "1.25", "**", "2", ")", ",", "threshold", "(", "output", ",", "groundtruth", ",", "thr", "=", "1.25", "**", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.eval.run": [[13, 135], ["tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.train.Saver", "tf.Session.run", "tf.train.Saver.restore", "range", "tensorflow.placeholder", "LSGAN.build_model", "LSGAN.build_model", "tensorflow.global_variables_initializer", "os.path.isdir", "os.makedirs", "len", "dataset_util.read_gated_image", "tf.Session.run", "numpy.clip", "dataset_util.read_gt_image", "numpy.savez_compressed", "visualize2D.colorize_depth", "numpy.zeros", "range", "cv2.imwrite", "cv2.imwrite", "numpy.mean", "range", "print", "os.path.exists", "os.makedirs", "metrics.calc_metrics", "per_image_metrics.append", "os.path.join", "visualize2D.colorize_depth", "visualize2D.colorize_pointcloud", "int", "cv2.resize", "os.path.join", "visualize2D.colorize_depth.astype", "os.path.join", "np.zeros.astype", "plt.imshow", "plt.show", "open", "f.write", "open", "f.write", "f.write", "os.path.join", "os.path.join", "cv2.cvtColor", "os.path.join", "os.path.join", "np.zeros.astype", "int", "int"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.build_model", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.build_model", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.dataset_util.read_gated_image", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.dataset_util.read_gt_image", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.visualize2D.colorize_depth", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.metrics.calc_metrics", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.visualize2D.colorize_depth", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.dataset_tools.load_real.colorize_pointcloud"], ["def", "run", "(", "results_dir", ",", "model_dir", ",", "base_dir", ",", "file_names", ",", "data_type", ",", "use_multi_scale", "=", "False", ",", "\n", "exported_disc_path", "=", "None", ",", "use_3dconv", "=", "False", ",", "compute_metrics", "=", "False", ",", "min_distance", "=", "3.", ",", "max_distance", "=", "150.", ",", "show_result", "=", "False", ")", ":", "\n", "    ", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "in_image", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", ",", "None", ",", "3", "]", ")", "\n", "\n", "gt_image", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", ",", "None", ",", "1", "]", ")", "\n", "gt_mask", "=", "None", "\n", "if", "data_type", "==", "'real'", ":", "\n", "        ", "gt_mask", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", ",", "None", ",", "1", "]", ")", "\n", "model", "=", "lsgan", ".", "build_model", "(", "in_image", ",", "gt_image", ",", "data_type", "=", "data_type", ",", "gt_mask", "=", "gt_mask", ",", "\n", "smooth_weight", "=", "0.1", ",", "adv_weight", "=", "0.0001", ",", "discriminator_ckpt", "=", "exported_disc_path", ",", "\n", "use_multi_scale", "=", "use_multi_scale", ",", "use_3dconv", "=", "use_3dconv", ")", "\n", "min_eval_distance", "=", "min_distance", "\n", "max_eval_distance", "=", "80.", "\n", "", "else", ":", "\n", "        ", "model", "=", "lsgan", ".", "build_model", "(", "in_image", ",", "gt_image", ",", "data_type", "=", "data_type", ",", "gt_mask", "=", "gt_mask", ",", "smooth_weight", "=", "1e-4", ",", "\n", "adv_weight", "=", "0.0001", ",", "use_multi_scale", "=", "use_multi_scale", ",", "use_3dconv", "=", "use_3dconv", ")", "\n", "min_eval_distance", "=", "min_distance", "\n", "max_eval_distance", "=", "max_distance", "\n", "\n", "", "out_image", "=", "model", "[", "'out_image'", "]", "\n", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "model_dir", ")", "\n", "\n", "per_image_metrics", "=", "[", "]", "\n", "#mae = []", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "results_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "results_dir", ")", "\n", "\n", "", "results_folder", "=", "[", "'gated2depth'", ",", "'gated2depth_img'", ",", "'all'", "]", "\n", "for", "result_folder", "in", "results_folder", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "results_dir", ",", "result_folder", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "results_dir", ",", "result_folder", ")", ")", "\n", "\n", "", "", "for", "ind", "in", "range", "(", "len", "(", "file_names", ")", ")", ":", "\n", "# get the path from image id", "\n", "        ", "train_fn", "=", "file_names", "[", "ind", "]", "\n", "if", "data_type", "==", "'real'", ":", "\n", "            ", "img_id", "=", "train_fn", "\n", "gta_pass", "=", "''", "\n", "\n", "", "else", ":", "\n", "            ", "img_id", "=", "train_fn", "\n", "gta_pass", "=", "''", "\n", "\n", "", "in_img", "=", "dsutil", ".", "read_gated_image", "(", "base_dir", ",", "gta_pass", ",", "img_id", ",", "data_type", ")", "\n", "\n", "input_patch", "=", "in_img", "\n", "output", "=", "sess", ".", "run", "(", "out_image", ",", "feed_dict", "=", "{", "in_image", ":", "input_patch", "}", ")", "\n", "output", "=", "np", ".", "clip", "(", "output", "*", "max_distance", ",", "min_distance", ",", "max_distance", ")", "\n", "\n", "gt_patch", ",", "_", "=", "dsutil", ".", "read_gt_image", "(", "base_dir", ",", "gta_pass", ",", "img_id", ",", "data_type", ",", "raw_values_only", "=", "True", ",", "min_distance", "=", "min_distance", ",", "max_distance", "=", "max_distance", ")", "\n", "\n", "if", "compute_metrics", ":", "\n", "#if data_type != 'real':", "\n", "#curr_mae = np.mean(np.abs(output - gt_patch), dtype=np.float64)", "\n", "            ", "curr_metrics", "=", "calc_metrics", "(", "output", "[", "0", ",", ":", ",", ":", ",", "0", "]", ",", "gt_patch", ",", "min_distance", "=", "min_eval_distance", ",", "\n", "max_distance", "=", "max_eval_distance", ")", "\n", "per_image_metrics", ".", "append", "(", "curr_metrics", ")", "\n", "#mae.append(curr_mae)", "\n", "\n", "# else:", "\n", "#depth_lidar1, _ = dsutil.read_gt_image(base_dir, gta_pass, img_id, data_type, raw_values_only=True, min_distance=min_distance, max_distance=max_distance)", "\n", "#curr_metrics = calc_metrics(output[0, :, :, 0], gt_patch, min_distance=min_eval_distance,", "\n", "#                            max_distance=max_eval_distance)", "\n", "#per_image_metrics.append(curr_metrics)", "\n", "#mae.append(curr_metrics)", "\n", "\n", "", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "results_dir", ",", "'gated2depth'", ",", "'{}'", ".", "format", "(", "img_id", ")", ")", ",", "output", ")", "\n", "\n", "#depth_lidar1, _ = dsutil.read_gt_image(base_dir, gta_pass, img_id, data_type, raw_values_only=True, min_distance=min_distance, max_distance=max_distance)", "\n", "\n", "if", "data_type", "!=", "'real'", ":", "\n", "#print(depth_lidar1.shape)", "\n", "            ", "depth_lidar1_color", "=", "visualize2D", ".", "colorize_depth", "(", "gt_patch", ",", "min_distance", "=", "min_eval_distance", ",", "max_distance", "=", "max_eval_distance", ")", "\n", "", "else", ":", "\n", "#print(depth_lidar1.shape)", "\n", "            ", "depth_lidar1_color", "=", "visualize2D", ".", "colorize_pointcloud", "(", "gt_patch", ",", "min_distance", "=", "min_eval_distance", ",", "\n", "max_distance", "=", "max_eval_distance", ",", "radius", "=", "3", ")", "\n", "\n", "", "depth_map_color", "=", "visualize2D", ".", "colorize_depth", "(", "output", "[", "0", ",", ":", ",", ":", ",", "0", "]", ",", "min_distance", "=", "min_eval_distance", ",", "\n", "max_distance", "=", "max_eval_distance", ")", "\n", "\n", "in_out_shape", "=", "(", "int", "(", "depth_map_color", ".", "shape", "[", "0", "]", "+", "depth_map_color", ".", "shape", "[", "0", "]", "/", "3.", "+", "\n", "gt_patch", ".", "shape", "[", "0", "]", ")", ",", "depth_map_color", ".", "shape", "[", "1", "]", ",", "3", ")", "\n", "\n", "input_output", "=", "np", ".", "zeros", "(", "shape", "=", "in_out_shape", ")", "\n", "scaled_input", "=", "cv2", ".", "resize", "(", "input_patch", "[", "0", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "dsize", "=", "(", "int", "(", "input_patch", ".", "shape", "[", "2", "]", "/", "3", ")", ",", "int", "(", "input_patch", ".", "shape", "[", "1", "]", "/", "3", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_AREA", ")", "*", "255", "\n", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "            ", "input_output", "[", ":", "scaled_input", ".", "shape", "[", "0", "]", ",", ":", "scaled_input", ".", "shape", "[", "1", "]", ",", "i", "]", "=", "scaled_input", "[", ":", ",", ":", ",", "0", "]", "\n", "input_output", "[", ":", "scaled_input", ".", "shape", "[", "0", "]", ",", "scaled_input", ".", "shape", "[", "1", "]", ":", "2", "*", "scaled_input", ".", "shape", "[", "1", "]", ",", "i", "]", "=", "scaled_input", "[", ":", ",", "\n", ":", ",", "1", "]", "\n", "input_output", "[", ":", "scaled_input", ".", "shape", "[", "0", "]", ",", "scaled_input", ".", "shape", "[", "1", "]", "*", "2", ":", "scaled_input", ".", "shape", "[", "1", "]", "*", "3", ",", "i", "]", "=", "scaled_input", "[", "\n", ":", ",", ":", ",", "2", "]", "\n", "\n", "", "input_output", "[", "scaled_input", ".", "shape", "[", "0", "]", ":", "scaled_input", ".", "shape", "[", "0", "]", "+", "depth_map_color", ".", "shape", "[", "0", "]", ",", ":", ",", ":", "]", "=", "depth_map_color", "\n", "input_output", "[", "scaled_input", ".", "shape", "[", "0", "]", "+", "depth_map_color", ".", "shape", "[", "0", "]", ":", ",", ":", ",", ":", "]", "=", "depth_lidar1_color", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "results_dir", ",", "'gated2depth_img'", ",", "'{}.jpg'", ".", "format", "(", "img_id", ")", ")", ",", "depth_map_color", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "results_dir", ",", "'all'", ",", "'{}.jpg'", ".", "format", "(", "img_id", ")", ")", ",", "input_output", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n", "if", "show_result", ":", "\n", "            ", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "plt", ".", "imshow", "(", "cv2", ".", "cvtColor", "(", "input_output", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "", "", "if", "compute_metrics", ":", "\n", "        ", "res", "=", "np", ".", "mean", "(", "per_image_metrics", ",", "axis", "=", "0", ")", "\n", "res_str", "=", "''", "\n", "for", "i", "in", "range", "(", "res", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "res_str", "+=", "'{}={:.2f} \\n'", ".", "format", "(", "metric_str", "[", "i", "]", ",", "res", "[", "i", "]", ")", "\n", "", "print", "(", "res_str", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "results_dir", ",", "'results.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "res_str", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "results_dir", ",", "'results.tex'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "' & '", ".", "join", "(", "metric_str", ")", "+", "'\\n'", ")", "\n", "f", ".", "write", "(", "' & '", ".", "join", "(", "[", "'{:.2f}'", ".", "format", "(", "r", ")", "for", "r", "in", "res", "]", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train_eval.parse_args": [[8, 68], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train_eval.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"Parse input arguments.\"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Run train or eval scripts for Gated2Depth'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--base_dir\"", ",", "help", "=", "\"Path to dataset\"", ",", "required", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--train_files_path\"", ",", "help", "=", "\"Path to file with train file names\"", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--eval_files_path\"", ",", "\n", "help", "=", "\"Path to file with validation/evaluation file names. Required if running both in train and eval mode\"", ",", "\n", "required", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--data_type\"", ",", "choices", "=", "[", "'real'", ",", "'synthetic'", "]", ",", "help", "=", "\"[real|synthetic].\"", ",", "default", "=", "'real'", ",", "\n", "required", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--results_dir\"", ",", "help", "=", "\"Path to results directory (train or eval)\"", ",", "\n", "default", "=", "'gated2depth_results'", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--model_dir\"", ",", "help", "=", "\"Path to model directory\"", ",", "\n", "default", "=", "'gated2depth model'", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--exported_disc_path\"", ",", "help", "=", "\"Path to exported discriminator. Used to train \"", "\n", "\"a generator with a pre-trained discriminator\"", ",", "\n", "default", "=", "None", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--mode\"", ",", "choices", "=", "[", "'train'", ",", "'eval'", "]", ",", "help", "=", "\"[train/eval]\"", ",", "\n", "default", "=", "'train'", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--use_multiscale'", ",", "help", "=", "'Use multiscale loss function'", ",", "\n", "action", "=", "'store_true'", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--smooth_weight'", ",", "type", "=", "float", ",", "help", "=", "'Smoothing loss weight'", ",", "\n", "default", "=", "0.5", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--adv_weight'", ",", "type", "=", "float", ",", "help", "=", "'Adversarial loss weight'", ",", "\n", "default", "=", "0.", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--lrate'", ",", "type", "=", "float", ",", "help", "=", "'Learning rate'", ",", "\n", "default", "=", "0.0001", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--min_distance'", ",", "type", "=", "float", ",", "help", "=", "'minimum distance'", ",", "\n", "default", "=", "3.", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--max_distance'", ",", "type", "=", "float", ",", "help", "=", "'maximum distance'", ",", "\n", "default", "=", "150.", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--use_3dconv'", ",", "help", "=", "'Use 3D convolutions architecture'", ",", "\n", "action", "=", "'store_true'", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--gpu'", ",", "dest", "=", "'gpu'", ",", "help", "=", "'GPU id'", ",", "default", "=", "'0'", ",", "required", "=", "False", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--num_epochs'", ",", "type", "=", "int", ",", "dest", "=", "'num_epochs'", ",", "\n", "help", "=", "'Number of training epochs'", ",", "default", "=", "2", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--show_result'", ",", "help", "=", "'Show result image during evaluation'", ",", "\n", "action", "=", "'store_true'", ",", "required", "=", "False", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run": [[10, 162], ["print", "print", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.merge_all", "tensorflow.train.Saver", "tf.Session.run", "tensorflow.train.get_checkpoint_state", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter", "range", "os.path.exists", "os.makedirs", "tensorflow.placeholder", "LSGAN.build_model", "LSGAN.build_model", "tensorflow.variable_scope", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.variable_scope", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.clip_by_value", "tensorflow.variable_scope", "range", "len", "tensorflow.summary.merge", "tensorflow.summary.merge", "tensorflow.global_variables_initializer", "print", "tf.train.Saver.restore", "os.path.join", "os.path.join", "print", "numpy.random.permutation", "tf.train.Saver.save", "len", "len", "len", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.image", "len", "dataset_util.read_gated_image", "dataset_util.read_gt_image", "print", "os.path.join", "tf.placeholder.get_shape", "tf.Session.run", "print", "tf.summary.FileWriter.add_summary", "tf.summary.FileWriter.flush", "numpy.random.randint", "tf.summary.FileWriter.add_summary", "tf.summary.FileWriter.flush", "tf.Session.run", "tf.Session.run", "tf.Session.run", "len", "dataset_util.read_gated_image", "dataset_util.read_gt_image", "tf.Session.run", "tf.Session.run", "dataset_util.read_gated_image", "dataset_util.read_gt_image", "tf.Session.run", "tf.Session.run", "tf.Session.run", "tf.Session.run", "tf.Session.run", "tf.Session.run", "print", "tf.Session.run"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.build_model", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.build_model", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.dataset_util.read_gated_image", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.dataset_util.read_gt_image", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.dataset_util.read_gated_image", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.dataset_util.read_gt_image", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.dataset_util.read_gated_image", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.dataset_util.read_gt_image", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.train.run"], ["def", "run", "(", "results_dir", ",", "model_dir", ",", "base_dir", ",", "train_file_names", ",", "eval_file_names", ",", "num_epochs", ",", "data_type", ",", "\n", "use_multi_scale", "=", "False", ",", "\n", "exported_disc_path", "=", "None", ",", "use_3dconv", "=", "False", ",", "smooth_weight", "=", "0.5", ",", "lrate", "=", "1e-4", ",", "adv_weight", "=", "0.0001", ",", "min_distance", "=", "3.", ",", "\n", "max_distance", "=", "150.", ")", ":", "\n", "    ", "train_fns", "=", "train_file_names", "\n", "val_fns", "=", "eval_file_names", "\n", "\n", "print", "(", "'num train: %d'", "%", "len", "(", "train_fns", ")", ")", "\n", "print", "(", "'num val: %d'", "%", "len", "(", "val_fns", ")", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "model_dir", ")", "\n", "\n", "", "save_summary_freq", "=", "100", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "\n", "in_image", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", ",", "None", ",", "3", "]", ")", "\n", "\n", "gt_image", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", ",", "None", ",", "1", "]", ")", "\n", "gt_mask", "=", "None", "\n", "if", "data_type", "==", "'real'", ":", "\n", "        ", "gt_mask", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", ",", "None", ",", "1", "]", ")", "\n", "model", "=", "lsgan", ".", "build_model", "(", "in_image", ",", "gt_image", ",", "data_type", "=", "data_type", ",", "gt_mask", "=", "gt_mask", ",", "\n", "smooth_weight", "=", "smooth_weight", ",", "adv_weight", "=", "adv_weight", ",", "\n", "discriminator_ckpt", "=", "exported_disc_path", ",", "\n", "use_multi_scale", "=", "use_multi_scale", ",", "use_3dconv", "=", "use_3dconv", ",", "lrate", "=", "lrate", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "lsgan", ".", "build_model", "(", "in_image", ",", "gt_image", ",", "data_type", "=", "data_type", ",", "gt_mask", "=", "gt_mask", ",", "\n", "smooth_weight", "=", "smooth_weight", ",", "adv_weight", "=", "adv_weight", ",", "use_multi_scale", "=", "use_multi_scale", ",", "\n", "use_3dconv", "=", "use_3dconv", ",", "lrate", "=", "lrate", ")", "\n", "\n", "", "out_image", "=", "model", "[", "'out_image'", "]", "\n", "disc_in", "=", "model", "[", "'disc_in'", "]", "\n", "scaled_losses", "=", "model", "[", "'scaled_losses'", "]", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'Generator_loss'", ")", ":", "\n", "        ", "l1_loss_sum", "=", "tf", ".", "summary", ".", "scalar", "(", "'L1'", ",", "model", "[", "'l1_loss'", "]", ")", "\n", "grad_loss_sum", "=", "tf", ".", "summary", ".", "scalar", "(", "'TVariation'", ",", "model", "[", "'grad_loss'", "]", ")", "\n", "adv_loss_sum", "=", "tf", ".", "summary", ".", "scalar", "(", "'Adversarial'", ",", "model", "[", "'adv_loss'", "]", ")", "\n", "G_loss_sum", "=", "tf", ".", "summary", ".", "scalar", "(", "'Total'", ",", "model", "[", "'gloss'", "]", ")", "\n", "if", "len", "(", "scaled_losses", ")", ">", "0", ":", "\n", "            ", "l1_half_sum", "=", "tf", ".", "summary", ".", "scalar", "(", "'L1_half_scale'", ",", "scaled_losses", "[", "0", "]", ")", "\n", "l1_fourth_sum", "=", "tf", ".", "summary", ".", "scalar", "(", "'L1_fourth_scale'", ",", "scaled_losses", "[", "1", "]", ")", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'Discriminator_loss'", ")", ":", "\n", "        ", "D_real_loss_sum", "=", "tf", ".", "summary", ".", "scalar", "(", "'Real'", ",", "model", "[", "'D_loss_real'", "]", ")", "\n", "D_fake_loss_sum", "=", "tf", ".", "summary", ".", "scalar", "(", "'Fake'", ",", "model", "[", "'D_loss_fake'", "]", ")", "\n", "D_loss_sum", "=", "tf", ".", "summary", ".", "scalar", "(", "'Total'", ",", "model", "[", "'dloss'", "]", ")", "\n", "\n", "", "tf", ".", "summary", ".", "image", "(", "'gt_image'", ",", "gt_image", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'output'", ",", "out_image", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'output_clamped'", ",", "tf", ".", "clip_by_value", "(", "out_image", ",", "0.0", ",", "1.0", ")", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'in_image'", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "in_image", ".", "get_shape", "(", ")", "[", "3", "]", ")", ":", "\n", "            ", "tf", ".", "summary", ".", "image", "(", "'chan_%d'", "%", "i", ",", "in_image", "[", ":", ",", ":", ",", ":", ",", "i", ":", "(", "i", "+", "1", ")", "]", ")", "\n", "\n", "", "", "train_summary", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "\n", "if", "len", "(", "scaled_losses", ")", ">", "0", ":", "\n", "        ", "loss_sum", "=", "tf", ".", "summary", ".", "merge", "(", "[", "G_loss_sum", ",", "D_loss_sum", ",", "l1_loss_sum", ",", "l1_half_sum", ",", "l1_fourth_sum", ",", "\n", "grad_loss_sum", ",", "adv_loss_sum", ",", "D_real_loss_sum", ",", "D_fake_loss_sum", "]", ")", "\n", "", "else", ":", "\n", "        ", "loss_sum", "=", "tf", ".", "summary", ".", "merge", "(", "[", "G_loss_sum", ",", "D_loss_sum", ",", "l1_loss_sum", ",", "grad_loss_sum", ",", "\n", "adv_loss_sum", ",", "D_real_loss_sum", ",", "D_fake_loss_sum", "]", ")", "\n", "\n", "", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "max_to_keep", "=", "2", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "ckpt", "=", "tf", ".", "train", ".", "get_checkpoint_state", "(", "model_dir", ")", "\n", "\n", "if", "ckpt", ":", "\n", "        ", "print", "(", "'loaded '", "+", "ckpt", ".", "model_checkpoint_path", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "ckpt", ".", "model_checkpoint_path", ")", "\n", "\n", "", "train_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "os", ".", "path", ".", "join", "(", "results_dir", ",", "'train'", ")", ",", "sess", ".", "graph", ")", "\n", "val_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "os", ".", "path", ".", "join", "(", "results_dir", ",", "'val'", ")", ")", "\n", "global_cnt", "=", "0", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "        ", "print", "(", "'epoch: %d '", "%", "epoch", ")", "\n", "cnt", "=", "0", "\n", "for", "ind", "in", "np", ".", "random", ".", "permutation", "(", "len", "(", "train_fns", ")", ")", ":", "\n", "            ", "global_cnt", "+=", "1", "\n", "train_fn", "=", "train_fns", "[", "ind", "]", "\n", "img_id", "=", "train_fn", "\n", "gta_pass", "=", "''", "\n", "\n", "in_img", "=", "dsutil", ".", "read_gated_image", "(", "base_dir", ",", "gta_pass", ",", "img_id", ",", "data_type", ")", "\n", "gt_patch", ",", "lidar_mask", "=", "dsutil", ".", "read_gt_image", "(", "base_dir", ",", "gta_pass", ",", "img_id", ",", "data_type", ",", "min_distance", ",", "\n", "max_distance", ")", "\n", "cnt", "+=", "1", "\n", "input_patch", "=", "in_img", "\n", "gt_patch", "=", "gt_patch", "\n", "\n", "if", "not", "global_cnt", "%", "save_summary_freq", ":", "\n", "                ", "out_for_disc", "=", "sess", ".", "run", "(", "out_image", ",", "feed_dict", "=", "{", "in_image", ":", "input_patch", "}", ")", "\n", "if", "data_type", "==", "'real'", ":", "\n", "                    ", "summaries", ",", "_", ",", "G_current", "=", "sess", ".", "run", "(", "[", "train_summary", ",", "model", "[", "'gtrain_op'", "]", ",", "model", "[", "'gloss'", "]", "]", ",", "\n", "feed_dict", "=", "{", "in_image", ":", "input_patch", ",", "gt_image", ":", "gt_patch", ",", "\n", "gt_mask", ":", "lidar_mask", ",", "disc_in", ":", "out_for_disc", "}", ")", "\n", "", "else", ":", "\n", "                    ", "_", ",", "G_current", "=", "sess", ".", "run", "(", "[", "model", "[", "'dtrain_op'", "]", ",", "model", "[", "'dloss'", "]", "]", ",", "\n", "feed_dict", "=", "{", "gt_image", ":", "gt_patch", ",", "disc_in", ":", "out_for_disc", "}", ")", "\n", "summaries", ",", "_", ",", "G_current", "=", "sess", ".", "run", "(", "[", "train_summary", ",", "model", "[", "'gtrain_op'", "]", ",", "model", "[", "'gloss'", "]", "]", ",", "\n", "feed_dict", "=", "{", "in_image", ":", "input_patch", ",", "gt_image", ":", "gt_patch", ",", "\n", "disc_in", ":", "out_for_disc", "}", ")", "\n", "\n", "", "print", "(", "\"writing summaries\"", ")", "\n", "train_writer", ".", "add_summary", "(", "summaries", ",", "global_cnt", ")", "\n", "train_writer", ".", "flush", "(", ")", "\n", "idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "val_fns", ")", ")", "\n", "val_fn", "=", "val_fns", "[", "idx", "]", "\n", "img_id", "=", "val_fn", "\n", "gta_pass", "=", "''", "\n", "\n", "if", "data_type", "==", "'real'", ":", "\n", "                    ", "in_img", "=", "dsutil", ".", "read_gated_image", "(", "base_dir", ",", "gta_pass", ",", "img_id", ",", "data_type", ")", "\n", "gt_patch", ",", "lidar_mask", "=", "dsutil", ".", "read_gt_image", "(", "base_dir", ",", "gta_pass", ",", "img_id", ",", "data_type", ",", "min_distance", ",", "max_distance", ")", "\n", "input_patch", "=", "in_img", "\n", "out_for_disc", "=", "sess", ".", "run", "(", "out_image", ",", "feed_dict", "=", "{", "in_image", ":", "input_patch", "}", ")", "\n", "val_loss", "=", "sess", ".", "run", "(", "loss_sum", ",", "feed_dict", "=", "{", "in_image", ":", "input_patch", ",", "gt_image", ":", "gt_patch", ",", "\n", "gt_mask", ":", "lidar_mask", ",", "disc_in", ":", "out_for_disc", "}", ")", "\n", "\n", "", "else", ":", "\n", "                    ", "in_img", "=", "dsutil", ".", "read_gated_image", "(", "base_dir", ",", "gta_pass", ",", "img_id", ",", "data_type", ")", "\n", "gt_patch", ",", "_", "=", "dsutil", ".", "read_gt_image", "(", "base_dir", ",", "gta_pass", ",", "img_id", ",", "data_type", ",", "min_distance", ",", "max_distance", ")", "\n", "input_patch", "=", "in_img", "\n", "out_for_disc", "=", "sess", ".", "run", "(", "out_image", ",", "feed_dict", "=", "{", "in_image", ":", "input_patch", "}", ")", "\n", "val_loss", "=", "sess", ".", "run", "(", "loss_sum", ",", "\n", "feed_dict", "=", "{", "in_image", ":", "input_patch", ",", "gt_image", ":", "gt_patch", ",", "disc_in", ":", "out_for_disc", "}", ")", "\n", "\n", "", "val_writer", ".", "add_summary", "(", "val_loss", ",", "global_cnt", ")", "\n", "val_writer", ".", "flush", "(", ")", "\n", "\n", "", "else", ":", "\n", "                ", "if", "data_type", "==", "'real'", ":", "\n", "                    ", "out_for_disc", "=", "sess", ".", "run", "(", "out_image", ",", "feed_dict", "=", "{", "in_image", ":", "input_patch", "}", ")", "\n", "_", ",", "G_current", "=", "sess", ".", "run", "(", "[", "model", "[", "'gtrain_op'", "]", ",", "model", "[", "'gloss'", "]", "]", ",", "\n", "feed_dict", "=", "{", "in_image", ":", "input_patch", ",", "gt_image", ":", "gt_patch", ",", "gt_mask", ":", "lidar_mask", ",", "\n", "disc_in", ":", "out_for_disc", "}", ")", "\n", "", "else", ":", "\n", "                    ", "out_for_disc", "=", "sess", ".", "run", "(", "out_image", ",", "feed_dict", "=", "{", "in_image", ":", "input_patch", "}", ")", "\n", "_", ",", "G_current", "=", "sess", ".", "run", "(", "[", "model", "[", "'dtrain_op'", "]", ",", "model", "[", "'dloss'", "]", "]", ",", "\n", "feed_dict", "=", "{", "in_image", ":", "input_patch", ",", "gt_image", ":", "gt_patch", ",", "\n", "disc_in", ":", "out_for_disc", "}", ")", "\n", "print", "(", "\"%d %d Loss=%.3f\"", "%", "(", "epoch", ",", "cnt", ",", "G_current", ")", ")", "\n", "_", ",", "G_current", "=", "sess", ".", "run", "(", "[", "model", "[", "'gtrain_op'", "]", ",", "model", "[", "'gloss'", "]", "]", ",", "\n", "feed_dict", "=", "{", "in_image", ":", "input_patch", ",", "gt_image", ":", "gt_patch", ",", "\n", "disc_in", ":", "out_for_disc", "}", ")", "\n", "", "", "print", "(", "\"%d %d Loss=%.3f\"", "%", "(", "epoch", ",", "cnt", ",", "G_current", ")", ")", "\n", "\n", "", "saver", ".", "save", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'model.ckpt'", ")", ",", "global_step", "=", "global_cnt", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.export.export_subgraph": [[11, 42], ["tensorflow.train.import_meta_graph", "tensorflow.get_default_graph", "isinstance", "list", "tensorflow.graph_util.extract_sub_graph", "tensorflow.reset_default_graph", "tensorflow.train.export_meta_graph", "all", "tf.get_default_graph.as_graph_def", "tensorflow.Session", "tf.train.import_meta_graph.restore", "tensorflow.graph_util.convert_variables_to_constants", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "export.export_subgraph._var_ops"], "function", ["None"], ["def", "export_subgraph", "(", "checkpoint", ",", "output_tensors", ",", "saveto", ")", ":", "\n", "    ", "\"\"\"\n    For the current graph, export the subgraph connected to output_tensors to a new graph_def file\n    :param checkpoint: path to checkpoint\n    :param output_tensors: output tensor names\n    :param saveto: path to save graph_def file to\n    :return:\n    \"\"\"", "\n", "saver", "=", "tf", ".", "train", ".", "import_meta_graph", "(", "checkpoint", "+", "'.meta'", ",", "clear_devices", "=", "True", ")", "\n", "graph", "=", "tf", ".", "get_default_graph", "(", ")", "\n", "if", "isinstance", "(", "output_tensors", ",", "str", ")", ":", "\n", "        ", "output_tensors", "=", "[", "graph", ".", "get_tensor_by_name", "(", "output_tensors", ")", "]", "\n", "", "else", ":", "\n", "        ", "assert", "all", "(", "[", "isinstance", "(", "out", ",", "str", ")", "for", "out", "in", "output_tensors", "]", ")", "\n", "output_tensors", "=", "[", "graph", ".", "get_tensor_by_name", "(", "out", ")", "for", "out", "in", "output_tensors", "]", "\n", "\n", "", "def", "_var_ops", "(", "var_op", ")", ":", "# get operations one step ahead of variable ops: read/assign/etc.", "\n", "        ", "return", "[", "var_op", ".", "name", "]", "+", "[", "op", ".", "name", "for", "t", "in", "var_op", ".", "outputs", "for", "op", "in", "t", ".", "consumers", "(", ")", "]", "\n", "\n", "", "keep_op_names", "=", "[", "out", ".", "op", ".", "name", "for", "out", "in", "output_tensors", "]", "\n", "var_ops", "=", "list", "(", "{", "op", "for", "out", "in", "output_tensors", "for", "op", "in", "ge", ".", "get_backward_walk_ops", "(", "out", ")", "if", "op", ".", "type", "==", "'VariableV2'", "}", ")", "\n", "keep_op_names", "+=", "[", "opname", "for", "op", "in", "var_ops", "for", "opname", "in", "_var_ops", "(", "op", ")", "]", "\n", "keep_op_names", "=", "[", "opname", "for", "opname", "in", "keep_op_names", "if", "'save/'", "not", "in", "opname", "and", "'save_'", "not", "in", "opname", "]", "\n", "graph_def", "=", "tf", ".", "graph_util", ".", "extract_sub_graph", "(", "graph", ".", "as_graph_def", "(", ")", ",", "keep_op_names", ")", "\n", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "saver", ".", "restore", "(", "sess", ",", "checkpoint", ")", "\n", "new_graph_def", "=", "tf", ".", "graph_util", ".", "convert_variables_to_constants", "(", "\n", "sess", ",", "graph_def", ",", "[", "out", ".", "op", ".", "name", "for", "out", "in", "output_tensors", "]", ")", "\n", "", "tf", ".", "reset_default_graph", "(", ")", "\n", "tf", ".", "train", ".", "export_meta_graph", "(", "saveto", ",", "graph_def", "=", "new_graph_def", ",", "clear_devices", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.export.reload_exported_generator": [[44, 59], ["tensorflow.train.import_meta_graph", "tensorflow.get_default_graph", "tensorflow.get_tensors", "len", "len"], "function", ["None"], ["", "def", "reload_exported_generator", "(", "checkpoint", ")", ":", "\n", "    ", "\"\"\"\n    For a given checkpoint from export_generator, return input and output tensors\n\n    :param checkpoint: path to checkpoint\n    :return: input, output\n    \"\"\"", "\n", "_", "=", "tf", ".", "train", ".", "import_meta_graph", "(", "checkpoint", ",", "clear_devices", "=", "True", ",", "import_scope", "=", "'cyclegan'", ")", "\n", "graph", "=", "tf", ".", "get_default_graph", "(", ")", "\n", "tensors", "=", "ge", ".", "get_tensors", "(", "graph", ")", "\n", "input_tensors", "=", "[", "t", "for", "t", "in", "tensors", "if", "'input'", "in", "t", ".", "name", "and", "'cyclegan/'", "in", "t", ".", "name", "]", "\n", "output_tensors", "=", "[", "t", "for", "t", "in", "tensors", "if", "'output'", "in", "t", ".", "name", "and", "'cyclegan/'", "in", "t", ".", "name", "]", "\n", "assert", "len", "(", "input_tensors", ")", "==", "1", "\n", "assert", "len", "(", "output_tensors", ")", "==", "1", "\n", "return", "input_tensors", "[", "0", "]", ",", "output_tensors", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.export.reload_exported_disc": [[61, 76], ["tensorflow.train.import_meta_graph", "tensorflow.get_default_graph", "tensorflow.get_tensors", "len", "len"], "function", ["None"], ["", "def", "reload_exported_disc", "(", "checkpoint", ")", ":", "\n", "    ", "\"\"\"\n    For a given checkpoint from export_generator, return input and output tensors\n\n    :param checkpoint: path to checkpoint\n    :return: input, output\n    \"\"\"", "\n", "_", "=", "tf", ".", "train", ".", "import_meta_graph", "(", "checkpoint", ",", "clear_devices", "=", "True", ")", "\n", "graph", "=", "tf", ".", "get_default_graph", "(", ")", "\n", "tensors", "=", "ge", ".", "get_tensors", "(", "graph", ")", "\n", "input_tensors", "=", "[", "t", "for", "t", "in", "tensors", "if", "'fake_discriminator/Placeholder:0'", "in", "t", ".", "name", "]", "\n", "output_tensors", "=", "[", "t", "for", "t", "in", "tensors", "if", "'fake_discriminator/discriminator/Reshape:0'", "in", "t", ".", "name", "]", "\n", "assert", "len", "(", "input_tensors", ")", "==", "1", "\n", "assert", "len", "(", "output_tensors", ")", "==", "1", "\n", "return", "input_tensors", "[", "0", "]", ",", "output_tensors", "[", "0", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.generator": [[11, 14], ["tensorflow.variable_scope", "unet.network"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.unet.network"], ["def", "generator", "(", "image", ",", "use_multi_scale", ",", "use_3dconv", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'generator'", ")", ":", "\n", "        ", "return", "unet", ".", "network", "(", "image", ",", "use_multi_scale", ",", "use_3dconv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.discriminator": [[16, 31], ["tensorflow.variable_scope", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.conv2d", "tensorflow.reshape", "tensorflow.get_variable_scope().reuse_variables", "tensorflow.shape", "tensorflow.shape", "tensorflow.get_variable_scope"], "function", ["None"], ["", "", "def", "discriminator", "(", "image", ",", "reuse", "=", "False", ",", "for_G", "=", "False", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'discriminator'", ")", ":", "\n", "        ", "if", "reuse", ":", "\n", "            ", "tf", ".", "get_variable_scope", "(", ")", ".", "reuse_variables", "(", ")", "\n", "\n", "", "df_dim", "=", "64", "\n", "\n", "net", "=", "slim", ".", "conv2d", "(", "image", ",", "df_dim", ",", "[", "4", ",", "4", "]", ",", "padding", "=", "'VALID'", ",", "stride", "=", "2", ",", "activation_fn", "=", "tf", ".", "nn", ".", "leaky_relu", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "df_dim", "*", "2", ",", "[", "4", ",", "4", "]", ",", "padding", "=", "'VALID'", ",", "stride", "=", "2", ",", "activation_fn", "=", "tf", ".", "nn", ".", "leaky_relu", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "df_dim", "*", "4", ",", "[", "4", ",", "4", "]", ",", "padding", "=", "'VALID'", ",", "stride", "=", "2", ",", "activation_fn", "=", "tf", ".", "nn", ".", "leaky_relu", ")", "\n", "net", "=", "slim", ".", "conv2d", "(", "net", ",", "df_dim", "*", "8", ",", "[", "4", ",", "4", "]", ",", "padding", "=", "'VALID'", ",", "stride", "=", "2", ",", "activation_fn", "=", "tf", ".", "nn", ".", "leaky_relu", ")", "\n", "logits", "=", "slim", ".", "conv2d", "(", "net", ",", "1", ",", "[", "4", ",", "4", "]", ",", "stride", "=", "2", ",", "activation_fn", "=", "None", ")", "\n", "n_patches", "=", "tf", ".", "shape", "(", "logits", ")", "[", "1", "]", "*", "tf", ".", "shape", "(", "logits", ")", "[", "2", "]", "\n", "logits", "=", "tf", ".", "reshape", "(", "logits", ",", "[", "-", "1", ",", "n_patches", "]", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.tv_loss": [[33, 42], ["tensorflow.image.image_gradients", "tensorflow.abs", "tensorflow.abs", "tensorflow.image.image_gradients", "tensorflow.exp", "tensorflow.exp", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.abs", "tensorflow.abs", "tensorflow.multiply", "tensorflow.multiply"], "function", ["None"], ["", "", "def", "tv_loss", "(", "input", ",", "g_output", ")", ":", "\n", "    ", "dy_out", ",", "dx_out", "=", "tf", ".", "image", ".", "image_gradients", "(", "g_output", ")", "\n", "dy_out", "=", "tf", ".", "abs", "(", "dy_out", ")", "\n", "dx_out", "=", "tf", ".", "abs", "(", "dx_out", ")", "\n", "dy_input", ",", "dx_input", "=", "tf", ".", "image", ".", "image_gradients", "(", "tf", ".", "reduce_mean", "(", "input", ",", "axis", "=", "3", ",", "keepdims", "=", "True", ")", ")", "\n", "ep_dy", "=", "tf", ".", "exp", "(", "-", "tf", ".", "abs", "(", "dy_input", ")", ")", "\n", "ep_dx", "=", "tf", ".", "exp", "(", "-", "tf", ".", "abs", "(", "dx_input", ")", ")", "\n", "grad_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "multiply", "(", "dy_out", ",", "ep_dy", ")", "+", "tf", ".", "multiply", "(", "dx_out", ",", "ep_dx", ")", ")", "\n", "return", "grad_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.loss_l2": [[44, 102], ["LSGAN.tv_loss", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.avg_pool2d", "tensorflow.avg_pool2d", "new_targets.append", "new_targets.append", "new_outs.append", "new_outs.append", "enumerate", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.max_pool2d", "tensorflow.max_pool2d", "new_masks.append", "new_masks.append", "tensorflow.avg_pool2d", "tensorflow.avg_pool2d", "tensorflow.div_no_nan", "tensorflow.div_no_nan", "tensorflow.multiply", "tensorflow.reduce_sum", "scaled_losses.append", "scaled_losses.append", "tensorflow.ones_like", "tensorflow.ones_like", "tensorflow.zeros_like", "tensorflow.abs", "numpy.finfo", "tensorflow.reduce_mean", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.multiply", "numpy.finfo", "tensorflow.abs"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.tv_loss"], ["", "def", "loss_l2", "(", "D_logits_real", ",", "D_logits_fake", ",", "input", ",", "g_output", ",", "targets", ",", "data_type", ",", "gt_mask", ",", "smooth_weight", ",", "adv_weight", ",", "\n", "use_multi_scale", ",", "multi_scale_weights", "=", "[", "0.8", ",", "0.6", "]", ")", ":", "# multi_scale_weights=[0.8, 0.6]): #adv_weight=0.0001):", "\n", "\n", "    ", "grad_loss", "=", "tv_loss", "(", "input", ",", "g_output", "[", "'output'", "]", ")", "\n", "# tf.reduce_mean(tf.multiply(dy_out, ep_dy) + tf.multiply(dx_out, ep_dx))", "\n", "\n", "if", "data_type", "==", "'synthetic'", ":", "\n", "        ", "l1_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "g_output", "[", "'output'", "]", "-", "targets", ")", ")", "\n", "", "else", ":", "\n", "        ", "l1_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "tf", ".", "abs", "(", "g_output", "[", "'output'", "]", "-", "targets", ")", ",", "gt_mask", ")", ")", "/", "(", "tf", ".", "reduce_sum", "(", "gt_mask", ")", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", "\n", "\n", "", "scaled_losses", "=", "[", "]", "\n", "\n", "if", "use_multi_scale", ":", "\n", "        ", "new_targets", "=", "[", "]", "\n", "new_masks", "=", "[", "]", "\n", "new_outs", "=", "[", "]", "\n", "\n", "targets2", "=", "slim", ".", "avg_pool2d", "(", "targets", ",", "[", "2", ",", "2", "]", ",", "stride", "=", "2", ",", "scope", "=", "'targets2'", ")", "\n", "targets3", "=", "slim", ".", "avg_pool2d", "(", "targets", ",", "[", "4", ",", "4", "]", ",", "stride", "=", "4", ",", "scope", "=", "'targets3'", ")", "\n", "\n", "if", "data_type", "!=", "'synthetic'", ":", "\n", "            ", "mask2", "=", "slim", ".", "max_pool2d", "(", "gt_mask", ",", "[", "2", ",", "2", "]", ",", "stride", "=", "2", ",", "scope", "=", "'mask2'", ")", "\n", "mask3", "=", "slim", ".", "max_pool2d", "(", "gt_mask", ",", "[", "4", ",", "4", "]", ",", "stride", "=", "4", ",", "scope", "=", "'mask3'", ")", "\n", "new_masks", ".", "append", "(", "mask2", ")", "\n", "new_masks", ".", "append", "(", "mask3", ")", "\n", "\n", "avg_mask2", "=", "slim", ".", "avg_pool2d", "(", "gt_mask", ",", "[", "2", ",", "2", "]", ",", "stride", "=", "2", ",", "scope", "=", "'avg_mask2'", ")", "\n", "avg_mask3", "=", "slim", ".", "avg_pool2d", "(", "gt_mask", ",", "[", "4", ",", "4", "]", ",", "stride", "=", "4", ",", "scope", "=", "'avg_mask3'", ")", "\n", "\n", "targets2", "=", "tf", ".", "div_no_nan", "(", "targets2", ",", "avg_mask2", ")", "\n", "targets3", "=", "tf", ".", "div_no_nan", "(", "targets3", ",", "avg_mask3", ")", "\n", "\n", "", "new_targets", ".", "append", "(", "targets2", ")", "\n", "new_targets", ".", "append", "(", "targets3", ")", "\n", "\n", "new_outs", ".", "append", "(", "g_output", "[", "'half_scale'", "]", ")", "\n", "new_outs", ".", "append", "(", "g_output", "[", "'fourth_scale'", "]", ")", "\n", "\n", "for", "i", ",", "weight", "in", "enumerate", "(", "multi_scale_weights", ")", ":", "\n", "            ", "if", "data_type", "==", "'synthetic'", ":", "\n", "                ", "scaled_losses", ".", "append", "(", "weight", "*", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "new_outs", "[", "i", "]", "-", "new_targets", "[", "i", "]", ")", ")", ")", "\n", "l1_loss", "=", "l1_loss", "+", "scaled_losses", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "                ", "scaled_losses", ".", "append", "(", "\n", "weight", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "tf", ".", "abs", "(", "new_outs", "[", "i", "]", "-", "new_targets", "[", "i", "]", ")", ",", "new_masks", "[", "i", "]", ")", ")", "/", "\n", "(", "tf", ".", "reduce_sum", "(", "new_masks", "[", "i", "]", ")", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", ")", "\n", "l1_loss", "=", "l1_loss", "+", "scaled_losses", "[", "-", "1", "]", "\n", "\n", "", "", "", "adv_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "l2_loss", "(", "D_logits_fake", "-", "tf", ".", "ones_like", "(", "D_logits_fake", ")", ")", ")", "\n", "G_loss", "=", "l1_loss", "+", "smooth_weight", "*", "grad_loss", "+", "adv_weight", "*", "adv_loss", "\n", "D_loss_real", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "l2_loss", "(", "D_logits_real", "-", "tf", ".", "ones_like", "(", "D_logits_real", ")", ")", ")", "\n", "D_loss_fake", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "l2_loss", "(", "D_logits_fake", "-", "tf", ".", "zeros_like", "(", "D_logits_fake", ")", ")", ")", "\n", "D_loss", "=", "0.5", "*", "D_loss_real", "+", "0.5", "*", "D_loss_fake", "\n", "\n", "return", "G_loss", ",", "D_loss", ",", "l1_loss", ",", "grad_loss", ",", "adv_loss", ",", "D_loss_real", ",", "D_loss_fake", ",", "scaled_losses", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.train_ops": [[104, 119], ["tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tf.train.AdamOptimizer.compute_gradients", "tf.train.AdamOptimizer.compute_gradients", "tf.train.AdamOptimizer.apply_gradients", "tf.train.AdamOptimizer.apply_gradients"], "function", ["None"], ["", "def", "train_ops", "(", "G_loss", ",", "D_loss", ",", "lrate", ",", "beta1", "=", "0.5", ",", "global_step", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", ")", ":", "\n", "    ", "t_vars", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "G_vars", "=", "[", "var", "for", "var", "in", "t_vars", "if", "'generator'", "in", "var", ".", "name", "]", "\n", "D_vars", "=", "[", "var", "for", "var", "in", "t_vars", "if", "'discriminator'", "in", "var", ".", "name", "]", "\n", "\n", "G_optim", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lrate", ",", "beta1", "=", "beta1", ")", "\n", "D_optim", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lrate", ",", "beta1", "=", "beta1", ")", "\n", "\n", "G_grads", "=", "G_optim", ".", "compute_gradients", "(", "G_loss", ",", "var_list", "=", "G_vars", ")", "\n", "D_grads", "=", "D_optim", ".", "compute_gradients", "(", "D_loss", ",", "var_list", "=", "D_vars", ")", "\n", "\n", "G_train_op", "=", "G_optim", ".", "apply_gradients", "(", "G_grads", ",", "global_step", "=", "global_step", ")", "\n", "D_train_op", "=", "D_optim", ".", "apply_gradients", "(", "D_grads", ")", "\n", "\n", "return", "G_train_op", ",", "D_train_op", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.build_model": [[121, 159], ["tensorflow.name_scope", "LSGAN.generator", "tensorflow.name_scope", "LSGAN.discriminator", "print", "export.reload_exported_disc", "print", "tensorflow.name_scope", "LSGAN.loss_l2", "LSGAN.train_ops", "tensorflow.name_scope", "tensorflow.placeholder", "LSGAN.discriminator"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.generator", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.discriminator", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.export.reload_exported_disc", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.loss_l2", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.train_ops", "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.discriminator"], ["", "def", "build_model", "(", "input", ",", "targets", ",", "data_type", "=", "'synthetic'", ",", "gt_mask", "=", "None", ",", "\n", "smooth_weight", "=", "1e-4", ",", "adv_weight", "=", "0.0001", ",", "\n", "discriminator_ckpt", "=", "None", ",", "use_multi_scale", "=", "False", ",", "\n", "use_3dconv", "=", "False", ",", "lrate", "=", "1e-4", ")", ":", "\n", "    ", "model", "=", "{", "}", "\n", "with", "tf", ".", "name_scope", "(", "'generator'", ")", ":", "\n", "        ", "g_output", "=", "generator", "(", "input", ",", "use_multi_scale", ",", "use_3dconv", ")", "\n", "", "with", "tf", ".", "name_scope", "(", "'true_discriminator'", ")", ":", "\n", "        ", "true_d_output", "=", "discriminator", "(", "targets", ")", "\n", "", "if", "not", "discriminator_ckpt", "is", "None", ":", "\n", "        ", "print", "(", "'loading fake discriminator.'", ")", "\n", "disc_in", ",", "fake_d_output", "=", "reload_exported_disc", "(", "discriminator_ckpt", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Creating fake discriminator'", ")", "\n", "with", "tf", ".", "name_scope", "(", "'fake_discriminator'", ")", ":", "\n", "# fake_d_output = discriminator(targets, reuse=True)", "\n", "            ", "disc_in", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", ",", "None", ",", "1", "]", ")", "\n", "fake_d_output", "=", "discriminator", "(", "disc_in", ",", "reuse", "=", "True", ")", "\n", "", "", "with", "tf", ".", "name_scope", "(", "'loss'", ")", ":", "\n", "        ", "gloss", ",", "dloss", ",", "l1_loss", ",", "grad_loss", ",", "adv_loss", ",", "D_loss_real", ",", "D_loss_fake", ",", "scaled_losses", "=", "loss_l2", "(", "true_d_output", ",", "fake_d_output", ",", "input", ",", "g_output", ",", "targets", ",", "data_type", ",", "gt_mask", ",", "\n", "smooth_weight", ",", "adv_weight", ",", "use_multi_scale", ")", "\n", "gtrain_op", ",", "dtrain_op", "=", "train_ops", "(", "gloss", ",", "dloss", ",", "lrate", "=", "lrate", ")", "\n", "\n", "", "model", "[", "'out_image'", "]", "=", "g_output", "[", "'output'", "]", "\n", "model", "[", "'l1_loss'", "]", "=", "l1_loss", "\n", "model", "[", "'grad_loss'", "]", "=", "grad_loss", "\n", "model", "[", "'gloss'", "]", "=", "gloss", "\n", "model", "[", "'dloss'", "]", "=", "dloss", "\n", "model", "[", "'adv_loss'", "]", "=", "adv_loss", "\n", "model", "[", "'D_loss_real'", "]", "=", "D_loss_real", "\n", "model", "[", "'D_loss_fake'", "]", "=", "D_loss_fake", "\n", "model", "[", "'gtrain_op'", "]", "=", "gtrain_op", "\n", "model", "[", "'dtrain_op'", "]", "=", "dtrain_op", "\n", "model", "[", "'fake_d_output'", "]", "=", "fake_d_output", "\n", "model", "[", "'disc_in'", "]", "=", "disc_in", "\n", "model", "[", "'scaled_losses'", "]", "=", "scaled_losses", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.LSGAN.export_discriminator": [[161, 166], ["export.export_subgraph", "os.path.isdir", "os.mkdir", "os.path.join"], "function", ["home.repos.pwc.inspect_result.gruberto_Gated2Depth.src.export.export_subgraph"], ["", "def", "export_discriminator", "(", "checkpoint_dir", ",", "output_dir", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isdir", "(", "output_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "output_dir", ")", "\n", "", "export_subgraph", "(", "checkpoint_dir", ",", "'fake_discriminator/discriminator/Reshape:0'", ",", "\n", "os", ".", "path", ".", "join", "(", "output_dir", ",", "'disc.pb'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.dataset_tools.load_real.colorize_pointcloud": [[11, 23], ["matplotlib.colors.Normalize", "matplotlib.ScalarMappable", "numpy.argwhere", "numpy.zeros", "range", "tuple", "cv2.circle", "cv2.circle", "int", "cm.ScalarMappable.to_rgba"], "function", ["None"], ["def", "colorize_pointcloud", "(", "depth", ",", "min_distance", "=", "3", ",", "max_distance", "=", "80", ",", "radius", "=", "3", ")", ":", "\n", "    ", "norm", "=", "mpl", ".", "colors", ".", "Normalize", "(", "vmin", "=", "min_distance", ",", "vmax", "=", "max_distance", ")", "\n", "cmap", "=", "cm", ".", "jet", "\n", "m", "=", "cm", ".", "ScalarMappable", "(", "norm", "=", "norm", ",", "cmap", "=", "cmap", ")", "\n", "pos", "=", "np", ".", "argwhere", "(", "depth", ">", "0", ")", "\n", "\n", "pointcloud_color", "=", "np", ".", "zeros", "(", "(", "depth", ".", "shape", "[", "0", "]", ",", "depth", ".", "shape", "[", "1", "]", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "i", "in", "range", "(", "pos", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "color", "=", "tuple", "(", "[", "int", "(", "255", "*", "value", ")", "for", "value", "in", "m", ".", "to_rgba", "(", "depth", "[", "pos", "[", "i", ",", "0", "]", ",", "pos", "[", "i", ",", "1", "]", "]", ")", "[", "0", ":", "3", "]", "]", ")", "\n", "cv2", ".", "circle", "(", "pointcloud_color", ",", "(", "pos", "[", "i", ",", "1", "]", ",", "pos", "[", "i", ",", "0", "]", ")", ",", "radius", ",", "(", "color", "[", "0", "]", ",", "color", "[", "1", "]", ",", "color", "[", "2", "]", ")", ",", "-", "1", ")", "\n", "\n", "", "return", "pointcloud_color", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.dataset_tools.load_real.load_rgb": [[25, 30], ["os.path.join", "cv2.imread", "cv2.imread"], "function", ["None"], ["", "def", "load_rgb", "(", "root_dir", ",", "sample", ",", "camera", "=", "'left'", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "'rgb_{}_8bit'", ".", "format", "(", "camera", ")", ",", "sample", "+", "'.png'", ")", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.dataset_tools.load_real.load_gated": [[32, 38], ["os.path.join", "cv2.imread", "cv2.imread", "numpy.right_shift().astype", "numpy.right_shift"], "function", ["None"], ["", "def", "load_gated", "(", "root_dir", ",", "sample", ",", "slice", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "'gated{}_10bit'", ".", "format", "(", "slice", ")", ",", "sample", "+", "'.png'", ")", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ",", "-", "1", ")", "\n", "img", "=", "np", ".", "right_shift", "(", "img", ",", "2", ")", ".", "astype", "(", "np", ".", "uint8", ")", "# convert from 10bit to 8bit", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.dataset_tools.load_real.load_projected_lidar": [[40, 45], ["os.path.join", "numpy.load"], "function", ["None"], ["", "def", "load_projected_lidar", "(", "root_dir", ",", "sample", ",", "frame", "=", "'gated'", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "'depth_hdl64_{}_compressed'", ".", "format", "(", "frame", ")", ",", "sample", "+", "'.npz'", ")", "\n", "depth", "=", "np", ".", "load", "(", "path", ")", "[", "'arr_0'", "]", "\n", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.dataset_tools.load_real.load_lidar": [[47, 53], ["os.path.join", "numpy.fromfile", "numpy.transpose", "np.fromfile.reshape"], "function", ["None"], ["", "def", "load_lidar", "(", "root_dir", ",", "sample", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "'depth_hdl64'", ",", "sample", "+", "'.bin'", ")", "\n", "scan", "=", "np", ".", "fromfile", "(", "path", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pc", "=", "np", ".", "transpose", "(", "scan", ".", "reshape", "(", "(", "-", "1", ",", "5", ")", ")", "[", ":", ",", "0", ":", "3", "]", ")", "\n", "\n", "return", "pc", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.dataset_tools.load_real.project_lidar": [[55, 116], ["numpy.zeros", "numpy.dot", "numpy.dot", "numpy.array().flatten", "numpy.array().flatten", "numpy.array().flatten", "numpy.logical_and", "numpy.array", "numpy.array", "numpy.logical_and", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.logical_and", "numpy.logical_and", "numpy.array", "numpy.array", "numpy.ones", "numpy.round().astype", "numpy.round().astype", "numpy.round", "numpy.round"], "function", ["None"], ["", "def", "project_lidar", "(", "pc", ",", "frame", "=", "'gated'", ")", ":", "\n", "    ", "if", "frame", "==", "'gated'", ":", "\n", "        ", "shape", "=", "(", "720", ",", "1280", ")", "\n", "mat44", "=", "np", ".", "array", "(", "\n", "[", "[", "0.02597508", ",", "-", "0.99964206", ",", "0.00640694", ",", "-", "0.03133254", "]", ",", "\n", "[", "0.00202653", ",", "-", "0.00635643", ",", "-", "0.99997774", ",", "-", "0.44874239", "]", ",", "\n", "[", "0.99966054", ",", "0.02598749", ",", "0.00186069", ",", "-", "0.7072447", "]", ",", "\n", "[", "0.", ",", "0.", ",", "0.", ",", "1.", "]", "]", "\n", ")", "\n", "P", "=", "np", ".", "array", "(", "\n", "[", "[", "2322.4", ",", "0.0", ",", "667.777", ",", "0.0", "]", ",", "\n", "[", "0.0", ",", "2322.4", ",", "261.144", ",", "0.0", "]", ",", "\n", "[", "0.0", ",", "0.0", ",", "1.0", ",", "0.0", "]", "]", "\n", ")", "\n", "", "elif", "frame", "==", "'rgb_left'", ":", "\n", "        ", "shape", "=", "(", "1024", ",", "1920", ")", "\n", "mat44", "=", "np", ".", "array", "(", "\n", "[", "[", "0.00816556", ",", "-", "0.99996549", ",", "-", "0.00153346", ",", "0.08749686", "]", ",", "\n", "[", "-", "0.00715544", ",", "0.00147505", ",", "-", "0.99997331", ",", "-", "0.41640329", "]", ",", "\n", "[", "0.99994106", ",", "0.00817631", ",", "-", "0.00714315", ",", "-", "0.6955578", "]", ",", "\n", "[", "0.", ",", "0.", ",", "0.", ",", "1.", "]", "]", "\n", ")", "\n", "P", "=", "np", ".", "array", "(", "\n", "[", "[", "2355.7228", ",", "0.0", ",", "988.138054", ",", "0.0", "]", ",", "\n", "[", "0.0", ",", "2355.7228", ",", "508.051838", ",", "0.0", "]", ",", "\n", "[", "0.0", ",", "0.0", ",", "1.0", ",", "0.0", "]", "]", "\n", ")", "\n", "\n", "", "elif", "frame", "==", "'rgb_right'", ":", "\n", "        ", "shape", "=", "(", "1024", ",", "1920", ")", "\n", "mat44", "=", "np", ".", "array", "(", "\n", "[", "[", "0.00816556", ",", "-", "0.99996549", ",", "-", "0.00153346", ",", "0.08749686", "]", ",", "\n", "[", "-", "0.00715544", ",", "0.00147505", ",", "-", "0.99997331", ",", "-", "0.41640329", "]", ",", "\n", "[", "0.99994106", ",", "0.00817631", ",", "-", "0.00714315", ",", "-", "0.6955578", "]", ",", "\n", "[", "0.", ",", "0.", ",", "0.", ",", "1.", "]", "]", "\n", ")", "\n", "P", "=", "np", ".", "array", "(", "\n", "[", "[", "2355.7228", ",", "0.0", ",", "988.138054", ",", "-", "478.200589", "]", ",", "\n", "[", "0.0", ",", "2355.7228", ",", "508.051838", ",", "0.0", "]", ",", "\n", "[", "0.0", ",", "0.0", ",", "1.0", ",", "0.0", "]", "]", "\n", ")", "\n", "\n", "", "depth_map", "=", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "pc", "=", "np", ".", "r_", "[", "pc", ",", "np", ".", "ones", "(", "(", "1", ",", "pc", ".", "shape", "[", "1", "]", ")", ")", "]", "\n", "pc", "=", "np", ".", "dot", "(", "mat44", ",", "pc", ")", "\n", "pc_proj", "=", "np", ".", "dot", "(", "P", ",", "pc", ")", "\n", "\n", "u", "=", "np", ".", "array", "(", "np", ".", "round", "(", "pc_proj", "[", "0", ",", ":", "]", "/", "pc_proj", "[", "2", ",", ":", "]", ")", ".", "astype", "(", "int", ")", ")", ".", "flatten", "(", ")", "\n", "v", "=", "np", ".", "array", "(", "np", ".", "round", "(", "pc_proj", "[", "1", ",", ":", "]", "/", "pc_proj", "[", "2", ",", ":", "]", ")", ".", "astype", "(", "int", ")", ")", ".", "flatten", "(", ")", "\n", "depth", "=", "np", ".", "array", "(", "pc_proj", "[", "2", ",", ":", "]", ")", ".", "flatten", "(", ")", "\n", "\n", "valid", "=", "np", ".", "logical_and", "(", "depth", ">", "1", ",", "np", ".", "logical_and", "(", "np", ".", "logical_and", "(", "u", ">=", "0", ",", "u", "<", "depth_map", ".", "shape", "[", "1", "]", ")", ",", "\n", "np", ".", "logical_and", "(", "v", ">=", "0", ",", "v", "<", "depth_map", ".", "shape", "[", "0", "]", ")", ")", ")", "\n", "\n", "u", "=", "u", "[", "valid", "]", "\n", "v", "=", "v", "[", "valid", "]", "\n", "depth", "=", "depth", "[", "valid", "]", "\n", "depth_map", "[", "v", ",", "u", "]", "=", "depth", "\n", "\n", "return", "depth_map", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.dataset_tools.load_syn.load_rgb": [[6, 11], ["os.path.join", "cv2.imread"], "function", ["None"], ["def", "load_rgb", "(", "root_dir", ",", "sample", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "'rgb_left'", ",", "sample", "+", "'.png'", ")", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.dataset_tools.load_syn.load_gated": [[13, 19], ["os.path.join", "cv2.imread", "numpy.right_shift().astype", "numpy.right_shift"], "function", ["None"], ["", "def", "load_gated", "(", "root_dir", ",", "sample", ",", "slice", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "'gated{}_10bit'", ".", "format", "(", "slice", ")", ",", "sample", "+", "'.png'", ")", "\n", "img", "=", "cv2", ".", "imread", "(", "path", ",", "-", "1", ")", "\n", "img", "=", "np", ".", "right_shift", "(", "img", ",", "2", ")", ".", "astype", "(", "np", ".", "uint8", ")", "# convert from 10bit to 8bit", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.gruberto_Gated2Depth.dataset_tools.load_syn.load_depth": [[21, 26], ["os.path.join", "numpy.load"], "function", ["None"], ["", "def", "load_depth", "(", "root_dir", ",", "sample", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "'depth_compressed'", ",", "sample", "+", "'.npz'", ")", "\n", "depth", "=", "np", ".", "load", "(", "path", ")", "[", "'arr_0'", "]", "\n", "\n", "return", "depth", "\n", "\n"]]}