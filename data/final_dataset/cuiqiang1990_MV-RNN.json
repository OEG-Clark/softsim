{"home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.__init__": [[37, 80], ["numpy.random.RandomState", "theano.tensor.shared_randomstreams.RandomStreams", "theano.tensor.shared_randomstreams.RandomStreams", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.RandomState.randint", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6784\u5efa \u6a21\u578b\u53c2\u6570\n        :param train: \u6dfb\u52a0mask\u540e\u7684\n        :param test: \u6dfb\u52a0mask\u540e\u7684\n        :param n_user: \u7528\u6237\u7684\u771f\u5b9e\u6570\u76ee\n        :param n_item: \u5546\u54c1items\u7684\u771f\u6b63\u6570\u76ee\uff0cinit()\u91cc\u8865\u5168\u4e00\u4e2a\u5546\u54c1\u4f5c\u4e3a\u586b\u5145\u7b26\n        :param n_in: rnn\u8f93\u5165\u5411\u91cf\u7684\u7ef4\u5ea6\n        :param n_hidden: rnn\u9690\u5c42\u5411\u91cf\u7684\u7ef4\u5ea6\n        :return:\n        \"\"\"", "\n", "# \u6765\u81ea\u4e8etheano\u5b98\u7f51\u7684dAE\u90e8\u5206\u3002", "\n", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "123", ")", "\n", "self", ".", "thea_rng", "=", "RandomStreams", "(", "rng", ".", "randint", "(", "2", "**", "30", ")", ")", "# \u65d7\u4e0b\u968f\u673a\u51fd\u6570\u53ef\u5728GPU\u4e0b\u8fd0\u884c\u3002", "\n", "# \u7528mask\u8fdb\u884c\u8865\u5168\u540e\u7684train/test", "\n", "tra_buys_masks", ",", "tra_masks", ",", "tra_buys_neg_masks", "=", "train", "\n", "tes_buys_masks", ",", "tes_masks", ",", "tes_buys_neg_masks", "=", "test", "\n", "self", ".", "tra_buys_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tra_buys_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tes_buys_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tes_buys_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tra_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tra_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tes_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tes_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tra_buys_neg_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tra_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tes_buys_neg_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tes_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "# \u628a\u8d85\u53c2\u6570shared", "\n", "self", ".", "alpha_lambda", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "alpha_lambda", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# \u521d\u59cb\u5316\uff0c\u5148\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u518dself.\u4fee\u9970\u6210\u5b9e\u4f8b\u53d8\u91cf", "\n", "rang", "=", "0.5", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "ui", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "wh", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "h0", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bi", "=", "np", ".", "zeros", "(", "(", "3", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "# \u5efa\u7acb\u53c2\u6570\u3002", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ui", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ui", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "wh", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "wh", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "h0", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0", ")", "\n", "self", ".", "bi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bi", ")", "\n", "# \u5b58\u653e\u8bad\u7ec3\u597d\u7684users\u3001items\u8868\u8fbe\u3002\u7528\u4e8e\u8ba1\u7b97\u6240\u6709users\u5bf9\u6240\u6709items\u7684\u8bc4\u5206\uff1ausers * items", "\n", "trained_items", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "\n", "trained_users", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_user", ",", "n_hidden", ")", ")", "\n", "self", ".", "trained_items", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "trained_items", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "trained_users", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "trained_users", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# \u5185\u5efapredict\u51fd\u6570\u3002\u4e0d\u8981\u5199\u5728\u8fd9\u91cc\uff0c\u5199\u5728\u5b50\u7c7b\u91cc\uff0c\u5426\u5219\u5b50\u7c7b\u91cc\u4f1a\u65e0\u6cd5\u8986\u76d6\u6389\u91cd\u5199\u3002", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.update_neg_masks": [[83, 87], ["GRU.GruBasic.tra_buys_neg_masks.set_value", "GRU.GruBasic.tes_buys_neg_masks.set_value", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_neg_masks", "(", "self", ",", "tra_buys_neg_masks", ",", "tes_buys_neg_masks", ")", ":", "\n", "# \u6bcf\u4e2aepoch\u90fd\u66f4\u65b0\u8d1f\u6837\u672c", "\n", "        ", "self", ".", "tra_buys_neg_masks", ".", "set_value", "(", "np", ".", "asarray", "(", "tra_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ",", "borrow", "=", "True", ")", "\n", "self", ".", "tes_buys_neg_masks", ".", "set_value", "(", "np", ".", "asarray", "(", "tes_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.update_trained_items": [[88, 92], ["GRU.GruBasic.lt.get_value", "GRU.GruBasic.trained_items.set_value", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "        ", "lt", "=", "self", ".", "lt", ".", "get_value", "(", "borrow", "=", "True", ")", "# self.lt\u662fshared\uff0c\u7528get_value()\u3002", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "lt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "# update", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.update_trained_users": [[93, 96], ["GRU.GruBasic.trained_users.set_value", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_users", "(", "self", ",", "all_hus", ")", ":", "\n", "# \u5916\u90e8\u5148\u8ba1\u7b97\u597d\uff0c\u4f20\u8fdb\u6765\u76f4\u63a5\u66f4\u65b0", "\n", "        ", "self", ".", "trained_users", ".", "set_value", "(", "np", ".", "asarray", "(", "all_hus", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "# update", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.compute_sub_all_scores": [[97, 101], ["theano.dot", "theano.dot", "theano.dot.eval"], "methods", ["None"], ["", "def", "compute_sub_all_scores", "(", "self", ",", "start_end", ")", ":", "# \u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u4f20\u8fc7\u6765\u5b9e\u6570\u53c2\u6570", "\n", "# \u8ba1\u7b97users * items\uff0c\u6bcf\u4e2a\u7528\u6237\u5bf9\u6240\u6709\u5546\u54c1\u7684\u8bc4\u5206(\u9700\u53bb\u6389\u586b\u5145\u7b26)", "\n", "        ", "sub_all_scores", "=", "T", ".", "dot", "(", "self", ".", "trained_users", "[", "start_end", "]", ",", "self", ".", "trained_items", "[", ":", "-", "1", "]", ".", "T", ")", "\n", "return", "sub_all_scores", ".", "eval", "(", ")", "# shape=(sub_n_user, n_item)", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.compute_sub_auc_preference": [[102, 115], ["theano.sum", "theano.sum", "theano.sum.eval", "users.reshape"], "methods", ["None"], ["", "def", "compute_sub_auc_preference", "(", "self", ",", "start_end", ")", ":", "\n", "# items.shape=(n_item+1, 20)\uff0c\u56e0\u4e3a\u662fmask\u5f62\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u586b\u5145\u7b26\u3002", "\n", "# \u6ce8\u610f\u77e9\u9635\u5f62\u5f0f\u7684\u7d22\u5f15\u65b9\u5f0f\u3002", "\n", "        ", "tes_items", "=", "self", ".", "trained_items", "[", "self", ".", "tes_buys_masks", "[", "start_end", "]", "]", "# shape=(sub_n_user, len(tes_mask[0]), n_hidden)", "\n", "tes_items_neg", "=", "self", ".", "trained_items", "[", "self", ".", "tes_buys_neg_masks", "[", "start_end", "]", "]", "\n", "users", "=", "self", ".", "trained_users", "[", "start_end", "]", "\n", "shp0", ",", "shp2", "=", "users", ".", "shape", "# shape=(sub_n_user, n_hidden)", "\n", "# \u5229\u7528\u6027\u8d28\uff1a(n_user, 1, n_hidden) * (n_user, len, n_hidden) = (n_user, len, n_hidden)\uff0c\u5373broadcast", "\n", "# \u5229\u7528\u6027\u8d28\uff1anp.sum((n_user, len, n_hidden), axis=2) = (n_user, len)\uff0c", "\n", "#         \u5373\u5f97\u5230\u5404\u7528\u6237\u5bf9test\u91cc\u6b63\u8d1f\u6837\u672c\u7684\u504f\u597d\u503c", "\n", "all_upqs", "=", "T", ".", "sum", "(", "users", ".", "reshape", "(", "(", "shp0", ",", "1", ",", "shp2", ")", ")", "*", "(", "tes_items", "-", "tes_items_neg", ")", ",", "axis", "=", "2", ")", "\n", "all_upqs", "*=", "self", ".", "tes_masks", "[", "start_end", "]", "# \u53ea\u4fdd\u7559\u539f\u5148test items\u5bf9\u5e94\u6709\u6548\u4f4d\u7f6e\u7684\u504f\u597d\u503c", "\n", "return", "all_upqs", ".", "eval", "(", ")", ">", "0", "# \u5c06>0\u7684\u6807\u4e3aTrue, \u4e5f\u5c31\u662f1", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.get_corrupted_input_whole": [[116, 130], ["GRU.GruBasic.thea_rng.binomial", "theano.Rebroadcast", "theano.Rebroadcast"], "methods", ["None"], ["", "def", "get_corrupted_input_whole", "(", "self", ",", "inp", ",", "corruption_prob", ")", ":", "\n", "# \u5904\u74062D\u77e9\u9635\uff1arandomly set whole feature to zero. Matrix.shape=(n, m)", "\n", "# denoising\u65b9\u5f0f0\uff1a\u968f\u673a\u5c06\u67d0\u4e9b\u56fe\u3001\u6587\u7279\u5f81\u6574\u4f53\u6027\u7f6e\u4e3a0", "\n", "# \u6bd4\u5982\u539f\u5148\u4e00\u6761\u5e8f\u5217\u7684\u56fe\u50cf\u7279\u5f81\u662f(num, 1024); \u90a3\u4e480/1\u6982\u7387\u77e9\u9635\u662f(num, 1), T.Rebroadcast\uff0c\u518d\u76f8\u4e58", "\n", "# if corruption_prob < 0. or corruption_prob >= 1.:", "\n", "#     raise Exception('Drop prob must be in interval [0, 1)')", "\n", "        ", "retain_prob", "=", "1.", "-", "corruption_prob", "\n", "randoms", "=", "self", ".", "thea_rng", ".", "binomial", "(", "\n", "size", "=", "(", "inp", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "# shape=(num, 1)", "\n", "n", "=", "1", ",", "\n", "p", "=", "retain_prob", ",", "# p\u662f\u5f971\u7684\u6982\u7387\u3002", "\n", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "randoms", "=", "T", ".", "Rebroadcast", "(", "(", "1", ",", "True", ")", ")", "(", "randoms", ")", "\n", "return", "inp", "*", "randoms", "# shape=(num, 1024)", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.get_corrupted_input_whole_minibatch": [[131, 142], ["GRU.GruBasic.thea_rng.binomial", "theano.Rebroadcast", "theano.Rebroadcast"], "methods", ["None"], ["", "def", "get_corrupted_input_whole_minibatch", "(", "self", ",", "inp", ",", "corruption_prob", ")", ":", "\n", "# \u4eb2\u6d4b\u8868\u660e\uff1a\u5728\u5e8f\u5217\u524d\u505adata\u7684corruption\uff0c\u6548\u679c\u66f4\u597d\u66f4\u7a33\u5b9a\u3002", "\n", "# \u5904\u74063D\u77e9\u9635", "\n", "        ", "retain_prob", "=", "1.", "-", "corruption_prob", "\n", "randoms", "=", "self", ".", "thea_rng", ".", "binomial", "(", "\n", "size", "=", "(", "inp", ".", "shape", "[", "0", "]", ",", "inp", ".", "shape", "[", "1", "]", ",", "1", ")", ",", "# shape=(seq_length, batch_size, 1)", "\n", "n", "=", "1", ",", "\n", "p", "=", "retain_prob", ",", "# p\u662f\u5f971\u7684\u6982\u7387\u3002", "\n", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "randoms", "=", "T", ".", "Rebroadcast", "(", "(", "2", ",", "True", ")", ")", "(", "randoms", ")", "\n", "return", "inp", "*", "randoms", "# shape=(seq_length, batch_size, 1024)", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.dropout": [[143, 158], ["GRU.GruBasic.thea_rng.binomial"], "methods", ["None"], ["", "def", "dropout", "(", "self", ",", "inp", ",", "drop_prob", ")", ":", "\n", "# \u5904\u7406\u5411\u91cf\uff1arandomly set some positions to zero. Vector.shape=(n, )", "\n", "# \u4f8b\u5982\u4e00\u4e2a\u5411\u91cf20\u7ef4\uff0c\u5c31\u670920\u4e2a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u670920\u4e2a\u795e\u7ecf\u5143\u3002", "\n", "# train\u65f6\u505adropout\uff0ctest\u65f6\u8fd8\u662f\u5168\u8fde\u63a5\u3002", "\n", "# if drop_prob < 0. or drop_prob >= 1.:", "\n", "#     raise Exception('Drop prob must be in interval [0, 1)')", "\n", "        ", "retain_prob", "=", "1.", "-", "drop_prob", "# \u53d60.5\u5c31\u53ef\u4ee5\u4e86\u3002", "\n", "randoms", "=", "self", ".", "thea_rng", ".", "binomial", "(", "\n", "size", "=", "inp", ".", "shape", ",", "# \u751f\u6210\u4e0e\u5411\u91cfinp\u540c\u6837\u7ef4\u5ea6\u76840\u30011\u5411\u91cf", "\n", "n", "=", "1", ",", "# \u6bcf\u4e2a\u795e\u7ecf\u5143\u5b9e\u9a8c\u4e00\u6b21", "\n", "p", "=", "retain_prob", ",", "# \u6bcf\u4e2a\u795e\u7ecf\u5143*1\u7684\u6982\u7387\u4e3ap/retain_prob\u3002*0\u7684\u6982\u7387\u4e3adrop_prob", "\n", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "inp", "*=", "randoms", "# \u5c4f\u853d\u67d0\u4e9b\u795e\u7ecf\u5143\uff0c\u91cd\u7f6e\u4e3a0", "\n", "inp", "/=", "retain_prob", "# drop\u5b8c\u540e\u9700\u8981rescale\uff0c\u4ee5\u7ef4\u6301inp\u5728dropout\u524d\u540e\u7684\u6570\u503c\u548c(sum)\u4e0d\u53d8\u3002", "\n", "return", "inp", "# \u76f4\u63a5\u672c\u5730\u4fee\u6539inp\uff0c\u6240\u4ee5\u8c03\u7528\u65f6'self.dropout(x, 0.5)'\u5373\u53ef\u76f4\u63a5\u672c\u5730\u4fee\u6539\u8f93\u5165x\u3002", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.__theano_predict__": [[159, 208], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bi.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ps.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "h.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.arange", "theano.arange", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predict__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bi", "=", "bi", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "# \u9690\u5c42\u662f1\u4e2aGRU Unit\uff1a\u90fd\u53ef\u4ee5\u7528\u8fd9\u4e2a\u7edf\u4e00\u7684\u683c\u5f0f\u3002", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ps", "=", "self", ".", "trained_items", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_hidden))", "\n", "ps", "=", "ps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_hidden)=(157, n, 20)", "\n", "\n", "def", "recurrence", "(", "p_t", ",", "h_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "z_r", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", "[", ":", "2", "]", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", ":", "2", "]", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "[", ":", "2", "]", ")", "\n", "z", ",", "r", "=", "z_r", "[", "0", "]", ".", "T", ",", "z_r", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "c", "=", "tanh", "(", "T", ".", "dot", "(", "ui", "[", "2", "]", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", "2", "]", ",", "(", "r", "*", "h_t_pre1", ")", ".", "T", ")", "+", "bi", "[", "2", "]", ")", "# shape=(20, n)", "\n", "h_t", "=", "(", "T", ".", "ones_like", "(", "z", ")", "-", "z", ")", "*", "h_t_pre1", "+", "z", "*", "c", ".", "T", "# shape=(n, 20)", "\n", "return", "h_t", "\n", "", "h", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "ps", ",", "\n", "outputs_info", "=", "h0", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "\n", "# \u5f97\u5230batch_hts.shape=(n, 20)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbeht\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predict", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic.predict": [[209, 211], ["GRU.GruBasic.seq_predict"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_predict", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic2Units.__init__": [[217, 242], ["GRU.GruBasic.__init__", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "GruBasic2Units", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "# \u521d\u59cb\u5316\uff0c\u5148\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u518dself.\u4fee\u9970\u6210\u5b9e\u4f8b\u53d8\u91cf", "\n", "rang", "=", "0.5", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "mm", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u6a21\u6001\u878d\u5408\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "uix", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "uim", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "whx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "whm", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "h0x", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0m", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bix", "=", "np", ".", "zeros", "(", "(", "3", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bim", "=", "np", ".", "zeros", "(", "(", "3", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "# \u5efa\u7acb\u53c2\u6570\u3002", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mm", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mm", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "uix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uix", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "uim", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uim", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whm", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whm", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "h0x", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0x", ")", "\n", "self", ".", "h0m", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0m", ")", "\n", "self", ".", "bix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bix", ")", "\n", "self", ".", "bim", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bim", ")", "\n", "# \u5185\u5efapredict\u51fd\u6570\u3002\u4e0d\u8981\u5199\u5728\u8fd9\u91cc\uff0c\u5199\u5728\u5b50\u7c7b\u91cc\uff0c\u5426\u5219\u4f1a\u65e0\u6cd5\u7ee7\u627f\u3001\u8986\u76d6\u6389\u91cd\u5199\u3002", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.GruBasic2Units.__theano_predict__": [[245, 302], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bim.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.concatenate", "theano.concatenate", "theano.concatenate.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "xps.dimshuffle", "mps.dimshuffle", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.arange", "theano.arange", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predict__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uim", ",", "whm", "=", "self", ".", "uim", ",", "self", ".", "whm", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0m", "=", "T", ".", "alloc", "(", "self", ".", "h0m", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bim", "=", "T", ".", "alloc", "(", "self", ".", "bim", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "bim", "=", "bim", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "# \u9690\u5c42\u662f2\u4e2aGRU Units\uff1a\u5f53\u7136\u4e5f\u67092\u90e8\u5206\u8f93\u5165\u3002", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "xps", ",", "mps", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "mm", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "xps", ",", "mps", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "mps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "def", "recurrence", "(", "xp_t", ",", "mp_t", ",", "hx_t_pre1", ",", "hm_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "xp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "z_rm", "=", "sigmoid", "(", "T", ".", "dot", "(", "uim", "[", ":", "2", "]", ",", "mp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whm", "[", ":", "2", "]", ",", "hm_t_pre1", ".", "T", ")", "+", "bim", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "zm", ",", "rm", "=", "z_rm", "[", "0", "]", ".", "T", ",", "z_rm", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "xp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "# shape=(20, n)", "\n", "cm", "=", "tanh", "(", "T", ".", "dot", "(", "uim", "[", "2", "]", ",", "mp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whm", "[", "2", "]", ",", "(", "rm", "*", "hm_t_pre1", ")", ".", "T", ")", "+", "bim", "[", "2", "]", ")", "# shape=(20, n)", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "# shape=(n, 20)", "\n", "hm_t", "=", "(", "T", ".", "ones_like", "(", "zm", ")", "-", "zm", ")", "*", "hm_t_pre1", "+", "zm", "*", "cm", ".", "T", "# shape=(n, 20)", "\n", "return", "[", "hx_t", ",", "hm_t", "]", "\n", "", "[", "hx", ",", "hm", "]", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "mps", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0m", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "T", ".", "concatenate", "(", "(", "hx", ",", "hm", ")", ",", "axis", "=", "2", ")", "# h.shape=(157, n, 40)", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 20)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predict", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.OboGru.__init__": [[307, 317], ["GRU.GruBasic.__init__", "GRU.OboGru.__theano_train__", "GRU.OboGru.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "OboGru", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "params", "=", "[", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.OboGru.__theano_train__": [[318, 391], ["theano.ivector", "theano.ivector", "theano.sum", "theano.sum", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.iscalar", "theano.iscalar", "theano.function", "theano.function", "theano.function", "theano.function", "theano.ivector", "theano.ivector", "theano.ivector", "theano.ivector", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.log", "theano.log", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "\n", "tra_mask", "=", "T", ".", "ivector", "(", ")", "\n", "seq_length", "=", "T", ".", "sum", "(", "tra_mask", ")", "# \u6709\u6548\u957f\u5ea6", "\n", "\n", "h0", "=", "self", ".", "h0", "\n", "bi", "=", "self", ".", "bi", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "ivector", "(", ")", ",", "T", ".", "ivector", "(", ")", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((seq_length, n_in))", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "h_t_pre1", ")", ":", "\n", "            ", "z_r", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", "[", ":", "2", "]", ",", "xp_t", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", ":", "2", "]", ",", "h_t_pre1", ")", "+", "bi", "[", ":", "2", "]", ")", "\n", "z", ",", "r", "=", "z_r", "[", "0", "]", ",", "z_r", "[", "1", "]", "\n", "c", "=", "tanh", "(", "T", ".", "dot", "(", "ui", "[", "2", "]", ",", "xp_t", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", "2", "]", ",", "(", "r", "*", "h_t_pre1", ")", ")", "+", "bi", "[", "2", "]", ")", "\n", "h_t", "=", "(", "T", ".", "ones_like", "(", "z", ")", "-", "z", ")", "*", "h_t_pre1", "+", "z", "*", "c", "\n", "upq_t", "=", "T", ".", "dot", "(", "h_t_pre1", ",", "xp_t", "-", "xq_t", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "return", "[", "h_t", ",", "loss_t", "]", "\n", "", "[", "h", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", "]", ",", "\n", "outputs_info", "=", "[", "h0", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", ",", "bi", "]", "]", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "uidx", "=", "T", ".", "iscalar", "(", ")", "# T.iscalar()\u7c7b\u578b\u662f TensorType(int32, )", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidx", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "uidx", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "uidx", "]", ",", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "uidx", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.OboGru.train": [[392, 395], ["GRU.OboGru.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idx", ")", ":", "\n", "# consider the whole user sequence as a mini-batch and perform one update per sequence", "\n", "        ", "return", "self", ".", "seq_train", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.OboRnn.__init__": [[399, 416], ["GRU.GruBasic.__init__", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "GRU.OboRnn.__theano_train__", "GRU.OboRnn.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "OboRnn", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "# \u521d\u59cb\u5316\uff0c\u5148\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u518dself.\u4fee\u9970\u6210\u5b9e\u4f8b\u53d8\u91cf", "\n", "rang", "=", "0.5", "\n", "ui", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_hidden", ",", "n_hidden", ")", ")", "\n", "wh", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_hidden", ",", "n_hidden", ")", ")", "\n", "bi", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "# \u5efa\u7acb\u53c2\u6570\u3002", "\n", "self", ".", "ui", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ui", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "wh", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "wh", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "bi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bi", ")", "\n", "self", ".", "params", "=", "[", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "]", ")", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.OboRnn.__theano_train__": [[417, 481], ["theano.ivector", "theano.ivector", "theano.sum", "theano.sum", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.iscalar", "theano.iscalar", "theano.function", "theano.function", "theano.function", "theano.function", "theano.ivector", "theano.ivector", "theano.ivector", "theano.ivector", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.dot", "theano.dot", "theano.log", "theano.log", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "bi", "=", "self", ".", "bi", "\n", "\n", "tra_mask", "=", "T", ".", "ivector", "(", ")", "\n", "seq_length", "=", "T", ".", "sum", "(", "tra_mask", ")", "# \u6709\u6548\u957f\u5ea6", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "ivector", "(", ")", ",", "T", ".", "ivector", "(", ")", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((seq_length, n_in))", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, n), (n, ))\u5f97\u5230shape=(n, )\uff0c\u4e14\u662f\u77e9\u9635(n, n)\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # RNN\n            h = sigmoid(ux * xp + wh * h_pre1)\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230(1, 1)\n            upq  = h_pre1 * (xp - xq)               # \u6ce8\u610f\uff1a\u8fd9\u91cc\u662f\u7528\u4e0a\u4e2a\u9690\u5c42\u3001\u5f53\u524d\u6b63\u8d1f\u6837\u672c\u8ba1\u7b97\u504f\u597d\uff0c\u4e0d\u662f\u5f53\u524d\u9690\u5c42\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "h_t_pre1", ")", ":", "\n", "            ", "h_t", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", ",", "xp_t", ")", "+", "\n", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ")", "+", "bi", ")", "# shape=(n, ), \u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u503c", "\n", "# \u6539\u6210 h(t) * (xp(t+1) - xq(T+1))\u4e5f\u662f\u53ef\u4ee5\u7684\u3002", "\n", "upq_t", "=", "T", ".", "dot", "(", "h_t_pre1", ",", "xp_t", "-", "xq_t", ")", "# \u6ce8\u610f: \u57fa\u4e8e\u4e0a\u6b21\u7684\u9690\u5c42\u503c\uff0ch(t-1)*(xp(t)-xq(t))", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# \u6ce8\u610f\uff1alog(x)\u5b83\u662f\u4ee5math.e\u4e3a\u5e95\u7684\u3002", "\n", "return", "[", "h_t", ",", "loss_t", "]", "\n", "", "[", "h", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", "]", ",", "\n", "outputs_info", "=", "[", "self", ".", "h0", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", ",", "bi", "]", "]", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "uidx", "=", "T", ".", "iscalar", "(", ")", "# T.iscalar()\u7c7b\u578b\u662f TensorType(int32, )", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidx", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "uidx", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "uidx", "]", ",", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "uidx", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.OboRnn.__theano_predict__": [[482, 527], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.imatrix", "theano.imatrix", "ps.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "h.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.arange", "theano.arange", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predict__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 3, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bi", "=", "bi", ".", "T", "# shape=(20, n)", "\n", "\n", "# \u9690\u5c42\u662f1\u4e2aGRU Unit\uff1a\u90fd\u53ef\u4ee5\u7528\u8fd9\u4e2a\u7edf\u4e00\u7684\u683c\u5f0f\u3002", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ps", "=", "self", ".", "trained_items", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_hidden))", "\n", "ps", "=", "ps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_hidden)=(157, n, 20)", "\n", "\n", "def", "recurrence", "(", "p_t", ",", "h_t_pre1", ")", ":", "\n", "            ", "h_t", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ".", "T", ")", "+", "bi", ")", "# shape=(20, n)", "\n", "h_t", "=", "h_t", ".", "T", "# shape=(n, 20)\u3002\u8fd9\u91cc\u6ce8\u610f", "\n", "return", "h_t", "\n", "", "h", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "ps", ",", "\n", "outputs_info", "=", "h0", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "\n", "# \u5f97\u5230batch_hts.shape=(n, 20)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbeht\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predict", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.OboRnn.train": [[528, 531], ["GRU.OboRnn.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idx", ")", ":", "\n", "# consider the whole user sequence as a mini-batch and perform one update per sequence", "\n", "        ", "return", "self", ".", "seq_train", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.Gru.__init__": [[537, 547], ["GRU.GruBasic.__init__", "GRU.Gru.__theano_train__", "GRU.Gru.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "Gru", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "params", "=", "[", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", ")", "\n", "self", ".", "__theano_train__", "(", "n_hidden", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.Gru.__theano_train__": [[548, 630], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bi.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bi", "=", "bi", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "mask_t", ",", "h_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "z_r", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", "[", ":", "2", "]", ",", "xp_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", ":", "2", "]", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "z", ",", "r", "=", "z_r", "[", "0", "]", ".", "T", ",", "z_r", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "c", "=", "tanh", "(", "T", ".", "dot", "(", "ui", "[", "2", "]", ",", "xp_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", "2", "]", ",", "(", "r", "*", "h_t_pre1", ")", ".", "T", ")", "+", "bi", "[", "2", "]", ")", "# shape=(20, n)", "\n", "h_t", "=", "(", "T", ".", "ones_like", "(", "z", ")", "-", "z", ")", "*", "h_t_pre1", "+", "z", "*", "c", ".", "T", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "xp_t", "-", "xq_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "h_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "h", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bi", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "# 10/30 * l2\uff0c\u4e0d\u884c\u3002", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "# int32", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.Gru.train": [[638, 640], ["GRU.Gru.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.Rnn.__init__": [[644, 663], ["GRU.GruBasic.__init__", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "GRU.Rnn.__theano_train__", "GRU.Rnn.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "Rnn", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "# \u521d\u59cb\u5316\uff0c\u5148\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u518dself.\u4fee\u9970\u6210\u5b9e\u4f8b\u53d8\u91cf", "\n", "rang", "=", "0.5", "\n", "ui", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_hidden", ",", "n_hidden", ")", ")", "\n", "wh", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_hidden", ",", "n_hidden", ")", ")", "\n", "bi", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "# \u5efa\u7acb\u53c2\u6570\u3002", "\n", "self", ".", "ui", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ui", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "wh", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "wh", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "bi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bi", ")", "\n", "self", ".", "params", "=", "[", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", ")", "\n", "self", ".", "__theano_train__", "(", "n_hidden", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.Rnn.__theano_train__": [[664, 743], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bi", "=", "bi", ".", "T", "# shape=(20, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "mask_t", ",", "h_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "h_t", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", ",", "xp_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ".", "T", ")", "+", "bi", ")", "# shape=(n, 20), \u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u503c", "\n", "h_t", "=", "h_t", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "xp_t", "-", "xq_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "h_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "h", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bi", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "# int32", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.Rnn.train": [[744, 746], ["GRU.Rnn.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.Rnn.__theano_predict__": [[747, 792], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.imatrix", "theano.imatrix", "ps.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "h.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.arange", "theano.arange", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predict__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 3, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bi", "=", "bi", ".", "T", "# shape=(20, n)", "\n", "\n", "# \u9690\u5c42\u662f1\u4e2aGRU Unit\uff1a\u90fd\u53ef\u4ee5\u7528\u8fd9\u4e2a\u7edf\u4e00\u7684\u683c\u5f0f\u3002", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ps", "=", "self", ".", "trained_items", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_hidden))", "\n", "ps", "=", "ps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_hidden)=(157, n, 20)", "\n", "\n", "def", "recurrence", "(", "p_t", ",", "h_t_pre1", ")", ":", "\n", "            ", "h_t", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ".", "T", ")", "+", "bi", ")", "# shape=(20, n)", "\n", "h_t", "=", "h_t", ".", "T", "# shape=(n, 20)\u3002\u8fd9\u91cc\u6ce8\u610f", "\n", "return", "h_t", "\n", "", "h", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "ps", ",", "\n", "outputs_info", "=", "h0", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "\n", "# \u5f97\u5230batch_hts.shape=(n, 20)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbeht\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predict", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.exe_time": [[22, 31], ["time.time", "print", "func", "print", "print", "time.strftime", "time.strftime", "time.localtime", "time.localtime", "time.time"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"-- @%s, {%s} start\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "print", "(", "\"-- @%s, {%s} end\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "print", "(", "\"-- @%.3fs taken for {%s}\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ",", "func", ".", "__name__", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU.main": [[794, 797], ["print"], "function", ["None"], ["", "", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "print", "(", "'... construct the class: GRU'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.exe_time": [[22, 31], ["time.time", "print", "func", "print", "print", "time.strftime", "time.strftime", "time.localtime", "time.localtime", "time.time"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"-- @%s, {%s} start\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "print", "(", "\"-- @%s, {%s} end\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "print", "(", "\"-- @%.3fs taken for {%s}\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ",", "func", ".", "__name__", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_hit_zero_one": [[37, 55], ["numpy.array", "numpy.sum", "seq.append", "seq.append"], "function", ["None"], ["", "def", "fun_hit_zero_one", "(", "user_test_recom", ")", ":", "\n", "    ", "\"\"\"\n    \u6839\u636erecom_list\u4e2ditem\u5728test_lst\u91cc\u7684\u51fa\u73b0\u60c5\u51b5\u751f\u6210\u4e0erecom_list\u7b49\u957f\u76840/1\u5e8f\u5217\n    0\u8868\u793a\u63a8\u8350\u7684item\u4e0d\u5728test\u91cc\uff0c1\u8868\u793a\u63a8\u8350\u7684item\u5728test\u91cc\n    :param test_lst: \u5355\u4e2a\u7528\u6237\u7684test\u5217\u8868\n    :param recom_lst: \u63a8\u8350\u7684\u5217\u8868\n    :param test_mask: \u5355\u4e2a\u7528\u6237\u7684test\u5217\u8868\u5bf9\u5e94\u7684mask\u5217\u8868\n    :return: \u4e0erecom_list\u7b49\u957f\u76840/1\u5e8f\u5217\u3002\n    \"\"\"", "\n", "test_lst", ",", "recom_lst", ",", "test_mask", ",", "_", "=", "user_test_recom", "\n", "test_lst", "=", "test_lst", "[", ":", "np", ".", "sum", "(", "test_mask", ")", "]", "# \u53d6\u51fa\u6765\u6709\u6548\u7684user_test_list", "\n", "seq", "=", "[", "]", "\n", "for", "e", "in", "recom_lst", ":", "\n", "        ", "if", "e", "in", "test_lst", ":", "# \u547d\u4e2d", "\n", "            ", "seq", ".", "append", "(", "1", ")", "\n", "", "else", ":", "# \u6ca1\u547d\u4e2d", "\n", "            ", "seq", ".", "append", "(", "0", ")", "\n", "", "", "return", "np", ".", "array", "(", "seq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_hit_auc_item_idx": [[57, 77], ["enumerate", "numpy.array", "idxs.append", "idxs.append", "idxs.append"], "function", ["None"], ["", "def", "fun_hit_auc_item_idx", "(", "test_upqs", ")", ":", "\n", "    ", "\"\"\"\n    \u7b97auc\u65f6\uff0c\u5df2\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u6240\u6709test\u91cc\u6b63\u8d1f\u8ba1\u7b97\uff0c\u6b63\u7684\u4e3atrue, \u8d1f\u7684\u4e3afalse\uff0c\u5f97\u5230\u90a3\u4e9b\u4e3atrue\u7684items_id\n    -1\u8868\u793a\u63a8\u8350\u7684item\u4e0d\u5728test\u91cc\uff0cidx\u8868\u793a\u63a8\u8350\u7684item\u5728test\u91cc\u6240\u5bf9\u5e94\u7684item_index\n    :param test_lst: \u5355\u4e2a\u7528\u6237\u7684test\u5217\u8868\n    :param upq_lst: \u6b63\u8d1f\u8ba1\u7b97\u5f97\u51fa\u6765\u7684\u6b63\u8d1f\u5217\u8868\n    :param test_mask: \u5355\u4e2a\u7528\u6237\u7684test\u5217\u8868\u5bf9\u5e94\u7684mask\u5217\u8868\n    :return: \u4e0eupq_lst\u7b49\u957f\u7684\u6807\u53f7\u4e3a1\u5bf9\u5e94\u7684item_idx\u5e8f\u5217\n    \"\"\"", "\n", "test_lst", ",", "upq_lst", ",", "test_mask", ",", "_", "=", "test_upqs", "\n", "idxs", "=", "[", "]", "\n", "for", "i", ",", "e", "in", "enumerate", "(", "test_lst", ")", ":", "\n", "        ", "if", "1", "==", "test_mask", "[", "i", "]", ":", "# \u8fd9\u662f\u524d\u8fb9\u90a3\u5757\u6709\u6548\u7684test", "\n", "            ", "if", "upq_lst", "[", "i", "]", ":", "\n", "                ", "idxs", ".", "append", "(", "e", ")", "\n", "", "else", ":", "\n", "                ", "idxs", ".", "append", "(", "-", "1", ")", "\n", "", "", "else", ":", "# test\u540e\u8fb9\u88650\u7684\u4f4d\u7f6e\u3002", "\n", "            ", "idxs", ".", "append", "(", "-", "1", ")", "\n", "", "", "return", "np", ".", "array", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_hit_recall_item_idx": [[79, 97], ["numpy.array", "numpy.sum", "idxs.append", "idxs.append"], "function", ["None"], ["", "def", "fun_hit_recall_item_idx", "(", "user_test_recom", ")", ":", "\n", "    ", "\"\"\"\n    \u6839\u636erecom_list\u4e2ditem\u5728test_lst\u91cc\u7684\u51fa\u73b0\u60c5\u51b5\u751f\u6210\u4e0erecom_list\u7b49\u957f\u7684-1/idx\u5e8f\u5217\n    -1\u8868\u793a\u63a8\u8350\u7684item\u4e0d\u5728test\u91cc\uff0cidx\u8868\u793a\u63a8\u8350\u7684item\u5728test\u91cc\u6240\u5bf9\u5e94\u7684item_index\n    :param test_lst: \u5355\u4e2a\u7528\u6237\u7684test\u5217\u8868\n    :param recom_lst: \u63a8\u8350\u7684\u5217\u8868\n    :param test_mask: \u5355\u4e2a\u7528\u6237\u7684test\u5217\u8868\u5bf9\u5e94\u7684mask\u5217\u8868\n    :return: \u4e0erecom_list\u7b49\u957f\u7684-1/idx\u5e8f\u5217\u3002\u5f97\u5230\u90a3\u4e9b\u547d\u4e2ditem\u7684idx\u3002\n    \"\"\"", "\n", "test_lst", ",", "recom_lst", ",", "test_mask", ",", "_", "=", "user_test_recom", "\n", "test_lst", "=", "test_lst", "[", ":", "np", ".", "sum", "(", "test_mask", ")", "]", "# \u53d6\u51fa\u6765\u6709\u6548\u7684user_test_list", "\n", "idxs", "=", "[", "]", "\n", "for", "e", "in", "recom_lst", ":", "\n", "        ", "if", "e", "in", "test_lst", ":", "# \u547d\u4e2d", "\n", "            ", "idxs", ".", "append", "(", "e", ")", "\n", "", "else", ":", "# \u6ca1\u547d\u4e2d\u3002\u4e0d\u80fd\u6807\u4e3a0\uff0c\u56e0\u4e3a\u6709\u4e00\u4e2aitem\u7684\u522b\u540d\u662f0", "\n", "            ", "idxs", ".", "append", "(", "-", "1", ")", "# \u4e0d\u8981\u6807\u4e3anp.nan\uff0c\u4f1a\u6709\u5947\u8469\u7684\u9519\u8bef", "\n", "", "", "return", "np", ".", "array", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_item_idx_to_intervals": [[99, 116], ["numpy.array", "int", "range", "math.ceil"], "function", ["None"], ["", "def", "fun_item_idx_to_intervals", "(", "all_item_idxs", ",", "test_i_cou", ",", "p_inters", ")", ":", "\n", "    ", "\"\"\"\n    \u6839\u636e\u6807\u53f7\u77e9\u9635\u627e\u51fa\u6807\u53f7\u4e3a1\u7684item_id\uff0c\u6839\u636e\u5176\u5728test\u91cc\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u8ba1\u7b97\u5206\u522b\u5728\u5404\u4e2a\u533a\u95f4\u91cc\u51fa\u73b0\u4e86\u591a\u5c11\u4ea4\u6613\u91cf\n    :param all_item_idxs: \u547d\u4e2d\u7684item_index\n    :param test_i_cou: test\u91ccitems\u51fa\u73b0\u6b21\u6570\u7684dict\n    :param p_inters: [2, 10, 30]\n    :return: \u6bcf\u4e2a\u533a\u95f4\u91cc\u5404\u6709\u591a\u5c11\u4ea4\u6613\u91cf\n    \"\"\"", "\n", "intervals", "=", "np", ".", "array", "(", "[", "0", "for", "_", "in", "range", "(", "p_inters", "[", "1", "]", ")", "]", ")", "# \u6709\u8fd9\u4e48\u4e9b\u4e2a\u533a\u95f4", "\n", "hit_item_idxs", "=", "[", "idx", "for", "u_idxs", "in", "all_item_idxs", "\n", "for", "idx", "in", "u_idxs", "if", "-", "1", "!=", "idx", "]", "# \u5148\u53d6\u51fa\u6765\u90a3\u4e9bitem_id", "\n", "for", "idx", "in", "hit_item_idxs", ":", "# \u628aitem_id\u5206\u5230\u5404\u4e2a\u533a\u95f4", "\n", "        ", "inter", "=", "int", "(", "math", ".", "ceil", "(", "1.0", "*", "test_i_cou", "[", "idx", "]", "/", "p_inters", "[", "0", "]", ")", ")", "-", "1", "\n", "if", "inter", ">=", "p_inters", "[", "1", "]", "-", "1", ":", "\n", "            ", "inter", "=", "-", "1", "\n", "", "intervals", "[", "inter", "]", "+=", "1", "\n", "", "return", "intervals", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_evaluate_map": [[118, 139], ["numpy.array", "np.array.cumsum", "sum", "list", "len", "numpy.sum", "numpy.nonzero"], "function", ["None"], ["", "def", "fun_evaluate_map", "(", "user_test_recom_zero_one", ")", ":", "\n", "    ", "\"\"\"\n    \u8ba1\u7b97map\u3002\u6240\u5f97\u662f\u5355\u4e2a\u7528\u6237test\u7684\uff0c\u6700\u540e\u6240\u6709\u7528\u6237\u7684\u6c42\u548c\u53d6\u5e73\u5747\n    :param test_lst: \u5355\u4e2a\u7528\u6237\u7684test\u96c6\n    :param zero_one: 0/1\u5e8f\u5217\n    :param test_mask: \u5355\u4e2a\u7528\u6237\u7684test\u5217\u8868\u5bf9\u5e94\u7684mask\u5217\u8868\n    :return:\n    \"\"\"", "\n", "test_lst", ",", "zero_one", ",", "test_mask", ",", "_", "=", "user_test_recom_zero_one", "\n", "test_lst", "=", "test_lst", "[", ":", "np", ".", "sum", "(", "test_mask", ")", "]", "\n", "\n", "zero_one", "=", "np", ".", "array", "(", "zero_one", ")", "\n", "if", "0", "==", "sum", "(", "zero_one", ")", ":", "# \u6ca1\u6709\u547d\u4e2d\u7684", "\n", "        ", "return", "0.0", "\n", "", "zero_one_cum", "=", "zero_one", ".", "cumsum", "(", ")", "# precision\u8981\u7b97\u7d2f\u8ba1\u547d\u4e2d", "\n", "zero_one_cum", "*=", "zero_one", "# \u53d6\u51fa\u547d\u4e2d\u4e3a1\u7684\u90a3\u4e9b\uff0c\u5176\u4f59\u4f4d\u7f6e\u5f970", "\n", "idxs", "=", "list", "(", "np", ".", "nonzero", "(", "zero_one_cum", ")", ")", "[", "0", "]", "# \u5f97\u5230(n,)\u7c7b\u578b\u7684\u975e\u96f6\u7684\u7d22\u5f15array", "\n", "s", "=", "0.0", "\n", "for", "idx", "in", "idxs", ":", "\n", "        ", "s", "+=", "1.0", "*", "zero_one_cum", "[", "idx", "]", "/", "(", "idx", "+", "1", ")", "\n", "", "return", "s", "/", "len", "(", "test_lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_evaluate_ndcg": [[141, 164], ["numpy.array", "min", "range", "sum", "list", "len", "len", "numpy.sum", "numpy.nonzero", "numpy.log2", "numpy.log2"], "function", ["None"], ["", "def", "fun_evaluate_ndcg", "(", "user_test_recom_zero_one", ")", ":", "\n", "    ", "\"\"\"\n    \u8ba1\u7b97ndcg\u3002\u6240\u5f97\u662f\u5355\u4e2a\u7528\u6237test\u7684\uff0c\u6700\u540e\u6240\u6709\u7528\u6237\u7684\u6c42\u548c\u53d6\u5e73\u5747\n    :param test_lst: \u5355\u4e2a\u7528\u6237\u7684test\u96c6\n    :param zero_one: 0/1\u5e8f\u5217\n    :param test_mask: \u5355\u4e2a\u7528\u6237\u7684test\u5217\u8868\u5bf9\u5e94\u7684mask\u5217\u8868\n    :return:\n    \"\"\"", "\n", "test_lst", ",", "zero_one", ",", "test_mask", ",", "_", "=", "user_test_recom_zero_one", "\n", "test_lst", "=", "test_lst", "[", ":", "np", ".", "sum", "(", "test_mask", ")", "]", "\n", "\n", "zero_one", "=", "np", ".", "array", "(", "zero_one", ")", "\n", "if", "0", "==", "sum", "(", "zero_one", ")", ":", "# \u6ca1\u6709\u547d\u4e2d\u7684", "\n", "        ", "return", "0.0", "\n", "", "s", "=", "0.0", "\n", "idxs", "=", "list", "(", "np", ".", "nonzero", "(", "zero_one", ")", ")", "[", "0", "]", "\n", "for", "idx", "in", "idxs", ":", "\n", "        ", "s", "+=", "1.0", "/", "np", ".", "log2", "(", "idx", "+", "2", ")", "\n", "", "m", "=", "0.0", "\n", "length", "=", "min", "(", "len", "(", "test_lst", ")", ",", "len", "(", "zero_one", ")", ")", "# \u5e8f\u5217\u77ed\u7684\uff0c\u90fd\u547d\u4e2d\u4e3a1\uff0c\u6b64\u65f6\u662f\u6700\u4f18\u60c5\u51b5", "\n", "for", "idx", "in", "range", "(", "length", ")", ":", "\n", "        ", "m", "+=", "1.0", "/", "np", ".", "log2", "(", "idx", "+", "2", ")", "\n", "", "return", "s", "/", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_idxs_of_max_n_score": [[166, 174], ["numpy.argpartition"], "function", ["None"], ["", "def", "fun_idxs_of_max_n_score", "(", "user_scores_to_all_items", ",", "top_k", ")", ":", "\n", "# a = np.asarray([5, 4, 3, 2, 1, 0])  # \u5404item_idx\u7684\u5f97\u5206", "\n", "# b = np.argpartition(a, -3)[-3:]     # \u524d3\u4e2a\u5f97\u5206\u6700\u5927\u7684idx", "\n", "# t = [0, 1, 2]", "\n", "# print(set(b) == set(t))     # True\u3002\u4e0e\u987a\u5e8f\u65e0\u5173\u3002", "\n", "\n", "# \u4ece\u4e00\u4e2a\u5411\u91cf\u91cc\u627e\u5230\u524dn\u4e2a\u5927\u6570\u6240\u5bf9\u5e94\u7684index", "\n", "    ", "return", "np", ".", "argpartition", "(", "user_scores_to_all_items", ",", "-", "top_k", ")", "[", "-", "top_k", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_sort_idxs_max_to_min": [[176, 187], ["numpy.argsort"], "function", ["None"], ["", "def", "fun_sort_idxs_max_to_min", "(", "user_max_n_idxs_scores", ")", ":", "\n", "# a = np.asarray([5, 4, 3, 2, 1, 0])  # \u5404item_idx\u7684\u5f97\u5206", "\n", "# b = np.argpartition(a, -3)[-3:]     # \u524d3\u4e2a\u5f97\u5206\u6700\u5927\u7684idx", "\n", "# c = b[np.argsort(a[b])][::-1]       # \u6700\u5de6\u4fa7\u7684idx\u5bf9\u5e94\u7684\u5f97\u5206\u6700\u5927\u3002", "\n", "# t = [0, 1, 2]", "\n", "# print(list(c) == t)         # True\u3002\u4e0e\u987a\u5e8f\u6709\u5173\u3002", "\n", "\n", "# \u6309\u7167\u524dn\u4e2a\u5927\u6570index\u5bf9\u5e94\u7684\u5177\u4f53\u503c\u7531\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5373\u6700\u5de6\u4fa7\u7684index\u5bf9\u5e94\u539f\u5f97\u5206\u503c\u7684\u6700\u5927\u5b9e\u6570\u503c", "\n", "# \u5c31\u662f\u751f\u6210\u7684\u63a8\u8350items\u5217\u8868\u91cc\uff0c\u6700\u5de6\u4fa7\u7684item_idx\u662f\u5f97\u5206\u6700\u9ad8\u7684", "\n", "    ", "idxs", ",", "scores", "=", "user_max_n_idxs_scores", "# idxs\u662fn\u4e2a\u5f97\u5206\u6700\u5927\u7684items\uff0cscores\u662f\u6240\u6709items\u7684\u5f97\u5206\u3002", "\n", "return", "idxs", "[", "np", ".", "argsort", "(", "scores", "[", "idxs", "]", ")", "]", "[", ":", ":", "-", "1", "]", "# idxs\u6309\u7167\u5bf9\u5e94\u5f97\u5206\u7531\u5927\u5230\u5c0f\u6392\u5217", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_predict_auc_recall_map_ndcg": [[189, 313], ["numpy.asarray", "numpy.apply_along_axis", "Valuate.fun_item_idx_to_intervals", "numpy.array", "fun_item_idx_to_intervals.cumsum", "range", "numpy.asarray", "numpy.array", "numpy.apply_along_axis", "Valuate.fun_item_idx_to_intervals", "numpy.array", "fun_item_idx_to_intervals.cumsum", "model.compute_sub_auc_preference", "np.asarray.extend", "numpy.sum", "len", "model.compute_sub_all_scores", "numpy.apply_along_axis", "numpy.apply_along_axis", "np.asarray.extend", "np.array.copy", "np.array.copy", "np.array.copy", "np.array.copy", "np.array.copy", "np.array.copy", "numpy.sum", "numpy.apply_along_axis", "numpy.sum", "numpy.apply_along_axis", "numpy.mean", "numpy.apply_along_axis", "numpy.mean", "numpy.arange", "numpy.sum", "numpy.array", "sum", "sum", "numpy.array", "sum", "sum", "len", "zip", "numpy.array", "numpy.array", "numpy.sum", "numpy.sum", "len", "numpy.array", "numpy.array", "zip", "zip", "zip", "zip", "zip"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_item_idx_to_intervals", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_item_idx_to_intervals", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.compute_sub_auc_preference", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.compute_sub_all_scores"], ["", "def", "fun_predict_auc_recall_map_ndcg", "(", "\n", "p", ",", "model", ",", "best", ",", "epoch", ",", "starts_ends_auc", ",", "starts_ends_tes", ",", "\n", "tes_buys_masks", ",", "tes_masks", ",", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", ":", "\n", "# ------------------------------------------------------------------------------------------------------------------", "\n", "# \u6ce8\u610f\uff1a\u5f53zip\u91cc\u7684\u6240\u6709\u5b50\u9879tes_buys_masks, all_upqs\u7ef4\u5ea6\u4e00\u81f4\u65f6\uff0c\u4e5f\u5c31\u662f\u5b50\u9879\u7684\u6bcf\u884c\u6bcf\u5217\u957f\u5ea6\u90fd\u4e00\u6837\u3002", "\n", "#      zip\u540e\u7684arr\u4f1a\u53d8\u6210\u4e09\u7ef4\u77e9\u9635\uff0c\u626b\u63cfaxis=1\u4f1a\u51fa\u9519\u5f97\u5230\u7684\u4e00\u884c\u5b9e\u9645\u4e0a\u662f2d array\uff0c\u6240\u4ee5\u540e\u8fb9\u5355\u72ec\u52a0\u4e00\u5217 append \u907f\u514d\u8be5\u95ee\u9898\u3002", "\n", "    ", "append", "=", "[", "[", "0", "]", "for", "_", "in", "np", ".", "arange", "(", "len", "(", "tes_buys_masks", ")", ")", "]", "\n", "\n", "# ------------------------------------------------------------------------------------------------------------------", "\n", "# auc", "\n", "all_upqs", "=", "[", "]", "# shape = tes_buys_masks.shape", "\n", "for", "start_end", "in", "starts_ends_auc", ":", "\n", "        ", "sub_all_upqs", "=", "model", ".", "compute_sub_auc_preference", "(", "start_end", ")", "\n", "all_upqs", ".", "extend", "(", "sub_all_upqs", ")", "\n", "", "all_upqs", "=", "np", ".", "asarray", "(", "all_upqs", ")", "\n", "# \u8ba1\u7b97\uff1aauc_intervals\u7684\u5f53\u524depoch\u503c\u3002", "\n", "auc", "=", "1.0", "*", "np", ".", "sum", "(", "all_upqs", ")", "/", "np", ".", "sum", "(", "tes_masks", ")", "# \u5168\u90e8items\u3002sum(tes_masks)\u662f\u6309\u5217\u52a0\u548c\uff0c\u4e0d\u5bf9\u3002", "\n", "# \u627e\u51faall_upqs\u91cc\u6807\u4e3atrue\u7684\u90a3\u4e9bitems\u7684\u6807\u53f7", "\n", "auc_item_idxs", "=", "np", ".", "apply_along_axis", "(", "# \u627e\u51faall_upqs\u91cc\u6807\u4e3atrue\u7684\u90a3\u4e9bitems\u7684\u6807\u53f7", "\n", "func1d", "=", "fun_hit_auc_item_idx", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "all_upqs", ",", "tes_masks", ",", "append", ")", ")", ")", "\n", "auc_intervals", "=", "fun_item_idx_to_intervals", "(", "\n", "auc_item_idxs", ",", "\n", "test_i_cou", ",", "\n", "p", "[", "'intervals'", "]", ")", "\n", "\n", "# \u4fdd\u5b58\uff1a\u4fdd\u5b58auc\u7684\u6700\u4f73\u503c", "\n", "auc_cold_active", "=", "np", ".", "array", "(", "[", "sum", "(", "auc_intervals", "[", ":", "2", "]", ")", ",", "sum", "(", "auc_intervals", "[", "2", ":", "]", ")", "]", ")", "\n", "auc_intervals_cumsum", "=", "auc_intervals", ".", "cumsum", "(", ")", "# \u6700\u540e\u4e00\u4e2a\u503c\u548cAUC\u603b\u503c\u76f8\u7b49\uff0c\u5c31\u8868\u660eauc_intervals\u6ca1\u6709\u8ba1\u7b97\u9519\u8bef\u3002", "\n", "if", "auc", ">", "best", ".", "best_auc", ":", "\n", "        ", "best", ".", "best_auc", "=", "auc", "\n", "best", ".", "best_epoch_auc", "=", "epoch", "\n", "best", ".", "best_auc_cold_active", "=", "1.0", "*", "auc_cold_active", "/", "test_i_cold_active", "\n", "best", ".", "best_auc_intervals_cumsum", "=", "1.0", "*", "auc_intervals_cumsum", "/", "test_i_intervals_cumsum", "\n", "\n", "# ------------------------------------------------------------------------------------------------------------------", "\n", "# recall, map, ndcg", "\n", "", "at_nums", "=", "p", "[", "'at_nums'", "]", "# [5, 10, 15, 20, 30, 50]", "\n", "ranges", "=", "range", "(", "len", "(", "at_nums", ")", ")", "\n", "\n", "# \u8ba1\u7b97\uff1a\u6240\u6709\u7528\u6237\u5bf9\u6240\u6709\u5546\u54c1\u9884\u6d4b\u5f97\u5206\u7684\u524d50\u4e2a\u3002", "\n", "# \u4e0d\u4f1a\u9884\u6d4b\u51fa\u6765\u6dfb\u52a0\u7684\u90a3\u4e2a\u865a\u62df\u5546\u54c1\uff0c\u56e0\u4e3a\u5148\u628a\u5b83\u4eceitem\u8868\u8fbe\u91cc\u53bb\u6389", "\n", "# \u6ce8\u610f\u77e9\u9635\u5f62\u5f0f\u7684\u7d22\u5f15 all_scores[0, rank]\uff1a\u8868\u793aall_scores\u7684\u5404\u884c\u91cc\u53d6\u7684\u5404\u4e2a\u5217\u503c\u662frank\u91cc\u7684\u5404\u9879", "\n", "all_ranks", "=", "[", "]", "# shape=(n, 50)", "\n", "for", "start_end", "in", "starts_ends_tes", ":", "\n", "        ", "sub_all_scores", "=", "model", ".", "compute_sub_all_scores", "(", "start_end", ")", "# shape=(sub_n_user, n_item)", "\n", "sub_score_ranks", "=", "np", ".", "apply_along_axis", "(", "\n", "func1d", "=", "fun_idxs_of_max_n_score", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "sub_all_scores", ",", "\n", "top_k", "=", "at_nums", "[", "-", "1", "]", ")", "\n", "sub_all_ranks", "=", "np", ".", "apply_along_axis", "(", "\n", "func1d", "=", "fun_sort_idxs_max_to_min", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "sub_score_ranks", ",", "sub_all_scores", ")", ")", ")", "\n", "all_ranks", ".", "extend", "(", "sub_all_ranks", ")", "\n", "del", "sub_all_scores", "\n", "", "all_ranks", "=", "np", ".", "asarray", "(", "all_ranks", ")", "\n", "\n", "# \u8ba1\u7b97\uff1arecall\u3001map\u3001ndcg\u5f53\u524depoch\u7684\u503c", "\n", "arr", "=", "np", ".", "array", "(", "[", "0.0", "for", "_", "in", "ranges", "]", ")", "\n", "recall", ",", "precis", ",", "f1scor", ",", "map_", ",", "ndcg", "=", "arr", ".", "copy", "(", ")", ",", "arr", ".", "copy", "(", ")", ",", "arr", ".", "copy", "(", ")", ",", "arr", ".", "copy", "(", ")", ",", "arr", ".", "copy", "(", ")", "\n", "hits", ",", "denominator_recalls", "=", "arr", ".", "copy", "(", ")", ",", "np", ".", "sum", "(", "tes_masks", ")", "# recall\u7684\u5206\u6bcd\uff0c\u8981\u9884\u6d4b\u8fd9\u4e48\u4e9bitems", "\n", "for", "k", "in", "ranges", ":", "# \u6bcf\u6b21\u8003\u5bdf\u67d0\u4e2aat\u503c\u4e0b\u7684\u547d\u4e2d\u60c5\u51b5", "\n", "        ", "recoms", "=", "all_ranks", "[", ":", ",", ":", "at_nums", "[", "k", "]", "]", "# \u5411\u6bcf\u540duser\u63a8\u8350\u8fd9\u4e9b", "\n", "# \u9010\u884c\uff0c\u5f97\u5230recom_lst\u5728test_lst\u91cc\u7684\u547d\u4e2d\u60c5\u51b5\uff0c\u8fd4\u56de\u4e0erecom_lst\u7b49\u957f\u76840/1\u5e8f\u5217\uff0c1\u8868\u793a\u9884\u6d4b\u7684\u8be5item\u5728user_test\u91cc", "\n", "all_zero_ones", "=", "np", ".", "apply_along_axis", "(", "\n", "func1d", "=", "fun_hit_zero_one", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "recoms", ",", "tes_masks", ",", "append", ")", ")", ")", "# shape=(n_user, at_nums[k])", "\n", "hits", "[", "k", "]", "=", "np", ".", "sum", "(", "all_zero_ones", ")", "\n", "recall", "[", "k", "]", "=", "1.0", "*", "np", ".", "sum", "(", "all_zero_ones", ")", "/", "denominator_recalls", "\n", "precis", "[", "k", "]", "=", "1.0", "*", "np", ".", "sum", "(", "all_zero_ones", ")", "/", "(", "at_nums", "[", "k", "]", "*", "len", "(", "all_zero_ones", ")", ")", "\n", "f1scor", "[", "k", "]", "=", "2.0", "*", "recall", "[", "k", "]", "*", "precis", "[", "k", "]", "/", "(", "recall", "[", "k", "]", "+", "precis", "[", "k", "]", ")", "\n", "all_maps", "=", "np", ".", "apply_along_axis", "(", "\n", "func1d", "=", "fun_evaluate_map", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "all_zero_ones", ",", "tes_masks", ",", "append", ")", ")", ")", "\n", "map_", "[", "k", "]", "=", "np", ".", "mean", "(", "all_maps", ")", "\n", "all_ndcgs", "=", "np", ".", "apply_along_axis", "(", "\n", "func1d", "=", "fun_evaluate_ndcg", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "all_zero_ones", ",", "tes_masks", ",", "append", ")", ")", ")", "\n", "ndcg", "[", "k", "]", "=", "np", ".", "mean", "(", "all_ndcgs", ")", "\n", "\n", "# \u8ba1\u7b97\uff1ahit_intervals\u7684\u5f53\u524depoch\u503c\u3002\u53d6recall@30", "\n", "", "recoms", "=", "all_ranks", "[", ":", ",", ":", "p", "[", "'intervals'", "]", "[", "2", "]", "]", "\n", "recall_item_idxs", "=", "np", ".", "apply_along_axis", "(", "# \u627e\u51farecoms\u91cc\u51fa\u73b0\u5728test\u91cc\u7684\u90a3\u4e9bitems\u7684\u6807\u53f7", "\n", "func1d", "=", "fun_hit_recall_item_idx", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "recoms", ",", "tes_masks", ",", "append", ")", ")", ")", "\n", "hit_intervals", "=", "fun_item_idx_to_intervals", "(", "\n", "recall_item_idxs", ",", "\n", "test_i_cou", ",", "\n", "p", "[", "'intervals'", "]", ")", "\n", "\n", "# \u4fdd\u5b58\uff1arecall/map/ndcg/hit_interval\u7684\u6700\u4f73\u503c", "\n", "# recall and intervals", "\n", "hit_cold_active", "=", "np", ".", "array", "(", "[", "sum", "(", "hit_intervals", "[", ":", "2", "]", ")", ",", "sum", "(", "hit_intervals", "[", "2", ":", "]", ")", "]", ")", "\n", "hit_intervals_cumsum", "=", "hit_intervals", ".", "cumsum", "(", ")", "\n", "for", "k", "in", "ranges", ":", "\n", "        ", "if", "recall", "[", "k", "]", ">", "best", ".", "best_recall", "[", "k", "]", ":", "\n", "            ", "best", ".", "best_recall", "[", "k", "]", "=", "recall", "[", "k", "]", "\n", "best", ".", "best_epoch_recall", "[", "k", "]", "=", "epoch", "\n", "if", "p", "[", "'intervals'", "]", "[", "2", "]", "==", "at_nums", "[", "k", "]", ":", "# recall@30\u7684\u533a\u95f4\u5212\u5206", "\n", "                ", "best", ".", "best_recalls_cold_active", "=", "1.0", "*", "hit_cold_active", "/", "test_i_cold_active", "\n", "best", ".", "best_recalls_intervals_cumsum", "=", "1.0", "*", "hit_intervals_cumsum", "/", "test_i_intervals_cumsum", "\n", "# map and ndcg", "\n", "", "", "", "for", "k", "in", "ranges", ":", "\n", "        ", "if", "precis", "[", "k", "]", ">", "best", ".", "best_precis", "[", "k", "]", ":", "\n", "            ", "best", ".", "best_precis", "[", "k", "]", "=", "precis", "[", "k", "]", "\n", "best", ".", "best_epoch_precis", "[", "k", "]", "=", "epoch", "\n", "", "if", "f1scor", "[", "k", "]", ">", "best", ".", "best_f1scor", "[", "k", "]", ":", "\n", "            ", "best", ".", "best_f1scor", "[", "k", "]", "=", "f1scor", "[", "k", "]", "\n", "best", ".", "best_epoch_f1scor", "[", "k", "]", "=", "epoch", "\n", "", "if", "map_", "[", "k", "]", ">", "best", ".", "best_map", "[", "k", "]", ":", "\n", "            ", "best", ".", "best_map", "[", "k", "]", "=", "map_", "[", "k", "]", "\n", "best", ".", "best_epoch_map", "[", "k", "]", "=", "epoch", "\n", "", "if", "ndcg", "[", "k", "]", ">", "best", ".", "best_ndcg", "[", "k", "]", ":", "\n", "            ", "best", ".", "best_ndcg", "[", "k", "]", "=", "ndcg", "[", "k", "]", "\n", "best", ".", "best_epoch_ndcg", "[", "k", "]", "=", "epoch", "\n", "", "", "del", "all_upqs", ",", "all_ranks", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_predict_pop_random": [[315, 396], ["range", "numpy.array", "numpy.apply_along_axis", "Valuate.fun_item_idx_to_intervals", "numpy.array", "fun_item_idx_to_intervals.cumsum", "numpy.apply_along_axis", "Valuate.fun_item_idx_to_intervals", "numpy.array", "fun_item_idx_to_intervals.cumsum", "len", "np.array.copy", "np.array.copy", "np.array.copy", "np.array.copy", "np.array.copy", "np.array.copy", "numpy.sum", "numpy.apply_along_axis", "numpy.sum", "numpy.apply_along_axis", "numpy.mean", "numpy.apply_along_axis", "numpy.mean", "numpy.arange", "numpy.sum", "numpy.array", "sum", "sum", "len", "numpy.sum", "numpy.array", "sum", "sum", "numpy.array", "numpy.sum", "numpy.sum", "len", "numpy.array", "numpy.array", "zip", "zip", "zip", "zip", "zip"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_item_idx_to_intervals", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_item_idx_to_intervals"], ["", "def", "fun_predict_pop_random", "(", "\n", "p", ",", "best", ",", "all_upqs", ",", "all_ranks", ",", "\n", "tes_buys_masks", ",", "tes_masks", ",", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", ":", "\n", "\n", "    ", "append", "=", "[", "[", "0", "]", "for", "_", "in", "np", ".", "arange", "(", "len", "(", "tes_buys_masks", ")", ")", "]", "\n", "\n", "# \u8ba1\u7b97\uff1aAUC\u3002", "\n", "if", "all_upqs", "is", "not", "None", ":", "\n", "        ", "auc", "=", "1.0", "*", "np", ".", "sum", "(", "all_upqs", ")", "/", "np", ".", "sum", "(", "tes_masks", ")", "# \u5168\u90e8items", "\n", "\n", "auc_item_idxs", "=", "np", ".", "apply_along_axis", "(", "# \u627e\u51faall_upqs\u91cc\u6807\u4e3atrue\u7684\u90a3\u4e9bitems\u7684\u6807\u53f7", "\n", "func1d", "=", "fun_hit_auc_item_idx", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "all_upqs", ",", "tes_masks", ",", "append", ")", ")", ")", "\n", "auc_intervals", "=", "fun_item_idx_to_intervals", "(", "\n", "auc_item_idxs", ",", "\n", "test_i_cou", ",", "\n", "p", "[", "'intervals'", "]", ")", "\n", "# \u4fdd\u5b58auc", "\n", "auc_cold_active", "=", "np", ".", "array", "(", "[", "sum", "(", "auc_intervals", "[", ":", "2", "]", ")", ",", "sum", "(", "auc_intervals", "[", "2", ":", "]", ")", "]", ")", "\n", "auc_intervals_cumsum", "=", "auc_intervals", ".", "cumsum", "(", ")", "\n", "best", ".", "best_auc", "=", "auc", "\n", "best", ".", "best_auc_cold_active", "=", "1.0", "*", "auc_cold_active", "/", "test_i_cold_active", "\n", "best", ".", "best_auc_intervals_cumsum", "=", "1.0", "*", "auc_intervals_cumsum", "/", "test_i_intervals_cumsum", "\n", "\n", "", "at_nums", "=", "p", "[", "'at_nums'", "]", "\n", "ranges", "=", "range", "(", "len", "(", "at_nums", ")", ")", "\n", "# \u8ba1\u7b97\uff1arecall\u3001map\u3001ndcg\u5f53\u524depoch\u7684\u503c", "\n", "arr", "=", "np", ".", "array", "(", "[", "0.0", "for", "_", "in", "ranges", "]", ")", "\n", "recall", ",", "precis", ",", "f1scor", ",", "map_", ",", "ndcg", "=", "arr", ".", "copy", "(", ")", ",", "arr", ".", "copy", "(", ")", ",", "arr", ".", "copy", "(", ")", ",", "arr", ".", "copy", "(", ")", ",", "arr", ".", "copy", "(", ")", "\n", "hits", ",", "denominator_recalls", "=", "arr", ".", "copy", "(", ")", ",", "np", ".", "sum", "(", "tes_masks", ")", "# recall\u7684\u5206\u6bcd\uff0c\u8981\u9884\u6d4b\u8fd9\u4e48\u4e9bitems", "\n", "for", "k", "in", "ranges", ":", "# \u6bcf\u6b21\u8003\u5bdf\u67d0\u4e2aat\u503c\u4e0b\u7684\u547d\u4e2d\u60c5\u51b5", "\n", "        ", "recoms", "=", "all_ranks", "[", ":", ",", ":", "at_nums", "[", "k", "]", "]", "# \u5411\u6bcf\u540duser\u63a8\u8350\u8fd9\u4e9b", "\n", "# \u5f97\u5230predict\u7684\u6bcf\u884c\u5728test_buys\u6bcf\u884c\u91cc\u7684\u547d\u4e2d\u60c5\u51b5\uff0c\u8fd4\u56de\u4e0epredict\u7b49\u957f\u76840/1\u5e8f\u5217\uff0c1\u8868\u793a\u9884\u6d4b\u7684\u8be5item\u5728user_test\u91cc", "\n", "all_zero_ones", "=", "np", ".", "apply_along_axis", "(", "\n", "func1d", "=", "fun_hit_zero_one", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "recoms", ",", "tes_masks", ",", "append", ")", ")", ")", "# shape=(n_user, at_nums[k])", "\n", "hits", "[", "k", "]", "=", "np", ".", "sum", "(", "all_zero_ones", ")", "\n", "recall", "[", "k", "]", "=", "1.0", "*", "np", ".", "sum", "(", "all_zero_ones", ")", "/", "denominator_recalls", "\n", "precis", "[", "k", "]", "=", "1.0", "*", "np", ".", "sum", "(", "all_zero_ones", ")", "/", "(", "at_nums", "[", "k", "]", "*", "len", "(", "all_zero_ones", ")", ")", "\n", "f1scor", "[", "k", "]", "=", "2.0", "*", "recall", "[", "k", "]", "*", "precis", "[", "k", "]", "/", "(", "recall", "[", "k", "]", "+", "precis", "[", "k", "]", ")", "\n", "all_maps", "=", "np", ".", "apply_along_axis", "(", "\n", "func1d", "=", "fun_evaluate_map", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "all_zero_ones", ",", "tes_masks", ",", "append", ")", ")", ")", "\n", "map_", "[", "k", "]", "=", "np", ".", "mean", "(", "all_maps", ")", "\n", "all_ndcgs", "=", "np", ".", "apply_along_axis", "(", "\n", "func1d", "=", "fun_evaluate_ndcg", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "all_zero_ones", ",", "tes_masks", ",", "append", ")", ")", ")", "\n", "ndcg", "[", "k", "]", "=", "np", ".", "mean", "(", "all_ndcgs", ")", "\n", "\n", "# \u8ba1\u7b97\uff1ahit_intervals\u7684\u5f53\u524depoch\u503c\u3002", "\n", "", "recoms", "=", "all_ranks", "[", ":", ",", ":", "p", "[", "'intervals'", "]", "[", "2", "]", "]", "\n", "hit_item_idxs", "=", "np", ".", "apply_along_axis", "(", "# \u627e\u51farecoms\u91cc\u51fa\u73b0\u5728test\u91cc\u7684\u90a3\u4e9bitems\u7684\u6807\u53f7", "\n", "func1d", "=", "fun_hit_recall_item_idx", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "recoms", ",", "tes_masks", ",", "append", ")", ")", ")", "\n", "hit_intervals", "=", "fun_item_idx_to_intervals", "(", "\n", "hit_item_idxs", ",", "\n", "test_i_cou", ",", "\n", "p", "[", "'intervals'", "]", ")", "\n", "\n", "# \u4fdd\u5b58\uff1a\u4fdd\u5b58auc/recall/map/ndcg/hit_interval\u7684\u6700\u4f73\u503c", "\n", "# recall and intervals", "\n", "hit_cold_active", "=", "np", ".", "array", "(", "[", "sum", "(", "hit_intervals", "[", ":", "2", "]", ")", ",", "sum", "(", "hit_intervals", "[", "2", ":", "]", ")", "]", ")", "\n", "hit_intervals_cumsum", "=", "hit_intervals", ".", "cumsum", "(", ")", "\n", "for", "k", "in", "ranges", ":", "\n", "        ", "if", "recall", "[", "k", "]", ">", "best", ".", "best_recall", "[", "k", "]", ":", "\n", "            ", "best", ".", "best_recall", "[", "k", "]", "=", "recall", "[", "k", "]", "\n", "if", "p", "[", "'intervals'", "]", "[", "2", "]", "==", "at_nums", "[", "k", "]", ":", "# recall@30\u7684\u533a\u95f4\u5212\u5206", "\n", "                ", "best", ".", "best_recalls_cold_active", "=", "1.0", "*", "hit_cold_active", "/", "test_i_cold_active", "\n", "best", ".", "best_recalls_intervals_cumsum", "=", "1.0", "*", "hit_intervals_cumsum", "/", "test_i_intervals_cumsum", "\n", "# map and ndcg", "\n", "", "", "", "for", "k", "in", "ranges", ":", "\n", "        ", "best", ".", "best_precis", "[", "k", "]", "=", "precis", "[", "k", "]", "\n", "best", ".", "best_f1scor", "[", "k", "]", "=", "f1scor", "[", "k", "]", "\n", "best", ".", "best_map", "[", "k", "]", "=", "map_", "[", "k", "]", "\n", "best", ".", "best_ndcg", "[", "k", "]", "=", "ndcg", "[", "k", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_save_final_item_feas": [[399, 455], ["numpy.dot", "numpy.dot", "numpy.concatenate", "aliases.keys", "range", "pandas.DataFrame", "pandas.DataFrame.sort_values", "os.path.exists", "datetime.datetime.now", "now.strftime.strftime", "os.path.join", "pandas.DataFrame.to_csv", "print", "model.lt.eval", "model.fi.eval", "model.ft.eval", "model.ei.eval", "model.vt.eval", "len", "feas.append", "print", "os.makedirs", "print", "tmp_save.append", "str"], "function", ["None"], ["", "", "def", "fun_save_final_item_feas", "(", "\n", "path", ",", "model_name", ",", "model", ",", "\n", "aliases", ")", ":", "\n", "# \u8c03\u7528\u793a\u4f8b", "\n", "# if epoch == p['epochs'] - 1 and 20 == size:        # \u4fdd\u5b5820\u7ef4\u65f6\u7684\u6700\u540e\u4e00\u6b21\u8fed\u4ee3\u7684item_id\u3001item\u8868\u8fbe", "\n", "#     path = os.path.join(", "\n", "#         os.path.split(__file__)[0],     # \u7a0b\u5e8f\u6587\u4ef6\u6240\u5728\u76ee\u5f55", "\n", "#         '..', 'Results_trained_item_feas',", "\n", "#         PATH.split('/')[-2])        # \u6570\u636e\u5e93\u540d", "\n", "#     fun_save_final_item_feas(", "\n", "#         path,                                   # \u521b\u5efa\u76ee\u5f55\u5e76\u4fdd\u5b58", "\n", "#         aliases_dict, all_its,", "\n", "#         model_name)", "\n", "\n", "# \u7279\u5f81\u8fdb\u4e00\u6b65\u5206\u4e3a5\u4e2a\u6587\u4ef6\uff1alatent, visual, textual, multi-modal, [latent;multi-modal]", "\n", "    ", "lt", ",", "fi", ",", "ft", ",", "ei", ",", "vt", "=", "model", ".", "lt", ".", "eval", "(", ")", ",", "model", ".", "fi", ".", "eval", "(", ")", ",", "model", ".", "ft", ".", "eval", "(", ")", ",", "model", ".", "ei", ".", "eval", "(", ")", ",", "model", ".", "vt", ".", "eval", "(", ")", "\n", "fi", "=", "np", ".", "dot", "(", "fi", ",", "ei", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "ft", "=", "np", ".", "dot", "(", "ft", ",", "vt", ".", "T", ")", "\n", "mm", "=", "fi", "+", "ft", "\n", "items", "=", "np", ".", "concatenate", "(", "(", "lt", ",", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "heads", "=", "[", "'latent'", ",", "'visual'", ",", "'textual'", ",", "'multi-modal(visual+textual)'", ",", "'[latent;multi-modal]'", "]", "\n", "all_its", "=", "[", "lt", ",", "fi", ",", "ft", ",", "mm", ",", "items", "]", "\n", "\n", "# \u76f4\u63a5\u628aaliases\u548call_its\u5408\u5230\u4e00\u5757\uff0ckey\u662f\u539f\u59cbitem_id\uff0cvalue\u662f\u7279\u5f81\u8868\u8fbe", "\n", "keys", "=", "aliases", ".", "keys", "(", ")", "# keys\u662f\u56fe\u7247\u7684id\uff0c\u5c31\u662f\u539f\u59cbitem_id", "\n", "feas", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "all_its", ")", ")", ":", "\n", "        ", "tmp_save", "=", "[", "]", "\n", "one_feas", "=", "all_its", "[", "i", "]", "\n", "for", "item_id", "in", "keys", ":", "\n", "            ", "fea", "=", "one_feas", "[", "aliases", "[", "item_id", "]", "]", "# \u6700\u540e\u7279\u5f81\u6bd4aliases\u591a\u7740\u4e00\u4e2a\u7528\u6765\u6807mask\u7684\uff0c\u8fd9\u4e2a\u4e0d\u4f1a\u88ab\u4fdd\u5b58\u3002", "\n", "tmp_save", ".", "append", "(", "','", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "fea", "]", ")", ")", "\n", "", "feas", ".", "append", "(", "tmp_save", ")", "\n", "\n", "", "cols", "=", "[", "'item_id'", "]", "+", "heads", "\n", "df", "=", "DataFrame", "(", "{", "cols", "[", "0", "]", ":", "[", "i", "for", "i", "in", "keys", "]", ",", "# amazon\u91cc\u7684item_id\u662f\u7b26\u53f7\uff0c\u4e0d\u662f\u6570\u5b57\uff0c\u4e0d\u80fd\u7528int(i)", "\n", "cols", "[", "1", "]", ":", "feas", "[", "0", "]", ",", "\n", "cols", "[", "2", "]", ":", "feas", "[", "1", "]", ",", "\n", "cols", "[", "3", "]", ":", "feas", "[", "2", "]", ",", "\n", "cols", "[", "4", "]", ":", "feas", "[", "3", "]", ",", "\n", "cols", "[", "5", "]", ":", "feas", "[", "4", "]", "}", ")", "\n", "df", ".", "sort_values", "(", "by", "=", "[", "'item_id'", "]", ",", "ascending", "=", "True", ",", "inplace", "=", "True", ")", "\n", "# \u521b\u5efa\u8def\u5f84\u3001\u6587\u4ef6\u540d", "\n", "if", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "print", "(", "'\\t\\tdir exists: {v1}'", ".", "format", "(", "v1", "=", "path", ")", ")", "\n", "", "else", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "print", "(", "'\\t\\tdir is made: {v1}'", ".", "format", "(", "v1", "=", "path", ")", ")", "\n", "", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "now", "=", "now", ".", "strftime", "(", "\"_%Y%m%d_%H%M%S\"", ")", "\n", "path_save_file", "=", "os", ".", "path", ".", "join", "(", "\n", "path", ",", "\n", "'final_feature_of_all_items_20d_on_'", "+", "model_name", "+", "now", "+", "'.txt'", ")", "\n", "\n", "df", ".", "to_csv", "(", "path_save_file", ",", "sep", "=", "' '", ",", "index", "=", "False", ",", "columns", "=", "cols", ")", "\n", "print", "(", "'\\t\\tFinal representations of all items are saved.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_acquire_fil_para": [[457, 474], ["str", "str", "str"], "function", ["None"], ["", "def", "fun_acquire_fil_para", "(", "model_name", ",", "p", ")", ":", "\n", "# \u83b7\u53d6\u8981\u4fdd\u5b58\u7684\u6587\u4ef6\u7684\u6587\u4ef6\u5934\uff08\u5404\u79cd\u53c2\u6570\uff09", "\n", "    ", "if", "'HcaGru'", "in", "model_name", ":", "\n", "        ", "winx", ",", "winh", "=", "p", "[", "'window_x'", "]", ",", "p", "[", "'window_h'", "]", "\n", "", "else", ":", "\n", "        ", "winx", ",", "winh", "=", "0", ",", "0", "\n", "", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", "]", "\n", "batch_sizes", "=", "[", "p", "[", "'batch_size_train'", "]", ",", "p", "[", "'batch_size_test'", "]", "]", "\n", "size", ",", "epoch", ",", "at_nums", "=", "p", "[", "'latent_size'", "]", ",", "p", "[", "'epochs'", "]", ",", "p", "[", "'at_nums'", "]", "\n", "fil_para", "=", "'\\n'", "+", "model_name", "+", "'\\n\\t'", "+", "'winx, winh = {v1}'", ".", "format", "(", "v1", "=", "', '", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "[", "winx", ",", "winh", "]", "]", ")", ")", "+", "'\\n\\t'", "+", "'alpha, lambda = {v1}'", ".", "format", "(", "v1", "=", "', '", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "alpha_lambda", "]", ")", ")", "+", "'\\n\\t'", "+", "'batch_size train, test = {v1}'", ".", "format", "(", "v1", "=", "', '", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "batch_sizes", "]", ")", ")", "+", "'\\n\\t'", "+", "'size, epoch, at_nums = {v1}d, {v2}, top-{v3}'", ".", "format", "(", "v1", "=", "size", ",", "v2", "=", "epoch", ",", "v3", "=", "at_nums", ")", "+", "'\\n'", "\n", "return", "fil_para", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_save_best_and_losses": [[477, 503], ["os.path.exists", "os.path.join", "print", "open", "Valuate.fun_acquire_fil_para", "best.fun_obtain_best", "open.write", "open.write", "open.write", "open.write", "open.close", "print", "os.makedirs", "print"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_acquire_fil_para", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_obtain_best"], ["", "def", "fun_save_best_and_losses", "(", "\n", "path", ",", "model_name", ",", "epoch", ",", "p", ",", "best", ",", "losses", ")", ":", "\n", "# \u5efa\u7acb\u76ee\u5f55\u3001\u6587\u4ef6\u540d", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "print", "(", "'\\t\\tdir exists: {v1}'", ".", "format", "(", "v1", "=", "path", ")", ")", "\n", "", "else", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "print", "(", "'\\t\\tdir is made: {v1}'", ".", "format", "(", "v1", "=", "path", ")", ")", "\n", "", "size", "=", "p", "[", "'latent_size'", "]", "[", "0", "]", "\n", "size", "=", "'{v1}d_'", ".", "format", "(", "v1", "=", "size", ")", "\n", "fil_name", "=", "size", "+", "model_name", "+", "'.txt'", "# \u4e00\u4e2a\u6a21\u578b\u7684\uff0c\u90fd\u653e\u5165\u4e00\u4e2a\u6587\u4ef6\u540d\u91cc\u3002", "\n", "fil", "=", "os", ".", "path", ".", "join", "(", "path", ",", "fil_name", ")", "\n", "print", "(", "'\\t\\tfile name: {v1}'", ".", "format", "(", "v1", "=", "fil_name", ")", ")", "\n", "\n", "# \u5efa\u7acb\u5185\u5bb9\u5e76\u4fdd\u5b58", "\n", "f", "=", "open", "(", "fil", ",", "'a'", ")", "\n", "fil_para", "=", "fun_acquire_fil_para", "(", "model_name", ",", "p", ")", "\n", "fil_best", "=", "best", ".", "fun_obtain_best", "(", "epoch", ")", "# \u91cc\u9762\u6709\u8f93\u51fabest\u65f6\u7684\u65f6\u95f4\u3002", "\n", "fil_loss", "=", "'\\n\\tLosses: '", "+", "'\\n\\t\\t[{v1}]'", ".", "format", "(", "v1", "=", "', '", ".", "join", "(", "losses", ")", ")", "\n", "f", ".", "write", "(", "fil_para", ")", "\n", "f", ".", "write", "(", "fil_best", ")", "\n", "f", ".", "write", "(", "fil_loss", ")", "\n", "f", ".", "write", "(", "'\\n'", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_save_atts": [[506, 580], ["os.path.exists", "os.path.join", "print", "range", "atts_name.append", "pandas.read_csv", "numpy.apply_along_axis", "open", "Valuate.fun_acquire_fil_para", "best.fun_obtain_best", "open.write", "open.write", "open.write", "zip", "open.write", "open.close", "print", "os.makedirs", "print", "range", "atts_name.append", "atts_name_h.append", "enumerate", "at_x.append", "list", "list", "list", "open.write", "tmp.append", "len", "at_x[].append", "numpy.arange", "numpy.asarray", "str", "numpy.arange", "len", "zip", "str", "str"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_acquire_fil_para", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_obtain_best"], ["", "def", "fun_save_atts", "(", "\n", "path", ",", "model_name", ",", "epoch", ",", "p", ",", "best", ",", "\n", "all_ats", ",", "path_dataset", ")", ":", "\n", "# atts_name \u4e3e\u4f8b\uff1awinx = 4, winh = 5\uff0c\u5219\u4fdd\u5b585\u4e2ah\u7684\u6743\u91cd\uff0c\u4e14\u6bcf\u4e2ah\u4e0b\u67094\u4e2ax\u7684\u6743\u91cd\u3002", "\n", "# \u5bf9 winh \u4e2a h \u505a context\uff0c\u800c\u6bcf\u4e2a h \u4e0b\u6709 winx \u4e2a\u8f93\u5165\u505a context\uff0c\u6240\u4ee5(winh, winx)\u3002", "\n", "# atts_name = [", "\n", "#     x1,x2,x3,x4;", "\n", "#     x2,x3,x4,x5;", "\n", "#     x3,x4,x5,x6;", "\n", "#     x4,x5,x6,x7;", "\n", "#     x5,x6,x7,x8;      # winh \u7ec4(winx, )\u7684\u8f93\u5165\u6743\u91cd", "\n", "#     h1,h2,h3,h4,h5]   #  1   \u7ec4(winh, )\u7684\u9690\u5c42\u6743\u91cd", "\n", "    ", "winx", ",", "winh", "=", "p", "[", "'window_x'", "]", ",", "p", "[", "'window_h'", "]", "\n", "windows", "=", "'_x{v1}_h{v2}'", ".", "format", "(", "v1", "=", "winx", ",", "v2", "=", "winh", ")", "\n", "\n", "# \u5efa\u7acb\u76ee\u5f55\u3001\u6587\u4ef6\u540d", "\n", "if", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "print", "(", "'\\t\\tdir exists: {v1}'", ".", "format", "(", "v1", "=", "path", ")", ")", "\n", "", "else", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "print", "(", "'\\t\\tdir is made: {v1}'", ".", "format", "(", "v1", "=", "path", ")", ")", "\n", "", "size", "=", "p", "[", "'latent_size'", "]", "[", "0", "]", "\n", "size", "=", "'{v1}d_'", ".", "format", "(", "v1", "=", "size", ")", "\n", "fil_name", "=", "size", "+", "model_name", "+", "windows", "+", "'.txt'", "# \u4e00\u4e2a\u6a21\u578b\u7684\uff0c\u90fd\u653e\u4e00\u5757", "\n", "fil", "=", "os", ".", "path", ".", "join", "(", "path", ",", "fil_name", ")", "\n", "print", "(", "'\\t\\tfile name: {v1}'", ".", "format", "(", "v1", "=", "fil_name", ")", ")", "\n", "\n", "# \u5efa\u7acbattention\u6743\u91cd\u7684\u540d\u79f0", "\n", "atts_name", ",", "atts_name_h", "=", "[", "]", ",", "[", "]", "# \u5efa\u7acb\u6743\u91cd\u7684\u540d\u5b57", "\n", "for", "i", "in", "range", "(", "1", ",", "winh", "+", "1", ")", ":", "# 1,2,3,4,5", "\n", "        ", "tmp", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "winx", ")", ":", "# 0,1,2,3,4", "\n", "            ", "tmp", ".", "append", "(", "'x'", "+", "str", "(", "i", "+", "j", ")", ")", "# x1,x2,x3,x4; x2,x3,x4,x5;", "\n", "", "atts_name", ".", "append", "(", "','", ".", "join", "(", "tmp", ")", ")", "\n", "atts_name_h", ".", "append", "(", "'h'", "+", "str", "(", "i", ")", ")", "# h1,h2,h3,h4,h5", "\n", "", "atts_name", ".", "append", "(", "','", ".", "join", "(", "atts_name_h", ")", ")", "\n", "atts_name", "=", "'; '", ".", "join", "(", "atts_name", ")", "\n", "\n", "# \u5efa\u7acb\u8981\u4fdd\u5b58\u7684\u5185\u5bb9\u3002\u5934\u51e0\u5217\uff0c\u540e\u8fb9\u7684\u5217\u5c31\u90fd\u662f\u6743\u91cd\u4e86\u3002", "\n", "cols", "=", "[", "'buy_times'", ",", "'buy_different'", ",", "'user_id'", ",", "atts_name", "]", "\n", "buys", "=", "pd", ".", "read_csv", "(", "path_dataset", ",", "sep", "=", "' '", ")", "# \u8bfb\u8fdb\u6765\u540e\uff0c\u662f\u6309\u7167\u6e90\u6587\u6863\u91cc\u7684\u987a\u5e8f\u7684\u3002", "\n", "\n", "# \u6743\u91cd\u5212\u5206\uff1a\u6bcf\u7ec4\u5185\u90e8\u7528','\u9694\u5f00\uff0c\u7ec4\u95f4\u7528'; '\u9694\u5f00", "\n", "def", "truncate3", "(", "uatts_append", ")", ":", "\n", "        ", "uatts", ",", "_", "=", "uatts_append", "\n", "at_h", "=", "uatts", "[", "-", "winh", ":", "]", "# \u540e\u8fb9winh\u4e2a", "\n", "at_x_len", "=", "len", "(", "uatts", ")", "-", "winh", "# \u8fd9\u4e9b\u662fwinh\u7ec4winx\u7684\u603b\u957f\u5ea6\uff0c\u4f46\u5e8f\u5217\u592a\u77ed\u7684\u7528\u6237\u4e0d\u591fwinh\u7ec4\u3002", "\n", "at_x", "=", "[", "[", "]", "for", "_", "in", "np", ".", "arange", "(", "at_x_len", "//", "winx", ")", "]", "\n", "for", "k", ",", "att", "in", "enumerate", "(", "uatts", "[", ":", "-", "winh", "]", ")", ":", "# \u524d\u8fb9winh\u7ec4winx\u7684\u6240\u6709\u7684\u6743\u91cd", "\n", "            ", "num", "=", "k", "//", "winx", "# \u5f97\u5230\u6bcf\u7ec4\u6743\u91cd\u7684\u533a\u95f4index", "\n", "at_x", "[", "num", "]", ".", "append", "(", "att", ")", "\n", "", "at_x", ".", "append", "(", "at_h", ")", "\n", "at_x", "=", "[", "','", ".", "join", "(", "[", "'%0.3f'", "%", "k", "for", "k", "in", "sub", "]", ")", "for", "sub", "in", "at_x", "]", "# \u6bcf\u7ec4\u5185\u90e8\u662f','\u9694\u5f00", "\n", "at_x", "=", "'; '", ".", "join", "(", "at_x", ")", "\n", "return", "at_x", "\n", "", "append", "=", "[", "[", "0", "]", "for", "_", "in", "np", ".", "arange", "(", "len", "(", "all_ats", ")", ")", "]", "\n", "all_ats_str", "=", "np", ".", "apply_along_axis", "(", "\n", "func1d", "=", "truncate3", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "asarray", "(", "zip", "(", "all_ats", ",", "append", ")", ")", ")", "\n", "\n", "# \u9010\u884c\u8bfb\u53d6\u3001\u4fdd\u5b58", "\n", "f", "=", "open", "(", "fil", ",", "'a'", ")", "\n", "fil_para", "=", "fun_acquire_fil_para", "(", "model_name", ",", "p", ")", "\n", "fil_best", "=", "best", ".", "fun_obtain_best", "(", "epoch", ")", "\n", "fil_cols", "=", "'\\n'", "+", "' '", ".", "join", "(", "cols", ")", "\n", "f", ".", "write", "(", "fil_para", ")", "\n", "f", ".", "write", "(", "fil_best", ")", "\n", "f", ".", "write", "(", "fil_cols", ")", "\n", "for", "a", ",", "b", ",", "c", ",", "e", "in", "zip", "(", "list", "(", "buys", "[", "cols", "[", "0", "]", "]", ")", ",", "list", "(", "buys", "[", "cols", "[", "1", "]", "]", ")", ",", "list", "(", "buys", "[", "cols", "[", "2", "]", "]", ")", ",", "all_ats_str", ")", ":", "\n", "        ", "f", ".", "write", "(", "'\\n'", "+", "' '", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "[", "a", ",", "b", ",", "c", ",", "e", "]", "]", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.main": [[619, 622], ["print"], "function", ["None"], ["", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "print", "(", "'... construct the evaluation program'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.OboMvLstm.__init__": [[39, 69], ["LSTM.LstmBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "LSTM_MV.OboMvLstm.__theano_train__", "LSTM_MV.OboMvLstm.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "OboMvLstm", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "mm", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u6a21\u6001\u878d\u5408\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mm", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mm", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "3", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "3", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.OboMvLstm.__theano_train__": [[70, 202], ["theano.ivector", "theano.ivector", "theano.sum", "theano.sum", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.iscalar", "theano.iscalar", "theano.function", "theano.function", "theano.function", "theano.function", "theano.ivector", "theano.ivector", "theano.ivector", "theano.ivector", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "LSTM_MV.OboMvLstm.get_corrupted_input_whole", "LSTM_MV.OboMvLstm.get_corrupted_input_whole", "LSTM_MV.OboMvLstm.get_corrupted_input_whole", "LSTM_MV.OboMvLstm.get_corrupted_input_whole", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.dot", "theano.dot", "theano.log", "theano.log", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.dot", "theano.dot", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.grad", "theano.grad", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole"], ["", "def", "__theano_train__", "(", "self", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev', 'lambda_ae', 'fea_random_zero']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "ivector", "(", ")", "\n", "seq_length", "=", "T", ".", "sum", "(", "tra_mask", ")", "# \u6709\u6548\u957f\u5ea6", "\n", "\n", "c0", "=", "self", ".", "c0", "\n", "h0", "=", "self", ".", "h0", "\n", "bi", "=", "self", ".", "bi", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "ivector", "(", ")", ",", "T", ".", "ivector", "(", ")", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((seq_length, n_txt))", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "zero", "=", "self", ".", "alpha_lambda", "[", "4", "]", "\n", "if", "0.0", "==", "zero", ":", "# \u7528\u5b8c\u5168\u6570\u636e", "\n", "            ", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "c_t_pre1", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ei", ",", "ip_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tp_t", ")", "\n", "mq_t", "=", "T", ".", "dot", "(", "ei", ",", "iq_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tq_t", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mp_t", ")", ")", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "mq_t", ")", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "gates", "=", "T", ".", "dot", "(", "ui", ",", "p_t", ")", "+", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ")", "+", "bi", "# shape=(4, 20)", "\n", "i", ",", "f", ",", "g", ",", "o", "=", "sigmoid", "(", "gates", "[", "0", "]", ")", ",", "sigmoid", "(", "gates", "[", "1", "]", ")", ",", "tanh", "(", "gates", "[", "2", "]", ")", ",", "sigmoid", "(", "gates", "[", "3", "]", ")", "\n", "c_t", "=", "f", "*", "c_t_pre1", "+", "i", "*", "g", "\n", "h_t", "=", "o", "*", "tanh", "(", "c_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "dot", "(", "h_t_pre1", ",", "p_t", "-", "q_t", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "return", "[", "c_t", ",", "h_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "c", ",", "h", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", "]", ",", "\n", "outputs_info", "=", "[", "c0", ",", "h0", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "", "else", ":", "\n", "# \u6bcf\u6761\u5e8f\u5217\u8bad\u7ec3\u524d\u90fd\u968f\u673awhole feature corrupted", "\n", "            ", "ipsc", "=", "self", ".", "get_corrupted_input_whole", "(", "ips", ",", "zero", ")", "\n", "iqsc", "=", "self", ".", "get_corrupted_input_whole", "(", "iqs", ",", "zero", ")", "\n", "tpsc", "=", "self", ".", "get_corrupted_input_whole", "(", "tps", ",", "zero", ")", "\n", "tqsc", "=", "self", ".", "get_corrupted_input_whole", "(", "tqs", ",", "zero", ")", "\n", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "ipc_t", ",", "iqc_t", ",", "tpc_t", ",", "tqc_t", ",", "c_t_pre1", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ei", ",", "ipc_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tpc_t", ")", "\n", "mq_t", "=", "T", ".", "dot", "(", "ei", ",", "iqc_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tqc_t", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mp_t", ")", ")", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "mq_t", ")", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "gates", "=", "T", ".", "dot", "(", "ui", ",", "p_t", ")", "+", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ")", "+", "bi", "# shape=(4, 20)", "\n", "i", ",", "f", ",", "g", ",", "o", "=", "sigmoid", "(", "gates", "[", "0", "]", ")", ",", "sigmoid", "(", "gates", "[", "1", "]", ")", ",", "tanh", "(", "gates", "[", "2", "]", ")", ",", "sigmoid", "(", "gates", "[", "3", "]", ")", "\n", "c_t", "=", "f", "*", "c_t_pre1", "+", "i", "*", "g", "\n", "h_t", "=", "o", "*", "tanh", "(", "c_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "dot", "(", "h_t_pre1", ",", "p_t", "-", "q_t", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "return", "[", "c_t", ",", "h_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "c", ",", "h", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "ipsc", ",", "iqsc", ",", "tpsc", ",", "tqsc", "]", ",", "\n", "outputs_info", "=", "[", "c0", ",", "h0", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "l2_ae", "=", "self", ".", "alpha_lambda", "[", "3", "]", "\n", "seq_l2_sq", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", ",", "bi", "]", "]", ")", "\n", "seq_l2_ev", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "ae", "=", "(", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_i", ")", "/", "n_img", "+", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_t", ")", "/", "n_txt", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "+", "ae", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "uidx", "=", "T", ".", "iscalar", "(", ")", "# T.iscalar()\u7c7b\u578b\u662f TensorType(int32, )", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidx", "]", ",", "\n", "outputs", "=", "-", "upq", "+", "ae", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "uidx", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "uidx", "]", ",", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "uidx", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.OboMvLstm.train": [[203, 205], ["LSTM_MV.OboMvLstm.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.OboMvLstm.update_trained_items": [[206, 215], ["mm.eval.eval.eval", "LSTM_MV.OboMvLstm.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.OboMvLstm.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.OboMvLstm.update_trained_items2_corrupted_test_data": [[216, 227], ["mm.eval.eval.eval", "LSTM_MV.OboMvLstm.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.OboMvLstm.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.OboMvLstm2Units.__init__": [[232, 260], ["LSTM.LstmBasic2Units.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "LSTM_MV.OboMvLstm2Units.__theano_train__", "LSTM_MV.OboMvLstm2Units.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "OboMvLstm2Units", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "# \u5efa\u7acb\u53c2\u6570\u3002", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "uim", ",", "self", ".", "whm", ",", "self", ".", "bim", ",", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "6", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "6", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.OboMvLstm2Units.__theano_train__": [[261, 405], ["theano.ivector", "theano.ivector", "theano.sum", "theano.sum", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.iscalar", "theano.iscalar", "theano.function", "theano.function", "theano.function", "theano.function", "theano.ivector", "theano.ivector", "theano.ivector", "theano.ivector", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "LSTM_MV.OboMvLstm2Units.get_corrupted_input_whole", "LSTM_MV.OboMvLstm2Units.get_corrupted_input_whole", "LSTM_MV.OboMvLstm2Units.get_corrupted_input_whole", "LSTM_MV.OboMvLstm2Units.get_corrupted_input_whole", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.log", "theano.log", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.grad", "theano.grad", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole"], ["", "def", "__theano_train__", "(", "self", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev', 'lambda_ae', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uim", ",", "whm", "=", "self", ".", "uim", ",", "self", ".", "whm", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "ivector", "(", ")", "\n", "seq_length", "=", "T", ".", "sum", "(", "tra_mask", ")", "# \u6709\u6548\u957f\u5ea6", "\n", "\n", "c0x", ",", "c0m", "=", "self", ".", "c0x", ",", "self", ".", "c0m", "\n", "h0x", ",", "h0m", "=", "self", ".", "h0x", ",", "self", ".", "h0m", "\n", "bix", ",", "bim", "=", "self", ".", "bix", ",", "self", ".", "bim", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "ivector", "(", ")", ",", "T", ".", "ivector", "(", ")", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((seq_length, n_txt))", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "zero", "=", "self", ".", "alpha_lambda", "[", "4", "]", "\n", "if", "0.0", "==", "zero", ":", "# \u7528\u5b8c\u5168\u6570\u636e", "\n", "            ", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "cx_t_pre1", ",", "cm_t_pre1", ",", "hx_t_pre1", ",", "hm_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ei", ",", "ip_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tp_t", ")", "\n", "mq_t", "=", "T", ".", "dot", "(", "ei", ",", "iq_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tq_t", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "xp_t", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "gatesm", "=", "T", ".", "dot", "(", "uim", ",", "mp_t", ")", "+", "T", ".", "dot", "(", "whm", ",", "hm_t_pre1", ")", "+", "bim", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", "\n", "im", ",", "fm", ",", "gm", ",", "om", "=", "sigmoid", "(", "gatesm", "[", "0", "]", ")", ",", "sigmoid", "(", "gatesm", "[", "1", "]", ")", ",", "tanh", "(", "gatesm", "[", "2", "]", ")", ",", "sigmoid", "(", "gatesm", "[", "3", "]", ")", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "\n", "cm_t", "=", "fm", "*", "cm_t_pre1", "+", "im", "*", "gm", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "hm_t", "=", "om", "*", "tanh", "(", "cm_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "dot", "(", "hx_t_pre1", ",", "xp_t", "-", "xq_t", ")", "+", "\n", "T", ".", "dot", "(", "hm_t_pre1", ",", "mp_t", "-", "mq_t", ")", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "return", "[", "cx_t", ",", "cm_t", ",", "hx_t", ",", "hm_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "cx", ",", "cm", ",", "hx", ",", "hm", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "c0m", ",", "h0x", ",", "h0m", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "", "else", ":", "\n", "# \u6bcf\u6761\u5e8f\u5217\u8bad\u7ec3\u524d\u90fd\u968f\u673awhole feature corrupted", "\n", "            ", "ipsc", "=", "self", ".", "get_corrupted_input_whole", "(", "ips", ",", "zero", ")", "\n", "iqsc", "=", "self", ".", "get_corrupted_input_whole", "(", "iqs", ",", "zero", ")", "\n", "tpsc", "=", "self", ".", "get_corrupted_input_whole", "(", "tps", ",", "zero", ")", "\n", "tqsc", "=", "self", ".", "get_corrupted_input_whole", "(", "tqs", ",", "zero", ")", "\n", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "ipc_t", ",", "iqc_t", ",", "tpc_t", ",", "tqc_t", ",", "\n", "cx_t_pre1", ",", "cm_t_pre1", ",", "hx_t_pre1", ",", "hm_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ei", ",", "ipc_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tpc_t", ")", "\n", "mq_t", "=", "T", ".", "dot", "(", "ei", ",", "iqc_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tqc_t", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "xp_t", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "gatesm", "=", "T", ".", "dot", "(", "uim", ",", "mp_t", ")", "+", "T", ".", "dot", "(", "whm", ",", "hm_t_pre1", ")", "+", "bim", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", "\n", "im", ",", "fm", ",", "gm", ",", "om", "=", "sigmoid", "(", "gatesm", "[", "0", "]", ")", ",", "sigmoid", "(", "gatesm", "[", "1", "]", ")", ",", "tanh", "(", "gatesm", "[", "2", "]", ")", ",", "sigmoid", "(", "gatesm", "[", "3", "]", ")", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "\n", "cm_t", "=", "fm", "*", "cm_t_pre1", "+", "im", "*", "gm", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "hm_t", "=", "om", "*", "tanh", "(", "cm_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "dot", "(", "hx_t_pre1", ",", "xp_t", "-", "xq_t", ")", "+", "\n", "T", ".", "dot", "(", "hm_t_pre1", ",", "mp_t", "-", "mq_t", ")", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "return", "[", "hx_t", ",", "hm_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "cx", ",", "cm", ",", "hx", ",", "hm", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "ipsc", ",", "iqsc", ",", "tpsc", ",", "tqsc", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "c0m", ",", "h0x", ",", "h0m", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "l2_ae", "=", "self", ".", "alpha_lambda", "[", "3", "]", "\n", "seq_l2_sq", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "uix", ",", "uim", ",", "whx", ",", "whm", ",", "bix", ",", "bim", "]", "]", ")", "\n", "seq_l2_ev", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "ae", "=", "(", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_i", ")", "/", "n_img", "+", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_t", ")", "/", "n_txt", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "+", "ae", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "uidx", "=", "T", ".", "iscalar", "(", ")", "# T.iscalar()\u7c7b\u578b\u662f TensorType(int32, )", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidx", "]", ",", "\n", "outputs", "=", "-", "upq", "+", "ae", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "uidx", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "uidx", "]", ",", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "uidx", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.OboMvLstm2Units.train": [[406, 408], ["LSTM_MV.OboMvLstm2Units.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.OboMvLstm2Units.update_trained_items": [[409, 418], ["mm.eval.eval.eval", "LSTM_MV.OboMvLstm2Units.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.OboMvLstm2Units.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.OboMvLstm2Units.update_trained_items2_corrupted_test_data": [[419, 430], ["mm.eval.eval.eval", "LSTM_MV.OboMvLstm2Units.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.OboMvLstm2Units.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstm1Unit.__init__": [[440, 470], ["LSTM.LstmBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "LSTM_MV.MvLstm1Unit.__theano_train__", "LSTM_MV.MvLstm1Unit.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "MvLstm1Unit", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "mm", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u4f4e\u7ef4\u7684\u591a\u6a21\u6001\u878d\u5408\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mm", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mm", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "3", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "3", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstm1Unit.__theano_train__": [[471, 621], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bi.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "ips.dimshuffle", "iqs.dimshuffle", "tps.dimshuffle", "tqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "LSTM_MV.MvLstm1Unit.get_corrupted_input_whole_minibatch", "LSTM_MV.MvLstm1Unit.get_corrupted_input_whole_minibatch", "LSTM_MV.MvLstm1Unit.get_corrupted_input_whole_minibatch", "LSTM_MV.MvLstm1Unit.get_corrupted_input_whole_minibatch", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev', 'lambda_ae', 'fea_random_zero']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "c0", "=", "T", ".", "alloc", "(", "self", ".", "c0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 4, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bi", "=", "bi", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(4, 40, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_len, batch_size, n_in)", "\n", "ips", ",", "iqs", "=", "ips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "iqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "tps", ",", "tqs", "=", "tps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "tqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "zero", "=", "self", ".", "alpha_lambda", "[", "4", "]", "\n", "if", "0.0", "==", "zero", ":", "# \u7528\u5b8c\u5168\u6570\u636e", "\n", "            ", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "mask_t", ",", "c_t_pre1", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ip_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tp_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "mq_t", "=", "T", ".", "dot", "(", "iq_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tq_t", ",", "vt", ".", "T", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mp_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, 40)", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "mq_t", ")", ",", "axis", "=", "1", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "gates", "=", "T", ".", "dot", "(", "ui", ",", "p_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "# shape=(4, 20, n)", "\n", "i", ",", "f", ",", "g", ",", "o", "=", "sigmoid", "(", "gates", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gates", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "3", "]", ")", ".", "T", "\n", "c_t", "=", "f", "*", "c_t_pre1", "+", "i", "*", "g", "\n", "h_t", "=", "o", "*", "tanh", "(", "c_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "p_t", "-", "q_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "mp_t", ",", "ei", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "ei", ")", ")", "**", "2", ")", ")", "# T.sum(shape=(n, 1024), axis=1), \u6700\u540eshape=(n,)", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "mp_t", ",", "vt", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "vt", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_i", "*=", "mask_t", "\n", "loss_ae_t_t", "*=", "mask_t", "\n", "return", "[", "c_t", ",", "h_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "# shape=(n, 20), (n, ), (n, )", "\n", "", "[", "c", ",", "h", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0", ",", "h0", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "", "else", ":", "\n", "# \u6bcf\u6761\u5e8f\u5217\u8bad\u7ec3\u524d\u90fd\u968f\u673awhole feature corrupted", "\n", "            ", "ipsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "ips", ",", "zero", ")", "\n", "iqsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "iqs", ",", "zero", ")", "\n", "tpsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "tps", ",", "zero", ")", "\n", "tqsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "tqs", ",", "zero", ")", "\n", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "ipc_t", ",", "iqc_t", ",", "tpc_t", ",", "tqc_t", ",", "\n", "mask_t", ",", "c_t_pre1", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ipc_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tpc_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "mq_t", "=", "T", ".", "dot", "(", "iqc_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tqc_t", ",", "vt", ".", "T", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mp_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, 40)", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "mq_t", ")", ",", "axis", "=", "1", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "gates", "=", "T", ".", "dot", "(", "ui", ",", "p_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "# shape=(4, 20, n)", "\n", "i", ",", "f", ",", "g", ",", "o", "=", "sigmoid", "(", "gates", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gates", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "3", "]", ")", ".", "T", "\n", "c_t", "=", "f", "*", "c_t_pre1", "+", "i", "*", "g", "\n", "h_t", "=", "o", "*", "tanh", "(", "c_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "p_t", "-", "q_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "mp_t", ",", "ei", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "ei", ")", ")", "**", "2", ")", ")", "# T.sum(shape=(n, 1024), axis=1), \u6700\u540eshape=(n,)", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "mp_t", ",", "vt", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "vt", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_i", "*=", "mask_t", "\n", "loss_ae_t_t", "*=", "mask_t", "\n", "return", "[", "c_t", ",", "h_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "# shape=(n, 20), (n, ), (n, )", "\n", "", "[", "c", ",", "h", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "ipsc", ",", "iqsc", ",", "tpsc", ",", "tqsc", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0", ",", "h0", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "l2_ae", "=", "self", ".", "alpha_lambda", "[", "3", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bi", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "seq_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "ae", "=", "(", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_i", ")", "/", "n_img", "+", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_t", ")", "/", "n_txt", ")", "\n", "seq_costs", "=", "(", "\n", "(", "-", "upq", "+", "ae", ")", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", "+", "ae", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstm1Unit.train": [[622, 624], ["LSTM_MV.MvLstm1Unit.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstm1Unit.update_trained_items": [[625, 634], ["mm.eval.eval.eval", "LSTM_MV.MvLstm1Unit.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.MvLstm1Unit.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstm1Unit.update_trained_items2_corrupted_test_data": [[635, 646], ["mm.eval.eval.eval", "LSTM_MV.MvLstm1Unit.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.MvLstm1Unit.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstm2Units.__init__": [[656, 684], ["LSTM.LstmBasic2Units.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "LSTM_MV.MvLstm2Units.__theano_train__", "LSTM_MV.MvLstm2Units.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "MvLstm2Units", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "# \u5efa\u7acb\u53c2\u6570\u3002", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "uim", ",", "self", ".", "whm", ",", "self", ".", "bim", ",", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "6", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "6", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstm2Units.__theano_train__": [[685, 849], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bim.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "ips.dimshuffle", "iqs.dimshuffle", "tps.dimshuffle", "tqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "LSTM_MV.MvLstm2Units.get_corrupted_input_whole_minibatch", "LSTM_MV.MvLstm2Units.get_corrupted_input_whole_minibatch", "LSTM_MV.MvLstm2Units.get_corrupted_input_whole_minibatch", "LSTM_MV.MvLstm2Units.get_corrupted_input_whole_minibatch", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev', 'lambda_ae', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uim", ",", "whm", "=", "self", ".", "uim", ",", "self", ".", "whm", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "c0x", "=", "T", ".", "alloc", "(", "self", ".", "c0x", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "c0m", "=", "T", ".", "alloc", "(", "self", ".", "c0m", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0m", "=", "T", ".", "alloc", "(", "self", ".", "h0m", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bim", "=", "T", ".", "alloc", "(", "self", ".", "bim", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "bim", "=", "bim", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_len, batch_size, n_in)", "\n", "ips", ",", "iqs", "=", "ips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "iqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "tps", ",", "tqs", "=", "tps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "tqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "zero", "=", "self", ".", "alpha_lambda", "[", "4", "]", "\n", "if", "0.0", "==", "zero", ":", "# \u7528\u5b8c\u5168\u6570\u636e", "\n", "            ", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "mask_t", ",", "cx_t_pre1", ",", "cm_t_pre1", ",", "hx_t_pre1", ",", "hm_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ip_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tp_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "mq_t", "=", "T", ".", "dot", "(", "iq_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tq_t", ",", "vt", ".", "T", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "xp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "gatesm", "=", "T", ".", "dot", "(", "uim", ",", "mp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whm", ",", "hm_t_pre1", ".", "T", ")", "+", "bim", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "im", ",", "fm", ",", "gm", ",", "om", "=", "sigmoid", "(", "gatesm", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesm", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesm", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesm", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "\n", "cm_t", "=", "fm", "*", "cm_t_pre1", "+", "im", "*", "gm", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "hm_t", "=", "om", "*", "tanh", "(", "cm_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "xp_t", "-", "xq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "hm_t_pre1", "*", "(", "mp_t", "-", "mq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "loss_t", "*=", "mask_t", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "mp_t", ",", "ei", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "ei", ")", ")", "**", "2", ")", ")", "# T.sum(shape=(n, 1024), axis=1), \u6700\u540eshape=(n,)", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "mp_t", ",", "vt", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "vt", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_i", "*=", "mask_t", "\n", "loss_ae_t_t", "*=", "mask_t", "\n", "return", "[", "cx_t", ",", "cm_t", ",", "hx_t", ",", "hm_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "cx", ",", "cm", ",", "hx", ",", "hm", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "c0m", ",", "h0x", ",", "h0m", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "", "else", ":", "\n", "# \u6bcf\u6761\u5e8f\u5217\u8bad\u7ec3\u524d\u90fd\u968f\u673awhole feature corrupted", "\n", "            ", "ipsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "ips", ",", "zero", ")", "\n", "iqsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "iqs", ",", "zero", ")", "\n", "tpsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "tps", ",", "zero", ")", "\n", "tqsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "tqs", ",", "zero", ")", "\n", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "ipc_t", ",", "iqc_t", ",", "tpc_t", ",", "tqc_t", ",", "\n", "mask_t", ",", "cx_t_pre1", ",", "cm_t_pre1", ",", "hx_t_pre1", ",", "hm_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ipc_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tpc_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "mq_t", "=", "T", ".", "dot", "(", "iqc_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tqc_t", ",", "vt", ".", "T", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "xp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "gatesm", "=", "T", ".", "dot", "(", "uim", ",", "mp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whm", ",", "hm_t_pre1", ".", "T", ")", "+", "bim", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "im", ",", "fm", ",", "gm", ",", "om", "=", "sigmoid", "(", "gatesm", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesm", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesm", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesm", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "\n", "cm_t", "=", "fm", "*", "cm_t_pre1", "+", "im", "*", "gm", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "hm_t", "=", "om", "*", "tanh", "(", "cm_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "xp_t", "-", "xq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "hm_t_pre1", "*", "(", "mp_t", "-", "mq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "loss_t", "*=", "mask_t", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "# denoising: \u91cd\u6784\u65f6\u7528ip_t\u3002", "\n", "# missing:   \u91cd\u6784\u65f6\u7528ipc_t\u3002", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "mp_t", ",", "ei", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "ei", ")", ")", "**", "2", ")", ")", "# T.sum(shape=(n, 1024), axis=1), \u6700\u540eshape=(n,)", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "mp_t", ",", "vt", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "vt", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_i", "*=", "mask_t", "\n", "loss_ae_t_t", "*=", "mask_t", "\n", "return", "[", "cx_t", ",", "cm_t", ",", "hx_t", ",", "hm_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "cx", ",", "cm", ",", "hx", ",", "hm", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "ipsc", ",", "iqsc", ",", "tpsc", ",", "tqsc", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "c0m", ",", "h0x", ",", "h0m", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "l2_ae", "=", "self", ".", "alpha_lambda", "[", "3", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "uix", ",", "whx", ",", "uim", ",", "whm", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", ",", "bim", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "seq_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "ae", "=", "(", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_i", ")", "/", "n_img", "+", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_t", ")", "/", "n_txt", ")", "\n", "seq_costs", "=", "(", "\n", "(", "-", "upq", "+", "ae", ")", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", "+", "ae", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstm2Units.train": [[850, 852], ["LSTM_MV.MvLstm2Units.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstm2Units.update_trained_items": [[853, 862], ["mm.eval.eval.eval", "LSTM_MV.MvLstm2Units.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.MvLstm2Units.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstm2Units.update_trained_items2_corrupted_test_data": [[863, 874], ["mm.eval.eval.eval", "LSTM_MV.MvLstm2Units.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.MvLstm2Units.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstmCon.__init__": [[884, 915], ["LSTM.LstmBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "LSTM_MV.MvLstmCon.__theano_train__", "LSTM_MV.MvLstmCon.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "MvLstmCon", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "mi", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u56fe\u50cf\u7684\u4f4e\u7ef4\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "mt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u6587\u672c\u7684\u4f4e\u7ef4\u7279\u5f81\uff0c", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "self", ".", "mi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mi", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "# \u53ea\u662f\u62fc\u63a5\u800c\u5df2\uff0c\u4e0d\u9700\u8981\u52a0bias", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "4", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "ei", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "self", ".", "vt", "**", "2", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstmCon.__theano_train__": [[916, 1011], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bi.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "ips.dimshuffle", "iqs.dimshuffle", "tps.dimshuffle", "tqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "c0", "=", "T", ".", "alloc", "(", "self", ".", "c0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bi", "=", "bi", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_len, batch_size, n_in)", "\n", "ips", ",", "iqs", "=", "ips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "iqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "tps", ",", "tqs", "=", "tps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "tqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "mask_t", ",", "c_t_pre1", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "            ", "mip_t", ",", "mtp_t", "=", "T", ".", "dot", "(", "ip_t", ",", "ei", ".", "T", ")", ",", "T", ".", "dot", "(", "tp_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "miq_t", ",", "mtq_t", "=", "T", ".", "dot", "(", "iq_t", ",", "ei", ".", "T", ")", ",", "T", ".", "dot", "(", "tq_t", ",", "vt", ".", "T", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mip_t", ",", "mtp_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, 60)", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "miq_t", ",", "mtq_t", ")", ",", "axis", "=", "1", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "gates", "=", "T", ".", "dot", "(", "ui", ",", "p_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "# shape=(4, 20, n)", "\n", "i", ",", "f", ",", "g", ",", "o", "=", "sigmoid", "(", "gates", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gates", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "3", "]", ")", ".", "T", "\n", "c_t", "=", "f", "*", "c_t_pre1", "+", "i", "*", "g", "# shape=(n, 20)", "\n", "h_t", "=", "o", "*", "tanh", "(", "c_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "p_t", "-", "q_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "\n", "return", "[", "c_t", ",", "h_t", ",", "loss_t", "]", "# shape=(n, 20), (n, ), (n, )", "\n", "", "[", "c", ",", "h", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0", ",", "h0", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bi", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "seq_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstmCon.train": [[1012, 1014], ["LSTM_MV.MvLstmCon.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstmCon.update_trained_items": [[1015, 1025], ["LSTM_MV.MvLstmCon.mi.set_value", "LSTM_MV.MvLstmCon.mt.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.MvLstmCon.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "mi.eval", "mt.eval", "numpy.asarray", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mi", ",", "mt", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", ",", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mi", ",", "mt", "=", "mi", ".", "eval", "(", ")", ",", "mt", ".", "eval", "(", ")", "\n", "self", ".", "mi", ".", "set_value", "(", "np", ".", "asarray", "(", "mi", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "self", ".", "mt", ".", "set_value", "(", "np", ".", "asarray", "(", "mt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mi", ",", "self", ".", "mt", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 60)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstmCon.update_trained_items2_corrupted_test_data": [[1026, 1038], ["LSTM_MV.MvLstmCon.mi.set_value", "LSTM_MV.MvLstmCon.mt.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.MvLstmCon.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "mi.eval", "mt.eval", "numpy.asarray", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mi", ",", "mt", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", ",", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mi", ",", "mt", "=", "mi", ".", "eval", "(", ")", ",", "mt", ".", "eval", "(", ")", "\n", "self", ".", "mi", ".", "set_value", "(", "np", ".", "asarray", "(", "mi", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "self", ".", "mt", ".", "set_value", "(", "np", ".", "asarray", "(", "mt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mi", ",", "self", ".", "mt", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 60)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstmFusion.__init__": [[1048, 1078], ["LSTM.LstmBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "LSTM_MV.MvLstmFusion.__theano_train__", "LSTM_MV.MvLstmFusion.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "MvLstmFusion", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "mm", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u4f4e\u7ef4\u7684\u591a\u6a21\u6001\u878d\u5408\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mm", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mm", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "3", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "3", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstmFusion.__theano_train__": [[1079, 1175], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bi.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "ips.dimshuffle", "iqs.dimshuffle", "tps.dimshuffle", "tqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "c0", "=", "T", ".", "alloc", "(", "self", ".", "c0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bi", "=", "bi", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_len, batch_size, n_in)", "\n", "ips", ",", "iqs", "=", "ips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "iqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "tps", ",", "tqs", "=", "tps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "tqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "mask_t", ",", "c_t_pre1", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "            ", "mp_t", "=", "T", ".", "dot", "(", "ip_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tp_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "mq_t", "=", "T", ".", "dot", "(", "iq_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tq_t", ",", "vt", ".", "T", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mp_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, 40)", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "mq_t", ")", ",", "axis", "=", "1", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "gates", "=", "T", ".", "dot", "(", "ui", ",", "p_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "# shape=(4, 20, n)", "\n", "i", ",", "f", ",", "g", ",", "o", "=", "sigmoid", "(", "gates", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gates", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "3", "]", ")", ".", "T", "\n", "c_t", "=", "f", "*", "c_t_pre1", "+", "i", "*", "g", "# shape=(n, 20)", "\n", "h_t", "=", "o", "*", "tanh", "(", "c_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "p_t", "-", "q_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "\n", "return", "[", "c_t", ",", "h_t", ",", "loss_t", "]", "# shape=(n, 20), (n, ), (n, )", "\n", "", "[", "c", ",", "h", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0", ",", "h0", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bi", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "seq_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstmFusion.train": [[1176, 1178], ["LSTM_MV.MvLstmFusion.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstmFusion.update_trained_items": [[1179, 1188], ["mm.eval.eval.eval", "LSTM_MV.MvLstmFusion.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.MvLstmFusion.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.MvLstmFusion.update_trained_items2_corrupted_test_data": [[1189, 1200], ["mm.eval.eval.eval", "LSTM_MV.MvLstmFusion.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "LSTM_MV.MvLstmFusion.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.exe_time": [[21, 34], ["datetime.datetime.now", "print", "func", "datetime.datetime.now", "print", "print", "print", "datetime.datetime.now.strftime", "datetime.datetime.now.strftime", "datetime.datetime.now.strftime"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "name", "=", "func", ".", "__name__", "\n", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ".", "strftime", "(", "\"%Y.%m.%d_%H.%M.%S\"", ")", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "end", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ".", "strftime", "(", "\"%Y.%m.%d_%H.%M.%S\"", ")", ")", ")", "\n", "print", "(", "\"-- {%s} end:   @ %ss\"", "%", "(", "name", ",", "end", ".", "strftime", "(", "\"%Y.%m.%d_%H.%M.%S\"", ")", ")", ")", "\n", "total", "=", "(", "end", "-", "start", ")", ".", "total_seconds", "(", ")", "\n", "print", "(", "\"-- {%s} total: @ %.2fs = %.2fh\"", "%", "(", "name", ",", "total", ",", "total", "/", "3600.0", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_MV.main": [[1202, 1205], ["print"], "function", ["None"], ["", "", "@", "exe_time", "\n", "def", "main", "(", ")", ":", "\n", "    ", "print", "(", "'... construct the class: MV-GRU'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.__init__": [[45, 90], ["numpy.random.RandomState", "theano.tensor.shared_randomstreams.RandomStreams", "theano.tensor.shared_randomstreams.RandomStreams", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.zeros", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.RandomState.randint", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6784\u5efa \u6a21\u578b\u53c2\u6570\n        :param train: \u6dfb\u52a0mask\u540e\u7684\n        :param test: \u6dfb\u52a0mask\u540e\u7684\n        :param n_user: \u7528\u6237\u7684\u771f\u5b9e\u6570\u76ee\n        :param n_item: \u5546\u54c1items\u7684\u771f\u6b63\u6570\u76ee\uff0cinit()\u91cc\u8865\u5168\u4e00\u4e2a\u5546\u54c1\u4f5c\u4e3a\u586b\u5145\u7b26\n        :param n_in: rnn\u8f93\u5165\u5411\u91cf\u7684\u7ef4\u5ea6\n        :param n_hidden: rnn\u9690\u5c42\u5411\u91cf\u7684\u7ef4\u5ea6\n        :return:\n        \"\"\"", "\n", "# \u6765\u81ea\u4e8etheano\u5b98\u7f51\u7684dAE\u90e8\u5206\u3002", "\n", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "123", ")", "\n", "self", ".", "thea_rng", "=", "RandomStreams", "(", "rng", ".", "randint", "(", "2", "**", "30", ")", ")", "# \u65d7\u4e0b\u968f\u673a\u51fd\u6570\u53ef\u5728GPU\u4e0b\u8fd0\u884c\u3002", "\n", "# \u7528mask\u8fdb\u884c\u8865\u5168\u540e\u7684train/test", "\n", "tra_buys_masks", ",", "tra_masks", ",", "tra_buys_neg_masks", "=", "train", "\n", "tes_buys_masks", ",", "tes_masks", ",", "tes_buys_neg_masks", "=", "test", "\n", "self", ".", "tra_buys_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tra_buys_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tes_buys_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tes_buys_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tra_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tra_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tes_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tes_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tra_buys_neg_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tra_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tes_buys_neg_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tes_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "# \u628a\u8d85\u53c2\u6570shared", "\n", "self", ".", "alpha_lambda", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "alpha_lambda", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# \u521d\u59cb\u5316\uff0c\u5148\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u518dself.\u4fee\u9970\u6210\u5b9e\u4f8b\u53d8\u91cf", "\n", "rang", "=", "0.5", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "ui", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "wh", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "c0", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bi", "=", "np", ".", "zeros", "(", "(", "4", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "# \u5efa\u7acb\u53c2\u6570\u3002", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ui", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ui", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "wh", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "wh", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "c0", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "c0", ")", "\n", "self", ".", "h0", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0", ")", "\n", "self", ".", "bi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bi", ")", "\n", "# \u5b58\u653e\u8bad\u7ec3\u597d\u7684users\u3001items\u8868\u8fbe\u3002\u7528\u4e8e\u8ba1\u7b97\u6240\u6709users\u5bf9\u6240\u6709items\u7684\u8bc4\u5206\uff1ausers * items", "\n", "trained_items", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "\n", "trained_users", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_user", ",", "n_hidden", ")", ")", "\n", "self", ".", "trained_items", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "trained_items", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "trained_users", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "trained_users", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# \u5185\u5efapredict\u51fd\u6570\u3002\u4e0d\u8981\u5199\u5728\u8fd9\u91cc\uff0c\u5199\u5728\u5b50\u7c7b\u91cc\uff0c\u5426\u5219\u5b50\u7c7b\u91cc\u4f1a\u65e0\u6cd5\u8986\u76d6\u6389\u91cd\u5199\u3002", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.update_neg_masks": [[93, 97], ["LSTM.LstmBasic.tra_buys_neg_masks.set_value", "LSTM.LstmBasic.tes_buys_neg_masks.set_value", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_neg_masks", "(", "self", ",", "tra_buys_neg_masks", ",", "tes_buys_neg_masks", ")", ":", "\n", "# \u6bcf\u4e2aepoch\u90fd\u66f4\u65b0\u8d1f\u6837\u672c", "\n", "        ", "self", ".", "tra_buys_neg_masks", ".", "set_value", "(", "np", ".", "asarray", "(", "tra_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ",", "borrow", "=", "True", ")", "\n", "self", ".", "tes_buys_neg_masks", ".", "set_value", "(", "np", ".", "asarray", "(", "tes_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.update_trained_items": [[98, 102], ["LSTM.LstmBasic.lt.get_value", "LSTM.LstmBasic.trained_items.set_value", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "        ", "lt", "=", "self", ".", "lt", ".", "get_value", "(", "borrow", "=", "True", ")", "# self.lt\u662fshared\uff0c\u7528get_value()\u3002", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "lt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "# update", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.update_trained_users": [[103, 106], ["LSTM.LstmBasic.trained_users.set_value", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_users", "(", "self", ",", "all_hus", ")", ":", "\n", "# \u5916\u90e8\u5148\u8ba1\u7b97\u597d\uff0c\u4f20\u8fdb\u6765\u76f4\u63a5\u66f4\u65b0", "\n", "        ", "self", ".", "trained_users", ".", "set_value", "(", "np", ".", "asarray", "(", "all_hus", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "# update", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.compute_sub_all_scores": [[107, 111], ["theano.dot", "theano.dot", "theano.dot.eval"], "methods", ["None"], ["", "def", "compute_sub_all_scores", "(", "self", ",", "start_end", ")", ":", "# \u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u4f20\u8fc7\u6765\u5b9e\u6570\u53c2\u6570", "\n", "# \u8ba1\u7b97users * items\uff0c\u6bcf\u4e2a\u7528\u6237\u5bf9\u6240\u6709\u5546\u54c1\u7684\u8bc4\u5206(\u9700\u53bb\u6389\u586b\u5145\u7b26)", "\n", "        ", "sub_all_scores", "=", "T", ".", "dot", "(", "self", ".", "trained_users", "[", "start_end", "]", ",", "self", ".", "trained_items", "[", ":", "-", "1", "]", ".", "T", ")", "\n", "return", "sub_all_scores", ".", "eval", "(", ")", "# shape=(sub_n_user, n_item)", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.compute_sub_auc_preference": [[112, 125], ["theano.sum", "theano.sum", "theano.sum.eval", "users.reshape"], "methods", ["None"], ["", "def", "compute_sub_auc_preference", "(", "self", ",", "start_end", ")", ":", "\n", "# items.shape=(n_item+1, 20)\uff0c\u56e0\u4e3a\u662fmask\u5f62\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u586b\u5145\u7b26\u3002", "\n", "# \u6ce8\u610f\u77e9\u9635\u5f62\u5f0f\u7684\u7d22\u5f15\u65b9\u5f0f\u3002", "\n", "        ", "tes_items", "=", "self", ".", "trained_items", "[", "self", ".", "tes_buys_masks", "[", "start_end", "]", "]", "# shape=(sub_n_user, len(tes_mask[0]), n_hidden)", "\n", "tes_items_neg", "=", "self", ".", "trained_items", "[", "self", ".", "tes_buys_neg_masks", "[", "start_end", "]", "]", "\n", "users", "=", "self", ".", "trained_users", "[", "start_end", "]", "\n", "shp0", ",", "shp2", "=", "users", ".", "shape", "# shape=(sub_n_user, n_hidden)", "\n", "# \u5229\u7528\u6027\u8d28\uff1a(n_user, 1, n_hidden) * (n_user, len, n_hidden) = (n_user, len, n_hidden)\uff0c\u5373broadcast", "\n", "# \u5229\u7528\u6027\u8d28\uff1anp.sum((n_user, len, n_hidden), axis=2) = (n_user, len)\uff0c", "\n", "#         \u5373\u5f97\u5230\u5404\u7528\u6237\u5bf9test\u91cc\u6b63\u8d1f\u6837\u672c\u7684\u504f\u597d\u503c", "\n", "all_upqs", "=", "T", ".", "sum", "(", "users", ".", "reshape", "(", "(", "shp0", ",", "1", ",", "shp2", ")", ")", "*", "(", "tes_items", "-", "tes_items_neg", ")", ",", "axis", "=", "2", ")", "\n", "all_upqs", "*=", "self", ".", "tes_masks", "[", "start_end", "]", "# \u53ea\u4fdd\u7559\u539f\u5148test items\u5bf9\u5e94\u6709\u6548\u4f4d\u7f6e\u7684\u504f\u597d\u503c", "\n", "return", "all_upqs", ".", "eval", "(", ")", ">", "0", "# \u5c06>0\u7684\u6807\u4e3aTrue, \u4e5f\u5c31\u662f1", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.get_corrupted_input_whole": [[126, 140], ["LSTM.LstmBasic.thea_rng.binomial", "theano.Rebroadcast", "theano.Rebroadcast"], "methods", ["None"], ["", "def", "get_corrupted_input_whole", "(", "self", ",", "inp", ",", "corruption_prob", ")", ":", "\n", "# \u5904\u74062D\u77e9\u9635\uff1arandomly set whole feature to zero. Matrix.shape=(n, m)", "\n", "# denoising\u65b9\u5f0f0\uff1a\u968f\u673a\u5c06\u67d0\u4e9b\u56fe\u3001\u6587\u7279\u5f81\u6574\u4f53\u6027\u7f6e\u4e3a0", "\n", "# \u6bd4\u5982\u539f\u5148\u4e00\u6761\u5e8f\u5217\u7684\u56fe\u50cf\u7279\u5f81\u662f(num, 1024); \u90a3\u4e480/1\u6982\u7387\u77e9\u9635\u662f(num, 1), T.Rebroadcast\uff0c\u518d\u76f8\u4e58", "\n", "# if corruption_prob < 0. or corruption_prob >= 1.:", "\n", "#     raise Exception('Drop prob must be in interval [0, 1)')", "\n", "        ", "retain_prob", "=", "1.", "-", "corruption_prob", "\n", "randoms", "=", "self", ".", "thea_rng", ".", "binomial", "(", "\n", "size", "=", "(", "inp", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "# shape=(num, 1)", "\n", "n", "=", "1", ",", "\n", "p", "=", "retain_prob", ",", "# p\u662f\u5f971\u7684\u6982\u7387\u3002", "\n", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "randoms", "=", "T", ".", "Rebroadcast", "(", "(", "1", ",", "True", ")", ")", "(", "randoms", ")", "\n", "return", "inp", "*", "randoms", "# shape=(num, 1024)", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.get_corrupted_input_whole_minibatch": [[141, 152], ["LSTM.LstmBasic.thea_rng.binomial", "theano.Rebroadcast", "theano.Rebroadcast"], "methods", ["None"], ["", "def", "get_corrupted_input_whole_minibatch", "(", "self", ",", "inp", ",", "corruption_prob", ")", ":", "\n", "# \u4eb2\u6d4b\u8868\u660e\uff1a\u5728\u5e8f\u5217\u524d\u505adata\u7684corruption\uff0c\u6548\u679c\u66f4\u597d\u66f4\u7a33\u5b9a\u3002", "\n", "# \u5904\u74063D\u77e9\u9635", "\n", "        ", "retain_prob", "=", "1.", "-", "corruption_prob", "\n", "randoms", "=", "self", ".", "thea_rng", ".", "binomial", "(", "\n", "size", "=", "(", "inp", ".", "shape", "[", "0", "]", ",", "inp", ".", "shape", "[", "1", "]", ",", "1", ")", ",", "# shape=(seq_length, batch_size, 1)", "\n", "n", "=", "1", ",", "\n", "p", "=", "retain_prob", ",", "# p\u662f\u5f971\u7684\u6982\u7387\u3002", "\n", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "randoms", "=", "T", ".", "Rebroadcast", "(", "(", "2", ",", "True", ")", ")", "(", "randoms", ")", "\n", "return", "inp", "*", "randoms", "# shape=(seq_length, batch_size, 1024)", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.dropout": [[153, 167], ["LSTM.LstmBasic.thea_rng.binomial"], "methods", ["None"], ["", "def", "dropout", "(", "self", ",", "inp", ",", "drop_prob", ")", ":", "\n", "# \u5904\u7406\u5411\u91cf\uff1arandomly set some positions to zero. Vector.shape=(n, )", "\n", "# \u4f8b\u5982\u4e00\u4e2a\u5411\u91cf20\u7ef4\uff0c\u5c31\u670920\u4e2a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u670920\u4e2a\u795e\u7ecf\u5143\u3002", "\n", "# train\u65f6\u505adropout\uff0ctest\u65f6\u8fd8\u662f\u5168\u8fde\u63a5\u3002", "\n", "# if drop_prob < 0. or drop_prob >= 1.:", "\n", "#     raise Exception('Drop prob must be in interval [0, 1)')", "\n", "        ", "retain_prob", "=", "1.", "-", "drop_prob", "# \u53d60.5\u5c31\u53ef\u4ee5\u4e86\u3002", "\n", "randoms", "=", "self", ".", "thea_rng", ".", "binomial", "(", "\n", "size", "=", "inp", ".", "shape", ",", "# \u751f\u6210\u4e0e\u5411\u91cfinp\u540c\u6837\u7ef4\u5ea6\u76840\u30011\u5411\u91cf", "\n", "n", "=", "1", ",", "# \u6bcf\u4e2a\u795e\u7ecf\u5143\u5b9e\u9a8c\u4e00\u6b21", "\n", "p", "=", "retain_prob", ")", "# \u6bcf\u4e2a\u795e\u7ecf\u5143*1\u7684\u6982\u7387\u4e3ap/retain_prob\u3002*0\u7684\u6982\u7387\u4e3adrop_prob", "\n", "inp", "*=", "randoms", "# \u5c4f\u853d\u67d0\u4e9b\u795e\u7ecf\u5143\uff0c\u91cd\u7f6e\u4e3a0", "\n", "inp", "/=", "retain_prob", "# drop\u5b8c\u540e\u9700\u8981rescale\uff0c\u4ee5\u7ef4\u6301inp\u5728dropout\u524d\u540e\u7684\u6570\u503c\u548c(sum)\u4e0d\u53d8\u3002", "\n", "return", "inp", "# \u76f4\u63a5\u672c\u5730\u4fee\u6539inp\uff0c\u6240\u4ee5\u8c03\u7528\u65f6'self.dropout(x, 0.5)'\u5373\u53ef\u76f4\u63a5\u672c\u5730\u4fee\u6539\u8f93\u5165x\u3002", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.__theano_predict__": [[168, 216], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bi.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ps.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "h.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.arange", "theano.arange", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predict__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "c0", "=", "T", ".", "alloc", "(", "self", ".", "c0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 4, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bi", "=", "bi", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(4, 20, n)", "\n", "\n", "# \u9690\u5c42\u662f1\u4e2aGRU Unit\uff1a\u90fd\u53ef\u4ee5\u7528\u8fd9\u4e2a\u7edf\u4e00\u7684\u683c\u5f0f\u3002", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ps", "=", "self", ".", "trained_items", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_hidden))", "\n", "ps", "=", "ps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_hidden)=(157, n, 20)", "\n", "\n", "def", "recurrence", "(", "p_t", ",", "c_t_pre1", ",", "h_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "gates", "=", "T", ".", "dot", "(", "ui", ",", "p_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "# shape=(4, 20, n)", "\n", "i", ",", "f", ",", "g", ",", "o", "=", "sigmoid", "(", "gates", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gates", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "3", "]", ")", ".", "T", "\n", "c_t", "=", "f", "*", "c_t_pre1", "+", "i", "*", "g", "# shape=(n, 20)", "\n", "h_t", "=", "o", "*", "tanh", "(", "c_t", ")", "# shape=(n, 20)", "\n", "return", "[", "c_t", ",", "h_t", "]", "\n", "", "[", "c", ",", "h", "]", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "ps", ",", "\n", "outputs_info", "=", "[", "c0", ",", "h0", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "\n", "# \u5f97\u5230batch_hts.shape=(n, 20)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbeht\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predict", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.predict": [[217, 219], ["LSTM.LstmBasic.seq_predict"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_predict", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic2Units.__init__": [[225, 254], ["LSTM.LstmBasic.__init__", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "LstmBasic2Units", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "# \u521d\u59cb\u5316\uff0c\u5148\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u518dself.\u4fee\u9970\u6210\u5b9e\u4f8b\u53d8\u91cf", "\n", "rang", "=", "0.5", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "mm", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u6a21\u6001\u878d\u5408\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "uix", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "uim", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "whx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "whm", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "c0x", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "c0m", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0x", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0m", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bix", "=", "np", ".", "zeros", "(", "(", "4", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bim", "=", "np", ".", "zeros", "(", "(", "4", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "# \u5efa\u7acb\u53c2\u6570\u3002", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mm", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mm", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "uix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uix", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "uim", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uim", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whm", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whm", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "c0x", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "c0x", ")", "\n", "self", ".", "c0m", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "c0m", ")", "\n", "self", ".", "h0x", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0x", ")", "\n", "self", ".", "h0m", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0m", ")", "\n", "self", ".", "bix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bix", ")", "\n", "self", ".", "bim", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bim", ")", "\n", "# \u5185\u5efapredict\u51fd\u6570\u3002\u4e0d\u8981\u5199\u5728\u8fd9\u91cc\uff0c\u5199\u5728\u5b50\u7c7b\u91cc\uff0c\u5426\u5219\u4f1a\u65e0\u6cd5\u7ee7\u627f\u3001\u8986\u76d6\u6389\u91cd\u5199\u3002", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic2Units.__theano_predict__": [[257, 316], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bim.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.concatenate", "theano.concatenate", "theano.concatenate.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "xps.dimshuffle", "mps.dimshuffle", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.arange", "theano.arange", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predict__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uim", ",", "whm", "=", "self", ".", "uim", ",", "self", ".", "whm", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0m", "=", "T", ".", "alloc", "(", "self", ".", "h0m", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "c0x", "=", "T", ".", "alloc", "(", "self", ".", "c0x", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "c0m", "=", "T", ".", "alloc", "(", "self", ".", "c0m", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 4, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bim", "=", "T", ".", "alloc", "(", "self", ".", "bim", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 4, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(4, 20, n)", "\n", "bim", "=", "bim", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(4, 20, n)", "\n", "\n", "# \u9690\u5c42\u662f2\u4e2aGRU Units\uff1a\u5f53\u7136\u4e5f\u67092\u90e8\u5206\u8f93\u5165\u3002", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "xps", ",", "mps", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "mm", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "xps", ",", "mps", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "mps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "def", "recurrence", "(", "xp_t", ",", "mp_t", ",", "cx_t_pre1", ",", "cm_t_pre1", ",", "hx_t_pre1", ",", "hm_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "# \u9690\u5c42\u8ba1\u7b97: x", "\n", "            ", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "xp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "gatesm", "=", "T", ".", "dot", "(", "uim", ",", "mp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whm", ",", "hm_t_pre1", ".", "T", ")", "+", "bim", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "im", ",", "fm", ",", "gm", ",", "om", "=", "sigmoid", "(", "gatesm", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesm", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesm", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesm", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "\n", "cm_t", "=", "fm", "*", "cm_t_pre1", "+", "im", "*", "gm", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "hm_t", "=", "om", "*", "tanh", "(", "cm_t", ")", "# shape=(n, 20)", "\n", "return", "[", "cx_t", ",", "cm_t", ",", "hx_t", ",", "hm_t", "]", "\n", "", "[", "cx", ",", "cm", ",", "hx", ",", "hm", "]", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "mps", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "c0m", ",", "h0x", ",", "h0m", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "T", ".", "concatenate", "(", "(", "hx", ",", "hm", ")", ",", "axis", "=", "2", ")", "# h.shape=(157, n, 40)", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 20)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predict", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.OboLstm.__init__": [[322, 332], ["LSTM.LstmBasic.__init__", "LSTM.OboLstm.__theano_train__", "LSTM.OboLstm.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "OboLstm", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "params", "=", "[", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.OboLstm.__theano_train__": [[333, 404], ["theano.ivector", "theano.ivector", "theano.sum", "theano.sum", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.iscalar", "theano.iscalar", "theano.function", "theano.function", "theano.function", "theano.function", "theano.ivector", "theano.ivector", "theano.ivector", "theano.ivector", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.dot", "theano.dot", "theano.log", "theano.log", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "\n", "tra_mask", "=", "T", ".", "ivector", "(", ")", "\n", "seq_length", "=", "T", ".", "sum", "(", "tra_mask", ")", "# \u6709\u6548\u957f\u5ea6", "\n", "\n", "c0", "=", "self", ".", "c0", "\n", "h0", "=", "self", ".", "h0", "\n", "bi", "=", "self", ".", "bi", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "ivector", "(", ")", ",", "T", ".", "ivector", "(", ")", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((seq_length, n_in))", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "c_t_pre1", ",", "h_t_pre1", ")", ":", "\n", "            ", "gates", "=", "T", ".", "dot", "(", "ui", ",", "xp_t", ")", "+", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ")", "+", "bi", "# shape=(4, 20,)", "\n", "i", ",", "f", ",", "g", ",", "o", "=", "sigmoid", "(", "gates", "[", "0", "]", ")", ",", "sigmoid", "(", "gates", "[", "1", "]", ")", ",", "tanh", "(", "gates", "[", "2", "]", ")", ",", "sigmoid", "(", "gates", "[", "3", "]", ")", "\n", "c_t", "=", "f", "*", "c_t_pre1", "+", "i", "*", "g", "\n", "h_t", "=", "o", "*", "tanh", "(", "c_t", ")", "# shape=(20,)", "\n", "upq_t", "=", "T", ".", "dot", "(", "h_t_pre1", ",", "xp_t", "-", "xq_t", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "return", "[", "c_t", ",", "h_t", ",", "loss_t", "]", "\n", "", "[", "c", ",", "h", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", "]", ",", "\n", "outputs_info", "=", "[", "c0", ",", "h0", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", ",", "bi", "]", "]", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "uidx", "=", "T", ".", "iscalar", "(", ")", "# T.iscalar()\u7c7b\u578b\u662f TensorType(int32, )", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidx", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "uidx", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "uidx", "]", ",", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "uidx", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.OboLstm.train": [[405, 408], ["LSTM.OboLstm.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idx", ")", ":", "\n", "# consider the whole user sequence as a mini-batch and perform one update per sequence", "\n", "        ", "return", "self", ".", "seq_train", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.Lstm.__init__": [[414, 424], ["LSTM.LstmBasic.__init__", "LSTM.Lstm.__theano_train__", "LSTM.Lstm.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "Lstm", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "params", "=", "[", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", ")", "\n", "self", ".", "__theano_train__", "(", "n_hidden", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.Lstm.__theano_train__": [[425, 506], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bi.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "c0", "=", "T", ".", "alloc", "(", "self", ".", "c0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bi", "=", "bi", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "mask_t", ",", "c_t_pre1", ",", "h_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "gates", "=", "T", ".", "dot", "(", "ui", ",", "xp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wh", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "# shape=(4, 20, n)", "\n", "i", ",", "f", ",", "g", ",", "o", "=", "sigmoid", "(", "gates", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gates", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gates", "[", "3", "]", ")", ".", "T", "\n", "c_t", "=", "f", "*", "c_t_pre1", "+", "i", "*", "g", "# shape=(n, 20)", "\n", "h_t", "=", "o", "*", "tanh", "(", "c_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "xp_t", "-", "xq_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "c_t", ",", "h_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "c", ",", "h", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0", ",", "h0", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bi", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "# int32", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.Lstm.train": [[514, 516], ["LSTM.Lstm.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.exe_time": [[25, 39], ["datetime.datetime.now", "print", "func", "datetime.datetime.now", "print", "print", "print"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "name", "=", "func", ".", "__name__", "\n", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "end", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ")", ")", "\n", "print", "(", "\"-- {%s} end:   @ %ss\"", "%", "(", "name", ",", "end", ")", ")", "\n", "total", "=", "(", "end", "-", "start", ")", ".", "total_seconds", "(", ")", "\n", "print", "(", "\"-- {%s} total: @ %.2fs = %.2fh\"", "%", "(", "name", ",", "total", ",", "total", "/", "3600.0", ")", ")", "\n", "return", "back", "\n", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.main": [[518, 521], ["print"], "function", ["None"], ["", "", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "print", "(", "'... construct the class: LSTM'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.__init__": [[34, 66], ["numpy.random.RandomState", "theano.tensor.shared_randomstreams.RandomStreams", "theano.tensor.shared_randomstreams.RandomStreams", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.RandomState.randint", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6784\u5efa \u6a21\u578b\u53c2\u6570\n        :param n_item: \u5546\u54c1items\u7684\u6570\u76ee\n        :param n_in: rnn\u8f93\u5165\u5411\u91cf\u7684\u7ef4\u5ea6\n        :return:\n        \"\"\"", "\n", "# \u6765\u81ea\u4e8etheano\u5b98\u7f51\u7684dAE\u90e8\u5206\u3002", "\n", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "123", ")", "\n", "self", ".", "thea_rng", "=", "RandomStreams", "(", "rng", ".", "randint", "(", "2", "**", "30", ")", ")", "# \u65d7\u4e0b\u968f\u673a\u51fd\u6570\u53ef\u5728GPU\u4e0b\u8fd0\u884c\u3002", "\n", "# \u7528mask\u8fdb\u884c\u8865\u5168\u540e\u7684train/test", "\n", "tra_buys_masks", ",", "tra_masks", ",", "tra_buys_neg_masks", "=", "train", "\n", "tes_buys_masks", ",", "tes_masks", ",", "tes_buys_neg_masks", "=", "test", "\n", "self", ".", "tra_buys_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tra_buys_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tes_buys_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tes_buys_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tra_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tra_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tes_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tes_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tra_buys_neg_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tra_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "self", ".", "tes_buys_neg_masks", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "tes_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ")", "\n", "# \u628a\u8d85\u53c2\u6570shared", "\n", "self", ".", "alpha_lambda", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "alpha_lambda", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# \u521d\u59cb\u5316\uff0c\u5148\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u518dself.\u4fee\u9970\u6210\u5b9e\u4f8b\u53d8\u91cf", "\n", "rang", "=", "0.5", "\n", "ui", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_user", ",", "n_in", ")", ")", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# shape=(n_item, 20)", "\n", "self", ".", "ui", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ui", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# \u5b58\u653e\u8bad\u7ec3\u597d\u7684users\u3001items\u8868\u8fbe\u3002\u7528\u4e8e\u8ba1\u7b97\u6240\u6709users\u5bf9\u6240\u6709items\u7684\u8bc4\u5206\uff1ausers * items", "\n", "trained_items", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "\n", "trained_users", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_user", ",", "n_hidden", ")", ")", "\n", "self", ".", "trained_items", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "trained_items", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "trained_users", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "trained_users", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.update_neg_masks": [[67, 71], ["BPR.MfBasic.tra_buys_neg_masks.set_value", "BPR.MfBasic.tes_buys_neg_masks.set_value", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_neg_masks", "(", "self", ",", "tra_buys_neg_masks", ",", "tes_buys_neg_masks", ")", ":", "\n", "# \u6bcf\u4e2aepoch\u90fd\u66f4\u65b0\u8d1f\u6837\u672c", "\n", "        ", "self", ".", "tra_buys_neg_masks", ".", "set_value", "(", "np", ".", "asarray", "(", "tra_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ",", "borrow", "=", "True", ")", "\n", "self", ".", "tes_buys_neg_masks", ".", "set_value", "(", "np", ".", "asarray", "(", "tes_buys_neg_masks", ",", "dtype", "=", "'int32'", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.update_trained_items": [[72, 76], ["BPR.MfBasic.lt.get_value", "BPR.MfBasic.trained_items.set_value", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "        ", "lt", "=", "self", ".", "lt", ".", "get_value", "(", "borrow", "=", "True", ")", "# self.lt\u662fshared\uff0c\u7528get_value()\u3002", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "lt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "# update", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.update_trained_users": [[77, 81], ["BPR.MfBasic.ui.get_value", "BPR.MfBasic.trained_users.set_value", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_users", "(", "self", ")", ":", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684users\u8868\u8fbe", "\n", "        ", "ui", "=", "self", ".", "ui", ".", "get_value", "(", "borrow", "=", "True", ")", "\n", "self", ".", "trained_users", ".", "set_value", "(", "np", ".", "asarray", "(", "ui", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "# update", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.compute_sub_all_scores": [[82, 86], ["theano.dot", "theano.dot", "theano.dot.eval"], "methods", ["None"], ["", "def", "compute_sub_all_scores", "(", "self", ",", "start_end", ")", ":", "# \u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u4f20\u8fc7\u6765\u5b9e\u6570\u53c2\u6570", "\n", "# \u8ba1\u7b97users * items\uff0c\u6bcf\u4e2a\u7528\u6237\u5bf9\u6240\u6709\u5546\u54c1\u7684\u8bc4\u5206(\u9700\u53bb\u6389\u586b\u5145\u7b26)", "\n", "        ", "sub_all_scores", "=", "T", ".", "dot", "(", "self", ".", "trained_users", "[", "start_end", "]", ",", "self", ".", "trained_items", "[", ":", "-", "1", "]", ".", "T", ")", "\n", "return", "sub_all_scores", ".", "eval", "(", ")", "# shape=(sub_n_user, n_item)", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.compute_sub_auc_preference": [[87, 100], ["theano.sum", "theano.sum", "theano.sum.eval", "users.reshape"], "methods", ["None"], ["", "def", "compute_sub_auc_preference", "(", "self", ",", "start_end", ")", ":", "\n", "# items.shape=(n_item+1, 20)\uff0c\u56e0\u4e3a\u662fmask\u5f62\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u586b\u5145\u7b26\u3002", "\n", "# \u6ce8\u610f\u77e9\u9635\u5f62\u5f0f\u7684\u7d22\u5f15\u65b9\u5f0f\u3002", "\n", "        ", "tes_items", "=", "self", ".", "trained_items", "[", "self", ".", "tes_buys_masks", "[", "start_end", "]", "]", "# shape=(sub_n_user, len(tes_mask[0]), n_hidden)", "\n", "tes_items_neg", "=", "self", ".", "trained_items", "[", "self", ".", "tes_buys_neg_masks", "[", "start_end", "]", "]", "\n", "users", "=", "self", ".", "trained_users", "[", "start_end", "]", "\n", "shp0", ",", "shp2", "=", "users", ".", "shape", "# shape=(sub_n_user, n_hidden)", "\n", "# \u5229\u7528\u6027\u8d28\uff1a(n_user, 1, n_hidden) * (n_user, len, n_hidden) = (n_user, len, n_hidden)\uff0c\u5373broadcast", "\n", "# \u5229\u7528\u6027\u8d28\uff1anp.sum((n_user, len, n_hidden), axis=2) = (n_user, len)\uff0c", "\n", "#         \u5373\u5f97\u5230\u5404\u7528\u6237\u5bf9test\u91cc\u6b63\u8d1f\u6837\u672c\u7684\u504f\u597d\u503c", "\n", "all_upqs", "=", "T", ".", "sum", "(", "users", ".", "reshape", "(", "(", "shp0", ",", "1", ",", "shp2", ")", ")", "*", "(", "tes_items", "-", "tes_items_neg", ")", ",", "axis", "=", "2", ")", "\n", "all_upqs", "*=", "self", ".", "tes_masks", "[", "start_end", "]", "# \u53ea\u4fdd\u7559\u539f\u5148test items\u5bf9\u5e94\u6709\u6548\u4f4d\u7f6e\u7684\u504f\u597d\u503c", "\n", "return", "all_upqs", ".", "eval", "(", ")", ">", "0", "# \u5c06>0\u7684\u6807\u4e3aTrue, \u4e5f\u5c31\u662f1", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole": [[101, 115], ["BPR.MfBasic.thea_rng.binomial", "theano.Rebroadcast", "theano.Rebroadcast"], "methods", ["None"], ["", "def", "get_corrupted_input_whole", "(", "self", ",", "inp", ",", "corruption_prob", ")", ":", "\n", "# \u5904\u74062D\u77e9\u9635\uff1arandomly set whole feature to zero. Matrix.shape=(n, m)", "\n", "# denoising\u65b9\u5f0f0\uff1a\u968f\u673a\u5c06\u67d0\u4e9b\u56fe\u3001\u6587\u7279\u5f81\u6574\u4f53\u6027\u7f6e\u4e3a0", "\n", "# \u6bd4\u5982\u539f\u5148\u4e00\u6761\u5e8f\u5217\u7684\u56fe\u50cf\u7279\u5f81\u662f(num, 1024); \u90a3\u4e480/1\u6982\u7387\u77e9\u9635\u662f(num, 1), T.Rebroadcast\uff0c\u518d\u76f8\u4e58", "\n", "# if corruption_prob < 0. or corruption_prob >= 1.:", "\n", "#     raise Exception('Drop prob must be in interval [0, 1)')", "\n", "        ", "retain_prob", "=", "1.", "-", "corruption_prob", "\n", "randoms", "=", "self", ".", "thea_rng", ".", "binomial", "(", "\n", "size", "=", "(", "inp", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "# shape=(num, 1)", "\n", "n", "=", "1", ",", "\n", "p", "=", "retain_prob", ",", "# p\u662f\u5f971\u7684\u6982\u7387\u3002", "\n", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "randoms", "=", "T", ".", "Rebroadcast", "(", "(", "1", ",", "True", ")", ")", "(", "randoms", ")", "\n", "return", "inp", "*", "randoms", "# shape=(num, 1024)", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch": [[116, 126], ["BPR.MfBasic.thea_rng.binomial", "theano.Rebroadcast", "theano.Rebroadcast"], "methods", ["None"], ["", "def", "get_corrupted_input_whole_minibatch", "(", "self", ",", "inp", ",", "corruption_prob", ")", ":", "\n", "# \u5904\u74063D\u77e9\u9635", "\n", "        ", "retain_prob", "=", "1.", "-", "corruption_prob", "\n", "randoms", "=", "self", ".", "thea_rng", ".", "binomial", "(", "\n", "size", "=", "(", "inp", ".", "shape", "[", "0", "]", ",", "inp", ".", "shape", "[", "1", "]", ",", "1", ")", ",", "# shape=(seq_length, batch_size, 1)", "\n", "n", "=", "1", ",", "\n", "p", "=", "retain_prob", ",", "# p\u662f\u5f971\u7684\u6982\u7387\u3002", "\n", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "randoms", "=", "T", ".", "Rebroadcast", "(", "(", "2", ",", "True", ")", ")", "(", "randoms", ")", "\n", "return", "inp", "*", "randoms", "# shape=(seq_length, batch_size, 1024)", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.dropout": [[127, 141], ["BPR.MfBasic.thea_rng.binomial"], "methods", ["None"], ["", "def", "dropout", "(", "self", ",", "inp", ",", "drop_prob", ")", ":", "\n", "# \u5904\u7406\u5411\u91cf\uff1arandomly set some positions to zero. Vector.shape=(n, )", "\n", "# \u4f8b\u5982\u4e00\u4e2a\u5411\u91cf20\u7ef4\uff0c\u5c31\u670920\u4e2a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u670920\u4e2a\u795e\u7ecf\u5143\u3002", "\n", "# train\u65f6\u505adropout\uff0ctest\u65f6\u8fd8\u662f\u5168\u8fde\u63a5\u3002", "\n", "# if drop_prob < 0. or drop_prob >= 1.:", "\n", "#     raise Exception('Drop prob must be in interval [0, 1)')", "\n", "        ", "retain_prob", "=", "1.", "-", "drop_prob", "# \u53d60.5\u5c31\u53ef\u4ee5\u4e86\u3002", "\n", "randoms", "=", "self", ".", "thea_rng", ".", "binomial", "(", "\n", "size", "=", "inp", ".", "shape", ",", "# \u751f\u6210\u4e0e\u5411\u91cfinp\u540c\u6837\u7ef4\u5ea6\u76840\u30011\u5411\u91cf", "\n", "n", "=", "1", ",", "# \u6bcf\u4e2a\u795e\u7ecf\u5143\u5b9e\u9a8c\u4e00\u6b21", "\n", "p", "=", "retain_prob", ")", "# \u6bcf\u4e2a\u795e\u7ecf\u5143*1\u7684\u6982\u7387\u4e3ap/retain_prob\u3002*0\u7684\u6982\u7387\u4e3adrop_prob", "\n", "inp", "*=", "randoms", "# \u5c4f\u853d\u67d0\u4e9b\u795e\u7ecf\u5143\uff0c\u91cd\u7f6e\u4e3a0", "\n", "inp", "/=", "retain_prob", "# drop\u5b8c\u540e\u9700\u8981rescale\uff0c\u4ee5\u7ef4\u6301inp\u5728dropout\u524d\u540e\u7684\u6570\u503c\u548c(sum)\u4e0d\u53d8\u3002", "\n", "return", "inp", "# \u76f4\u63a5\u672c\u5730\u4fee\u6539inp\uff0c\u6240\u4ee5\u8c03\u7528\u65f6'self.dropout(x, 0.5)'\u5373\u53ef\u76f4\u63a5\u672c\u5730\u4fee\u6539\u8f93\u5165x\u3002", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboMf.__init__": [[146, 154], ["BPR.MfBasic.__init__", "theano.sum", "theano.sum", "BPR.OboMf.__theano_train__", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "OboMf", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "params", "=", "[", "self", ".", "ui", ",", "self", ".", "lt", "]", "# \u4e24\u4e2a\u90fd\u662f\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", ")", "\n", "self", ".", "__theano_train__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboMf.__theano_train__": [[155, 191], ["theano.dot", "theano.dot", "theano.sum", "theano.sum", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "theano.function", "theano.function", "theano.function", "theano.function", "theano.iscalar", "theano.iscalar", "theano.iscalar", "theano.iscalar", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda']", "\n", "uidx", ",", "pidx", "=", "T", ".", "iscalar", "(", ")", ",", "T", ".", "iscalar", "(", ")", "\n", "ui", "=", "self", ".", "ui", "[", "uidx", "]", "# shape=(n_in, )", "\n", "xp", "=", "self", ".", "lt", "[", "pidx", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u6837\u672c\uff0c\u8ba1\u7b97\u7528\u6237\u8868\u8fbe * \u6b63\u6837\u672c\u7684\u5f97\u5206\uff0c\u4e0e\u76ee\u6807\u5206\u6570\u505a\u5dee\uff0c\u7b97\u5e73\u65b9. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230(1, 1)\n        \"\"\"", "\n", "pre", "=", "T", ".", "dot", "(", "ui", ",", "xp", ")", "\n", "err", "=", "5.0", "-", "pre", "\n", "loss", "=", "err", "*", "err", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, L2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ui", ",", "xp", "]", "]", ")", ")", "\n", "costs", "=", "(", "\n", "loss", "+", "\n", "0.5", "*", "l2", "*", "l2_sqr", ")", "\n", "# SGD", "\n", "update_ui", "=", "T", ".", "set_subtensor", "(", "ui", ",", "ui", "-", "lr", "*", "T", ".", "grad", "(", "costs", ",", "ui", ")", ")", "# sub_tensor \u6c42\u5bfc\u66f4\u65b0", "\n", "update_xp", "=", "T", ".", "set_subtensor", "(", "xp", ",", "xp", "-", "lr", "*", "T", ".", "grad", "(", "costs", ",", "xp", ")", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# \u8f93\u5165\u7528\u6237\u3001\u6b63\u8d1f\u6837\u672c\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "self", ".", "train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidx", ",", "pidx", "]", ",", "\n", "outputs", "=", "loss", ",", "\n", "updates", "=", "[", "(", "self", ".", "ui", ",", "update_ui", ")", ",", "# \u628a sub_tensor \u7684\u66f4\u65b0\u8fd4\u56de\u5230\u539f\u53c2\u6570\u91cc", "\n", "(", "self", ".", "lt", ",", "update_xp", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboMf.train": [[192, 194], ["BPR.OboMf.train"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.train"], ["", "def", "train", "(", "self", ",", "u_idx", ",", "p_idx", ")", ":", "\n", "        ", "return", "self", ".", "train", "(", "u_idx", ",", "p_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboBpr.__init__": [[198, 206], ["BPR.MfBasic.__init__", "theano.sum", "theano.sum", "BPR.OboBpr.__theano_train__", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "OboBpr", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "params", "=", "[", "self", ".", "ui", ",", "self", ".", "lt", "]", "# \u4e24\u4e2a\u90fd\u662f\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", ")", "\n", "self", ".", "__theano_train__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboBpr.__theano_train__": [[207, 244], ["theano.dot", "theano.dot", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.function", "theano.function", "theano.function", "theano.function", "theano.iscalar", "theano.iscalar", "theano.ivector", "theano.ivector", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.set_subtensor", "theano.set_subtensor", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda']", "\n", "uidx", ",", "pqidx", "=", "T", ".", "iscalar", "(", ")", ",", "T", ".", "ivector", "(", ")", "\n", "usr", "=", "self", ".", "ui", "[", "uidx", "]", "# shape=(n_in, )", "\n", "xpq", "=", "self", ".", "lt", "[", "pqidx", "]", "# shape=(2, n_in), \u8fd9\u4fe9\u80af\u5b9a\u4e0d\u662f\u540c\u4e00\u4e2aitem\u3002", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\uff0c\u8ba1\u7b97\u5f53\u524d\u635f\u5931\u5e76\u66f4\u65b0user/\u6b63\u8d1f\u6837\u672c. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230(1, 1)\n            uij  = user * (xp - xq)\n            upq = log(sigmoid(uij))\n        \"\"\"", "\n", "uij", "=", "T", ".", "dot", "(", "usr", ",", "xpq", "[", "0", "]", "-", "xpq", "[", "1", "]", ")", "\n", "upq", "=", "T", ".", "log", "(", "sigmoid", "(", "uij", ")", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, L2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "bpr_l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "usr", ",", "xpq", "]", "]", ")", ")", "\n", "costs", "=", "(", "\n", "-", "upq", "+", "\n", "0.5", "*", "l2", "*", "bpr_l2_sqr", ")", "\n", "# 1\u4e2auser\uff0c2\u4e2aitems\uff0c\u8fd9\u79cd\u66f4\u65b0\u6c42\u5bfc\u662f\u6700\u5feb\u7684\u3002\u76f4\u63a5\u5bf9sub\u6c42\u5bfc\uff0c\u5e76\u975e\u5bf9par\u6c42\u5bfc\u3002", "\n", "pars_subs", "=", "[", "(", "self", ".", "ui", ",", "usr", ")", ",", "(", "self", ".", "lt", ",", "xpq", ")", "]", "\n", "bpr_updates", "=", "[", "(", "par", ",", "T", ".", "set_subtensor", "(", "sub", ",", "sub", "-", "lr", "*", "T", ".", "grad", "(", "costs", ",", "sub", ")", ")", ")", "\n", "for", "par", ",", "sub", "in", "pars_subs", "]", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u7528\u6237\u3001\u6b63\u8d1f\u6837\u672c\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "self", ".", "bpr_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidx", ",", "pqidx", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "bpr_updates", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboBpr.train": [[245, 248], ["BPR.OboBpr.bpr_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "u_idx", ",", "pq_idx", ")", ":", "\n", "# \u67d0\u7528\u6237\u7684\u67d0\u6b21\u8d2d\u4e70", "\n", "        ", "return", "self", ".", "bpr_train", "(", "u_idx", ",", "pq_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboVBpr.__init__": [[252, 273], ["BPR.MfBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "BPR.OboVBpr.__theano_train__", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "fea_img", ")", ":", "\n", "        ", "super", "(", "OboVBpr", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "# \u521d\u59cb\u5316\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "mi", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u4f4e\u7ef4\u7684\u591a\u6a21\u6001\u878d\u5408\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "ue", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_user", ",", "n_in", ")", ")", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# image, shape=(20, 1024)", "\n", "self", ".", "mi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mi", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ue", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ue", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "self", ".", "ui", ",", "self", ".", "lt", ",", "self", ".", "ue", ",", "self", ".", "ei", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "3", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "3", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboVBpr.__theano_train__": [[274, 322], ["theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "bpr_updates.extend", "theano.function", "theano.function", "theano.function", "theano.function", "theano.iscalar", "theano.iscalar", "theano.ivector", "theano.ivector", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.dot", "theano.dot", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.set_subtensor", "theano.set_subtensor", "theano.grad", "theano.grad", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev', 'fea_random_zero']", "\n", "ei", "=", "self", ".", "ei", "\n", "\n", "uidx", ",", "pqidx", "=", "T", ".", "iscalar", "(", ")", ",", "T", ".", "ivector", "(", ")", "\n", "usr", "=", "self", ".", "ui", "[", "uidx", "]", "# shape=(n_in, )", "\n", "xpq", "=", "self", ".", "lt", "[", "pqidx", "]", "\n", "use", "=", "self", ".", "ue", "[", "uidx", "]", "\n", "ipq", "=", "self", ".", "fi", "[", "pqidx", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\uff0c\u8ba1\u7b97\u5f53\u524d\u635f\u5931\u5e76\u66f4\u65b0user/\u6b63\u8d1f\u6837\u672c. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230(1, 1)\n            uij  = user * (xp - xq)\n            upq = log(sigmoid(uij))\n        \"\"\"", "\n", "uij", "=", "(", "\n", "T", ".", "dot", "(", "usr", ",", "xpq", "[", "0", "]", "-", "xpq", "[", "1", "]", ")", "+", "\n", "T", ".", "dot", "(", "use", ",", "T", ".", "dot", "(", "ei", ",", "ipq", "[", "0", "]", "-", "ipq", "[", "1", "]", ")", ")", ")", "\n", "upq", "=", "T", ".", "log", "(", "sigmoid", "(", "uij", ")", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, L2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "bpr_l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "usr", ",", "xpq", ",", "use", "]", "]", ")", ")", "\n", "bpr_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", "]", "]", ")", ")", "\n", "costs", "=", "(", "\n", "-", "upq", "+", "\n", "0.5", "*", "l2", "*", "bpr_l2_sqr", "+", "\n", "0.5", "*", "l2_ev", "*", "bpr_l2_ev", ")", "\n", "pars_subs", "=", "[", "(", "self", ".", "ui", ",", "usr", ")", ",", "(", "self", ".", "lt", ",", "xpq", ")", ",", "(", "self", ".", "ue", ",", "use", ")", "]", "\n", "bpr_updates", "=", "[", "(", "par", ",", "T", ".", "set_subtensor", "(", "sub", ",", "sub", "-", "lr", "*", "T", ".", "grad", "(", "costs", ",", "sub", ")", ")", ")", "\n", "for", "par", ",", "sub", "in", "pars_subs", "]", "\n", "pars_alls", "=", "[", "self", ".", "ei", "]", "\n", "bpr_updates", ".", "extend", "(", "[", "(", "par", ",", "par", "-", "lr", "*", "T", ".", "grad", "(", "costs", ",", "par", ")", ")", "for", "par", "in", "pars_alls", "]", ")", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u7528\u6237\u3001\u6b63\u8d1f\u6837\u672c\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "self", ".", "bpr_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidx", ",", "pqidx", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "bpr_updates", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboVBpr.train": [[323, 326], ["BPR.OboVBpr.bpr_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "u_idx", ",", "pq_idx", ")", ":", "\n", "# \u67d0\u7528\u6237\u7684\u67d0\u6b21\u8d2d\u4e70", "\n", "        ", "return", "self", ".", "bpr_train", "(", "u_idx", ",", "pq_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboVBpr.update_trained_items": [[327, 336], ["theano.dot", "theano.dot", "mi.eval.eval.eval", "BPR.OboVBpr.mi.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "BPR.OboVBpr.trained_items.set_value", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u4f4e\u7ef4\u7684\u56fe\u50cf\u8868\u8fbe", "\n", "        ", "mi", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "# shape=(n, 20)", "\n", "mi", "=", "mi", ".", "eval", "(", ")", "\n", "self", ".", "mi", ".", "set_value", "(", "np", ".", "asarray", "(", "mi", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mi", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboVBpr.update_trained_users": [[337, 342], ["theano.concatenate", "theano.concatenate", "users.eval.eval.eval", "BPR.OboVBpr.trained_users.set_value", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_users", "(", "self", ")", ":", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684users\u8868\u8fbe", "\n", "        ", "users", "=", "T", ".", "concatenate", "(", "(", "self", ".", "ui", ",", "self", ".", "ue", ")", ",", "axis", "=", "1", ")", "# shape=(n, 40)", "\n", "users", "=", "users", ".", "eval", "(", ")", "\n", "self", ".", "trained_users", ".", "set_value", "(", "np", ".", "asarray", "(", "users", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.Bpr.__init__": [[349, 357], ["BPR.MfBasic.__init__", "theano.sum", "theano.sum", "BPR.Bpr.__theano_train__", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "Bpr", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "params", "=", "[", "self", ".", "ui", ",", "self", ".", "lt", "]", "# \u4e24\u4e2a\u90fd\u662f\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", ")", "\n", "self", ".", "__theano_train__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.Bpr.__theano_train__": [[358, 410], ["theano.ivector", "theano.ivector", "theano.imatrix", "theano.imatrix", "theano.ivector", "theano.ivector", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "seq_updates.extend", "theano.function", "theano.function", "theano.function", "theano.function", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "theano.grad", "theano.grad", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda']", "\n", "uidxs", "=", "T", ".", "ivector", "(", ")", "\n", "pq_idxs_t", "=", "T", ".", "imatrix", "(", ")", "# 0\u884c:\u6b63\u6837\u672cs\uff0c1\u884c:\u8d1f\u6837\u672cs\u3002", "\n", "mask_t", "=", "T", ".", "ivector", "(", ")", "\n", "usrs", "=", "self", ".", "ui", "[", "uidxs", "]", "# shape=(n, 20)", "\n", "xpqs", "=", "self", ".", "lt", "[", "pq_idxs_t", "]", "# shape=(2, n, 20)", "\n", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pq_idxs_t", ")", "# \u76f4\u63a5\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\uff0c\u8ba1\u7b97\u5f53\u524d\u635f\u5931\u5e76\u66f4\u65b0user/\u6b63\u8d1f\u6837\u672c. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230(1, 1)\n            uij  = user * (xp - xq)\n            upq = log(sigmoid(uij))\n        \"\"\"", "\n", "upq_t", "=", "T", ".", "sum", "(", "usrs", "*", "(", "xpqs", "[", "0", "]", "-", "xpqs", "[", "1", "]", ")", ",", "axis", "=", "1", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, L2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "bpr_l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "usrs", ",", "xpqs", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss_t", ")", "\n", "costs", "=", "(", "\n", "-", "upq", "+", "# \u8fd9\u91cc\u4e0d\u9700\u8981\u9664\u4ee5batch_size\uff0c\u8ddfRNN\u4e0d\u4e00\u6837\u3002", "\n", "0.5", "*", "l2", "*", "bpr_l2_sqr", ")", "\n", "# \u8fd9\u6837\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46self.lt\u7684\u8ba1\u7b97\u5e76\u4e0d\u51c6\u786e\uff0c\u56e0\u4e3axpqs\u91cc\u53ef\u80fd\u6709\u91cd\u590d\u3002", "\n", "# n\u4e2auser\uff0c2n\u4e2aitems\uff0c\u8fd9\u79cd\u66f4\u65b0\u6c42\u5bfc\u662f\u6700\u5feb\u7684\u3002\u76f4\u63a5\u5bf9sub\u6c42\u5bfc\uff0c\u5e76\u975e\u5bf9par\u6c42\u5bfc\u3002", "\n", "# pars_subs = [(self.ui, usrs), (self.lt, xpqs)]      # \u4e0d\u77e5\u9053\u884c\u4e0d\u884c\uff0c\u8fd9\u91cc\u7528xpqs\u2026\u2026", "\n", "# seq_updates = [(par, T.set_subtensor(sub, sub - lr * T.grad(costs, sub)))", "\n", "#                for par, sub in pars_subs]", "\n", "# \u4ee5\u4e0b\u662f\u51c6\u786e\u5199\u6cd5\uff0c\u4f46\u6bd4one_by_one\u8981\u6162\u3002", "\n", "pars_subs", "=", "[", "(", "self", ".", "ui", ",", "usrs", ")", "]", "\n", "seq_updates", "=", "[", "(", "par", ",", "T", ".", "set_subtensor", "(", "sub", ",", "sub", "-", "lr", "*", "T", ".", "grad", "(", "costs", ",", "sub", ")", ")", ")", "\n", "for", "par", ",", "sub", "in", "pars_subs", "]", "\n", "pars_subs", "=", "[", "(", "self", ".", "lt", ",", "uiq_x", ",", "uiq_pqs", ")", "]", "\n", "seq_updates", ".", "extend", "(", "[", "(", "par", ",", "T", ".", "set_subtensor", "(", "sub", ",", "sub", "-", "lr", "*", "T", ".", "grad", "(", "costs", ",", "par", ")", "[", "idxs", "]", ")", ")", "# \u4f46\u8fd9\u91cc\u592a\u8017\u65f6\u3002", "\n", "for", "par", ",", "sub", ",", "idxs", "in", "pars_subs", "]", ")", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u7528\u6237\u3001\u6b63\u8d1f\u6837\u672c\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "self", ".", "bpr_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidxs", ",", "pq_idxs_t", ",", "mask_t", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.Bpr.train": [[411, 415], ["BPR.Bpr.train"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.train"], ["", "def", "train", "(", "self", ",", "uidxs", ",", "pq_idxs_t", ",", "mask_t", ")", ":", "\n", "# \u4e0d\u540c\u4e8eRNN\u91cc\u5c06\u591a\u6761\u7528\u6237\u5e8f\u5217\u4f5c\u4e3a\u4e00\u4e2amini-batch\uff0c", "\n", "# \u8fd9\u91cc\u662f\u5c06\u591a\u4e2a\u7528\u6237\u6309\u884c\u6392\u597d\u540e\uff0c\u6bcf\u6b21\u53d6\u4e00\u5217\u3002", "\n", "        ", "return", "self", ".", "train", "(", "uidxs", ",", "pq_idxs_t", ",", "mask_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.exe_time": [[21, 30], ["time.time", "print", "func", "print", "print", "time.strftime", "time.strftime", "time.localtime", "time.localtime", "time.time"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"-- @%s, {%s} start\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "print", "(", "\"-- @%s, {%s} end\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "print", "(", "\"-- @%.3fs taken for {%s}\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ",", "func", ".", "__name__", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.main": [[417, 420], ["None"], "function", ["None"], ["", "", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.exe_time": [[23, 32], ["time.time", "print", "func", "print", "print", "time.strftime", "time.strftime", "time.localtime", "time.localtime", "time.time"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"-- @%s, {%s} start\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "print", "(", "\"-- @%s, {%s} end\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "print", "(", "\"-- @%.3fs taken for {%s}\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ",", "func", ".", "__name__", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_data": [[34, 180], ["print", "pandas.read_csv", "min", "max", "time.strftime", "time.strftime", "print", "print", "print", "print", "print", "int", "int", "print", "zip", "zip", "print", "print", "print", "print", "print", "print", "sorted", "sorted", "zip", "print", "set", "dict", "print", "dict", "print", "print", "print", "print", "print", "numpy.asarray().cumsum", "numpy.asarray", "set", "set", "len", "len", "len", "time.localtime", "time.localtime", "time.strftime", "int", "int", "int", "list", "list.sort", "tra_buys.append", "tes_buys.append", "all_trans.extend", "all_trans.extend", "len", "len", "len", "zip", "zip", "collections.Counter", "test_i_intervals_items[].append", "len", "sum", "sum", "sum", "sum", "sum", "len", "sum", "len", "sum", "str", "int", "set", "time.localtime", "len", "len", "len", "set", "set", "range", "range", "range", "int", "set", "set", "numpy.asarray", "buy.split", "buy.split", "len", "len", "math.ceil", "sum", "sum", "sum", "sum"], "function", ["None"], ["", "def", "load_data", "(", "dataset", ",", "mode", ",", "split", ",", "intervals", ")", ":", "\n", "    ", "\"\"\"\n    \u52a0\u8f7d\u8d2d\u4e70\u8bb0\u5f55\u6587\u4ef6\uff0c\u751f\u6210\u6570\u636e\u3002\n    \"\"\"", "\n", "# \u7528\u6237\u8d2d\u4e70\u5386\u53f2\u8bb0\u5f55\uff0c\u539f\u7eaa\u5f55. \u5d4c\u5957\u5217\u8868, \u5143\u7d20\u4e3a\u4e00\u4e2a\u7528\u6237\u7684\u8d2d\u4e70\u8bb0\u5f55(\u5c0f\u5217\u8868)", "\n", "# \u540c\u65f6\u4fdd\u7559\u597d\u8d2d\u4e70\u65f6\u95f4\u7684\u6700\u5927\u6700\u5c0f\u503c\uff0c\u7528\u4e8e\u4ee5\u6b64\u4e3a\u51c6\u5207\u5206\u6570\u636e\u3002", "\n", "print", "(", "'Original data ...'", ")", "\n", "buys", "=", "pd", ".", "read_csv", "(", "dataset", ",", "sep", "=", "' '", ")", "\n", "all_user_buys", "=", "[", "[", "str", "(", "i", ")", "for", "i", "in", "buy", ".", "split", "(", "','", ")", "]", "for", "buy", "in", "buys", "[", "'buys'", "]", "]", "# \u540e\u8fb9\u7528", "\n", "all_user_stps", "=", "[", "[", "int", "(", "i", ")", "for", "i", "in", "buy", ".", "split", "(", "','", ")", "]", "for", "buy", "in", "buys", "[", "'time_stamps'", "]", "]", "# \u540e\u8fb9\u7528", "\n", "all_trans", "=", "[", "item", "for", "buys", "in", "all_user_buys", "for", "item", "in", "buys", "]", "\n", "all_stmps", "=", "[", "stmp", "for", "stps", "in", "all_user_stps", "for", "stmp", "in", "stps", "]", "\n", "tran_num", ",", "user_num", ",", "item_num", "=", "len", "(", "all_trans", ")", ",", "len", "(", "all_user_buys", ")", ",", "len", "(", "set", "(", "all_trans", ")", ")", "\n", "stmp_min", "=", "min", "(", "all_stmps", ")", "\n", "stmp_max", "=", "max", "(", "all_stmps", ")", "\n", "date_min", "=", "time", ".", "strftime", "(", "\"%Y.%m.%d %H:%M:%S\"", ",", "time", ".", "localtime", "(", "stmp_min", ")", ")", "\n", "date_max", "=", "time", ".", "strftime", "(", "\"%Y.%m.%d %H:%M:%S\"", ",", "time", ".", "localtime", "(", "stmp_max", ")", ")", "\n", "print", "(", "'\\tusers, items, trans:    = {v1}, {v2}, {v3}'", ".", "format", "(", "v1", "=", "user_num", ",", "v2", "=", "item_num", ",", "v3", "=", "tran_num", ")", ")", "\n", "print", "(", "'\\ttime_stamp min, max:    = [{v1}, {v2}]'", ".", "format", "(", "v1", "=", "stmp_min", ",", "v2", "=", "stmp_max", ")", ")", "\n", "print", "(", "'\\ttime_date  min, max:    = [{v1}, {v2}]'", ".", "format", "(", "v1", "=", "date_min", ",", "v2", "=", "date_max", ")", ")", "\n", "print", "(", "'\\tavg. user buy:          = {val}'", ".", "format", "(", "val", "=", "1.0", "*", "tran_num", "/", "user_num", ")", ")", "\n", "print", "(", "'\\tavg. item bought:       = {val}'", ".", "format", "(", "val", "=", "1.0", "*", "tran_num", "/", "item_num", ")", ")", "\n", "# Amazon\u53ea\u9009\u7528\u6700\u8fd12\u5e74\u7684\u4ea4\u6613\u6570\u636e\uff0c\u5176\u4ea4\u6613\u91cf\uff1a1311204/1561102 = 84.0%(a5)", "\n", "# stmp_max = 1406073600,                # 2014.07.23_08.00.00", "\n", "if", "'amazon'", "in", "dataset", ":", "\n", "        ", "stmp_min", "=", "1406073600", "-", "63072000", "# 2012.07.23_08.00.00   # 1343001600", "\n", "date_min", "=", "time", ".", "strftime", "(", "\"%Y.%m.%d %H:%M:%S\"", ",", "time", ".", "localtime", "(", "stmp_min", ")", ")", "\n", "", "per1", "=", "int", "(", "stmp_min", "+", "(", "stmp_max", "-", "stmp_min", ")", "*", "split", "[", "0", "]", ")", "# 0.6 / 0.8", "\n", "per2", "=", "int", "(", "stmp_min", "+", "(", "stmp_max", "-", "stmp_min", ")", "*", "split", "[", "1", "]", ")", "# 0.8 / 1.0", "\n", "\n", "# # \u505a\u6d4b\u8bd5\uff1a\u628aall_stmps\u5212\u5206\u4e3a12\u4e2a\u533a\u95f4\uff0c\u770b\u770b\u5404\u533a\u95f4\u5404\u6709\u591a\u5c11\u4ea4\u6613\u91cf\u3002\u636e\u6b64\u9009\u5b9a'Amazon'\u7684\u65f6\u95f4\u533a\u95f4(\u8fd12\u5e74\u5185)\u3002\u5df2\u6d4b\u8bd5\u901a\u8fc7", "\n", "# nums = 11", "\n", "# space = (stmp_max - stmp_min) / nums", "\n", "# inters = np.array([0 for _ in range(nums)])", "\n", "# for stmp in all_stmps:", "\n", "#     if stmp == stmp_min:        # \u4e0d\u5bf9\u8fd9\u4e2a\u505a\u5224\u65ad\u7684\u8bdd\uff0c\u90a3\u4e9bstmp=stmp_min\u7684\uff0c\u4f1a\u88ab\u52a0\u5230\u533a\u95f4inters[-1]\u91cc\u53bb\u3002", "\n", "#         inters[0] += 1", "\n", "#     elif stmp > stmp_min:", "\n", "#         inter = int(math.ceil(1.0 * (stmp - stmp_min) / space)) - 1   # \u6309\u4ea4\u6613\u65f6\u95f4\u8ba1\u7b97\u843d\u5728\u54ea\u4e2a\u533a\u95f4", "\n", "#         inters[inter] += 1", "\n", "# print(inters, sum(inters))", "\n", "# # \u505a\u6d4b\u8bd5\uff1a\u67e5\u770bamazon\u6700\u8fd12\u5e74\u7684\u4ea4\u6613\u5360\u603b\u91cf\u7684\u767e\u5206\u6bd4\u3002", "\n", "# a = 0", "\n", "# for stmp in all_stmps:", "\n", "#     if stmp >= stmp_min:", "\n", "#         a += 1", "\n", "# print(a)", "\n", "# print(1.0 * a / tran_num)", "\n", "# # \u505a\u6d4b\u8bd5\uff1a\u533a\u95f4\u5212\u5206\u91cc\u5404\u533a\u95f4\u7684\u4ea4\u6613\u91cf\u662f\u5426\u6b63\u786e\u3002\u5df2\u6d4b\u8bd5\u901a\u8fc7", "\n", "# k = 0", "\n", "# for stmp in all_stmps:", "\n", "#     if stmp > per80:        # \u91c7\u7528per80\u65f6\uff0cnums=5", "\n", "#         k += 1", "\n", "# print(k)                    # \u6d4b\u8bd5\uff1ak = inters[-1]\uff0c\u6b63\u786e\u3002", "\n", "\n", "# \u9009\u53d6\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u6216\u8bad\u7ec3\u96c6\u3001\u6d4b\u8bd5\u96c6\uff0c\u5e76\u5bf9test\u53bb\u91cd\u3002", "\n", "# \u4e0d\u7ba1\u662fvalid\u8fd8\u662ftest\u6a21\u5f0f\uff0c\u7edf\u4e00\u7528train\uff0ctest\u8868\u793a\u3002", "\n", "print", "(", "'Remove duplicates in test set: mode = {val} ...'", ".", "format", "(", "val", "=", "mode", ")", ")", "\n", "tra_buys", ",", "tes_buys", "=", "[", "]", ",", "[", "]", "\n", "only_left", ",", "only_right", "=", "0", ",", "0", "\n", "for", "ubuys", ",", "ustps", "in", "zip", "(", "all_user_buys", ",", "all_user_stps", ")", ":", "\n", "# \u6309\u8d2d\u4e70\u65f6\u95f4\u4e3a\u51c6\u8fdb\u884c\u5207\u5206\u3002\u4e0d\u91c7\u7528\u9009\u53d6\u6bcf\u4e2a\u8d2d\u4e70\u5e8f\u5217\u524d\u8fb9\u7684\u591a\u5c11", "\n", "        ", "split0", "=", "int", "(", "len", "(", "[", "stmp", "for", "stmp", "in", "ustps", "if", "stmp", "<", "stmp_min", "]", ")", ")", "# \u5e8f\u5217\u4ecestmp_min\u5bf9\u5e94\u7684item\u5f00\u59cb\u3002", "\n", "split1", "=", "int", "(", "len", "(", "[", "stmp", "for", "stmp", "in", "ustps", "if", "stmp", "<=", "per1", "]", ")", ")", "\n", "split2", "=", "int", "(", "len", "(", "[", "stmp", "for", "stmp", "in", "ustps", "if", "stmp", "<=", "per2", "]", ")", ")", "\n", "# valid: 60%train, 20%valid -> [0, 60], (60, 80]", "\n", "# test:  80%train, 20%test  -> [0, 80], (80, 100]", "\n", "left", ",", "right", "=", "ubuys", "[", "split0", ":", "split1", "]", ",", "ubuys", "[", "split1", ":", "split2", "]", "\n", "# \u4e22\u6389\u5207\u5206\u540e\u53ea\u6709left\u6216\u53ea\u6709right\u7684user\u3002", "\n", "if", "not", "left", ":", "\n", "            ", "only_right", "+=", "1", "\n", "continue", "\n", "", "if", "not", "right", ":", "\n", "            ", "only_left", "+=", "1", "\n", "continue", "\n", "# test\u9700\u8981\u81ea\u8eab\u53bb\u91cd\u3002test\u53ea\u8981\u6709\u5143\u7d20\uff0cright_stay\u5c31\u4e0d\u4f1a\u4e3a\u7a7a\u3002", "\n", "", "right_stay", "=", "list", "(", "set", "(", "right", ")", ")", "# \u5148\u53bb\u91cd", "\n", "right_stay", ".", "sort", "(", "key", "=", "right", ".", "index", ")", "# test\u91cc\u5269\u4f59\u7684\u6309\u539f\u987a\u5e8f\u6392", "\n", "# \u4fdd\u5b58", "\n", "tra_buys", ".", "append", "(", "left", ")", "\n", "tes_buys", ".", "append", "(", "right_stay", ")", "\n", "\n", "# \u53bb\u91cd\u540e\u7684\u57fa\u672c\u4fe1\u606f\uff0c", "\n", "", "all_trans", "=", "[", "]", "\n", "for", "utra", ",", "utes", "in", "zip", "(", "tra_buys", ",", "tes_buys", ")", ":", "\n", "        ", "all_trans", ".", "extend", "(", "utra", ")", "\n", "all_trans", ".", "extend", "(", "utes", ")", "\n", "", "tran_num", ",", "user_num", ",", "item_num", "=", "len", "(", "all_trans", ")", ",", "len", "(", "tra_buys", ")", ",", "len", "(", "set", "(", "all_trans", ")", ")", "\n", "print", "(", "'\\tusers, items, trans:    = {v1}, {v2}, {v3}'", ".", "format", "(", "v1", "=", "user_num", ",", "v2", "=", "item_num", ",", "v3", "=", "tran_num", ")", ")", "\n", "print", "(", "'\\ttime_stamp min, max:    = [{v1}, {v2}]'", ".", "format", "(", "v1", "=", "stmp_min", ",", "v2", "=", "stmp_max", ")", ")", "\n", "print", "(", "'\\ttime_date  min, max:    = [{v1}, {v2}]'", ".", "format", "(", "v1", "=", "date_min", ",", "v2", "=", "date_max", ")", ")", "\n", "print", "(", "'\\tavg. user buy:          = {val}'", ".", "format", "(", "val", "=", "1.0", "*", "tran_num", "/", "user_num", ")", ")", "\n", "print", "(", "'\\tavg. item bought:       = {val}'", ".", "format", "(", "val", "=", "1.0", "*", "tran_num", "/", "item_num", ")", ")", "\n", "print", "(", "'\\tuseful, only left, only right: = {v0} + {v1} + {v2} = {v4}'", "\n", ".", "format", "(", "v0", "=", "user_num", ",", "v1", "=", "only_left", ",", "v2", "=", "only_right", ",", "v4", "=", "user_num", "+", "only_left", "+", "only_right", ")", ")", "\n", "\n", "# \u5148\u6309test\u91cc\u5404list\u957f\u5ea6\u6392\u5e8f(minor sort)\uff0c\u518d\u6309train\u91cc\u5404list\u6392\u5e8f(major sort)\u3002", "\n", "tes_sorted", "=", "sorted", "(", "zip", "(", "tra_buys", ",", "tes_buys", ")", ",", "key", "=", "lambda", "x", ":", "len", "(", "x", "[", "1", "]", ")", ",", "reverse", "=", "True", ")", "\n", "tra_sorted", "=", "sorted", "(", "tes_sorted", ",", "key", "=", "lambda", "x", ":", "len", "(", "x", "[", "0", "]", ")", ",", "reverse", "=", "True", ")", "\n", "tra_buys", ",", "tes_buys", "=", "zip", "(", "*", "tra_sorted", ")", "\n", "\n", "# \u5efa\u7acb\u5546\u54c1\u522b\u540d\u5b57\u5178\u3002\u66f4\u65b0\u8d2d\u4e70\u8bb0\u5f55\uff0c\u66ff\u6362\u4e3a0~len(se)-1\u7684\u522b\u540d", "\n", "print", "(", "'Use aliases to represent items ...'", ")", "\n", "all_items", "=", "set", "(", "all_trans", ")", "\n", "aliases_dict", "=", "dict", "(", "zip", "(", "all_items", ",", "range", "(", "item_num", ")", ")", ")", "\n", "tra_buys", "=", "[", "[", "aliases_dict", "[", "i", "]", "for", "i", "in", "buy", "]", "for", "buy", "in", "tra_buys", "]", "\n", "tes_buys", "=", "[", "[", "aliases_dict", "[", "i", "]", "for", "i", "in", "buy", "]", "for", "buy", "in", "tes_buys", "]", "\n", "\n", "# \u6d4b\u8bd5\u96c6\u6307\u6807\u7684\u5206\u6bcd\u8ba1\u7b97: test\u96c6\u4e2ditems\u6309\u6b21\u6570\u5212\u5206\u4e3a\u533a\u95f4\uff0c", "\n", "# \uff081\uff09\u5404\u533a\u95f4\u6709\u54ea\u4e9bitems\uff0c\uff082\uff09\u5404\u533a\u95f4\u7d2f\u8ba1\u6709\u591a\u5c11trans\uff0c\uff083\uff09cold/avtive\u7684items\u3001trans\u5404\u6709\u591a\u5c11", "\n", "print", "(", "'Devide test items into intervals ...'", ")", "\n", "tra", "=", "[", "item", "for", "buy", "in", "tra_buys", "for", "item", "in", "buy", "]", "\n", "tes", "=", "[", "item", "for", "buy", "in", "tes_buys", "for", "item", "in", "buy", "]", "# \u7528\u522b\u540d\u8868\u793a\u7684\u6240\u6709test items", "\n", "test_i_cou", "=", "dict", "(", "Counter", "(", "tes", ")", ")", "# key\u662f\u6d4b\u8bd5\u96c6\u91cc\u5546\u54c1\u522b\u540d\uff0cvalue\u662f\u5b83\u51fa\u73b0\u7684\u6b21\u6570", "\n", "test_i_intervals_items", "=", "[", "[", "]", "for", "_", "in", "range", "(", "intervals", "[", "1", "]", ")", "]", "# \u67d0\u533a\u95f4\u91cc\u6709\u54ea\u4e9bitems\uff0c", "\n", "test_i_intervals_trans", "=", "[", "0", "for", "_", "in", "range", "(", "intervals", "[", "1", "]", ")", "]", "# \u533a\u95f4\u91cc\u7684items\u5bf9\u5e94\u6709\u591a\u5c11transactions\uff0c\u7b97\u8bc4\u4ef7\u6307\u6807\u7528\u3002", "\n", "for", "item", "in", "tes", ":", "\n", "        ", "inter", "=", "int", "(", "math", ".", "ceil", "(", "1.0", "*", "test_i_cou", "[", "item", "]", "/", "intervals", "[", "0", "]", ")", ")", "-", "1", "# \u6309\u88ab\u8d2d\u4e70\u6b21\u6570\u8ba1\u7b97\u843d\u5728\u54ea\u4e2a\u533a\u95f4", "\n", "if", "inter", ">=", "intervals", "[", "1", "]", "-", "1", ":", "# inter >= \u6700\u5927\u7684\u533a\u95f4\u6807\u53f7", "\n", "            ", "inter", "=", "-", "1", "\n", "", "test_i_intervals_items", "[", "inter", "]", ".", "append", "(", "item", ")", "\n", "test_i_intervals_trans", "[", "inter", "]", "+=", "1", "\n", "", "test_i_intervals_items", "=", "[", "len", "(", "set", "(", "one_inter", ")", ")", "for", "one_inter", "in", "test_i_intervals_items", "]", "\n", "print", "(", "'\\tintervals               = {val}'", ".", "format", "(", "val", "=", "intervals", ")", ")", "\n", "print", "(", "'\\ttest_i_intervals_items  = {v1}, {v2}'", ".", "format", "(", "v1", "=", "sum", "(", "test_i_intervals_items", ")", ",", "v2", "=", "test_i_intervals_items", ")", ")", "\n", "print", "(", "'\\ttest_i_intervals_trans  = {v1}, {v2}'", ".", "format", "(", "v1", "=", "sum", "(", "test_i_intervals_trans", ")", ",", "v2", "=", "test_i_intervals_trans", ")", ")", "\n", "tmp1", "=", "[", "sum", "(", "test_i_intervals_items", "[", ":", "2", "]", ")", ",", "sum", "(", "test_i_intervals_items", "[", "2", ":", "]", ")", "]", "\n", "tmp2", "=", "[", "sum", "(", "test_i_intervals_trans", "[", ":", "2", "]", ")", ",", "sum", "(", "test_i_intervals_trans", "[", "2", ":", "]", ")", "]", "# <=4, >=5", "\n", "print", "(", "'\\ttest_i_cold_active_items= {v1}, {v2}'", ".", "format", "(", "v1", "=", "sum", "(", "tmp1", ")", ",", "v2", "=", "tmp1", ")", ")", "\n", "print", "(", "'\\ttest_i_cold_active_trans= {v1}, {v2}'", ".", "format", "(", "v1", "=", "sum", "(", "tmp2", ")", ",", "v2", "=", "tmp2", ")", ")", "\n", "assert", "sum", "(", "tmp1", ")", "==", "len", "(", "set", "(", "tes", ")", ")", "# test item: unique items", "\n", "assert", "sum", "(", "tmp2", ")", "==", "len", "(", "tes", ")", "# test item: bought times", "\n", "# \u4e0b\u9762\u4e24\u4e2aarray\uff0c\u662f\u8981\u6839\u636e\u5404\u4e2ainterval\u91cc\u7684\u4ea4\u6613\u6570\uff0c\u6765\u7b97AUC\u3001Recall@30\u7684\u533a\u95f4\u547d\u4e2d\u7387\u7684\u3002", "\n", "test_i_intervals_cumsum", "=", "np", ".", "asarray", "(", "test_i_intervals_trans", ")", ".", "cumsum", "(", ")", "\n", "test_i_cold_active", "=", "np", ".", "asarray", "(", "tmp2", ")", "\n", "assert", "test_i_intervals_cumsum", "[", "-", "1", "]", "==", "sum", "(", "test_i_cold_active", ")", "\n", "# test_i_cold_active = np.asarray([sum(test_i_intervals_trans[:2]),       # <= 4", "\n", "#                                  sum(test_i_intervals_trans[2:])])      # >= 5 \u660e\u660e\u662ftemp2", "\n", "set_tra", "=", "set", "(", "tra", ")", "\n", "set_tes", "=", "set", "(", "tes", ")", "# \u7528\u4e8e\u628ates\u91cc\u5176\u4e2d\u4e00\u90e8\u5206item\u7684\u56fe\u6587\u7279\u5f81\u7ed9\u6e05\u96f6\u3002", "\n", "# check: \u7528\u4e8e\u67e5\u770btes\u72ec\u6709\u591a\u5c11items\uff0c\u4e0etra\u5171\u6709\u591a\u5c11items\u3002", "\n", "# print(len(set_tra), len(set_tes))", "\n", "# print(len(set_tra - set_tes), len(set_tra & set_tes), len(set_tes - set_tra))", "\n", "return", "[", "(", "user_num", ",", "item_num", ")", ",", "aliases_dict", ",", "\n", "(", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", ",", "\n", "(", "tra_buys", ",", "tes_buys", ")", ",", "(", "set_tra", ",", "set_tes", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_img_txt": [[182, 208], ["print", "numpy.zeros", "glob.glob", "enumerate", "print", "print", "print", "all_it_items.extend", "json.load.items", "open", "json.load", "set", "set", "set", "set", "str", "numpy.array", "aliases_dict.keys", "aliases_dict.keys", "len", "len", "len", "json.load.keys", "e.split", "str"], "function", ["None"], ["", "def", "load_img_txt", "(", "name", ",", "it_fea_path", ",", "item_num", ",", "it_size", ",", "aliases_dict", ")", ":", "\n", "    ", "\"\"\"\n    \u52a0\u8f7d\u56fe\u50cf\u7279\u5f81\u5230shape=(n, 1024)\u7684array\u91cc\n    \u7279\u5f81\u4e0d\u9700\u8981shared\uff0c\u6784\u5efa\u6a21\u578b\u65f6\u4f20\u5165\u540e\u518dshared\n    \"\"\"", "\n", "print", "(", "name", "+", "' features ...'", ")", "# name = 'Image' or 'Text'", "\n", "fea_it", "=", "np", ".", "zeros", "(", "(", "item_num", "+", "1", ",", "it_size", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217\u7684/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "files", "=", "glob", ".", "glob", "(", "it_fea_path", "+", "'*.json'", ")", "\n", "all_it_items", "=", "[", "]", "\n", "for", "i", ",", "e", "in", "enumerate", "(", "files", ")", ":", "\n", "        ", "print", "(", "'\\tread file {v1} / {v2}: {v3}'", ".", "format", "(", "v1", "=", "i", ",", "v2", "=", "len", "(", "files", ")", ",", "v3", "=", "e", ".", "split", "(", "'\\\\'", ")", "[", "-", "1", "]", ")", ")", "\n", "with", "open", "(", "e", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "iff", "=", "json", ".", "load", "(", "f", ")", "\n", "", "all_it_items", ".", "extend", "(", "[", "str", "(", "i", ")", "for", "i", "in", "iff", ".", "keys", "(", ")", "]", ")", "\n", "for", "key", ",", "val", "in", "iff", ".", "items", "(", ")", ":", "# key\u662fitem\u7684ID\u6807\u53f7\uff0cval\u662flist\u683c\u5f0f\u7684", "\n", "            ", "try", ":", "\n", "# np.array(val)\u53ef\u8f6c\u6362\u4e3ashape=(1024,)\uff0c\u6b63\u597d\u662fshape=(n, 2014)\u4e2d\u7684\u67d0\u4e00\u9879", "\n", "                ", "fea_it", "[", "aliases_dict", "[", "str", "(", "key", ")", "]", "]", "=", "np", ".", "array", "(", "val", ")", "\n", "", "except", "KeyError", ":", "# \u56fe\u50cf\u7279\u5f81\u591a\u63d0\u4e86\u7528\u6237\u6ca1\u8d2d\u4e70\u5546\u54c1\u7684\uff0c\u6bd4\u5982\u7528\u5168\u96c6\u7279\u5f81\u65f6\uff0c\u8be5\u5904\u4f1a\u62a5\u9519, \u56e0\u4e3a\u6b64\u65f6dict\u91cc\u6ca1\u6709\u8fd9\u4e2aid", "\n", "# print('\\tredundant image features: {val}, '.format(val=key),)    # \u8f93\u51fa\u65f6\u4e0d\u6362\u884c", "\n", "                ", "pass", "\n", "", "", "del", "iff", "\n", "", "ts1", ",", "ts2", "=", "set", "(", "aliases_dict", ".", "keys", "(", ")", ")", "-", "set", "(", "all_it_items", ")", ",", "set", "(", "all_it_items", ")", "-", "set", "(", "aliases_dict", ".", "keys", "(", ")", ")", "\n", "print", "(", "'\\tWarning: These items do not have features. Set to zero. = {v1}'", ".", "format", "(", "v1", "=", "len", "(", "ts1", ")", ")", ")", "\n", "print", "(", "'\\tWarning: These items\\' features are redundant. No use. = {v1}'", ".", "format", "(", "v1", "=", "len", "(", "ts2", ")", ")", ")", "\n", "return", "fea_it", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_data_buys_masks": [[236, 244], ["max", "len", "zip"], "function", ["None"], ["", "def", "fun_data_buys_masks", "(", "all_user_buys", ",", "tail", ")", ":", "\n", "# \u5c06train/test\u4e2d\u5e8f\u5217\u8865\u5168\u4e3a\u6700\u5927\u957f\u5ea6\uff0c\u8865\u7684idx\u503c=item_num. \u4e3a\u4e86\u80fd\u5728theano\u91cc\u5bf9\u5176\u8fdb\u884cshared\u3002", "\n", "# tail, \u6dfb\u52a0\u7684\u3002\u5546\u54c1\u7d22\u5f15\u662f0~item_num-1\uff0c\u6240\u4ee5\u8be5\u503c[item_num]\u662f\u6ca1\u6709\u5bf9\u5e94\u5546\u54c1\u5b9e\u7269\u7684\u3002", "\n", "    ", "us_lens", "=", "[", "len", "(", "ubuys", ")", "for", "ubuys", "in", "all_user_buys", "]", "\n", "len_max", "=", "max", "(", "us_lens", ")", "\n", "us_buys", "=", "[", "ubuys", "+", "tail", "*", "(", "len_max", "-", "le", ")", "for", "ubuys", ",", "le", "in", "zip", "(", "all_user_buys", ",", "us_lens", ")", "]", "\n", "us_msks", "=", "[", "[", "1", "]", "*", "le", "+", "[", "0", "]", "*", "(", "len_max", "-", "le", ")", "for", "le", "in", "us_lens", "]", "\n", "return", "us_buys", ",", "us_msks", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tra": [[246, 263], ["enumerate", "us_negs.append", "random.randint", "random.randint", "len"], "function", ["None"], ["", "def", "fun_random_neg_masks_tra", "(", "item_num", ",", "tras_mask", ")", ":", "\n", "    ", "\"\"\"\n    \u4ecenum\u4ef6\u5546\u54c1\u91cc\u968f\u673a\u62bd\u53d6\u4e0e\u6bcf\u4e2a\u7528\u6237\u7684\u8d2d\u4e70\u5e8f\u5217\u7b49\u957f\u4e14\u4e0d\u5728\u5df2\u8d2d\u4e70\u5546\u54c1\u91cc\u7684\u6807\u53f7\u3002\u540e\u8fb9\u8865\u5168\u7684\u8d1f\u6837\u672c\u7528\u865a\u62df\u5546\u54c1[item_num]\n    \"\"\"", "\n", "us_negs", "=", "[", "]", "\n", "for", "utra", "in", "tras_mask", ":", "# \u6bcf\u6761\u7528\u6237\u5e8f\u5217", "\n", "        ", "unegs", "=", "[", "]", "\n", "for", "i", ",", "e", "in", "enumerate", "(", "utra", ")", ":", "\n", "            ", "if", "item_num", "==", "e", ":", "# \u8868\u793a\u8be5\u8d2d\u4e70\u4ee5\u53ca\u4e4b\u540e\u7684\uff0c\u90fd\u662f\u7528\u865a\u62df\u5546\u54c1[item_num]\u6765\u8865\u5168\u7684", "\n", "                ", "unegs", "+=", "[", "item_num", "]", "*", "(", "len", "(", "utra", ")", "-", "i", ")", "# \u8d2d\u4e70\u5e8f\u5217\u91cc\u5bf9\u5e94\u8865\u5168\u5546\u54c1\u7684\u8d1f\u6837\u672c\u4e5f\u7528\u8865\u5168\u5546\u54c1\u8868\u793a", "\n", "break", "\n", "", "j", "=", "random", ".", "randint", "(", "0", ",", "item_num", "-", "1", ")", "# \u8d1f\u6837\u672c\u5728\u5546\u54c1\u77e9\u9635\u91cc\u7684\u6807\u53f7", "\n", "while", "j", "in", "utra", ":", "# \u62bd\u5230\u7684\u4e0d\u662f\u7528\u6237\u8bad\u7ec3\u96c6\u91cc\u7684\u3002", "\n", "                ", "j", "=", "random", ".", "randint", "(", "0", ",", "item_num", "-", "1", ")", "\n", "", "unegs", "+=", "[", "j", "]", "\n", "", "us_negs", ".", "append", "(", "unegs", ")", "\n", "", "return", "us_negs", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tes": [[265, 282], ["zip", "enumerate", "us_negs.append", "random.randint", "random.randint", "len"], "function", ["None"], ["", "def", "fun_random_neg_masks_tes", "(", "item_num", ",", "tras_mask", ",", "tess_mask", ")", ":", "\n", "    ", "\"\"\"\n    \u4ecenum\u4ef6\u5546\u54c1\u91cc\u968f\u673a\u62bd\u53d6\u4e0e\u6d4b\u8bd5\u5e8f\u5217\u7b49\u957f\u4e14\u4e0d\u5728\u8bad\u7ec3\u5e8f\u5217\u3001\u4e5f\u4e0d\u518d\u6d4b\u8bd5\u5e8f\u5217\u91cc\u7684\u6807\u53f7\n    \"\"\"", "\n", "us_negs", "=", "[", "]", "\n", "for", "utra", ",", "utes", "in", "zip", "(", "tras_mask", ",", "tess_mask", ")", ":", "\n", "        ", "unegs", "=", "[", "]", "\n", "for", "i", ",", "e", "in", "enumerate", "(", "utes", ")", ":", "\n", "            ", "if", "item_num", "==", "e", ":", "# \u5c3e\u90e8\u8865\u5168mask", "\n", "                ", "unegs", "+=", "[", "item_num", "]", "*", "(", "len", "(", "utes", ")", "-", "i", ")", "\n", "break", "\n", "", "j", "=", "random", ".", "randint", "(", "0", ",", "item_num", "-", "1", ")", "\n", "while", "j", "in", "utra", "or", "j", "in", "utes", ":", "# \u4e0d\u5728\u8bad\u7ec3\u5e8f\u5217\uff0c\u4e5f\u4e0d\u5728\u9884\u6d4b\u5e8f\u5217\u91cc\u3002", "\n", "                ", "j", "=", "random", ".", "randint", "(", "0", ",", "item_num", "-", "1", ")", "\n", "", "unegs", "+=", "[", "j", "]", "\n", "", "us_negs", ".", "append", "(", "unegs", ")", "\n", "", "return", "us_negs", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.main": [[284, 287], ["print"], "function", ["None"], ["", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "print", "(", "'... load the dataset, and  no need to set shared.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.Gru4Rec.__init__": [[38, 67], ["GRU.GruBasic.__init__", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "GRU_Parallel.Gru4Rec.__theano_train__", "GRU_Parallel.Gru4Rec.__theano_predict__", "theano.sum", "theano.sum", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "Gru4Rec", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "rang", "=", "0.5", "\n", "# input", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# hidden state", "\n", "uix", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_in", ")", ")", "\n", "whx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "h0x", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bix", "=", "np", ".", "zeros", "(", "(", "3", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "self", ".", "uix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uix", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "bix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bix", ")", "\n", "self", ".", "h0x", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0x", ")", "\n", "# output", "\n", "vyx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "# \u548clt\u4e00\u6837\u3002", "\n", "self", ".", "vyx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vyx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# square loss", "\n", "self", ".", "paramsx", "=", "[", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", "]", "\n", "self", ".", "l2_sqrx", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "T", ".", "sum", "(", "self", ".", "vyx", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramsx", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqrx", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.Gru4Rec.__theano_train__": [[68, 160], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "ixps.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "yxps.dimshuffle", "yxqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "uiq_ps", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pidxs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_ix", "=", "self", ".", "lt", "[", "uiq_ps", "]", "\n", "\n", "# \u8f93\u51fa\u7aef\uff1ah*w \u5f97\u5230score", "\n", "yxps", ",", "yxqs", "=", "self", ".", "vyx", "[", "pidxs", "]", ",", "self", ".", "vyx", "[", "qidxs", "]", "\n", "yxps", ",", "yxqs", "=", "yxps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "yxqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_yx", "=", "self", ".", "vyx", "[", "uiq_pqs", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "yxp_t", ",", "yxq_t", ",", "mask_t", ",", "hx_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "# shape=(20, n)", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "yxp_t", "-", "yxq_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "hx_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "hx", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "yxps", ",", "yxqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "yxps", ",", "yxqs", ",", "ixps", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_ix", "=", "T", ".", "set_subtensor", "(", "uiq_ix", ",", "uiq_ix", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_ps", "]", ")", "\n", "update_yx", "=", "T", ".", "set_subtensor", "(", "uiq_yx", ",", "uiq_yx", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "vyx", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_ix", ")", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "vyx", ",", "update_yx", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.Gru4Rec.__theano_predict__": [[161, 211], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "h.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.arange", "theano.arange", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predict__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "def", "recurrence", "(", "ixp_t", ",", "hx_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "# shape=(20, n)", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "# shape=(n, 20)", "\n", "return", "hx_t", "\n", "", "hx", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "ixps", ",", "\n", "outputs_info", "=", "h0x", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "hx", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 60)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predict", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.Gru4Rec.train": [[213, 215], ["GRU_Parallel.Gru4Rec.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.Gru4Rec.pgru_predict": [[216, 218], ["GRU_Parallel.Gru4Rec.seq_predict"], "methods", ["None"], ["", "def", "pgru_predict", "(", "self", ",", "idxs", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "return", "self", ".", "seq_predict", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.Gru4Rec.pgru_update_trained_items": [[219, 223], ["GRU_Parallel.Gru4Rec.vyx.get_value", "GRU_Parallel.Gru4Rec.trained_items.set_value", "numpy.asarray"], "methods", ["None"], ["", "def", "pgru_update_trained_items", "(", "self", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "        ", "items", "=", "self", ".", "vyx", ".", "get_value", "(", "borrow", "=", "True", ")", "# self.lt\u662fshared\uff0c\u7528get_value()\u3002", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelRes.__init__": [[229, 296], ["GRU.GruBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "GRU_Parallel.PGruParallelRes.__theano_trainx__", "GRU_Parallel.PGruParallelRes.__theano_traint__", "GRU_Parallel.PGruParallelRes.__theano_traini__", "GRU_Parallel.PGruParallelRes.__theano_predictx__", "GRU_Parallel.PGruParallelRes.__theano_predictt__", "GRU_Parallel.PGruParallelRes.__theano_predicti__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_trainx__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_traint__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_traini__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_predictx__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_predictt__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_predicti__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ")", ":", "\n", "        ", "super", "(", "PGruParallelRes", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "# \u56fe\u6587\u7279\u5f81", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "rang", "=", "0.5", "\n", "# input", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# hidden state", "\n", "uix", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_in", ")", ")", "\n", "uit", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_txt", ")", ")", "\n", "uii", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_img", ")", ")", "# \u56e0\u4e3a\u4ed6\u6587\u7ae0\u91cc\u6ca1\u5bf9\u56fe\u6587\u7279\u5f81\u505a\u964d\u7ef4\u5904\u7406", "\n", "whx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "wht", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "whi", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "h0x", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0t", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0i", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bix", "=", "np", ".", "zeros", "(", "(", "3", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bit", "=", "np", ".", "zeros", "(", "(", "3", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bii", "=", "np", ".", "zeros", "(", "(", "3", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "self", ".", "uix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uix", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "uit", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uit", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "uii", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uii", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "wht", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "wht", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whi", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "h0x", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0x", ")", "\n", "self", ".", "h0t", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0t", ")", "\n", "self", ".", "h0i", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0i", ")", "\n", "self", ".", "bix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bix", ")", "\n", "self", ".", "bit", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bit", ")", "\n", "self", ".", "bii", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bii", ")", "\n", "# output", "\n", "vyx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "# \u548clt\u4e00\u6837\u3002", "\n", "vyt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "\n", "vyi", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "\n", "self", ".", "vyx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vyx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vyt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vyt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vyi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vyi", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# square loss", "\n", "self", ".", "paramsx", "=", "[", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "paramst", "=", "[", "self", ".", "uit", ",", "self", ".", "wht", ",", "self", ".", "bit", "]", "\n", "self", ".", "paramsi", "=", "[", "self", ".", "uii", ",", "self", ".", "whi", ",", "self", ".", "bii", "]", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", ",", "\n", "self", ".", "uit", ",", "self", ".", "wht", ",", "self", ".", "bit", ",", "\n", "self", ".", "uii", ",", "self", ".", "whi", ",", "self", ".", "bii", "]", "\n", "self", ".", "l2_sqrx", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "T", ".", "sum", "(", "self", ".", "vyx", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramsx", "]", ")", ")", "\n", "self", ".", "l2_sqrt", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "vyt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramst", "]", ")", ")", "\n", "self", ".", "l2_sqri", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "vyi", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramsi", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "(", "self", ".", "l2_sqrx", "+", "self", ".", "l2_sqrt", "+", "self", ".", "l2_sqri", ")", ")", "\n", "self", ".", "__theano_trainx__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_traint__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_traini__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predictx__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predictt__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predicti__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelRes.__theano_trainx__": [[297, 389], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "ixps.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "yxps.dimshuffle", "yxqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_trainx__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "uiq_ps", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pidxs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_ix", "=", "self", ".", "lt", "[", "uiq_ps", "]", "\n", "\n", "# \u8f93\u51fa\u7aef\uff1ah*w \u5f97\u5230score", "\n", "yxps", ",", "yxqs", "=", "self", ".", "vyx", "[", "pidxs", "]", ",", "self", ".", "vyx", "[", "qidxs", "]", "\n", "yxps", ",", "yxqs", "=", "yxps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "yxqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_yx", "=", "self", ".", "vyx", "[", "uiq_pqs", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "yxp_t", ",", "yxq_t", ",", "mask_t", ",", "hx_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "# shape=(20, n)", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "yxp_t", "-", "yxq_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "hx_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "hx", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "yxps", ",", "yxqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "yxps", ",", "yxqs", ",", "ixps", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "paramsx", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "paramsx", ",", "seq_grads", ")", "]", "\n", "update_ix", "=", "T", ".", "set_subtensor", "(", "uiq_ix", ",", "uiq_ix", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_ps", "]", ")", "\n", "update_yx", "=", "T", ".", "set_subtensor", "(", "uiq_yx", ",", "uiq_yx", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "vyx", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_ix", ")", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "vyx", ",", "update_yx", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_trainx", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelRes.__theano_traint__": [[390, 493], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "ixps.dimshuffle.dimshuffle.dimshuffle", "itps.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "yxps.dimshuffle", "yxqs.dimshuffle", "ytps.dimshuffle", "ytqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_traint__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "itps", "=", "self", ".", "ft", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "itps", "=", "itps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "# \u8f93\u51fa\u7aef\uff1ah*w \u5f97\u5230score", "\n", "yxps", ",", "yxqs", "=", "self", ".", "vyx", "[", "pidxs", "]", ",", "self", ".", "vyx", "[", "qidxs", "]", "\n", "ytps", ",", "ytqs", "=", "self", ".", "vyt", "[", "pidxs", "]", ",", "self", ".", "vyt", "[", "qidxs", "]", "\n", "yxps", ",", "yxqs", "=", "yxps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "yxqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "ytps", ",", "ytqs", "=", "ytps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "ytqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_yt", "=", "self", ".", "vyt", "[", "uiq_pqs", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "yxp_t", ",", "yxq_t", ",", "\n", "itp_t", ",", "ytp_t", ",", "ytq_t", ",", "\n", "mask_t", ",", "hx_t_pre1", ",", "ht_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "z_rt", "=", "sigmoid", "(", "T", ".", "dot", "(", "uit", "[", ":", "2", "]", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", ":", "2", "]", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "zt", ",", "rt", "=", "z_rt", "[", "0", "]", ".", "T", ",", "z_rt", "[", "1", "]", ".", "T", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "# shape=(20, n)", "\n", "ct", "=", "tanh", "(", "T", ".", "dot", "(", "uit", "[", "2", "]", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", "2", "]", ",", "(", "rt", "*", "ht_t_pre1", ")", ".", "T", ")", "+", "bit", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "# shape=(n, 20)", "\n", "ht_t", "=", "(", "T", ".", "ones_like", "(", "zt", ")", "-", "zt", ")", "*", "ht_t_pre1", "+", "zt", "*", "ct", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "yxp_t", "-", "yxq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "ht_t_pre1", "*", "(", "ytp_t", "-", "ytq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "hx_t", ",", "ht_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "hx", ",", "ht", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "yxps", ",", "yxqs", ",", "\n", "itps", ",", "ytps", ",", "ytqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0t", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "yxps", ",", "yxqs", ",", "ixps", ",", "\n", "uit", ",", "wht", ",", "ytps", ",", "ytqs", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", ",", "bit", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "paramst", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "paramst", ",", "seq_grads", ")", "]", "\n", "update_yt", "=", "T", ".", "set_subtensor", "(", "uiq_yt", ",", "uiq_yt", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "vyt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "vyt", ",", "update_yt", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_traint", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelRes.__theano_traini__": [[494, 613], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "bii.dimshuffle.dimshuffle.dimshuffle", "ixps.dimshuffle.dimshuffle.dimshuffle", "itps.dimshuffle.dimshuffle.dimshuffle", "iips.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "yxps.dimshuffle", "yxqs.dimshuffle", "ytps.dimshuffle", "ytqs.dimshuffle", "yips.dimshuffle", "yiqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_traini__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "uii", ",", "whi", "=", "self", ".", "uii", ",", "self", ".", "whi", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0i", "=", "T", ".", "alloc", "(", "self", ".", "h0i", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bii", "=", "T", ".", "alloc", "(", "self", ".", "bii", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "bii", "=", "bii", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "itps", "=", "self", ".", "ft", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "iips", "=", "self", ".", "fi", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "itps", "=", "itps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "iips", "=", "iips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "# \u8f93\u51fa\u7aef\uff1ah*w \u5f97\u5230score", "\n", "yxps", ",", "yxqs", "=", "self", ".", "vyx", "[", "pidxs", "]", ",", "self", ".", "vyx", "[", "qidxs", "]", "\n", "ytps", ",", "ytqs", "=", "self", ".", "vyt", "[", "pidxs", "]", ",", "self", ".", "vyt", "[", "qidxs", "]", "\n", "yips", ",", "yiqs", "=", "self", ".", "vyi", "[", "pidxs", "]", ",", "self", ".", "vyi", "[", "qidxs", "]", "\n", "yxps", ",", "yxqs", "=", "yxps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "yxqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "ytps", ",", "ytqs", "=", "ytps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "ytqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "yips", ",", "yiqs", "=", "yips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "yiqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_yi", "=", "self", ".", "vyi", "[", "uiq_pqs", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "yxp_t", ",", "yxq_t", ",", "\n", "itp_t", ",", "ytp_t", ",", "ytq_t", ",", "\n", "iip_t", ",", "yip_t", ",", "yiq_t", ",", "\n", "mask_t", ",", "hx_t_pre1", ",", "ht_t_pre1", ",", "hi_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "z_rt", "=", "sigmoid", "(", "T", ".", "dot", "(", "uit", "[", ":", "2", "]", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", ":", "2", "]", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "[", ":", "2", "]", ")", "\n", "z_ri", "=", "sigmoid", "(", "T", ".", "dot", "(", "uii", "[", ":", "2", "]", ",", "iip_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whi", "[", ":", "2", "]", ",", "hi_t_pre1", ".", "T", ")", "+", "bii", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "zt", ",", "rt", "=", "z_rt", "[", "0", "]", ".", "T", ",", "z_rt", "[", "1", "]", ".", "T", "\n", "zi", ",", "ri", "=", "z_ri", "[", "0", "]", ".", "T", ",", "z_ri", "[", "1", "]", ".", "T", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "# shape=(20, n)", "\n", "ct", "=", "tanh", "(", "T", ".", "dot", "(", "uit", "[", "2", "]", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", "2", "]", ",", "(", "rt", "*", "ht_t_pre1", ")", ".", "T", ")", "+", "bit", "[", "2", "]", ")", "\n", "ci", "=", "tanh", "(", "T", ".", "dot", "(", "uii", "[", "2", "]", ",", "iip_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whi", "[", "2", "]", ",", "(", "ri", "*", "hi_t_pre1", ")", ".", "T", ")", "+", "bii", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "# shape=(n, 20)", "\n", "ht_t", "=", "(", "T", ".", "ones_like", "(", "zt", ")", "-", "zt", ")", "*", "ht_t_pre1", "+", "zt", "*", "ct", ".", "T", "\n", "hi_t", "=", "(", "T", ".", "ones_like", "(", "zi", ")", "-", "zi", ")", "*", "hi_t_pre1", "+", "zi", "*", "ci", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "yxp_t", "-", "yxq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "ht_t_pre1", "*", "(", "ytp_t", "-", "ytq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "hi_t_pre1", "*", "(", "yip_t", "-", "yiq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "hx_t", ",", "ht_t", ",", "hi_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "hx", ",", "ht", ",", "hi", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "yxps", ",", "yxqs", ",", "\n", "itps", ",", "ytps", ",", "ytqs", ",", "\n", "iips", ",", "yips", ",", "yiqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0t", ",", "h0i", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "yxps", ",", "yxqs", ",", "ixps", ",", "\n", "uit", ",", "wht", ",", "ytps", ",", "ytqs", ",", "\n", "uii", ",", "whi", ",", "yips", ",", "yiqs", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", ",", "bit", ",", "bii", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "paramsi", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "paramsi", ",", "seq_grads", ")", "]", "\n", "update_yi", "=", "T", ".", "set_subtensor", "(", "uiq_yi", ",", "uiq_yi", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "vyi", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "vyi", ",", "update_yi", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_traini", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelRes.__theano_predictx__": [[614, 662], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "h.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.arange", "theano.arange", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predictx__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "def", "recurrence", "(", "ixp_t", ",", "hx_t_pre1", ",", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "# shape=(20, n)", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "# shape=(n, 20)", "\n", "return", "hx_t", "\n", "", "hx", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "ixps", ",", "\n", "outputs_info", "=", "h0x", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "hx", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 60)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predictx", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelRes.__theano_predictt__": [[663, 721], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle.dimshuffle.dimshuffle", "itps.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.concatenate", "theano.concatenate", "theano.concatenate.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.arange", "theano.arange", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predictt__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "itps", "=", "self", ".", "ft", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "itps", "=", "itps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "def", "recurrence", "(", "ixp_t", ",", "itp_t", ",", "hx_t_pre1", ",", "ht_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "z_rt", "=", "sigmoid", "(", "T", ".", "dot", "(", "uit", "[", ":", "2", "]", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", ":", "2", "]", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "zt", ",", "rt", "=", "z_rt", "[", "0", "]", ".", "T", ",", "z_rt", "[", "1", "]", ".", "T", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "# shape=(20, n)", "\n", "ct", "=", "tanh", "(", "T", ".", "dot", "(", "uit", "[", "2", "]", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", "2", "]", ",", "(", "rt", "*", "ht_t_pre1", ")", ".", "T", ")", "+", "bit", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "# shape=(n, 20)", "\n", "ht_t", "=", "(", "T", ".", "ones_like", "(", "zt", ")", "-", "zt", ")", "*", "ht_t_pre1", "+", "zt", "*", "ct", ".", "T", "\n", "return", "[", "hx_t", ",", "ht_t", "]", "\n", "", "[", "hx", ",", "ht", "]", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "itps", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0t", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "T", ".", "concatenate", "(", "(", "hx", ",", "ht", ")", ",", "axis", "=", "2", ")", "# h.shape=(157, n, 60)", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 60)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predictt", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelRes.__theano_predicti__": [[722, 790], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "bii.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle.dimshuffle.dimshuffle", "itps.dimshuffle.dimshuffle.dimshuffle", "iips.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.concatenate", "theano.concatenate", "theano.concatenate.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.arange", "theano.arange", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predicti__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "uii", ",", "whi", "=", "self", ".", "uii", ",", "self", ".", "whi", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0i", "=", "T", ".", "alloc", "(", "self", ".", "h0i", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bii", "=", "T", ".", "alloc", "(", "self", ".", "bii", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "bii", "=", "bii", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "itps", "=", "self", ".", "ft", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "iips", "=", "self", ".", "fi", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "itps", "=", "itps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "iips", "=", "iips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "def", "recurrence", "(", "ixp_t", ",", "itp_t", ",", "iip_t", ",", "hx_t_pre1", ",", "ht_t_pre1", ",", "hi_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "z_rt", "=", "sigmoid", "(", "T", ".", "dot", "(", "uit", "[", ":", "2", "]", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", ":", "2", "]", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "[", ":", "2", "]", ")", "\n", "z_ri", "=", "sigmoid", "(", "T", ".", "dot", "(", "uii", "[", ":", "2", "]", ",", "iip_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whi", "[", ":", "2", "]", ",", "hi_t_pre1", ".", "T", ")", "+", "bii", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "zt", ",", "rt", "=", "z_rt", "[", "0", "]", ".", "T", ",", "z_rt", "[", "1", "]", ".", "T", "\n", "zi", ",", "ri", "=", "z_ri", "[", "0", "]", ".", "T", ",", "z_ri", "[", "1", "]", ".", "T", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "# shape=(20, n)", "\n", "ct", "=", "tanh", "(", "T", ".", "dot", "(", "uit", "[", "2", "]", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", "2", "]", ",", "(", "rt", "*", "ht_t_pre1", ")", ".", "T", ")", "+", "bit", "[", "2", "]", ")", "\n", "ci", "=", "tanh", "(", "T", ".", "dot", "(", "uii", "[", "2", "]", ",", "iip_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whi", "[", "2", "]", ",", "(", "ri", "*", "hi_t_pre1", ")", ".", "T", ")", "+", "bii", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "# shape=(n, 20)", "\n", "ht_t", "=", "(", "T", ".", "ones_like", "(", "zt", ")", "-", "zt", ")", "*", "ht_t_pre1", "+", "zt", "*", "ct", ".", "T", "\n", "hi_t", "=", "(", "T", ".", "ones_like", "(", "zi", ")", "-", "zi", ")", "*", "hi_t_pre1", "+", "zi", "*", "ci", ".", "T", "\n", "return", "[", "hx_t", ",", "ht_t", ",", "hi_t", "]", "\n", "", "[", "hx", ",", "ht", ",", "hi", "]", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "itps", ",", "iips", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0t", ",", "h0i", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "T", ".", "concatenate", "(", "(", "hx", ",", "ht", ",", "hi", ")", ",", "axis", "=", "2", ")", "# h.shape=(157, n, 60)", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 60)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predicti", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelRes.train": [[791, 798], ["GRU_Parallel.PGruParallelRes.seq_trainx", "GRU_Parallel.PGruParallelRes.seq_traint", "GRU_Parallel.PGruParallelRes.seq_traini"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "if", "epoch_i", "<", "epoch_n", "//", "3", ":", "\n", "            ", "return", "self", ".", "seq_trainx", "(", "idxs", ")", "\n", "", "elif", "epoch_i", "<", "epoch_n", "*", "2", "//", "3", ":", "\n", "            ", "return", "self", ".", "seq_traint", "(", "idxs", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "seq_traini", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelRes.pgru_predict": [[799, 806], ["GRU_Parallel.PGruParallelRes.seq_predictx", "GRU_Parallel.PGruParallelRes.seq_predictt", "GRU_Parallel.PGruParallelRes.seq_predicti"], "methods", ["None"], ["", "", "def", "pgru_predict", "(", "self", ",", "idxs", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "if", "epoch_i", "<", "epoch_n", "//", "3", ":", "\n", "            ", "return", "self", ".", "seq_predictx", "(", "idxs", ")", "\n", "", "elif", "epoch_i", "<", "epoch_n", "*", "2", "//", "3", ":", "\n", "            ", "return", "self", ".", "seq_predictt", "(", "idxs", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "seq_predicti", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelRes.pgru_update_trained_items": [[807, 821], ["GRU_Parallel.PGruParallelRes.vyx.get_value", "GRU_Parallel.PGruParallelRes.trained_items.set_value", "numpy.asarray", "GRU_Parallel.PGruParallelRes.vyt.get_value", "numpy.concatenate", "GRU_Parallel.PGruParallelRes.trained_items.set_value", "GRU_Parallel.PGruParallelRes.vyt.get_value", "GRU_Parallel.PGruParallelRes.vyi.get_value", "numpy.concatenate", "GRU_Parallel.PGruParallelRes.trained_items.set_value", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "", "def", "pgru_update_trained_items", "(", "self", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "vyx", "=", "self", ".", "vyx", ".", "get_value", "(", "borrow", "=", "True", ")", "# self.lt\u662fshared\uff0c\u7528get_value()\u3002", "\n", "if", "epoch_i", "<", "epoch_n", "//", "3", ":", "\n", "            ", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "vyx", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "", "elif", "epoch_i", "<", "epoch_n", "*", "2", "//", "3", ":", "\n", "            ", "vyt", "=", "self", ".", "vyt", ".", "get_value", "(", "borrow", "=", "True", ")", "\n", "items", "=", "np", ".", "concatenate", "(", "(", "vyx", ",", "vyt", ")", ",", "axis", "=", "1", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "vyt", "=", "self", ".", "vyt", ".", "get_value", "(", "borrow", "=", "True", ")", "\n", "vyi", "=", "self", ".", "vyi", ".", "get_value", "(", "borrow", "=", "True", ")", "\n", "items", "=", "np", ".", "concatenate", "(", "(", "vyx", ",", "vyt", ",", "vyi", ")", ",", "axis", "=", "1", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__init__": [[826, 894], ["GRU.GruBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "GRU_Parallel.PGruParallelResBpr.__theano_trainx__", "GRU_Parallel.PGruParallelResBpr.__theano_traint__", "GRU_Parallel.PGruParallelResBpr.__theano_traini__", "GRU_Parallel.PGruParallelResBpr.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_trainx__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_traint__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_traini__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ")", ":", "\n", "        ", "super", "(", "PGruParallelResBpr", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "# \u56fe\u6587\u7279\u5f81", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "rang", "=", "0.5", "\n", "# input", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "mi", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u56fe\u50cf\u7684\u4f4e\u7ef4\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "mt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u6587\u672c\u7684\u4f4e\u7ef4\u7279\u5f81\uff0c", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mi", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# hidden state", "\n", "uix", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_in", ")", ")", "\n", "uit", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_in", ")", ")", "\n", "uii", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_in", ")", ")", "# \u56e0\u4e3a\u4ed6\u6587\u7ae0\u91cc\u6ca1\u5bf9\u56fe\u6587\u7279\u5f81\u505a\u964d\u7ef4\u5904\u7406", "\n", "whx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "wht", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "whi", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "3", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "h0x", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0t", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0i", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bix", "=", "np", ".", "zeros", "(", "(", "3", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bit", "=", "np", ".", "zeros", "(", "(", "3", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bii", "=", "np", ".", "zeros", "(", "(", "3", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "self", ".", "uix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uix", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "uit", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uit", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "uii", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uii", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "wht", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "wht", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whi", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "h0x", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0x", ")", "\n", "self", ".", "h0t", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0t", ")", "\n", "self", ".", "h0i", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0i", ")", "\n", "self", ".", "bix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bix", ")", "\n", "self", ".", "bit", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bit", ")", "\n", "self", ".", "bii", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bii", ")", "\n", "# square loss", "\n", "self", ".", "paramsx", "=", "[", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "paramst", "=", "[", "self", ".", "uit", ",", "self", ".", "wht", ",", "self", ".", "bit", ",", "self", ".", "vt", "]", "\n", "self", ".", "paramsi", "=", "[", "self", ".", "uii", ",", "self", ".", "whi", ",", "self", ".", "bii", ",", "self", ".", "ei", "]", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", ",", "\n", "self", ".", "uit", ",", "self", ".", "wht", ",", "self", ".", "bit", ",", "self", ".", "vt", ",", "\n", "self", ".", "uii", ",", "self", ".", "whi", ",", "self", ".", "bii", ",", "self", ".", "ei", "]", "\n", "self", ".", "l2_sqrx", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramsx", "]", ")", ")", "\n", "self", ".", "l2_sqrt", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramst", "[", ":", "3", "]", "]", ")", ")", "\n", "self", ".", "l2_sqri", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramsi", "[", ":", "3", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "ei", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "self", ".", "vt", "**", "2", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "(", "self", ".", "l2_sqrx", "+", "self", ".", "l2_sqrt", "+", "self", ".", "l2_sqri", ")", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_trainx__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_traint__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_traini__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_trainx__": [[895, 978], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle", "ixqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_trainx__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", ",", "ixqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "\n", "ixps", ",", "ixqs", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "ixqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_ix", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "ixq_t", ",", "\n", "mask_t", ",", "hx_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "ixp_t", "-", "ixq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "hx_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "hx", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "ixqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "ixps", ",", "ixqs", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "paramsx", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "paramsx", ",", "seq_grads", ")", "]", "\n", "update_ix", "=", "T", ".", "set_subtensor", "(", "uiq_ix", ",", "uiq_ix", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_ix", ")", ")", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_trainx", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_traint__": [[979, 1073], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle", "ixqs.dimshuffle", "itps.dimshuffle", "itqs.dimshuffle", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_traint__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "vt", "=", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", ",", "ixqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "\n", "itps", ",", "itqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "\n", "ixps", ",", "ixqs", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "ixqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "itps", ",", "itqs", "=", "itps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "itqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "ixq_t", ",", "itp_t", ",", "itq_t", ",", "\n", "mask_t", ",", "hx_t_pre1", ",", "ht_t_pre1", ")", ":", "\n", "            ", "mtp_t", ",", "mtq_t", "=", "T", ".", "dot", "(", "itp_t", ",", "vt", ".", "T", ")", ",", "T", ".", "dot", "(", "itq_t", ",", "vt", ".", "T", ")", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "\n", "z_rt", "=", "sigmoid", "(", "T", ".", "dot", "(", "uit", "[", ":", "2", "]", ",", "mtp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", ":", "2", "]", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "\n", "zt", ",", "rt", "=", "z_rt", "[", "0", "]", ".", "T", ",", "z_rt", "[", "1", "]", ".", "T", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "\n", "ct", "=", "tanh", "(", "T", ".", "dot", "(", "uit", "[", "2", "]", ",", "mtp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", "2", "]", ",", "(", "rt", "*", "ht_t_pre1", ")", ".", "T", ")", "+", "bit", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "\n", "ht_t", "=", "(", "T", ".", "ones_like", "(", "zt", ")", "-", "zt", ")", "*", "ht_t_pre1", "+", "zt", "*", "ct", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "ixp_t", "-", "ixq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "ht_t_pre1", "*", "(", "mtp_t", "-", "mtq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "hx_t", ",", "ht_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "hx", ",", "ht", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "ixqs", ",", "itps", ",", "itqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0t", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "ixps", ",", "ixqs", ",", "uit", ",", "wht", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", ",", "bit", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "seq_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "vt", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "paramst", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "paramst", ",", "seq_grads", ")", "]", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_traint", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_traini__": [[1074, 1180], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "bii.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle", "ixqs.dimshuffle", "itps.dimshuffle", "itqs.dimshuffle", "iips.dimshuffle", "iiqs.dimshuffle", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_traini__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "uii", ",", "whi", "=", "self", ".", "uii", ",", "self", ".", "whi", "\n", "vt", ",", "ei", "=", "self", ".", "vt", ",", "self", ".", "ei", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0i", "=", "T", ".", "alloc", "(", "self", ".", "h0i", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bii", "=", "T", ".", "alloc", "(", "self", ".", "bii", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "bii", "=", "bii", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", ",", "ixqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "\n", "itps", ",", "itqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "\n", "iips", ",", "iiqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "\n", "ixps", ",", "ixqs", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "ixqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "itps", ",", "itqs", "=", "itps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "itqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "iips", ",", "iiqs", "=", "iips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "iiqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "ixq_t", ",", "itp_t", ",", "itq_t", ",", "iip_t", ",", "iiq_t", ",", "\n", "mask_t", ",", "hx_t_pre1", ",", "ht_t_pre1", ",", "hi_t_pre1", ")", ":", "\n", "            ", "mtp_t", ",", "mtq_t", "=", "T", ".", "dot", "(", "itp_t", ",", "vt", ".", "T", ")", ",", "T", ".", "dot", "(", "itq_t", ",", "vt", ".", "T", ")", "\n", "mip_t", ",", "miq_t", "=", "T", ".", "dot", "(", "iip_t", ",", "ei", ".", "T", ")", ",", "T", ".", "dot", "(", "iiq_t", ",", "ei", ".", "T", ")", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "\n", "z_rt", "=", "sigmoid", "(", "T", ".", "dot", "(", "uit", "[", ":", "2", "]", ",", "mtp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", ":", "2", "]", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "[", ":", "2", "]", ")", "\n", "z_ri", "=", "sigmoid", "(", "T", ".", "dot", "(", "uii", "[", ":", "2", "]", ",", "mip_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whi", "[", ":", "2", "]", ",", "hi_t_pre1", ".", "T", ")", "+", "bii", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "\n", "zt", ",", "rt", "=", "z_rt", "[", "0", "]", ".", "T", ",", "z_rt", "[", "1", "]", ".", "T", "\n", "zi", ",", "ri", "=", "z_ri", "[", "0", "]", ".", "T", ",", "z_ri", "[", "1", "]", ".", "T", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "\n", "ct", "=", "tanh", "(", "T", ".", "dot", "(", "uit", "[", "2", "]", ",", "mtp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", "2", "]", ",", "(", "rt", "*", "ht_t_pre1", ")", ".", "T", ")", "+", "bit", "[", "2", "]", ")", "\n", "ci", "=", "tanh", "(", "T", ".", "dot", "(", "uii", "[", "2", "]", ",", "mip_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whi", "[", "2", "]", ",", "(", "ri", "*", "hi_t_pre1", ")", ".", "T", ")", "+", "bii", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "\n", "ht_t", "=", "(", "T", ".", "ones_like", "(", "zt", ")", "-", "zt", ")", "*", "ht_t_pre1", "+", "zt", "*", "ct", ".", "T", "\n", "hi_t", "=", "(", "T", ".", "ones_like", "(", "zi", ")", "-", "zi", ")", "*", "hi_t_pre1", "+", "zi", "*", "ci", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "ixp_t", "-", "ixq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "ht_t_pre1", "*", "(", "mtp_t", "-", "mtq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "hi_t_pre1", "*", "(", "mip_t", "-", "miq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "hx_t", ",", "ht_t", ",", "hi_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "hx", ",", "ht", ",", "hi", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "ixqs", ",", "itps", ",", "itqs", ",", "iips", ",", "iiqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0t", ",", "h0i", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "ixps", ",", "ixqs", ",", "uit", ",", "wht", ",", "uii", ",", "whi", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", ",", "bit", ",", "bii", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "seq_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "vt", ",", "ei", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "paramsi", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "paramsi", ",", "seq_grads", ")", "]", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_traini", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__": [[1181, 1249], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "bii.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle.dimshuffle.dimshuffle", "mtps.dimshuffle.dimshuffle.dimshuffle", "mips.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.concatenate", "theano.concatenate", "theano.concatenate.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.arange", "theano.arange", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predict__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "uii", ",", "whi", "=", "self", ".", "uii", ",", "self", ".", "whi", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0i", "=", "T", ".", "alloc", "(", "self", ".", "h0i", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bii", "=", "T", ".", "alloc", "(", "self", ".", "bii", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "bii", "=", "bii", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "mtps", "=", "self", ".", "mt", "[", "pidxs", "]", "\n", "mips", "=", "self", ".", "mi", "[", "pidxs", "]", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "mtps", "=", "mtps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "mips", "=", "mips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "def", "recurrence", "(", "ixp_t", ",", "mtp_t", ",", "mip_t", ",", "hx_t_pre1", ",", "ht_t_pre1", ",", "hi_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "            ", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "# shape=(2, 20, n)", "\n", "z_rt", "=", "sigmoid", "(", "T", ".", "dot", "(", "uit", "[", ":", "2", "]", ",", "mtp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", ":", "2", "]", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "[", ":", "2", "]", ")", "\n", "z_ri", "=", "sigmoid", "(", "T", ".", "dot", "(", "uii", "[", ":", "2", "]", ",", "mip_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whi", "[", ":", "2", "]", ",", "hi_t_pre1", ".", "T", ")", "+", "bii", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "zt", ",", "rt", "=", "z_rt", "[", "0", "]", ".", "T", ",", "z_rt", "[", "1", "]", ".", "T", "\n", "zi", ",", "ri", "=", "z_ri", "[", "0", "]", ".", "T", ",", "z_ri", "[", "1", "]", ".", "T", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "# shape=(20, n)", "\n", "ct", "=", "tanh", "(", "T", ".", "dot", "(", "uit", "[", "2", "]", ",", "mtp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", "[", "2", "]", ",", "(", "rt", "*", "ht_t_pre1", ")", ".", "T", ")", "+", "bit", "[", "2", "]", ")", "\n", "ci", "=", "tanh", "(", "T", ".", "dot", "(", "uii", "[", "2", "]", ",", "mip_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whi", "[", "2", "]", ",", "(", "ri", "*", "hi_t_pre1", ")", ".", "T", ")", "+", "bii", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "# shape=(n, 20)", "\n", "ht_t", "=", "(", "T", ".", "ones_like", "(", "zt", ")", "-", "zt", ")", "*", "ht_t_pre1", "+", "zt", "*", "ct", ".", "T", "\n", "hi_t", "=", "(", "T", ".", "ones_like", "(", "zi", ")", "-", "zi", ")", "*", "hi_t_pre1", "+", "zi", "*", "ci", ".", "T", "\n", "return", "[", "hx_t", ",", "ht_t", ",", "hi_t", "]", "\n", "", "[", "hx", ",", "ht", ",", "hi", "]", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "mtps", ",", "mips", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0t", ",", "h0i", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "T", ".", "concatenate", "(", "(", "hx", ",", "ht", ",", "hi", ")", ",", "axis", "=", "2", ")", "# h.shape=(157, n, 60)", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 60)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predict", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.train": [[1250, 1257], ["GRU_Parallel.PGruParallelResBpr.seq_trainx", "GRU_Parallel.PGruParallelResBpr.seq_traint", "GRU_Parallel.PGruParallelResBpr.seq_traini"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "if", "epoch_i", "<", "epoch_n", "//", "3", ":", "\n", "            ", "return", "self", ".", "seq_trainx", "(", "idxs", ")", "\n", "", "elif", "epoch_i", "<", "epoch_n", "*", "2", "//", "3", ":", "\n", "            ", "return", "self", ".", "seq_traint", "(", "idxs", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "seq_traini", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.pgru_update_trained_items": [[1258, 1276], ["GRU_Parallel.PGruParallelResBpr.lt.get_value", "numpy.concatenate", "GRU_Parallel.PGruParallelResBpr.trained_items.set_value", "numpy.zeros", "numpy.zeros", "numpy.asarray", "theano.dot", "theano.dot", "numpy.zeros", "mt.eval.eval.eval", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "mt.eval.eval.eval", "mi.eval.eval.eval"], "methods", ["None"], ["", "", "def", "pgru_update_trained_items", "(", "self", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "lt", "=", "self", ".", "lt", ".", "get_value", "(", "borrow", "=", "True", ")", "# self.lt\u662fshared\uff0c\u7528get_value()\u3002", "\n", "fea_n", ",", "fea_m", "=", "lt", ".", "shape", "\n", "if", "epoch_i", "<", "epoch_n", "//", "3", ":", "\n", "            ", "mt", "=", "np", ".", "zeros", "(", "(", "fea_n", ",", "fea_m", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "mi", "=", "np", ".", "zeros", "(", "(", "fea_n", ",", "fea_m", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "", "elif", "epoch_i", "<", "epoch_n", "*", "2", "//", "3", ":", "\n", "            ", "mt", "=", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "\n", "mi", "=", "np", ".", "zeros", "(", "(", "fea_n", ",", "fea_m", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "mt", "=", "mt", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "            ", "mt", "=", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "\n", "mi", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "\n", "mt", "=", "mt", ".", "eval", "(", ")", "\n", "mi", "=", "mi", ".", "eval", "(", ")", "\n", "", "items", "=", "np", ".", "concatenate", "(", "(", "lt", ",", "mt", ",", "mi", ")", ",", "axis", "=", "1", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.exe_time": [[23, 32], ["time.time", "print", "func", "print", "print", "time.strftime", "time.strftime", "time.localtime", "time.localtime", "time.time"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"-- @%s, {%s} start\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "print", "(", "\"-- @%s, {%s} end\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "print", "(", "\"-- @%.3fs taken for {%s}\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ",", "func", ".", "__name__", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.main": [[1278, 1281], ["print"], "function", ["None"], ["", "", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "print", "(", "'... construct the class RNN, GRU'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.__init__": [[28, 60], ["numpy.arange", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "numpy.array.copy", "len", "numpy.arange"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "at_nums", ",", "intervals", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param at_nums:     [5, 10, 15, 20, 30, 50]\n        :param intervals:   [2, 10, 30]\n        :return:\n        \"\"\"", "\n", "self", ".", "intervals", "=", "intervals", "\n", "ranges", "=", "np", ".", "arange", "(", "len", "(", "at_nums", ")", ")", "\n", "val_flo", "=", "np", ".", "array", "(", "[", "0.0", "for", "_", "in", "ranges", "]", ")", "\n", "epo_int", "=", "np", ".", "array", "(", "[", "0", "for", "_", "in", "ranges", "]", ")", "\n", "inters", "=", "np", ".", "array", "(", "[", "0.0", "for", "_", "in", "np", ".", "arange", "(", "intervals", "[", "1", "]", ")", "]", ")", "# 10\u4e2a\u533a\u95f4", "\n", "cold_active", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", "]", ")", "\n", "\n", "self", ".", "best_auc", "=", "0.0", "\n", "self", ".", "best_recall", "=", "val_flo", ".", "copy", "(", ")", "\n", "self", ".", "best_precis", "=", "val_flo", ".", "copy", "(", ")", "\n", "self", ".", "best_f1scor", "=", "val_flo", ".", "copy", "(", ")", "# f1 = 2PR/(P+R)", "\n", "self", ".", "best_map", "=", "val_flo", ".", "copy", "(", ")", "\n", "self", ".", "best_ndcg", "=", "val_flo", ".", "copy", "(", ")", "\n", "\n", "self", ".", "best_epoch_auc", "=", "0", "\n", "self", ".", "best_epoch_recall", "=", "epo_int", ".", "copy", "(", ")", "\n", "self", ".", "best_epoch_precis", "=", "epo_int", ".", "copy", "(", ")", "\n", "self", ".", "best_epoch_f1scor", "=", "epo_int", ".", "copy", "(", ")", "\n", "self", ".", "best_epoch_map", "=", "epo_int", ".", "copy", "(", ")", "\n", "self", ".", "best_epoch_ndcg", "=", "epo_int", ".", "copy", "(", ")", "\n", "\n", "self", ".", "best_auc_intervals_cumsum", "=", "inters", ".", "copy", "(", ")", "\n", "self", ".", "best_auc_cold_active", "=", "cold_active", ".", "copy", "(", ")", "\n", "\n", "self", ".", "best_recalls_intervals_cumsum", "=", "inters", ".", "copy", "(", ")", "\n", "self", ".", "best_recalls_cold_active", "=", "cold_active", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_obtain_best": [[61, 104], ["datetime.datetime.now", "datetime.datetime.now.strftime", "Global_Best.GlobalBest.fun_obtain_best.truncate4"], "methods", ["None"], ["", "def", "fun_obtain_best", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "\"\"\"\n        :param epoch:\n        :return: \u7531\u6700\u4f18\u503c\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\n        \"\"\"", "\n", "def", "truncate4", "(", "x", ")", ":", "\n", "            ", "\"\"\"\n            \u628a\u8f93\u5165\u622a\u65ad\u4e3a\u516d\u4f4d\u5c0f\u6570\n            :param x:\n            :return: \u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662flist\u91cc\u5355\u9879\u662f\u5b57\u7b26\u4e32\uff0c\n            \u8fd9\u6837\u6253\u5370\u7684\u65f6\u5019\u5c31\u4e25\u683c\u662f\u5c0f\u6570\u4f4d4\u7ef4\uff0c\u5e76\u4e14\u6ca1\u6709\u5b57\u7b26\u4e32\u7684\u8d77\u672b\u6807\u8bc6''\n            \"\"\"", "\n", "return", "', '", ".", "join", "(", "[", "'%0.4f'", "%", "i", "for", "i", "in", "x", "]", ")", "\n", "", "amp", "=", "100", "\n", "one", "=", "'\\t'", "\n", "two", "=", "one", "*", "2", "\n", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "a", "=", "one", "+", "'-----------------------------------------------------------------'", "\n", "# \u6307\u6807\u503c\u3001\u6700\u4f73\u7684epoch", "\n", "b", "=", "one", "+", "'All values is the \"best * {v1}\" on epoch {v2}: | {v3}'", ".", "format", "(", "v1", "=", "amp", ",", "v2", "=", "epoch", ",", "v3", "=", "now", ".", "strftime", "(", "\"%Y.%m.%d %H:%M:%S\"", ")", ")", "# \u8fd9\u4e2a\u65f6\u95f4\u8981\u4fdd\u7559\u3002", "\n", "c", "=", "two", "+", "'AUC    = [{val}], '", ".", "format", "(", "val", "=", "truncate4", "(", "[", "self", ".", "best_auc", "*", "amp", "]", ")", ")", "+", "two", "+", "'{val}'", ".", "format", "(", "val", "=", "[", "self", ".", "best_epoch_auc", "]", ")", "\n", "d", "=", "two", "+", "'Recall = [{val}], '", ".", "format", "(", "val", "=", "truncate4", "(", "self", ".", "best_recall", "*", "amp", ")", ")", "+", "two", "+", "'{val}'", ".", "format", "(", "val", "=", "self", ".", "best_epoch_recall", ")", "\n", "# e = two + 'Precis = [{val}], '.format(val=truncate4(self.best_precis * amp)) + \\", "\n", "#     two + '{val}'.format(val=self.best_epoch_precis)    # \u4e0d\u8f93\u51faprecision", "\n", "# f = two + 'F1scor = [{val}], '.format(val=truncate4(self.best_f1scor * amp)) + \\", "\n", "#     two + '{val}'.format(val=self.best_epoch_f1scor)", "\n", "g", "=", "two", "+", "'MAP    = [{val}], '", ".", "format", "(", "val", "=", "truncate4", "(", "self", ".", "best_map", "*", "amp", ")", ")", "+", "two", "+", "'{val}'", ".", "format", "(", "val", "=", "self", ".", "best_epoch_map", ")", "\n", "h", "=", "two", "+", "'NDCG   = [{val}], '", ".", "format", "(", "val", "=", "truncate4", "(", "self", ".", "best_ndcg", "*", "amp", ")", ")", "+", "two", "+", "'{val}'", ".", "format", "(", "val", "=", "self", ".", "best_epoch_ndcg", ")", "\n", "# \u5206\u533a\u95f4\u8003\u8651\u3002\u8c03\u53c2\u65f6\u53bb\u6389\u8fd9\u5757\u3002", "\n", "i", "=", "one", "+", "'cold_active | Intervals_cumsum:'", "\n", "j", "=", "two", "+", "'AUC    = [{v1}], [{v2}]'", ".", "format", "(", "v1", "=", "truncate4", "(", "self", ".", "best_auc_cold_active", "*", "amp", ")", ",", "\n", "v2", "=", "truncate4", "(", "self", ".", "best_auc_intervals_cumsum", "*", "amp", ")", ")", "\n", "k", "=", "two", "+", "'Recall@{v1} = [{v2}], [{v3}]'", ".", "format", "(", "v1", "=", "self", ".", "intervals", "[", "2", "]", ",", "\n", "v2", "=", "truncate4", "(", "self", ".", "best_recalls_cold_active", "*", "amp", ")", ",", "\n", "v3", "=", "truncate4", "(", "self", ".", "best_recalls_intervals_cumsum", "*", "amp", ")", ")", "\n", "return", "'\\n'", ".", "join", "(", "[", "a", ",", "b", ",", "c", ",", "d", ",", "g", ",", "h", ",", "i", ",", "j", ",", "k", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_print_best": [[105, 108], ["print", "Global_Best.GlobalBest.fun_obtain_best"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_obtain_best"], ["", "def", "fun_print_best", "(", "self", ",", "epoch", ")", ":", "\n", "# \u8f93\u51fa\u6700\u4f18\u503c", "\n", "        ", "print", "(", "self", ".", "fun_obtain_best", "(", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.exe_time": [[15, 24], ["time.time", "print", "func", "print", "print", "time.strftime", "time.strftime", "time.localtime", "time.localtime", "time.time"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"-- @%s, {%s} start\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "print", "(", "\"-- @%s, {%s} end\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "print", "(", "\"-- @%.3fs taken for {%s}\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ",", "func", ".", "__name__", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.main": [[110, 121], ["Global_Best.GlobalBest", "print", "print", "print", "print"], "function", ["None"], ["", "", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "obj", "=", "GlobalBest", "(", "\n", "at_nums", "=", "[", "5", ",", "10", ",", "20", ",", "30", ",", "50", ",", "100", "]", ",", "\n", "intervals", "=", "[", "2", ",", "10", ",", "30", "]", ")", "\n", "print", "(", "'\u521b\u5efa\u7c7b\u5bf9\u8c61\u540e\uff0c\u8bfb\u53d6\u5b9e\u4f8b\u53d8\u91cf\u503c'", ")", "\n", "print", "(", "obj", ".", "best_auc", ")", "# \u5efa\u7acb\u7c7b\u5bf9\u8c61\u540e\uff0c\u53ef\u8bfb\u53d6\u5b9e\u4f8b\u53d8\u91cf", "\n", "\n", "obj", ".", "best_auc", "=", "70.3", "\n", "print", "(", "'\u76f4\u63a5\u590d\u5236\u64cd\u4f5c\u4fee\u6539\u5b9e\u4f8b\u53d8\u91cf\uff0c\u518d\u8bfb\u53d6\u67e5\u770b\u6548\u679c'", ")", "\n", "print", "(", "obj", ".", "best_auc", ")", "# \u5b9e\u4f8b\u53d8\u91cf\u53ef\u76f4\u63a5\u4fee\u6539", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.__init__.exe_time": [[12, 22], ["time.time", "print", "func", "print", "print", "time.strftime", "time.strftime", "time.localtime", "time.localtime", "time.time"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"-- @%s, {%s} start\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "print", "(", "\"-- @%s, {%s} end\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "print", "(", "\"-- @%.3fs taken for {%s}\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ",", "func", ".", "__name__", ")", ")", "\n", "return", "back", "\n", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.__init__.fun": [[24, 26], ["None"], "function", ["None"], ["", "def", "fun", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.__init__.main": [[28, 31], ["None"], "function", ["None"], ["", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.Lstm4Rec.__init__": [[38, 67], ["LSTM.LstmBasic.__init__", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.zeros", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "LSTM_Parallel.Lstm4Rec.__theano_trainx__", "LSTM_Parallel.Lstm4Rec.__theano_predictx__", "theano.sum", "theano.sum", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_trainx__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_predictx__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "super", "(", "Lstm4Rec", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "rang", "=", "0.5", "\n", "# input", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# hidden state", "\n", "uix", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_in", ")", ")", "\n", "whx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "c0x", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0x", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bix", "=", "np", ".", "zeros", "(", "(", "4", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "self", ".", "uix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uix", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "c0x", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "c0x", ")", "\n", "self", ".", "h0x", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0x", ")", "\n", "self", ".", "bix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bix", ")", "\n", "# output", "\n", "vyx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "# \u548clt\u4e00\u6837\u3002", "\n", "self", ".", "vyx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vyx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# square loss", "\n", "self", ".", "paramsx", "=", "[", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "l2_sqrx", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "T", ".", "sum", "(", "self", ".", "vyx", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramsx", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqrx", ")", "\n", "self", ".", "__theano_trainx__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predictx__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.Lstm4Rec.__theano_trainx__": [[68, 160], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "ixps.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "yxps.dimshuffle", "yxqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_trainx__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "c0x", "=", "T", ".", "alloc", "(", "self", ".", "c0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "uiq_ps", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pidxs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_ix", "=", "self", ".", "lt", "[", "uiq_ps", "]", "\n", "\n", "# \u8f93\u51fa\u7aef\uff1ah*w \u5f97\u5230score", "\n", "yxps", ",", "yxqs", "=", "self", ".", "vyx", "[", "pidxs", "]", ",", "self", ".", "vyx", "[", "qidxs", "]", "\n", "yxps", ",", "yxqs", "=", "yxps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "yxqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_yx", "=", "self", ".", "vyx", "[", "uiq_pqs", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "yxp_t", ",", "yxq_t", ",", "\n", "mask_t", ",", "cx_t_pre1", ",", "hx_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "# shape=(n, 20)", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "yxp_t", "-", "yxq_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "cx_t", ",", "hx_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "cx", ",", "hx", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "yxps", ",", "yxqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "h0x", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "yxps", ",", "yxqs", ",", "ixps", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "paramsx", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "paramsx", ",", "seq_grads", ")", "]", "\n", "update_ix", "=", "T", ".", "set_subtensor", "(", "uiq_ix", ",", "uiq_ix", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_ps", "]", ")", "\n", "update_yx", "=", "T", ".", "set_subtensor", "(", "uiq_yx", ",", "uiq_yx", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "vyx", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_ix", ")", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "vyx", ",", "update_yx", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_trainx", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.Lstm4Rec.__theano_predictx__": [[161, 209], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "h.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.arange", "theano.arange", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predictx__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "c0x", "=", "T", ".", "alloc", "(", "self", ".", "c0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "def", "recurrence", "(", "ixp_t", ",", "cx_t_pre1", ",", "hx_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "# shape=(n, 20)", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "return", "[", "cx_t", ",", "hx_t", "]", "\n", "", "[", "cx", ",", "hx", "]", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "ixps", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "h0x", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "hx", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 60)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predictx", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.Lstm4Rec.train": [[211, 213], ["LSTM_Parallel.Lstm4Rec.seq_trainx"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "return", "self", ".", "seq_trainx", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.Lstm4Rec.pgru_predict": [[214, 216], ["LSTM_Parallel.Lstm4Rec.seq_predictx"], "methods", ["None"], ["", "def", "pgru_predict", "(", "self", ",", "idxs", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "return", "self", ".", "seq_predictx", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.Lstm4Rec.pgru_update_trained_items": [[217, 221], ["LSTM_Parallel.Lstm4Rec.vyx.get_value", "LSTM_Parallel.Lstm4Rec.trained_items.set_value", "numpy.asarray"], "methods", ["None"], ["", "def", "pgru_update_trained_items", "(", "self", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "        ", "items", "=", "self", ".", "vyx", ".", "get_value", "(", "borrow", "=", "True", ")", "# self.lt\u662fshared\uff0c\u7528get_value()\u3002", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__init__": [[227, 300], ["LSTM.LstmBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "LSTM_Parallel.PLstmParallelRes.__theano_trainx__", "LSTM_Parallel.PLstmParallelRes.__theano_traint__", "LSTM_Parallel.PLstmParallelRes.__theano_traini__", "LSTM_Parallel.PLstmParallelRes.__theano_predictx__", "LSTM_Parallel.PLstmParallelRes.__theano_predictt__", "LSTM_Parallel.PLstmParallelRes.__theano_predicti__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_trainx__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_traint__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_traini__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_predictx__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_predictt__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_predicti__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ")", ":", "\n", "        ", "super", "(", "PLstmParallelRes", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "# \u56fe\u6587\u7279\u5f81", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "rang", "=", "0.5", "\n", "# input", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# hidden state", "\n", "uix", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_in", ")", ")", "\n", "uit", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_txt", ")", ")", "\n", "uii", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_img", ")", ")", "# \u56e0\u4e3a\u4ed6\u6587\u7ae0\u91cc\u6ca1\u5bf9\u56fe\u6587\u7279\u5f81\u505a\u964d\u7ef4\u5904\u7406", "\n", "whx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "wht", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "whi", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "4", ",", "n_hidden", ",", "n_hidden", ")", ")", "\n", "c0x", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "c0t", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "c0i", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0x", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0t", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "h0i", "=", "np", ".", "zeros", "(", "(", "n_hidden", ",", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bix", "=", "np", ".", "zeros", "(", "(", "4", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bit", "=", "np", ".", "zeros", "(", "(", "4", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "bii", "=", "np", ".", "zeros", "(", "(", "4", ",", "n_hidden", ")", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", "\n", "self", ".", "uix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uix", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "uit", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uit", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "uii", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "uii", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "wht", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "wht", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "whi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "whi", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "h0x", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "c0x", ")", "\n", "self", ".", "c0t", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "c0t", ")", "\n", "self", ".", "c0i", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "c0i", ")", "\n", "self", ".", "c0x", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0x", ")", "\n", "self", ".", "h0t", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0t", ")", "\n", "self", ".", "h0i", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "h0i", ")", "\n", "self", ".", "bix", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bix", ")", "\n", "self", ".", "bit", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bit", ")", "\n", "self", ".", "bii", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "bii", ")", "\n", "# output", "\n", "vyx", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "# \u548clt\u4e00\u6837\u3002", "\n", "vyt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "\n", "vyi", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_hidden", ")", ")", "\n", "self", ".", "vyx", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vyx", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vyt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vyt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vyi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vyi", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "# square loss", "\n", "self", ".", "paramsx", "=", "[", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", "]", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "paramst", "=", "[", "self", ".", "uit", ",", "self", ".", "wht", ",", "self", ".", "bit", "]", "\n", "self", ".", "paramsi", "=", "[", "self", ".", "uii", ",", "self", ".", "whi", ",", "self", ".", "bii", "]", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", ",", "\n", "self", ".", "uit", ",", "self", ".", "wht", ",", "self", ".", "bit", ",", "\n", "self", ".", "uii", ",", "self", ".", "whi", ",", "self", ".", "bii", "]", "\n", "self", ".", "l2_sqrx", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "T", ".", "sum", "(", "self", ".", "vyx", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramsx", "]", ")", ")", "\n", "self", ".", "l2_sqrt", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "vyt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramst", "]", ")", ")", "\n", "self", ".", "l2_sqri", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "vyi", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "paramsi", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "(", "self", ".", "l2_sqrx", "+", "self", ".", "l2_sqrt", "+", "self", ".", "l2_sqri", ")", ")", "\n", "self", ".", "__theano_trainx__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_traint__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_traini__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predictx__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predictt__", "(", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "__theano_predicti__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_trainx__": [[301, 393], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "ixps.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "yxps.dimshuffle", "yxqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_trainx__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "c0x", "=", "T", ".", "alloc", "(", "self", ".", "c0x", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "uiq_ps", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pidxs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_ix", "=", "self", ".", "lt", "[", "uiq_ps", "]", "\n", "\n", "# \u8f93\u51fa\u7aef\uff1ah*w \u5f97\u5230score", "\n", "yxps", ",", "yxqs", "=", "self", ".", "vyx", "[", "pidxs", "]", ",", "self", ".", "vyx", "[", "qidxs", "]", "\n", "yxps", ",", "yxqs", "=", "yxps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "yxqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_yx", "=", "self", ".", "vyx", "[", "uiq_pqs", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "yxp_t", ",", "yxq_t", ",", "\n", "mask_t", ",", "cx_t_pre1", ",", "hx_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "yxp_t", "-", "yxq_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "cx_t", ",", "hx_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "cx", ",", "hx", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "yxps", ",", "yxqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "h0x", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "yxps", ",", "yxqs", ",", "ixps", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "paramsx", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "paramsx", ",", "seq_grads", ")", "]", "\n", "update_ix", "=", "T", ".", "set_subtensor", "(", "uiq_ix", ",", "uiq_ix", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_ps", "]", ")", "\n", "update_yx", "=", "T", ".", "set_subtensor", "(", "uiq_yx", ",", "uiq_yx", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "vyx", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_ix", ")", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "vyx", ",", "update_yx", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_trainx", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_traint__": [[394, 499], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "ixps.dimshuffle.dimshuffle.dimshuffle", "itps.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "yxps.dimshuffle", "yxqs.dimshuffle", "ytps.dimshuffle", "ytqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_traint__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "c0x", "=", "T", ".", "alloc", "(", "self", ".", "c0x", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "c0t", "=", "T", ".", "alloc", "(", "self", ".", "c0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "itps", "=", "self", ".", "ft", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "itps", "=", "itps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "# \u8f93\u51fa\u7aef\uff1ah*w \u5f97\u5230score", "\n", "yxps", ",", "yxqs", "=", "self", ".", "vyx", "[", "pidxs", "]", ",", "self", ".", "vyx", "[", "qidxs", "]", "\n", "ytps", ",", "ytqs", "=", "self", ".", "vyt", "[", "pidxs", "]", ",", "self", ".", "vyt", "[", "qidxs", "]", "\n", "yxps", ",", "yxqs", "=", "yxps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "yxqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "ytps", ",", "ytqs", "=", "ytps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "ytqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_yt", "=", "self", ".", "vyt", "[", "uiq_pqs", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "yxp_t", ",", "yxq_t", ",", "\n", "itp_t", ",", "ytp_t", ",", "ytq_t", ",", "\n", "mask_t", ",", "cx_t_pre1", ",", "ct_t_pre1", ",", "hx_t_pre1", ",", "ht_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "gatest", "=", "T", ".", "dot", "(", "uit", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "it", ",", "ft", ",", "gt", ",", "ot", "=", "sigmoid", "(", "gatest", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatest", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatest", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatest", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "# shape=(n, 20)", "\n", "ct_t", "=", "ft", "*", "ct_t_pre1", "+", "it", "*", "gt", "# shape=(n, 20)", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "ht_t", "=", "ot", "*", "tanh", "(", "ct_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "yxp_t", "-", "yxq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "ht_t_pre1", "*", "(", "ytp_t", "-", "ytq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "cx_t", ",", "ct_t", ",", "hx_t", ",", "ht_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "cx", ",", "ct", ",", "hx", ",", "ht", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "yxps", ",", "yxqs", ",", "\n", "itps", ",", "ytps", ",", "ytqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "c0t", ",", "h0x", ",", "h0t", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "yxps", ",", "yxqs", ",", "ixps", ",", "\n", "uit", ",", "wht", ",", "ytps", ",", "ytqs", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", ",", "bit", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "paramst", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "paramst", ",", "seq_grads", ")", "]", "\n", "update_yt", "=", "T", ".", "set_subtensor", "(", "uiq_yt", ",", "uiq_yt", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "vyt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "vyt", ",", "update_yt", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_traint", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_traini__": [[500, 622], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "bii.dimshuffle.dimshuffle.dimshuffle", "ixps.dimshuffle.dimshuffle.dimshuffle", "itps.dimshuffle.dimshuffle.dimshuffle", "iips.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "yxps.dimshuffle", "yxqs.dimshuffle", "ytps.dimshuffle", "ytqs.dimshuffle", "yips.dimshuffle", "yiqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_traini__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "uii", ",", "whi", "=", "self", ".", "uii", ",", "self", ".", "whi", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "c0x", "=", "T", ".", "alloc", "(", "self", ".", "c0x", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "c0t", "=", "T", ".", "alloc", "(", "self", ".", "c0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "c0i", "=", "T", ".", "alloc", "(", "self", ".", "c0i", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0i", "=", "T", ".", "alloc", "(", "self", ".", "h0i", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "\n", "bii", "=", "T", ".", "alloc", "(", "self", ".", "bii", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "bii", "=", "bii", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "# \u8f93\u5165\u7aef\uff1a\u53ea\u8f93\u5165\u8d2d\u4e70\u7684\u5546\u54c1\u5373\u53ef\u3002", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "itps", "=", "self", ".", "ft", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "iips", "=", "self", ".", "fi", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "itps", "=", "itps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "iips", "=", "iips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "# \u8f93\u51fa\u7aef\uff1ah*w \u5f97\u5230score", "\n", "yxps", ",", "yxqs", "=", "self", ".", "vyx", "[", "pidxs", "]", ",", "self", ".", "vyx", "[", "qidxs", "]", "\n", "ytps", ",", "ytqs", "=", "self", ".", "vyt", "[", "pidxs", "]", ",", "self", ".", "vyt", "[", "qidxs", "]", "\n", "yips", ",", "yiqs", "=", "self", ".", "vyi", "[", "pidxs", "]", ",", "self", ".", "vyi", "[", "qidxs", "]", "\n", "yxps", ",", "yxqs", "=", "yxps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "yxqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "ytps", ",", "ytqs", "=", "ytps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "ytqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "yips", ",", "yiqs", "=", "yips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "yiqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_yi", "=", "self", ".", "vyi", "[", "uiq_pqs", "]", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "ixp_t", ",", "yxp_t", ",", "yxq_t", ",", "\n", "itp_t", ",", "ytp_t", ",", "ytq_t", ",", "\n", "iip_t", ",", "yip_t", ",", "yiq_t", ",", "\n", "mask_t", ",", "cx_t_pre1", ",", "ct_t_pre1", ",", "ci_t_pre1", ",", "hx_t_pre1", ",", "ht_t_pre1", ",", "hi_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "            ", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "gatest", "=", "T", ".", "dot", "(", "uit", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "# shape=(4, 20, n)", "\n", "gatesi", "=", "T", ".", "dot", "(", "uii", ",", "iip_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whi", ",", "hi_t_pre1", ".", "T", ")", "+", "bii", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "it", ",", "ft", ",", "gt", ",", "ot", "=", "sigmoid", "(", "gatest", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatest", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatest", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatest", "[", "3", "]", ")", ".", "T", "\n", "ii", ",", "fi", ",", "gi", ",", "oi", "=", "sigmoid", "(", "gatesi", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesi", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesi", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesi", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "# shape=(n, 20)", "\n", "ct_t", "=", "ft", "*", "ct_t_pre1", "+", "it", "*", "gt", "# shape=(n, 20)", "\n", "ci_t", "=", "fi", "*", "ci_t_pre1", "+", "ii", "*", "gi", "# shape=(n, 20)", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "ht_t", "=", "ot", "*", "tanh", "(", "ct_t", ")", "# shape=(n, 20)", "\n", "hi_t", "=", "oi", "*", "tanh", "(", "ci_t", ")", "# shape=(n, 20)", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "yxp_t", "-", "yxq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "ht_t_pre1", "*", "(", "ytp_t", "-", "ytq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "hi_t_pre1", "*", "(", "yip_t", "-", "yiq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "# \u53ea\u5728\u635f\u5931\u8fd9\u91cc\u4e58\u4e00\u4e0b0/1\u5411\u91cf\u5c31\u53ef\u4ee5\u4e86", "\n", "return", "[", "cx_t", ",", "ct_t", ",", "ci_t", ",", "hx_t", ",", "ht_t", ",", "hi_t", ",", "loss_t", "]", "# shape=(n, 20), (n, )", "\n", "", "[", "cx", ",", "ct", ",", "ci", ",", "hx", ",", "ht", ",", "hi", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "yxps", ",", "yxqs", ",", "\n", "itps", ",", "ytps", ",", "ytqs", ",", "\n", "iips", ",", "yips", ",", "yiqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "c0t", ",", "c0i", ",", "h0x", ",", "h0t", ",", "h0i", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "# \u4fdd\u8bc1\u53ea\u5faa\u73af\u5230\u6700\u957f\u6709\u6548\u4f4d", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "uix", ",", "whx", ",", "yxps", ",", "yxqs", ",", "ixps", ",", "\n", "uit", ",", "wht", ",", "ytps", ",", "ytqs", ",", "\n", "uii", ",", "whi", ",", "yips", ",", "yiqs", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", ",", "bit", ",", "bii", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "paramsi", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "paramsi", ",", "seq_grads", ")", "]", "\n", "update_yi", "=", "T", ".", "set_subtensor", "(", "uiq_yi", ",", "uiq_yi", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "vyi", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "vyi", ",", "update_yi", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_traini", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_predictx__": [[623, 672], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "h.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.arange", "theano.arange", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predictx__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "c0x", "=", "T", ".", "alloc", "(", "self", ".", "c0x", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "\n", "def", "recurrence", "(", "ixp_t", ",", "cx_t_pre1", ",", "hx_t_pre1", ",", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "            ", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "# shape=(n, 20)", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "return", "[", "cx_t", ",", "hx_t", "]", "\n", "", "[", "cx", ",", "hx", "]", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "ixps", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "h0x", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "hx", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 60)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predictx", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_predictt__": [[673, 733], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle.dimshuffle.dimshuffle", "itps.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.concatenate", "theano.concatenate", "theano.concatenate.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.arange", "theano.arange", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predictt__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "c0x", "=", "T", ".", "alloc", "(", "self", ".", "c0x", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "c0t", "=", "T", ".", "alloc", "(", "self", ".", "c0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "itps", "=", "self", ".", "ft", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "itps", "=", "itps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "def", "recurrence", "(", "ixp_t", ",", "itp_t", ",", "cx_t_pre1", ",", "ct_t_pre1", ",", "hx_t_pre1", ",", "ht_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "            ", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "gatest", "=", "T", ".", "dot", "(", "uit", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "it", ",", "ft", ",", "gt", ",", "ot", "=", "sigmoid", "(", "gatest", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatest", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatest", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatest", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "# shape=(n, 20)", "\n", "ct_t", "=", "ft", "*", "ct_t_pre1", "+", "it", "*", "gt", "# shape=(n, 20)", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "ht_t", "=", "ot", "*", "tanh", "(", "ct_t", ")", "# shape=(n, 20)", "\n", "return", "[", "cx_t", ",", "ct_t", ",", "hx_t", ",", "ht_t", "]", "\n", "", "[", "cx", ",", "ct", ",", "hx", ",", "ht", "]", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "itps", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "c0t", ",", "h0x", ",", "h0t", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "T", ".", "concatenate", "(", "(", "hx", ",", "ht", ")", ",", "axis", "=", "2", ")", "# h.shape=(157, n, 60)", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 60)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predictt", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.__theano_predicti__": [[734, 805], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bit.dimshuffle.dimshuffle.dimshuffle", "bii.dimshuffle.dimshuffle.dimshuffle", "theano.imatrix", "theano.imatrix", "ixps.dimshuffle.dimshuffle.dimshuffle", "itps.dimshuffle.dimshuffle.dimshuffle", "iips.dimshuffle.dimshuffle.dimshuffle", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.concatenate", "theano.concatenate", "theano.concatenate.dimshuffle", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.arange", "theano.arange", "theano.sum", "theano.sum"], "methods", ["None"], ["", "def", "__theano_predicti__", "(", "self", ",", "n_in", ",", "n_hidden", ")", ":", "\n", "        ", "\"\"\"\n        \u6d4b\u8bd5\u9636\u6bb5\u518d\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\u5f97\u5230\u5404\u4e2a\u9690\u5c42\u3002\u7528\u5168\u90e8\u6570\u636e\u4e00\u6b21\u6027\u5f97\u51fa\u6240\u6709\u7528\u6237\u7684\u8868\u8fbe\n        \"\"\"", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uit", ",", "wht", "=", "self", ".", "uit", ",", "self", ".", "wht", "\n", "uii", ",", "whi", "=", "self", ".", "uii", ",", "self", ".", "whi", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "\n", "c0x", "=", "T", ".", "alloc", "(", "self", ".", "c0x", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "c0t", "=", "T", ".", "alloc", "(", "self", ".", "c0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "c0i", "=", "T", ".", "alloc", "(", "self", ".", "c0i", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0t", "=", "T", ".", "alloc", "(", "self", ".", "h0t", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "h0i", "=", "T", ".", "alloc", "(", "self", ".", "h0i", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bit", "=", "T", ".", "alloc", "(", "self", ".", "bit", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "\n", "bii", "=", "T", ".", "alloc", "(", "self", ".", "bii", ",", "actual_batch_size", ",", "4", ",", "n_hidden", ")", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "bit", "=", "bit", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "bii", "=", "bii", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "pidxs", "=", "T", ".", "imatrix", "(", ")", "\n", "ixps", "=", "self", ".", "lt", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "itps", "=", "self", ".", "ft", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "iips", "=", "self", ".", "fi", "[", "pidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "ixps", "=", "ixps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_length, batch_size, n_in)", "\n", "itps", "=", "itps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "iips", "=", "iips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "def", "recurrence", "(", "ixp_t", ",", "itp_t", ",", "iip_t", ",", "cx_t_pre1", ",", "ct_t_pre1", ",", "ci_t_pre1", ",", "hx_t_pre1", ",", "ht_t_pre1", ",", "hi_t_pre1", ")", ":", "\n", "# \u7279\u5f81\u3001\u9690\u5c42\u90fd\u5904\u7406\u6210shape=(batch_size, n_hidden)=(n, 20)", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "            ", "gatesx", "=", "T", ".", "dot", "(", "uix", ",", "ixp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "# shape=(4, 20, n)", "\n", "gatest", "=", "T", ".", "dot", "(", "uit", ",", "itp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "wht", ",", "ht_t_pre1", ".", "T", ")", "+", "bit", "# shape=(4, 20, n)", "\n", "gatesi", "=", "T", ".", "dot", "(", "uii", ",", "iip_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whi", ",", "hi_t_pre1", ".", "T", ")", "+", "bii", "# shape=(4, 20, n)", "\n", "ix", ",", "fx", ",", "gx", ",", "ox", "=", "sigmoid", "(", "gatesx", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesx", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesx", "[", "3", "]", ")", ".", "T", "\n", "it", ",", "ft", ",", "gt", ",", "ot", "=", "sigmoid", "(", "gatest", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatest", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatest", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatest", "[", "3", "]", ")", ".", "T", "\n", "ii", ",", "fi", ",", "gi", ",", "oi", "=", "sigmoid", "(", "gatesi", "[", "0", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesi", "[", "1", "]", ")", ".", "T", ",", "tanh", "(", "gatesi", "[", "2", "]", ")", ".", "T", ",", "sigmoid", "(", "gatesi", "[", "3", "]", ")", ".", "T", "\n", "cx_t", "=", "fx", "*", "cx_t_pre1", "+", "ix", "*", "gx", "# shape=(n, 20)", "\n", "ct_t", "=", "ft", "*", "ct_t_pre1", "+", "it", "*", "gt", "# shape=(n, 20)", "\n", "ci_t", "=", "fi", "*", "ci_t_pre1", "+", "ii", "*", "gi", "# shape=(n, 20)", "\n", "hx_t", "=", "ox", "*", "tanh", "(", "cx_t", ")", "# shape=(n, 20)", "\n", "ht_t", "=", "ot", "*", "tanh", "(", "ct_t", ")", "# shape=(n, 20)", "\n", "hi_t", "=", "oi", "*", "tanh", "(", "ci_t", ")", "# shape=(n, 20)", "\n", "return", "[", "cx_t", ",", "ct_t", ",", "ci_t", ",", "hx_t", ",", "ht_t", ",", "hi_t", "]", "\n", "", "[", "cx", ",", "ct", ",", "ci", ",", "hx", ",", "ht", ",", "hi", "]", ",", "_", "=", "theano", ".", "scan", "(", "# h.shape=(157, n, 20)", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "ixps", ",", "itps", ",", "iips", "]", ",", "\n", "outputs_info", "=", "[", "c0x", ",", "c0t", ",", "c0i", ",", "h0x", ",", "h0t", ",", "h0i", "]", ",", "\n", "n_steps", "=", "seq_length", ")", "\n", "h", "=", "T", ".", "concatenate", "(", "(", "hx", ",", "ht", ",", "hi", ")", ",", "axis", "=", "2", ")", "# h.shape=(157, n, 60)", "\n", "\n", "# \u5f97\u5230batch_hus.shape=(n, 60)\uff0c\u5c31\u662f\u8fd9\u4e2abatch\u91cc\u6bcf\u4e2a\u7528\u6237\u7684\u8868\u8fbehu\u3002", "\n", "# \u5fc5\u987b\u8981\u7528T.sum()\uff0c\u4e0d\u7136\u65e0\u6cd5\u5efa\u6a21\u5230theano\u7684graph\u91cc\u3001\u62a5length not known\u7684\u9519", "\n", "hs", "=", "h", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(batch_size, seq_length, n_hidden)", "\n", "hts", "=", "hs", "[", "# shape=(n, n_hidden)", "\n", "T", ".", "arange", "(", "actual_batch_size", ")", ",", "# \u884c. \u82b1\u5f0f\u7d22\u5f15a[[1,2,3],[2,5,6]]\uff0c\u9700\u7ed9\u5b9a\u884c\u5217\u7684\u8868\u793a", "\n", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", "-", "1", "]", "# \u5217\u3002\u9700\u8981mask\u662f'int32'\u578b\u7684", "\n", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_predicti", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "hts", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.train": [[806, 813], ["LSTM_Parallel.PLstmParallelRes.seq_trainx", "LSTM_Parallel.PLstmParallelRes.seq_traint", "LSTM_Parallel.PLstmParallelRes.seq_traini"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "if", "epoch_i", "<", "epoch_n", "//", "3", ":", "\n", "            ", "return", "self", ".", "seq_trainx", "(", "idxs", ")", "\n", "", "elif", "epoch_i", "<", "epoch_n", "*", "2", "//", "3", ":", "\n", "            ", "return", "self", ".", "seq_traint", "(", "idxs", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "seq_traini", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.pgru_predict": [[814, 821], ["LSTM_Parallel.PLstmParallelRes.seq_predictx", "LSTM_Parallel.PLstmParallelRes.seq_predictt", "LSTM_Parallel.PLstmParallelRes.seq_predicti"], "methods", ["None"], ["", "", "def", "pgru_predict", "(", "self", ",", "idxs", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "if", "epoch_i", "<", "epoch_n", "//", "3", ":", "\n", "            ", "return", "self", ".", "seq_predictx", "(", "idxs", ")", "\n", "", "elif", "epoch_i", "<", "epoch_n", "*", "2", "//", "3", ":", "\n", "            ", "return", "self", ".", "seq_predictt", "(", "idxs", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "seq_predicti", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.pgru_update_trained_items": [[822, 836], ["LSTM_Parallel.PLstmParallelRes.vyx.get_value", "LSTM_Parallel.PLstmParallelRes.trained_items.set_value", "numpy.asarray", "LSTM_Parallel.PLstmParallelRes.vyt.get_value", "numpy.concatenate", "LSTM_Parallel.PLstmParallelRes.trained_items.set_value", "LSTM_Parallel.PLstmParallelRes.vyt.get_value", "LSTM_Parallel.PLstmParallelRes.vyi.get_value", "numpy.concatenate", "LSTM_Parallel.PLstmParallelRes.trained_items.set_value", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "", "def", "pgru_update_trained_items", "(", "self", ",", "epoch_n", ",", "epoch_i", ")", ":", "\n", "        ", "vyx", "=", "self", ".", "vyx", ".", "get_value", "(", "borrow", "=", "True", ")", "# self.lt\u662fshared\uff0c\u7528get_value()\u3002", "\n", "if", "epoch_i", "<", "epoch_n", "//", "3", ":", "\n", "            ", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "vyx", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "", "elif", "epoch_i", "<", "epoch_n", "*", "2", "//", "3", ":", "\n", "            ", "vyt", "=", "self", ".", "vyt", ".", "get_value", "(", "borrow", "=", "True", ")", "\n", "items", "=", "np", ".", "concatenate", "(", "(", "vyx", ",", "vyt", ")", ",", "axis", "=", "1", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "vyt", "=", "self", ".", "vyt", ".", "get_value", "(", "borrow", "=", "True", ")", "\n", "vyi", "=", "self", ".", "vyi", ".", "get_value", "(", "borrow", "=", "True", ")", "\n", "items", "=", "np", ".", "concatenate", "(", "(", "vyx", ",", "vyt", ",", "vyi", ")", ",", "axis", "=", "1", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.exe_time": [[22, 31], ["time.time", "print", "func", "print", "print", "time.strftime", "time.strftime", "time.localtime", "time.localtime", "time.time"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"-- @%s, {%s} start\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "print", "(", "\"-- @%s, {%s} end\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "print", "(", "\"-- @%.3fs taken for {%s}\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ",", "func", ".", "__name__", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.main": [[838, 841], ["print"], "function", ["None"], ["", "", "", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "print", "(", "'... construct the class RNN, GRU'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.OboMvGru.__init__": [[39, 69], ["GRU.GruBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "GRU_MV.OboMvGru.__theano_train__", "GRU_MV.OboMvGru.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "OboMvGru", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "mm", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u6a21\u6001\u878d\u5408\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mm", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mm", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "3", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "3", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.OboMvGru.__theano_train__": [[70, 207], ["theano.ivector", "theano.ivector", "theano.sum", "theano.sum", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.iscalar", "theano.iscalar", "theano.function", "theano.function", "theano.function", "theano.function", "theano.ivector", "theano.ivector", "theano.ivector", "theano.ivector", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "GRU_MV.OboMvGru.get_corrupted_input_whole", "GRU_MV.OboMvGru.get_corrupted_input_whole", "GRU_MV.OboMvGru.get_corrupted_input_whole", "GRU_MV.OboMvGru.get_corrupted_input_whole", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.log", "theano.log", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.dot", "theano.dot", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole"], ["", "def", "__theano_train__", "(", "self", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev', 'lambda_ae', 'fea_random_zero']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "ivector", "(", ")", "\n", "seq_length", "=", "T", ".", "sum", "(", "tra_mask", ")", "# \u6709\u6548\u957f\u5ea6", "\n", "\n", "h0", "=", "self", ".", "h0", "\n", "bi", "=", "self", ".", "bi", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "ivector", "(", ")", ",", "T", ".", "ivector", "(", ")", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((seq_length, n_txt))", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "zero", "=", "self", ".", "alpha_lambda", "[", "4", "]", "\n", "if", "0.0", "==", "zero", ":", "# \u7528\u5b8c\u5168\u6570\u636e", "\n", "            ", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ei", ",", "ip_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tp_t", ")", "\n", "mq_t", "=", "T", ".", "dot", "(", "ei", ",", "iq_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tq_t", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mp_t", ")", ")", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "mq_t", ")", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "z_r", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", "[", ":", "2", "]", ",", "p_t", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", ":", "2", "]", ",", "h_t_pre1", ")", "+", "bi", "[", ":", "2", "]", ")", "\n", "z", ",", "r", "=", "z_r", "[", "0", "]", ",", "z_r", "[", "1", "]", "\n", "c", "=", "tanh", "(", "T", ".", "dot", "(", "ui", "[", "2", "]", ",", "p_t", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", "2", "]", ",", "(", "r", "*", "h_t_pre1", ")", ")", "+", "bi", "[", "2", "]", ")", "\n", "h_t", "=", "(", "T", ".", "ones_like", "(", "z", ")", "-", "z", ")", "*", "h_t_pre1", "+", "z", "*", "c", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "dot", "(", "h_t_pre1", ",", "p_t", "-", "q_t", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "return", "[", "h_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "h", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", "]", ",", "\n", "outputs_info", "=", "[", "h0", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "# \u6bcf\u6761\u5e8f\u5217\u8bad\u7ec3\u524d\u90fd\u968f\u673awhole feature corrupted", "\n", "            ", "ipsc", "=", "self", ".", "get_corrupted_input_whole", "(", "ips", ",", "zero", ")", "\n", "iqsc", "=", "self", ".", "get_corrupted_input_whole", "(", "iqs", ",", "zero", ")", "\n", "tpsc", "=", "self", ".", "get_corrupted_input_whole", "(", "tps", ",", "zero", ")", "\n", "tqsc", "=", "self", ".", "get_corrupted_input_whole", "(", "tqs", ",", "zero", ")", "\n", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "ipc_t", ",", "iqc_t", ",", "tpc_t", ",", "tqc_t", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ei", ",", "ipc_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tpc_t", ")", "\n", "mq_t", "=", "T", ".", "dot", "(", "ei", ",", "iqc_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tqc_t", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mp_t", ")", ")", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "mq_t", ")", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "z_r", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", "[", ":", "2", "]", ",", "p_t", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", ":", "2", "]", ",", "h_t_pre1", ")", "+", "bi", "[", ":", "2", "]", ")", "\n", "z", ",", "r", "=", "z_r", "[", "0", "]", ",", "z_r", "[", "1", "]", "\n", "c", "=", "tanh", "(", "T", ".", "dot", "(", "ui", "[", "2", "]", ",", "p_t", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", "2", "]", ",", "(", "r", "*", "h_t_pre1", ")", ")", "+", "bi", "[", "2", "]", ")", "\n", "h_t", "=", "(", "T", ".", "ones_like", "(", "z", ")", "-", "z", ")", "*", "h_t_pre1", "+", "z", "*", "c", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "dot", "(", "h_t_pre1", ",", "p_t", "-", "q_t", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "return", "[", "h_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "h", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "ipsc", ",", "iqsc", ",", "tpsc", ",", "tqsc", "]", ",", "\n", "outputs_info", "=", "[", "h0", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "l2_ae", "=", "self", ".", "alpha_lambda", "[", "3", "]", "\n", "seq_l2_sq", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", ",", "bi", "]", "]", ")", "\n", "seq_l2_ev", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "ae", "=", "(", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_i", ")", "/", "n_img", "+", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_t", ")", "/", "n_txt", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "+", "ae", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "uidx", "=", "T", ".", "iscalar", "(", ")", "# T.iscalar()\u7c7b\u578b\u662f TensorType(int32, )", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidx", "]", ",", "\n", "outputs", "=", "-", "upq", "+", "ae", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "uidx", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "uidx", "]", ",", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "uidx", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.OboMvGru.train": [[208, 210], ["GRU_MV.OboMvGru.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.OboMvGru.update_trained_items": [[211, 220], ["mm.eval.eval.eval", "GRU_MV.OboMvGru.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.OboMvGru.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.OboMvGru.update_trained_items2_corrupted_test_data": [[221, 232], ["mm.eval.eval.eval", "GRU_MV.OboMvGru.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.OboMvGru.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.OboMvGru2Units.__init__": [[237, 265], ["GRU.GruBasic2Units.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "GRU_MV.OboMvGru2Units.__theano_train__", "GRU_MV.OboMvGru2Units.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "OboMvGru2Units", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "# \u5efa\u7acb\u53c2\u6570\u3002", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "uim", ",", "self", ".", "whm", ",", "self", ".", "bim", ",", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "6", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "6", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.OboMvGru2Units.__theano_train__": [[266, 408], ["theano.ivector", "theano.ivector", "theano.sum", "theano.sum", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.iscalar", "theano.iscalar", "theano.function", "theano.function", "theano.function", "theano.function", "theano.ivector", "theano.ivector", "theano.ivector", "theano.ivector", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "GRU_MV.OboMvGru2Units.get_corrupted_input_whole", "GRU_MV.OboMvGru2Units.get_corrupted_input_whole", "GRU_MV.OboMvGru2Units.get_corrupted_input_whole", "GRU_MV.OboMvGru2Units.get_corrupted_input_whole", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.log", "theano.log", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole"], ["", "def", "__theano_train__", "(", "self", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev', 'lambda_ae', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uim", ",", "whm", "=", "self", ".", "uim", ",", "self", ".", "whm", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "ivector", "(", ")", "\n", "seq_length", "=", "T", ".", "sum", "(", "tra_mask", ")", "# \u6709\u6548\u957f\u5ea6", "\n", "\n", "h0x", ",", "h0m", "=", "self", ".", "h0x", ",", "self", ".", "h0m", "\n", "bix", ",", "bim", "=", "self", ".", "bix", ",", "self", ".", "bim", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "ivector", "(", ")", ",", "T", ".", "ivector", "(", ")", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((seq_length, n_txt))", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "zero", "=", "self", ".", "alpha_lambda", "[", "4", "]", "\n", "if", "0.0", "==", "zero", ":", "# \u7528\u5b8c\u5168\u6570\u636e", "\n", "            ", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "hx_t_pre1", ",", "hm_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ei", ",", "ip_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tp_t", ")", "\n", "mq_t", "=", "T", ".", "dot", "(", "ei", ",", "iq_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tq_t", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "xp_t", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ")", "+", "bix", "[", ":", "2", "]", ")", "\n", "z_rm", "=", "sigmoid", "(", "T", ".", "dot", "(", "uim", "[", ":", "2", "]", ",", "mp_t", ")", "+", "T", ".", "dot", "(", "whm", "[", ":", "2", "]", ",", "hm_t_pre1", ")", "+", "bim", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ",", "z_rx", "[", "1", "]", "\n", "zm", ",", "rm", "=", "z_rm", "[", "0", "]", ",", "z_rm", "[", "1", "]", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "xp_t", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ")", "+", "bix", "[", "2", "]", ")", "\n", "cm", "=", "tanh", "(", "T", ".", "dot", "(", "uim", "[", "2", "]", ",", "mp_t", ")", "+", "T", ".", "dot", "(", "whm", "[", "2", "]", ",", "(", "rm", "*", "hm_t_pre1", ")", ")", "+", "bim", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", "\n", "hm_t", "=", "(", "T", ".", "ones_like", "(", "zm", ")", "-", "zm", ")", "*", "hm_t_pre1", "+", "zm", "*", "cm", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "dot", "(", "hx_t_pre1", ",", "xp_t", "-", "xq_t", ")", "+", "\n", "T", ".", "dot", "(", "hm_t_pre1", ",", "mp_t", "-", "mq_t", ")", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "return", "[", "hx_t", ",", "hm_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "hx", ",", "hm", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0m", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "# \u6bcf\u6761\u5e8f\u5217\u8bad\u7ec3\u524d\u90fd\u968f\u673awhole feature corrupted", "\n", "            ", "ipsc", "=", "self", ".", "get_corrupted_input_whole", "(", "ips", ",", "zero", ")", "\n", "iqsc", "=", "self", ".", "get_corrupted_input_whole", "(", "iqs", ",", "zero", ")", "\n", "tpsc", "=", "self", ".", "get_corrupted_input_whole", "(", "tps", ",", "zero", ")", "\n", "tqsc", "=", "self", ".", "get_corrupted_input_whole", "(", "tqs", ",", "zero", ")", "\n", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "ipc_t", ",", "iqc_t", ",", "tpc_t", ",", "tqc_t", ",", "hx_t_pre1", ",", "hm_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ei", ",", "ipc_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tpc_t", ")", "\n", "mq_t", "=", "T", ".", "dot", "(", "ei", ",", "iqc_t", ")", "+", "T", ".", "dot", "(", "vt", ",", "tqc_t", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "xp_t", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ")", "+", "bix", "[", ":", "2", "]", ")", "\n", "z_rm", "=", "sigmoid", "(", "T", ".", "dot", "(", "uim", "[", ":", "2", "]", ",", "mp_t", ")", "+", "T", ".", "dot", "(", "whm", "[", ":", "2", "]", ",", "hm_t_pre1", ")", "+", "bim", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ",", "z_rx", "[", "1", "]", "\n", "zm", ",", "rm", "=", "z_rm", "[", "0", "]", ",", "z_rm", "[", "1", "]", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "xp_t", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ")", "+", "bix", "[", "2", "]", ")", "\n", "cm", "=", "tanh", "(", "T", ".", "dot", "(", "uim", "[", "2", "]", ",", "mp_t", ")", "+", "T", ".", "dot", "(", "whm", "[", "2", "]", ",", "(", "rm", "*", "hm_t_pre1", ")", ")", "+", "bim", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", "\n", "hm_t", "=", "(", "T", ".", "ones_like", "(", "zm", ")", "-", "zm", ")", "*", "hm_t_pre1", "+", "zm", "*", "cm", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "dot", "(", "hx_t_pre1", ",", "xp_t", "-", "xq_t", ")", "+", "\n", "T", ".", "dot", "(", "hm_t_pre1", ",", "mp_t", "-", "mq_t", ")", ")", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "ei", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mp_t", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "vt", ".", "T", ",", "mq_t", ")", ")", "**", "2", ")", ")", "\n", "return", "[", "hx_t", ",", "hm_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "hx", ",", "hm", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "ipsc", ",", "iqsc", ",", "tpsc", ",", "tqsc", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0m", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "l2_ae", "=", "self", ".", "alpha_lambda", "[", "3", "]", "\n", "seq_l2_sq", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "uix", ",", "uim", ",", "whx", ",", "whm", ",", "bix", ",", "bim", "]", "]", ")", "\n", "seq_l2_ev", "=", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "ae", "=", "(", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_i", ")", "/", "n_img", "+", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_t", ")", "/", "n_txt", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "+", "ae", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "uidx", "=", "T", ".", "iscalar", "(", ")", "# T.iscalar()\u7c7b\u578b\u662f TensorType(int32, )", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "uidx", "]", ",", "\n", "outputs", "=", "-", "upq", "+", "ae", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "uidx", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "uidx", "]", ",", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "uidx", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.OboMvGru2Units.train": [[409, 411], ["GRU_MV.OboMvGru2Units.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.OboMvGru2Units.update_trained_items": [[412, 421], ["mm.eval.eval.eval", "GRU_MV.OboMvGru2Units.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.OboMvGru2Units.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.OboMvGru2Units.update_trained_items2_corrupted_test_data": [[422, 433], ["mm.eval.eval.eval", "GRU_MV.OboMvGru2Units.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.OboMvGru2Units.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGru1Unit.__init__": [[443, 473], ["GRU.GruBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "GRU_MV.MvGru1Unit.__theano_train__", "GRU_MV.MvGru1Unit.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "MvGru1Unit", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "mm", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u4f4e\u7ef4\u7684\u591a\u6a21\u6001\u878d\u5408\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mm", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mm", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "3", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "3", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGru1Unit.__theano_train__": [[474, 627], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bi.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "ips.dimshuffle", "iqs.dimshuffle", "tps.dimshuffle", "tqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "GRU_MV.MvGru1Unit.get_corrupted_input_whole_minibatch", "GRU_MV.MvGru1Unit.get_corrupted_input_whole_minibatch", "GRU_MV.MvGru1Unit.get_corrupted_input_whole_minibatch", "GRU_MV.MvGru1Unit.get_corrupted_input_whole_minibatch", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev', 'lambda_ae', 'fea_random_zero']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bi", "=", "bi", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_len, batch_size, n_in)", "\n", "ips", ",", "iqs", "=", "ips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "iqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "tps", ",", "tqs", "=", "tps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "tqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "zero", "=", "self", ".", "alpha_lambda", "[", "4", "]", "\n", "if", "0.0", "==", "zero", ":", "# \u7528\u5b8c\u5168\u6570\u636e", "\n", "            ", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "mask_t", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ip_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tp_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "mq_t", "=", "T", ".", "dot", "(", "iq_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tq_t", ",", "vt", ".", "T", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mp_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, 40)", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "mq_t", ")", ",", "axis", "=", "1", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "z_r", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", "[", ":", "2", "]", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", ":", "2", "]", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "[", ":", "2", "]", ")", "\n", "z", ",", "r", "=", "z_r", "[", "0", "]", ".", "T", ",", "z_r", "[", "1", "]", ".", "T", "# shape=(n, 40)", "\n", "c", "=", "tanh", "(", "T", ".", "dot", "(", "ui", "[", "2", "]", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", "2", "]", ",", "(", "r", "*", "h_t_pre1", ")", ".", "T", ")", "+", "bi", "[", "2", "]", ")", "\n", "h_t", "=", "(", "T", ".", "ones_like", "(", "z", ")", "-", "z", ")", "*", "h_t_pre1", "+", "z", "*", "c", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "p_t", "-", "q_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "mp_t", ",", "ei", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "ei", ")", ")", "**", "2", ")", ")", "# T.sum(shape=(n, 1024), axis=1), \u6700\u540eshape=(n,)", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "mp_t", ",", "vt", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "vt", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_i", "*=", "mask_t", "\n", "loss_ae_t_t", "*=", "mask_t", "\n", "return", "[", "h_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "# shape=(n, 20), (n, ), (n, )", "\n", "", "[", "h", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "# \u6bcf\u6761\u5e8f\u5217\u8bad\u7ec3\u524d\u90fd\u968f\u673awhole feature corrupted", "\n", "            ", "ipsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "ips", ",", "zero", ")", "\n", "iqsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "iqs", ",", "zero", ")", "\n", "tpsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "tps", ",", "zero", ")", "\n", "tqsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "tqs", ",", "zero", ")", "\n", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "ipc_t", ",", "iqc_t", ",", "tpc_t", ",", "tqc_t", ",", "mask_t", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ipc_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tpc_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "mq_t", "=", "T", ".", "dot", "(", "iqc_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tqc_t", ",", "vt", ".", "T", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mp_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, 40)", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "mq_t", ")", ",", "axis", "=", "1", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "z_r", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", "[", ":", "2", "]", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", ":", "2", "]", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "[", ":", "2", "]", ")", "\n", "z", ",", "r", "=", "z_r", "[", "0", "]", ".", "T", ",", "z_r", "[", "1", "]", ".", "T", "# shape=(n, 40)", "\n", "c", "=", "tanh", "(", "T", ".", "dot", "(", "ui", "[", "2", "]", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", "2", "]", ",", "(", "r", "*", "h_t_pre1", ")", ".", "T", ")", "+", "bi", "[", "2", "]", ")", "\n", "h_t", "=", "(", "T", ".", "ones_like", "(", "z", ")", "-", "z", ")", "*", "h_t_pre1", "+", "z", "*", "c", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "p_t", "-", "q_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "mp_t", ",", "ei", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "ei", ")", ")", "**", "2", ")", ")", "# T.sum(shape=(n, 1024), axis=1), \u6700\u540eshape=(n,)", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "mp_t", ",", "vt", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "vt", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_i", "*=", "mask_t", "\n", "loss_ae_t_t", "*=", "mask_t", "\n", "return", "[", "h_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "# shape=(n, 20), (n, ), (n, )", "\n", "", "[", "h", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "ipsc", ",", "iqsc", ",", "tpsc", ",", "tqsc", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "l2_ae", "=", "self", ".", "alpha_lambda", "[", "3", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bi", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "seq_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "ae", "=", "(", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_i", ")", "/", "n_img", "+", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_t", ")", "/", "n_txt", ")", "\n", "seq_costs", "=", "(", "\n", "(", "-", "upq", "+", "ae", ")", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", "+", "ae", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGru1Unit.train": [[628, 630], ["GRU_MV.MvGru1Unit.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGru1Unit.update_trained_items": [[631, 640], ["mm.eval.eval.eval", "GRU_MV.MvGru1Unit.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.MvGru1Unit.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGru1Unit.update_trained_items2_corrupted_test_data": [[641, 652], ["mm.eval.eval.eval", "GRU_MV.MvGru1Unit.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.MvGru1Unit.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGru2Units.__init__": [[662, 690], ["GRU.GruBasic2Units.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "GRU_MV.MvGru2Units.__theano_train__", "GRU_MV.MvGru2Units.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "MvGru2Units", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "# \u5efa\u7acb\u53c2\u6570\u3002", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "uix", ",", "self", ".", "whx", ",", "self", ".", "bix", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "uim", ",", "self", ".", "whm", ",", "self", ".", "bim", ",", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "6", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "6", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGru2Units.__theano_train__": [[691, 853], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bix.dimshuffle.dimshuffle.dimshuffle", "bim.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "ips.dimshuffle", "iqs.dimshuffle", "tps.dimshuffle", "tqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "GRU_MV.MvGru2Units.get_corrupted_input_whole_minibatch", "GRU_MV.MvGru2Units.get_corrupted_input_whole_minibatch", "GRU_MV.MvGru2Units.get_corrupted_input_whole_minibatch", "GRU_MV.MvGru2Units.get_corrupted_input_whole_minibatch", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.log", "theano.log", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.tensor.tanh", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.ones_like", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.get_corrupted_input_whole_minibatch"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev', 'lambda_ae', 'fea_random_zero']", "\n", "uix", ",", "whx", "=", "self", ".", "uix", ",", "self", ".", "whx", "\n", "uim", ",", "whm", "=", "self", ".", "uim", ",", "self", ".", "whm", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0x", "=", "T", ".", "alloc", "(", "self", ".", "h0x", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "h0m", "=", "T", ".", "alloc", "(", "self", ".", "h0m", ",", "actual_batch_size", ",", "n_hidden", ")", "\n", "bix", "=", "T", ".", "alloc", "(", "self", ".", "bix", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bim", "=", "T", ".", "alloc", "(", "self", ".", "bim", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), \u539f\u7ef4\u5ea6\u653e\u5728\u540e\u8fb9", "\n", "bix", "=", "bix", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "bim", "=", "bim", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_len, batch_size, n_in)", "\n", "ips", ",", "iqs", "=", "ips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "iqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "tps", ",", "tqs", "=", "tps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "tqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "zero", "=", "self", ".", "alpha_lambda", "[", "4", "]", "\n", "if", "0.0", "==", "zero", ":", "# \u7528\u5b8c\u5168\u6570\u636e", "\n", "            ", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "mask_t", ",", "hx_t_pre1", ",", "hm_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ip_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tp_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "mq_t", "=", "T", ".", "dot", "(", "iq_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tq_t", ",", "vt", ".", "T", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "xp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "\n", "z_rm", "=", "sigmoid", "(", "T", ".", "dot", "(", "uim", "[", ":", "2", "]", ",", "mp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whm", "[", ":", "2", "]", ",", "hm_t_pre1", ".", "T", ")", "+", "bim", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "zm", ",", "rm", "=", "z_rm", "[", "0", "]", ".", "T", ",", "z_rm", "[", "1", "]", ".", "T", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "xp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "\n", "cm", "=", "tanh", "(", "T", ".", "dot", "(", "uim", "[", "2", "]", ",", "mp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whm", "[", "2", "]", ",", "(", "rm", "*", "hm_t_pre1", ")", ".", "T", ")", "+", "bim", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "\n", "hm_t", "=", "(", "T", ".", "ones_like", "(", "zm", ")", "-", "zm", ")", "*", "hm_t_pre1", "+", "zm", "*", "cm", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "xp_t", "-", "xq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "hm_t_pre1", "*", "(", "mp_t", "-", "mq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "loss_t", "*=", "mask_t", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "mp_t", ",", "ei", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "ei", ")", ")", "**", "2", ")", ")", "# T.sum(shape=(n, 1024), axis=1), \u6700\u540eshape=(n,)", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "mp_t", ",", "vt", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "vt", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_i", "*=", "mask_t", "\n", "loss_ae_t_t", "*=", "mask_t", "\n", "return", "[", "hx_t", ",", "hm_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "hx", ",", "hm", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0m", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "# \u6bcf\u6761\u5e8f\u5217\u8bad\u7ec3\u524d\u90fd\u968f\u673awhole feature corrupted", "\n", "            ", "ipsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "ips", ",", "zero", ")", "\n", "iqsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "iqs", ",", "zero", ")", "\n", "tpsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "tps", ",", "zero", ")", "\n", "tqsc", "=", "self", ".", "get_corrupted_input_whole_minibatch", "(", "tqs", ",", "zero", ")", "\n", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "\n", "ipc_t", ",", "iqc_t", ",", "tpc_t", ",", "tqc_t", ",", "mask_t", ",", "hx_t_pre1", ",", "hm_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "                ", "mp_t", "=", "T", ".", "dot", "(", "ipc_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tpc_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "mq_t", "=", "T", ".", "dot", "(", "iqc_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tqc_t", ",", "vt", ".", "T", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "z_rx", "=", "sigmoid", "(", "T", ".", "dot", "(", "uix", "[", ":", "2", "]", ",", "xp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", ":", "2", "]", ",", "hx_t_pre1", ".", "T", ")", "+", "bix", "[", ":", "2", "]", ")", "\n", "z_rm", "=", "sigmoid", "(", "T", ".", "dot", "(", "uim", "[", ":", "2", "]", ",", "mp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whm", "[", ":", "2", "]", ",", "hm_t_pre1", ".", "T", ")", "+", "bim", "[", ":", "2", "]", ")", "\n", "zx", ",", "rx", "=", "z_rx", "[", "0", "]", ".", "T", ",", "z_rx", "[", "1", "]", ".", "T", "# shape=(n, 20)", "\n", "zm", ",", "rm", "=", "z_rm", "[", "0", "]", ".", "T", ",", "z_rm", "[", "1", "]", ".", "T", "\n", "cx", "=", "tanh", "(", "T", ".", "dot", "(", "uix", "[", "2", "]", ",", "xp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whx", "[", "2", "]", ",", "(", "rx", "*", "hx_t_pre1", ")", ".", "T", ")", "+", "bix", "[", "2", "]", ")", "\n", "cm", "=", "tanh", "(", "T", ".", "dot", "(", "uim", "[", "2", "]", ",", "mp_t", ".", "T", ")", "+", "T", ".", "dot", "(", "whm", "[", "2", "]", ",", "(", "rm", "*", "hm_t_pre1", ")", ".", "T", ")", "+", "bim", "[", "2", "]", ")", "\n", "hx_t", "=", "(", "T", ".", "ones_like", "(", "zx", ")", "-", "zx", ")", "*", "hx_t_pre1", "+", "zx", "*", "cx", ".", "T", "\n", "hm_t", "=", "(", "T", ".", "ones_like", "(", "zm", ")", "-", "zm", ")", "*", "hm_t_pre1", "+", "zm", "*", "cm", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "(", "\n", "T", ".", "sum", "(", "hx_t_pre1", "*", "(", "xp_t", "-", "xq_t", ")", ",", "axis", "=", "1", ")", "+", "\n", "T", ".", "sum", "(", "hm_t_pre1", "*", "(", "mp_t", "-", "mq_t", ")", ",", "axis", "=", "1", ")", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "\n", "loss_t", "*=", "mask_t", "\n", "# \u91cd\u6784\u8bef\u5dee", "\n", "# denoising: \u91cd\u6784\u65f6\u7528ip_t\u3002", "\n", "# missing:   \u91cd\u6784\u65f6\u7528ipc_t\u3002", "\n", "loss_ae_t_i", "=", "(", "\n", "T", ".", "sum", "(", "(", "ip_t", "-", "T", ".", "dot", "(", "mp_t", ",", "ei", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "iq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "ei", ")", ")", "**", "2", ")", ")", "# T.sum(shape=(n, 1024), axis=1), \u6700\u540eshape=(n,)", "\n", "loss_ae_t_t", "=", "(", "\n", "T", ".", "sum", "(", "(", "tp_t", "-", "T", ".", "dot", "(", "mp_t", ",", "vt", ")", ")", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "(", "tq_t", "-", "T", ".", "dot", "(", "mq_t", ",", "vt", ")", ")", "**", "2", ")", ")", "\n", "loss_ae_t_i", "*=", "mask_t", "\n", "loss_ae_t_t", "*=", "mask_t", "\n", "return", "[", "hx_t", ",", "hm_t", ",", "loss_t", ",", "loss_ae_t_i", ",", "loss_ae_t_t", "]", "\n", "", "[", "hx", ",", "hm", ",", "loss", ",", "loss_ae_i", ",", "loss_ae_t", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "ipsc", ",", "iqsc", ",", "tpsc", ",", "tqsc", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0x", ",", "h0m", ",", "None", ",", "None", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "l2_ae", "=", "self", ".", "alpha_lambda", "[", "3", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "uix", ",", "whx", ",", "uim", ",", "whm", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bix", ",", "bim", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "seq_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "ae", "=", "(", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_i", ")", "/", "n_img", "+", "\n", "0.5", "*", "l2_ae", "*", "T", ".", "sum", "(", "loss_ae_t", ")", "/", "n_txt", ")", "\n", "seq_costs", "=", "(", "\n", "(", "-", "upq", "+", "ae", ")", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", "+", "ae", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGru2Units.train": [[854, 856], ["GRU_MV.MvGru2Units.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGru2Units.update_trained_items": [[857, 866], ["mm.eval.eval.eval", "GRU_MV.MvGru2Units.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.MvGru2Units.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGru2Units.update_trained_items2_corrupted_test_data": [[867, 878], ["mm.eval.eval.eval", "GRU_MV.MvGru2Units.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.MvGru2Units.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruCon.__init__": [[888, 919], ["GRU.GruBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "GRU_MV.MvGruCon.__theano_train__", "GRU_MV.MvGruCon.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "MvGruCon", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "mi", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u56fe\u50cf\u7684\u4f4e\u7ef4\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "mt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u6587\u672c\u7684\u4f4e\u7ef4\u7279\u5f81\uff0c", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "self", ".", "mi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mi", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "# \u53ea\u662f\u62fc\u63a5\u800c\u5df2\uff0c\u4e0d\u9700\u8981\u52a0bias", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "4", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "ei", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "self", ".", "vt", "**", "2", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruCon.__theano_train__": [[920, 1017], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bi.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "ips.dimshuffle", "iqs.dimshuffle", "tps.dimshuffle", "tqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 20)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 20), n_hidden\u653e\u5728\u6700\u540e", "\n", "bi", "=", "bi", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 20, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_len, batch_size, n_in)", "\n", "ips", ",", "iqs", "=", "ips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "iqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "tps", ",", "tqs", "=", "tps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "tqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "mask_t", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "            ", "mip_t", ",", "mtp_t", "=", "T", ".", "dot", "(", "ip_t", ",", "ei", ".", "T", ")", ",", "T", ".", "dot", "(", "tp_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "miq_t", ",", "mtq_t", "=", "T", ".", "dot", "(", "iq_t", ",", "ei", ".", "T", ")", ",", "T", ".", "dot", "(", "tq_t", ",", "vt", ".", "T", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mip_t", ",", "mtp_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, 60)", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "miq_t", ",", "mtq_t", ")", ",", "axis", "=", "1", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "z_r", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", "[", ":", "2", "]", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", ":", "2", "]", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "[", ":", "2", "]", ")", "\n", "z", ",", "r", "=", "z_r", "[", "0", "]", ".", "T", ",", "z_r", "[", "1", "]", ".", "T", "# shape=(n, 40)", "\n", "c", "=", "tanh", "(", "T", ".", "dot", "(", "ui", "[", "2", "]", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", "2", "]", ",", "(", "r", "*", "h_t_pre1", ")", ".", "T", ")", "+", "bi", "[", "2", "]", ")", "\n", "h_t", "=", "(", "T", ".", "ones_like", "(", "z", ")", "-", "z", ")", "*", "h_t_pre1", "+", "z", "*", "c", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "p_t", "-", "q_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "\n", "return", "[", "h_t", ",", "loss_t", "]", "# shape=(n, 20), (n, ), (n, )", "\n", "", "[", "h", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bi", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "seq_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruCon.train": [[1018, 1020], ["GRU_MV.MvGruCon.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruCon.update_trained_items": [[1021, 1031], ["GRU_MV.MvGruCon.mi.set_value", "GRU_MV.MvGruCon.mt.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.MvGruCon.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "mi.eval", "mt.eval", "numpy.asarray", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mi", ",", "mt", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", ",", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mi", ",", "mt", "=", "mi", ".", "eval", "(", ")", ",", "mt", ".", "eval", "(", ")", "\n", "self", ".", "mi", ".", "set_value", "(", "np", ".", "asarray", "(", "mi", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "self", ".", "mt", ".", "set_value", "(", "np", ".", "asarray", "(", "mt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mi", ",", "self", ".", "mt", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 60)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruCon.update_trained_items2_corrupted_test_data": [[1032, 1044], ["GRU_MV.MvGruCon.mi.set_value", "GRU_MV.MvGruCon.mt.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.MvGruCon.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "mi.eval", "mt.eval", "numpy.asarray", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mi", ",", "mt", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", ",", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mi", ",", "mt", "=", "mi", ".", "eval", "(", ")", ",", "mt", ".", "eval", "(", ")", "\n", "self", ".", "mi", ".", "set_value", "(", "np", ".", "asarray", "(", "mi", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "self", ".", "mt", ".", "set_value", "(", "np", ".", "asarray", "(", "mt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mi", ",", "self", ".", "mt", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 60)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__init__": [[1054, 1084], ["GRU.GruBasic.__init__", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "theano.sum", "theano.sum", "GRU_MV.MvGruFusion.__theano_train__", "GRU_MV.MvGruFusion.__theano_predict__", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "numpy.random.uniform.astype", "theano.sum", "theano.sum", "theano.sum", "theano.sum"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_Parallel.PGruParallelResBpr.__theano_predict__"], ["def", "__init__", "(", "self", ",", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ",", "\n", "n_img", ",", "n_txt", ",", "fea_img", ",", "fea_txt", ",", "fea_img_ct", ",", "fea_txt_ct", ")", ":", "\n", "        ", "super", "(", "MvGruFusion", ",", "self", ")", ".", "__init__", "(", "train", ",", "test", ",", "alpha_lambda", ",", "n_user", ",", "n_item", ",", "n_in", ",", "n_hidden", ")", "\n", "self", ".", "fi", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "self", ".", "fi_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_img_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 1024)", "\n", "self", ".", "ft_ct", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "np", ".", "asarray", "(", "fea_txt_ct", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "# shape=(n, 100)", "\n", "# \u5176\u5b83\u53c2\u6570", "\n", "rang", "=", "0.5", "\n", "lt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u591a\u51fa\u6765\u4e00\u4e2a(\u586b\u5145\u7b26)\uff0c\u5b58\u653e\u7528\u4e8e\u8865\u9f50\u7528\u6237\u8d2d\u4e70\u5e8f\u5217/\u5b9e\u9645\u4e0d\u5b58\u5728\u7684item", "\n", "mm", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_item", "+", "1", ",", "n_in", ")", ")", "# \u4f4e\u7ef4\u7684\u591a\u6a21\u6001\u878d\u5408\u7279\u5f81\uff0c\u548c lt \u4e00\u4e00\u5bf9\u5e94\u3002", "\n", "ei", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_img", ")", ")", "# shape=(20, 1024)", "\n", "vt", "=", "uniform", "(", "-", "rang", ",", "rang", ",", "(", "n_in", ",", "n_txt", ")", ")", "# shape=(20, 100)", "\n", "self", ".", "lt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "lt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "mm", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "mm", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "ei", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "ei", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "vt", "=", "theano", ".", "shared", "(", "borrow", "=", "True", ",", "value", "=", "vt", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "self", ".", "params", "=", "[", "\n", "self", ".", "ui", ",", "self", ".", "wh", ",", "self", ".", "bi", ",", "# self.lt\u5355\u72ec\u8fdb\u884c\u66f4\u65b0\u3002", "\n", "self", ".", "ei", ",", "self", ".", "vt", "]", "\n", "self", ".", "l2_sqr", "=", "(", "\n", "T", ".", "sum", "(", "self", ".", "lt", "**", "2", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", ":", "3", "]", "]", ")", ")", "\n", "self", ".", "l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "param", "**", "2", ")", "for", "param", "in", "self", ".", "params", "[", "3", ":", "]", "]", ")", ")", "\n", "self", ".", "l2", "=", "(", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "1", "]", "*", "self", ".", "l2_sqr", "+", "\n", "0.5", "*", "self", ".", "alpha_lambda", "[", "2", "]", "*", "self", ".", "l2_ev", ")", "\n", "self", ".", "__theano_train__", "(", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", "\n", "self", ".", "__theano_predict__", "(", "n_in", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.__theano_train__": [[1085, 1182], ["theano.imatrix", "theano.imatrix", "theano.max", "theano.max", "theano.alloc", "theano.alloc", "theano.alloc", "theano.alloc", "bi.dimshuffle.dimshuffle.dimshuffle", "theano.concatenate", "theano.concatenate", "theano.scan", "theano.scan", "theano.scan", "theano.scan", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "theano.grad", "theano.grad", "theano.set_subtensor", "theano.set_subtensor", "seq_updates.append", "theano.ivector", "theano.ivector", "theano.function", "theano.function", "theano.function", "theano.function", "theano.sum", "theano.sum", "theano.imatrix", "theano.imatrix", "theano.imatrix", "theano.imatrix", "xps.dimshuffle", "xqs.dimshuffle", "ips.dimshuffle", "iqs.dimshuffle", "tps.dimshuffle", "tqs.dimshuffle", "theano.tensor.extra_ops.Unique", "theano.tensor.extra_ops.Unique", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.tensor.tanh", "theano.tensor.tanh", "theano.sum", "theano.sum", "theano.log", "theano.log", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.tensor.nnet.sigmoid", "theano.tensor.nnet.sigmoid", "theano.sum", "theano.sum", "theano.sum", "theano.sum", "zip", "theano.sum", "theano.sum", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "theano.ones_like", "theano.ones_like", "theano.sum", "theano.sum", "theano.grad", "theano.grad"], "methods", ["None"], ["", "def", "__theano_train__", "(", "self", ",", "n_in", ",", "n_hidden", ",", "n_img", ",", "n_txt", ")", ":", "\n", "        ", "\"\"\"\n        \u8bad\u7ec3\u9636\u6bb5\u8dd1\u4e00\u904d\u8bad\u7ec3\u5e8f\u5217\n        \"\"\"", "\n", "# self.alpha_lambda = ['alpha', 'lambda', 'lambda_ev']", "\n", "ui", ",", "wh", "=", "self", ".", "ui", ",", "self", ".", "wh", "\n", "ei", ",", "vt", "=", "self", ".", "ei", ",", "self", ".", "vt", "\n", "\n", "tra_mask", "=", "T", ".", "imatrix", "(", ")", "# shape=(n, 157)", "\n", "actual_batch_size", "=", "tra_mask", ".", "shape", "[", "0", "]", "\n", "seq_length", "=", "T", ".", "max", "(", "T", ".", "sum", "(", "tra_mask", ",", "axis", "=", "1", ")", ")", "# \u83b7\u53d6mini-batch\u91cc\u5404\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\u4f5c\u4e3aseq_length", "\n", "mask", "=", "tra_mask", ".", "T", "# shape=(157, n)", "\n", "\n", "h0", "=", "T", ".", "alloc", "(", "self", ".", "h0", ",", "actual_batch_size", ",", "n_hidden", ")", "# shape=(n, 40)", "\n", "bi", "=", "T", ".", "alloc", "(", "self", ".", "bi", ",", "actual_batch_size", ",", "3", ",", "n_hidden", ")", "# shape=(n, 3, 40), n_hidden\u653e\u5728\u6700\u540e", "\n", "bi", "=", "bi", ".", "dimshuffle", "(", "1", ",", "2", ",", "0", ")", "# shape=(3, 40, n)", "\n", "\n", "pidxs", ",", "qidxs", "=", "T", ".", "imatrix", "(", ")", ",", "T", ".", "imatrix", "(", ")", "# TensorType(int32, matrix)", "\n", "xps", ",", "xqs", "=", "self", ".", "lt", "[", "pidxs", "]", ",", "self", ".", "lt", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_in))", "\n", "ips", ",", "iqs", "=", "self", ".", "fi", "[", "pidxs", "]", ",", "self", ".", "fi", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_img))", "\n", "tps", ",", "tqs", "=", "self", ".", "ft", "[", "pidxs", "]", ",", "self", ".", "ft", "[", "qidxs", "]", "# shape((actual_batch_size, seq_length, n_txt))", "\n", "xps", ",", "xqs", "=", "xps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "xqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "# shape=(seq_len, batch_size, n_in)", "\n", "ips", ",", "iqs", "=", "ips", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "iqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "tps", ",", "tqs", "=", "tps", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", ",", "tqs", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "pqs", "=", "T", ".", "concatenate", "(", "(", "pidxs", ",", "qidxs", ")", ")", "# \u5148\u62fc\u63a5", "\n", "uiq_pqs", "=", "Unique", "(", "False", ",", "False", ",", "False", ")", "(", "pqs", ")", "# \u518d\u53bb\u91cd", "\n", "uiq_x", "=", "self", ".", "lt", "[", "uiq_pqs", "]", "# \u76f8\u5e94\u7684items\u7279\u5f81", "\n", "\n", "\"\"\"\n        \u8f93\u5165t\u65f6\u523b\u6b63\u8d1f\u6837\u672c\u3001t-1\u65f6\u523b\u9690\u5c42\uff0c\u8ba1\u7b97\u5f53\u524d\u9690\u5c42\u3001\u5f53\u524d\u635f\u5931. \u516c\u5f0f\u91cc\u7701\u7565\u4e86\u65f6\u523bt\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((m, n), (n, ))\u5f97\u5230shape=(m, )\uff0c\u4e14\u662f\u77e9\u9635\u6bcf\u884c\u4e0e(n, )\u76f8\u4e58\n            # GRU\n            z = sigmoid(ux_z * xp + wh_z * h_pre1)\n            r = sigmoid(ux_r * xp + wh_r * h_pre1)\n            c = tanh(ux_c * xp + wh_c * (r \u70b9\u4e58 h_pre1))\n            h = z * h_pre1 + (1.0 - z) * c\n        # \u6839\u636e\u6027\u8d28\uff1aT.dot((n, ), (n, ))\u5f97\u5230scalar\n            upq  = h_pre1 * (xp - xq)\n            loss = log(1.0 + e^(-upq))\n        \"\"\"", "\n", "def", "recurrence", "(", "xp_t", ",", "xq_t", ",", "ip_t", ",", "iq_t", ",", "tp_t", ",", "tq_t", ",", "mask_t", ",", "h_t_pre1", ")", ":", "\n", "# item\u8868\u8fbe", "\n", "            ", "mp_t", "=", "T", ".", "dot", "(", "ip_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tp_t", ",", "vt", ".", "T", ")", "# shape=(n, 20)", "\n", "mq_t", "=", "T", ".", "dot", "(", "iq_t", ",", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "tq_t", ",", "vt", ".", "T", ")", "\n", "p_t", "=", "T", ".", "concatenate", "(", "(", "xp_t", ",", "mp_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, 40)", "\n", "q_t", "=", "T", ".", "concatenate", "(", "(", "xq_t", ",", "mq_t", ")", ",", "axis", "=", "1", ")", "\n", "# \u9690\u5c42\u8ba1\u7b97", "\n", "z_r", "=", "sigmoid", "(", "T", ".", "dot", "(", "ui", "[", ":", "2", "]", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", ":", "2", "]", ",", "h_t_pre1", ".", "T", ")", "+", "bi", "[", ":", "2", "]", ")", "\n", "z", ",", "r", "=", "z_r", "[", "0", "]", ".", "T", ",", "z_r", "[", "1", "]", ".", "T", "# shape=(n, 40)", "\n", "c", "=", "tanh", "(", "T", ".", "dot", "(", "ui", "[", "2", "]", ",", "p_t", ".", "T", ")", "+", "\n", "T", ".", "dot", "(", "wh", "[", "2", "]", ",", "(", "r", "*", "h_t_pre1", ")", ".", "T", ")", "+", "bi", "[", "2", "]", ")", "\n", "h_t", "=", "(", "T", ".", "ones_like", "(", "z", ")", "-", "z", ")", "*", "h_t_pre1", "+", "z", "*", "c", ".", "T", "\n", "# \u504f\u597d\u8bef\u5dee", "\n", "upq_t", "=", "T", ".", "sum", "(", "h_t_pre1", "*", "(", "p_t", "-", "q_t", ")", ",", "axis", "=", "1", ")", "# shape=(n, )", "\n", "loss_t", "=", "T", ".", "log", "(", "sigmoid", "(", "upq_t", ")", ")", "# shape=(n, )", "\n", "loss_t", "*=", "mask_t", "\n", "return", "[", "h_t", ",", "loss_t", "]", "# shape=(n, 20), (n, ), (n, )", "\n", "", "[", "h", ",", "loss", "]", ",", "_", "=", "theano", ".", "scan", "(", "\n", "fn", "=", "recurrence", ",", "\n", "sequences", "=", "[", "xps", ",", "xqs", ",", "ips", ",", "iqs", ",", "tps", ",", "tqs", ",", "mask", "]", ",", "\n", "outputs_info", "=", "[", "h0", ",", "None", "]", ",", "\n", "n_steps", "=", "seq_length", ",", "\n", "truncate_gradient", "=", "-", "1", ")", "\n", "\n", "# ----------------------------------------------------------------------------", "\n", "# cost, gradients, learning rate, l2 regularization", "\n", "lr", ",", "l2", "=", "self", ".", "alpha_lambda", "[", "0", "]", ",", "self", ".", "alpha_lambda", "[", "1", "]", "\n", "l2_ev", "=", "self", ".", "alpha_lambda", "[", "2", "]", "\n", "seq_l2_sq", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "xps", ",", "xqs", ",", "ui", ",", "wh", "]", "]", ")", "+", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "bi", "]", "]", ")", "/", "actual_batch_size", ")", "\n", "seq_l2_ev", "=", "(", "\n", "T", ".", "sum", "(", "[", "T", ".", "sum", "(", "par", "**", "2", ")", "for", "par", "in", "[", "ei", ",", "vt", "]", "]", ")", ")", "\n", "upq", "=", "T", ".", "sum", "(", "loss", ")", "\n", "seq_costs", "=", "(", "\n", "-", "upq", "/", "actual_batch_size", "+", "\n", "0.5", "*", "l2", "*", "seq_l2_sq", "+", "\n", "0.5", "*", "l2_ev", "*", "seq_l2_ev", ")", "\n", "seq_grads", "=", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "params", ")", "\n", "seq_updates", "=", "[", "(", "par", ",", "par", "-", "lr", "*", "gra", ")", "for", "par", ",", "gra", "in", "zip", "(", "self", ".", "params", ",", "seq_grads", ")", "]", "\n", "update_x", "=", "T", ".", "set_subtensor", "(", "uiq_x", ",", "uiq_x", "-", "lr", "*", "T", ".", "grad", "(", "seq_costs", ",", "self", ".", "lt", ")", "[", "uiq_pqs", "]", ")", "\n", "seq_updates", ".", "append", "(", "(", "self", ".", "lt", ",", "update_x", ")", ")", "# \u4f1a\u76f4\u63a5\u66f4\u6539\u5230seq_updates\u91cc", "\n", "# ----------------------------------------------------------------------------", "\n", "\n", "# \u8f93\u5165\u6b63\u3001\u8d1f\u6837\u672c\u5e8f\u5217\u53ca\u5176\u5b83\u53c2\u6570\u540e\uff0c\u66f4\u65b0\u53d8\u91cf\uff0c\u8fd4\u56de\u635f\u5931\u3002", "\n", "# givens\u7ed9\u6570\u636e", "\n", "start_end", "=", "T", ".", "ivector", "(", ")", "\n", "self", ".", "seq_train", "=", "theano", ".", "function", "(", "\n", "inputs", "=", "[", "start_end", "]", ",", "\n", "outputs", "=", "-", "upq", ",", "\n", "updates", "=", "seq_updates", ",", "\n", "givens", "=", "{", "\n", "pidxs", ":", "self", ".", "tra_buys_masks", "[", "start_end", "]", ",", "# \u7c7b\u578b\u662f TensorType(int32, matrix)", "\n", "qidxs", ":", "self", ".", "tra_buys_neg_masks", "[", "start_end", "]", ",", "# T.ivector()\u7c7b\u578b\u662f TensorType(int32, vector)", "\n", "tra_mask", ":", "self", ".", "tra_masks", "[", "start_end", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.train": [[1183, 1185], ["GRU_MV.MvGruFusion.seq_train"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "idxs", ")", ":", "\n", "        ", "return", "self", ".", "seq_train", "(", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.update_trained_items": [[1186, 1195], ["mm.eval.eval.eval", "GRU_MV.MvGruFusion.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.MvGruFusion.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items", "(", "self", ")", ":", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.update_trained_items2_corrupted_test_data": [[1196, 1207], ["mm.eval.eval.eval", "GRU_MV.MvGruFusion.mm.set_value", "theano.concatenate", "theano.concatenate", "items.eval.eval.eval", "GRU_MV.MvGruFusion.trained_items.set_value", "theano.dot", "theano.dot", "theano.dot", "theano.dot", "numpy.asarray", "numpy.asarray"], "methods", ["None"], ["", "def", "update_trained_items2_corrupted_test_data", "(", "self", ")", ":", "\n", "# update_trained_items: \u7528\u4e8etrain\u4e4b\u540e\uff0c\u91cd\u65b0\u7528\u5b8c\u6574\u6570\u636e\u83b7\u5f97users\u8868\u8fbe\u3002", "\n", "# update_trained_items2_corrupted_test: \u7528\u4e8etest\u4e4b\u524d\uff0c\u83b7\u5f97test\u6709\u90e8\u5206\u7f3a\u5931\u7684items\u8868\u8fbe\u3002", "\n", "# \u83b7\u53d6\u56fe\u6587\u878d\u5408\u8868\u8fbe\u3002\u5148\u7528.eval()\u83b7\u5f97\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u518d\u7528set_value()\u5bf9shared\u53d8\u91cf\u505a\u66f4\u65b0\u3002", "\n", "        ", "mm", "=", "T", ".", "dot", "(", "self", ".", "fi_ct", ",", "self", ".", "ei", ".", "T", ")", "+", "T", ".", "dot", "(", "self", ".", "ft_ct", ",", "self", ".", "vt", ".", "T", ")", "# shape=(n_item+1, 20)", "\n", "mm", "=", "mm", ".", "eval", "(", ")", "\n", "self", ".", "mm", ".", "set_value", "(", "np", ".", "asarray", "(", "mm", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "# \u66f4\u65b0\u6700\u7ec8\u7684items\u8868\u8fbe", "\n", "items", "=", "T", ".", "concatenate", "(", "(", "self", ".", "lt", ",", "self", ".", "mm", ")", ",", "axis", "=", "1", ")", "# shape=(n_item+1, 40)", "\n", "items", "=", "items", ".", "eval", "(", ")", "\n", "self", ".", "trained_items", ".", "set_value", "(", "np", ".", "asarray", "(", "items", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ",", "borrow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.exe_time": [[21, 34], ["datetime.datetime.now", "print", "func", "datetime.datetime.now", "print", "print", "print", "datetime.datetime.now.strftime", "datetime.datetime.now.strftime", "datetime.datetime.now.strftime"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "name", "=", "func", ".", "__name__", "\n", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ".", "strftime", "(", "\"%Y.%m.%d_%H.%M.%S\"", ")", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "end", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ".", "strftime", "(", "\"%Y.%m.%d_%H.%M.%S\"", ")", ")", ")", "\n", "print", "(", "\"-- {%s} end:   @ %ss\"", "%", "(", "name", ",", "end", ".", "strftime", "(", "\"%Y.%m.%d_%H.%M.%S\"", ")", ")", ")", "\n", "total", "=", "(", "end", "-", "start", ")", ".", "total_seconds", "(", ")", "\n", "print", "(", "\"-- {%s} total: @ %.2fs = %.2fh\"", "%", "(", "name", ",", "total", ",", "total", "/", "3600.0", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.main": [[1209, 1212], ["print"], "function", ["None"], ["", "", "@", "exe_time", "\n", "def", "main", "(", ")", ":", "\n", "    ", "print", "(", "'... construct the class: MV-GRU'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_mv.Params.__init__": [[62, 126], ["public.Load_Data_by_time.load_data", "public.Load_Data_by_time.fun_data_buys_masks", "public.Load_Data_by_time.fun_data_buys_masks", "public.Load_Data_by_time.fun_random_neg_masks_tra", "public.Load_Data_by_time.fun_random_neg_masks_tes", "collections.OrderedDict", "collections.OrderedDict.items", "os.path.join", "print"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_data", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_data_buys_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_data_buys_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tra", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tes"], ["    ", "def", "__init__", "(", "self", ",", "p", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        \u6784\u5efa\u6a21\u578b\u53c2\u6570\uff0c\u52a0\u8f7d\u6570\u636e\n            \u628a\u524d80%\u5206\u4e3a6:2\u7528\u4f5ctrain\u548cvalid\uff0c\u6765\u9009\u62e9\u8d85\u53c2\u6570, \u4e0d\u7528\u53bb\u7ba1\u5269\u4e0b\u768420%.\n            \u628a\u524d80%\u4f5c\u4e3atrain\uff0c\u5269\u4e0b\u7684\u662ftest\uff0c\u628avalid\u65f6\u5b66\u5230\u7684\u53c2\u6570\u62ff\u8fc7\u6765\u8dd1\u7a0b\u5e8f.\n            valid\u548ctest\u90e8\u5206\uff0c\u7a0b\u5e8f\u662f\u4e00\u6837\u7684\uff0c\u533a\u522b\u5728\u4e8e\u9001\u5165\u7684\u6570\u636e\u800c\u5df2\u3002\n        :param p: \u4e00\u4e2a\u6807\u793a\u7b26\uff0c\u6ca1\u5565\u7528\n        :return:\n        \"\"\"", "\n", "global", "PATH", "\n", "# 1. \u5efa\u7acb\u5404\u53c2\u6570\u3002\u8981\u8c03\u6574\u7684\u5730\u65b9\u90fd\u5728 p \u8fd9\u4e86\uff0c\u5176\u5b83\u51fd\u6570\u90fd\u7ed9\u5199\u6b7b\u3002", "\n", "if", "not", "p", ":", "\n", "            ", "t", "=", "'t'", "# \u51991\u5c31\u662fvalid, \u51990\u5c31\u662ftest", "\n", "assert", "'t'", "==", "t", "or", "'v'", "==", "t", "# no other case", "\n", "p", "=", "OrderedDict", "(", "\n", "[", "\n", "(", "'dataset'", ",", "'user_buys.txt'", ")", ",", "\n", "(", "'fea_image'", ",", "'normalized_features_image/'", ")", ",", "\n", "(", "'fea_text'", ",", "'normalized_features_text/'", ")", ",", "\n", "(", "'mode'", ",", "'test'", "if", "'t'", "==", "t", "else", "'valid'", ")", ",", "\n", "(", "'split'", ",", "[", "0.8", ",", "1.0", "]", "if", "'t'", "==", "t", "else", "[", "0.6", ",", "0.8", "]", ")", ",", "# valid: 6/2/2\u3002test: 8/2.", "\n", "(", "'at_nums'", ",", "[", "10", ",", "20", ",", "30", ",", "50", "]", ")", ",", "# 5\uff0c 15", "\n", "(", "'intervals'", ",", "[", "2", ",", "10", ",", "30", "]", ")", ",", "# \u4ee5\u6b21\u65702\u4e3a\u95f4\u9694\uff0c\u5206\u4e3a10\u4e2a\u533a\u95f4. \u8ba1\u7b97auc/recall@30\u4e0a\u7684. \u6362\u4e3a10", "\n", "(", "'epochs'", ",", "30", "if", "'taobao'", "in", "PATH", "else", "50", ")", ",", "\n", "(", "'alpha'", ",", "0.1", ")", ",", "\n", "\n", "(", "'latent_size'", ",", "[", "20", ",", "1024", ",", "100", "]", ")", ",", "\n", "(", "'lambda'", ",", "0.1", ")", ",", "\n", "(", "'lambda_ev'", ",", "0.0", ")", ",", "# \u56fe\u6587\u964d\u7ef4\u5c40\u77e9\u9635\u7684\u3002\u5c31\u662f\u8fd9\u4e2a0.0", "\n", "(", "'lambda_ae'", ",", "0.00001", ")", ",", "# \u91cd\u6784\u8bef\u5dee\u7684\u3002", "\n", "\n", "(", "'train_fea_zero'", ",", "0.3", ")", ",", "# denoising\u6a21\u5f0f\u30020.1\u30010.2/0.3", "\n", "(", "'mini_batch'", ",", "1", ")", ",", "# 0:one_by_one,     1:mini_batch", "\n", "(", "'mvlstm'", ",", "1", ")", ",", "# 0:lstm,", "\n", "# 1:mv-lstm-1unit, 2:2units, 3:con, 4:fusion", "\n", "\n", "(", "'batch_size_train'", ",", "4", ")", ",", "# size\u5927\u4e86\u4e4b\u540e\u6027\u80fd\u4e0b\u964d\u975e\u5e38\u4e25\u91cd", "\n", "(", "'batch_size_test'", ",", "768", ")", ",", "# user*item\u77e9\u9635\u592a\u5927\uff0c\u8981\u591a\u6b21\u8ba1\u7b97\u3002a5\u4e0b\u4eb2\u6d4b768\u6700\u5feb\u3002", "\n", "]", ")", "\n", "for", "i", "in", "p", ".", "items", "(", ")", ":", "\n", "                ", "print", "(", "i", ")", "\n", "\n", "# 2. \u52a0\u8f7d\u6570\u636e", "\n", "# \u56e0\u4e3atrain/set\u91cc\u6bcf\u9879\u7684\u957f\u5ea6\u4e0d\u7b49\uff0c\u65e0\u6cd5\u8f6c\u6362\u4e3a\u5b8c\u5168\u7684(n, m)\u77e9\u9635\u6837\u5f0f\uff0c\u6240\u4ee5shared\u4f1a\u62a5\u9519.", "\n", "", "", "[", "(", "user_num", ",", "item_num", ")", ",", "aliases_dict", ",", "\n", "(", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", ",", "\n", "(", "tra_buys", ",", "tes_buys", ")", ",", "(", "set_tra", ",", "set_tes", ")", "]", "=", "load_data", "(", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'dataset'", "]", ")", ",", "p", "[", "'mode'", "]", ",", "p", "[", "'split'", "]", ",", "p", "[", "'intervals'", "]", ")", "\n", "# \u6b63\u6837\u672c\u52a0masks", "\n", "tra_buys_masks", ",", "tra_masks", "=", "fun_data_buys_masks", "(", "tra_buys", ",", "tail", "=", "[", "item_num", "]", ")", "# \u9884\u6d4b\u65f6\u7b97\u7528\u6237\u8868\u8fbe\u7528", "\n", "tes_buys_masks", ",", "tes_masks", "=", "fun_data_buys_masks", "(", "tes_buys", ",", "tail", "=", "[", "item_num", "]", ")", "# \u9884\u6d4b\u65f6\u7528", "\n", "# \u8d1f\u6837\u672c\u52a0masks", "\n", "tra_buys_neg_masks", "=", "fun_random_neg_masks_tra", "(", "item_num", ",", "tra_buys_masks", ")", "# \u8bad\u7ec3\u65f6\u7528\uff08\u9010\u6761\u3001mini-batch\u5747\u53ef\uff09", "\n", "tes_buys_neg_masks", "=", "fun_random_neg_masks_tes", "(", "item_num", ",", "tra_buys_masks", ",", "tes_buys_masks", ")", "# \u9884\u6d4b\u65f6\u7528", "\n", "\n", "# 3. \u521b\u5efa\u7c7b\u53d8\u91cf", "\n", "self", ".", "p", "=", "p", "\n", "self", ".", "user_num", ",", "self", ".", "item_num", "=", "user_num", ",", "item_num", "\n", "self", ".", "aliases_dict", "=", "aliases_dict", "\n", "self", ".", "tic", ",", "self", ".", "tiic", ",", "self", ".", "tica", "=", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", "\n", "self", ".", "tra_buys", ",", "self", ".", "tes_buys", "=", "tra_buys", ",", "tes_buys", "\n", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "=", "tra_buys_masks", ",", "tra_masks", ",", "tra_buys_neg_masks", "\n", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "=", "tes_buys_masks", ",", "tes_masks", ",", "tes_buys_neg_masks", "\n", "self", ".", "set_tra", ",", "self", ".", "set_tes", "=", "set_tra", ",", "set_tes", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_mv.Params.build_model_one_by_one": [[128, 196], ["print", "print", "public.LSTM.OboLstm", "public.Load_Data_by_time.load_img_txt", "public.Load_Data_by_time.load_img_txt", "set", "set", "public.Load_Data_by_time.load_img_txt.copy", "public.Load_Data_by_time.load_img_txt.copy", "os.path.join", "os.path.join", "len", "random.sample", "random.sample", "public.LSTM_MV.OboMvLstm", "public.LSTM_MV.OboMvLstm2Units", "numpy.asarray", "numpy.asarray", "list", "list"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_img_txt", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_img_txt"], ["", "def", "build_model_one_by_one", "(", "self", ",", "flag", ")", ":", "\n", "        ", "\"\"\"\n        \u5efa\u7acb\u6a21\u578b\u5bf9\u8c61\n        :param flag: \u53c2\u6570\u53d8\u91cf\u3001\u6570\u636e\n        :return:\n        \"\"\"", "\n", "print", "(", "'building the model ...'", ")", "\n", "assert", "flag", "in", "[", "0", ",", "1", ",", "2", "]", "\n", "p", "=", "self", ".", "p", "\n", "size", "=", "p", "[", "'latent_size'", "]", "[", "0", "]", "\n", "if", "0", "==", "flag", ":", "# Lstm", "\n", "            ", "model", "=", "OboLstm", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "# \u53ea\u662ftest\u8ba1\u7b97\u7528\u6237\u8868\u8fbe\u65f6\u7528\u3002", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "1", ")", "\n", "", "else", ":", "\n", "# \u52a0\u8f7d\u56fe\u6587\u6570\u636e", "\n", "            ", "fea_img", "=", "load_img_txt", "(", "'Image'", ",", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'fea_image'", "]", ")", ",", "\n", "self", ".", "item_num", ",", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "self", ".", "aliases_dict", ")", "\n", "fea_txt", "=", "load_img_txt", "(", "'Text'", ",", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'fea_text'", "]", ")", ",", "\n", "self", ".", "item_num", ",", "p", "[", "'latent_size'", "]", "[", "2", "]", ",", "self", ".", "aliases_dict", ")", "\n", "# \u628atest\u91cc\u53d61/3items\u7684\u56fe\u7279\u5f81\u7f6e\u4e3a0\uff0c1/3items\u7684\u6587\u7279\u5f81\u7f6e\u4e3a0\uff0c1/3items\u7684\u7279\u5f81\u4e0d\u52a8\u3002", "\n", "set_tes", ",", "len_tes", "=", "self", ".", "set_tes", ",", "len", "(", "self", ".", "set_tes", ")", "\n", "no_img", "=", "set", "(", "random", ".", "sample", "(", "set_tes", ",", "len_tes", "//", "3", ")", ")", "\n", "set_tes", "-=", "no_img", "\n", "no_txt", "=", "set", "(", "random", ".", "sample", "(", "set_tes", ",", "len_tes", "//", "3", ")", ")", "\n", "fea_img_ct", "=", "fea_img", ".", "copy", "(", ")", "# \u4e0dcopy()\u4e00\u4e0b\u7684\u8bdd\uff0c\u6539\u53d8fea_img_ct\u540e\uff0cfea_img\u4e5f\u4f1a\u6539\u53d8\u3002", "\n", "fea_txt_ct", "=", "fea_txt", ".", "copy", "(", ")", "\n", "fea_img_ct", "[", "np", ".", "asarray", "(", "list", "(", "no_img", ")", ")", "]", "=", "0.0", "\n", "fea_txt_ct", "[", "np", ".", "asarray", "(", "list", "(", "no_txt", ")", ")", "]", "=", "0.0", "\n", "# print(list(no_img)[:3], list(no_txt)[:3])", "\n", "if", "1", "==", "flag", ":", "\n", "                ", "model", "=", "OboMvLstm", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", ",", "p", "[", "'lambda_ev'", "]", ",", "p", "[", "'lambda_ae'", "]", ",", "p", "[", "'train_fea_zero'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "2", ",", "# \u4e00\u4e2aGRU unit\uff0c\u9690\u5c42\u662fn_in\u7684\u4e24\u500d\u3002", "\n", "n_img", "=", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "\n", "n_txt", "=", "p", "[", "'latent_size'", "]", "[", "2", "]", ",", "\n", "fea_img", "=", "fea_img", ",", "\n", "fea_txt", "=", "fea_txt", ",", "\n", "fea_img_ct", "=", "fea_img_ct", ",", "\n", "fea_txt_ct", "=", "fea_txt_ct", ")", "\n", "", "else", ":", "\n", "                ", "model", "=", "OboMvLstm2Units", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", ",", "p", "[", "'lambda_ev'", "]", ",", "p", "[", "'lambda_ae'", "]", ",", "p", "[", "'train_fea_zero'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "1", ",", "# 2\u4e2aGRU unit\uff0c\u9690\u5c42\u662f2\u4e2an_in\u957f\u7684\u5411\u91cf\u62fc\u63a5\u6765", "\n", "n_img", "=", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "\n", "n_txt", "=", "p", "[", "'latent_size'", "]", "[", "2", "]", ",", "\n", "fea_img", "=", "fea_img", ",", "\n", "fea_txt", "=", "fea_txt", ",", "\n", "fea_img_ct", "=", "fea_img_ct", ",", "\n", "fea_txt_ct", "=", "fea_txt_ct", ")", "\n", "", "", "model_name", "=", "model", ".", "__class__", ".", "__name__", "\n", "print", "(", "'\\t the current Class name is: {val}'", ".", "format", "(", "val", "=", "model_name", ")", ")", "\n", "return", "model", ",", "model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_mv.Params.build_model_mini_batch": [[197, 298], ["print", "print", "public.LSTM.Lstm", "public.Load_Data_by_time.load_img_txt", "public.Load_Data_by_time.load_img_txt", "set", "set", "public.Load_Data_by_time.load_img_txt.copy", "public.Load_Data_by_time.load_img_txt.copy", "print", "os.path.join", "os.path.join", "len", "random.sample", "random.sample", "public.LSTM_MV.MvLstm1Unit", "numpy.asarray", "numpy.asarray", "public.LSTM_MV.MvLstm2Units", "list", "list", "public.LSTM_MV.MvLstmCon", "public.LSTM_MV.MvLstmFusion"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_img_txt", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_img_txt"], ["", "def", "build_model_mini_batch", "(", "self", ",", "flag", ")", ":", "\n", "        ", "\"\"\"\n        \u5efa\u7acb\u6a21\u578b\u5bf9\u8c61\n        :param flag: \u53c2\u6570\u53d8\u91cf\u3001\u6570\u636e\n        :return:\n        \"\"\"", "\n", "print", "(", "'building the model ...'", ")", "\n", "assert", "flag", "in", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", "]", "\n", "p", "=", "self", ".", "p", "\n", "size", "=", "p", "[", "'latent_size'", "]", "[", "0", "]", "\n", "if", "0", "==", "flag", ":", "# Lstm", "\n", "            ", "model", "=", "Lstm", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "1", ")", "\n", "", "else", ":", "\n", "# \u52a0\u8f7d\u56fe\u6587\u6570\u636e", "\n", "            ", "fea_img", "=", "load_img_txt", "(", "'Image'", ",", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'fea_image'", "]", ")", ",", "\n", "self", ".", "item_num", ",", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "self", ".", "aliases_dict", ")", "\n", "fea_txt", "=", "load_img_txt", "(", "'Text'", ",", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'fea_text'", "]", ")", ",", "\n", "self", ".", "item_num", ",", "p", "[", "'latent_size'", "]", "[", "2", "]", ",", "self", ".", "aliases_dict", ")", "\n", "# missing\u6a21\u5f0f\uff1a\u628atest\u91cc\u53d61/3items\u7684\u56fe\u7279\u5f81\u7f6e\u4e3a0\uff0c1/3items\u7684\u6587\u7279\u5f81\u7f6e\u4e3a0\uff0c1/3items\u7684\u7279\u5f81\u4e0d\u52a8\u3002", "\n", "set_tes", ",", "len_tes", "=", "self", ".", "set_tes", ",", "len", "(", "self", ".", "set_tes", ")", "\n", "no_img", "=", "set", "(", "random", ".", "sample", "(", "set_tes", ",", "len_tes", "//", "3", ")", ")", "# len_tes\u91cc\u53d61/3\u65e0img", "\n", "set_tes", "-=", "no_img", "\n", "no_txt", "=", "set", "(", "random", ".", "sample", "(", "set_tes", ",", "len_tes", "//", "3", ")", ")", "# len_tes\u91cc\u53d61/3\u65e0txt", "\n", "fea_img_ct", "=", "fea_img", ".", "copy", "(", ")", "# \u4e0dcopy()\u4e00\u4e0b\u7684\u8bdd\uff0c\u6539\u53d8fea_img_ct\u540e\uff0cfea_img\u4e5f\u4f1a\u6539\u53d8\u3002", "\n", "fea_txt_ct", "=", "fea_txt", ".", "copy", "(", ")", "\n", "fea_img_ct", "[", "np", ".", "asarray", "(", "list", "(", "no_img", ")", ")", "]", "=", "0.0", "\n", "fea_txt_ct", "[", "np", ".", "asarray", "(", "list", "(", "no_txt", ")", ")", "]", "=", "0.0", "\n", "# print(list(no_img)[:3], list(no_txt)[:3])", "\n", "if", "1", "==", "flag", ":", "\n", "                ", "model", "=", "MvLstm1Unit", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", ",", "p", "[", "'lambda_ev'", "]", ",", "p", "[", "'lambda_ae'", "]", ",", "p", "[", "'train_fea_zero'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "2", ",", "# 1\u4e2aGRU\u5355\u5143\uff0cn_hidden = 2*n_in\u30022\u7279\u5f81\u62fc\u63a5\u3002", "\n", "n_img", "=", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "\n", "n_txt", "=", "p", "[", "'latent_size'", "]", "[", "2", "]", ",", "\n", "fea_img", "=", "fea_img", ",", "\n", "fea_txt", "=", "fea_txt", ",", "\n", "fea_img_ct", "=", "fea_img_ct", ",", "\n", "fea_txt_ct", "=", "fea_txt_ct", ")", "\n", "", "elif", "2", "==", "flag", ":", "\n", "                ", "model", "=", "MvLstm2Units", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", ",", "p", "[", "'lambda_ev'", "]", ",", "p", "[", "'lambda_ae'", "]", ",", "p", "[", "'train_fea_zero'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "1", ",", "# 2\u4e2aGRU\u5355\u5143\uff0cn_hidden = n_in\u30022\u7279\u5f81\u5206\u79bb\u3002", "\n", "n_img", "=", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "\n", "n_txt", "=", "p", "[", "'latent_size'", "]", "[", "2", "]", ",", "\n", "fea_img", "=", "fea_img", ",", "\n", "fea_txt", "=", "fea_txt", ",", "\n", "fea_img_ct", "=", "fea_img_ct", ",", "\n", "fea_txt_ct", "=", "fea_txt_ct", ")", "\n", "", "elif", "3", "==", "flag", ":", "\n", "                ", "model", "=", "MvLstmCon", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", ",", "p", "[", "'lambda_ev'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "3", ",", "# 1\u4e2aGRU\u5355\u5143\uff0cn_hidden = 3*n_in\u30023\u7279\u5f81\u62fc\u63a5\u3002", "\n", "n_img", "=", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "\n", "n_txt", "=", "p", "[", "'latent_size'", "]", "[", "2", "]", ",", "\n", "fea_img", "=", "fea_img", ",", "\n", "fea_txt", "=", "fea_txt", ",", "\n", "fea_img_ct", "=", "fea_img_ct", ",", "\n", "fea_txt_ct", "=", "fea_txt_ct", ")", "\n", "", "else", ":", "\n", "                ", "model", "=", "MvLstmFusion", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", ",", "p", "[", "'lambda_ev'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "2", ",", "# 1\u4e2aGRU\u5355\u5143\uff0cn_hidden = 2*n_in\u30022\u7279\u5f81\u62fc\u63a5\u3002", "\n", "n_img", "=", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "\n", "n_txt", "=", "p", "[", "'latent_size'", "]", "[", "2", "]", ",", "\n", "fea_img", "=", "fea_img", ",", "\n", "fea_txt", "=", "fea_txt", ",", "\n", "fea_img_ct", "=", "fea_img_ct", ",", "\n", "fea_txt_ct", "=", "fea_txt_ct", ")", "\n", "", "", "model_name", "=", "model", ".", "__class__", ".", "__name__", "\n", "print", "(", "'\\t the current Class name is: {val}'", ".", "format", "(", "val", "=", "model_name", ")", ")", "\n", "if", "(", "model_name", "in", "[", "'Lstm'", ",", "'MvLstmCon'", ",", "'MvLstmFusion'", "]", ")", "and", "(", "p", "[", "'train_fea_zero'", "]", "!=", "0", ")", ":", "\n", "            ", "print", "(", "'Error: if model is Lstm or MvLstmCon or MvLstmFusion, p[\\'train_fea_zero\\'] should be 0.0.'", ")", "\n", "raise", "\n", "", "return", "model", ",", "model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_mv.Params.compute_start_end": [[299, 323], ["numpy.minimum", "numpy.arange", "numpy.minimum", "numpy.arange", "starts_ends.append"], "methods", ["None"], ["", "def", "compute_start_end", "(", "self", ",", "flag", ")", ":", "\n", "        ", "\"\"\"\n        \u83b7\u53d6mini-batch\u7684\u5404\u4e2astart_end(np.array\u7c7b\u578b\uff0c\u4e00\u7ec4\u8fde\u7eed\u7684\u6570\u503c)\n        :param flag: 'train', 'test'\n        :return: \u5404\u4e2astart_end\u7ec4\u6210\u7684list\n        \"\"\"", "\n", "assert", "flag", "in", "[", "'train_mini_batch'", ",", "'test_top_k'", ",", "'test_auc'", "]", "\n", "if", "'train_mini_batch'", "==", "flag", ":", "\n", "            ", "size", "=", "self", ".", "p", "[", "'batch_size_train'", "]", "\n", "", "elif", "'test_top_k'", "==", "flag", ":", "\n", "            ", "size", "=", "self", ".", "p", "[", "'batch_size_test'", "]", "# test: top-k", "\n", "", "else", ":", "\n", "            ", "size", "=", "self", ".", "p", "[", "'batch_size_test'", "]", "*", "10", "# test: auc\u3002\u8fd0\u7b97\u76f8\u5bf9\u7b80\u5355\uff0cbatch_size\u53ef\u4ee5\u5927\u4e00\u4e9b\u3002", "\n", "", "user_num", "=", "self", ".", "user_num", "\n", "rest", "=", "(", "user_num", "%", "size", ")", ">", "0", "# \u80fd\u6574\u9664\uff1arest=0\u3002\u4e0d\u80fd\u6574\u9664\uff1arest=1\uff0c\u5219\u591a\u51fa\u6765\u4e00\u4e2a\u5c0f\u7684batch", "\n", "n_batches", "=", "np", ".", "minimum", "(", "user_num", "//", "size", "+", "rest", ",", "user_num", ")", "\n", "batch_idxs", "=", "np", ".", "arange", "(", "n_batches", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "starts_ends", "=", "[", "]", "\n", "for", "bidx", "in", "batch_idxs", ":", "\n", "            ", "start", "=", "bidx", "*", "size", "\n", "end", "=", "np", ".", "minimum", "(", "start", "+", "size", ",", "user_num", ")", "# \u9650\u5236\u6807\u53f7\u7d22\u5f15\u4e0d\u80fd\u8d85\u8fc7user_num", "\n", "start_end", "=", "np", ".", "arange", "(", "start", ",", "end", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "starts_ends", ".", "append", "(", "start_end", ")", "\n", "", "return", "batch_idxs", ",", "starts_ends", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_mv.exe_time": [[42, 55], ["datetime.datetime.now", "print", "func", "datetime.datetime.now", "print", "print", "print"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "name", "=", "func", ".", "__name__", "\n", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "end", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ")", ")", "\n", "print", "(", "\"-- {%s} end:   @ %ss\"", "%", "(", "name", ",", "end", ")", ")", "\n", "total", "=", "(", "end", "-", "start", ")", ".", "total_seconds", "(", ")", "\n", "print", "(", "\"-- {%s} total: @ %.2fs = %.2fh\"", "%", "(", "name", ",", "total", ",", "total", "/", "3600.0", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_mv.train_valid_or_test": [[325, 445], ["prog_lstm_mv.Params", "public.Global_Best.GlobalBest", "public.Global_Best.GlobalBest", "prog_lstm_mv.Params.compute_start_end", "prog_lstm_mv.Params.compute_start_end", "prog_lstm_mv.Params.compute_start_end", "numpy.arange", "p.items", "print", "prog_lstm_mv.Params.build_model_one_by_one", "prog_lstm_mv.Params.build_model_mini_batch", "print", "print", "time.time", "random.seed", "model.l2.eval", "print", "losses.append", "time.time", "times0.append", "print", "model.update_trained_items", "model.update_trained_users", "time.time", "times1.append", "public.Valuate.fun_predict_auc_recall_map_ndcg", "public.Global_Best.GlobalBest.fun_print_best", "time.time", "times2.append", "print", "print", "public.Load_Data_by_time.fun_random_neg_masks_tra", "public.Load_Data_by_time.fun_random_neg_masks_tes", "model.update_neg_masks", "str", "numpy.arange", "random.shuffle", "random.shuffle", "model.predict", "all_hus.extend", "model.update_trained_items2_corrupted_test_data", "public.Valuate.fun_predict_auc_recall_map_ndcg", "public.Global_Best.GlobalBest.fun_print_best", "time.time", "times3.append", "print", "print", "print", "os.path.join", "public.Valuate.fun_save_best_and_losses", "model.train", "random.shuffle", "model.train", "numpy.average", "numpy.average", "numpy.average", "public.Valuate.fun_save_best_and_losses", "public.Valuate.fun_save_final_item_feas", "str", "numpy.average", "numpy.average", "numpy.average", "os.path.split", "PATH.split"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.compute_start_end", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.compute_start_end", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.compute_start_end", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_bpr_v.Params.build_model_one_by_one", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.build_model_mini_batch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.update_trained_items", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboVBpr.update_trained_users", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_predict_auc_recall_map_ndcg", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_print_best", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tra", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tes", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.update_neg_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM.LstmBasic.predict", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.update_trained_items2_corrupted_test_data", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_predict_auc_recall_map_ndcg", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_print_best", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_save_best_and_losses", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.train", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.train", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_save_best_and_losses", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_save_final_item_feas"], ["", "", "def", "train_valid_or_test", "(", ")", ":", "\n", "    ", "\"\"\"\n    \u4e3b\u7a0b\u5e8f\n    :return:\n    \"\"\"", "\n", "global", "PATH", "\n", "# \u5efa\u7acb\u53c2\u6570\u3001\u6570\u636e\u3001\u6a21\u578b\u3001\u6a21\u578b\u6700\u4f73\u503c", "\n", "pas", "=", "Params", "(", ")", "\n", "p", "=", "pas", ".", "p", "\n", "if", "0", "==", "p", "[", "'mini_batch'", "]", ":", "\n", "        ", "model", ",", "model_name", "=", "pas", ".", "build_model_one_by_one", "(", "flag", "=", "p", "[", "'mvlstm'", "]", ")", "\n", "", "else", ":", "\n", "        ", "model", ",", "model_name", "=", "pas", ".", "build_model_mini_batch", "(", "flag", "=", "p", "[", "'mvlstm'", "]", ")", "\n", "", "best_denoise", "=", "GlobalBest", "(", "at_nums", "=", "p", "[", "'at_nums'", "]", ",", "intervals", "=", "p", "[", "'intervals'", "]", ")", "# \u5b58\u653e\u6700\u4f18\u6570\u636e", "\n", "best_missing", "=", "GlobalBest", "(", "at_nums", "=", "p", "[", "'at_nums'", "]", ",", "intervals", "=", "p", "[", "'intervals'", "]", ")", "\n", "batch_idxs_tra", ",", "starts_ends_tra", "=", "pas", ".", "compute_start_end", "(", "flag", "=", "'train_mini_batch'", ")", "\n", "_", ",", "starts_ends_tes", "=", "pas", ".", "compute_start_end", "(", "flag", "=", "'test_top_k'", ")", "# tes\u65f6\u987a\u5e8f\u5904\u7406\u5373\u53ef\u3002", "\n", "_", ",", "starts_ends_auc", "=", "pas", ".", "compute_start_end", "(", "flag", "=", "'test_auc'", ")", "\n", "\n", "# \u76f4\u63a5\u53d6\u51fa\u6765\u90e8\u5206\u53d8\u91cf\uff0c\u540e\u8fb9\u5c31\u4e0d\u7528\u52a0'pas.'\u4e86\u3002", "\n", "user_num", ",", "item_num", "=", "pas", ".", "user_num", ",", "pas", ".", "item_num", "\n", "aliases_dict", "=", "pas", ".", "aliases_dict", "\n", "tra_buys_masks", "=", "pas", ".", "tra_buys_masks", "\n", "tes_buys_masks", "=", "pas", ".", "tes_buys_masks", "\n", "tes_masks", "=", "pas", ".", "tes_masks", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", "=", "pas", ".", "tic", ",", "pas", ".", "tiic", ",", "pas", ".", "tica", "\n", "del", "pas", "\n", "\n", "# \u4e3b\u5faa\u73af", "\n", "losses", "=", "[", "]", "\n", "times0", ",", "times1", ",", "times2", ",", "times3", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "epoch", "in", "np", ".", "arange", "(", "p", "[", "'epochs'", "]", ")", ":", "\n", "        ", "print", "(", "\"Epoch {val} ==================================\"", ".", "format", "(", "val", "=", "epoch", ")", ")", "\n", "# \u6bcf\u6b21epoch\uff0c\u90fd\u8981\u91cd\u65b0\u9009\u62e9\u8d1f\u6837\u672c\u3002\u90fd\u8981\u628a\u6570\u636e\u6253\u4e71\u91cd\u6392\uff0c\u8fd9\u6837\u4f1a\u4ee5\u968f\u673a\u65b9\u5f0f\u9009\u62e9\u6837\u672c\u8ba1\u7b97\u68af\u5ea6\uff0c\u53ef\u5f97\u5230\u7cbe\u786e\u7ed3\u679c", "\n", "if", "epoch", ">", "0", ":", "# epoch=0\u7684\u8d1f\u6837\u672c\u5df2\u5728\u5faa\u73af\u524d\u751f\u6210\uff0c\u4e14\u5df2\u7528\u4e8e\u7c7b\u7684\u521d\u59cb\u5316", "\n", "            ", "tra_buys_neg_masks", "=", "fun_random_neg_masks_tra", "(", "item_num", ",", "tra_buys_masks", ")", "\n", "tes_buys_neg_masks", "=", "fun_random_neg_masks_tes", "(", "item_num", ",", "tra_buys_masks", ",", "tes_buys_masks", ")", "\n", "model", ".", "update_neg_masks", "(", "tra_buys_neg_masks", ",", "tes_buys_neg_masks", ")", "\n", "\n", "# --------------------------------------------------------------------------------------------------------------", "\n", "", "print", "(", "\"\\tTraining ...\"", ")", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "loss", "=", "0.", "\n", "random", ".", "seed", "(", "str", "(", "123", "+", "epoch", ")", ")", "\n", "if", "0", "==", "p", "[", "'mini_batch'", "]", ":", "\n", "            ", "user_idxs_tra", "=", "np", ".", "arange", "(", "user_num", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "random", ".", "shuffle", "(", "user_idxs_tra", ")", "# \u6bcf\u4e2aepoch\u90fd\u6253\u4e71user_id\u8f93\u5165\u987a\u5e8f", "\n", "for", "uidx", "in", "user_idxs_tra", ":", "\n", "                ", "loss", "+=", "model", ".", "train", "(", "uidx", ")", "\n", "", "", "else", ":", "\n", "            ", "random", ".", "shuffle", "(", "batch_idxs_tra", ")", "# \u6bcf\u4e2aepoch\u90fd\u6253\u4e71batch_idx\u8f93\u5165\u987a\u5e8f", "\n", "for", "bidx", "in", "batch_idxs_tra", ":", "\n", "                ", "start_end", "=", "starts_ends_tra", "[", "bidx", "]", "\n", "random", ".", "shuffle", "(", "start_end", ")", "# \u6253\u4e71batch\u5185\u7684indexes", "\n", "loss", "+=", "model", ".", "train", "(", "start_end", ")", "\n", "", "", "rnn_l2_sqr", "=", "model", ".", "l2", ".", "eval", "(", ")", "# model.l2\u662f'TensorVariable'\uff0c\u65e0\u6cd5\u76f4\u63a5\u663e\u793a\u5176\u503c", "\n", "print", "(", "'\\t\\tsum_loss = {val} = {v1} + {v2}'", ".", "format", "(", "val", "=", "loss", "+", "rnn_l2_sqr", ",", "v1", "=", "loss", ",", "v2", "=", "rnn_l2_sqr", ")", ")", "\n", "losses", ".", "append", "(", "'%0.2f'", "%", "(", "loss", "+", "rnn_l2_sqr", ")", ")", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "times0", ".", "append", "(", "t1", "-", "t0", ")", "\n", "\n", "# if 'taobao' in PATH and '5000hang' not in PATH and epoch in np.arange(2, 25):", "\n", "#     pass        # \u5728t5\u7684\u8fd9\u51e0\u4e2aepoch\u4e0d\u505a\u63a8\u8350(2, 3, ... 23, 24)\u3002", "\n", "# else:", "\n", "# --------------------------------------------------------------------------------------------------------------", "\n", "print", "(", "\"\\tPredicting ...\"", ")", "\n", "# \u8ba1\u7b97\uff1a\u6240\u6709\u7528\u6237\u3001\u5546\u54c1\u7684\u8868\u8fbe", "\n", "model", ".", "update_trained_items", "(", ")", "# \u8981\u5148\u8fd0\u884c\u8fd9\u4e2a\u66f4\u65b0items\u7279\u5f81\u3002\u5bf9\u4e8eMV-GRU\uff0c\u8fd9\u91cc\u4f1a\u5148\u7b97\u51fa\u6765\u56fe\u6587\u878d\u5408\u7279\u5f81\u3002", "\n", "all_hus", "=", "[", "]", "\n", "for", "start_end", "in", "starts_ends_tes", ":", "\n", "            ", "sub_all_hus", "=", "model", ".", "predict", "(", "start_end", ")", "\n", "all_hus", ".", "extend", "(", "sub_all_hus", ")", "\n", "", "model", ".", "update_trained_users", "(", "all_hus", ")", "# shape=(n_user, n_hidden)", "\n", "t2", "=", "time", ".", "time", "(", ")", "\n", "times1", ".", "append", "(", "t2", "-", "t1", ")", "\n", "\n", "# denoise\u6a21\u5f0f\uff1atest\u7528\u5b8c\u6574\u6570\u636e\u3002", "\n", "fun_predict_auc_recall_map_ndcg", "(", "\n", "p", ",", "model", ",", "best_denoise", ",", "epoch", ",", "starts_ends_auc", ",", "starts_ends_tes", ",", "\n", "tes_buys_masks", ",", "tes_masks", ",", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", "\n", "best_denoise", ".", "fun_print_best", "(", "epoch", ")", "# \u6bcf\u6b21\u90fd\u53ea\u8f93\u51fa\u5f53\u524d\u6700\u4f18\u7684\u7ed3\u679c\uff0c\u5e76\u8f93\u51fa\u6b64\u65f6\u7684\u65f6\u95f4\u3002", "\n", "t3", "=", "time", ".", "time", "(", ")", "\n", "times2", ".", "append", "(", "t3", "-", "t2", ")", "\n", "tmp1", "=", "'| lam: %s'", "%", "', '", ".", "join", "(", "[", "str", "(", "lam", ")", "for", "lam", "in", "[", "p", "[", "'lambda'", "]", ",", "p", "[", "'lambda_ev'", "]", ",", "p", "[", "'lambda_ae'", "]", "]", "]", ")", "\n", "tmp2", "=", "'| model: {v1}'", ".", "format", "(", "v1", "=", "model_name", ")", "\n", "tmp3", "=", "'| tra_fea_zero: %0.1f'", "%", "p", "[", "'train_fea_zero'", "]", "\n", "print", "(", "'\\tdenoise: avg. time (train, user, test): %0.0fs,'", "%", "np", ".", "average", "(", "times0", ")", ",", "\n", "'%0.0fs,'", "%", "np", ".", "average", "(", "times1", ")", ",", "'%0.0fs'", "%", "np", ".", "average", "(", "times2", ")", ",", "tmp1", ",", "tmp2", ",", "tmp3", ")", "\n", "\n", "if", "'MvLstm'", "in", "model_name", ":", "\n", "# missing\u6a21\u5f0f\uff1atest\u7528\u7f3a\u5931\u6570\u636e\u3002", "\n", "            ", "model", ".", "update_trained_items2_corrupted_test_data", "(", ")", "# \u6ce8\u610f\uff1amissing\u4e0b\u7684test data\u662f\u6709\u7834\u635f\u7684\u3002", "\n", "fun_predict_auc_recall_map_ndcg", "(", "\n", "p", ",", "model", ",", "best_missing", ",", "epoch", ",", "starts_ends_auc", ",", "starts_ends_tes", ",", "\n", "tes_buys_masks", ",", "tes_masks", ",", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", "\n", "best_missing", ".", "fun_print_best", "(", "epoch", ")", "# \u6bcf\u6b21\u90fd\u53ea\u8f93\u51fa\u5f53\u524d\u6700\u4f18\u7684\u7ed3\u679c", "\n", "t4", "=", "time", ".", "time", "(", ")", "\n", "times3", ".", "append", "(", "t4", "-", "t3", ")", "\n", "print", "(", "'\\tmissing: avg. time (train, user, test): %0.0fs,'", "%", "np", ".", "average", "(", "times0", ")", ",", "\n", "'%0.0fs,'", "%", "np", ".", "average", "(", "times1", ")", ",", "'%0.0fs'", "%", "np", ".", "average", "(", "times3", ")", ",", "tmp1", ",", "tmp2", ",", "tmp3", ")", "\n", "\n", "# ----------------------------------------------------------------------------------------------------------", "\n", "", "if", "epoch", "==", "p", "[", "'epochs'", "]", "-", "1", ":", "\n", "# \u4fdd\u5b58\u6700\u4f18\u503c\u3001\u6240\u6709\u7684\u635f\u5931\u503c\u3002", "\n", "            ", "print", "(", "\"\\t-----------------------------------------------------------------\"", ")", "\n", "print", "(", "\"\\tBest and losses saving ...\"", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "split", "(", "__file__", ")", "[", "0", "]", ",", "'..'", ",", "'Results_best_and_losses'", ",", "PATH", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", ")", "\n", "fun_save_best_and_losses", "(", "path", ",", "model_name", "+", "' - denoise'", ",", "epoch", ",", "p", ",", "best_denoise", ",", "losses", ")", "\n", "if", "'MvLstm'", "in", "model_name", ":", "\n", "                ", "fun_save_best_and_losses", "(", "path", ",", "model_name", "+", "' - missing'", ",", "epoch", ",", "p", ",", "best_denoise", ",", "losses", ")", "\n", "\n", "# \u4fdd\u5b58\u8bad\u7ec3\u540e\u7684item\u7279\u5f81\u3002", "\n", "", "if", "'MvLstm1Unit'", "==", "model_name", ":", "\n", "                ", "fun_save_final_item_feas", "(", "path", ",", "model_name", ",", "model", ",", "aliases_dict", ")", "\n", "\n", "", "", "", "for", "i", "in", "p", ".", "items", "(", ")", ":", "\n", "        ", "print", "(", "i", ")", "\n", "", "print", "(", "'\\t the current Class name is: {val}'", ".", "format", "(", "val", "=", "model_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_mv.main": [[447, 451], ["prog_lstm_mv.train_valid_or_test"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.train_valid_or_test"], ["", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "# pas = Params()", "\n", "    ", "train_valid_or_test", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_bpr_v.Params.__init__": [[51, 115], ["public.Load_Data_by_time.load_data", "public.Load_Data_by_time.fun_data_buys_masks", "public.Load_Data_by_time.fun_data_buys_masks", "public.Load_Data_by_time.fun_random_neg_masks_tra", "public.Load_Data_by_time.fun_random_neg_masks_tes", "collections.OrderedDict", "collections.OrderedDict.items", "os.path.join", "print"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_data", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_data_buys_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_data_buys_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tra", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tes"], ["    ", "def", "__init__", "(", "self", ",", "p", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        \u6784\u5efa\u6a21\u578b\u53c2\u6570\uff0c\u52a0\u8f7d\u6570\u636e\n            \u628a\u524d80%\u5206\u4e3a6:2\u7528\u4f5ctrain\u548cvalid\uff0c\u6765\u9009\u62e9\u8d85\u53c2\u6570, \u4e0d\u7528\u53bb\u7ba1\u5269\u4e0b\u768420%.\n            \u628a\u524d80%\u4f5c\u4e3atrain\uff0c\u5269\u4e0b\u7684\u662ftest\uff0c\u628avalid\u65f6\u5b66\u5230\u7684\u53c2\u6570\u62ff\u8fc7\u6765\u8dd1\u7a0b\u5e8f.\n            valid\u548ctest\u90e8\u5206\uff0c\u7a0b\u5e8f\u662f\u4e00\u6837\u7684\uff0c\u533a\u522b\u5728\u4e8e\u9001\u5165\u7684\u6570\u636e\u800c\u5df2\u3002\n        :param p: \u4e00\u4e2a\u6807\u793a\u7b26\uff0c\u6ca1\u5565\u7528\n        :return:\n        \"\"\"", "\n", "global", "PATH", "\n", "# 1. \u5efa\u7acb\u5404\u53c2\u6570\u3002\u8981\u8c03\u6574\u7684\u5730\u65b9\u90fd\u5728 p \u8fd9\u4e86\uff0c\u5176\u5b83\u51fd\u6570\u90fd\u7ed9\u5199\u6b7b\u3002", "\n", "if", "not", "p", ":", "\n", "            ", "t", "=", "'t'", "# \u51991\u5c31\u662fvalid, \u51990\u5c31\u662ftest", "\n", "assert", "'t'", "==", "t", "or", "'v'", "==", "t", "# no other case", "\n", "p", "=", "OrderedDict", "(", "\n", "[", "\n", "(", "'dataset'", ",", "'user_buys.txt'", ")", ",", "\n", "(", "'fea_image'", ",", "'normalized_features_image/'", ")", ",", "\n", "(", "'fea_text'", ",", "'normalized_features_text/'", ")", ",", "\n", "(", "'mode'", ",", "'test'", "if", "'t'", "==", "t", "else", "'valid'", ")", ",", "\n", "(", "'split'", ",", "[", "0.8", ",", "1.0", "]", "if", "'t'", "==", "t", "else", "[", "0.6", ",", "0.8", "]", ")", ",", "# valid: 6/2/2\u3002test: 8/2.", "\n", "(", "'at_nums'", ",", "[", "10", ",", "20", ",", "30", ",", "50", "]", ")", ",", "\n", "(", "'intervals'", ",", "[", "2", ",", "10", ",", "30", "]", ")", ",", "# \u4ee5\u6b21\u65702\u4e3a\u95f4\u9694\uff0c\u5206\u4e3a10\u4e2a\u533a\u95f4. \u8ba1\u7b97auc/recall@30\u4e0a\u7684. \u6362\u4e3a10", "\n", "(", "'epochs'", ",", "30", "if", "'taobao'", "in", "PATH", "else", "50", ")", ",", "\n", "(", "'alpha'", ",", "0.1", ")", ",", "\n", "\n", "(", "'latent_size'", ",", "[", "20", ",", "1024", ",", "100", "]", ")", ",", "\n", "(", "'lambda'", ",", "0.1", ")", ",", "\n", "(", "'lambda_ev'", ",", "0.0", ")", ",", "# \u56fe\u6587\u964d\u7ef4\u5c40\u77e9\u9635\u7684\u3002\u5c31\u662f\u8fd9\u4e2a0.0", "\n", "(", "'lambda_ae'", ",", "-", "1", ")", ",", "# \u91cd\u6784\u8bef\u5dee\u7684\u3002None", "\n", "\n", "(", "'train_fea_zero'", ",", "-", "1", ")", ",", "# 0.2 / 0.4\u3002None", "\n", "(", "'mini_batch'", ",", "0", ")", ",", "# 0:one_by_one, mini-batch\u53cd\u800c\u6548\u7387\u4e0d\u9ad8\u3002", "\n", "(", "'mvgru'", ",", "0", ")", ",", "# 0:bpr, # 1:vbpr", "\n", "\n", "(", "'batch_size_train'", ",", "1", ")", ",", "# size\u5927\u4e86\u4e4b\u540e\u6027\u80fd\u4e0b\u964d\u975e\u5e38\u4e25\u91cd", "\n", "(", "'batch_size_test'", ",", "768", ")", ",", "# user*item\u77e9\u9635\u592a\u5927\uff0c\u8981\u591a\u6b21\u8ba1\u7b97\u3002a5\u4e0b\u4eb2\u6d4b768\u6700\u5feb\u3002", "\n", "]", ")", "\n", "for", "i", "in", "p", ".", "items", "(", ")", ":", "\n", "                ", "print", "(", "i", ")", "\n", "", "assert", "'valid'", "==", "p", "[", "'mode'", "]", "or", "'test'", "==", "p", "[", "'mode'", "]", "\n", "\n", "# 2. \u52a0\u8f7d\u6570\u636e", "\n", "# \u56e0\u4e3atrain/set\u91cc\u6bcf\u9879\u7684\u957f\u5ea6\u4e0d\u7b49\uff0c\u65e0\u6cd5\u8f6c\u6362\u4e3a\u5b8c\u5168\u7684(n, m)\u77e9\u9635\u6837\u5f0f\uff0c\u6240\u4ee5shared\u4f1a\u62a5\u9519.", "\n", "", "[", "(", "user_num", ",", "item_num", ")", ",", "aliases_dict", ",", "\n", "(", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", ",", "\n", "(", "tra_buys", ",", "tes_buys", ")", ",", "(", "set_tra", ",", "set_tes", ")", "]", "=", "load_data", "(", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'dataset'", "]", ")", ",", "p", "[", "'mode'", "]", ",", "p", "[", "'split'", "]", ",", "p", "[", "'intervals'", "]", ")", "\n", "# \u6b63\u6837\u672c\u52a0masks", "\n", "tra_buys_masks", ",", "tra_masks", "=", "fun_data_buys_masks", "(", "tra_buys", ",", "tail", "=", "[", "item_num", "]", ")", "# \u9884\u6d4b\u65f6\u7b97\u7528\u6237\u8868\u8fbe\u7528", "\n", "tes_buys_masks", ",", "tes_masks", "=", "fun_data_buys_masks", "(", "tes_buys", ",", "tail", "=", "[", "item_num", "]", ")", "# \u9884\u6d4b\u65f6\u7528", "\n", "# \u8d1f\u6837\u672c\u52a0masks", "\n", "tra_buys_neg_masks", "=", "fun_random_neg_masks_tra", "(", "item_num", ",", "tra_buys_masks", ")", "# \u8bad\u7ec3\u65f6\u7528\uff08\u9010\u6761\u3001mini-batch\u5747\u53ef\uff09", "\n", "tes_buys_neg_masks", "=", "fun_random_neg_masks_tes", "(", "item_num", ",", "tra_buys_masks", ",", "tes_buys_masks", ")", "# \u9884\u6d4b\u65f6\u7528", "\n", "\n", "# 3. \u521b\u5efa\u7c7b\u53d8\u91cf", "\n", "self", ".", "p", "=", "p", "\n", "self", ".", "user_num", ",", "self", ".", "item_num", "=", "user_num", ",", "item_num", "\n", "self", ".", "aliases_dict", "=", "aliases_dict", "\n", "self", ".", "tic", ",", "self", ".", "tiic", ",", "self", ".", "tica", "=", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", "\n", "self", ".", "tra_buys", ",", "self", ".", "tes_buys", "=", "tra_buys", ",", "tes_buys", "\n", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "=", "tra_buys_masks", ",", "tra_masks", ",", "tra_buys_neg_masks", "\n", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "=", "tes_buys_masks", ",", "tes_masks", ",", "tes_buys_neg_masks", "\n", "self", ".", "set_tra", ",", "self", ".", "set_tes", "=", "set_tra", ",", "set_tes", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_bpr_v.Params.build_model_one_by_one": [[116, 152], ["print", "print", "public.BPR.OboBpr", "public.Load_Data_by_time.load_img_txt", "public.BPR.OboVBpr", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_img_txt"], ["", "def", "build_model_one_by_one", "(", "self", ",", "flag", ")", ":", "\n", "        ", "\"\"\"\n        \u5efa\u7acb\u6a21\u578b\u5bf9\u8c61\n        :param flag: \u53c2\u6570\u53d8\u91cf\u3001\u6570\u636e\n        :return:\n        \"\"\"", "\n", "print", "(", "'building the model ...'", ")", "\n", "assert", "flag", "in", "[", "0", ",", "1", "]", "\n", "p", "=", "self", ".", "p", "\n", "size", "=", "p", "[", "'latent_size'", "]", "[", "0", "]", "\n", "if", "0", "==", "flag", ":", "# Gru", "\n", "            ", "model", "=", "OboBpr", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "# \u53ea\u662ftest\u8ba1\u7b97\u7528\u6237\u8868\u8fbe\u65f6\u7528\u3002", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "1", ")", "\n", "", "else", ":", "\n", "# \u52a0\u8f7d\u56fe\u6587\u6570\u636e", "\n", "            ", "fea_img", "=", "load_img_txt", "(", "'Image'", ",", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'fea_image'", "]", ")", ",", "\n", "self", ".", "item_num", ",", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "self", ".", "aliases_dict", ")", "\n", "model", "=", "OboVBpr", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", ",", "p", "[", "'lambda_ev'", "]", ",", "p", "[", "'train_fea_zero'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "2", ",", "# \u4e00\u4e2aGRU unit\uff0c\u9690\u5c42\u662fn_in\u7684\u4e24\u500d\u3002", "\n", "n_img", "=", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "\n", "fea_img", "=", "fea_img", ")", "\n", "", "model_name", "=", "model", ".", "__class__", ".", "__name__", "\n", "print", "(", "'\\t the current Class name is: {val}'", ".", "format", "(", "val", "=", "model_name", ")", ")", "\n", "return", "model", ",", "model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_bpr_v.Params.compute_start_end": [[153, 177], ["numpy.minimum", "numpy.arange", "numpy.minimum", "numpy.arange", "starts_ends.append"], "methods", ["None"], ["", "def", "compute_start_end", "(", "self", ",", "flag", ")", ":", "\n", "        ", "\"\"\"\n        \u83b7\u53d6mini-batch\u7684\u5404\u4e2astart_end(np.array\u7c7b\u578b\uff0c\u4e00\u7ec4\u8fde\u7eed\u7684\u6570\u503c)\n        :param flag: 'train', 'test'\n        :return: \u5404\u4e2astart_end\u7ec4\u6210\u7684list\n        \"\"\"", "\n", "assert", "flag", "in", "[", "'train_mini_batch'", ",", "'test_top_k'", ",", "'test_auc'", "]", "\n", "if", "'train_mini_batch'", "==", "flag", ":", "\n", "            ", "size", "=", "self", ".", "p", "[", "'batch_size_train'", "]", "\n", "", "elif", "'test_top_k'", "==", "flag", ":", "\n", "            ", "size", "=", "self", ".", "p", "[", "'batch_size_test'", "]", "# test: top-k", "\n", "", "else", ":", "\n", "            ", "size", "=", "self", ".", "p", "[", "'batch_size_test'", "]", "*", "10", "# test: auc\u3002\u8fd0\u7b97\u76f8\u5bf9\u7b80\u5355\uff0cbatch_size\u53ef\u4ee5\u5927\u4e00\u4e9b\u3002", "\n", "", "user_num", "=", "self", ".", "user_num", "\n", "rest", "=", "(", "user_num", "%", "size", ")", ">", "0", "# \u80fd\u6574\u9664\uff1arest=0\u3002\u4e0d\u80fd\u6574\u9664\uff1arest=1\uff0c\u5219\u591a\u51fa\u6765\u4e00\u4e2a\u5c0f\u7684batch", "\n", "n_batches", "=", "np", ".", "minimum", "(", "user_num", "//", "size", "+", "rest", ",", "user_num", ")", "\n", "batch_idxs", "=", "np", ".", "arange", "(", "n_batches", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "starts_ends", "=", "[", "]", "\n", "for", "bidx", "in", "batch_idxs", ":", "\n", "            ", "start", "=", "bidx", "*", "size", "\n", "end", "=", "np", ".", "minimum", "(", "start", "+", "size", ",", "user_num", ")", "# \u9650\u5236\u6807\u53f7\u7d22\u5f15\u4e0d\u80fd\u8d85\u8fc7user_num", "\n", "start_end", "=", "np", ".", "arange", "(", "start", ",", "end", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "starts_ends", ".", "append", "(", "start_end", ")", "\n", "", "return", "batch_idxs", ",", "starts_ends", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_bpr_v.exe_time": [[35, 48], ["datetime.datetime.now", "print", "func", "datetime.datetime.now", "print", "print", "print", "datetime.datetime.now.strftime", "datetime.datetime.now.strftime", "datetime.datetime.now.strftime"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "name", "=", "func", ".", "__name__", "\n", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ".", "strftime", "(", "\"%Y.%m.%d %H:%M:%S\"", ")", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "end", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ".", "strftime", "(", "\"%Y.%m.%d %H:%M:%S\"", ")", ")", ")", "\n", "print", "(", "\"-- {%s} end:   @ %ss\"", "%", "(", "name", ",", "end", ".", "strftime", "(", "\"%Y.%m.%d %H:%M:%S\"", ")", ")", ")", "\n", "total", "=", "(", "end", "-", "start", ")", ".", "total_seconds", "(", ")", "\n", "print", "(", "\"-- {%s} total: @ %.2fs = %.2fh\"", "%", "(", "name", ",", "total", ",", "total", "/", "3600.0", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_bpr_v.train_valid_or_test": [[179, 263], ["prog_bpr_v.Params", "prog_bpr_v.Params.build_model_one_by_one", "public.Global_Best.GlobalBest", "prog_bpr_v.Params.compute_start_end", "prog_bpr_v.Params.compute_start_end", "numpy.asarray", "numpy.arange", "p.items", "print", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "print", "print", "time.time", "random.seed", "numpy.arange", "random.shuffle", "model.l2.eval", "print", "losses.append", "time.time", "times0.append", "print", "model.update_trained_items", "model.update_trained_users", "time.time", "times1.append", "public.Valuate.fun_predict_auc_recall_map_ndcg", "public.Global_Best.GlobalBest.fun_print_best", "time.time", "times2.append", "print", "print", "public.Load_Data_by_time.fun_random_neg_masks_tra", "public.Load_Data_by_time.fun_random_neg_masks_tes", "model.update_neg_masks", "str", "numpy.arange", "print", "print", "os.path.join", "public.Valuate.fun_save_best_and_losses", "sum", "model.train", "numpy.average", "numpy.average", "numpy.average", "str", "os.path.split", "PATH.split"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_bpr_v.Params.build_model_one_by_one", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.compute_start_end", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.compute_start_end", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.update_trained_items", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboVBpr.update_trained_users", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_predict_auc_recall_map_ndcg", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_print_best", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tra", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tes", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.update_neg_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_save_best_and_losses", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.train"], ["", "", "def", "train_valid_or_test", "(", ")", ":", "\n", "    ", "\"\"\"\n    \u4e3b\u7a0b\u5e8f\n    :return:\n    \"\"\"", "\n", "# \u5efa\u7acb\u53c2\u6570\u3001\u6570\u636e\u3001\u6a21\u578b\u3001\u6a21\u578b\u6700\u4f73\u503c", "\n", "pas", "=", "Params", "(", ")", "\n", "p", "=", "pas", ".", "p", "\n", "model", ",", "model_name", "=", "pas", ".", "build_model_one_by_one", "(", "flag", "=", "p", "[", "'mvgru'", "]", ")", "\n", "best", "=", "GlobalBest", "(", "at_nums", "=", "p", "[", "'at_nums'", "]", ",", "intervals", "=", "p", "[", "'intervals'", "]", ")", "# \u5b58\u653e\u6700\u4f18\u6570\u636e", "\n", "_", ",", "starts_ends_tes", "=", "pas", ".", "compute_start_end", "(", "flag", "=", "'test_top_k'", ")", "# tes\u65f6\u987a\u5e8f\u5904\u7406\u5373\u53ef\u3002", "\n", "_", ",", "starts_ends_auc", "=", "pas", ".", "compute_start_end", "(", "flag", "=", "'test_auc'", ")", "\n", "\n", "# \u76f4\u63a5\u53d6\u51fa\u6765\u90e8\u5206\u53d8\u91cf\uff0c\u540e\u8fb9\u5c31\u4e0d\u7528\u52a0'pas.'\u4e86\u3002", "\n", "user_num", ",", "item_num", "=", "pas", ".", "user_num", ",", "pas", ".", "item_num", "\n", "tra_buys_masks", ",", "tra_masks", "=", "np", ".", "asarray", "(", "pas", ".", "tra_buys_masks", ")", ",", "np", ".", "asarray", "(", "pas", ".", "tra_masks", ")", "\n", "tes_buys_masks", ",", "tes_masks", "=", "np", ".", "asarray", "(", "pas", ".", "tes_buys_masks", ")", ",", "np", ".", "asarray", "(", "pas", ".", "tes_masks", ")", "\n", "tra_buys_neg_masks", "=", "np", ".", "asarray", "(", "pas", ".", "tra_buys_neg_masks", ")", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", "=", "pas", ".", "tic", ",", "pas", ".", "tiic", ",", "pas", ".", "tica", "\n", "del", "pas", "\n", "\n", "# \u4e3b\u5faa\u73af", "\n", "losses", "=", "[", "]", "\n", "times0", ",", "times1", ",", "times2", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "epoch", "in", "np", ".", "arange", "(", "p", "[", "'epochs'", "]", ")", ":", "\n", "        ", "print", "(", "\"Epoch {val} ==================================\"", ".", "format", "(", "val", "=", "epoch", ")", ")", "\n", "# \u6bcf\u6b21epoch\uff0c\u90fd\u8981\u91cd\u65b0\u9009\u62e9\u8d1f\u6837\u672c\u3002\u90fd\u8981\u628a\u6570\u636e\u6253\u4e71\u91cd\u6392\uff0c\u8fd9\u6837\u4f1a\u4ee5\u968f\u673a\u65b9\u5f0f\u9009\u62e9\u6837\u672c\u8ba1\u7b97\u68af\u5ea6\uff0c\u53ef\u5f97\u5230\u7cbe\u786e\u7ed3\u679c", "\n", "if", "epoch", ">", "0", ":", "# epoch=0\u7684\u8d1f\u6837\u672c\u5df2\u5728\u5faa\u73af\u524d\u751f\u6210\uff0c\u4e14\u5df2\u7528\u4e8e\u7c7b\u7684\u521d\u59cb\u5316", "\n", "            ", "tra_buys_neg_masks", "=", "fun_random_neg_masks_tra", "(", "item_num", ",", "tra_buys_masks", ")", "\n", "tes_buys_neg_masks", "=", "fun_random_neg_masks_tes", "(", "item_num", ",", "tra_buys_masks", ",", "tes_buys_masks", ")", "\n", "model", ".", "update_neg_masks", "(", "tra_buys_neg_masks", ",", "tes_buys_neg_masks", ")", "\n", "\n", "# --------------------------------------------------------------------------------------------------------------", "\n", "", "print", "(", "\"\\tTraining ...\"", ")", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "loss", "=", "0.", "\n", "random", ".", "seed", "(", "str", "(", "123", "+", "epoch", ")", ")", "\n", "user_idxs_tra", "=", "np", ".", "arange", "(", "user_num", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "random", ".", "shuffle", "(", "user_idxs_tra", ")", "# \u6bcf\u4e2aepoch\u90fd\u6253\u4e71user_id\u8f93\u5165\u987a\u5e8f", "\n", "for", "uidx", "in", "user_idxs_tra", ":", "\n", "            ", "tra", "=", "tra_buys_masks", "[", "uidx", "]", "\n", "neg", "=", "tra_buys_neg_masks", "[", "uidx", "]", "\n", "for", "i", "in", "np", ".", "arange", "(", "sum", "(", "tra_masks", "[", "uidx", "]", ")", ")", ":", "\n", "                ", "loss", "+=", "model", ".", "train", "(", "uidx", ",", "[", "tra", "[", "i", "]", ",", "neg", "[", "i", "]", "]", ")", "\n", "", "", "rnn_l2_sqr", "=", "model", ".", "l2", ".", "eval", "(", ")", "# model.l2\u662f'TensorVariable'\uff0c\u65e0\u6cd5\u76f4\u63a5\u663e\u793a\u5176\u503c", "\n", "print", "(", "'\\t\\tsum_loss = {val} = {v1} + {v2}'", ".", "format", "(", "val", "=", "loss", "+", "rnn_l2_sqr", ",", "v1", "=", "loss", ",", "v2", "=", "rnn_l2_sqr", ")", ")", "\n", "losses", ".", "append", "(", "'%0.2f'", "%", "(", "loss", "+", "rnn_l2_sqr", ")", ")", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "times0", ".", "append", "(", "t1", "-", "t0", ")", "\n", "\n", "# --------------------------------------------------------------------------------------------------------------", "\n", "print", "(", "\"\\tPredicting ...\"", ")", "\n", "# \u8ba1\u7b97\uff1a\u6240\u6709\u7528\u6237\u3001\u5546\u54c1\u7684\u8868\u8fbe", "\n", "model", ".", "update_trained_items", "(", ")", "# \u8981\u5148\u8fd0\u884c\u8fd9\u4e2a\u66f4\u65b0items\u7279\u5f81\u3002\u5bf9\u4e8eMV-GRU\uff0c\u8fd9\u91cc\u4f1a\u5148\u7b97\u51fa\u6765\u56fe\u6587\u878d\u5408\u7279\u5f81\u3002", "\n", "model", ".", "update_trained_users", "(", ")", "\n", "t2", "=", "time", ".", "time", "(", ")", "\n", "times1", ".", "append", "(", "t2", "-", "t1", ")", "\n", "\n", "# \u8ba1\u7b97\u5404\u79cd\u6307\u6807\uff0c\u5e76\u8f93\u51fa\u5f53\u524d\u6700\u4f18\u503c\u3002", "\n", "fun_predict_auc_recall_map_ndcg", "(", "\n", "p", ",", "model", ",", "best", ",", "epoch", ",", "starts_ends_auc", ",", "starts_ends_tes", ",", "\n", "tes_buys_masks", ",", "tes_masks", ",", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", "\n", "best", ".", "fun_print_best", "(", "epoch", ")", "# \u6bcf\u6b21\u90fd\u53ea\u8f93\u51fa\u5f53\u524d\u6700\u4f18\u7684\u7ed3\u679c", "\n", "t3", "=", "time", ".", "time", "(", ")", "\n", "times2", ".", "append", "(", "t3", "-", "t2", ")", "\n", "tmp1", "=", "'| lam: %s'", "%", "', '", ".", "join", "(", "[", "str", "(", "lam", ")", "for", "lam", "in", "[", "p", "[", "'lambda'", "]", ",", "p", "[", "'lambda_ev'", "]", ",", "p", "[", "'lambda_ae'", "]", "]", "]", ")", "\n", "tmp2", "=", "'| model: {v1}'", ".", "format", "(", "v1", "=", "model_name", ")", "\n", "tmp3", "=", "'| tra_fea_zero: %0.1f'", "%", "p", "[", "'train_fea_zero'", "]", "\n", "print", "(", "'\\tavg. time (train, user, test): %0.0fs,'", "%", "np", ".", "average", "(", "times0", ")", ",", "\n", "'%0.0fs,'", "%", "np", ".", "average", "(", "times1", ")", ",", "'%0.0fs'", "%", "np", ".", "average", "(", "times2", ")", ",", "tmp1", ",", "tmp2", ",", "tmp3", ")", "\n", "\n", "# --------------------------------------------------------------------------------------------------------------", "\n", "# \u4fdd\u5b58epoch=29/49\u65f6\u7684\u6700\u4f18\u503c\u3002", "\n", "if", "epoch", "==", "p", "[", "'epochs'", "]", "-", "1", ":", "\n", "# \u4fdd\u5b58\u6700\u4f18\u503c\u3001\u6240\u6709\u7684\u635f\u5931\u503c\u3002", "\n", "            ", "print", "(", "\"\\t-----------------------------------------------------------------\"", ")", "\n", "print", "(", "\"\\tBest and losses saving ...\"", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "split", "(", "__file__", ")", "[", "0", "]", ",", "'..'", ",", "'Results_best_and_losses'", ",", "PATH", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", ")", "\n", "fun_save_best_and_losses", "(", "path", ",", "model_name", "+", "' - denoise'", ",", "epoch", ",", "p", ",", "best", ",", "losses", ")", "\n", "\n", "", "", "for", "i", "in", "p", ".", "items", "(", ")", ":", "\n", "        ", "print", "(", "i", ")", "\n", "", "print", "(", "'\\t the current Class name is: {val}'", ".", "format", "(", "val", "=", "model_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_bpr_v.main": [[265, 269], ["prog_bpr_v.train_valid_or_test"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.train_valid_or_test"], ["", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "# pas = Params()", "\n", "    ", "train_valid_or_test", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.pop_random.exe_time": [[36, 45], ["time.time", "print", "func", "print", "print", "time.strftime", "time.strftime", "time.localtime", "time.localtime", "time.time"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"-- @%s, {%s} start\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "print", "(", "\"-- @%s, {%s} end\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "print", "(", "\"-- @%.3fs taken for {%s}\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ",", "func", ".", "__name__", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.pop_random.compute_start_end": [[47, 64], ["numpy.minimum", "numpy.arange", "numpy.minimum", "numpy.arange", "starts_ends.append"], "function", ["None"], ["", "def", "compute_start_end", "(", "user_num", ",", "batch_size_test", ")", ":", "\n", "    ", "\"\"\"\n    \u83b7\u53d6mini-batch\u7684\u5404\u4e2astart_end(np.array\u7c7b\u578b\uff0c\u4e00\u7ec4\u8fde\u7eed\u7684\u6570\u503c)\n    :param flag: 'train', 'test'\n    :return: \u5404\u4e2astart_end\u7ec4\u6210\u7684list\n    \"\"\"", "\n", "size", "=", "batch_size_test", "*", "10", "# test: auc", "\n", "rest", "=", "(", "user_num", "%", "size", ")", ">", "0", "# \u80fd\u6574\u9664\uff1arest=0\u3002\u4e0d\u80fd\u6574\u9664\uff1arest=1\uff0c\u5219\u591a\u51fa\u6765\u4e00\u4e2a\u5c0f\u7684batch", "\n", "n_batches", "=", "np", ".", "minimum", "(", "user_num", "//", "size", "+", "rest", ",", "user_num", ")", "\n", "batch_idxs", "=", "np", ".", "arange", "(", "n_batches", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "starts_ends", "=", "[", "]", "\n", "for", "bidx", "in", "batch_idxs", ":", "\n", "        ", "start", "=", "bidx", "*", "size", "\n", "end", "=", "np", ".", "minimum", "(", "start", "+", "size", ",", "user_num", ")", "# \u9650\u5236\u6807\u53f7\u7d22\u5f15\u4e0d\u80fd\u8d85\u8fc7user_num", "\n", "start_end", "=", "np", ".", "arange", "(", "start", ",", "end", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "starts_ends", ".", "append", "(", "start_end", ")", "\n", "", "return", "batch_idxs", ",", "starts_ends", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.pop_random.train_valid_or_test": [[66, 176], ["public.Load_Data_by_time.load_data", "public.Load_Data_by_time.fun_data_buys_masks", "public.Load_Data_by_time.fun_data_buys_masks", "public.Load_Data_by_time.fun_random_neg_masks_tes", "set", "dict", "collections.defaultdict", "dict.items", "list", "print", "numpy.apply_along_axis", "numpy.array", "public.Global_Best.GlobalBest", "public.Valuate.fun_predict_pop_random", "public.Global_Best.GlobalBest.fun_print_best", "print", "random.sample", "numpy.array", "public.Global_Best.GlobalBest", "public.Valuate.fun_predict_pop_random", "public.Global_Best.GlobalBest.fun_print_best", "collections.OrderedDict", "collections.OrderedDict.items", "os.path.join", "tra.extend", "collections.Counter", "lst[].append", "list.items", "list", "sequence.extend", "enumerate", "len", "print", "sorted", "random.sample", "numpy.arange", "numpy.array", "random.sample", "len", "zero_one.append", "len", "zip", "numpy.arange", "numpy.arange", "zero_one.append", "zero_one.append", "zero_one.append", "zero_one.append"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_data", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_data_buys_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_data_buys_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tes", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_predict_pop_random", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_print_best", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_predict_pop_random", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_print_best"], ["", "def", "train_valid_or_test", "(", "p", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    \u6784\u5efa\u6a21\u578b\u53c2\u6570\uff0c\u52a0\u8f7d\u6570\u636e\n        \u628a\u524d80%\u5206\u4e3a6:2\u7528\u4f5ctrain\u548cvalid\uff0c\u6765\u9009\u62e9\u8d85\u53c2\u6570, \u4e0d\u7528\u53bb\u7ba1\u5269\u4e0b\u768420%.\n        \u628a\u524d80%\u4f5c\u4e3atrain\uff0c\u5269\u4e0b\u7684\u662ftest\uff0c\u628avalid\u65f6\u5b66\u5230\u7684\u53c2\u6570\u62ff\u8fc7\u6765\u8dd1\u7a0b\u5e8f.\n        valid\u548ctest\u90e8\u5206\uff0c\u7a0b\u5e8f\u662f\u4e00\u6837\u7684\uff0c\u533a\u522b\u5728\u4e8e\u9001\u5165\u7684\u6570\u636e\u800c\u5df2\u3002\n    :param p: \u4e00\u4e2a\u6807\u793a\u7b26\uff0c\u6ca1\u5565\u7528\n    :return:\n    \"\"\"", "\n", "global", "PATH", "\n", "# 1. \u5efa\u7acb\u5404\u53c2\u6570\u3002\u8981\u8c03\u6574\u7684\u5730\u65b9\u90fd\u5728 p \u8fd9\u4e86\uff0c\u5176\u5b83\u51fd\u6570\u90fd\u7ed9\u5199\u6b7b\u3002", "\n", "if", "not", "p", ":", "\n", "        ", "t", "=", "'t'", "# \u51991\u5c31\u662fvalid, \u51990\u5c31\u662ftest", "\n", "assert", "'t'", "==", "t", "or", "'v'", "==", "t", "# no other case", "\n", "p", "=", "OrderedDict", "(", "\n", "[", "\n", "(", "'dataset'", ",", "'user_buys.txt'", ")", ",", "\n", "(", "'fea_image'", ",", "'normalized_features_image/'", ")", ",", "\n", "(", "'fea_text'", ",", "'normalized_features_text/'", ")", ",", "\n", "(", "'mode'", ",", "'test'", "if", "'t'", "==", "t", "else", "'valid'", ")", ",", "\n", "(", "'split'", ",", "[", "0.8", ",", "1.0", "]", "if", "'t'", "==", "t", "else", "[", "0.6", ",", "0.8", "]", ")", ",", "# valid: 6/2/2\u3002test: 8/2.", "\n", "(", "'at_nums'", ",", "[", "10", ",", "20", ",", "30", ",", "50", "]", ")", ",", "# 5\uff0c 15", "\n", "(", "'intervals'", ",", "[", "2", ",", "10", ",", "30", "]", ")", ",", "# \u4ee5\u6b21\u65702\u4e3a\u95f4\u9694\uff0c\u5206\u4e3a10\u4e2a\u533a\u95f4. \u8ba1\u7b97auc/recall@30\u4e0a\u7684. \u6362\u4e3a10", "\n", "\n", "(", "'batch_size_train'", ",", "4", ")", ",", "# size\u5927\u4e86\u4e4b\u540e\u6027\u80fd\u4e0b\u964d\u975e\u5e38\u4e25\u91cd", "\n", "(", "'batch_size_test'", ",", "768", ")", ",", "# user*item\u77e9\u9635\u592a\u5927\uff0c\u8981\u591a\u6b21\u8ba1\u7b97\u3002a5\u4e0b\u4eb2\u6d4b768\u6700\u5feb\u3002", "\n", "]", ")", "\n", "for", "e", "in", "p", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "e", ")", "\n", "", "assert", "'valid'", "==", "p", "[", "'mode'", "]", "or", "'test'", "==", "p", "[", "'mode'", "]", "\n", "\n", "# 2. \u52a0\u8f7d\u6570\u636e", "\n", "# \u56e0\u4e3atrain/set\u91cc\u6bcf\u9879\u7684\u957f\u5ea6\u4e0d\u7b49\uff0c\u65e0\u6cd5\u8f6c\u6362\u4e3a\u5b8c\u5168\u7684(n, m)\u77e9\u9635\u6837\u5f0f\uff0c\u6240\u4ee5shared\u4f1a\u62a5\u9519.", "\n", "", "[", "(", "user_num", ",", "item_num", ")", ",", "aliases_dict", ",", "\n", "(", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", ",", "\n", "(", "tra_buys", ",", "tes_buys", ")", ",", "(", "set_tra", ",", "set_tes", ")", "]", "=", "load_data", "(", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'dataset'", "]", ")", ",", "p", "[", "'mode'", "]", ",", "p", "[", "'split'", "]", ",", "p", "[", "'intervals'", "]", ")", "\n", "# \u6b63\u6837\u672c\u52a0masks", "\n", "tra_buys_masks", ",", "tra_masks", "=", "fun_data_buys_masks", "(", "tra_buys", ",", "tail", "=", "[", "item_num", "]", ")", "# \u9884\u6d4b\u65f6\u7b97\u7528\u6237\u8868\u8fbe\u7528", "\n", "tes_buys_masks", ",", "tes_masks", "=", "fun_data_buys_masks", "(", "tes_buys", ",", "tail", "=", "[", "item_num", "]", ")", "# \u9884\u6d4b\u65f6\u7528", "\n", "# \u8d1f\u6837\u672c\u52a0masks", "\n", "# tra_buys_neg_masks = fun_random_neg_masks_tra(item_num, tra_buys_masks)   # \u8bad\u7ec3\u65f6\u7528\uff08\u9010\u6761\u3001mini-batch\u5747\u53ef\uff09", "\n", "tes_buys_neg_masks", "=", "fun_random_neg_masks_tes", "(", "item_num", ",", "tra_buys_masks", ",", "tes_buys_masks", ")", "# \u9884\u6d4b\u65f6\u7528", "\n", "\n", "# --------------------------------------------------------------------------------------------------------------", "\n", "# \u83b7\u5f97\u6309\u8d2d\u4e70\u6b21\u6570\u7531\u5927\u5230\u5c0f\u6392\u5e8f\u7684items, \u51fa\u73b0\u6b21\u6570\u76f8\u540c\u7684\uff0c\u968f\u673a\u6392\u5217\u3002", "\n", "tra", "=", "[", "]", "\n", "for", "buy", "in", "tra_buys", ":", "\n", "        ", "tra", ".", "extend", "(", "buy", ")", "\n", "", "train_i", "=", "set", "(", "tra", ")", "\n", "train_i_cou", "=", "dict", "(", "Counter", "(", "tra", ")", ")", "# {item: num, }, \u5404\u4e2aitem\u51fa\u73b0\u7684\u6b21\u6570", "\n", "lst", "=", "defaultdict", "(", "list", ")", "\n", "for", "item", ",", "count", "in", "train_i_cou", ".", "items", "(", ")", ":", "\n", "        ", "lst", "[", "count", "]", ".", "append", "(", "item", ")", "\n", "# \u67d0\u4e2a\u88ab\u8d2d\u4e70\u6b21\u6570(count)\u4e0b\u5404\u6709\u54ea\u4e9b\u5546\u54c1\uff0c\u5546\u54c1\u6570\u76ee\u662fcount\u3002count\u8d8a\u5927\uff0c\u8fd9\u4e9bitems\u8d8apopular", "\n", "", "lst", "=", "list", "(", "lst", ".", "items", "(", ")", ")", "# [(num, [item1, item2, ...]), ]", "\n", "lst", "=", "list", "(", "sorted", "(", "lst", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", ")", ")", "[", ":", ":", "-", "1", "]", "# \u88ab\u8d2d\u4e70\u6b21\u6570\u591a\u7684\uff0c\u51fa\u73b0\u5728\u9996\u7aef", "\n", "sequence", "=", "[", "]", "\n", "for", "count", ",", "items", "in", "lst", ":", "\n", "        ", "sequence", ".", "extend", "(", "random", ".", "sample", "(", "items", ",", "len", "(", "items", ")", ")", ")", "# \u67d0\u4e2a\u8d2d\u4e70\u6b21\u6570\u4e0b\u7684\u5404\u5546\u54c1\uff0c\u968f\u673a\u6392\u5217\u3002", "\n", "\n", "", "def", "fun_judge_tes_and_neg", "(", "tes_mark_neg", ")", ":", "\n", "        ", "tes", ",", "mark", ",", "tes_neg", ",", "_", "=", "tes_mark_neg", "\n", "zero_one", "=", "[", "]", "\n", "for", "idx", ",", "flag", "in", "enumerate", "(", "mark", ")", ":", "\n", "            ", "if", "0", "==", "flag", ":", "\n", "                ", "zero_one", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "i", ",", "j", "=", "tes", "[", "idx", "]", ",", "tes_neg", "[", "idx", "]", "\n", "if", "i", "in", "train_i", "and", "j", "in", "train_i", ":", "\n", "                    ", "zero_one", ".", "append", "(", "1", "if", "train_i_cou", "[", "i", "]", ">", "train_i_cou", "[", "j", "]", "else", "0", ")", "\n", "", "elif", "i", "in", "train_i", "and", "j", "not", "in", "train_i", ":", "\n", "                    ", "zero_one", ".", "append", "(", "1", ")", "\n", "", "elif", "i", "not", "in", "train_i", "and", "j", "in", "train_i", ":", "\n", "                    ", "zero_one", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                    ", "zero_one", ".", "append", "(", "0", ")", "\n", "", "", "", "return", "zero_one", "# \u4e0emask\u7b49\u957f\u76840/1\u5e8f\u5217\u30021\u8868\u793a\u7528\u6237\u4e70\u7684\u5546\u54c1\u6bd4\u8d1f\u6837\u672c\u66f4\u6d41\u884c\u3002", "\n", "\n", "# --------------------------------------------------------------------------------------------------------------", "\n", "", "print", "(", "\"\\tPop ...\"", ")", "\n", "append", "=", "[", "[", "0", "]", "for", "_", "in", "np", ".", "arange", "(", "len", "(", "tes_buys_masks", ")", ")", "]", "\n", "all_upqs", "=", "np", ".", "apply_along_axis", "(", "# \u5224\u65adtes\u91cc\u7684\u662f\u5426\u6bd4tes_neg\u66f4\u6d41\u884c", "\n", "func1d", "=", "fun_judge_tes_and_neg", ",", "\n", "axis", "=", "1", ",", "\n", "arr", "=", "np", ".", "array", "(", "zip", "(", "tes_buys_masks", ",", "tes_masks", ",", "tes_buys_neg_masks", ",", "append", ")", ")", ")", "\n", "recom", "=", "sequence", "[", ":", "p", "[", "'at_nums'", "]", "[", "-", "1", "]", "]", "# \u6bcf\u4e2a\u7528\u6237\u90fd\u7ed9\u63a8\u8350\u524d100\u4e2a\u6700\u6d41\u884c\u7684", "\n", "all_ranks", "=", "np", ".", "array", "(", "[", "recom", "for", "_", "in", "np", ".", "arange", "(", "user_num", ")", "]", ")", "\n", "\n", "# \u5b58\u653e\u6700\u4f18\u6570\u636e\u3002\u8ba1\u7b97\u5404\u79cd\u6307\u6807\u5e76\u8f93\u51fa\u3002", "\n", "best", "=", "GlobalBest", "(", "at_nums", "=", "p", "[", "'at_nums'", "]", ",", "intervals", "=", "p", "[", "'intervals'", "]", ")", "\n", "fun_predict_pop_random", "(", "\n", "p", ",", "best", ",", "all_upqs", ",", "all_ranks", ",", "\n", "tes_buys_masks", ",", "tes_masks", ",", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", "\n", "best", ".", "fun_print_best", "(", "epoch", "=", "0", ")", "# \u6bcf\u6b21\u90fd\u53ea\u8f93\u51fa\u5f53\u524d\u6700\u4f18\u7684\u7ed3\u679c", "\n", "\n", "# --------------------------------------------------------------------------------------------------------------", "\n", "print", "(", "\"\\tRandom ...\"", ")", "\n", "all_upqs", "=", "None", "# random\u7684auc\u5c31\u662f0.5\uff0c\u76f4\u63a5\u5f15\u7528\u6587\u732e\u91cc\u7684\u8bf4\u6cd5\u3002", "\n", "seq_random", "=", "sample", "(", "sequence", ",", "len", "(", "sequence", ")", ")", "# \u5148\u628a\u603b\u5e8f\u5217\u6253\u4e71\u987a\u5e8f\u3002\u518d\u6bcf\u4e2a\u7528\u6237\u90fd\u7ed9\u968f\u673a\u63a8\u8350100\u4e2a", "\n", "all_ranks", "=", "np", ".", "array", "(", "[", "sample", "(", "seq_random", ",", "p", "[", "'at_nums'", "]", "[", "-", "1", "]", ")", "for", "_", "in", "np", ".", "arange", "(", "user_num", ")", "]", ")", "\n", "\n", "# \u5b58\u653e\u6700\u4f18\u6570\u636e\u3002\u8ba1\u7b97\u5404\u79cd\u6307\u6807\u5e76\u8f93\u51fa\u3002", "\n", "best", "=", "GlobalBest", "(", "at_nums", "=", "p", "[", "'at_nums'", "]", ",", "intervals", "=", "p", "[", "'intervals'", "]", ")", "\n", "fun_predict_pop_random", "(", "\n", "p", ",", "best", ",", "all_upqs", ",", "all_ranks", ",", "\n", "tes_buys_masks", ",", "tes_masks", ",", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", "\n", "best", ".", "fun_print_best", "(", "epoch", "=", "0", ")", "# \u6bcf\u6b21\u90fd\u53ea\u8f93\u51fa\u5f53\u524d\u6700\u4f18\u7684\u7ed3\u679c", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.pop_random.main": [[178, 181], ["pop_random.train_valid_or_test"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.train_valid_or_test"], ["", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "train_valid_or_test", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.__init__.exe_time": [[13, 22], ["time.time", "print", "func", "print", "print", "time.strftime", "time.strftime", "time.localtime", "time.localtime", "time.time"], "function", ["None"], ["    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "t0", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"-- @%s, {%s} start\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "print", "(", "\"-- @%s, {%s} end\"", "%", "(", "time", ".", "strftime", "(", "\"%X\"", ",", "time", ".", "localtime", "(", ")", ")", ",", "func", ".", "__name__", ")", ")", "\n", "print", "(", "\"-- @%.3fs taken for {%s}\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ",", "func", ".", "__name__", ")", ")", "\n", "return", "back", "\n", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.__init__.fun": [[24, 31], ["numpy.asarray", "print"], "function", ["None"], ["", "def", "fun", "(", ")", ":", "\n", "    ", "pass", "\n", "\n", "\n", "", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.__init__.main": [[33, 36], ["__init__.fun"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.__init__.fun"], ["", "if", "'__main__'", "==", "__name__", ":", "\n", "    ", "main", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.__init__": [[51, 116], ["public.Load_Data_by_time.load_data", "public.Load_Data_by_time.fun_data_buys_masks", "public.Load_Data_by_time.fun_data_buys_masks", "public.Load_Data_by_time.fun_random_neg_masks_tra", "public.Load_Data_by_time.fun_random_neg_masks_tes", "collections.OrderedDict", "collections.OrderedDict.items", "os.path.join", "print"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_data", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_data_buys_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_data_buys_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tra", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tes"], ["    ", "def", "__init__", "(", "self", ",", "p", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        \u6784\u5efa\u6a21\u578b\u53c2\u6570\uff0c\u52a0\u8f7d\u6570\u636e\n            \u628a\u524d80%\u5206\u4e3a6:2\u7528\u4f5ctrain\u548cvalid\uff0c\u6765\u9009\u62e9\u8d85\u53c2\u6570, \u4e0d\u7528\u53bb\u7ba1\u5269\u4e0b\u768420%.\n            \u628a\u524d80%\u4f5c\u4e3atrain\uff0c\u5269\u4e0b\u7684\u662ftest\uff0c\u628avalid\u65f6\u5b66\u5230\u7684\u53c2\u6570\u62ff\u8fc7\u6765\u8dd1\u7a0b\u5e8f.\n            valid\u548ctest\u90e8\u5206\uff0c\u7a0b\u5e8f\u662f\u4e00\u6837\u7684\uff0c\u533a\u522b\u5728\u4e8e\u9001\u5165\u7684\u6570\u636e\u800c\u5df2\u3002\n        :param p: \u4e00\u4e2a\u6807\u793a\u7b26\uff0c\u6ca1\u5565\u7528\n        :return:\n        \"\"\"", "\n", "global", "PATH", "\n", "# 1. \u5efa\u7acb\u5404\u53c2\u6570\u3002\u8981\u8c03\u6574\u7684\u5730\u65b9\u90fd\u5728 p \u8fd9\u4e86\uff0c\u5176\u5b83\u51fd\u6570\u90fd\u7ed9\u5199\u6b7b\u3002", "\n", "if", "not", "p", ":", "\n", "            ", "t", "=", "'t'", "# \u51991\u5c31\u662fvalid, \u51990\u5c31\u662ftest", "\n", "assert", "'t'", "==", "t", "or", "'v'", "==", "t", "# no other case", "\n", "p", "=", "OrderedDict", "(", "\n", "[", "\n", "(", "'dataset'", ",", "'user_buys.txt'", ")", ",", "\n", "(", "'fea_image'", ",", "'normalized_features_image/'", ")", ",", "\n", "(", "'fea_text'", ",", "'normalized_features_text/'", ")", ",", "\n", "(", "'mode'", ",", "'test'", "if", "'t'", "==", "t", "else", "'valid'", ")", ",", "\n", "(", "'split'", ",", "[", "0.8", ",", "1.0", "]", "if", "'t'", "==", "t", "else", "[", "0.6", ",", "0.8", "]", ")", ",", "# valid: 6/2/2\u3002test: 8/2.", "\n", "(", "'at_nums'", ",", "[", "10", ",", "20", ",", "30", ",", "50", "]", ")", ",", "\n", "(", "'intervals'", ",", "[", "2", ",", "10", ",", "30", "]", ")", ",", "# \u4ee5\u6b21\u65702\u4e3a\u95f4\u9694\uff0c\u5206\u4e3a10\u4e2a\u533a\u95f4. \u8ba1\u7b97auc/recall@30\u4e0a\u7684. \u6362\u4e3a10", "\n", "(", "'epochs'", ",", "90", "if", "'taobao'", "in", "PATH", "else", "150", ")", ",", "\n", "(", "'alpha'", ",", "0.1", ")", ",", "\n", "\n", "(", "'latent_size'", ",", "[", "20", ",", "1024", ",", "100", "]", ")", ",", "\n", "(", "'lambda'", ",", "0.1", ")", ",", "# \u8981\u4e0d\u8981self.lt\u548cself.ux/wh/bi\u7528\u4e0d\u540c\u7684lambda\uff1f", "\n", "(", "'lambda_ev'", ",", "-", "1", ")", ",", "# \u56fe\u6587\u964d\u7ef4\u5c40\u77e9\u9635\u7684\u3002\u5c31\u662f\u8fd9\u4e2a0.0\u3002None", "\n", "(", "'lambda_ae'", ",", "-", "1", ")", ",", "# \u91cd\u6784\u8bef\u5dee\u7684\u3002None", "\n", "\n", "(", "'train_fea_zero'", ",", "-", "1", ")", ",", "# 0.2 / 0.4\u3002None", "\n", "(", "'mini_batch'", ",", "1", ")", ",", "# 0:one_by_one,     1:mini_batch", "\n", "(", "'mvgru'", ",", "1", ")", ",", "# 0:Lstm4Rec,", "\n", "# 1:p-lstm", "\n", "\n", "(", "'batch_size_train'", ",", "4", ")", ",", "# size\u5927\u4e86\u4e4b\u540e\u6027\u80fd\u4e0b\u964d\u975e\u5e38\u4e25\u91cd", "\n", "(", "'batch_size_test'", ",", "768", ")", ",", "# user*item\u77e9\u9635\u592a\u5927\uff0c\u8981\u591a\u6b21\u8ba1\u7b97\u3002a5\u4e0b\u4eb2\u6d4b768\u6700\u5feb\u3002", "\n", "]", ")", "\n", "for", "i", "in", "p", ".", "items", "(", ")", ":", "\n", "                ", "print", "(", "i", ")", "\n", "", "assert", "'valid'", "==", "p", "[", "'mode'", "]", "or", "'test'", "==", "p", "[", "'mode'", "]", "\n", "\n", "# 2. \u52a0\u8f7d\u6570\u636e", "\n", "# \u56e0\u4e3atrain/set\u91cc\u6bcf\u9879\u7684\u957f\u5ea6\u4e0d\u7b49\uff0c\u65e0\u6cd5\u8f6c\u6362\u4e3a\u5b8c\u5168\u7684(n, m)\u77e9\u9635\u6837\u5f0f\uff0c\u6240\u4ee5shared\u4f1a\u62a5\u9519.", "\n", "", "[", "(", "user_num", ",", "item_num", ")", ",", "aliases_dict", ",", "\n", "(", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", ",", "\n", "(", "tra_buys", ",", "tes_buys", ")", ",", "(", "set_tra", ",", "set_tes", ")", "]", "=", "load_data", "(", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'dataset'", "]", ")", ",", "p", "[", "'mode'", "]", ",", "p", "[", "'split'", "]", ",", "p", "[", "'intervals'", "]", ")", "\n", "# \u6b63\u6837\u672c\u52a0masks", "\n", "tra_buys_masks", ",", "tra_masks", "=", "fun_data_buys_masks", "(", "tra_buys", ",", "tail", "=", "[", "item_num", "]", ")", "# \u9884\u6d4b\u65f6\u7b97\u7528\u6237\u8868\u8fbe\u7528", "\n", "tes_buys_masks", ",", "tes_masks", "=", "fun_data_buys_masks", "(", "tes_buys", ",", "tail", "=", "[", "item_num", "]", ")", "# \u9884\u6d4b\u65f6\u7528", "\n", "# \u8d1f\u6837\u672c\u52a0masks", "\n", "tra_buys_neg_masks", "=", "fun_random_neg_masks_tra", "(", "item_num", ",", "tra_buys_masks", ")", "# \u8bad\u7ec3\u65f6\u7528\uff08\u9010\u6761\u3001mini-batch\u5747\u53ef\uff09", "\n", "tes_buys_neg_masks", "=", "fun_random_neg_masks_tes", "(", "item_num", ",", "tra_buys_masks", ",", "tes_buys_masks", ")", "# \u9884\u6d4b\u65f6\u7528", "\n", "\n", "# 3. \u521b\u5efa\u7c7b\u53d8\u91cf", "\n", "self", ".", "p", "=", "p", "\n", "self", ".", "user_num", ",", "self", ".", "item_num", "=", "user_num", ",", "item_num", "\n", "self", ".", "aliases_dict", "=", "aliases_dict", "\n", "self", ".", "tic", ",", "self", ".", "tiic", ",", "self", ".", "tica", "=", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", "\n", "self", ".", "tra_buys", ",", "self", ".", "tes_buys", "=", "tra_buys", ",", "tes_buys", "\n", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "=", "tra_buys_masks", ",", "tra_masks", ",", "tra_buys_neg_masks", "\n", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "=", "tes_buys_masks", ",", "tes_masks", ",", "tes_buys_neg_masks", "\n", "self", ".", "set_tra", ",", "self", ".", "set_tes", "=", "set_tra", ",", "set_tes", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.build_model_mini_batch": [[117, 157], ["print", "print", "public.LSTM_Parallel.Lstm4Rec", "public.Load_Data_by_time.load_img_txt", "public.Load_Data_by_time.load_img_txt", "public.LSTM_Parallel.PLstmParallelRes", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_img_txt", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.load_img_txt"], ["", "def", "build_model_mini_batch", "(", "self", ",", "flag", ")", ":", "\n", "        ", "\"\"\"\n        \u5efa\u7acb\u6a21\u578b\u5bf9\u8c61\n        :param flag: \u53c2\u6570\u53d8\u91cf\u3001\u6570\u636e\n        :return:\n        \"\"\"", "\n", "print", "(", "'building the model ...'", ")", "\n", "assert", "flag", "in", "[", "0", ",", "1", "]", "\n", "p", "=", "self", ".", "p", "\n", "size", "=", "p", "[", "'latent_size'", "]", "[", "0", "]", "\n", "if", "0", "==", "flag", ":", "# Gru", "\n", "            ", "model", "=", "Lstm4Rec", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "1", ")", "\n", "", "else", ":", "\n", "# \u52a0\u8f7d\u56fe\u6587\u6570\u636e", "\n", "            ", "fea_img", "=", "load_img_txt", "(", "'Image'", ",", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'fea_image'", "]", ")", ",", "\n", "self", ".", "item_num", ",", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "self", ".", "aliases_dict", ")", "\n", "fea_txt", "=", "load_img_txt", "(", "'Text'", ",", "os", ".", "path", ".", "join", "(", "PATH", ",", "p", "[", "'fea_text'", "]", ")", ",", "\n", "self", ".", "item_num", ",", "p", "[", "'latent_size'", "]", "[", "2", "]", ",", "self", ".", "aliases_dict", ")", "\n", "model", "=", "PLstmParallelRes", "(", "\n", "train", "=", "[", "self", ".", "tra_buys_masks", ",", "self", ".", "tra_masks", ",", "self", ".", "tra_buys_neg_masks", "]", ",", "\n", "test", "=", "[", "self", ".", "tes_buys_masks", ",", "self", ".", "tes_masks", ",", "self", ".", "tes_buys_neg_masks", "]", ",", "\n", "alpha_lambda", "=", "[", "p", "[", "'alpha'", "]", ",", "p", "[", "'lambda'", "]", ",", "p", "[", "'train_fea_zero'", "]", "]", ",", "\n", "n_user", "=", "self", ".", "user_num", ",", "\n", "n_item", "=", "self", ".", "item_num", ",", "\n", "n_in", "=", "size", ",", "\n", "n_hidden", "=", "size", "*", "1", ",", "# 1\u4e2aGRU\u5355\u5143\uff0cn_hidden = 1*n_in\u3002\u5904\u74061\u79cd\u7279\u5f81\u3002", "\n", "n_img", "=", "p", "[", "'latent_size'", "]", "[", "1", "]", ",", "\n", "n_txt", "=", "p", "[", "'latent_size'", "]", "[", "2", "]", ",", "\n", "fea_img", "=", "fea_img", ",", "\n", "fea_txt", "=", "fea_txt", ")", "\n", "", "model_name", "=", "model", ".", "__class__", ".", "__name__", "\n", "print", "(", "'\\t the current Class name is: {val}'", ".", "format", "(", "val", "=", "model_name", ")", ")", "\n", "return", "model", ",", "model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.compute_start_end": [[158, 182], ["numpy.minimum", "numpy.arange", "numpy.minimum", "numpy.arange", "starts_ends.append"], "methods", ["None"], ["", "def", "compute_start_end", "(", "self", ",", "flag", ")", ":", "\n", "        ", "\"\"\"\n        \u83b7\u53d6mini-batch\u7684\u5404\u4e2astart_end(np.array\u7c7b\u578b\uff0c\u4e00\u7ec4\u8fde\u7eed\u7684\u6570\u503c)\n        :param flag: 'train', 'test'\n        :return: \u5404\u4e2astart_end\u7ec4\u6210\u7684list\n        \"\"\"", "\n", "assert", "flag", "in", "[", "'train_mini_batch'", ",", "'test_top_k'", ",", "'test_auc'", "]", "\n", "if", "'train_mini_batch'", "==", "flag", ":", "\n", "            ", "size", "=", "self", ".", "p", "[", "'batch_size_train'", "]", "\n", "", "elif", "'test_top_k'", "==", "flag", ":", "\n", "            ", "size", "=", "self", ".", "p", "[", "'batch_size_test'", "]", "# test: top-k", "\n", "", "else", ":", "\n", "            ", "size", "=", "self", ".", "p", "[", "'batch_size_test'", "]", "*", "10", "# test: auc\u3002\u8fd0\u7b97\u76f8\u5bf9\u7b80\u5355\uff0cbatch_size\u53ef\u4ee5\u5927\u4e00\u4e9b\u3002", "\n", "", "user_num", "=", "self", ".", "user_num", "\n", "rest", "=", "(", "user_num", "%", "size", ")", ">", "0", "# \u80fd\u6574\u9664\uff1arest=0\u3002\u4e0d\u80fd\u6574\u9664\uff1arest=1\uff0c\u5219\u591a\u51fa\u6765\u4e00\u4e2a\u5c0f\u7684batch", "\n", "n_batches", "=", "np", ".", "minimum", "(", "user_num", "//", "size", "+", "rest", ",", "user_num", ")", "\n", "batch_idxs", "=", "np", ".", "arange", "(", "n_batches", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "starts_ends", "=", "[", "]", "\n", "for", "bidx", "in", "batch_idxs", ":", "\n", "            ", "start", "=", "bidx", "*", "size", "\n", "end", "=", "np", ".", "minimum", "(", "start", "+", "size", ",", "user_num", ")", "# \u9650\u5236\u6807\u53f7\u7d22\u5f15\u4e0d\u80fd\u8d85\u8fc7user_num", "\n", "start_end", "=", "np", ".", "arange", "(", "start", ",", "end", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "starts_ends", ".", "append", "(", "start_end", ")", "\n", "", "return", "batch_idxs", ",", "starts_ends", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.exe_time": [[35, 48], ["datetime.datetime.now", "print", "func", "datetime.datetime.now", "print", "print", "print", "datetime.datetime.now.strftime", "datetime.datetime.now.strftime", "datetime.datetime.now.strftime"], "function", ["None"], ["def", "exe_time", "(", "func", ")", ":", "\n", "    ", "def", "new_func", "(", "*", "args", ",", "**", "args2", ")", ":", "\n", "        ", "name", "=", "func", ".", "__name__", "\n", "start", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ".", "strftime", "(", "\"%Y.%m.%d %H:%M:%S\"", ")", ")", ")", "\n", "back", "=", "func", "(", "*", "args", ",", "**", "args2", ")", "\n", "end", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "print", "(", "\"-- {%s} start: @ %ss\"", "%", "(", "name", ",", "start", ".", "strftime", "(", "\"%Y.%m.%d %H:%M:%S\"", ")", ")", ")", "\n", "print", "(", "\"-- {%s} end:   @ %ss\"", "%", "(", "name", ",", "end", ".", "strftime", "(", "\"%Y.%m.%d %H:%M:%S\"", ")", ")", ")", "\n", "total", "=", "(", "end", "-", "start", ")", ".", "total_seconds", "(", ")", "\n", "print", "(", "\"-- {%s} total: @ %.2fs = %.2fh\"", "%", "(", "name", ",", "total", ",", "total", "/", "3600.0", ")", ")", "\n", "return", "back", "\n", "", "return", "new_func", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.train_valid_or_test": [[184, 282], ["prog_lstm_parallel.Params", "prog_lstm_parallel.Params.build_model_mini_batch", "public.Global_Best.GlobalBest", "prog_lstm_parallel.Params.compute_start_end", "prog_lstm_parallel.Params.compute_start_end", "prog_lstm_parallel.Params.compute_start_end", "print", "numpy.arange", "p.items", "print", "print", "print", "time.time", "random.seed", "random.shuffle", "model.l2.eval", "print", "losses.append", "time.time", "times0.append", "print", "model.pgru_update_trained_items", "model.update_trained_users", "time.time", "times1.append", "public.Valuate.fun_predict_auc_recall_map_ndcg", "public.Global_Best.GlobalBest.fun_print_best", "time.time", "times2.append", "print", "print", "public.Load_Data_by_time.fun_random_neg_masks_tra", "public.Load_Data_by_time.fun_random_neg_masks_tes", "model.update_neg_masks", "str", "random.shuffle", "model.train", "model.pgru_predict", "all_hus.extend", "print", "print", "os.path.join", "public.Valuate.fun_save_best_and_losses", "numpy.average", "numpy.average", "numpy.average", "str", "os.path.split", "PATH.split"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.build_model_mini_batch", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.compute_start_end", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.compute_start_end", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.Params.compute_start_end", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.pgru_update_trained_items", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.OboVBpr.update_trained_users", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_predict_auc_recall_map_ndcg", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Global_Best.GlobalBest.fun_print_best", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tra", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Load_Data_by_time.fun_random_neg_masks_tes", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.BPR.MfBasic.update_neg_masks", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.GRU_MV.MvGruFusion.train", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.LSTM_Parallel.PLstmParallelRes.pgru_predict", "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.public.Valuate.fun_save_best_and_losses"], ["", "", "def", "train_valid_or_test", "(", ")", ":", "\n", "    ", "\"\"\"\n    \u4e3b\u7a0b\u5e8f\n    :return:\n    \"\"\"", "\n", "# \u5efa\u7acb\u53c2\u6570\u3001\u6570\u636e\u3001\u6a21\u578b\u3001\u6a21\u578b\u6700\u4f73\u503c", "\n", "pas", "=", "Params", "(", ")", "\n", "p", "=", "pas", ".", "p", "\n", "model", ",", "model_name", "=", "pas", ".", "build_model_mini_batch", "(", "flag", "=", "p", "[", "'mvgru'", "]", ")", "\n", "best", "=", "GlobalBest", "(", "at_nums", "=", "p", "[", "'at_nums'", "]", ",", "intervals", "=", "p", "[", "'intervals'", "]", ")", "# \u5b58\u653e\u6700\u4f18\u6570\u636e", "\n", "batch_idxs_tra", ",", "starts_ends_tra", "=", "pas", ".", "compute_start_end", "(", "flag", "=", "'train_mini_batch'", ")", "\n", "_", ",", "starts_ends_tes", "=", "pas", ".", "compute_start_end", "(", "flag", "=", "'test_top_k'", ")", "# tes\u65f6\u987a\u5e8f\u5904\u7406\u5373\u53ef\u3002", "\n", "_", ",", "starts_ends_auc", "=", "pas", ".", "compute_start_end", "(", "flag", "=", "'test_auc'", ")", "\n", "\n", "# \u76f4\u63a5\u53d6\u51fa\u6765\u90e8\u5206\u53d8\u91cf\uff0c\u540e\u8fb9\u5c31\u4e0d\u7528\u52a0'pas.'\u4e86\u3002", "\n", "user_num", ",", "item_num", "=", "pas", ".", "user_num", ",", "pas", ".", "item_num", "\n", "tra_buys_masks", "=", "pas", ".", "tra_buys_masks", "\n", "tes_buys_masks", "=", "pas", ".", "tes_buys_masks", "\n", "tes_masks", "=", "pas", ".", "tes_masks", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", "=", "pas", ".", "tic", ",", "pas", ".", "tiic", ",", "pas", ".", "tica", "\n", "del", "pas", "\n", "\n", "# \u4e3b\u5faa\u73af", "\n", "losses", "=", "[", "]", "\n", "times0", ",", "times1", ",", "times2", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "if", "0", "!=", "p", "[", "'mvgru'", "]", ":", "\n", "        ", "epochs", "=", "p", "[", "'epochs'", "]", "# 90-taobao, 150-amazon   # \u8fd9\u4e2a\u662f\u5b50\u7f51\u7edc\u5206\u5f00\u5b66\uff0c\u89813\u500d\u7684epoch", "\n", "", "else", ":", "\n", "        ", "epochs", "=", "30", "if", "'taobao'", "in", "PATH", "else", "50", "# \u8fd9\u4e2a\u662f\u5b50\u7f51\u7edc\u540c\u65f6\u5b66\uff0c\u89811\u500d\u7684epoch", "\n", "", "print", "(", "'mvgru ='", ",", "p", "[", "'mvgru'", "]", ",", "'epochs ='", ",", "epochs", ")", "\n", "for", "epoch", "in", "np", ".", "arange", "(", "epochs", ")", ":", "\n", "        ", "print", "(", "\"Epoch {val} ==================================\"", ".", "format", "(", "val", "=", "epoch", ")", ")", "\n", "# \u6bcf\u6b21epoch\uff0c\u90fd\u8981\u91cd\u65b0\u9009\u62e9\u8d1f\u6837\u672c\u3002\u90fd\u8981\u628a\u6570\u636e\u6253\u4e71\u91cd\u6392\uff0c\u8fd9\u6837\u4f1a\u4ee5\u968f\u673a\u65b9\u5f0f\u9009\u62e9\u6837\u672c\u8ba1\u7b97\u68af\u5ea6\uff0c\u53ef\u5f97\u5230\u7cbe\u786e\u7ed3\u679c", "\n", "if", "epoch", ">", "0", ":", "# epoch=0\u7684\u8d1f\u6837\u672c\u5df2\u5728\u5faa\u73af\u524d\u751f\u6210\uff0c\u4e14\u5df2\u7528\u4e8e\u7c7b\u7684\u521d\u59cb\u5316", "\n", "            ", "tra_buys_neg_masks", "=", "fun_random_neg_masks_tra", "(", "item_num", ",", "tra_buys_masks", ")", "\n", "tes_buys_neg_masks", "=", "fun_random_neg_masks_tes", "(", "item_num", ",", "tra_buys_masks", ",", "tes_buys_masks", ")", "\n", "model", ".", "update_neg_masks", "(", "tra_buys_neg_masks", ",", "tes_buys_neg_masks", ")", "\n", "\n", "# --------------------------------------------------------------------------------------------------------------", "\n", "", "print", "(", "\"\\tTraining ...\"", ")", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "loss", "=", "0.", "\n", "random", ".", "seed", "(", "str", "(", "123", "+", "epoch", ")", ")", "\n", "random", ".", "shuffle", "(", "batch_idxs_tra", ")", "# \u6bcf\u4e2aepoch\u90fd\u6253\u4e71batch_idx\u8f93\u5165\u987a\u5e8f", "\n", "for", "bidx", "in", "batch_idxs_tra", ":", "\n", "            ", "start_end", "=", "starts_ends_tra", "[", "bidx", "]", "\n", "random", ".", "shuffle", "(", "start_end", ")", "# \u6253\u4e71batch\u5185\u7684indexes", "\n", "loss", "+=", "model", ".", "train", "(", "idxs", "=", "start_end", ",", "epoch_n", "=", "epochs", ",", "epoch_i", "=", "epoch", ")", "\n", "", "rnn_l2_sqr", "=", "model", ".", "l2", ".", "eval", "(", ")", "# model.l2\u662f'TensorVariable'\uff0c\u65e0\u6cd5\u76f4\u63a5\u663e\u793a\u5176\u503c", "\n", "print", "(", "'\\t\\tsum_loss = {val} = {v1} + {v2}'", ".", "format", "(", "val", "=", "loss", "+", "rnn_l2_sqr", ",", "v1", "=", "loss", ",", "v2", "=", "rnn_l2_sqr", ")", ")", "\n", "losses", ".", "append", "(", "'%0.2f'", "%", "(", "loss", "+", "rnn_l2_sqr", ")", ")", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "times0", ".", "append", "(", "t1", "-", "t0", ")", "\n", "\n", "# --------------------------------------------------------------------------------------------------------------", "\n", "# if 0 == p['mvgru'] \\", "\n", "#     or 'amazon' in PATH \\", "\n", "#     or epoch <= 5 \\", "\n", "#     or 1 == epoch % 2:", "\n", "# Gru4Rec: \u90fd\u63a8\u8350\u3002p-Gru: ama\u65f6\u90fd\u63a8\u8350\u3002p-Gru: tao\u65f6\u53ea\u5728\u90e8\u5206epoch\u63a8\u8350\u3002", "\n", "print", "(", "\"\\tPredicting ...\"", ")", "\n", "# \u8ba1\u7b97\uff1a\u6240\u6709\u7528\u6237\u3001\u5546\u54c1\u7684\u8868\u8fbe", "\n", "model", ".", "pgru_update_trained_items", "(", "epochs", ",", "epoch", ")", "\n", "all_hus", "=", "[", "]", "\n", "for", "start_end", "in", "starts_ends_tes", ":", "\n", "            ", "sub_all_hus", "=", "model", ".", "pgru_predict", "(", "start_end", ",", "epochs", ",", "epoch", ")", "\n", "all_hus", ".", "extend", "(", "sub_all_hus", ")", "\n", "", "model", ".", "update_trained_users", "(", "all_hus", ")", "\n", "t2", "=", "time", ".", "time", "(", ")", "\n", "times1", ".", "append", "(", "t2", "-", "t1", ")", "\n", "\n", "# \u8ba1\u7b97\u5404\u79cd\u6307\u6807\uff0c\u5e76\u8f93\u51fa\u5f53\u524d\u6700\u4f18\u503c\u3002", "\n", "fun_predict_auc_recall_map_ndcg", "(", "\n", "p", ",", "model", ",", "best", ",", "epoch", ",", "starts_ends_auc", ",", "starts_ends_tes", ",", "\n", "tes_buys_masks", ",", "tes_masks", ",", "\n", "test_i_cou", ",", "test_i_intervals_cumsum", ",", "test_i_cold_active", ")", "\n", "best", ".", "fun_print_best", "(", "epoch", ")", "# \u6bcf\u6b21\u90fd\u53ea\u8f93\u51fa\u5f53\u524d\u6700\u4f18\u7684\u7ed3\u679c", "\n", "t3", "=", "time", ".", "time", "(", ")", "\n", "times2", ".", "append", "(", "t3", "-", "t2", ")", "\n", "tmp1", "=", "'| lam: %s'", "%", "', '", ".", "join", "(", "[", "str", "(", "lam", ")", "for", "lam", "in", "[", "p", "[", "'lambda'", "]", ",", "p", "[", "'lambda_ev'", "]", ",", "p", "[", "'lambda_ae'", "]", "]", "]", ")", "\n", "tmp2", "=", "'| model: {v1}'", ".", "format", "(", "v1", "=", "model_name", ")", "\n", "tmp3", "=", "'| tra_fea_zero: %0.1f'", "%", "p", "[", "'train_fea_zero'", "]", "\n", "print", "(", "'\\tavg. time (train, user, test): %0.0fs,'", "%", "np", ".", "average", "(", "times0", ")", ",", "\n", "'%0.0fs,'", "%", "np", ".", "average", "(", "times1", ")", ",", "'%0.0fs'", "%", "np", ".", "average", "(", "times2", ")", ",", "tmp1", ",", "tmp2", ",", "tmp3", ")", "\n", "# else:", "\n", "#     pass", "\n", "\n", "# ----------------------------------------------------------------------------------------------------------", "\n", "if", "epoch", "==", "p", "[", "'epochs'", "]", "-", "1", ":", "\n", "# \u4fdd\u5b58\u6700\u4f18\u503c\u3001\u6240\u6709\u7684\u635f\u5931\u503c\u3002", "\n", "            ", "print", "(", "\"\\t-----------------------------------------------------------------\"", ")", "\n", "print", "(", "\"\\tBest and losses saving ...\"", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "split", "(", "__file__", ")", "[", "0", "]", ",", "'..'", ",", "'Results_best_and_losses'", ",", "PATH", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", ")", "\n", "fun_save_best_and_losses", "(", "path", ",", "model_name", "+", "' - denoise'", ",", "epoch", ",", "p", ",", "best", ",", "losses", ")", "\n", "\n", "", "", "for", "i", "in", "p", ".", "items", "(", ")", ":", "\n", "        ", "print", "(", "i", ")", "\n", "", "print", "(", "'\\t the current Class name is: {val}'", ".", "format", "(", "val", "=", "model_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.main": [[284, 288], ["prog_lstm_parallel.train_valid_or_test"], "function", ["home.repos.pwc.inspect_result.cuiqiang1990_MV-RNN.programs.prog_lstm_parallel.train_valid_or_test"], ["", "@", "exe_time", "# \u653e\u5230\u5f85\u8c03\u7528\u51fd\u6570\u7684\u5b9a\u4e49\u7684\u4e0a\u4e00\u884c", "\n", "def", "main", "(", ")", ":", "\n", "# pas = Params()", "\n", "    ", "train_valid_or_test", "(", ")", "\n", "\n"]]}