{"home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_nuscenes.nu_array2mot_bbox": [[31, 41], ["nuscenes.utils.data_classes.Box", "mot_3d.data_protos.BBox", "pyquaternion.Quaternion", "len"], "function", ["None"], ["def", "nu_array2mot_bbox", "(", "b", ")", ":", "\n", "    ", "nu_box", "=", "Box", "(", "b", "[", ":", "3", "]", ",", "b", "[", "3", ":", "6", "]", ",", "Quaternion", "(", "b", "[", "6", ":", "10", "]", ")", ")", "\n", "mot_bbox", "=", "BBox", "(", "\n", "x", "=", "nu_box", ".", "center", "[", "0", "]", ",", "y", "=", "nu_box", ".", "center", "[", "1", "]", ",", "z", "=", "nu_box", ".", "center", "[", "2", "]", ",", "\n", "w", "=", "nu_box", ".", "wlh", "[", "0", "]", ",", "l", "=", "nu_box", ".", "wlh", "[", "1", "]", ",", "h", "=", "nu_box", ".", "wlh", "[", "2", "]", ",", "\n", "o", "=", "nu_box", ".", "orientation", ".", "yaw_pitch_roll", "[", "0", "]", "\n", ")", "\n", "if", "len", "(", "b", ")", "==", "11", ":", "\n", "        ", "mot_bbox", ".", "s", "=", "b", "[", "-", "1", "]", "\n", "", "return", "mot_bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_nuscenes.load_gt_bboxes": [[42, 54], ["numpy.load", "list", "enumerate", "mot_3d.inst_filter", "os.path.join", "list.append", "enumerate", "mot_bboxes[].append", "mot_3d.data_protos.BBox.bbox2array", "main_nuscenes.nu_array2mot_bbox"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.inst_filter", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.nu_array2mot_bbox"], ["", "def", "load_gt_bboxes", "(", "data_folder", ",", "type_token", ",", "segment_name", ")", ":", "\n", "    ", "gt_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'gt_info'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "allow_pickle", "=", "True", ")", "\n", "ids", ",", "inst_types", ",", "bboxes", "=", "gt_info", "[", "'ids'", "]", ",", "gt_info", "[", "'types'", "]", ",", "gt_info", "[", "'bboxes'", "]", "\n", "\n", "mot_bboxes", "=", "list", "(", ")", "\n", "for", "_", ",", "frame_bboxes", "in", "enumerate", "(", "bboxes", ")", ":", "\n", "        ", "mot_bboxes", ".", "append", "(", "[", "]", ")", "\n", "for", "_", ",", "b", "in", "enumerate", "(", "frame_bboxes", ")", ":", "\n", "            ", "mot_bboxes", "[", "-", "1", "]", ".", "append", "(", "BBox", ".", "bbox2array", "(", "nu_array2mot_bbox", "(", "b", ")", ")", ")", "\n", "", "", "gt_ids", ",", "gt_bboxes", "=", "utils", ".", "inst_filter", "(", "ids", ",", "mot_bboxes", ",", "inst_types", ",", "\n", "type_field", "=", "type_token", ",", "id_trans", "=", "True", ")", "\n", "return", "gt_bboxes", ",", "gt_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_nuscenes.frame_visualization": [[55, 75], ["mot_3d.Visualizer2D", "enumerate", "visualization.Visualizer2D.save", "visualization.Visualizer2D.close", "visualization.Visualizer2D.handler_pc", "enumerate", "visualization.Visualizer2D.handler_box", "zip", "mot_3d.data_protos.Validity.valid", "visualization.Visualizer2D.handler_box", "visualization.Visualizer2D.handler_box", "visualization.Visualizer2D.handler_box"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.save", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_pc", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.valid", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box"], ["", "def", "frame_visualization", "(", "bboxes", ",", "ids", ",", "states", ",", "gt_bboxes", "=", "None", ",", "gt_ids", "=", "None", ",", "pc", "=", "None", ",", "dets", "=", "None", ",", "name", "=", "''", ")", ":", "\n", "    ", "visualizer", "=", "visualization", ".", "Visualizer2D", "(", "name", "=", "name", ",", "figsize", "=", "(", "12", ",", "12", ")", ")", "\n", "if", "pc", "is", "not", "None", ":", "\n", "        ", "visualizer", ".", "handler_pc", "(", "pc", ")", "\n", "\n", "", "if", "gt_bboxes", "is", "not", "None", ":", "\n", "        ", "for", "_", ",", "bbox", "in", "enumerate", "(", "gt_bboxes", ")", ":", "\n", "            ", "visualizer", ".", "handler_box", "(", "bbox", ",", "message", "=", "''", ",", "color", "=", "'black'", ")", "\n", "", "", "dets", "=", "[", "d", "for", "d", "in", "dets", "if", "d", ".", "s", ">=", "0.01", "]", "\n", "for", "det", "in", "dets", ":", "\n", "        ", "visualizer", ".", "handler_box", "(", "det", ",", "message", "=", "'%.2f'", "%", "det", ".", "s", ",", "color", "=", "'gray'", ",", "linestyle", "=", "'dashed'", ")", "\n", "", "for", "_", ",", "(", "bbox", ",", "id", ",", "state_string", ")", "in", "enumerate", "(", "zip", "(", "bboxes", ",", "ids", ",", "states", ")", ")", ":", "\n", "        ", "if", "Validity", ".", "valid", "(", "state_string", ")", ":", "\n", "            ", "visualizer", ".", "handler_box", "(", "bbox", ",", "message", "=", "'%.2f %s'", "%", "(", "bbox", ".", "s", ",", "id", ")", ",", "color", "=", "'red'", ")", "\n", "", "else", ":", "\n", "            ", "visualizer", ".", "handler_box", "(", "bbox", ",", "message", "=", "'%.2f %s'", "%", "(", "bbox", ".", "s", ",", "id", ")", ",", "color", "=", "'light_blue'", ")", "\n", "# visualizer.show()", "\n", "", "", "save_path", "=", "'./{:}.png'", ".", "format", "(", "name", ")", "\n", "visualizer", ".", "save", "(", "save_path", ")", "\n", "visualizer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_nuscenes.sequence_mot": [[76, 110], ["mot_3d.mot.MOTModel", "len", "range", "list", "list", "list", "list", "next", "mot_3d.frame_data.FrameData", "mot_3d.mot.MOTModel.frame_mot", "IDs.append", "bboxes.append", "states.append", "types.append", "print", "main_nuscenes.frame_visualization", "mot_3d.data_protos.BBox.bbox2array"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.mot.MOTModel.frame_mot", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_waymo.frame_visualization", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["", "def", "sequence_mot", "(", "configs", ",", "data_loader", ",", "obj_type", ",", "sequence_id", ",", "gt_bboxes", "=", "None", ",", "gt_ids", "=", "None", ",", "visualize", "=", "False", ")", ":", "\n", "    ", "tracker", "=", "MOTModel", "(", "configs", ")", "\n", "frame_num", "=", "len", "(", "data_loader", ")", "\n", "IDs", ",", "bboxes", ",", "states", ",", "types", "=", "list", "(", ")", ",", "list", "(", ")", ",", "list", "(", ")", ",", "list", "(", ")", "\n", "\n", "for", "frame_index", "in", "range", "(", "data_loader", ".", "cur_frame", ",", "frame_num", ")", ":", "\n", "        ", "if", "frame_index", "%", "10", "==", "0", ":", "\n", "            ", "print", "(", "'TYPE {:} SEQ {:} Frame {:} / {:}'", ".", "format", "(", "obj_type", ",", "sequence_id", ",", "frame_index", "+", "1", ",", "frame_num", ")", ")", "\n", "\n", "# input data", "\n", "", "frame_data", "=", "next", "(", "data_loader", ")", "\n", "frame_data", "=", "FrameData", "(", "dets", "=", "frame_data", "[", "'dets'", "]", ",", "ego", "=", "frame_data", "[", "'ego'", "]", ",", "pc", "=", "frame_data", "[", "'pc'", "]", ",", "\n", "det_types", "=", "frame_data", "[", "'det_types'", "]", ",", "aux_info", "=", "frame_data", "[", "'aux_info'", "]", ",", "time_stamp", "=", "frame_data", "[", "'time_stamp'", "]", ")", "\n", "\n", "# mot", "\n", "results", "=", "tracker", ".", "frame_mot", "(", "frame_data", ")", "\n", "result_pred_bboxes", "=", "[", "trk", "[", "0", "]", "for", "trk", "in", "results", "]", "\n", "result_pred_ids", "=", "[", "trk", "[", "1", "]", "for", "trk", "in", "results", "]", "\n", "result_pred_states", "=", "[", "trk", "[", "2", "]", "for", "trk", "in", "results", "]", "\n", "result_types", "=", "[", "trk", "[", "3", "]", "for", "trk", "in", "results", "]", "\n", "\n", "# visualization", "\n", "if", "visualize", ":", "\n", "            ", "frame_visualization", "(", "result_pred_bboxes", ",", "result_pred_ids", ",", "result_pred_states", ",", "\n", "gt_bboxes", "[", "frame_index", "]", ",", "gt_ids", "[", "frame_index", "]", ",", "frame_data", ".", "pc", ",", "dets", "=", "frame_data", ".", "dets", ",", "name", "=", "'{:}_{:}'", ".", "format", "(", "args", ".", "name", ",", "frame_index", ")", ")", "\n", "\n", "# wrap for output", "\n", "", "IDs", ".", "append", "(", "result_pred_ids", ")", "\n", "result_pred_bboxes", "=", "[", "BBox", ".", "bbox2array", "(", "bbox", ")", "for", "bbox", "in", "result_pred_bboxes", "]", "\n", "bboxes", ".", "append", "(", "result_pred_bboxes", ")", "\n", "states", ".", "append", "(", "result_pred_states", ")", "\n", "types", ".", "append", "(", "result_types", ")", "\n", "\n", "", "return", "IDs", ",", "bboxes", ",", "states", ",", "types", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_nuscenes.main": [[112, 147], ["os.path.join", "sorted", "yaml.load", "enumerate", "os.listdir", "open", "print", "data_loader.NuScenesLoader", "main_nuscenes.sequence_mot", "len", "range", "numpy.savez_compressed", "os.path.join", "file_name.split", "len", "range", "os.path.join", "len", "os.path.exists", "os.path.join"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_waymo.sequence_mot"], ["", "def", "main", "(", "name", ",", "obj_types", ",", "config_path", ",", "data_folder", ",", "det_data_folder", ",", "result_folder", ",", "start_frame", "=", "0", ",", "token", "=", "0", ",", "process", "=", "1", ")", ":", "\n", "    ", "for", "obj_type", "in", "obj_types", ":", "\n", "        ", "summary_folder", "=", "os", ".", "path", ".", "join", "(", "result_folder", ",", "'summary'", ",", "obj_type", ")", "\n", "# simply knowing about all the segments", "\n", "file_names", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ")", ")", ")", "\n", "if", "args", ".", "skip", ":", "\n", "            ", "file_names", "=", "[", "fname", "for", "fname", "in", "file_names", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "summary_folder", ",", "fname", ")", ")", "]", "\n", "\n", "# load model configs", "\n", "", "configs", "=", "yaml", ".", "load", "(", "open", "(", "config_path", ",", "'r'", ")", ")", "\n", "\n", "for", "file_index", ",", "file_name", "in", "enumerate", "(", "file_names", "[", ":", "]", ")", ":", "\n", "            ", "if", "file_index", "%", "process", "!=", "token", ":", "\n", "                ", "continue", "\n", "", "print", "(", "'START TYPE {:} SEQ {:} / {:}'", ".", "format", "(", "obj_type", ",", "file_index", "+", "1", ",", "len", "(", "file_names", ")", ")", ")", "\n", "segment_name", "=", "file_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "\n", "data_loader", "=", "NuScenesLoader", "(", "configs", ",", "[", "obj_type", "]", ",", "segment_name", ",", "data_folder", ",", "det_data_folder", ",", "start_frame", ")", "\n", "\n", "# if not args.test:", "\n", "#     gt_bboxes, gt_ids = load_gt_bboxes(data_folder, [obj_type], segment_name)", "\n", "# else:", "\n", "#     gt_bboxes, gt_ids = [None for i in range(len(data_loader))], [None for i in range(len(data_loader))]", "\n", "\n", "\n", "ids", ",", "bboxes", ",", "states", ",", "types", "=", "sequence_mot", "(", "configs", ",", "data_loader", ",", "obj_type", ",", "file_index", ",", "None", ",", "None", ",", "args", ".", "visualize", ")", "\n", "\n", "frame_num", "=", "len", "(", "ids", ")", "\n", "for", "frame_index", "in", "range", "(", "frame_num", ")", ":", "\n", "                ", "id_num", "=", "len", "(", "ids", "[", "frame_index", "]", ")", "\n", "for", "i", "in", "range", "(", "id_num", ")", ":", "\n", "                    ", "ids", "[", "frame_index", "]", "[", "i", "]", "=", "'{:}_{:}'", ".", "format", "(", "file_index", ",", "ids", "[", "frame_index", "]", "[", "i", "]", ")", "\n", "\n", "", "", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "summary_folder", ",", "'{}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "ids", "=", "ids", ",", "bboxes", "=", "bboxes", ",", "states", "=", "states", ",", "types", "=", "types", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_waymo.load_gt_bboxes": [[30, 42], ["numpy.load", "numpy.load", "mot_3d.inst_filter", "sorted", "main_waymo.gt_bbox2world", "os.path.join", "os.path.join", "mot_3d.str2int", "np.load.keys", "str"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.inst_filter", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_waymo.gt_bbox2world", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.str2int"], ["", "def", "load_gt_bboxes", "(", "gt_folder", ",", "data_folder", ",", "segment_name", ",", "type_token", ")", ":", "\n", "    ", "gt_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "gt_folder", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "ego_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "bboxes", ",", "ids", ",", "inst_types", "=", "gt_info", "[", "'bboxes'", "]", ",", "gt_info", "[", "'ids'", "]", ",", "gt_info", "[", "'types'", "]", "\n", "gt_ids", ",", "gt_bboxes", "=", "utils", ".", "inst_filter", "(", "ids", ",", "bboxes", ",", "inst_types", ",", "type_field", "=", "[", "type_token", "]", ",", "id_trans", "=", "True", ")", "\n", "\n", "ego_keys", "=", "sorted", "(", "utils", ".", "str2int", "(", "ego_info", ".", "keys", "(", ")", ")", ")", "\n", "egos", "=", "[", "ego_info", "[", "str", "(", "key", ")", "]", "for", "key", "in", "ego_keys", "]", "\n", "gt_bboxes", "=", "gt_bbox2world", "(", "gt_bboxes", ",", "egos", ")", "\n", "return", "gt_bboxes", ",", "gt_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_waymo.gt_bbox2world": [[44, 52], ["len", "range", "len", "range", "mot_3d.data_protos.BBox.bbox2world"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2world"], ["", "def", "gt_bbox2world", "(", "bboxes", ",", "egos", ")", ":", "\n", "    ", "frame_num", "=", "len", "(", "egos", ")", "\n", "for", "i", "in", "range", "(", "frame_num", ")", ":", "\n", "        ", "ego", "=", "egos", "[", "i", "]", "\n", "bbox_num", "=", "len", "(", "bboxes", "[", "i", "]", ")", "\n", "for", "j", "in", "range", "(", "bbox_num", ")", ":", "\n", "            ", "bboxes", "[", "i", "]", "[", "j", "]", "=", "BBox", ".", "bbox2world", "(", "ego", ",", "bboxes", "[", "i", "]", "[", "j", "]", ")", "\n", "", "", "return", "bboxes", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_waymo.frame_visualization": [[54, 73], ["mot_3d.Visualizer2D", "enumerate", "enumerate", "visualization.Visualizer2D.show", "visualization.Visualizer2D.save", "visualization.Visualizer2D.close", "pdb.set_trace", "visualization.Visualizer2D.handler_pc", "visualization.Visualizer2D.handler_box", "visualization.Visualizer2D.handler_box", "zip", "mot_3d.data_protos.Validity.agein1", "visualization.Visualizer2D.handler_box", "visualization.Visualizer2D.handler_box", "str", "str"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.show", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.save", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_pc", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.agein1", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box"], ["", "def", "frame_visualization", "(", "bboxes", ",", "ids", ",", "states", ",", "gt_bboxes", "=", "None", ",", "gt_ids", "=", "None", ",", "pc", "=", "None", ",", "dets", "=", "None", ",", "name", "=", "''", ")", ":", "\n", "    ", "visualizer", "=", "visualization", ".", "Visualizer2D", "(", "name", "=", "name", ",", "figsize", "=", "(", "12", ",", "12", ")", ")", "\n", "if", "pc", "is", "not", "None", ":", "\n", "        ", "visualizer", ".", "handler_pc", "(", "pc", ")", "\n", "", "for", "_", ",", "bbox", "in", "enumerate", "(", "gt_bboxes", ")", ":", "\n", "        ", "visualizer", ".", "handler_box", "(", "bbox", ",", "message", "=", "''", ",", "color", "=", "'black'", ")", "\n", "", "dets", "=", "[", "d", "for", "d", "in", "dets", "if", "d", ".", "s", ">=", "0.1", "]", "\n", "for", "det", "in", "dets", ":", "\n", "        ", "visualizer", ".", "handler_box", "(", "det", ",", "message", "=", "'%.2f'", "%", "det", ".", "s", ",", "color", "=", "'green'", ",", "linestyle", "=", "'dashed'", ")", "\n", "", "for", "_", ",", "(", "bbox", ",", "id", ",", "state", ")", "in", "enumerate", "(", "zip", "(", "bboxes", ",", "ids", ",", "states", ")", ")", ":", "\n", "        ", "if", "Validity", ".", "agein1", "(", "state", ")", ":", "\n", "            ", "visualizer", ".", "handler_box", "(", "bbox", ",", "message", "=", "str", "(", "id", ")", ",", "color", "=", "'red'", ")", "\n", "", "else", ":", "\n", "            ", "visualizer", ".", "handler_box", "(", "bbox", ",", "message", "=", "str", "(", "id", ")", ",", "color", "=", "'light_blue'", ")", "\n", "", "", "visualizer", ".", "show", "(", ")", "\n", "visualizer", ".", "save", "(", "'temp.jpg'", ")", "\n", "visualizer", ".", "close", "(", ")", "\n", "import", "pdb", "\n", "pdb", ".", "set_trace", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_waymo.sequence_mot": [[75, 101], ["mot_3d.mot.MOTModel", "len", "range", "list", "list", "list", "list", "next", "mot_3d.frame_data.FrameData", "mot_3d.mot.MOTModel.frame_mot", "IDs.append", "bboxes.append", "states.append", "types.append", "mot_3d.data_protos.BBox.bbox2array"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.mot.MOTModel.frame_mot", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["", "def", "sequence_mot", "(", "configs", ",", "data_loader", ":", "WaymoLoader", ",", "sequence_id", ",", "gt_bboxes", "=", "None", ",", "gt_ids", "=", "None", ",", "visualize", "=", "False", ")", ":", "\n", "    ", "tracker", "=", "MOTModel", "(", "configs", ")", "\n", "frame_num", "=", "len", "(", "data_loader", ")", "\n", "IDs", ",", "bboxes", ",", "states", ",", "types", "=", "list", "(", ")", ",", "list", "(", ")", ",", "list", "(", ")", ",", "list", "(", ")", "\n", "for", "frame_index", "in", "range", "(", "data_loader", ".", "cur_frame", ",", "frame_num", ")", ":", "\n", "# if frame_index%50==0:", "\n", "#     print('TYPE {:} SEQ {:} Frame {:} / {:}'.format(data_loader.type_token, sequence_id + 1, frame_index + 1, frame_num))", "\n", "# input data", "\n", "        ", "frame_data", "=", "next", "(", "data_loader", ")", "\n", "frame_data", "=", "FrameData", "(", "dets", "=", "frame_data", "[", "'dets'", "]", ",", "ego", "=", "frame_data", "[", "'ego'", "]", ",", "pc", "=", "frame_data", "[", "'pc'", "]", ",", "\n", "det_types", "=", "frame_data", "[", "'det_types'", "]", ",", "aux_info", "=", "frame_data", "[", "'aux_info'", "]", ",", "time_stamp", "=", "frame_data", "[", "'time_stamp'", "]", ")", "\n", "\n", "# mot", "\n", "results", "=", "tracker", ".", "frame_mot", "(", "frame_data", ")", "\n", "result_pred_bboxes", "=", "[", "trk", "[", "0", "]", "for", "trk", "in", "results", "]", "\n", "result_pred_ids", "=", "[", "trk", "[", "1", "]", "for", "trk", "in", "results", "]", "\n", "result_pred_states", "=", "[", "trk", "[", "2", "]", "for", "trk", "in", "results", "]", "\n", "result_types", "=", "[", "trk", "[", "3", "]", "for", "trk", "in", "results", "]", "\n", "\n", "# wrap for output", "\n", "IDs", ".", "append", "(", "result_pred_ids", ")", "\n", "result_pred_bboxes", "=", "[", "BBox", ".", "bbox2array", "(", "bbox", ")", "for", "bbox", "in", "result_pred_bboxes", "]", "\n", "bboxes", ".", "append", "(", "result_pred_bboxes", ")", "\n", "states", ".", "append", "(", "result_pred_states", ")", "\n", "types", ".", "append", "(", "result_types", ")", "\n", "", "return", "IDs", ",", "bboxes", ",", "states", ",", "types", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_waymo.main": [[103, 129], ["os.path.join", "sorted", "yaml.load", "enumerate", "os.listdir", "open", "print", "data_loader.WaymoLoader", "main_waymo.sequence_mot", "numpy.savez_compressed", "os.path.join", "file_name.split", "os.path.join", "len", "os.path.exists", "os.path.join"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.None.main_waymo.sequence_mot"], ["", "def", "main", "(", "name", ",", "obj_type", ",", "config_path", ",", "data_folder", ",", "det_data_folder", ",", "result_folder", ",", "start_frame", "=", "0", ",", "token", "=", "0", ",", "process", "=", "1", ")", ":", "\n", "    ", "summary_folder", "=", "os", ".", "path", ".", "join", "(", "result_folder", ",", "'summary'", ",", "obj_type", ")", "\n", "# simply knowing about all the segments", "\n", "file_names", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ")", ")", ")", "\n", "if", "args", ".", "skip", ":", "\n", "        ", "file_names", "=", "[", "fname", "for", "fname", "in", "file_names", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "summary_folder", ",", "fname", ")", ")", "]", "\n", "\n", "# load model configs", "\n", "", "configs", "=", "yaml", ".", "load", "(", "open", "(", "config_path", ",", "'r'", ")", ")", "\n", "\n", "if", "obj_type", "==", "'vehicle'", ":", "\n", "        ", "type_token", "=", "1", "\n", "", "elif", "obj_type", "==", "'pedestrian'", ":", "\n", "        ", "type_token", "=", "2", "\n", "", "elif", "obj_type", "==", "'cyclist'", ":", "\n", "        ", "type_token", "=", "4", "\n", "", "for", "file_index", ",", "file_name", "in", "enumerate", "(", "file_names", "[", ":", "]", ")", ":", "\n", "        ", "if", "file_index", "%", "process", "!=", "token", ":", "\n", "            ", "continue", "\n", "", "print", "(", "'START TYPE {:} SEQ {:} / {:}'", ".", "format", "(", "obj_type", ",", "file_index", "+", "1", ",", "len", "(", "file_names", ")", ")", ")", "\n", "segment_name", "=", "file_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "data_loader", "=", "WaymoLoader", "(", "configs", ",", "[", "type_token", "]", ",", "segment_name", ",", "data_folder", ",", "det_data_folder", ",", "start_frame", ")", "\n", "\n", "ids", ",", "bboxes", ",", "states", ",", "types", "=", "sequence_mot", "(", "configs", ",", "data_loader", ",", "file_index", ")", "\n", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "summary_folder", ",", "'{}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "ids", "=", "ids", ",", "bboxes", "=", "bboxes", ",", "states", "=", "states", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.detection_nms.nu_array2mot_bbox": [[25, 35], ["nuscenes.utils.data_classes.Box", "mot_3d.data_protos.BBox", "pyquaternion.Quaternion", "len"], "function", ["None"], ["def", "nu_array2mot_bbox", "(", "b", ")", ":", "\n", "    ", "nu_box", "=", "Box", "(", "b", "[", ":", "3", "]", ",", "b", "[", "3", ":", "6", "]", ",", "Quaternion", "(", "b", "[", "6", ":", "10", "]", ")", ")", "\n", "mot_bbox", "=", "BBox", "(", "\n", "x", "=", "nu_box", ".", "center", "[", "0", "]", ",", "y", "=", "nu_box", ".", "center", "[", "1", "]", ",", "z", "=", "nu_box", ".", "center", "[", "2", "]", ",", "\n", "w", "=", "nu_box", ".", "wlh", "[", "0", "]", ",", "l", "=", "nu_box", ".", "wlh", "[", "1", "]", ",", "h", "=", "nu_box", ".", "wlh", "[", "2", "]", ",", "\n", "o", "=", "nu_box", ".", "orientation", ".", "yaw_pitch_roll", "[", "0", "]", "\n", ")", "\n", "if", "len", "(", "b", ")", "==", "11", ":", "\n", "        ", "mot_bbox", ".", "s", "=", "b", "[", "-", "1", "]", "\n", "", "return", "mot_bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.detection_nms.bbox_array2nuscenes_format": [[37, 53], ["bbox_array[].tolist", "bbox_array[].tolist", "numpy.array", "pyquaternion.Quaternion", "pyquaternion.Quaternion.q.tolist", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "bbox_array2nuscenes_format", "(", "bbox_array", ")", ":", "\n", "    ", "translation", "=", "bbox_array", "[", ":", "3", "]", ".", "tolist", "(", ")", "\n", "size", "=", "bbox_array", "[", "4", ":", "7", "]", ".", "tolist", "(", ")", "\n", "size", "=", "[", "size", "[", "1", "]", ",", "size", "[", "0", "]", ",", "size", "[", "2", "]", "]", "\n", "score", "=", "bbox_array", "[", "-", "1", "]", "\n", "\n", "yaw", "=", "bbox_array", "[", "3", "]", "\n", "rot_matrix", "=", "np", ".", "array", "(", "[", "[", "np", ".", "cos", "(", "yaw", ")", ",", "-", "np", ".", "sin", "(", "yaw", ")", ",", "0", ",", "0", "]", ",", "\n", "[", "np", ".", "sin", "(", "yaw", ")", ",", "np", ".", "cos", "(", "yaw", ")", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "0", ",", "1", ",", "0", ",", "1", "]", "]", ")", "\n", "q", "=", "Quaternion", "(", "matrix", "=", "rot_matrix", ")", "\n", "rotation", "=", "q", ".", "q", ".", "tolist", "(", ")", "\n", "\n", "result", "=", "translation", "+", "size", "+", "rotation", "+", "[", "score", "]", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.detection_nms.load_gt_bboxes": [[55, 71], ["numpy.load", "numpy.load", "mot_3d.inst_filter", "os.path.join", "os.path.join", "len", "range", "range", "len", "mot_3d.data_protos.BBox.bbox2array", "detection_nms.nu_array2mot_bbox"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.inst_filter", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.nu_array2mot_bbox"], ["", "def", "load_gt_bboxes", "(", "gt_folder", ",", "data_folder", ",", "segment_name", ")", ":", "\n", "    ", "gt_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "gt_folder", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "ego_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "bboxes", ",", "ids", ",", "inst_types", "=", "gt_info", "[", "'bboxes'", "]", ",", "gt_info", "[", "'ids'", "]", ",", "gt_info", "[", "'types'", "]", "\n", "\n", "if", "args", ".", "dataset", "==", "'nuscenes'", ":", "\n", "        ", "frame_num", "=", "len", "(", "bboxes", ")", "\n", "for", "i", "in", "range", "(", "frame_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "bboxes", "[", "i", "]", ")", ")", ":", "\n", "                ", "bboxes", "[", "i", "]", "[", "j", "]", "=", "BBox", ".", "bbox2array", "(", "nu_array2mot_bbox", "(", "bboxes", "[", "i", "]", "[", "j", "]", ")", ")", "\n", "\n", "", "", "", "gt_ids", ",", "gt_bboxes", "=", "utils", ".", "inst_filter", "(", "ids", ",", "bboxes", ",", "inst_types", ",", "id_trans", "=", "True", ")", "\n", "gt_ids", ",", "gt_bboxes", "=", "gt_ids", "[", "0", "]", ",", "gt_bboxes", "[", "0", "]", "\n", "return", "gt_bboxes", ",", "gt_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.detection_nms.load_pcs": [[73, 87], ["numpy.load", "sorted", "os.path.join", "mot_3d.str2int", "numpy.load", "np.load.keys", "os.path.join", "numpy.load", "str", "os.path.join", "str"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.str2int"], ["", "def", "load_pcs", "(", "data_folder", ",", "segment_name", ")", ":", "\n", "    ", "ego_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "ego_keys", "=", "sorted", "(", "utils", ".", "str2int", "(", "ego_info", ".", "keys", "(", ")", ")", ")", "\n", "egos", "=", "[", "ego_info", "[", "str", "(", "key", ")", "]", "for", "key", "in", "ego_keys", "]", "\n", "\n", "if", "args", ".", "dataset", "==", "'waymo'", ":", "\n", "        ", "pcs", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'pc'", ",", "'clean_pc'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'nuscenes'", ":", "\n", "        ", "pcs", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'pc'", ",", "'raw_pc'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "", "result", "=", "[", "pcs", "[", "str", "(", "key", ")", "]", "for", "key", "in", "ego_keys", "]", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.detection_nms.load_dets": [[89, 115], ["numpy.load", "numpy.load", "sorted", "os.path.join", "os.path.join", "mot_3d.str2int", "range", "np.load.keys", "len", "range", "range", "str", "range", "len", "dets[].append", "len", "range", "len", "mot_3d.data_protos.BBox.array2bbox", "range", "len", "dets[].append", "len", "detection_nms.nu_array2mot_bbox"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.str2int", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.nu_array2mot_bbox"], ["", "def", "load_dets", "(", "det_data_folder", ",", "data_folder", ",", "segment_name", ")", ":", "\n", "    ", "dets_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "det_data_folder", ",", "'dets'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "dets_bboxes", "=", "dets_info", "[", "'bboxes'", "]", "\n", "inst_types", "=", "dets_info", "[", "'types'", "]", "\n", "\n", "ego_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "ego_keys", "=", "sorted", "(", "utils", ".", "str2int", "(", "ego_info", ".", "keys", "(", ")", ")", ")", "\n", "egos", "=", "[", "ego_info", "[", "str", "(", "key", ")", "]", "for", "key", "in", "ego_keys", "]", "\n", "\n", "if", "args", ".", "dataset", "==", "'waymo'", ":", "\n", "        ", "det_bboxes", "=", "[", "dets_bboxes", "[", "key", "]", "for", "key", "in", "ego_keys", "]", "\n", "inst_types", "=", "[", "inst_types", "[", "key", "]", "for", "key", "in", "ego_keys", "]", "\n", "dets", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "dets_bboxes", ")", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "det_bboxes", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "det_bboxes", "[", "i", "]", ")", ")", ":", "\n", "                ", "dets", "[", "i", "]", ".", "append", "(", "BBox", ".", "array2bbox", "(", "dets_bboxes", "[", "i", "]", "[", "j", "]", ")", ")", "\n", "", "", "", "elif", "args", ".", "dataset", "==", "'nuscenes'", ":", "\n", "        ", "det_bboxes", "=", "[", "dets_bboxes", "[", "key", "]", "for", "key", "in", "ego_keys", "]", "\n", "inst_types", "=", "[", "inst_types", "[", "key", "]", "for", "key", "in", "ego_keys", "]", "\n", "dets", "=", "[", "[", "]", "for", "i", "in", "range", "(", "len", "(", "dets_bboxes", ")", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "det_bboxes", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "det_bboxes", "[", "i", "]", ")", ")", ":", "\n", "                ", "dets", "[", "i", "]", ".", "append", "(", "nu_array2mot_bbox", "(", "dets_bboxes", "[", "i", "]", "[", "j", "]", ")", ")", "\n", "", "", "", "return", "dets", ",", "inst_types", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.detection_nms.main": [[117, 165], ["sorted", "enumerate", "os.listdir", "print", "detection_nms.load_dets", "len", "list", "list", "range", "numpy.savez_compressed", "os.path.join", "file_name.split", "os.path.join", "detection_nms.load_gt_bboxes", "detection_nms.load_pcs", "py_nms.nms", "list.append", "list.append", "os.path.join", "len", "mot_3d.Visualizer2D", "enumerate", "enumerate", "visualization.Visualizer2D.show", "visualization.Visualizer2D.close", "print", "os.path.exists", "visualization.Visualizer2D.handler_box", "visualization.Visualizer2D.handler_box", "mot_3d.data_protos.BBox.bbox2array", "os.path.join", "detection_nms.bbox_array2nuscenes_format", "mot_3d.data_protos.BBox.bbox2array", "str"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.detection_nms.load_dets", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.detection_nms.load_gt_bboxes", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.detection_nms.load_pcs", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.nms.nms", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.show", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.result_creation.bbox_array2nuscenes_format", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["", "def", "main", "(", "det_name", ",", "thres", ",", "data_folder", ",", "gt_folder", ",", "det_folder", ",", "output_folder", ",", "token", ",", "process", ")", ":", "\n", "    ", "file_names", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ")", ")", ")", "\n", "if", "args", ".", "skip", ":", "\n", "        ", "file_names", "=", "[", "fname", "for", "fname", "in", "file_names", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'dets'", ",", "fname", ")", ")", "]", "\n", "\n", "", "for", "file_index", ",", "file_name", "in", "enumerate", "(", "file_names", "[", ":", "]", ")", ":", "\n", "        ", "if", "file_index", "%", "process", "!=", "token", ":", "\n", "            ", "continue", "\n", "", "print", "(", "'SEQ {:} / {:}'", ".", "format", "(", "file_index", "+", "1", ",", "len", "(", "file_names", ")", ")", ")", "\n", "segment_name", "=", "file_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "dets", ",", "inst_types", "=", "load_dets", "(", "os", ".", "path", ".", "join", "(", "det_folder", ",", "det_name", ")", ",", "data_folder", ",", "segment_name", ")", "\n", "if", "args", ".", "visualize", ":", "\n", "            ", "gt_bboxes", ",", "_", "=", "load_gt_bboxes", "(", "gt_folder", ",", "data_folder", ",", "segment_name", ")", "\n", "pcs", "=", "load_pcs", "(", "data_folder", ",", "segment_name", ")", "\n", "\n", "", "frame_num", "=", "len", "(", "inst_types", ")", "\n", "result_bboxes", "=", "list", "(", ")", "\n", "result_types", "=", "list", "(", ")", "\n", "for", "frame_index", "in", "range", "(", "0", ",", "frame_num", ")", ":", "\n", "            ", "frame_dets", "=", "dets", "[", "frame_index", "]", "\n", "frame_types", "=", "inst_types", "[", "frame_index", "]", "\n", "\n", "# nms", "\n", "nms_dets", ",", "nms_types", "=", "py_nms", ".", "nms", "(", "frame_dets", ",", "frame_types", ",", "threshold_low", "=", "thres", ",", "threshold_high", "=", "1.0", ")", "\n", "if", "args", ".", "visualize", ":", "\n", "                ", "vis", "=", "visualization", ".", "Visualizer2D", "(", "name", "=", "'{:}'", ".", "format", "(", "frame_index", ")", ",", "figsize", "=", "(", "20", ",", "20", ")", ")", "\n", "# vis.handler_pc(pcs[frame_index])", "\n", "for", "i", ",", "det", "in", "enumerate", "(", "frame_dets", ")", ":", "\n", "                    ", "vis", ".", "handler_box", "(", "det", ",", "'%.2f'", "%", "det", ".", "s", ",", "color", "=", "'light_blue'", ",", "linestyle", "=", "'dashed'", ")", "\n", "", "for", "i", ",", "det", "in", "enumerate", "(", "nms_dets", ")", ":", "\n", "                    ", "vis", ".", "handler_box", "(", "det", ",", "'%s %.2f'", "%", "(", "str", "(", "nms_types", "[", "i", "]", ")", ",", "det", ".", "s", ")", ",", "color", "=", "'red'", ")", "\n", "", "vis", ".", "show", "(", ")", "\n", "vis", ".", "close", "(", ")", "\n", "\n", "", "if", "args", ".", "dataset", "==", "'waymo'", ":", "\n", "                ", "frame_bboxes", "=", "[", "BBox", ".", "bbox2array", "(", "det", ")", "for", "det", "in", "nms_dets", "]", "\n", "", "elif", "args", ".", "dataset", "==", "'nuscenes'", ":", "\n", "                ", "frame_bboxes", "=", "[", "bbox_array2nuscenes_format", "(", "BBox", ".", "bbox2array", "(", "det", ")", ")", "for", "det", "in", "nms_dets", "]", "\n", "", "frame_types", "=", "nms_types", "\n", "result_bboxes", ".", "append", "(", "frame_bboxes", ")", "\n", "result_types", ".", "append", "(", "frame_types", ")", "\n", "\n", "if", "(", "frame_index", "+", "1", ")", "%", "50", "==", "0", ":", "\n", "                ", "print", "(", "'SEQ {:} FRAME {:} / {:}'", ".", "format", "(", "file_index", "+", "1", ",", "frame_index", "+", "1", ",", "frame_num", ")", ")", "\n", "\n", "", "", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'dets'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "types", "=", "result_types", ",", "bboxes", "=", "result_bboxes", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.nms.weird_bbox": [[7, 12], ["None"], "function", ["None"], ["    ", "if", "bbox", ".", "l", "<=", "0", "or", "bbox", ".", "w", "<=", "0", "or", "bbox", ".", "h", "<=", "0", ":", "\n", "        ", "return", "True", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.nms.nms": [[14, 82], ["bbox_coarse_hash.BBoxCoarseFilter", "bbox_coarse_hash.BBoxCoarseFilter.bboxes2dict", "numpy.asarray", "numpy.asarray", "list", "list", "numpy.argsort", "nms.weird_bbox", "bbox_coarse_hash.BBoxCoarseFilter.related_bboxes", "numpy.isin", "numpy.asarray", "len", "numpy.zeros", "enumerate", "numpy.where", "numpy.where", "numpy.isin", "len", "numpy.sum", "list", "numpy.vstack", "data_protos.BBox.array2bbox", "list.append", "list.append", "list.append", "list.append", "utils.iou3d", "numpy.argmax", "numpy.where", "np.vstack.append", "numpy.sum", "yaws[].copy", "numpy.append", "numpy.median", "numpy.median", "data_protos.BBox.bbox2array", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.bboxes2dict", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.nms.weird_bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.related_bboxes", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.iou3d", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["    ", "\"\"\" keep the bboxes with overlap <= threshold\n    \"\"\"", "\n", "dets_coarse_filter", "=", "BBoxCoarseFilter", "(", "grid_size", "=", "100", ",", "scaler", "=", "100", ")", "\n", "dets_coarse_filter", ".", "bboxes2dict", "(", "dets", ")", "\n", "scores", "=", "np", ".", "asarray", "(", "[", "det", ".", "s", "for", "det", "in", "dets", "]", ")", "\n", "yaws", "=", "np", ".", "asarray", "(", "[", "det", ".", "o", "for", "det", "in", "dets", "]", ")", "\n", "order", "=", "np", ".", "argsort", "(", "scores", ")", "[", ":", ":", "-", "1", "]", "\n", "\n", "result", "=", "list", "(", ")", "\n", "result_types", "=", "list", "(", ")", "\n", "while", "order", ".", "size", ">", "0", ":", "\n", "        ", "index", "=", "order", "[", "0", "]", "\n", "\n", "if", "weird_bbox", "(", "dets", "[", "index", "]", ")", ":", "\n", "            ", "order", "=", "order", "[", "1", ":", "]", "\n", "continue", "\n", "\n", "# locate the related bboxes", "\n", "", "filter_indexes", "=", "dets_coarse_filter", ".", "related_bboxes", "(", "dets", "[", "index", "]", ")", "\n", "in_mask", "=", "np", ".", "isin", "(", "order", ",", "filter_indexes", ")", "\n", "related_idxes", "=", "order", "[", "in_mask", "]", "\n", "related_idxes", "=", "np", ".", "asarray", "(", "[", "i", "for", "i", "in", "related_idxes", "if", "inst_types", "[", "i", "]", "==", "inst_types", "[", "index", "]", "]", ")", "\n", "\n", "# compute the ious", "\n", "bbox_num", "=", "len", "(", "related_idxes", ")", "\n", "ious", "=", "np", ".", "zeros", "(", "bbox_num", ")", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "related_idxes", ")", ":", "\n", "            ", "ious", "[", "i", "]", "=", "utils", ".", "iou3d", "(", "dets", "[", "index", "]", ",", "dets", "[", "idx", "]", ")", "[", "1", "]", "\n", "", "related_inds", "=", "np", ".", "where", "(", "ious", ">", "threshold_low", ")", "\n", "related_inds_vote", "=", "np", ".", "where", "(", "ious", ">", "threshold_high", ")", "\n", "order_vote", "=", "related_idxes", "[", "related_inds_vote", "]", "\n", "\n", "if", "len", "(", "order_vote", ")", ">=", "2", ":", "\n", "# keep the bboxes with similar yaw", "\n", "            ", "if", "order_vote", ".", "shape", "[", "0", "]", "<=", "2", ":", "\n", "                ", "score_index", "=", "np", ".", "argmax", "(", "scores", "[", "order_vote", "]", ")", "\n", "median_yaw", "=", "yaws", "[", "order_vote", "]", "[", "score_index", "]", "\n", "", "elif", "order_vote", ".", "shape", "[", "0", "]", "%", "2", "==", "0", ":", "\n", "                ", "tmp_yaw", "=", "yaws", "[", "order_vote", "]", ".", "copy", "(", ")", "\n", "tmp_yaw", "=", "np", ".", "append", "(", "tmp_yaw", ",", "yaws", "[", "order_vote", "]", "[", "0", "]", ")", "\n", "median_yaw", "=", "np", ".", "median", "(", "tmp_yaw", ")", "\n", "", "else", ":", "\n", "                ", "median_yaw", "=", "np", ".", "median", "(", "yaws", "[", "order_vote", "]", ")", "\n", "", "yaw_vote", "=", "np", ".", "where", "(", "np", ".", "abs", "(", "yaws", "[", "order_vote", "]", "-", "median_yaw", ")", "%", "(", "2", "*", "np", ".", "pi", ")", "<", "threshold_yaw", ")", "[", "0", "]", "\n", "order_vote", "=", "order_vote", "[", "yaw_vote", "]", "\n", "\n", "# start weighted voting", "\n", "vote_score_sum", "=", "np", ".", "sum", "(", "scores", "[", "order_vote", "]", ")", "\n", "det_arrays", "=", "list", "(", ")", "\n", "for", "idx", "in", "order_vote", ":", "\n", "                ", "det_arrays", ".", "append", "(", "BBox", ".", "bbox2array", "(", "dets", "[", "idx", "]", ")", "[", "np", ".", "newaxis", ",", ":", "]", ")", "\n", "", "det_arrays", "=", "np", ".", "vstack", "(", "det_arrays", ")", "\n", "avg_bbox_array", "=", "np", ".", "sum", "(", "scores", "[", "order_vote", "]", "[", ":", ",", "np", ".", "newaxis", "]", "*", "det_arrays", ",", "axis", "=", "0", ")", "/", "vote_score_sum", "\n", "bbox", "=", "BBox", ".", "array2bbox", "(", "avg_bbox_array", ")", "\n", "bbox", ".", "s", "=", "scores", "[", "index", "]", "\n", "result", ".", "append", "(", "bbox", ")", "\n", "result_types", ".", "append", "(", "inst_types", "[", "index", "]", ")", "\n", "", "else", ":", "\n", "            ", "result", ".", "append", "(", "dets", "[", "index", "]", ")", "\n", "result_types", ".", "append", "(", "inst_types", "[", "index", "]", ")", "\n", "\n", "# delete the overlapped bboxes", "\n", "", "delete_idxes", "=", "related_idxes", "[", "related_inds", "]", "\n", "in_mask", "=", "np", ".", "isin", "(", "order", ",", "delete_idxes", ",", "invert", "=", "True", ")", "\n", "order", "=", "order", "[", "in_mask", "]", "\n", "\n", "", "return", "result", ",", "result_types", "\n", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.bbox_coarse_hash.BBoxCoarseFilter.__init__": [[9, 13], ["dict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "grid_size", ",", "scaler", "=", "100", ")", ":", "\n", "        ", "self", ".", "gsize", "=", "grid_size", "\n", "self", ".", "scaler", "=", "100", "\n", "self", ".", "bbox_dict", "=", "dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.bbox_coarse_hash.BBoxCoarseFilter.bboxes2dict": [[14, 23], ["enumerate", "bbox_coarse_hash.BBoxCoarseFilter.compute_bbox_key", "bbox_coarse_hash.BBoxCoarseFilter.bbox_dict.keys", "set", "bbox_coarse_hash.BBoxCoarseFilter.bbox_dict[].add"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.compute_bbox_key"], ["", "def", "bboxes2dict", "(", "self", ",", "bboxes", ")", ":", "\n", "        ", "for", "i", ",", "bbox", "in", "enumerate", "(", "bboxes", ")", ":", "\n", "            ", "grid_keys", "=", "self", ".", "compute_bbox_key", "(", "bbox", ")", "\n", "for", "key", "in", "grid_keys", ":", "\n", "                ", "if", "key", "not", "in", "self", ".", "bbox_dict", ".", "keys", "(", ")", ":", "\n", "                    ", "self", ".", "bbox_dict", "[", "key", "]", "=", "set", "(", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "bbox_dict", "[", "key", "]", ".", "add", "(", "i", ")", "\n", "", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.bbox_coarse_hash.BBoxCoarseFilter.compute_bbox_key": [[24, 37], ["numpy.asarray", "numpy.floor().astype", "numpy.floor().astype", "data_protos.BBox.box2corners2d", "numpy.floor", "numpy.floor", "numpy.min", "numpy.max"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d"], ["", "def", "compute_bbox_key", "(", "self", ",", "bbox", ")", ":", "\n", "        ", "corners", "=", "np", ".", "asarray", "(", "BBox", ".", "box2corners2d", "(", "bbox", ")", ")", "\n", "min_keys", "=", "np", ".", "floor", "(", "np", ".", "min", "(", "corners", ",", "axis", "=", "0", ")", "/", "self", ".", "gsize", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "max_keys", "=", "np", ".", "floor", "(", "np", ".", "max", "(", "corners", ",", "axis", "=", "0", ")", "/", "self", ".", "gsize", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "\n", "# enumerate all the corners", "\n", "grid_keys", "=", "[", "\n", "self", ".", "scaler", "*", "min_keys", "[", "0", "]", "+", "min_keys", "[", "1", "]", ",", "\n", "self", ".", "scaler", "*", "min_keys", "[", "0", "]", "+", "max_keys", "[", "1", "]", ",", "\n", "self", ".", "scaler", "*", "max_keys", "[", "0", "]", "+", "min_keys", "[", "1", "]", ",", "\n", "self", ".", "scaler", "*", "max_keys", "[", "0", "]", "+", "max_keys", "[", "1", "]", "\n", "]", "\n", "return", "grid_keys", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.bbox_coarse_hash.BBoxCoarseFilter.related_bboxes": [[38, 47], ["set", "bbox_coarse_hash.BBoxCoarseFilter.compute_bbox_key", "list", "bbox_coarse_hash.BBoxCoarseFilter.bbox_dict.keys", "set.update"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.compute_bbox_key", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update"], ["", "def", "related_bboxes", "(", "self", ",", "bbox", ")", ":", "\n", "        ", "\"\"\" return the list of related bboxes\n        \"\"\"", "\n", "result", "=", "set", "(", ")", "\n", "grid_keys", "=", "self", ".", "compute_bbox_key", "(", "bbox", ")", "\n", "for", "key", "in", "grid_keys", ":", "\n", "            ", "if", "key", "in", "self", ".", "bbox_dict", ".", "keys", "(", ")", ":", "\n", "                ", "result", ".", "update", "(", "self", ".", "bbox_dict", "[", "key", "]", ")", "\n", "", "", "return", "list", "(", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.preprocessing.bbox_coarse_hash.BBoxCoarseFilter.clear": [[48, 50], ["dict"], "methods", ["None"], ["", "def", "clear", "(", "self", ")", ":", "\n", "        ", "self", ".", "bbox_dict", "=", "dict", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.nms.weird_bbox": [[6, 11], ["None"], "function", ["None"], ["def", "weird_bbox", "(", "bbox", ")", ":", "\n", "    ", "if", "bbox", ".", "l", "<=", "0", "or", "bbox", ".", "w", "<=", "0", "or", "bbox", ".", "h", "<=", "0", ":", "\n", "        ", "return", "True", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.nms.nms": [[13, 81], ["py_nms.bbox_coarse_hash.BBoxCoarseFilter", "py_nms.bbox_coarse_hash.BBoxCoarseFilter.bboxes2dict", "numpy.asarray", "numpy.asarray", "list", "list", "numpy.argsort", "nms.weird_bbox", "py_nms.bbox_coarse_hash.BBoxCoarseFilter.related_bboxes", "numpy.isin", "numpy.asarray", "len", "numpy.zeros", "enumerate", "numpy.where", "numpy.where", "numpy.isin", "len", "numpy.sum", "list", "numpy.vstack", "mot_3d.data_protos.BBox.array2bbox", "list.append", "list.append", "list.append", "list.append", "mot_3d.iou3d", "numpy.argmax", "numpy.where", "np.vstack.append", "numpy.sum", "yaws[].copy", "numpy.append", "numpy.median", "numpy.median", "mot_3d.data_protos.BBox.bbox2array", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.bboxes2dict", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.nms.weird_bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.related_bboxes", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.iou3d", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["", "", "def", "nms", "(", "dets", ",", "inst_types", ",", "threshold_low", "=", "0.1", ",", "threshold_high", "=", "0.5", ",", "threshold_yaw", "=", "0.3", ")", ":", "\n", "    ", "\"\"\" keep the bboxes with overlap <= threshold\n    \"\"\"", "\n", "dets_coarse_filter", "=", "BBoxCoarseFilter", "(", "grid_size", "=", "100", ",", "scaler", "=", "100", ")", "\n", "dets_coarse_filter", ".", "bboxes2dict", "(", "dets", ")", "\n", "scores", "=", "np", ".", "asarray", "(", "[", "det", ".", "s", "for", "det", "in", "dets", "]", ")", "\n", "yaws", "=", "np", ".", "asarray", "(", "[", "det", ".", "o", "for", "det", "in", "dets", "]", ")", "\n", "order", "=", "np", ".", "argsort", "(", "scores", ")", "[", ":", ":", "-", "1", "]", "\n", "\n", "result", "=", "list", "(", ")", "\n", "result_types", "=", "list", "(", ")", "\n", "while", "order", ".", "size", ">", "0", ":", "\n", "        ", "index", "=", "order", "[", "0", "]", "\n", "\n", "if", "weird_bbox", "(", "dets", "[", "index", "]", ")", ":", "\n", "            ", "order", "=", "order", "[", "1", ":", "]", "\n", "continue", "\n", "\n", "# locate the related bboxes", "\n", "", "filter_indexes", "=", "dets_coarse_filter", ".", "related_bboxes", "(", "dets", "[", "index", "]", ")", "\n", "in_mask", "=", "np", ".", "isin", "(", "order", ",", "filter_indexes", ")", "\n", "related_idxes", "=", "order", "[", "in_mask", "]", "\n", "related_idxes", "=", "np", ".", "asarray", "(", "[", "i", "for", "i", "in", "related_idxes", "if", "inst_types", "[", "i", "]", "==", "inst_types", "[", "index", "]", "]", ")", "\n", "\n", "# compute the ious", "\n", "bbox_num", "=", "len", "(", "related_idxes", ")", "\n", "ious", "=", "np", ".", "zeros", "(", "bbox_num", ")", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "related_idxes", ")", ":", "\n", "            ", "ious", "[", "i", "]", "=", "utils", ".", "iou3d", "(", "dets", "[", "index", "]", ",", "dets", "[", "idx", "]", ")", "[", "1", "]", "\n", "", "related_inds", "=", "np", ".", "where", "(", "ious", ">", "threshold_low", ")", "\n", "related_inds_vote", "=", "np", ".", "where", "(", "ious", ">", "threshold_high", ")", "\n", "order_vote", "=", "related_idxes", "[", "related_inds_vote", "]", "\n", "\n", "if", "len", "(", "order_vote", ")", ">=", "2", ":", "\n", "# keep the bboxes with similar yaw", "\n", "            ", "if", "order_vote", ".", "shape", "[", "0", "]", "<=", "2", ":", "\n", "                ", "score_index", "=", "np", ".", "argmax", "(", "scores", "[", "order_vote", "]", ")", "\n", "median_yaw", "=", "yaws", "[", "order_vote", "]", "[", "score_index", "]", "\n", "", "elif", "order_vote", ".", "shape", "[", "0", "]", "%", "2", "==", "0", ":", "\n", "                ", "tmp_yaw", "=", "yaws", "[", "order_vote", "]", ".", "copy", "(", ")", "\n", "tmp_yaw", "=", "np", ".", "append", "(", "tmp_yaw", ",", "yaws", "[", "order_vote", "]", "[", "0", "]", ")", "\n", "median_yaw", "=", "np", ".", "median", "(", "tmp_yaw", ")", "\n", "", "else", ":", "\n", "                ", "median_yaw", "=", "np", ".", "median", "(", "yaws", "[", "order_vote", "]", ")", "\n", "", "yaw_vote", "=", "np", ".", "where", "(", "np", ".", "abs", "(", "yaws", "[", "order_vote", "]", "-", "median_yaw", ")", "%", "(", "2", "*", "np", ".", "pi", ")", "<", "threshold_yaw", ")", "[", "0", "]", "\n", "order_vote", "=", "order_vote", "[", "yaw_vote", "]", "\n", "\n", "# start weighted voting", "\n", "vote_score_sum", "=", "np", ".", "sum", "(", "scores", "[", "order_vote", "]", ")", "\n", "det_arrays", "=", "list", "(", ")", "\n", "for", "idx", "in", "order_vote", ":", "\n", "                ", "det_arrays", ".", "append", "(", "BBox", ".", "bbox2array", "(", "dets", "[", "idx", "]", ")", "[", "np", ".", "newaxis", ",", ":", "]", ")", "\n", "", "det_arrays", "=", "np", ".", "vstack", "(", "det_arrays", ")", "\n", "avg_bbox_array", "=", "np", ".", "sum", "(", "scores", "[", "order_vote", "]", "[", ":", ",", "np", ".", "newaxis", "]", "*", "det_arrays", ",", "axis", "=", "0", ")", "/", "vote_score_sum", "\n", "bbox", "=", "BBox", ".", "array2bbox", "(", "avg_bbox_array", ")", "\n", "bbox", ".", "s", "=", "scores", "[", "index", "]", "\n", "result", ".", "append", "(", "bbox", ")", "\n", "result_types", ".", "append", "(", "inst_types", "[", "index", "]", ")", "\n", "", "else", ":", "\n", "            ", "result", ".", "append", "(", "dets", "[", "index", "]", ")", "\n", "result_types", ".", "append", "(", "inst_types", "[", "index", "]", ")", "\n", "\n", "# delete the overlapped bboxes", "\n", "", "delete_idxes", "=", "related_idxes", "[", "related_inds", "]", "\n", "in_mask", "=", "np", ".", "isin", "(", "order", ",", "delete_idxes", ",", "invert", "=", "True", ")", "\n", "order", "=", "order", "[", "in_mask", "]", "\n", "\n", "", "return", "result", ",", "result_types", "\n", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.__init__": [[9, 13], ["dict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "grid_size", ",", "scaler", "=", "100", ")", ":", "\n", "        ", "self", ".", "gsize", "=", "grid_size", "\n", "self", ".", "scaler", "=", "100", "\n", "self", ".", "bbox_dict", "=", "dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.bboxes2dict": [[14, 23], ["enumerate", "bbox_coarse_hash.BBoxCoarseFilter.compute_bbox_key", "bbox_coarse_hash.BBoxCoarseFilter.bbox_dict.keys", "set", "bbox_coarse_hash.BBoxCoarseFilter.bbox_dict[].add"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.compute_bbox_key"], ["", "def", "bboxes2dict", "(", "self", ",", "bboxes", ")", ":", "\n", "        ", "for", "i", ",", "bbox", "in", "enumerate", "(", "bboxes", ")", ":", "\n", "            ", "grid_keys", "=", "self", ".", "compute_bbox_key", "(", "bbox", ")", "\n", "for", "key", "in", "grid_keys", ":", "\n", "                ", "if", "key", "not", "in", "self", ".", "bbox_dict", ".", "keys", "(", ")", ":", "\n", "                    ", "self", ".", "bbox_dict", "[", "key", "]", "=", "set", "(", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "bbox_dict", "[", "key", "]", ".", "add", "(", "i", ")", "\n", "", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.compute_bbox_key": [[24, 37], ["numpy.asarray", "numpy.floor().astype", "numpy.floor().astype", "mot_3d.data_protos.BBox.box2corners2d", "numpy.floor", "numpy.floor", "numpy.min", "numpy.max"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d"], ["", "def", "compute_bbox_key", "(", "self", ",", "bbox", ")", ":", "\n", "        ", "corners", "=", "np", ".", "asarray", "(", "BBox", ".", "box2corners2d", "(", "bbox", ")", ")", "\n", "min_keys", "=", "np", ".", "floor", "(", "np", ".", "min", "(", "corners", ",", "axis", "=", "0", ")", "/", "self", ".", "gsize", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "max_keys", "=", "np", ".", "floor", "(", "np", ".", "max", "(", "corners", ",", "axis", "=", "0", ")", "/", "self", ".", "gsize", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "\n", "# enumerate all the corners", "\n", "grid_keys", "=", "[", "\n", "self", ".", "scaler", "*", "min_keys", "[", "0", "]", "+", "min_keys", "[", "1", "]", ",", "\n", "self", ".", "scaler", "*", "min_keys", "[", "0", "]", "+", "max_keys", "[", "1", "]", ",", "\n", "self", ".", "scaler", "*", "max_keys", "[", "0", "]", "+", "min_keys", "[", "1", "]", ",", "\n", "self", ".", "scaler", "*", "max_keys", "[", "0", "]", "+", "max_keys", "[", "1", "]", "\n", "]", "\n", "return", "grid_keys", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.related_bboxes": [[38, 47], ["set", "bbox_coarse_hash.BBoxCoarseFilter.compute_bbox_key", "list", "bbox_coarse_hash.BBoxCoarseFilter.bbox_dict.keys", "set.update"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.compute_bbox_key", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update"], ["", "def", "related_bboxes", "(", "self", ",", "bbox", ")", ":", "\n", "        ", "\"\"\" return the list of related bboxes\n        \"\"\"", "\n", "result", "=", "set", "(", ")", "\n", "grid_keys", "=", "self", ".", "compute_bbox_key", "(", "bbox", ")", "\n", "for", "key", "in", "grid_keys", ":", "\n", "            ", "if", "key", "in", "self", ".", "bbox_dict", ".", "keys", "(", ")", ":", "\n", "                ", "result", ".", "update", "(", "self", ".", "bbox_dict", "[", "key", "]", ")", "\n", "", "", "return", "list", "(", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.bbox_coarse_hash.BBoxCoarseFilter.clear": [[48, 50], ["dict"], "methods", ["None"], ["", "def", "clear", "(", "self", ")", ":", "\n", "        ", "self", ".", "bbox_dict", "=", "dict", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.NuScenesLoader.__init__": [[44, 67], ["json.load", "numpy.load", "numpy.load", "len", "open", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "configs", ",", "type_token", ",", "segment_name", ",", "data_folder", ",", "det_data_folder", ",", "start_frame", ")", ":", "\n", "        ", "\"\"\" initialize with the path to data \n        Args:\n            data_folder (str): root path to your data\n        \"\"\"", "\n", "self", ".", "configs", "=", "configs", "\n", "self", ".", "segment", "=", "segment_name", "\n", "self", ".", "data_loader", "=", "data_folder", "\n", "self", ".", "det_data_folder", "=", "det_data_folder", "\n", "self", ".", "type_token", "=", "type_token", "\n", "\n", "self", ".", "ts_info", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ts_info'", ",", "'{:}.json'", ".", "format", "(", "segment_name", ")", ")", ",", "'r'", ")", ")", "\n", "self", ".", "ego_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "self", ".", "dets", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "det_data_folder", ",", "'dets'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "self", ".", "det_type_filter", "=", "True", "\n", "\n", "self", ".", "nms", "=", "configs", "[", "'data_loader'", "]", "[", "'nms'", "]", "\n", "self", ".", "nms_thres", "=", "configs", "[", "'data_loader'", "]", "[", "'nms_thres'", "]", "\n", "\n", "self", ".", "max_frame", "=", "len", "(", "self", ".", "dets", "[", "'bboxes'", "]", ")", "\n", "self", ".", "cur_frame", "=", "start_frame", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.NuScenesLoader.__iter__": [[68, 70], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.NuScenesLoader.__next__": [[71, 114], ["dict", "nuscenes_loader.transform_matrix", "dict", "nuscenes_loader.nu_array2mot_bbox", "list", "nuscenes_loader.NuScenesLoader.frame_nms", "mot_3d.data_protos.BBox.bbox2array", "list", "str", "range", "range", "nuscenes_loader.NuScenesLoader.dets.keys", "nuscenes_loader.NuScenesLoader.dets.keys", "len", "len", "range", "range", "len", "len"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.transform_matrix", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.nu_array2mot_bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.waymo_loader.WaymoLoader.frame_nms", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "cur_frame", ">=", "self", ".", "max_frame", ":", "\n", "            ", "raise", "StopIteration", "\n", "\n", "", "result", "=", "dict", "(", ")", "\n", "ego", "=", "self", ".", "ego_info", "[", "str", "(", "self", ".", "cur_frame", ")", "]", "\n", "ego_matrix", "=", "transform_matrix", "(", "ego", "[", ":", "3", "]", ",", "ego", "[", "3", ":", "]", ")", "\n", "result", "[", "'ego'", "]", "=", "ego_matrix", "\n", "\n", "bboxes", "=", "self", ".", "dets", "[", "'bboxes'", "]", "[", "self", ".", "cur_frame", "]", "\n", "inst_types", "=", "self", ".", "dets", "[", "'types'", "]", "[", "self", ".", "cur_frame", "]", "\n", "frame_bboxes", "=", "[", "bboxes", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "bboxes", ")", ")", "if", "inst_types", "[", "i", "]", "in", "self", ".", "type_token", "]", "\n", "result", "[", "'det_types'", "]", "=", "[", "inst_types", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "inst_types", ")", ")", "if", "inst_types", "[", "i", "]", "in", "self", ".", "type_token", "]", "\n", "result", "[", "'dets'", "]", "=", "[", "nu_array2mot_bbox", "(", "b", ")", "for", "b", "in", "frame_bboxes", "]", "\n", "result", "[", "'aux_info'", "]", "=", "dict", "(", ")", "\n", "if", "'velos'", "in", "list", "(", "self", ".", "dets", ".", "keys", "(", ")", ")", ":", "\n", "            ", "cur_velos", "=", "self", ".", "dets", "[", "'velos'", "]", "[", "self", ".", "cur_frame", "]", "\n", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "[", "cur_velos", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "cur_velos", ")", ")", "\n", "if", "inst_types", "[", "i", "]", "in", "self", ".", "type_token", "]", "\n", "", "else", ":", "\n", "            ", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "None", "\n", "\n", "", "if", "self", ".", "nms", ":", "\n", "            ", "result", "[", "'dets'", "]", ",", "result", "[", "'det_types'", "]", ",", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "self", ".", "frame_nms", "(", "result", "[", "'dets'", "]", ",", "result", "[", "'det_types'", "]", ",", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", ",", "self", ".", "nms_thres", ")", "\n", "\n", "", "result", "[", "'dets'", "]", "=", "[", "BBox", ".", "bbox2array", "(", "d", ")", "for", "d", "in", "result", "[", "'dets'", "]", "]", "\n", "\n", "result", "[", "'pc'", "]", "=", "None", "\n", "\n", "if", "'velos'", "in", "list", "(", "self", ".", "dets", ".", "keys", "(", ")", ")", ":", "\n", "            ", "cur_frame_velos", "=", "self", ".", "dets", "[", "'velos'", "]", "[", "self", ".", "cur_frame", "]", "\n", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "[", "cur_frame_velos", "[", "i", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "bboxes", ")", ")", "if", "inst_types", "[", "i", "]", "in", "self", ".", "type_token", "]", "\n", "\n", "", "result", "[", "'time_stamp'", "]", "=", "self", ".", "ts_info", "[", "self", ".", "cur_frame", "]", "*", "1e-6", "\n", "result", "[", "'aux_info'", "]", "[", "'is_key_frame'", "]", "=", "True", "\n", "\n", "# result['time_stamp'] = self.ts_info[self.cur_frame][0] * 1e-6", "\n", "# result['aux_info']['is_key_frame'] = self.ts_info[self.cur_frame][1]", "\n", "\n", "self", ".", "cur_frame", "+=", "1", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.NuScenesLoader.__len__": [[115, 117], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "max_frame", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.NuScenesLoader.frame_nms": [[118, 125], ["mot_3d.preprocessing.nms"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.nms.nms"], ["", "def", "frame_nms", "(", "self", ",", "dets", ",", "det_types", ",", "velos", ",", "thres", ")", ":", "\n", "        ", "frame_indexes", ",", "frame_types", "=", "nms", "(", "dets", ",", "det_types", ",", "thres", ")", "\n", "result_dets", "=", "[", "dets", "[", "i", "]", "for", "i", "in", "frame_indexes", "]", "\n", "result_velos", "=", "None", "\n", "if", "velos", "is", "not", "None", ":", "\n", "            ", "result_velos", "=", "[", "velos", "[", "i", "]", "for", "i", "in", "frame_indexes", "]", "\n", "", "return", "result_dets", ",", "frame_types", ",", "result_velos", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.NuScenesLoader10Hz.__init__": [[128, 156], ["json.load", "json.load", "numpy.load", "numpy.load", "len", "open", "open", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "configs", ",", "type_token", ",", "segment_name", ",", "data_folder", ",", "det_data_folder", ",", "start_frame", ")", ":", "\n", "        ", "\"\"\" initialize with the path to data \n        Args:\n            data_folder (str): root path to your data\n        \"\"\"", "\n", "self", ".", "configs", "=", "configs", "\n", "self", ".", "segment", "=", "segment_name", "\n", "self", ".", "data_loader", "=", "data_folder", "\n", "self", ".", "det_data_folder", "=", "det_data_folder", "\n", "self", ".", "type_token", "=", "type_token", "\n", "\n", "self", ".", "ts_info", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ts_info'", ",", "'{:}.json'", ".", "format", "(", "segment_name", ")", ")", ",", "'r'", ")", ")", "\n", "self", ".", "time_stamps", "=", "[", "t", "[", "0", "]", "for", "t", "in", "self", ".", "ts_info", "]", "\n", "self", ".", "is_key_frames", "=", "[", "t", "[", "1", "]", "for", "t", "in", "self", ".", "ts_info", "]", "\n", "\n", "self", ".", "token_info", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'token_info'", ",", "'{:}.json'", ".", "format", "(", "segment_name", ")", ")", ",", "'r'", ")", ")", "\n", "self", ".", "ego_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "self", ".", "dets", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "det_data_folder", ",", "'dets'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "self", ".", "det_type_filter", "=", "True", "\n", "\n", "\n", "self", ".", "max_frame", "=", "len", "(", "self", ".", "dets", "[", "'bboxes'", "]", ")", "\n", "self", ".", "selected_frames", "=", "[", "i", "for", "i", "in", "range", "(", "self", ".", "max_frame", ")", "if", "self", ".", "token_info", "[", "i", "]", "[", "3", "]", "]", "\n", "self", ".", "cur_selected_index", "=", "0", "\n", "self", ".", "cur_frame", "=", "start_frame", "\n", "self", ".", "nms_thres", "=", "configs", "[", "'running'", "]", "[", "'nms_thres'", "]", "\n", "# import pdb", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.NuScenesLoader10Hz.__iter__": [[158, 160], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.NuScenesLoader10Hz.__next__": [[161, 200], ["dict", "nuscenes_loader.transform_matrix", "dict", "len", "nuscenes_loader.nu_array2mot_bbox", "list", "nuscenes_loader.NuScenesLoader10Hz.frame_nms", "mot_3d.data_protos.BBox.bbox2array", "str", "range", "range", "nuscenes_loader.NuScenesLoader10Hz.dets.keys", "len", "len", "range", "len"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.transform_matrix", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.nu_array2mot_bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.waymo_loader.WaymoLoader.frame_nms", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "cur_selected_index", ">=", "len", "(", "self", ".", "selected_frames", ")", ":", "\n", "            ", "raise", "StopIteration", "\n", "", "self", ".", "cur_frame", "=", "self", ".", "selected_frames", "[", "self", ".", "cur_selected_index", "]", "\n", "\n", "result", "=", "dict", "(", ")", "\n", "result", "[", "'time_stamp'", "]", "=", "self", ".", "time_stamps", "[", "self", ".", "cur_frame", "]", "*", "1e-6", "\n", "ego", "=", "self", ".", "ego_info", "[", "str", "(", "self", ".", "cur_frame", ")", "]", "\n", "ego_matrix", "=", "transform_matrix", "(", "ego", "[", ":", "3", "]", ",", "ego", "[", "3", ":", "]", ")", "\n", "result", "[", "'ego'", "]", "=", "ego_matrix", "\n", "\n", "bboxes", "=", "self", ".", "dets", "[", "'bboxes'", "]", "[", "self", ".", "cur_frame", "]", "\n", "inst_types", "=", "self", ".", "dets", "[", "'types'", "]", "[", "self", ".", "cur_frame", "]", "\n", "frame_bboxes", "=", "[", "bboxes", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "bboxes", ")", ")", "if", "inst_types", "[", "i", "]", "in", "self", ".", "type_token", "]", "\n", "result", "[", "'det_types'", "]", "=", "[", "inst_types", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "inst_types", ")", ")", "if", "inst_types", "[", "i", "]", "in", "self", ".", "type_token", "]", "\n", "\n", "#result['dets'] = [BBox.bbox2array(nu_array2mot_bbox(b)) for b in frame_bboxes]", "\n", "result", "[", "'dets'", "]", "=", "[", "nu_array2mot_bbox", "(", "b", ")", "for", "b", "in", "frame_bboxes", "]", "\n", "\n", "result", "[", "'aux_info'", "]", "=", "dict", "(", ")", "\n", "if", "'velos'", "in", "list", "(", "self", ".", "dets", ".", "keys", "(", ")", ")", ":", "\n", "            ", "cur_velos", "=", "self", ".", "dets", "[", "'velos'", "]", "[", "self", ".", "cur_frame", "]", "\n", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "[", "cur_velos", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "cur_velos", ")", ")", "\n", "if", "inst_types", "[", "i", "]", "in", "self", ".", "type_token", "]", "\n", "", "else", ":", "\n", "            ", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "None", "\n", "\n", "", "if", "self", ".", "nms", ":", "\n", "            ", "result", "[", "'dets'", "]", ",", "result", "[", "'det_types'", "]", ",", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "self", ".", "frame_nms", "(", "result", "[", "'dets'", "]", ",", "result", "[", "'det_types'", "]", ",", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", ",", "self", ".", "nms_thres", ")", "\n", "\n", "", "result", "[", "'dets'", "]", "=", "[", "BBox", ".", "bbox2array", "(", "d", ")", "for", "d", "in", "result", "[", "'dets'", "]", "]", "\n", "\n", "result", "[", "'pc'", "]", "=", "None", "\n", "\n", "result", "[", "'aux_info'", "]", "[", "'is_key_frame'", "]", "=", "self", ".", "is_key_frames", "[", "self", ".", "cur_frame", "]", "\n", "\n", "self", ".", "cur_selected_index", "+=", "1", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.NuScenesLoader10Hz.__len__": [[201, 203], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "selected_frames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.NuScenesLoader10Hz.frame_nms": [[204, 211], ["mot_3d.preprocessing.nms"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.nms.nms"], ["", "def", "frame_nms", "(", "self", ",", "dets", ",", "det_types", ",", "velos", ",", "thres", ")", ":", "\n", "        ", "frame_indexes", ",", "frame_types", "=", "nms", "(", "dets", ",", "det_types", ",", "thres", ")", "\n", "result_dets", "=", "[", "dets", "[", "i", "]", "for", "i", "in", "frame_indexes", "]", "\n", "result_velos", "=", "None", "\n", "if", "velos", "is", "not", "None", ":", "\n", "            ", "result_velos", "=", "[", "velos", "[", "i", "]", "for", "i", "in", "frame_indexes", "]", "\n", "", "return", "result_dets", ",", "frame_types", ",", "result_velos", "", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.transform_matrix": [[14, 29], ["numpy.array", "numpy.array", "numpy.eye", "pyquaternion.Quaternion", "numpy.transpose", "rot_inv.dot", "numpy.transpose", "numpy.array", "numpy.array"], "function", ["None"], ["def", "transform_matrix", "(", "translation", ":", "np", ".", "ndarray", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", "]", ")", ",", "\n", "rotation", ":", "np", ".", "ndarray", "=", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", ",", "0", "]", ")", ",", "\n", "inverse", ":", "bool", "=", "False", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "tm", "=", "np", ".", "eye", "(", "4", ")", "\n", "rotation", "=", "Quaternion", "(", "rotation", ")", "\n", "\n", "if", "inverse", ":", "\n", "        ", "rot_inv", "=", "rotation", ".", "rotation_matrix", ".", "T", "\n", "trans", "=", "np", ".", "transpose", "(", "-", "np", ".", "array", "(", "translation", ")", ")", "\n", "tm", "[", ":", "3", ",", ":", "3", "]", "=", "rot_inv", "\n", "tm", "[", ":", "3", ",", "3", "]", "=", "rot_inv", ".", "dot", "(", "trans", ")", "\n", "", "else", ":", "\n", "        ", "tm", "[", ":", "3", ",", ":", "3", "]", "=", "rotation", ".", "rotation_matrix", "\n", "tm", "[", ":", "3", ",", "3", "]", "=", "np", ".", "transpose", "(", "np", ".", "array", "(", "translation", ")", ")", "\n", "", "return", "tm", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.nuscenes_loader.nu_array2mot_bbox": [[31, 41], ["nuscenes.utils.data_classes.Box", "mot_3d.data_protos.BBox", "pyquaternion.Quaternion", "len"], "function", ["None"], ["", "def", "nu_array2mot_bbox", "(", "b", ")", ":", "\n", "    ", "nu_box", "=", "Box", "(", "b", "[", ":", "3", "]", ",", "b", "[", "3", ":", "6", "]", ",", "Quaternion", "(", "b", "[", "6", ":", "10", "]", ")", ")", "\n", "mot_bbox", "=", "BBox", "(", "\n", "x", "=", "nu_box", ".", "center", "[", "0", "]", ",", "y", "=", "nu_box", ".", "center", "[", "1", "]", ",", "z", "=", "nu_box", ".", "center", "[", "2", "]", ",", "\n", "w", "=", "nu_box", ".", "wlh", "[", "0", "]", ",", "l", "=", "nu_box", ".", "wlh", "[", "1", "]", ",", "h", "=", "nu_box", ".", "wlh", "[", "2", "]", ",", "\n", "o", "=", "nu_box", ".", "orientation", ".", "yaw_pitch_roll", "[", "0", "]", "\n", ")", "\n", "if", "len", "(", "b", ")", "==", "11", ":", "\n", "        ", "mot_bbox", ".", "s", "=", "b", "[", "-", "1", "]", "\n", "", "return", "mot_bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.waymo_loader.WaymoLoader.__init__": [[13, 37], ["json.load", "numpy.load", "numpy.load", "len", "open", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "configs", ",", "type_token", ",", "segment_name", ",", "data_folder", ",", "det_data_folder", ",", "start_frame", ")", ":", "\n", "        ", "\"\"\" initialize with the path to data \n        Args:\n            data_folder (str): root path to your data\n        \"\"\"", "\n", "self", ".", "configs", "=", "configs", "\n", "self", ".", "segment", "=", "segment_name", "\n", "self", ".", "data_loader", "=", "data_folder", "\n", "self", ".", "det_data_folder", "=", "det_data_folder", "\n", "self", ".", "type_token", "=", "type_token", "\n", "\n", "self", ".", "nms", "=", "configs", "[", "'data_loader'", "]", "[", "'nms'", "]", "\n", "self", ".", "nms_thres", "=", "configs", "[", "'data_loader'", "]", "[", "'nms_thres'", "]", "\n", "\n", "self", ".", "ts_info", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ts_info'", ",", "'{:}.json'", ".", "format", "(", "segment_name", ")", ")", ",", "'r'", ")", ")", "\n", "self", ".", "ego_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "self", ".", "dets", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "det_data_folder", ",", "'dets'", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "\n", "#'vehicle_dets'", "\n", "allow_pickle", "=", "True", ")", "\n", "self", ".", "det_type_filter", "=", "True", "\n", "\n", "self", ".", "max_frame", "=", "len", "(", "self", ".", "dets", "[", "'bboxes'", "]", ")", "\n", "self", ".", "cur_frame", "=", "start_frame", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.waymo_loader.WaymoLoader.__iter__": [[38, 40], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.waymo_loader.WaymoLoader.__next__": [[41, 76], ["dict", "mot_3d.data_protos.BBox.bbox2world", "waymo_loader.WaymoLoader.dets.keys", "waymo_loader.WaymoLoader.frame_nms", "mot_3d.data_protos.BBox.bbox2array", "str", "range", "range", "mot_3d.data_protos.BBox.array2bbox", "numpy.array", "mot_3d.velo2world", "len", "len", "range", "len"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2world", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.waymo_loader.WaymoLoader.frame_nms", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.velo2world"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "cur_frame", ">=", "self", ".", "max_frame", ":", "\n", "            ", "raise", "StopIteration", "\n", "\n", "", "result", "=", "dict", "(", ")", "\n", "result", "[", "'time_stamp'", "]", "=", "self", ".", "ts_info", "[", "self", ".", "cur_frame", "]", "*", "1e-6", "\n", "result", "[", "'ego'", "]", "=", "self", ".", "ego_info", "[", "str", "(", "self", ".", "cur_frame", ")", "]", "\n", "\n", "bboxes", "=", "self", ".", "dets", "[", "'bboxes'", "]", "[", "self", ".", "cur_frame", "]", "\n", "inst_types", "=", "self", ".", "dets", "[", "'types'", "]", "[", "self", ".", "cur_frame", "]", "\n", "selected_dets", "=", "[", "bboxes", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "bboxes", ")", ")", "if", "inst_types", "[", "i", "]", "in", "self", ".", "type_token", "]", "\n", "result", "[", "'det_types'", "]", "=", "[", "inst_types", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "bboxes", ")", ")", "if", "inst_types", "[", "i", "]", "in", "self", ".", "type_token", "]", "\n", "result", "[", "'dets'", "]", "=", "[", "BBox", ".", "bbox2world", "(", "result", "[", "'ego'", "]", ",", "BBox", ".", "array2bbox", "(", "b", ")", ")", "\n", "for", "b", "in", "selected_dets", "]", "\n", "\n", "result", "[", "'pc'", "]", "=", "None", "\n", "result", "[", "'aux_info'", "]", "=", "{", "'is_key_frame'", ":", "True", "}", "\n", "\n", "if", "'velos'", "in", "self", ".", "dets", ".", "keys", "(", ")", ":", "\n", "            ", "cur_frame_velos", "=", "self", ".", "dets", "[", "'velos'", "]", "[", "self", ".", "cur_frame", "]", "\n", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "[", "np", ".", "array", "(", "cur_frame_velos", "[", "i", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "bboxes", ")", ")", "if", "inst_types", "[", "i", "]", "in", "self", ".", "type_token", "]", "\n", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "[", "utils", ".", "velo2world", "(", "result", "[", "'ego'", "]", ",", "v", ")", "\n", "for", "v", "in", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "]", "\n", "", "else", ":", "\n", "            ", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "None", "\n", "\n", "\n", "", "if", "self", ".", "nms", ":", "\n", "            ", "result", "[", "'dets'", "]", ",", "result", "[", "'det_types'", "]", ",", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", "=", "self", ".", "frame_nms", "(", "result", "[", "'dets'", "]", ",", "result", "[", "'det_types'", "]", ",", "result", "[", "'aux_info'", "]", "[", "'velos'", "]", ",", "self", ".", "nms_thres", ")", "\n", "", "result", "[", "'dets'", "]", "=", "[", "BBox", ".", "bbox2array", "(", "d", ")", "for", "d", "in", "result", "[", "'dets'", "]", "]", "\n", "\n", "self", ".", "cur_frame", "+=", "1", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.waymo_loader.WaymoLoader.__len__": [[77, 79], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "max_frame", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_loader.waymo_loader.WaymoLoader.frame_nms": [[80, 87], ["mot_3d.preprocessing.nms"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.py_nms.nms.nms"], ["", "def", "frame_nms", "(", "self", ",", "dets", ",", "det_types", ",", "velos", ",", "thres", ")", ":", "\n", "        ", "frame_indexes", ",", "frame_types", "=", "nms", "(", "dets", ",", "det_types", ",", "thres", ")", "\n", "result_dets", "=", "[", "dets", "[", "i", "]", "for", "i", "in", "frame_indexes", "]", "\n", "result_velos", "=", "None", "\n", "if", "velos", "is", "not", "None", ":", "\n", "            ", "result_velos", "=", "[", "velos", "[", "i", "]", "for", "i", "in", "frame_indexes", "]", "\n", "", "return", "result_dets", ",", "frame_types", ",", "result_velos", "\n", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.time_stamp.main": [[27, 49], ["os.listdir", "sorted", "enumerate", "print", "os.path.join", "tensorflow.data.TFRecordDataset", "list", "open", "json.dump", "open.close", "len", "waymo_open_dataset.dataset_pb2.Frame", "open_dataset.Frame.ParseFromString", "list.append", "tf_record_name.split", "os.path.join", "bytearray", "data.numpy"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close"], ["def", "main", "(", "data_folder", ",", "out_folder", ")", ":", "\n", "    ", "tf_records", "=", "os", ".", "listdir", "(", "data_folder", ")", "\n", "tf_records", "=", "[", "x", "for", "x", "in", "tf_records", "if", "'tfrecord'", "in", "x", "]", "\n", "tf_records", "=", "sorted", "(", "tf_records", ")", "\n", "\n", "for", "record_index", ",", "tf_record_name", "in", "enumerate", "(", "tf_records", ")", ":", "\n", "        ", "print", "(", "'starting for time stamp: '", ",", "record_index", "+", "1", ",", "' / '", ",", "len", "(", "tf_records", ")", ",", "' '", ",", "tf_record_name", ")", "\n", "FILE_NAME", "=", "os", ".", "path", ".", "join", "(", "data_folder", ",", "tf_record_name", ")", "\n", "dataset", "=", "tf", ".", "data", ".", "TFRecordDataset", "(", "FILE_NAME", ",", "compression_type", "=", "''", ")", "\n", "\n", "frame_num", "=", "0", "\n", "time_stamps", "=", "list", "(", ")", "\n", "for", "data", "in", "dataset", ":", "\n", "            ", "frame", "=", "open_dataset", ".", "Frame", "(", ")", "\n", "frame", ".", "ParseFromString", "(", "bytearray", "(", "data", ".", "numpy", "(", ")", ")", ")", "\n", "time_stamps", ".", "append", "(", "frame", ".", "timestamp_micros", ")", "\n", "\n", "", "file_name", "=", "tf_record_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "# print(file_name)", "\n", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "out_folder", ",", "'{}.json'", ".", "format", "(", "file_name", ")", ")", ",", "'w'", ")", "\n", "json", ".", "dump", "(", "time_stamps", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.ego_info.pb2dict": [[34, 57], ["getattr", "getattr", "ego_info.pb2dict", "getattr", "ego_info.pb2dict", "getattr", "getattr"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.ego_info.pb2dict", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.ego_info.pb2dict"], ["def", "pb2dict", "(", "obj", ")", ":", "\n", "    ", "\"\"\"\n    Takes a ProtoBuf Message obj and convertes it to a dict.\n    \"\"\"", "\n", "adict", "=", "{", "}", "\n", "# if not obj.IsInitialized():", "\n", "#     return None", "\n", "for", "field", "in", "obj", ".", "DESCRIPTOR", ".", "fields", ":", "\n", "        ", "if", "not", "getattr", "(", "obj", ",", "field", ".", "name", ")", ":", "\n", "            ", "continue", "\n", "", "if", "not", "field", ".", "label", "==", "FD", ".", "LABEL_REPEATED", ":", "\n", "            ", "if", "not", "field", ".", "type", "==", "FD", ".", "TYPE_MESSAGE", ":", "\n", "                ", "adict", "[", "field", ".", "name", "]", "=", "getattr", "(", "obj", ",", "field", ".", "name", ")", "\n", "", "else", ":", "\n", "                ", "value", "=", "pb2dict", "(", "getattr", "(", "obj", ",", "field", ".", "name", ")", ")", "\n", "if", "value", ":", "\n", "                    ", "adict", "[", "field", ".", "name", "]", "=", "value", "\n", "", "", "", "else", ":", "\n", "            ", "if", "field", ".", "type", "==", "FD", ".", "TYPE_MESSAGE", ":", "\n", "                ", "adict", "[", "field", ".", "name", "]", "=", "[", "pb2dict", "(", "v", ")", "for", "v", "in", "getattr", "(", "obj", ",", "field", ".", "name", ")", "]", "\n", "", "else", ":", "\n", "                ", "adict", "[", "field", ".", "name", "]", "=", "[", "v", "for", "v", "in", "getattr", "(", "obj", ",", "field", ".", "name", ")", "]", "\n", "", "", "", "return", "adict", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.ego_info.main": [[59, 90], ["os.listdir", "sorted", "enumerate", "print", "os.path.join", "tensorflow.data.TFRecordDataset", "dict", "print", "numpy.savez_compressed", "len", "tf_record_name.split", "waymo_open_dataset.dataset_pb2.Frame", "open_dataset.Frame.ParseFromString", "numpy.reshape", "os.path.join", "bytearray", "numpy.array", "print", "data.numpy", "str", "len"], "function", ["None"], ["", "def", "main", "(", "token", ",", "process_num", ",", "data_folder", ",", "output_folder", ")", ":", "\n", "    ", "tf_records", "=", "os", ".", "listdir", "(", "data_folder", ")", "\n", "tf_records", "=", "[", "x", "for", "x", "in", "tf_records", "if", "'tfrecord'", "in", "x", "]", "\n", "tf_records", "=", "sorted", "(", "tf_records", ")", "\n", "for", "record_index", ",", "tf_record_name", "in", "enumerate", "(", "tf_records", ")", ":", "\n", "        ", "if", "record_index", "%", "process_num", "!=", "token", ":", "\n", "            ", "continue", "\n", "", "print", "(", "'starting for ego info '", ",", "record_index", "+", "1", ",", "' / '", ",", "len", "(", "tf_records", ")", ",", "' '", ",", "tf_record_name", ")", "\n", "FILE_NAME", "=", "os", ".", "path", ".", "join", "(", "data_folder", ",", "tf_record_name", ")", "\n", "dataset", "=", "tf", ".", "data", ".", "TFRecordDataset", "(", "FILE_NAME", ",", "compression_type", "=", "''", ")", "\n", "segment_name", "=", "tf_record_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "\n", "# if os.path.exists(os.path.join(output_folder, '{}.npz'.format(segment_name))):", "\n", "#     continue", "\n", "\n", "frame_num", "=", "0", "\n", "ego_infos", "=", "dict", "(", ")", "\n", "\n", "for", "data", "in", "dataset", ":", "\n", "            ", "frame", "=", "open_dataset", ".", "Frame", "(", ")", "\n", "frame", ".", "ParseFromString", "(", "bytearray", "(", "data", ".", "numpy", "(", ")", ")", ")", "\n", "\n", "ego_info", "=", "np", ".", "reshape", "(", "np", ".", "array", "(", "frame", ".", "pose", ".", "transform", ")", ",", "[", "4", ",", "4", "]", ")", "\n", "ego_infos", "[", "str", "(", "frame_num", ")", "]", "=", "ego_info", "\n", "\n", "frame_num", "+=", "1", "\n", "if", "frame_num", "%", "10", "==", "0", ":", "\n", "                ", "print", "(", "'record {:} / {:} frame number {:}'", ".", "format", "(", "record_index", "+", "1", ",", "len", "(", "tf_records", ")", ",", "frame_num", ")", ")", "\n", "", "", "print", "(", "'{:} frames in total'", ".", "format", "(", "frame_num", ")", ")", "\n", "\n", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "\"{}.npz\"", ".", "format", "(", "segment_name", ")", ")", ",", "**", "ego_infos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.detection.bbox_dict2array": [[23, 39], ["numpy.array"], "function", ["None"], ["def", "bbox_dict2array", "(", "box_dict", ")", ":", "\n", "    ", "\"\"\"transform box dict in waymo_open_format to array\n    Args:\n        box_dict ([dict]): waymo_open_dataset formatted bbox\n    \"\"\"", "\n", "result", "=", "np", ".", "array", "(", "[", "\n", "box_dict", "[", "'center_x'", "]", ",", "\n", "box_dict", "[", "'center_y'", "]", ",", "\n", "box_dict", "[", "'center_z'", "]", ",", "\n", "box_dict", "[", "'heading'", "]", ",", "\n", "box_dict", "[", "'length'", "]", ",", "\n", "box_dict", "[", "'width'", "]", ",", "\n", "box_dict", "[", "'height'", "]", ",", "\n", "box_dict", "[", "'score'", "]", "\n", "]", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.detection.str_list_to_int": [[41, 50], ["int", "result.append"], "function", ["None"], ["", "def", "str_list_to_int", "(", "lst", ")", ":", "\n", "    ", "result", "=", "[", "]", "\n", "for", "t", "in", "lst", ":", "\n", "        ", "try", ":", "\n", "            ", "t", "=", "int", "(", "t", ")", "\n", "result", ".", "append", "(", "t", ")", "\n", "", "except", ":", "\n", "            ", "continue", "\n", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.detection.main": [[52, 191], ["os.path.join", "os.listdir", "dict", "list", "os.path.join", "open", "waymo_open_dataset.protos.metrics_pb2.Objects", "metrics_pb2.Objects.ParseFromString", "open.close", "len", "dict.keys", "print", "tqdm.tqdm", "range", "tqdm.tqdm.close", "print", "tqdm.tqdm", "enumerate", "tqdm.tqdm.close", "json.load", "list.append", "open.read", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "detection.bbox_dict2array", "range", "range", "[].append", "[].append", "tqdm.tqdm.update", "sorted", "max", "list", "list", "range", "numpy.savez_compressed", "tqdm.tqdm.update", "open", "ts_file_name.split", "len", "len", "str", "result_bbox[].keys", "list", "list", "[].append", "[].append", "[].append", "len", "detection.str_list_to_int", "list", "list", "list", "os.path.join", "os.path.join", "list", "list", "list", "dets.keys", "str", "dets.keys", "list.append", "list.append", "list.append", "list.append", "str", "str", "velocities.append", "accelerations.append", "id_names.append", "velocities.append", "accelerations.append", "id_names.append", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.detection.bbox_dict2array", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.detection.str_list_to_int"], ["", "def", "main", "(", "name", ",", "data_folder", ",", "det_folder", ",", "file_name", ",", "out_folder", ")", ":", "\n", "# load timestamp and segment names", "\n", "    ", "ts_info_folder", "=", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ts_info'", ")", "\n", "ts_files", "=", "os", ".", "listdir", "(", "ts_info_folder", ")", "\n", "ts_info", "=", "dict", "(", ")", "\n", "segment_name_list", "=", "list", "(", ")", "\n", "for", "ts_file_name", "in", "ts_files", ":", "\n", "        ", "ts", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "ts_info_folder", ",", "ts_file_name", ")", ",", "'r'", ")", ")", "\n", "segment_name", "=", "ts_file_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "ts_info", "[", "segment_name", "]", "=", "ts", "\n", "segment_name_list", ".", "append", "(", "segment_name", ")", "\n", "\n", "# load detection file", "\n", "", "det_folder", "=", "os", ".", "path", ".", "join", "(", "det_folder", ",", "name", ")", "\n", "f", "=", "open", "(", "file_name", ",", "'rb'", ")", "\n", "objects", "=", "metrics_pb2", ".", "Objects", "(", ")", "\n", "objects", ".", "ParseFromString", "(", "f", ".", "read", "(", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "# parse and aggregate detections", "\n", "objects", "=", "objects", ".", "objects", "\n", "object_num", "=", "len", "(", "objects", ")", "\n", "\n", "result_bbox", ",", "result_type", ",", "result_velo", ",", "result_accel", ",", "result_ids", "=", "dict", "(", ")", ",", "dict", "(", ")", ",", "dict", "(", ")", ",", "dict", "(", ")", ",", "dict", "(", ")", "\n", "for", "seg_name", "in", "ts_info", ".", "keys", "(", ")", ":", "\n", "        ", "result_bbox", "[", "seg_name", "]", "=", "dict", "(", ")", "\n", "result_type", "[", "seg_name", "]", "=", "dict", "(", ")", "\n", "result_velo", "[", "seg_name", "]", "=", "dict", "(", ")", "\n", "result_accel", "[", "seg_name", "]", "=", "dict", "(", ")", "\n", "result_ids", "[", "seg_name", "]", "=", "dict", "(", ")", "\n", "\n", "", "print", "(", "'Converting'", ")", "\n", "pbar", "=", "tqdm", "(", "total", "=", "object_num", ")", "\n", "for", "_i", "in", "range", "(", "object_num", ")", ":", "\n", "        ", "instance", "=", "objects", "[", "_i", "]", "\n", "segment", "=", "instance", ".", "context_name", "\n", "time_stamp", "=", "instance", ".", "frame_timestamp_micros", "\n", "\n", "box", "=", "instance", ".", "object", ".", "box", "\n", "bbox_dict", "=", "{", "\n", "'center_x'", ":", "box", ".", "center_x", ",", "\n", "'center_y'", ":", "box", ".", "center_y", ",", "\n", "'center_z'", ":", "box", ".", "center_z", ",", "\n", "'width'", ":", "box", ".", "width", ",", "\n", "'length'", ":", "box", ".", "length", ",", "\n", "'height'", ":", "box", ".", "height", ",", "\n", "'heading'", ":", "box", ".", "heading", ",", "\n", "'score'", ":", "instance", ".", "score", "\n", "}", "\n", "bbox_array", "=", "bbox_dict2array", "(", "bbox_dict", ")", "\n", "obj_type", "=", "instance", ".", "object", ".", "type", "\n", "\n", "if", "args", ".", "metadata", ":", "\n", "            ", "meta_data", "=", "instance", ".", "object", ".", "metadata", "\n", "velo", "=", "(", "meta_data", ".", "speed_x", ",", "meta_data", ".", "speed_y", ")", "\n", "accel", "=", "(", "meta_data", ".", "accel_x", ",", "meta_data", ".", "accel_y", ")", "\n", "\n", "", "if", "args", ".", "id", ":", "\n", "            ", "id", "=", "instance", ".", "object", ".", "id", "\n", "\n", "", "val_index", "=", "None", "\n", "for", "_j", "in", "range", "(", "len", "(", "segment_name_list", ")", ")", ":", "\n", "            ", "if", "segment", "in", "segment_name_list", "[", "_j", "]", ":", "\n", "                ", "val_index", "=", "_j", "\n", "break", "\n", "", "", "segment_name", "=", "segment_name_list", "[", "val_index", "]", "\n", "\n", "frame_number", "=", "None", "\n", "for", "_j", "in", "range", "(", "len", "(", "ts_info", "[", "segment_name", "]", ")", ")", ":", "\n", "            ", "if", "ts_info", "[", "segment_name", "]", "[", "_j", "]", "==", "time_stamp", ":", "\n", "                ", "frame_number", "=", "_j", "\n", "break", "\n", "\n", "", "", "if", "str", "(", "frame_number", ")", "not", "in", "result_bbox", "[", "segment_name", "]", ".", "keys", "(", ")", ":", "\n", "            ", "result_bbox", "[", "segment_name", "]", "[", "str", "(", "frame_number", ")", "]", "=", "list", "(", ")", "\n", "result_type", "[", "segment_name", "]", "[", "str", "(", "frame_number", ")", "]", "=", "list", "(", ")", "\n", "if", "args", ".", "metadata", ":", "\n", "                ", "result_velo", "[", "segment_name", "]", "[", "str", "(", "frame_number", ")", "]", "=", "list", "(", ")", "\n", "result_accel", "[", "segment_name", "]", "[", "str", "(", "frame_number", ")", "]", "=", "list", "(", ")", "\n", "", "if", "args", ".", "id", ":", "\n", "                ", "result_ids", "[", "segment_name", "]", "[", "str", "(", "frame_number", ")", "]", "=", "list", "(", ")", "\n", "\n", "", "", "result_bbox", "[", "segment_name", "]", "[", "str", "(", "frame_number", ")", "]", ".", "append", "(", "bbox_array", ")", "\n", "result_type", "[", "segment_name", "]", "[", "str", "(", "frame_number", ")", "]", ".", "append", "(", "obj_type", ")", "\n", "if", "args", ".", "metadata", ":", "\n", "            ", "result_velo", "[", "segment_name", "]", "[", "str", "(", "frame_number", ")", "]", ".", "append", "(", "velo", ")", "\n", "result_accel", "[", "segment_name", "]", "[", "str", "(", "frame_number", ")", "]", ".", "append", "(", "accel", ")", "\n", "", "if", "args", ".", "id", ":", "\n", "            ", "result_ids", "[", "segment_name", "]", "[", "str", "(", "frame_number", ")", "]", ".", "append", "(", "id", ")", "\n", "\n", "", "pbar", ".", "update", "(", "1", ")", "\n", "", "pbar", ".", "close", "(", ")", "\n", "\n", "print", "(", "'Saving'", ")", "\n", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "segment_name_list", ")", ")", "\n", "# store in files", "\n", "for", "_i", ",", "segment_name", "in", "enumerate", "(", "segment_name_list", ")", ":", "\n", "# if not segment_name=='segment-366934253670232570_2229_530_2249_530_with_camera_labels':", "\n", "#     continue", "\n", "        ", "dets", "=", "result_bbox", "[", "segment_name", "]", "\n", "types", "=", "result_type", "[", "segment_name", "]", "\n", "if", "args", ".", "metadata", ":", "\n", "            ", "velos", "=", "result_velo", "[", "segment_name", "]", "\n", "accels", "=", "result_accel", "[", "segment_name", "]", "\n", "", "if", "args", ".", "id", ":", "\n", "            ", "ids", "=", "result_ids", "[", "segment_name", "]", "\n", "\n", "", "frame_keys", "=", "sorted", "(", "str_list_to_int", "(", "dets", ".", "keys", "(", ")", ")", ")", "\n", "max_frame", "=", "max", "(", "frame_keys", ")", "#max(199,max(frame_keys))#max(frame_keys)", "\n", "bboxes", "=", "list", "(", ")", "\n", "obj_types", "=", "list", "(", ")", "\n", "velocities", ",", "accelerations", ",", "id_names", "=", "list", "(", ")", ",", "list", "(", ")", ",", "list", "(", ")", "\n", "for", "key", "in", "range", "(", "max_frame", "+", "1", ")", ":", "\n", "            ", "if", "str", "(", "key", ")", "in", "dets", ".", "keys", "(", ")", ":", "\n", "                ", "bboxes", ".", "append", "(", "dets", "[", "str", "(", "key", ")", "]", ")", "\n", "obj_types", ".", "append", "(", "types", "[", "str", "(", "key", ")", "]", ")", "\n", "if", "args", ".", "metadata", ":", "\n", "                    ", "velocities", ".", "append", "(", "velos", "[", "str", "(", "key", ")", "]", ")", "\n", "accelerations", ".", "append", "(", "accels", "[", "str", "(", "key", ")", "]", ")", "\n", "", "if", "args", ".", "id", ":", "\n", "                    ", "id_names", ".", "append", "(", "ids", "[", "str", "(", "key", ")", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "bboxes", ".", "append", "(", "[", "]", ")", "\n", "obj_types", ".", "append", "(", "[", "]", ")", "\n", "if", "args", ".", "metadata", ":", "\n", "                    ", "velocities", ".", "append", "(", "[", "]", ")", "\n", "accelerations", ".", "append", "(", "[", "]", ")", "\n", "", "if", "args", ".", "id", ":", "\n", "                    ", "id_names", ".", "append", "(", "[", "]", ")", "\n", "", "", "", "result", "=", "{", "'bboxes'", ":", "bboxes", ",", "'types'", ":", "obj_types", "}", "\n", "if", "args", ".", "metadata", ":", "\n", "            ", "result", "[", "'velos'", "]", "=", "velocities", "\n", "result", "[", "'accels'", "]", "=", "accelerations", "\n", "", "if", "args", ".", "id", ":", "\n", "            ", "result", "[", "'ids'", "]", "=", "id_names", "\n", "\n", "", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "out_folder", ",", "\"{:}.npz\"", ".", "format", "(", "segment_name", ")", ")", ",", "**", "result", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "", "pbar", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.get_context_name": [[27, 33], ["file_name.split", "context.split", "context.split"], "function", ["None"], ["def", "get_context_name", "(", "file_name", ":", "str", ")", ":", "\n", "    ", "context", "=", "file_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "# file name#", "\n", "context", "=", "context", ".", "split", "(", "'-'", ")", "[", "1", "]", "# after segment", "\n", "context", "=", "context", ".", "split", "(", "'w'", ")", "[", "0", "]", "# before with", "\n", "context", "=", "context", "[", ":", "-", "1", "]", "\n", "return", "context", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.pred_content_filter": [[35, 42], ["list", "zip", "list.append", "range", "mot_3d.data_protos.Validity.valid", "len"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.valid"], ["", "def", "pred_content_filter", "(", "pred_contents", ",", "pred_states", ")", ":", "\n", "    ", "result_contents", "=", "list", "(", ")", "\n", "for", "contents", ",", "states", "in", "zip", "(", "pred_contents", ",", "pred_states", ")", ":", "\n", "        ", "indices", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "states", ")", ")", "if", "Validity", ".", "valid", "(", "states", "[", "i", "]", ")", "]", "\n", "frame_contents", "=", "[", "contents", "[", "i", "]", "for", "i", "in", "indices", "]", "\n", "result_contents", ".", "append", "(", "frame_contents", ")", "\n", "", "return", "result_contents", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.main": [[44, 101], ["os.path.join", "os.path.join", "os.path.join", "list", "print", "tqdm.tqdm", "enumerate", "tqdm.tqdm.close", "waymo_open_dataset.protos.metrics_pb2.Objects", "os.path.join", "os.path.join", "open", "open.write", "open.close", "sorted", "pred_bin.get_context_name", "os.path.join", "json.load", "numpy.load", "numpy.load", "pred_bin.pred_content_filter", "pred_bin.pred_content_filter", "pred_bin.create_sequence", "tqdm.tqdm.update", "metrics_pb2.Objects.objects.append", "os.path.exists", "os.makedirs", "metrics_pb2.Objects.SerializeToString", "os.listdir", "len", "file_name.split", "open", "os.path.join", "os.path.join", "pred_bin.pred_content_filter", "pred_bin.pred_content_filter"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.get_context_name", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.pred_content_filter", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.pred_content_filter", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.create_sequence", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.pred_content_filter", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.pred_content_filter"], ["", "def", "main", "(", "name", ",", "obj_type", ",", "result_folder", ",", "raw_data_folder", ",", "output_folder", ",", "output_file_name", ")", ":", "\n", "    ", "summary_folder", "=", "os", ".", "path", ".", "join", "(", "result_folder", ",", "args", ".", "src", ",", "obj_type", ")", "\n", "file_names", "=", "sorted", "(", "os", ".", "listdir", "(", "summary_folder", ")", ")", "[", ":", "]", "\n", "\n", "if", "obj_type", "==", "'vehicle'", ":", "\n", "        ", "type_token", "=", "1", "\n", "", "elif", "obj_type", "==", "'pedestrian'", ":", "\n", "        ", "type_token", "=", "2", "\n", "", "elif", "obj_type", "==", "'cyclist'", ":", "\n", "        ", "type_token", "=", "4", "\n", "\n", "", "ts_info_folder", "=", "os", ".", "path", ".", "join", "(", "raw_data_folder", ",", "'ts_info'", ")", "\n", "ego_info_folder", "=", "os", ".", "path", ".", "join", "(", "raw_data_folder", ",", "'ego_info'", ")", "\n", "obj_list", "=", "list", "(", ")", "\n", "if", "args", ".", "mode", "==", "'val'", ":", "\n", "        ", "file_names", "=", "file_names", "[", ":", "74", "]", "\n", "\n", "", "print", "(", "'Converting TYPE {:} into WAYMO Format'", ".", "format", "(", "obj_type", ")", ")", "\n", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "file_names", ")", ")", "\n", "for", "file_index", ",", "file_name", "in", "enumerate", "(", "file_names", "[", ":", "]", ")", ":", "\n", "        ", "file_name_prefix", "=", "file_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "context_name", "=", "get_context_name", "(", "file_name", ")", "\n", "\n", "ts_path", "=", "os", ".", "path", ".", "join", "(", "ts_info_folder", ",", "'{}.json'", ".", "format", "(", "file_name_prefix", ")", ")", "\n", "ts_data", "=", "json", ".", "load", "(", "open", "(", "ts_path", ",", "'r'", ")", ")", "# list of time stamps by order of frame", "\n", "\n", "# load ego motions", "\n", "ego_motions", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ego_info_folder", ",", "'{:}.npz'", ".", "format", "(", "file_name_prefix", ")", ")", ",", "allow_pickle", "=", "True", ")", "\n", "\n", "pred_result", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "summary_folder", ",", "file_name", ")", ",", "allow_pickle", "=", "True", ")", "\n", "pred_ids", ",", "pred_bboxes", ",", "pred_states", "=", "pred_result", "[", "'ids'", "]", ",", "pred_result", "[", "'bboxes'", "]", ",", "pred_result", "[", "'states'", "]", "\n", "pred_bboxes", "=", "pred_content_filter", "(", "pred_bboxes", ",", "pred_states", ")", "\n", "pred_ids", "=", "pred_content_filter", "(", "pred_ids", ",", "pred_states", ")", "\n", "pred_velos", ",", "pred_accels", "=", "None", ",", "None", "\n", "\n", "if", "args", ".", "velo", ":", "\n", "            ", "pred_velos", "=", "pred_result", "[", "'velos'", "]", "\n", "pred_velos", "=", "pred_content_filter", "(", "pred_velos", ",", "pred_states", ")", "\n", "", "if", "args", ".", "accel", ":", "\n", "            ", "pred_accels", "=", "pred_result", "[", "'accels'", "]", "\n", "pred_accels", "=", "pred_content_filter", "(", "pred_accels", ",", "pred_states", ")", "\n", "", "obj_list", "+=", "create_sequence", "(", "pred_ids", ",", "pred_bboxes", ",", "type_token", ",", "context_name", ",", "\n", "ts_data", ",", "ego_motions", ",", "pred_velos", ",", "pred_accels", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "", "pbar", ".", "close", "(", ")", "\n", "objects", "=", "metrics_pb2", ".", "Objects", "(", ")", "\n", "for", "obj", "in", "obj_list", ":", "\n", "        ", "objects", ".", "objects", ".", "append", "(", "obj", ")", "\n", "\n", "", "output_folder", "=", "os", ".", "path", ".", "join", "(", "output_folder", ",", "obj_type", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_folder", ")", "\n", "", "output_path", "=", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'{:}.bin'", ".", "format", "(", "output_file_name", ")", ")", "\n", "f", "=", "open", "(", "output_path", ",", "'wb'", ")", "\n", "f", ".", "write", "(", "objects", ".", "SerializeToString", "(", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.create_single_pred_bbox": [[103, 128], ["waymo_open_dataset.protos.metrics_pb2.Object", "waymo_open_dataset.label_pb2.Label.Box", "mot_3d.data_protos.BBox.array2bbox", "mot_3d.data_protos.BBox.bbox2world", "mot_3d.data_protos.BBox.bbox2array", "metrics_pb2.Object.object.box.CopyFrom", "waymo_open_dataset.label_pb2.Label.Metadata", "metrics_pb2.Object.object.metadata.CopyFrom"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2world", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["", "def", "create_single_pred_bbox", "(", "id", ",", "bbox", ",", "type_token", ",", "time_stamp", ",", "context_name", ",", "inv_ego_motion", ",", "velo", ",", "accel", ")", ":", "\n", "    ", "o", "=", "metrics_pb2", ".", "Object", "(", ")", "\n", "o", ".", "context_name", "=", "context_name", "\n", "o", ".", "frame_timestamp_micros", "=", "time_stamp", "\n", "box", "=", "label_pb2", ".", "Label", ".", "Box", "(", ")", "\n", "\n", "proto_box", "=", "BBox", ".", "array2bbox", "(", "bbox", ")", "\n", "proto_box", "=", "BBox", ".", "bbox2world", "(", "inv_ego_motion", ",", "proto_box", ")", "\n", "bbox", "=", "BBox", ".", "bbox2array", "(", "proto_box", ")", "\n", "\n", "box", ".", "center_x", ",", "box", ".", "center_y", ",", "box", ".", "center_z", ",", "box", ".", "heading", "=", "bbox", "[", ":", "4", "]", "\n", "box", ".", "length", ",", "box", ".", "width", ",", "box", ".", "height", "=", "bbox", "[", "4", ":", "7", "]", "\n", "o", ".", "object", ".", "box", ".", "CopyFrom", "(", "box", ")", "\n", "o", ".", "score", "=", "bbox", "[", "-", "1", "]", "\n", "\n", "meta_data", "=", "label_pb2", ".", "Label", ".", "Metadata", "(", ")", "\n", "if", "args", ".", "velo", ":", "\n", "        ", "meta_data", ".", "speed_x", ",", "meta_data", ".", "speed_y", "=", "velo", "[", "0", "]", ",", "velo", "[", "1", "]", "\n", "", "if", "args", ".", "accel", ":", "\n", "        ", "meta_data", ".", "accel_x", ",", "meta_data", ".", "accel_y", "=", "accel", "[", "0", "]", ",", "accel", "[", "1", "]", "\n", "", "o", ".", "object", ".", "metadata", ".", "CopyFrom", "(", "meta_data", ")", "\n", "\n", "o", ".", "object", ".", "id", "=", "'{:}_{:}'", ".", "format", "(", "type_token", ",", "id", ")", "\n", "o", ".", "object", ".", "type", "=", "type_token", "\n", "return", "o", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.create_sequence": [[130, 149], ["len", "list", "range", "len", "numpy.linalg.inv", "range", "list.append", "str", "pred_bin.create_single_pred_bbox"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.create_single_pred_bbox"], ["", "def", "create_sequence", "(", "pred_ids", ",", "pred_bboxes", ",", "type_token", ",", "context_name", ",", "time_stamps", ",", "ego_motions", ",", "pred_velos", ",", "pred_accels", ")", ":", "\n", "    ", "frame_num", "=", "len", "(", "pred_ids", ")", "\n", "sequence_objects", "=", "list", "(", ")", "\n", "for", "frame_index", "in", "range", "(", "frame_num", ")", ":", "\n", "        ", "time_stamp", "=", "time_stamps", "[", "frame_index", "]", "\n", "frame_obj_num", "=", "len", "(", "pred_ids", "[", "frame_index", "]", ")", "\n", "ego_motion", "=", "ego_motions", "[", "str", "(", "frame_index", ")", "]", "\n", "inv_ego_motion", "=", "np", ".", "linalg", ".", "inv", "(", "ego_motion", ")", "\n", "for", "obj_index", "in", "range", "(", "frame_obj_num", ")", ":", "\n", "            ", "pred_id", "=", "pred_ids", "[", "frame_index", "]", "[", "obj_index", "]", "\n", "pred_bbox", "=", "pred_bboxes", "[", "frame_index", "]", "[", "obj_index", "]", "\n", "pred_velo", ",", "pred_accel", "=", "None", ",", "None", "\n", "if", "args", ".", "velo", ":", "\n", "                ", "pred_velo", "=", "pred_velos", "[", "frame_index", "]", "[", "obj_index", "]", "\n", "", "if", "args", ".", "accel", ":", "\n", "                ", "pred_accel", "=", "pred_accels", "[", "frame_index", "]", "[", "obj_index", "]", "\n", "", "sequence_objects", ".", "append", "(", "create_single_pred_bbox", "(", "\n", "pred_id", ",", "pred_bbox", ",", "type_token", ",", "time_stamp", ",", "context_name", ",", "inv_ego_motion", ",", "pred_velo", ",", "pred_accel", ")", ")", "\n", "", "", "return", "sequence_objects", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.waymo.pred_bin.merge_results": [[151, 171], ["print", "list", "waymo_open_dataset.protos.metrics_pb2.Objects", "os.path.join", "open", "open.write", "open.close", "os.path.join", "open", "waymo_open_dataset.protos.metrics_pb2.Objects", "metrics_pb2.Objects.ParseFromString", "open.close", "metrics_pb2.Objects.objects.append", "metrics_pb2.Objects.SerializeToString", "open.read"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close"], ["", "def", "merge_results", "(", "output_folder", ",", "obj_types", ",", "output_file_name", ")", ":", "\n", "    ", "print", "(", "'Merging different object types'", ")", "\n", "result_objs", "=", "list", "(", ")", "\n", "for", "obj_type", "in", "obj_types", ":", "\n", "        ", "bin_path", "=", "os", ".", "path", ".", "join", "(", "output_folder", ",", "obj_type", ",", "'{:}.bin'", ".", "format", "(", "output_file_name", ")", ")", "\n", "f", "=", "open", "(", "bin_path", ",", "'rb'", ")", "\n", "objects", "=", "metrics_pb2", ".", "Objects", "(", ")", "\n", "objects", ".", "ParseFromString", "(", "f", ".", "read", "(", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "objects", "=", "objects", ".", "objects", "\n", "result_objs", "+=", "objects", "\n", "\n", "", "output_objs", "=", "metrics_pb2", ".", "Objects", "(", ")", "\n", "for", "obj", "in", "result_objs", ":", "\n", "        ", "output_objs", ".", "objects", ".", "append", "(", "obj", ")", "\n", "\n", "", "output_path", "=", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'{:}.bin'", ".", "format", "(", "output_file_name", ")", ")", "\n", "f", "=", "open", "(", "output_path", ",", "'wb'", ")", "\n", "f", ".", "write", "(", "output_objs", ".", "SerializeToString", "(", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.token_info.set_selected_or_not": [[16, 39], ["list", "len", "enumerate", "list.append", "list", "range", "list.append", "list.append"], "function", ["None"], ["def", "set_selected_or_not", "(", "frame_tokens", ")", ":", "\n", "    ", "\"\"\" under the 20hz setting, \n        we have to set whether to use a certain frame\n        1. select at the interval of 1 frames\n        2. if meet key frame, reset the counter\n    \"\"\"", "\n", "counter", "=", "-", "1", "\n", "selected", "=", "list", "(", ")", "\n", "frame_num", "=", "len", "(", "frame_tokens", ")", "\n", "for", "_", ",", "tokens", "in", "enumerate", "(", "frame_tokens", ")", ":", "\n", "        ", "is_key_frame", "=", "tokens", "[", "1", "]", "\n", "counter", "+=", "1", "\n", "if", "is_key_frame", ":", "\n", "            ", "selected", ".", "append", "(", "True", ")", "\n", "counter", "=", "0", "\n", "continue", "\n", "", "else", ":", "\n", "            ", "if", "counter", "%", "2", "==", "0", ":", "\n", "                ", "selected", ".", "append", "(", "True", ")", "\n", "", "else", ":", "\n", "                ", "selected", ".", "append", "(", "False", ")", "\n", "", "", "", "result_tokens", "=", "[", "(", "list", "(", "frame_tokens", "[", "i", "]", ")", "+", "[", "selected", "[", "i", "]", "]", ")", "for", "i", "in", "range", "(", "frame_num", ")", "]", "\n", "return", "result_tokens", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.token_info.main": [[41, 80], ["tqdm.tqdm", "enumerate", "tqdm.tqdm.close", "nusc.get", "list", "open", "json.dump", "open.close", "tqdm.tqdm.update", "len", "token_info.set_selected_or_not", "os.path.join", "copy.deepcopy", "nusc.get", "set_selected_or_not.append", "nusc.get", "set_selected_or_not.append"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.token_info.set_selected_or_not"], ["", "def", "main", "(", "nusc", ",", "scene_names", ",", "root_path", ",", "token_folder", ",", "mode", ")", ":", "\n", "    ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "scene_names", ")", ")", "\n", "for", "scene_index", ",", "scene_info", "in", "enumerate", "(", "nusc", ".", "scene", ")", ":", "\n", "        ", "scene_name", "=", "scene_info", "[", "'name'", "]", "\n", "if", "scene_name", "not", "in", "scene_names", ":", "\n", "            ", "continue", "\n", "\n", "", "first_sample_token", "=", "scene_info", "[", "'first_sample_token'", "]", "\n", "last_sample_token", "=", "scene_info", "[", "'last_sample_token'", "]", "\n", "frame_data", "=", "nusc", ".", "get", "(", "'sample'", ",", "first_sample_token", ")", "\n", "if", "mode", "==", "'20hz'", ":", "\n", "            ", "cur_sample_token", "=", "frame_data", "[", "'data'", "]", "[", "'LIDAR_TOP'", "]", "\n", "", "elif", "mode", "==", "'2hz'", ":", "\n", "            ", "cur_sample_token", "=", "deepcopy", "(", "first_sample_token", ")", "\n", "", "frame_tokens", "=", "list", "(", ")", "\n", "\n", "while", "True", ":", "\n", "# find the path to lidar data", "\n", "            ", "if", "mode", "==", "'2hz'", ":", "\n", "                ", "frame_data", "=", "nusc", ".", "get", "(", "'sample'", ",", "cur_sample_token", ")", "\n", "frame_tokens", ".", "append", "(", "cur_sample_token", ")", "\n", "", "elif", "mode", "==", "'20hz'", ":", "\n", "                ", "frame_data", "=", "nusc", ".", "get", "(", "'sample_data'", ",", "cur_sample_token", ")", "\n", "frame_tokens", ".", "append", "(", "(", "cur_sample_token", ",", "frame_data", "[", "'is_key_frame'", "]", ",", "frame_data", "[", "'sample_token'", "]", ")", ")", "\n", "\n", "# clean up and prepare for the next", "\n", "", "cur_sample_token", "=", "frame_data", "[", "'next'", "]", "\n", "if", "cur_sample_token", "==", "''", ":", "\n", "                ", "break", "\n", "\n", "", "", "if", "mode", "==", "'20hz'", ":", "\n", "            ", "frame_tokens", "=", "set_selected_or_not", "(", "frame_tokens", ")", "\n", "", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "token_folder", ",", "'{:}.json'", ".", "format", "(", "scene_name", ")", ")", ",", "'w'", ")", "\n", "json", ".", "dump", "(", "frame_tokens", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "", "pbar", ".", "close", "(", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.time_stamp.main": [[15, 50], ["tqdm.tqdm", "enumerate", "tqdm.tqdm.close", "nusc.get", "list", "open", "json.dump", "open.close", "tqdm.tqdm.update", "len", "os.path.join", "copy.deepcopy", "nusc.get", "list.append", "nusc.get", "list.append"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update"], ["from", "waymo_open_dataset", ".", "utils", "import", "transform_utils", "\n", "from", "waymo_open_dataset", ".", "utils", "import", "frame_utils", "\n", "from", "waymo_open_dataset", "import", "dataset_pb2", "as", "open_dataset", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--output_folder'", ",", "type", "=", "str", ",", "default", "=", "'./data/waymo/'", ",", "\n", "help", "=", "'the location of output information'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_folder'", ",", "type", "=", "str", ",", "help", "=", "'location of tfrecords'", ")", "\n", "parser", ".", "add_argument", "(", "'--test'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "def", "main", "(", "data_folder", ",", "out_folder", ")", ":", "\n", "    ", "tf_records", "=", "os", ".", "listdir", "(", "data_folder", ")", "\n", "tf_records", "=", "[", "x", "for", "x", "in", "tf_records", "if", "'tfrecord'", "in", "x", "]", "\n", "tf_records", "=", "sorted", "(", "tf_records", ")", "\n", "\n", "for", "record_index", ",", "tf_record_name", "in", "enumerate", "(", "tf_records", ")", ":", "\n", "        ", "print", "(", "'starting for time stamp: '", ",", "record_index", "+", "1", ",", "' / '", ",", "len", "(", "tf_records", ")", ",", "' '", ",", "tf_record_name", ")", "\n", "FILE_NAME", "=", "os", ".", "path", ".", "join", "(", "data_folder", ",", "tf_record_name", ")", "\n", "dataset", "=", "tf", ".", "data", ".", "TFRecordDataset", "(", "FILE_NAME", ",", "compression_type", "=", "''", ")", "\n", "\n", "frame_num", "=", "0", "\n", "time_stamps", "=", "list", "(", ")", "\n", "for", "data", "in", "dataset", ":", "\n", "            ", "frame", "=", "open_dataset", ".", "Frame", "(", ")", "\n", "frame", ".", "ParseFromString", "(", "bytearray", "(", "data", ".", "numpy", "(", ")", ")", ")", "\n", "time_stamps", ".", "append", "(", "frame", ".", "timestamp_micros", ")", "\n", "\n", "", "file_name", "=", "tf_record_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "# print(file_name)", "\n", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "out_folder", ",", "'{}.json'", ".", "format", "(", "file_name", ")", ")", ",", "'w'", ")", "\n", "json", ".", "dump", "(", "time_stamps", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.ego_pose.main": [[16, 56], ["tqdm.tqdm", "enumerate", "tqdm.tqdm.close", "nusc.get", "dict", "numpy.savez_compressed", "tqdm.tqdm.update", "len", "os.path.join", "copy.deepcopy", "nusc.get", "nusc.get", "nusc.get", "nusc.get", "nusc.get", "str"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update"], ["def", "main", "(", "nusc", ",", "scene_names", ",", "root_path", ",", "ego_folder", ",", "mode", ")", ":", "\n", "    ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "scene_names", ")", ")", "\n", "for", "scene_index", ",", "scene_info", "in", "enumerate", "(", "nusc", ".", "scene", ")", ":", "\n", "        ", "scene_name", "=", "scene_info", "[", "'name'", "]", "\n", "if", "scene_name", "not", "in", "scene_names", ":", "\n", "            ", "continue", "\n", "", "first_sample_token", "=", "scene_info", "[", "'first_sample_token'", "]", "\n", "last_sample_token", "=", "scene_info", "[", "'last_sample_token'", "]", "\n", "frame_data", "=", "nusc", ".", "get", "(", "'sample'", ",", "first_sample_token", ")", "\n", "if", "args", ".", "mode", "==", "'20hz'", ":", "\n", "            ", "cur_sample_token", "=", "frame_data", "[", "'data'", "]", "[", "'LIDAR_TOP'", "]", "\n", "", "elif", "args", ".", "mode", "==", "'2hz'", ":", "\n", "            ", "cur_sample_token", "=", "deepcopy", "(", "first_sample_token", ")", "\n", "", "frame_index", "=", "0", "\n", "ego_data", "=", "dict", "(", ")", "\n", "while", "True", ":", "\n", "            ", "if", "mode", "==", "'2hz'", ":", "\n", "                ", "frame_data", "=", "nusc", ".", "get", "(", "'sample'", ",", "cur_sample_token", ")", "\n", "lidar_token", "=", "frame_data", "[", "'data'", "]", "[", "'LIDAR_TOP'", "]", "\n", "lidar_data", "=", "nusc", ".", "get", "(", "'sample_data'", ",", "lidar_token", ")", "\n", "ego_token", "=", "lidar_data", "[", "'ego_pose_token'", "]", "\n", "ego_pose", "=", "nusc", ".", "get", "(", "'ego_pose'", ",", "ego_token", ")", "\n", "", "elif", "mode", "==", "'20hz'", ":", "\n", "                ", "frame_data", "=", "nusc", ".", "get", "(", "'sample_data'", ",", "cur_sample_token", ")", "\n", "ego_token", "=", "frame_data", "[", "'ego_pose_token'", "]", "\n", "ego_pose", "=", "nusc", ".", "get", "(", "'ego_pose'", ",", "ego_token", ")", "\n", "\n", "# translation + rotation", "\n", "", "ego_data", "[", "str", "(", "frame_index", ")", "]", "=", "ego_pose", "[", "'translation'", "]", "+", "ego_pose", "[", "'rotation'", "]", "\n", "\n", "# clean up and prepare for the next", "\n", "cur_sample_token", "=", "frame_data", "[", "'next'", "]", "\n", "if", "cur_sample_token", "==", "''", ":", "\n", "                ", "break", "\n", "", "frame_index", "+=", "1", "\n", "\n", "", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "ego_folder", ",", "'{:}.npz'", ".", "format", "(", "scene_name", ")", ")", ",", "**", "ego_data", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "", "pbar", ".", "close", "(", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.detection.get_sample_tokens": [[15, 29], ["os.path.join", "sorted", "dict", "enumerate", "os.listdir", "os.path.join", "json.load", "file_name.split", "open"], "function", ["None"], ["parser", ".", "add_argument", "(", "'--file_name'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--data_folder'", ",", "type", "=", "str", ",", "default", "=", "'./data/waymo/'", ")", "\n", "parser", ".", "add_argument", "(", "'--metadata'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--id'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--test'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "def", "bbox_dict2array", "(", "box_dict", ")", ":", "\n", "    ", "\"\"\"transform box dict in waymo_open_format to array\n    Args:\n        box_dict ([dict]): waymo_open_dataset formatted bbox\n    \"\"\"", "\n", "result", "=", "np", ".", "array", "(", "[", "\n", "box_dict", "[", "'center_x'", "]", ",", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.detection.sample_result2bbox_array": [[31, 35], ["None"], "function", ["None"], ["box_dict", "[", "'center_z'", "]", ",", "\n", "box_dict", "[", "'heading'", "]", ",", "\n", "box_dict", "[", "'length'", "]", ",", "\n", "box_dict", "[", "'width'", "]", ",", "\n", "box_dict", "[", "'height'", "]", ",", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.detection.main": [[37, 99], ["os.path.join", "os.path.join", "print", "open", "open.close", "detection.get_sample_tokens", "sorted", "list", "print", "tqdm.tqdm", "enumerate", "tqdm.tqdm.close", "print", "tqdm.tqdm", "tqdm.tqdm.close", "os.path.exists", "os.makedirs", "json.load", "list", "dict", "dict", "dict", "len", "det_data.keys", "tqdm.tqdm.update", "tqdm.tqdm.update", "get_sample_tokens.keys", "len", "len", "numpy.savez_compressed", "numpy.savez_compressed", "tokens[].index", "detection.sample_result2bbox_array", "os.path.join", "os.path.join", "range", "range", "range"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.detection.get_sample_tokens", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.detection.sample_result2bbox_array"], ["]", ")", "\n", "return", "result", "\n", "\n", "\n", "", "def", "str_list_to_int", "(", "lst", ")", ":", "\n", "    ", "result", "=", "[", "]", "\n", "for", "t", "in", "lst", ":", "\n", "        ", "try", ":", "\n", "            ", "t", "=", "int", "(", "t", ")", "\n", "result", ".", "append", "(", "t", ")", "\n", "", "except", ":", "\n", "            ", "continue", "\n", "", "", "return", "result", "\n", "\n", "\n", "", "def", "main", "(", "name", ",", "data_folder", ",", "det_folder", ",", "file_name", ",", "out_folder", ")", ":", "\n", "# load timestamp and segment names", "\n", "    ", "ts_info_folder", "=", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ts_info'", ")", "\n", "ts_files", "=", "os", ".", "listdir", "(", "ts_info_folder", ")", "\n", "ts_info", "=", "dict", "(", ")", "\n", "segment_name_list", "=", "list", "(", ")", "\n", "for", "ts_file_name", "in", "ts_files", ":", "\n", "        ", "ts", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "ts_info_folder", ",", "ts_file_name", ")", ",", "'r'", ")", ")", "\n", "segment_name", "=", "ts_file_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "ts_info", "[", "segment_name", "]", "=", "ts", "\n", "segment_name_list", ".", "append", "(", "segment_name", ")", "\n", "\n", "# load detection file", "\n", "", "det_folder", "=", "os", ".", "path", ".", "join", "(", "det_folder", ",", "name", ")", "\n", "f", "=", "open", "(", "file_name", ",", "'rb'", ")", "\n", "objects", "=", "metrics_pb2", ".", "Objects", "(", ")", "\n", "objects", ".", "ParseFromString", "(", "f", ".", "read", "(", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "# parse and aggregate detections", "\n", "objects", "=", "objects", ".", "objects", "\n", "object_num", "=", "len", "(", "objects", ")", "\n", "\n", "result_bbox", ",", "result_type", ",", "result_velo", ",", "result_accel", ",", "result_ids", "=", "dict", "(", ")", ",", "dict", "(", ")", ",", "dict", "(", ")", ",", "dict", "(", ")", ",", "dict", "(", ")", "\n", "for", "seg_name", "in", "ts_info", ".", "keys", "(", ")", ":", "\n", "        ", "result_bbox", "[", "seg_name", "]", "=", "dict", "(", ")", "\n", "result_type", "[", "seg_name", "]", "=", "dict", "(", ")", "\n", "result_velo", "[", "seg_name", "]", "=", "dict", "(", ")", "\n", "result_accel", "[", "seg_name", "]", "=", "dict", "(", ")", "\n", "result_ids", "[", "seg_name", "]", "=", "dict", "(", ")", "\n", "\n", "", "print", "(", "'Converting'", ")", "\n", "pbar", "=", "tqdm", "(", "total", "=", "object_num", ")", "\n", "for", "_i", "in", "range", "(", "object_num", ")", ":", "\n", "        ", "instance", "=", "objects", "[", "_i", "]", "\n", "segment", "=", "instance", ".", "context_name", "\n", "time_stamp", "=", "instance", ".", "frame_timestamp_micros", "\n", "\n", "box", "=", "instance", ".", "object", ".", "box", "\n", "bbox_dict", "=", "{", "\n", "'center_x'", ":", "box", ".", "center_x", ",", "\n", "'center_y'", ":", "box", ".", "center_y", ",", "\n", "'center_z'", ":", "box", ".", "center_z", ",", "\n", "'width'", ":", "box", ".", "width", ",", "\n", "'length'", ":", "box", ".", "length", ",", "\n", "'height'", ":", "box", ".", "height", ",", "\n", "'heading'", ":", "box", ".", "heading", ",", "\n", "'score'", ":", "instance", ".", "score", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.type_merge.main": [[16, 41], ["list", "list", "open", "json.dump", "open.close", "os.path.join", "open", "list.append", "open.close", "results.keys", "range", "os.path.join", "len", "json.load"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close"], ["def", "main", "(", "name", ",", "obj_types", ",", "result_folder", ")", ":", "\n", "    ", "raw_results", "=", "list", "(", ")", "\n", "for", "type_name", "in", "obj_types", ":", "\n", "        ", "path", "=", "os", ".", "path", ".", "join", "(", "result_folder", ",", "type_name", ",", "'results.json'", ")", "\n", "f", "=", "open", "(", "path", ",", "'r'", ")", "\n", "raw_results", ".", "append", "(", "json", ".", "load", "(", "f", ")", "[", "'results'", "]", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "results", "=", "raw_results", "[", "0", "]", "\n", "sample_tokens", "=", "list", "(", "results", ".", "keys", "(", ")", ")", "\n", "for", "token", "in", "sample_tokens", ":", "\n", "        ", "for", "i", "in", "range", "(", "1", ",", "len", "(", "obj_types", ")", ")", ":", "\n", "            ", "results", "[", "token", "]", "+=", "raw_results", "[", "i", "]", "[", "token", "]", "\n", "\n", "", "", "submission_file", "=", "{", "\n", "'meta'", ":", "{", "\n", "'use_camera'", ":", "False", ",", "'use_lidar'", ":", "True", ",", "'use_radar'", ":", "False", ",", "'use_map'", ":", "False", ",", "'use_external'", ":", "False", "\n", "}", ",", "\n", "'results'", ":", "results", "\n", "}", "\n", "\n", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "result_folder", ",", "'results.json'", ")", ",", "'w'", ")", "\n", "json", ".", "dump", "(", "submission_file", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.result_creation.bbox_array2nuscenes_format": [[18, 41], ["bbox_array[].tolist", "bbox_array[].tolist", "numpy.array", "pyquaternion.Quaternion", "pyquaternion.Quaternion.q.tolist", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["def", "bbox_array2nuscenes_format", "(", "bbox_array", ")", ":", "\n", "    ", "translation", "=", "bbox_array", "[", ":", "3", "]", ".", "tolist", "(", ")", "\n", "size", "=", "bbox_array", "[", "4", ":", "7", "]", ".", "tolist", "(", ")", "\n", "size", "=", "[", "size", "[", "1", "]", ",", "size", "[", "0", "]", ",", "size", "[", "2", "]", "]", "\n", "velocity", "=", "[", "0.0", ",", "0.0", "]", "\n", "score", "=", "bbox_array", "[", "-", "1", "]", "\n", "\n", "yaw", "=", "bbox_array", "[", "3", "]", "\n", "rot_matrix", "=", "np", ".", "array", "(", "[", "[", "np", ".", "cos", "(", "yaw", ")", ",", "-", "np", ".", "sin", "(", "yaw", ")", ",", "0", ",", "0", "]", ",", "\n", "[", "np", ".", "sin", "(", "yaw", ")", ",", "np", ".", "cos", "(", "yaw", ")", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "0", ",", "1", ",", "0", ",", "1", "]", "]", ")", "\n", "q", "=", "Quaternion", "(", "matrix", "=", "rot_matrix", ")", "\n", "rotation", "=", "q", ".", "q", ".", "tolist", "(", ")", "\n", "\n", "sample_result", "=", "{", "\n", "'translation'", ":", "translation", ",", "\n", "'size'", ":", "size", ",", "\n", "'velocity'", ":", "velocity", ",", "\n", "'rotation'", ":", "rotation", ",", "\n", "'tracking_score'", ":", "score", "\n", "}", "\n", "return", "sample_result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.result_creation.main": [[43, 90], ["print", "os.path.join", "sorted", "os.path.join", "dict", "tqdm.tqdm", "enumerate", "tqdm.tqdm.close", "open", "json.dump", "open.close", "os.listdir", "json.load", "numpy.load", "len", "range", "tqdm.tqdm.update", "os.path.join", "os.path.join", "len", "file_name.split", "open", "os.path.join", "list", "len", "range", "os.path.join", "result_creation.bbox_array2nuscenes_format", "results[].append", "mot_3d.data_protos.Validity.agein2", "str"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.nuscenes.result_creation.bbox_array2nuscenes_format", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.agein2"], ["", "def", "main", "(", "name", ",", "obj_types", ",", "data_folder", ",", "result_folder", ",", "output_folder", ")", ":", "\n", "    ", "for", "obj_type", "in", "obj_types", ":", "\n", "        ", "print", "(", "'CONVERTING {:}'", ".", "format", "(", "obj_type", ")", ")", "\n", "summary_folder", "=", "os", ".", "path", ".", "join", "(", "result_folder", ",", "'summary'", ",", "obj_type", ")", "\n", "file_names", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'ego_info'", ")", ")", ")", "\n", "token_info_folder", "=", "os", ".", "path", ".", "join", "(", "data_folder", ",", "'token_info'", ")", "\n", "\n", "results", "=", "dict", "(", ")", "\n", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "file_names", ")", ")", "\n", "for", "file_index", ",", "file_name", "in", "enumerate", "(", "file_names", ")", ":", "\n", "            ", "segment_name", "=", "file_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "token_info", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "token_info_folder", ",", "'{:}.json'", ".", "format", "(", "segment_name", ")", ")", ",", "'r'", ")", ")", "\n", "mot_results", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "summary_folder", ",", "'{:}.npz'", ".", "format", "(", "segment_name", ")", ")", ",", "allow_pickle", "=", "True", ")", "\n", "\n", "ids", ",", "bboxes", ",", "states", ",", "types", "=", "mot_results", "[", "'ids'", "]", ",", "mot_results", "[", "'bboxes'", "]", ",", "mot_results", "[", "'states'", "]", ",", "mot_results", "[", "'types'", "]", "\n", "frame_num", "=", "len", "(", "ids", ")", "\n", "for", "frame_index", "in", "range", "(", "frame_num", ")", ":", "\n", "                ", "sample_token", "=", "token_info", "[", "frame_index", "]", "\n", "results", "[", "sample_token", "]", "=", "list", "(", ")", "\n", "frame_bboxes", ",", "frame_ids", ",", "frame_types", ",", "frame_states", "=", "bboxes", "[", "frame_index", "]", ",", "ids", "[", "frame_index", "]", ",", "types", "[", "frame_index", "]", ",", "states", "[", "frame_index", "]", "\n", "\n", "frame_obj_num", "=", "len", "(", "frame_ids", ")", "\n", "for", "i", "in", "range", "(", "frame_obj_num", ")", ":", "\n", "# if not Validity.valid(frame_states[i]):", "\n", "#     continue", "\n", "                    ", "if", "not", "Validity", ".", "agein2", "(", "frame_states", "[", "i", "]", ")", ":", "\n", "                        ", "continue", "\n", "", "sample_result", "=", "bbox_array2nuscenes_format", "(", "frame_bboxes", "[", "i", "]", ")", "\n", "sample_result", "[", "'sample_token'", "]", "=", "sample_token", "\n", "sample_result", "[", "'tracking_id'", "]", "=", "frame_types", "[", "i", "]", "+", "'_'", "+", "str", "(", "frame_ids", "[", "i", "]", ")", "\n", "sample_result", "[", "'tracking_name'", "]", "=", "frame_types", "[", "i", "]", "\n", "results", "[", "sample_token", "]", ".", "append", "(", "sample_result", ")", "\n", "", "", "pbar", ".", "update", "(", "1", ")", "\n", "", "pbar", ".", "close", "(", ")", "\n", "submission_file", "=", "{", "\n", "'meta'", ":", "{", "\n", "'use_camera'", ":", "False", ",", "'use_lidar'", ":", "True", ",", "'use_radar'", ":", "False", ",", "'use_map'", ":", "False", ",", "'use_external'", ":", "False", "\n", "}", ",", "\n", "'results'", ":", "results", "\n", "}", "\n", "\n", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "obj_type", ",", "'results.json'", ")", ",", "'w'", ")", "\n", "json", ".", "dump", "(", "submission_file", ",", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.mot.MOTModel.__init__": [[11, 25], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "configs", ")", ":", "\n", "        ", "self", ".", "trackers", "=", "list", "(", ")", "# tracker for each single tracklet", "\n", "self", ".", "frame_count", "=", "0", "# record for the frames", "\n", "self", ".", "count", "=", "0", "# record the obj number to assign ids", "\n", "self", ".", "time_stamp", "=", "None", "# the previous time stamp", "\n", "\n", "self", ".", "configs", "=", "configs", "\n", "self", ".", "match_type", "=", "configs", "[", "'running'", "]", "[", "'match_type'", "]", "\n", "self", ".", "score_threshold", "=", "configs", "[", "'running'", "]", "[", "'score_threshold'", "]", "\n", "self", ".", "asso", "=", "configs", "[", "'running'", "]", "[", "'asso'", "]", "\n", "self", ".", "asso_thres", "=", "configs", "[", "'running'", "]", "[", "'asso_thres'", "]", "[", "self", ".", "asso", "]", "\n", "\n", "self", ".", "max_age", "=", "configs", "[", "'running'", "]", "[", "'max_age_since_update'", "]", "\n", "self", ".", "min_hits", "=", "configs", "[", "'running'", "]", "[", "'min_hits_to_birth'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.mot.MOTModel.frame_mot": [[27, 88], ["mot.MOTModel.forward_step_trk", "enumerate", "len", "enumerate", "list", "mot_3d.Tracklet", "mot_3d.Tracklet", "mot.MOTModel.trackers.append", "reversed", "trk.death", "trk.state_string", "list.append", "trk.sync_time_stamp", "range", "update_info_data.UpdateInfoData", "trk.update", "update_info_data.UpdateInfoData", "trk.update", "mot.MOTModel.trackers.pop", "len", "trk.get_state", "trk.get_state"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.mot.MOTModel.forward_step_trk", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.death", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.state_string", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.sync_time_stamp", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.get_state", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.get_state"], ["", "def", "frame_mot", "(", "self", ",", "input_data", ":", "FrameData", ")", ":", "\n", "        ", "\"\"\" For each frame input, generate the latest mot results\n        Args:\n            input_data (FrameData): input data, including detection bboxes and ego information\n        Returns:\n            tracks on this frame: [(bbox0, id0), (bbox1, id1), ...]\n        \"\"\"", "\n", "self", ".", "frame_count", "+=", "1", "\n", "# initialize the time stamp on frame 0", "\n", "if", "self", ".", "time_stamp", "is", "None", ":", "\n", "            ", "self", ".", "time_stamp", "=", "input_data", ".", "time_stamp", "\n", "\n", "", "matched", ",", "unmatched_dets", ",", "unmatched_trks", "=", "self", ".", "forward_step_trk", "(", "input_data", ")", "\n", "\n", "time_lag", "=", "input_data", ".", "time_stamp", "-", "self", ".", "time_stamp", "\n", "# update the matched tracks", "\n", "for", "t", ",", "trk", "in", "enumerate", "(", "self", ".", "trackers", ")", ":", "\n", "            ", "if", "t", "not", "in", "unmatched_trks", ":", "\n", "                ", "for", "k", "in", "range", "(", "len", "(", "matched", ")", ")", ":", "\n", "                    ", "if", "matched", "[", "k", "]", "[", "1", "]", "==", "t", ":", "\n", "                        ", "d", "=", "matched", "[", "k", "]", "[", "0", "]", "\n", "break", "\n", "", "", "aux_info", "=", "{", "'is_key_frame'", ":", "input_data", ".", "aux_info", "[", "'is_key_frame'", "]", "}", "\n", "update_info", "=", "UpdateInfoData", "(", "mode", "=", "1", ",", "bbox", "=", "input_data", ".", "dets", "[", "d", "]", ",", "ego", "=", "input_data", ".", "ego", ",", "\n", "frame_index", "=", "self", ".", "frame_count", ",", "pc", "=", "input_data", ".", "pc", ",", "\n", "dets", "=", "input_data", ".", "dets", ",", "aux_info", "=", "aux_info", ")", "\n", "trk", ".", "update", "(", "update_info", ")", "\n", "", "else", ":", "\n", "                ", "result_bbox", ",", "update_mode", ",", "aux_info", "=", "trk", ".", "get_state", "(", ")", ",", "0", ",", "None", "\n", "aux_info", "=", "{", "'is_key_frame'", ":", "input_data", ".", "aux_info", "[", "'is_key_frame'", "]", "}", "\n", "update_info", "=", "UpdateInfoData", "(", "mode", "=", "update_mode", ",", "bbox", "=", "result_bbox", ",", "\n", "ego", "=", "input_data", ".", "ego", ",", "frame_index", "=", "self", ".", "frame_count", ",", "\n", "pc", "=", "input_data", ".", "pc", ",", "dets", "=", "input_data", ".", "dets", ",", "aux_info", "=", "aux_info", ")", "\n", "trk", ".", "update", "(", "update_info", ")", "\n", "\n", "# create new tracks for unmatched detections", "\n", "", "", "for", "index", "in", "unmatched_dets", ":", "\n", "            ", "aux_info", "=", "{", "'is_key_frame'", ":", "input_data", ".", "aux_info", "[", "'is_key_frame'", "]", "}", "\n", "track", "=", "tracklet", ".", "Tracklet", "(", "self", ".", "configs", ",", "self", ".", "count", ",", "input_data", ".", "dets", "[", "index", "]", ",", "input_data", ".", "det_types", "[", "index", "]", ",", "\n", "self", ".", "frame_count", ",", "aux_info", "=", "aux_info", ",", "time_stamp", "=", "input_data", ".", "time_stamp", ")", "\n", "self", ".", "trackers", ".", "append", "(", "track", ")", "\n", "self", ".", "count", "+=", "1", "\n", "\n", "# remove dead tracks", "\n", "", "track_num", "=", "len", "(", "self", ".", "trackers", ")", "\n", "for", "index", ",", "trk", "in", "enumerate", "(", "reversed", "(", "self", ".", "trackers", ")", ")", ":", "\n", "            ", "if", "trk", ".", "death", "(", "self", ".", "frame_count", ")", ":", "\n", "                ", "self", ".", "trackers", ".", "pop", "(", "track_num", "-", "1", "-", "index", ")", "\n", "\n", "# output the results", "\n", "", "", "result", "=", "list", "(", ")", "\n", "for", "trk", "in", "self", ".", "trackers", ":", "\n", "            ", "state_string", "=", "trk", ".", "state_string", "(", "self", ".", "frame_count", ")", "\n", "result", ".", "append", "(", "(", "trk", ".", "get_state", "(", ")", ",", "trk", ".", "id", ",", "state_string", ",", "trk", ".", "det_type", ")", ")", "\n", "\n", "# wrap up and update the information about the mot trackers", "\n", "", "self", ".", "time_stamp", "=", "input_data", ".", "time_stamp", "\n", "for", "trk", "in", "self", ".", "trackers", ":", "\n", "            ", "trk", ".", "sync_time_stamp", "(", "self", ".", "time_stamp", ")", "\n", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.mot.MOTModel.forward_step_trk": [[89, 112], ["list", "association.associate_dets_to_tracks", "range", "range", "list.append", "len", "len", "enumerate", "trk.predict", "trk.compute_innovation_matrix"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.associate_dets_to_tracks", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.predict", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.compute_innovation_matrix"], ["", "def", "forward_step_trk", "(", "self", ",", "input_data", ":", "FrameData", ")", ":", "\n", "        ", "dets", "=", "input_data", ".", "dets", "\n", "det_indexes", "=", "[", "i", "for", "i", ",", "det", "in", "enumerate", "(", "dets", ")", "if", "det", ".", "s", ">=", "self", ".", "score_threshold", "]", "\n", "dets", "=", "[", "dets", "[", "i", "]", "for", "i", "in", "det_indexes", "]", "\n", "\n", "# prediction and association", "\n", "trk_preds", "=", "list", "(", ")", "\n", "for", "trk", "in", "self", ".", "trackers", ":", "\n", "            ", "trk_preds", ".", "append", "(", "trk", ".", "predict", "(", "input_data", ".", "time_stamp", ",", "input_data", ".", "aux_info", "[", "'is_key_frame'", "]", ")", ")", "\n", "\n", "# for m-distance association", "\n", "", "trk_innovation_matrix", "=", "None", "\n", "if", "self", ".", "asso", "==", "'m_dis'", ":", "\n", "            ", "trk_innovation_matrix", "=", "[", "trk", ".", "compute_innovation_matrix", "(", ")", "for", "trk", "in", "self", ".", "trackers", "]", "\n", "\n", "", "matched", ",", "unmatched_dets", ",", "unmatched_trks", "=", "associate_dets_to_tracks", "(", "dets", ",", "trk_preds", ",", "\n", "self", ".", "match_type", ",", "self", ".", "asso", ",", "self", ".", "asso_thres", ",", "trk_innovation_matrix", ")", "\n", "\n", "for", "k", "in", "range", "(", "len", "(", "matched", ")", ")", ":", "\n", "            ", "matched", "[", "k", "]", "[", "0", "]", "=", "det_indexes", "[", "matched", "[", "k", "]", "[", "0", "]", "]", "\n", "", "for", "k", "in", "range", "(", "len", "(", "unmatched_dets", ")", ")", ":", "\n", "            ", "unmatched_dets", "[", "k", "]", "=", "det_indexes", "[", "unmatched_dets", "[", "k", "]", "]", "\n", "", "return", "matched", ",", "unmatched_dets", ",", "unmatched_trks", "\n", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.associate_dets_to_tracks": [[9, 37], ["list", "enumerate", "list", "enumerate", "list", "association.bipartite_matcher", "numpy.array", "numpy.array", "association.greedy_matcher", "list.append", "list.append", "list.append", "list.append", "list.append", "m.reshape"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.bipartite_matcher", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.greedy_matcher"], ["def", "associate_dets_to_tracks", "(", "dets", ",", "tracks", ",", "mode", ",", "asso", ",", "\n", "dist_threshold", "=", "0.9", ",", "trk_innovation_matrix", "=", "None", ")", ":", "\n", "    ", "\"\"\" associate the tracks with detections\n    \"\"\"", "\n", "if", "mode", "==", "'bipartite'", ":", "\n", "        ", "matched_indices", ",", "dist_matrix", "=", "bipartite_matcher", "(", "dets", ",", "tracks", ",", "asso", ",", "dist_threshold", ",", "trk_innovation_matrix", ")", "\n", "", "elif", "mode", "==", "'greedy'", ":", "\n", "        ", "matched_indices", ",", "dist_matrix", "=", "greedy_matcher", "(", "dets", ",", "tracks", ",", "asso", ",", "dist_threshold", ",", "trk_innovation_matrix", ")", "\n", "", "unmatched_dets", "=", "list", "(", ")", "\n", "for", "d", ",", "det", "in", "enumerate", "(", "dets", ")", ":", "\n", "        ", "if", "d", "not", "in", "matched_indices", "[", ":", ",", "0", "]", ":", "\n", "            ", "unmatched_dets", ".", "append", "(", "d", ")", "\n", "\n", "", "", "unmatched_tracks", "=", "list", "(", ")", "\n", "for", "t", ",", "trk", "in", "enumerate", "(", "tracks", ")", ":", "\n", "        ", "if", "t", "not", "in", "matched_indices", "[", ":", ",", "1", "]", ":", "\n", "            ", "unmatched_tracks", ".", "append", "(", "t", ")", "\n", "\n", "", "", "matches", "=", "list", "(", ")", "\n", "for", "m", "in", "matched_indices", ":", "\n", "        ", "if", "dist_matrix", "[", "m", "[", "0", "]", ",", "m", "[", "1", "]", "]", ">", "dist_threshold", ":", "\n", "            ", "unmatched_dets", ".", "append", "(", "m", "[", "0", "]", ")", "\n", "unmatched_tracks", ".", "append", "(", "m", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "matches", ".", "append", "(", "m", ".", "reshape", "(", "2", ")", ")", "\n", "", "", "return", "matches", ",", "np", ".", "array", "(", "unmatched_dets", ")", ",", "np", ".", "array", "(", "unmatched_tracks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.bipartite_matcher": [[39, 51], ["scipy.optimize.linear_sum_assignment", "numpy.stack", "association.compute_iou_distance", "association.compute_iou_distance", "association.compute_m_distance", "association.compute_m_distance"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.compute_iou_distance", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.compute_iou_distance", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.compute_m_distance", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.compute_m_distance"], ["", "def", "bipartite_matcher", "(", "dets", ",", "tracks", ",", "asso", ",", "dist_threshold", ",", "trk_innovation_matrix", ")", ":", "\n", "    ", "if", "asso", "==", "'iou'", ":", "\n", "        ", "dist_matrix", "=", "compute_iou_distance", "(", "dets", ",", "tracks", ",", "asso", ")", "\n", "", "elif", "asso", "==", "'giou'", ":", "\n", "        ", "dist_matrix", "=", "compute_iou_distance", "(", "dets", ",", "tracks", ",", "asso", ")", "\n", "", "elif", "asso", "==", "'m_dis'", ":", "\n", "        ", "dist_matrix", "=", "compute_m_distance", "(", "dets", ",", "tracks", ",", "trk_innovation_matrix", ")", "\n", "", "elif", "asso", "==", "'euler'", ":", "\n", "        ", "dist_matrix", "=", "compute_m_distance", "(", "dets", ",", "tracks", ",", "None", ")", "\n", "", "row_ind", ",", "col_ind", "=", "linear_sum_assignment", "(", "dist_matrix", ")", "\n", "matched_indices", "=", "np", ".", "stack", "(", "[", "row_ind", ",", "col_ind", "]", ",", "axis", "=", "1", ")", "\n", "return", "matched_indices", ",", "dist_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.greedy_matcher": [[53, 88], ["list", "compute_iou_distance.reshape", "numpy.argsort", "numpy.stack", "range", "association.compute_m_distance", "int", "int", "len", "numpy.empty", "numpy.asarray", "association.compute_m_distance", "np.asarray.append", "association.compute_iou_distance", "association.compute_iou_distance"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.compute_m_distance", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.compute_m_distance", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.compute_iou_distance", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.compute_iou_distance"], ["", "def", "greedy_matcher", "(", "dets", ",", "tracks", ",", "asso", ",", "dist_threshold", ",", "trk_innovation_matrix", ")", ":", "\n", "    ", "\"\"\" it's ok to use iou in bipartite\n        but greedy is only for m_distance\n    \"\"\"", "\n", "matched_indices", "=", "list", "(", ")", "\n", "\n", "# compute the distance matrix", "\n", "if", "asso", "==", "'m_dis'", ":", "\n", "        ", "distance_matrix", "=", "compute_m_distance", "(", "dets", ",", "tracks", ",", "trk_innovation_matrix", ")", "\n", "", "elif", "asso", "==", "'euler'", ":", "\n", "        ", "distance_matrix", "=", "compute_m_distance", "(", "dets", ",", "tracks", ",", "None", ")", "\n", "", "elif", "asso", "==", "'iou'", ":", "\n", "        ", "distance_matrix", "=", "compute_iou_distance", "(", "dets", ",", "tracks", ",", "asso", ")", "\n", "", "elif", "asso", "==", "'giou'", ":", "\n", "        ", "distance_matrix", "=", "compute_iou_distance", "(", "dets", ",", "tracks", ",", "asso", ")", "\n", "", "num_dets", ",", "num_trks", "=", "distance_matrix", ".", "shape", "\n", "\n", "# association in the greedy manner", "\n", "distance_1d", "=", "distance_matrix", ".", "reshape", "(", "-", "1", ")", "\n", "index_1d", "=", "np", ".", "argsort", "(", "distance_1d", ")", "\n", "index_2d", "=", "np", ".", "stack", "(", "[", "index_1d", "//", "num_trks", ",", "index_1d", "%", "num_trks", "]", ",", "axis", "=", "1", ")", "\n", "detection_id_matches_to_tracking_id", "=", "[", "-", "1", "]", "*", "num_dets", "\n", "tracking_id_matches_to_detection_id", "=", "[", "-", "1", "]", "*", "num_trks", "\n", "for", "sort_i", "in", "range", "(", "index_2d", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "detection_id", "=", "int", "(", "index_2d", "[", "sort_i", "]", "[", "0", "]", ")", "\n", "tracking_id", "=", "int", "(", "index_2d", "[", "sort_i", "]", "[", "1", "]", ")", "\n", "if", "tracking_id_matches_to_detection_id", "[", "tracking_id", "]", "==", "-", "1", "and", "detection_id_matches_to_tracking_id", "[", "detection_id", "]", "==", "-", "1", ":", "\n", "            ", "tracking_id_matches_to_detection_id", "[", "tracking_id", "]", "=", "detection_id", "\n", "detection_id_matches_to_tracking_id", "[", "detection_id", "]", "=", "tracking_id", "\n", "matched_indices", ".", "append", "(", "[", "detection_id", ",", "tracking_id", "]", ")", "\n", "", "", "if", "len", "(", "matched_indices", ")", "==", "0", ":", "\n", "        ", "matched_indices", "=", "np", ".", "empty", "(", "(", "0", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "        ", "matched_indices", "=", "np", ".", "asarray", "(", "matched_indices", ")", "\n", "", "return", "matched_indices", ",", "distance_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.compute_m_distance": [[90, 108], ["numpy.empty", "enumerate", "enumerate", "numpy.linalg.inv", "len", "len", "utils.m_distance", "utils.m_distance"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.m_distance", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.m_distance"], ["", "def", "compute_m_distance", "(", "dets", ",", "tracks", ",", "trk_innovation_matrix", ")", ":", "\n", "    ", "\"\"\" compute l2 or mahalanobis distance\n        when the input trk_innovation_matrix is None, compute L2 distance (euler)\n        else compute mahalanobis distance\n        return dist_matrix: numpy array [len(dets), len(tracks)]\n    \"\"\"", "\n", "euler_dis", "=", "(", "trk_innovation_matrix", "is", "None", ")", "# is use euler distance", "\n", "if", "not", "euler_dis", ":", "\n", "        ", "trk_inv_inn_matrices", "=", "[", "np", ".", "linalg", ".", "inv", "(", "m", ")", "for", "m", "in", "trk_innovation_matrix", "]", "\n", "", "dist_matrix", "=", "np", ".", "empty", "(", "(", "len", "(", "dets", ")", ",", "len", "(", "tracks", ")", ")", ")", "\n", "\n", "for", "i", ",", "det", "in", "enumerate", "(", "dets", ")", ":", "\n", "        ", "for", "j", ",", "trk", "in", "enumerate", "(", "tracks", ")", ":", "\n", "            ", "if", "euler_dis", ":", "\n", "                ", "dist_matrix", "[", "i", ",", "j", "]", "=", "utils", ".", "m_distance", "(", "det", ",", "trk", ")", "\n", "", "else", ":", "\n", "                ", "dist_matrix", "[", "i", ",", "j", "]", "=", "utils", ".", "m_distance", "(", "det", ",", "trk", ",", "trk_inv_inn_matrices", "[", "j", "]", ")", "\n", "", "", "", "return", "dist_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.association.compute_iou_distance": [[110, 120], ["numpy.zeros", "enumerate", "enumerate", "len", "len", "utils.iou3d", "utils.giou3d"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.iou3d", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.giou3d"], ["", "def", "compute_iou_distance", "(", "dets", ",", "tracks", ",", "asso", "=", "'iou'", ")", ":", "\n", "    ", "iou_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "dets", ")", ",", "len", "(", "tracks", ")", ")", ")", "\n", "for", "d", ",", "det", "in", "enumerate", "(", "dets", ")", ":", "\n", "        ", "for", "t", ",", "trk", "in", "enumerate", "(", "tracks", ")", ":", "\n", "            ", "if", "asso", "==", "'iou'", ":", "\n", "                ", "iou_matrix", "[", "d", ",", "t", "]", "=", "utils", ".", "iou3d", "(", "det", ",", "trk", ")", "[", "1", "]", "\n", "", "elif", "asso", "==", "'giou'", ":", "\n", "                ", "iou_matrix", "[", "d", ",", "t", "]", "=", "utils", ".", "giou3d", "(", "det", ",", "trk", ")", "\n", "", "", "", "dist_matrix", "=", "1", "-", "iou_matrix", "\n", "return", "dist_matrix", "\n", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.update_info_data.UpdateInfoData.__init__": [[9, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mode", ",", "bbox", ",", "frame_index", ",", "ego", ",", "dets", "=", "None", ",", "pc", "=", "None", ",", "aux_info", "=", "None", ")", ":", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "self", ".", "bbox", "=", "bbox", "\n", "self", ".", "ego", "=", "ego", "\n", "self", ".", "frame_index", "=", "frame_index", "\n", "self", ".", "pc", "=", "pc", "\n", "self", ".", "dets", "=", "dets", "\n", "self", ".", "aux_info", "=", "aux_info", "\n", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.mot_3d.frame_data.FrameData.__init__": [[8, 18], ["enumerate", "data_protos.BBox.array2bbox"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox"], ["    ", "def", "__init__", "(", "self", ",", "dets", ",", "ego", ",", "time_stamp", "=", "None", ",", "pc", "=", "None", ",", "det_types", "=", "None", ",", "aux_info", "=", "None", ")", ":", "\n", "        ", "self", ".", "dets", "=", "dets", "# detections for each frame", "\n", "self", ".", "ego", "=", "ego", "# ego matrix information", "\n", "self", ".", "pc", "=", "pc", "\n", "self", ".", "det_types", "=", "det_types", "\n", "self", ".", "time_stamp", "=", "time_stamp", "\n", "self", ".", "aux_info", "=", "aux_info", "\n", "\n", "for", "i", ",", "det", "in", "enumerate", "(", "self", ".", "dets", ")", ":", "\n", "            ", "self", ".", "dets", "[", "i", "]", "=", "BBox", ".", "array2bbox", "(", "det", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.str2int": [[10, 13], ["int"], "function", ["None"], ["def", "str2int", "(", "strs", ")", ":", "\n", "    ", "result", "=", "[", "int", "(", "s", ")", "for", "s", "in", "strs", "]", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.box_wrapper": [[15, 25], ["len", "list", "range", "list", "len", "range", "list.append", "list.append"], "function", ["None"], ["", "def", "box_wrapper", "(", "bboxes", ",", "ids", ")", ":", "\n", "    ", "frame_num", "=", "len", "(", "ids", ")", "\n", "result", "=", "list", "(", ")", "\n", "for", "_i", "in", "range", "(", "frame_num", ")", ":", "\n", "        ", "frame_result", "=", "list", "(", ")", "\n", "num", "=", "len", "(", "ids", "[", "_i", "]", ")", "\n", "for", "_j", "in", "range", "(", "num", ")", ":", "\n", "            ", "frame_result", ".", "append", "(", "(", "ids", "[", "_i", "]", "[", "_j", "]", ",", "bboxes", "[", "_i", "]", "[", "_j", "]", ")", ")", "\n", "", "result", ".", "append", "(", "frame_result", ")", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.id_transform": [[27, 47], ["len", "list", "range", "sorted", "dict", "enumerate", "list", "range", "list", "list", "len", "range", "list.append", "set", "list.append"], "function", ["None"], ["", "def", "id_transform", "(", "ids", ")", ":", "\n", "    ", "frame_num", "=", "len", "(", "ids", ")", "\n", "\n", "id_list", "=", "list", "(", ")", "\n", "for", "_i", "in", "range", "(", "frame_num", ")", ":", "\n", "        ", "id_list", "+=", "ids", "[", "_i", "]", "\n", "", "id_list", "=", "sorted", "(", "list", "(", "set", "(", "id_list", ")", ")", ")", "\n", "\n", "id_mapping", "=", "dict", "(", ")", "\n", "for", "_i", ",", "id", "in", "enumerate", "(", "id_list", ")", ":", "\n", "        ", "id_mapping", "[", "id", "]", "=", "_i", "\n", "\n", "", "result", "=", "list", "(", ")", "\n", "for", "_i", "in", "range", "(", "frame_num", ")", ":", "\n", "        ", "frame_ids", "=", "list", "(", ")", "\n", "frame_id_num", "=", "len", "(", "ids", "[", "_i", "]", ")", "\n", "for", "_j", "in", "range", "(", "frame_id_num", ")", ":", "\n", "            ", "frame_ids", ".", "append", "(", "id_mapping", "[", "ids", "[", "_i", "]", "[", "_j", "]", "]", ")", "\n", "", "result", ".", "append", "(", "frame_ids", ")", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.inst_filter": [[49, 68], ["len", "range", "data_utils.id_transform", "list", "list", "len", "range", "id_result.append", "bbox_result.append", "list.append", "list.append", "data_protos.BBox.array2bbox"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.id_transform", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox"], ["", "def", "inst_filter", "(", "ids", ",", "bboxes", ",", "types", ",", "type_field", "=", "[", "1", "]", ",", "id_trans", "=", "False", ")", ":", "\n", "    ", "\"\"\" filter the bboxes according to types\n    \"\"\"", "\n", "frame_num", "=", "len", "(", "ids", ")", "\n", "if", "id_trans", ":", "\n", "        ", "ids", "=", "id_transform", "(", "ids", ")", "\n", "", "id_result", ",", "bbox_result", "=", "[", "]", ",", "[", "]", "\n", "for", "_i", "in", "range", "(", "frame_num", ")", ":", "\n", "        ", "frame_ids", "=", "list", "(", ")", "\n", "frame_bboxes", "=", "list", "(", ")", "\n", "frame_id_num", "=", "len", "(", "ids", "[", "_i", "]", ")", "\n", "for", "_j", "in", "range", "(", "frame_id_num", ")", ":", "\n", "            ", "obj_type", "=", "types", "[", "_i", "]", "[", "_j", "]", "\n", "if", "obj_type", "in", "type_field", ":", "\n", "                ", "frame_ids", ".", "append", "(", "ids", "[", "_i", "]", "[", "_j", "]", ")", "\n", "frame_bboxes", ".", "append", "(", "BBox", ".", "array2bbox", "(", "bboxes", "[", "_i", "]", "[", "_j", "]", ")", ")", "\n", "", "", "id_result", ".", "append", "(", "frame_ids", ")", "\n", "bbox_result", ".", "append", "(", "frame_bboxes", ")", "\n", "", "return", "id_result", ",", "bbox_result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.data_utils.type_filter": [[70, 83], ["len", "enumerate", "list", "range", "range", "list", "len", "range", "content_result[].append", "len", "list.append"], "function", ["None"], ["", "def", "type_filter", "(", "contents", ",", "types", ",", "type_field", "=", "[", "1", "]", ")", ":", "\n", "    ", "frame_num", "=", "len", "(", "types", ")", "\n", "content_result", "=", "[", "list", "(", ")", "for", "i", "in", "range", "(", "len", "(", "type_field", ")", ")", "]", "\n", "for", "_k", ",", "inst_type", "in", "enumerate", "(", "type_field", ")", ":", "\n", "        ", "for", "_i", "in", "range", "(", "frame_num", ")", ":", "\n", "            ", "frame_contents", "=", "list", "(", ")", "\n", "frame_id_num", "=", "len", "(", "contents", "[", "_i", "]", ")", "\n", "for", "_j", "in", "range", "(", "frame_id_num", ")", ":", "\n", "                ", "if", "types", "[", "_i", "]", "[", "_j", "]", "!=", "inst_type", ":", "\n", "                    ", "continue", "\n", "", "frame_contents", ".", "append", "(", "contents", "[", "_i", "]", "[", "_j", "]", ")", "\n", "", "content_result", "[", "_k", "]", ".", "append", "(", "frame_contents", ")", "\n", "", "", "return", "content_result", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.velo2world": [[15, 21], ["None"], "function", ["None"], ["def", "velo2world", "(", "ego_matrix", ",", "velo", ")", ":", "\n", "    ", "\"\"\" transform local velocity [x, y] to global\n    \"\"\"", "\n", "new_velo", "=", "velo", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "new_velo", "=", "ego_matrix", "[", ":", "2", ",", ":", "2", "]", "@", "new_velo", "\n", "return", "new_velo", "[", ":", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.apply_motion_to_points": [[23, 35], ["geometry.make_transformation_matrix", "copy.deepcopy", "numpy.concatenate", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.make_transformation_matrix"], ["", "def", "apply_motion_to_points", "(", "points", ",", "motion", ",", "pre_move", "=", "0", ")", ":", "\n", "    ", "transformation_matrix", "=", "make_transformation_matrix", "(", "motion", ")", "\n", "points", "=", "deepcopy", "(", "points", ")", "\n", "points", "=", "points", "+", "pre_move", "\n", "new_points", "=", "np", ".", "concatenate", "(", "(", "points", ",", "\n", "np", ".", "ones", "(", "points", ".", "shape", "[", "0", "]", ")", "[", ":", ",", "np", ".", "newaxis", "]", ")", ",", "\n", "axis", "=", "1", ")", "\n", "\n", "new_points", "=", "transformation_matrix", "@", "new_points", ".", "T", "\n", "new_points", "=", "new_points", ".", "T", "[", ":", ",", ":", "3", "]", "\n", "new_points", "-=", "pre_move", "\n", "return", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.downsample": [[37, 51], ["dict", "range", "numpy.zeros", "dict.items", "numpy.floor", "len", "int", "int", "int"], "function", ["None"], ["", "@", "numba", ".", "njit", "\n", "def", "downsample", "(", "points", ",", "voxel_size", "=", "0.05", ")", ":", "\n", "    ", "sample_dict", "=", "dict", "(", ")", "\n", "for", "i", "in", "range", "(", "points", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "point_coord", "=", "np", ".", "floor", "(", "points", "[", "i", "]", "/", "voxel_size", ")", "\n", "sample_dict", "[", "(", "int", "(", "point_coord", "[", "0", "]", ")", ",", "int", "(", "point_coord", "[", "1", "]", ")", ",", "int", "(", "point_coord", "[", "2", "]", ")", ")", "]", "=", "True", "\n", "", "res", "=", "np", ".", "zeros", "(", "(", "len", "(", "sample_dict", ")", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "idx", "=", "0", "\n", "for", "k", ",", "v", "in", "sample_dict", ".", "items", "(", ")", ":", "\n", "        ", "res", "[", "idx", ",", "0", "]", "=", "k", "[", "0", "]", "*", "voxel_size", "+", "voxel_size", "/", "2", "\n", "res", "[", "idx", ",", "1", "]", "=", "k", "[", "1", "]", "*", "voxel_size", "+", "voxel_size", "/", "2", "\n", "res", "[", "idx", ",", "2", "]", "=", "k", "[", "2", "]", "*", "voxel_size", "+", "voxel_size", "/", "2", "\n", "idx", "+=", "1", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.pc_in_box": [[90, 96], ["geometry.pc_in_box_inner"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.pc_in_box_inner"], ["", "def", "pc_in_box", "(", "box", ",", "pc", ",", "box_scaling", "=", "1.5", ")", ":", "\n", "    ", "center_x", ",", "center_y", ",", "length", ",", "width", "=", "box", ".", "x", ",", "box", ".", "y", ",", "box", ".", "l", ",", "box", ".", "w", "\n", "center_z", ",", "height", "=", "box", ".", "z", ",", "box", ".", "h", "\n", "yaw", "=", "box", ".", "o", "\n", "return", "pc_in_box_inner", "(", "center_x", ",", "center_y", ",", "center_z", ",", "length", ",", "width", ",", "height", ",", "yaw", ",", "pc", ",", "box_scaling", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.pc_in_box_inner": [[98, 114], ["numpy.zeros", "range", "numpy.argwhere", "numpy.zeros", "range", "numpy.cos", "numpy.sin", "numpy.abs", "numpy.abs", "numpy.abs"], "function", ["None"], ["", "@", "numba", ".", "njit", "\n", "def", "pc_in_box_inner", "(", "center_x", ",", "center_y", ",", "center_z", ",", "length", ",", "width", ",", "height", ",", "yaw", ",", "pc", ",", "box_scaling", "=", "1.5", ")", ":", "\n", "    ", "mask", "=", "np", ".", "zeros", "(", "pc", ".", "shape", "[", "0", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "yaw_cos", ",", "yaw_sin", "=", "np", ".", "cos", "(", "yaw", ")", ",", "np", ".", "sin", "(", "yaw", ")", "\n", "for", "i", "in", "range", "(", "pc", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "rx", "=", "np", ".", "abs", "(", "(", "pc", "[", "i", ",", "0", "]", "-", "center_x", ")", "*", "yaw_cos", "+", "(", "pc", "[", "i", ",", "1", "]", "-", "center_y", ")", "*", "yaw_sin", ")", "\n", "ry", "=", "np", ".", "abs", "(", "(", "pc", "[", "i", ",", "0", "]", "-", "center_x", ")", "*", "-", "yaw_sin", "+", "(", "pc", "[", "i", ",", "1", "]", "-", "center_y", ")", "*", "yaw_cos", ")", "\n", "rz", "=", "np", ".", "abs", "(", "pc", "[", "i", ",", "2", "]", "-", "center_z", ")", "\n", "\n", "if", "rx", "<", "(", "length", "*", "box_scaling", "/", "2", ")", "and", "ry", "<", "(", "width", "*", "box_scaling", "/", "2", ")", "and", "rz", "<", "(", "height", "*", "box_scaling", "/", "2", ")", ":", "\n", "            ", "mask", "[", "i", "]", "=", "1", "\n", "", "", "indices", "=", "np", ".", "argwhere", "(", "mask", "==", "1", ")", "\n", "result", "=", "np", ".", "zeros", "(", "(", "indices", ".", "shape", "[", "0", "]", ",", "3", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "for", "i", "in", "range", "(", "indices", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "result", "[", "i", ",", ":", "]", "=", "pc", "[", "indices", "[", "i", "]", ",", ":", "]", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.pc_in_box_2D": [[116, 122], ["geometry.pc_in_box_2D_inner"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.pc_in_box_2D_inner"], ["", "def", "pc_in_box_2D", "(", "box", ",", "pc", ",", "box_scaling", "=", "1.0", ")", ":", "\n", "    ", "center_x", ",", "center_y", ",", "length", ",", "width", "=", "box", ".", "x", ",", "box", ".", "y", ",", "box", ".", "l", ",", "box", ".", "w", "\n", "center_z", ",", "height", "=", "box", ".", "z", ",", "box", ".", "h", "\n", "yaw", "=", "box", ".", "o", "\n", "return", "pc_in_box_2D_inner", "(", "center_x", ",", "center_y", ",", "center_z", ",", "length", ",", "width", ",", "height", ",", "yaw", ",", "pc", ",", "box_scaling", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.pc_in_box_2D_inner": [[124, 139], ["numpy.zeros", "range", "numpy.argwhere", "numpy.zeros", "range", "numpy.cos", "numpy.sin", "numpy.abs", "numpy.abs"], "function", ["None"], ["", "@", "numba", ".", "njit", "\n", "def", "pc_in_box_2D_inner", "(", "center_x", ",", "center_y", ",", "center_z", ",", "length", ",", "width", ",", "height", ",", "yaw", ",", "pc", ",", "box_scaling", "=", "1.0", ")", ":", "\n", "    ", "mask", "=", "np", ".", "zeros", "(", "pc", ".", "shape", "[", "0", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "yaw_cos", ",", "yaw_sin", "=", "np", ".", "cos", "(", "yaw", ")", ",", "np", ".", "sin", "(", "yaw", ")", "\n", "for", "i", "in", "range", "(", "pc", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "rx", "=", "np", ".", "abs", "(", "(", "pc", "[", "i", ",", "0", "]", "-", "center_x", ")", "*", "yaw_cos", "+", "(", "pc", "[", "i", ",", "1", "]", "-", "center_y", ")", "*", "yaw_sin", ")", "\n", "ry", "=", "np", ".", "abs", "(", "(", "pc", "[", "i", ",", "0", "]", "-", "center_x", ")", "*", "-", "yaw_sin", "+", "(", "pc", "[", "i", ",", "1", "]", "-", "center_y", ")", "*", "yaw_cos", ")", "\n", "\n", "if", "rx", "<", "(", "length", "*", "box_scaling", "/", "2", ")", "and", "ry", "<", "(", "width", "*", "box_scaling", "/", "2", ")", ":", "\n", "            ", "mask", "[", "i", "]", "=", "1", "\n", "", "", "indices", "=", "np", ".", "argwhere", "(", "mask", "==", "1", ")", "\n", "result", "=", "np", ".", "zeros", "(", "(", "indices", ".", "shape", "[", "0", "]", ",", "3", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "for", "i", "in", "range", "(", "indices", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "result", "[", "i", ",", ":", "]", "=", "pc", "[", "indices", "[", "i", "]", ",", ":", "]", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.make_transformation_matrix": [[141, 148], ["numpy.array", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "make_transformation_matrix", "(", "motion", ")", ":", "\n", "    ", "x", ",", "y", ",", "z", ",", "theta", "=", "motion", "\n", "transformation_matrix", "=", "np", ".", "array", "(", "[", "[", "np", ".", "cos", "(", "theta", ")", ",", "-", "np", ".", "sin", "(", "theta", ")", ",", "0", ",", "x", "]", ",", "\n", "[", "np", ".", "sin", "(", "theta", ")", ",", "np", ".", "cos", "(", "theta", ")", ",", "0", ",", "y", "]", ",", "\n", "[", "0", ",", "0", ",", "1", ",", "z", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "return", "transformation_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.iou2d": [[150, 159], ["numpy.array", "numpy.array", "shapely.geometry.Polygon", "shapely.geometry.Polygon", "reca.intersection", "data_protos.BBox.box2corners2d", "data_protos.BBox.box2corners2d"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d"], ["", "def", "iou2d", "(", "box_a", ",", "box_b", ")", ":", "\n", "    ", "boxa_corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box_a", ")", ")", "[", ":", ",", ":", "2", "]", "\n", "boxb_corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box_b", ")", ")", "[", ":", ",", ":", "2", "]", "\n", "reca", ",", "recb", "=", "Polygon", "(", "boxa_corners", ")", ",", "Polygon", "(", "boxb_corners", ")", "\n", "overlap", "=", "reca", ".", "intersection", "(", "recb", ")", ".", "area", "\n", "area_a", "=", "reca", ".", "area", "\n", "area_b", "=", "recb", ".", "area", "\n", "iou", "=", "overlap", "/", "(", "area_a", "+", "area_b", "-", "overlap", "+", "1e-10", ")", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.iou3d": [[161, 176], ["numpy.array", "max", "data_protos.BBox.box2corners2d", "numpy.array", "shapely.geometry.Polygon", "shapely.geometry.Polygon", "reca.intersection", "min", "data_protos.BBox.box2corners2d"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d"], ["", "def", "iou3d", "(", "box_a", ",", "box_b", ")", ":", "\n", "    ", "boxa_corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box_a", ")", ")", "\n", "boxb_corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box_b", ")", ")", "[", ":", ",", ":", "2", "]", "\n", "reca", ",", "recb", "=", "Polygon", "(", "boxa_corners", ")", ",", "Polygon", "(", "boxb_corners", ")", "\n", "overlap_area", "=", "reca", ".", "intersection", "(", "recb", ")", ".", "area", "\n", "iou_2d", "=", "overlap_area", "/", "(", "reca", ".", "area", "+", "recb", ".", "area", "-", "overlap_area", ")", "\n", "\n", "ha", ",", "hb", "=", "box_a", ".", "h", ",", "box_b", ".", "h", "\n", "za", ",", "zb", "=", "box_a", ".", "z", ",", "box_b", ".", "z", "\n", "overlap_height", "=", "max", "(", "0", ",", "min", "(", "(", "za", "+", "ha", "/", "2", ")", "-", "(", "zb", "-", "hb", "/", "2", ")", ",", "(", "zb", "+", "hb", "/", "2", ")", "-", "(", "za", "-", "ha", "/", "2", ")", ")", ")", "\n", "overlap_volume", "=", "overlap_area", "*", "overlap_height", "\n", "union_volume", "=", "box_a", ".", "w", "*", "box_a", ".", "l", "*", "ha", "+", "box_b", ".", "w", "*", "box_b", ".", "l", "*", "hb", "-", "overlap_volume", "\n", "iou_3d", "=", "overlap_volume", "/", "(", "union_volume", "+", "1e-5", ")", "\n", "\n", "return", "iou_2d", ",", "iou_3d", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.pc2world": [[178, 185], ["numpy.concatenate", "numpy.ones"], "function", ["None"], ["", "def", "pc2world", "(", "ego_matrix", ",", "pcs", ")", ":", "\n", "    ", "new_pcs", "=", "np", ".", "concatenate", "(", "(", "pcs", ",", "\n", "np", ".", "ones", "(", "pcs", ".", "shape", "[", "0", "]", ")", "[", ":", ",", "np", ".", "newaxis", "]", ")", ",", "\n", "axis", "=", "1", ")", "\n", "new_pcs", "=", "ego_matrix", "@", "new_pcs", ".", "T", "\n", "new_pcs", "=", "new_pcs", ".", "T", "[", ":", ",", ":", "3", "]", "\n", "return", "new_pcs", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.giou2d": [[187, 205], ["numpy.array", "numpy.array", "numpy.vstack", "scipy.spatial.ConvexHull", "geometry.PolyArea2D", "data_protos.BBox.box2corners2d", "data_protos.BBox.box2corners2d", "shapely.geometry.Polygon", "shapely.geometry.Polygon", "reca.intersection"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.PolyArea2D", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d"], ["", "def", "giou2d", "(", "box_a", ":", "BBox", ",", "box_b", ":", "BBox", ")", ":", "\n", "    ", "boxa_corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box_a", ")", ")", "\n", "boxb_corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box_b", ")", ")", "\n", "reca", ",", "recb", "=", "Polygon", "(", "boxa_corners", ")", ",", "Polygon", "(", "boxb_corners", ")", "\n", "\n", "# compute intersection and union", "\n", "I", "=", "reca", ".", "intersection", "(", "recb", ")", ".", "area", "\n", "U", "=", "box_a", ".", "w", "*", "box_a", ".", "l", "+", "box_b", ".", "w", "*", "box_b", ".", "l", "-", "I", "\n", "\n", "# compute the convex area", "\n", "all_corners", "=", "np", ".", "vstack", "(", "(", "boxa_corners", ",", "boxb_corners", ")", ")", "\n", "C", "=", "ConvexHull", "(", "all_corners", ")", "\n", "convex_corners", "=", "all_corners", "[", "C", ".", "vertices", "]", "\n", "convex_area", "=", "PolyArea2D", "(", "convex_corners", ")", "\n", "C", "=", "convex_area", "\n", "\n", "# compute giou", "\n", "return", "I", "/", "U", "-", "(", "C", "-", "U", ")", "/", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.giou3d": [[207, 230], ["max", "max", "numpy.vstack", "scipy.spatial.ConvexHull", "geometry.PolyArea2D", "numpy.array", "numpy.array", "shapely.geometry.Polygon", "shapely.geometry.Polygon", "min", "data_protos.BBox.box2corners2d", "data_protos.BBox.box2corners2d", "reca.intersection"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.PolyArea2D", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d"], ["", "def", "giou3d", "(", "box_a", ":", "BBox", ",", "box_b", ":", "BBox", ")", ":", "\n", "    ", "boxa_corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box_a", ")", ")", "[", ":", ",", ":", "2", "]", "\n", "boxb_corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box_b", ")", ")", "[", ":", ",", ":", "2", "]", "\n", "reca", ",", "recb", "=", "Polygon", "(", "boxa_corners", ")", ",", "Polygon", "(", "boxb_corners", ")", "\n", "ha", ",", "hb", "=", "box_a", ".", "h", ",", "box_b", ".", "h", "\n", "za", ",", "zb", "=", "box_a", ".", "z", ",", "box_b", ".", "z", "\n", "overlap_height", "=", "max", "(", "0", ",", "min", "(", "(", "za", "+", "ha", "/", "2", ")", "-", "(", "zb", "-", "hb", "/", "2", ")", ",", "(", "zb", "+", "hb", "/", "2", ")", "-", "(", "za", "-", "ha", "/", "2", ")", ")", ")", "\n", "union_height", "=", "max", "(", "(", "za", "+", "ha", "/", "2", ")", "-", "(", "zb", "-", "hb", "/", "2", ")", ",", "(", "zb", "+", "hb", "/", "2", ")", "-", "(", "za", "-", "ha", "/", "2", ")", ")", "\n", "\n", "# compute intersection and union", "\n", "I", "=", "reca", ".", "intersection", "(", "recb", ")", ".", "area", "*", "overlap_height", "\n", "U", "=", "box_a", ".", "w", "*", "box_a", ".", "l", "*", "ha", "+", "box_b", ".", "w", "*", "box_b", ".", "l", "*", "hb", "-", "I", "\n", "\n", "# compute the convex area", "\n", "all_corners", "=", "np", ".", "vstack", "(", "(", "boxa_corners", ",", "boxb_corners", ")", ")", "\n", "C", "=", "ConvexHull", "(", "all_corners", ")", "\n", "convex_corners", "=", "all_corners", "[", "C", ".", "vertices", "]", "\n", "convex_area", "=", "PolyArea2D", "(", "convex_corners", ")", "\n", "C", "=", "convex_area", "*", "union_height", "\n", "\n", "# compute giou", "\n", "giou", "=", "I", "/", "U", "-", "(", "C", "-", "U", ")", "/", "C", "\n", "return", "giou", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.PolyArea2D": [[232, 236], ["numpy.roll", "numpy.abs", "numpy.sum"], "function", ["None"], ["", "def", "PolyArea2D", "(", "pts", ")", ":", "\n", "    ", "roll_pts", "=", "np", ".", "roll", "(", "pts", ",", "-", "1", ",", "axis", "=", "0", ")", "\n", "area", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "(", "pts", "[", ":", ",", "0", "]", "*", "roll_pts", "[", ":", ",", "1", "]", "-", "pts", "[", ":", ",", "1", "]", "*", "roll_pts", "[", ":", ",", "0", "]", ")", ")", ")", "*", "0.5", "\n", "return", "area", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.back_step_det": [[238, 244], ["data_protos.BBox", "data_protos.BBox.copy_bbox"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.copy_bbox"], ["", "def", "back_step_det", "(", "det", ":", "BBox", ",", "velo", ",", "time_lag", ")", ":", "\n", "    ", "result", "=", "BBox", "(", ")", "\n", "BBox", ".", "copy_bbox", "(", "result", ",", "det", ")", "\n", "result", ".", "x", "-=", "(", "time_lag", "*", "velo", "[", "0", "]", ")", "\n", "result", ".", "y", "-=", "(", "time_lag", "*", "velo", "[", "1", "]", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.diff_orientation_correction": [[246, 256], ["None"], "function", ["None"], ["", "def", "diff_orientation_correction", "(", "diff", ")", ":", "\n", "    ", "\"\"\"\n    return the angle diff = det - trk\n    if angle diff > 90 or < -90, rotate trk and update the angle diff\n    \"\"\"", "\n", "if", "diff", ">", "np", ".", "pi", "/", "2", ":", "\n", "        ", "diff", "-=", "np", ".", "pi", "\n", "", "if", "diff", "<", "-", "np", ".", "pi", "/", "2", ":", "\n", "        ", "diff", "+=", "np", ".", "pi", "\n", "", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.m_distance": [[258, 272], ["numpy.expand_dims", "geometry.diff_orientation_correction", "data_protos.BBox.bbox2array", "data_protos.BBox.bbox2array", "numpy.sqrt", "numpy.sqrt", "numpy.dot", "numpy.matmul", "numpy.matmul"], "function", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.utils.geometry.diff_orientation_correction", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["", "def", "m_distance", "(", "det", ",", "trk", ",", "trk_inv_innovation_matrix", "=", "None", ")", ":", "\n", "    ", "det_array", "=", "BBox", ".", "bbox2array", "(", "det", ")", "[", ":", "7", "]", "\n", "trk_array", "=", "BBox", ".", "bbox2array", "(", "trk", ")", "[", ":", "7", "]", "\n", "\n", "diff", "=", "np", ".", "expand_dims", "(", "det_array", "-", "trk_array", ",", "axis", "=", "1", ")", "\n", "corrected_yaw_diff", "=", "diff_orientation_correction", "(", "diff", "[", "3", "]", ")", "\n", "diff", "[", "3", "]", "=", "corrected_yaw_diff", "\n", "\n", "if", "trk_inv_innovation_matrix", "is", "not", "None", ":", "\n", "        ", "result", "=", "np", ".", "sqrt", "(", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "diff", ".", "T", ",", "trk_inv_innovation_matrix", ")", ",", "diff", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "result", "=", "np", ".", "sqrt", "(", "np", ".", "dot", "(", "diff", ".", "T", ",", "diff", ")", ")", "\n", "", "return", "result", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.tracklet.tracklet.Tracklet.__init__": [[10, 27], ["motion_model.KalmanFilterMotionModel", "life.HitManager"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "configs", ",", "id", ",", "bbox", ":", "BBox", ",", "det_type", ",", "frame_index", ",", "time_stamp", "=", "None", ",", "aux_info", "=", "None", ")", ":", "\n", "        ", "self", ".", "id", "=", "id", "\n", "self", ".", "time_stamp", "=", "time_stamp", "\n", "self", ".", "asso", "=", "configs", "[", "'running'", "]", "[", "'asso'", "]", "\n", "\n", "self", ".", "configs", "=", "configs", "\n", "self", ".", "det_type", "=", "det_type", "\n", "self", ".", "aux_info", "=", "aux_info", "\n", "\n", "self", ".", "motion_model", "=", "motion_model", ".", "KalmanFilterMotionModel", "(", "\n", "bbox", "=", "bbox", ",", "inst_type", "=", "self", ".", "det_type", ",", "time_stamp", "=", "time_stamp", ",", "covariance", "=", "configs", "[", "'running'", "]", "[", "'covariance'", "]", ")", "\n", "\n", "# life and death management", "\n", "self", ".", "life_manager", "=", "life_manager", ".", "HitManager", "(", "configs", ",", "frame_index", ")", "\n", "\n", "# store the score for the latest bbox", "\n", "self", ".", "latest_score", "=", "bbox", ".", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.tracklet.tracklet.Tracklet.predict": [[28, 39], ["tracklet.Tracklet.motion_model.get_prediction", "tracklet.Tracklet.life_manager.predict"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.get_prediction", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.predict"], ["", "def", "predict", "(", "self", ",", "time_stamp", "=", "None", ",", "is_key_frame", "=", "True", ")", ":", "\n", "        ", "\"\"\" in the prediction step, the motion model predicts the state of bbox\n            the other components have to be synced\n            the result is a BBox\n\n            the ussage of time_stamp is optional, only if you use velocities\n        \"\"\"", "\n", "result", "=", "self", ".", "motion_model", ".", "get_prediction", "(", "time_stamp", "=", "time_stamp", ")", "\n", "self", ".", "life_manager", ".", "predict", "(", "is_key_frame", "=", "is_key_frame", ")", "\n", "self", ".", "latest_score", "=", "self", ".", "latest_score", "*", "0.01", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.tracklet.tracklet.Tracklet.update": [[40, 53], ["tracklet.Tracklet.life_manager.update", "tracklet.Tracklet.motion_model.update"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update"], ["", "def", "update", "(", "self", ",", "update_info", ":", "UpdateInfoData", ")", ":", "\n", "        ", "\"\"\" update the state of the tracklet\n        \"\"\"", "\n", "self", ".", "latest_score", "=", "update_info", ".", "bbox", ".", "s", "\n", "is_key_frame", "=", "update_info", ".", "aux_info", "[", "'is_key_frame'", "]", "\n", "\n", "# only the direct association update the motion model", "\n", "if", "update_info", ".", "mode", "==", "1", ":", "\n", "            ", "self", ".", "motion_model", ".", "update", "(", "update_info", ".", "bbox", ",", "update_info", ".", "aux_info", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "", "self", ".", "life_manager", ".", "update", "(", "update_info", ",", "is_key_frame", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.tracklet.tracklet.Tracklet.get_state": [[54, 60], ["tracklet.Tracklet.motion_model.get_state"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.get_state"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "\"\"\" current state of the tracklet\n        \"\"\"", "\n", "result", "=", "self", ".", "motion_model", ".", "get_state", "(", ")", "\n", "result", ".", "s", "=", "self", ".", "latest_score", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.tracklet.tracklet.Tracklet.valid_output": [[61, 63], ["tracklet.Tracklet.life_manager.valid_output"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.valid_output"], ["", "def", "valid_output", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "return", "self", ".", "life_manager", ".", "valid_output", "(", "frame_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.tracklet.tracklet.Tracklet.death": [[64, 66], ["tracklet.Tracklet.life_manager.death"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.death"], ["", "def", "death", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "return", "self", ".", "life_manager", ".", "death", "(", "frame_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.tracklet.tracklet.Tracklet.state_string": [[67, 71], ["tracklet.Tracklet.life_manager.state_string"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.state_string"], ["", "def", "state_string", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "\"\"\" the string describes how we get the bbox (e.g. by detection or motion model prediction)\n        \"\"\"", "\n", "return", "self", ".", "life_manager", ".", "state_string", "(", "frame_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.tracklet.tracklet.Tracklet.compute_innovation_matrix": [[72, 76], ["tracklet.Tracklet.motion_model.compute_innovation_matrix"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.compute_innovation_matrix"], ["", "def", "compute_innovation_matrix", "(", "self", ")", ":", "\n", "        ", "\"\"\" compute the innovation matrix for association with mahalonobis distance\n        \"\"\"", "\n", "return", "self", ".", "motion_model", ".", "compute_innovation_matrix", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.tracklet.tracklet.Tracklet.sync_time_stamp": [[77, 82], ["tracklet.Tracklet.motion_model.sync_time_stamp"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.sync_time_stamp"], ["", "def", "sync_time_stamp", "(", "self", ",", "time_stamp", ")", ":", "\n", "        ", "\"\"\" sync the time stamp for motion model\n        \"\"\"", "\n", "self", ".", "motion_model", ".", "sync_time_stamp", "(", "time_stamp", ")", "\n", "return", "\n", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.__init__": [[6, 21], ["matplotlib.figure", "matplotlib.axis", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", "=", "''", ")", ":", "\n", "        ", "plt", ".", "rcParams", "[", "'axes.facecolor'", "]", "=", "'white'", "\n", "self", ".", "figure", "=", "plt", ".", "figure", "(", "name", ",", "figsize", "=", "(", "14", ",", "14", ")", ")", "\n", "plt", ".", "axis", "(", "'equal'", ")", "\n", "self", ".", "COLOR_MAP", "=", "{", "\n", "'white'", ":", "np", ".", "array", "(", "[", "255", ",", "255", ",", "255", "]", ")", "/", "256", ",", "\n", "'gray'", ":", "np", ".", "array", "(", "[", "140", ",", "140", ",", "136", "]", ")", "/", "256", ",", "\n", "'light_blue'", ":", "np", ".", "array", "(", "[", "4", ",", "157", ",", "217", "]", ")", "/", "256", ",", "\n", "'dark_blue'", ":", "np", ".", "array", "(", "[", "4", ",", "100", ",", "140", "]", ")", "/", "256", ",", "\n", "'red'", ":", "np", ".", "array", "(", "[", "191", ",", "4", ",", "54", "]", ")", "/", "256", ",", "\n", "'black'", ":", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", "]", ")", "/", "256", ",", "\n", "'purple'", ":", "np", ".", "array", "(", "[", "224", ",", "133", ",", "250", "]", ")", "/", "256", ",", "\n", "'dark_green'", ":", "np", ".", "array", "(", "[", "32", ",", "64", ",", "40", "]", ")", "/", "256", ",", "\n", "#'green': np.array([77, 115, 67]) / 256", "\n", "'green'", ":", "np", ".", "array", "(", "[", "77", ",", "211", ",", "67", "]", ")", "/", "256", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.show": [[24, 26], ["matplotlib.show"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.show"], ["", "def", "show", "(", "self", ")", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close": [[27, 29], ["matplotlib.close"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.save": [[30, 32], ["matplotlib.savefig"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "path", ")", ":", "\n", "        ", "plt", ".", "savefig", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_pc": [[33, 36], ["numpy.asarray", "matplotlib.scatter"], "methods", ["None"], ["", "def", "handler_pc", "(", "self", ",", "pc", ",", "color", "=", "'gray'", ")", ":", "\n", "        ", "vis_pc", "=", "np", ".", "asarray", "(", "pc", ")", "\n", "plt", ".", "scatter", "(", "vis_pc", "[", ":", ",", "0", "]", ",", "vis_pc", "[", ":", ",", "1", "]", ",", "marker", "=", "'o'", ",", "color", "=", "color", ",", "s", "=", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box": [[37, 45], ["numpy.concatenate", "matplotlib.plot", "matplotlib.text", "visualizer2d.Visualizer2D.figure.set_facecolor", "numpy.array", "data_protos.BBox.box2corners2d"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d"], ["", "def", "handler_box", "(", "self", ",", "box", ":", "BBox", ",", "message", ":", "str", "=", "''", ",", "color", "=", "'red'", ",", "linestyle", "=", "'solid'", ",", "linewidth", "=", "0.1", ")", ":", "\n", "        ", "corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box", ")", ")", "[", ":", ",", ":", "2", "]", "\n", "corners", "=", "np", ".", "concatenate", "(", "[", "corners", ",", "corners", "[", "0", ":", "1", ",", ":", "2", "]", "]", ")", "\n", "plt", ".", "plot", "(", "corners", "[", ":", ",", "0", "]", ",", "corners", "[", ":", ",", "1", "]", ",", "color", "=", "color", ",", "linestyle", "=", "linestyle", ")", "\n", "#plt.scatter(np.mean(corners[:, 0]), np.mean(corners[:, 1]), marker='o', color=self.COLOR_MAP[color], s=1)", "\n", "corner_index", "=", "0", "#np.random.randint(0, 4, 1)", "\n", "plt", ".", "text", "(", "corners", "[", "corner_index", ",", "0", "]", "-", "1", ",", "corners", "[", "corner_index", ",", "1", "]", "-", "1", ",", "message", ",", "color", "=", "color", ")", "\n", "self", ".", "figure", ".", "set_facecolor", "(", "'black'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.visualization.visualizer2d.Visualizer2D.handler_box_centerpoint": [[46, 51], ["numpy.concatenate", "matplotlib.scatter", "numpy.array", "numpy.mean", "numpy.mean", "data_protos.BBox.box2corners2d"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d"], ["", "def", "handler_box_centerpoint", "(", "self", ",", "box", ":", "BBox", ",", "message", ":", "str", "=", "''", ",", "color", "=", "'red'", ",", "linestyle", "=", "'solid'", ",", "s", "=", "10", ")", ":", "\n", "        ", "corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box", ")", ")", "[", ":", ",", ":", "2", "]", "\n", "corners", "=", "np", ".", "concatenate", "(", "[", "corners", ",", "corners", "[", "0", ":", "1", ",", ":", "2", "]", "]", ")", "\n", "#plt.plot(corners[:, 0], corners[:, 1], color=self.COLOR_MAP[color], linestyle=linestyle)", "\n", "plt", ".", "scatter", "(", "np", ".", "mean", "(", "corners", "[", ":", ",", "0", "]", ")", ",", "np", ".", "mean", "(", "corners", "[", ":", ",", "1", "]", ")", ",", "marker", "=", "'o'", ",", "color", "=", "color", ",", "s", "=", "s", ")", "\n", "# corner_index = np.random.randint(0, 4, 1)", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.__init__": [[6, 69], ["filterpy.kalman.KalmanFilter", "[].reshape", "numpy.array", "numpy.array", "numpy.zeros", "data_protos.BBox.bbox2array"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["    ", "def", "__init__", "(", "self", ",", "bbox", ":", "BBox", ",", "inst_type", ",", "time_stamp", ",", "covariance", "=", "'default'", ")", ":", "\n", "# the time stamp of last observation", "\n", "        ", "self", ".", "prev_time_stamp", "=", "time_stamp", "\n", "self", ".", "latest_time_stamp", "=", "time_stamp", "\n", "# define constant velocity model", "\n", "self", ".", "score", "=", "bbox", ".", "s", "\n", "self", ".", "inst_type", "=", "inst_type", "\n", "\n", "self", ".", "kf", "=", "KalmanFilter", "(", "dim_x", "=", "10", ",", "dim_z", "=", "7", ")", "\n", "self", ".", "kf", ".", "x", "[", ":", "7", "]", "=", "BBox", ".", "bbox2array", "(", "bbox", ")", "[", ":", "7", "]", ".", "reshape", "(", "(", "7", ",", "1", ")", ")", "\n", "self", ".", "kf", ".", "F", "=", "np", ".", "array", "(", "[", "[", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", "]", ",", "# state transition matrix", "\n", "[", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "\n", "self", ".", "kf", ".", "H", "=", "np", ".", "array", "(", "[", "[", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "# measurement function,", "\n", "[", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "\n", "self", ".", "kf", ".", "B", "=", "np", ".", "zeros", "(", "(", "10", ",", "1", ")", ")", "# dummy control transition matrix", "\n", "\n", "# # with angular velocity", "\n", "# self.kf = KalmanFilter(dim_x=11, dim_z=7)       ", "\n", "# self.kf.F = np.array([[1,0,0,0,0,0,0,1,0,0,0],      # state transition matrix", "\n", "#                       [0,1,0,0,0,0,0,0,1,0,0],", "\n", "#                       [0,0,1,0,0,0,0,0,0,1,0],", "\n", "#                       [0,0,0,1,0,0,0,0,0,0,1],  ", "\n", "#                       [0,0,0,0,1,0,0,0,0,0,0],", "\n", "#                       [0,0,0,0,0,1,0,0,0,0,0],", "\n", "#                       [0,0,0,0,0,0,1,0,0,0,0],", "\n", "#                       [0,0,0,0,0,0,0,1,0,0,0],", "\n", "#                       [0,0,0,0,0,0,0,0,1,0,0],", "\n", "#                       [0,0,0,0,0,0,0,0,0,1,0],", "\n", "#                       [0,0,0,0,0,0,0,0,0,0,1]])     ", "\n", "\n", "# self.kf.H = np.array([[1,0,0,0,0,0,0,0,0,0,0],      # measurement function,", "\n", "#                       [0,1,0,0,0,0,0,0,0,0,0],", "\n", "#                       [0,0,1,0,0,0,0,0,0,0,0],", "\n", "#                       [0,0,0,1,0,0,0,0,0,0,0],", "\n", "#                       [0,0,0,0,1,0,0,0,0,0,0],", "\n", "#                       [0,0,0,0,0,1,0,0,0,0,0],", "\n", "#                       [0,0,0,0,0,0,1,0,0,0,0]])", "\n", "\n", "self", ".", "covariance_type", "=", "covariance", "\n", "if", "self", ".", "covariance_type", "==", "'default'", ":", "\n", "# self.kf.R[0:,0:] *= 10.   # measurement uncertainty", "\n", "            ", "self", ".", "kf", ".", "P", "[", "7", ":", ",", "7", ":", "]", "*=", "1000.", "# state uncertainty, give high uncertainty to the unobservable initial velocities, covariance matrix", "\n", "self", ".", "kf", ".", "P", "*=", "10.", "\n", "\n", "# self.kf.Q[-1,-1] *= 0.01    # process uncertainty", "\n", "# self.kf.Q[7:, 7:] *= 0.01", "\n", "\n", "", "self", ".", "history", "=", "[", "bbox", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.predict": [[70, 75], ["kalman_filter.KalmanFilterMotionModel.kf.predict"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.predict"], ["", "def", "predict", "(", "self", ",", "time_stamp", "=", "None", ")", ":", "\n", "        ", "self", ".", "kf", ".", "predict", "(", ")", "\n", "if", "self", ".", "kf", ".", "x", "[", "3", "]", ">=", "np", ".", "pi", ":", "self", ".", "kf", ".", "x", "[", "3", "]", "-=", "np", ".", "pi", "*", "2", "\n", "if", "self", ".", "kf", ".", "x", "[", "3", "]", "<", "-", "np", ".", "pi", ":", "self", ".", "kf", ".", "x", "[", "3", "]", "+=", "np", ".", "pi", "*", "2", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.update": [[76, 122], ["kalman_filter.KalmanFilterMotionModel.predict", "kalman_filter.KalmanFilterMotionModel.kf.update", "kalman_filter.KalmanFilterMotionModel.kf.x[].reshape().tolist", "data_protos.BBox.array2bbox", "data_protos.BBox.bbox2array", "numpy.abs", "numpy.abs", "numpy.abs", "kalman_filter.KalmanFilterMotionModel.kf.x[].reshape"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.predict", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["", "def", "update", "(", "self", ",", "det_bbox", ":", "BBox", ",", "aux_info", "=", "None", ")", ":", "\n", "        ", "\"\"\" \n        Updates the state vector with observed bbox.\n        \"\"\"", "\n", "bbox", "=", "BBox", ".", "bbox2array", "(", "det_bbox", ")", "[", ":", "7", "]", "\n", "\n", "# full pipeline of kf, first predict, then update", "\n", "self", ".", "predict", "(", ")", "\n", "\n", "######################### orientation correction", "\n", "if", "self", ".", "kf", ".", "x", "[", "3", "]", ">=", "np", ".", "pi", ":", "self", ".", "kf", ".", "x", "[", "3", "]", "-=", "np", ".", "pi", "*", "2", "# make the theta still in the range", "\n", "if", "self", ".", "kf", ".", "x", "[", "3", "]", "<", "-", "np", ".", "pi", ":", "self", ".", "kf", ".", "x", "[", "3", "]", "+=", "np", ".", "pi", "*", "2", "\n", "\n", "new_theta", "=", "bbox", "[", "3", "]", "\n", "if", "new_theta", ">=", "np", ".", "pi", ":", "new_theta", "-=", "np", ".", "pi", "*", "2", "# make the theta still in the range", "\n", "if", "new_theta", "<", "-", "np", ".", "pi", ":", "new_theta", "+=", "np", ".", "pi", "*", "2", "\n", "bbox", "[", "3", "]", "=", "new_theta", "\n", "\n", "predicted_theta", "=", "self", ".", "kf", ".", "x", "[", "3", "]", "\n", "if", "np", ".", "abs", "(", "new_theta", "-", "predicted_theta", ")", ">", "np", ".", "pi", "/", "2.0", "and", "np", ".", "abs", "(", "new_theta", "-", "predicted_theta", ")", "<", "np", ".", "pi", "*", "3", "/", "2.0", ":", "# if the angle of two theta is not acute angle", "\n", "            ", "self", ".", "kf", ".", "x", "[", "3", "]", "+=", "np", ".", "pi", "\n", "if", "self", ".", "kf", ".", "x", "[", "3", "]", ">", "np", ".", "pi", ":", "self", ".", "kf", ".", "x", "[", "3", "]", "-=", "np", ".", "pi", "*", "2", "# make the theta still in the range", "\n", "if", "self", ".", "kf", ".", "x", "[", "3", "]", "<", "-", "np", ".", "pi", ":", "self", ".", "kf", ".", "x", "[", "3", "]", "+=", "np", ".", "pi", "*", "2", "\n", "\n", "# now the angle is acute: < 90 or > 270, convert the case of > 270 to < 90", "\n", "", "if", "np", ".", "abs", "(", "new_theta", "-", "self", ".", "kf", ".", "x", "[", "3", "]", ")", ">=", "np", ".", "pi", "*", "3", "/", "2.0", ":", "\n", "            ", "if", "new_theta", ">", "0", ":", "self", ".", "kf", ".", "x", "[", "3", "]", "+=", "np", ".", "pi", "*", "2", "\n", "else", ":", "self", ".", "kf", ".", "x", "[", "3", "]", "-=", "np", ".", "pi", "*", "2", "\n", "\n", "#########################     # flip", "\n", "\n", "", "self", ".", "kf", ".", "update", "(", "bbox", ")", "\n", "self", ".", "prev_time_stamp", "=", "self", ".", "latest_time_stamp", "\n", "\n", "if", "self", ".", "kf", ".", "x", "[", "3", "]", ">=", "np", ".", "pi", ":", "self", ".", "kf", ".", "x", "[", "3", "]", "-=", "np", ".", "pi", "*", "2", "# make the theta still in the rage", "\n", "if", "self", ".", "kf", ".", "x", "[", "3", "]", "<", "-", "np", ".", "pi", ":", "self", ".", "kf", ".", "x", "[", "3", "]", "+=", "np", ".", "pi", "*", "2", "\n", "\n", "if", "det_bbox", ".", "s", "is", "None", ":", "\n", "            ", "self", ".", "score", "=", "self", ".", "score", "*", "0.01", "\n", "", "else", ":", "\n", "            ", "self", ".", "score", "=", "det_bbox", ".", "s", "\n", "\n", "", "cur_bbox", "=", "self", ".", "kf", ".", "x", "[", ":", "7", "]", ".", "reshape", "(", "-", "1", ")", ".", "tolist", "(", ")", "\n", "cur_bbox", "=", "BBox", ".", "array2bbox", "(", "cur_bbox", "+", "[", "self", ".", "score", "]", ")", "\n", "self", ".", "history", "[", "-", "1", "]", "=", "cur_bbox", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.get_prediction": [[123, 146], ["numpy.array", "data_protos.BBox.array2bbox", "kalman_filter.KalmanFilterMotionModel.history.append", "kalman_filter.KalmanFilterMotionModel.kf.get_prediction", "pred_x[].reshape"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.get_prediction"], ["", "def", "get_prediction", "(", "self", ",", "time_stamp", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Advances the state vector and returns the predicted bounding box estimate.\n        \"\"\"", "\n", "time_lag", "=", "time_stamp", "-", "self", ".", "prev_time_stamp", "\n", "self", ".", "latest_time_stamp", "=", "time_stamp", "\n", "self", ".", "kf", ".", "F", "=", "np", ".", "array", "(", "[", "[", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "time_lag", ",", "0", ",", "0", "]", ",", "# state transition matrix", "\n", "[", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "time_lag", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "time_lag", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "pred_x", "=", "self", ".", "kf", ".", "get_prediction", "(", ")", "[", "0", "]", "\n", "if", "pred_x", "[", "3", "]", ">=", "np", ".", "pi", ":", "pred_x", "[", "3", "]", "-=", "np", ".", "pi", "*", "2", "\n", "if", "pred_x", "[", "3", "]", "<", "-", "np", ".", "pi", ":", "pred_x", "[", "3", "]", "+=", "np", ".", "pi", "*", "2", "\n", "pred_bbox", "=", "BBox", ".", "array2bbox", "(", "pred_x", "[", ":", "7", "]", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "self", ".", "history", ".", "append", "(", "pred_bbox", ")", "\n", "return", "pred_bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.get_state": [[147, 152], ["None"], "methods", ["None"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns the current bounding box estimate.\n        \"\"\"", "\n", "return", "self", ".", "history", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.compute_innovation_matrix": [[153, 157], ["numpy.matmul", "numpy.matmul"], "methods", ["None"], ["", "def", "compute_innovation_matrix", "(", "self", ")", ":", "\n", "        ", "\"\"\" compute the innovation matrix for association with mahalonobis distance\n        \"\"\"", "\n", "return", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "kf", ".", "H", ",", "self", ".", "kf", ".", "P", ")", ",", "self", ".", "kf", ".", "H", ".", "T", ")", "+", "self", ".", "kf", ".", "R", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.motion_model.kalman_filter.KalmanFilterMotionModel.sync_time_stamp": [[158, 161], ["None"], "methods", ["None"], ["", "def", "sync_time_stamp", "(", "self", ",", "time_stamp", ")", ":", "\n", "        ", "self", ".", "time_stamp", "=", "time_stamp", "\n", "return", "", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.__init__": [[3, 5], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.valid": [[6, 14], ["state_string.split", "int"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "valid", "(", "cls", ",", "state_string", ")", ":", "\n", "        ", "tokens", "=", "state_string", ".", "split", "(", "'_'", ")", "\n", "if", "not", "tokens", "[", "0", "]", "==", "'alive'", ":", "\n", "            ", "return", "False", "\n", "", "if", "tokens", "[", "0", "]", "==", "'alive'", "and", "int", "(", "tokens", "[", "1", "]", ")", "==", "1", ":", "\n", "            ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.agein_n": [[15, 27], ["state_string.split", "int", "pdb.set_trace"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "agein_n", "(", "cls", ",", "state_string", ",", "n", ")", ":", "\n", "        ", "tokens", "=", "state_string", ".", "split", "(", "'_'", ")", "\n", "if", "tokens", "[", "0", "]", "in", "[", "'birth'", ",", "'death'", "]", ":", "\n", "            ", "return", "False", "\n", "", "try", ":", "\n", "            ", "if", "int", "(", "tokens", "[", "2", "]", ")", "<=", "n", "-", "1", ":", "\n", "                ", "return", "True", "\n", "", "", "except", ":", "\n", "            ", "import", "pdb", "\n", "pdb", ".", "set_trace", "(", ")", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.agein2": [[28, 40], ["state_string.split", "int", "pdb.set_trace"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "agein2", "(", "cls", ",", "state_string", ")", ":", "\n", "        ", "tokens", "=", "state_string", ".", "split", "(", "'_'", ")", "\n", "if", "tokens", "[", "0", "]", "==", "'dead'", ":", "\n", "            ", "return", "False", "\n", "", "try", ":", "\n", "            ", "if", "int", "(", "tokens", "[", "2", "]", ")", "<=", "1", ":", "\n", "                ", "return", "True", "\n", "", "", "except", ":", "\n", "            ", "import", "pdb", "\n", "pdb", ".", "set_trace", "(", ")", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.agein1": [[41, 53], ["state_string.split", "int", "pdb.set_trace"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "agein1", "(", "cls", ",", "state_string", ")", ":", "\n", "        ", "tokens", "=", "state_string", ".", "split", "(", "'_'", ")", "\n", "if", "tokens", "[", "0", "]", "==", "'dead'", ":", "\n", "            ", "return", "False", "\n", "", "try", ":", "\n", "            ", "if", "int", "(", "tokens", "[", "2", "]", ")", "<=", "0", ":", "\n", "                ", "return", "True", "\n", "", "", "except", ":", "\n", "            ", "import", "pdb", "\n", "pdb", ".", "set_trace", "(", ")", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.notoutput": [[54, 62], ["state_string.split", "len", "int"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "notoutput", "(", "cls", ",", "state_string", ")", ":", "\n", "        ", "tokens", "=", "state_string", ".", "split", "(", "'_'", ")", "\n", "if", "len", "(", "tokens", ")", "<", "3", ":", "\n", "            ", "return", "False", "\n", "", "if", "tokens", "[", "0", "]", "==", "'alive'", "and", "int", "(", "tokens", "[", "1", "]", ")", "!=", "1", ":", "\n", "            ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.predicted": [[63, 72], ["state_string.split", "ValueError", "int"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "predicted", "(", "cls", ",", "state_string", ")", ":", "\n", "        ", "state", ",", "token", "=", "state_string", ".", "split", "(", "'_'", ")", "\n", "if", "state", "not", "in", "Validity", ".", "TYPES", ":", "\n", "            ", "raise", "ValueError", "(", "'type name not existed'", ")", "\n", "\n", "", "if", "state", "==", "'alive'", "and", "int", "(", "token", ")", "!=", "0", ":", "\n", "            ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.validity.Validity.modify_string": [[73, 78], ["state_string.split", "str"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "modify_string", "(", "cls", ",", "state_string", ",", "mode", ")", ":", "\n", "        ", "tokens", "=", "state_string", ".", "split", "(", "'_'", ")", "\n", "tokens", "[", "1", "]", "=", "str", "(", "mode", ")", "\n", "return", "'{:}_{:}_{:}'", ".", "format", "(", "tokens", "[", "0", "]", ",", "tokens", "[", "1", "]", ",", "tokens", "[", "2", "]", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.__init__": [[8, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "x", "=", "None", ",", "y", "=", "None", ",", "z", "=", "None", ",", "h", "=", "None", ",", "w", "=", "None", ",", "l", "=", "None", ",", "o", "=", "None", ")", ":", "\n", "        ", "self", ".", "x", "=", "x", "# center x", "\n", "self", ".", "y", "=", "y", "# center y", "\n", "self", ".", "z", "=", "z", "# center z", "\n", "self", ".", "h", "=", "h", "# height", "\n", "self", ".", "w", "=", "w", "# width", "\n", "self", ".", "l", "=", "l", "# length", "\n", "self", ".", "o", "=", "o", "# orientation", "\n", "self", ".", "s", "=", "None", "# detection score", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.__str__": [[18, 21], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'x: {}, y: {}, z: {}, heading: {}, length: {}, width: {}, height: {}, score: {}'", ".", "format", "(", "\n", "self", ".", "x", ",", "self", ".", "y", ",", "self", ".", "z", ",", "self", ".", "o", ",", "self", ".", "l", ",", "self", ".", "w", ",", "self", ".", "h", ",", "self", ".", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2dict": [[22, 27], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "bbox2dict", "(", "cls", ",", "bbox", ")", ":", "\n", "        ", "return", "{", "\n", "'center_x'", ":", "bbox", ".", "x", ",", "'center_y'", ":", "bbox", ".", "y", ",", "'center_z'", ":", "bbox", ".", "z", ",", "\n", "'height'", ":", "bbox", ".", "h", ",", "'width'", ":", "bbox", ".", "w", ",", "'length'", ":", "bbox", ".", "l", ",", "'heading'", ":", "bbox", ".", "o", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array": [[28, 34], ["numpy.array", "numpy.array"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "bbox2array", "(", "cls", ",", "bbox", ")", ":", "\n", "        ", "if", "bbox", ".", "s", "is", "None", ":", "\n", "            ", "return", "np", ".", "array", "(", "[", "bbox", ".", "x", ",", "bbox", ".", "y", ",", "bbox", ".", "z", ",", "bbox", ".", "o", ",", "bbox", ".", "l", ",", "bbox", ".", "w", ",", "bbox", ".", "h", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "np", ".", "array", "(", "[", "bbox", ".", "x", ",", "bbox", ".", "y", ",", "bbox", ".", "z", ",", "bbox", ".", "o", ",", "bbox", ".", "l", ",", "bbox", ".", "w", ",", "bbox", ".", "h", ",", "bbox", ".", "s", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox": [[35, 42], ["BBox.BBox", "len"], "methods", ["None"], ["", "", "@", "classmethod", "\n", "def", "array2bbox", "(", "cls", ",", "data", ")", ":", "\n", "        ", "bbox", "=", "BBox", "(", ")", "\n", "bbox", ".", "x", ",", "bbox", ".", "y", ",", "bbox", ".", "z", ",", "bbox", ".", "o", ",", "bbox", ".", "l", ",", "bbox", ".", "w", ",", "bbox", ".", "h", "=", "data", "[", ":", "7", "]", "\n", "if", "len", "(", "data", ")", "==", "8", ":", "\n", "            ", "bbox", ".", "s", "=", "data", "[", "-", "1", "]", "\n", "", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.dict2bbox": [[43, 56], ["BBox.BBox", "data.keys"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "dict2bbox", "(", "cls", ",", "data", ")", ":", "\n", "        ", "bbox", "=", "BBox", "(", ")", "\n", "bbox", ".", "x", "=", "data", "[", "'center_x'", "]", "\n", "bbox", ".", "y", "=", "data", "[", "'center_y'", "]", "\n", "bbox", ".", "z", "=", "data", "[", "'center_z'", "]", "\n", "bbox", ".", "h", "=", "data", "[", "'height'", "]", "\n", "bbox", ".", "w", "=", "data", "[", "'width'", "]", "\n", "bbox", ".", "l", "=", "data", "[", "'length'", "]", "\n", "bbox", ".", "o", "=", "data", "[", "'heading'", "]", "\n", "if", "'score'", "in", "data", ".", "keys", "(", ")", ":", "\n", "            ", "bbox", ".", "s", "=", "data", "[", "'score'", "]", "\n", "", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.copy_bbox": [[57, 68], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "copy_bbox", "(", "cls", ",", "bboxa", ",", "bboxb", ")", ":", "\n", "        ", "bboxa", ".", "x", "=", "bboxb", ".", "x", "\n", "bboxa", ".", "y", "=", "bboxb", ".", "y", "\n", "bboxa", ".", "z", "=", "bboxb", ".", "z", "\n", "bboxa", ".", "l", "=", "bboxb", ".", "l", "\n", "bboxa", ".", "w", "=", "bboxb", ".", "w", "\n", "bboxa", ".", "h", "=", "bboxb", ".", "h", "\n", "bboxa", ".", "o", "=", "bboxb", ".", "o", "\n", "bboxa", ".", "s", "=", "bboxb", ".", "s", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d": [[69, 85], ["numpy.array", "numpy.array", "numpy.array", "numpy.cos", "numpy.sin", "numpy.array.tolist", "numpy.array.tolist", "pc2.tolist", "pc3.tolist"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "box2corners2d", "(", "cls", ",", "bbox", ")", ":", "\n", "        ", "\"\"\" the coordinates for bottom corners\n        \"\"\"", "\n", "bottom_center", "=", "np", ".", "array", "(", "[", "bbox", ".", "x", ",", "bbox", ".", "y", ",", "bbox", ".", "z", "-", "bbox", ".", "h", "/", "2", "]", ")", "\n", "cos", ",", "sin", "=", "np", ".", "cos", "(", "bbox", ".", "o", ")", ",", "np", ".", "sin", "(", "bbox", ".", "o", ")", "\n", "pc0", "=", "np", ".", "array", "(", "[", "bbox", ".", "x", "+", "cos", "*", "bbox", ".", "l", "/", "2", "+", "sin", "*", "bbox", ".", "w", "/", "2", ",", "\n", "bbox", ".", "y", "+", "sin", "*", "bbox", ".", "l", "/", "2", "-", "cos", "*", "bbox", ".", "w", "/", "2", ",", "\n", "bbox", ".", "z", "-", "bbox", ".", "h", "/", "2", "]", ")", "\n", "pc1", "=", "np", ".", "array", "(", "[", "bbox", ".", "x", "+", "cos", "*", "bbox", ".", "l", "/", "2", "-", "sin", "*", "bbox", ".", "w", "/", "2", ",", "\n", "bbox", ".", "y", "+", "sin", "*", "bbox", ".", "l", "/", "2", "+", "cos", "*", "bbox", ".", "w", "/", "2", ",", "\n", "bbox", ".", "z", "-", "bbox", ".", "h", "/", "2", "]", ")", "\n", "pc2", "=", "2", "*", "bottom_center", "-", "pc0", "\n", "pc3", "=", "2", "*", "bottom_center", "-", "pc1", "\n", "\n", "return", "[", "pc0", ".", "tolist", "(", ")", ",", "pc1", ".", "tolist", "(", ")", ",", "pc2", ".", "tolist", "(", ")", ",", "pc3", ".", "tolist", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners3d": [[86, 95], ["numpy.array", "numpy.array", "numpy.concatenate", "numpy.concatenate.tolist", "bbox.BBox.box2corners2d"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d"], ["", "@", "classmethod", "\n", "def", "box2corners3d", "(", "cls", ",", "bbox", ")", ":", "\n", "        ", "\"\"\" the coordinates for bottom corners\n        \"\"\"", "\n", "center", "=", "np", ".", "array", "(", "[", "bbox", ".", "x", ",", "bbox", ".", "y", ",", "bbox", ".", "z", "]", ")", "\n", "bottom_corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "bbox", ")", ")", "\n", "up_corners", "=", "2", "*", "center", "-", "bottom_corners", "\n", "corners", "=", "np", ".", "concatenate", "(", "[", "up_corners", ",", "bottom_corners", "]", ",", "axis", "=", "0", ")", "\n", "return", "corners", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.motion2bbox": [[96, 104], ["copy.deepcopy"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "motion2bbox", "(", "cls", ",", "bbox", ",", "motion", ")", ":", "\n", "        ", "result", "=", "deepcopy", "(", "bbox", ")", "\n", "result", ".", "x", "+=", "motion", "[", "0", "]", "\n", "result", ".", "y", "+=", "motion", "[", "1", "]", "\n", "result", ".", "z", "+=", "motion", "[", "2", "]", "\n", "result", ".", "o", "+=", "motion", "[", "3", "]", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.set_bbox_size": [[105, 110], ["copy.deepcopy"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "set_bbox_size", "(", "cls", ",", "bbox", ",", "size_array", ")", ":", "\n", "        ", "result", "=", "deepcopy", "(", "bbox", ")", "\n", "result", ".", "l", ",", "result", ".", "w", ",", "result", ".", "h", "=", "size_array", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.set_bbox_with_states": [[111, 118], ["BBox.bbox2array", "BBox.array2bbox"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.array2bbox"], ["", "@", "classmethod", "\n", "def", "set_bbox_with_states", "(", "cls", ",", "prev_bbox", ",", "state_array", ")", ":", "\n", "        ", "prev_array", "=", "BBox", ".", "bbox2array", "(", "prev_bbox", ")", "\n", "prev_array", "[", ":", "4", "]", "+=", "state_array", "[", ":", "4", "]", "\n", "prev_array", "[", "4", ":", "]", "=", "state_array", "[", "4", ":", "]", "\n", "bbox", "=", "BBox", ".", "array2bbox", "(", "prev_array", ")", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box_pts2world": [[119, 127], ["numpy.concatenate", "numpy.ones"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "box_pts2world", "(", "cls", ",", "ego_matrix", ",", "pcs", ")", ":", "\n", "        ", "new_pcs", "=", "np", ".", "concatenate", "(", "(", "pcs", ",", "\n", "np", ".", "ones", "(", "pcs", ".", "shape", "[", "0", "]", ")", "[", ":", ",", "np", ".", "newaxis", "]", ")", ",", "\n", "axis", "=", "1", ")", "\n", "new_pcs", "=", "ego_matrix", "@", "new_pcs", ".", "T", "\n", "new_pcs", "=", "new_pcs", ".", "T", "[", ":", ",", ":", "3", "]", "\n", "return", "new_pcs", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.edge2yaw": [[128, 135], ["numpy.arccos", "numpy.linalg.norm"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "edge2yaw", "(", "cls", ",", "center", ",", "edge", ")", ":", "\n", "        ", "vec", "=", "edge", "-", "center", "\n", "yaw", "=", "np", ".", "arccos", "(", "vec", "[", "0", "]", "/", "np", ".", "linalg", ".", "norm", "(", "vec", ")", ")", "\n", "if", "vec", "[", "1", "]", "<", "0", ":", "\n", "            ", "yaw", "=", "-", "yaw", "\n", "", "return", "yaw", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2world": [[136, 151], ["numpy.array", "bbox.BBox.box_pts2world", "bbox.BBox.edge2yaw", "copy.deepcopy", "bbox.BBox.box2corners2d", "bbox.BBox.box_pts2world", "BBox.bbox2array"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box_pts2world", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.edge2yaw", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box2corners2d", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.box_pts2world", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.data_protos.bbox.BBox.bbox2array"], ["", "@", "classmethod", "\n", "def", "bbox2world", "(", "cls", ",", "ego_matrix", ",", "box", ")", ":", "\n", "# center and corners", "\n", "        ", "corners", "=", "np", ".", "array", "(", "BBox", ".", "box2corners2d", "(", "box", ")", ")", "\n", "center", "=", "BBox", ".", "bbox2array", "(", "box", ")", "[", ":", "3", "]", "[", "np", ".", "newaxis", ",", ":", "]", "\n", "center", "=", "BBox", ".", "box_pts2world", "(", "ego_matrix", ",", "center", ")", "[", "0", "]", "\n", "corners", "=", "BBox", ".", "box_pts2world", "(", "ego_matrix", ",", "corners", ")", "\n", "# heading", "\n", "edge_mid_point", "=", "(", "corners", "[", "0", "]", "+", "corners", "[", "1", "]", ")", "/", "2", "\n", "yaw", "=", "BBox", ".", "edge2yaw", "(", "center", "[", ":", "2", "]", ",", "edge_mid_point", "[", ":", "2", "]", ")", "\n", "\n", "result", "=", "deepcopy", "(", "box", ")", "\n", "result", ".", "x", ",", "result", ".", "y", ",", "result", ".", "z", "=", "center", "\n", "result", ".", "o", "=", "yaw", "\n", "return", "result", "", "", "", ""]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.__init__": [[15, 38], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "configs", ",", "frame_index", ")", ":", "\n", "        ", "self", ".", "time_since_update", "=", "0", "\n", "self", ".", "hits", "=", "1", "# number of total hits including the first detection", "\n", "self", ".", "hit_streak", "=", "1", "# number of continuing hit considering the first detection", "\n", "self", ".", "first_continuing_hit", "=", "1", "\n", "self", ".", "still_first", "=", "True", "\n", "self", ".", "age", "=", "0", "\n", "self", ".", "recent_state", "=", "None", "\n", "\n", "self", ".", "type", "=", "configs", "[", "'running'", "]", "[", "'tracker'", "]", "\n", "self", ".", "immortal", "=", "self", ".", "type", "==", "'immortal'", "\n", "\n", "if", "not", "self", ".", "immortal", ":", "\n", "            ", "self", ".", "max_age", "=", "configs", "[", "'running'", "]", "[", "'max_age_since_update'", "]", "[", "self", ".", "type", "]", "\n", "\n", "", "self", ".", "min_hits", "=", "configs", "[", "'running'", "]", "[", "'min_hits_to_birth'", "]", "[", "self", ".", "type", "]", "\n", "\n", "self", ".", "state", "=", "'birth'", "\n", "self", ".", "recent_state", "=", "1", "\n", "self", ".", "no_asso", "=", "False", "\n", "if", "frame_index", "<=", "self", ".", "min_hits", "or", "self", ".", "min_hits", "==", "0", ":", "\n", "            ", "self", ".", "state", "=", "'alive'", "\n", "self", ".", "recent_state", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.predict": [[39, 52], ["None"], "methods", ["None"], ["", "", "def", "predict", "(", "self", ",", "is_key_frame", ")", ":", "\n", "# only on key frame", "\n", "# unassociated prediction affects the life-cycle management", "\n", "        ", "if", "not", "is_key_frame", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "age", "+=", "1", "\n", "if", "self", ".", "time_since_update", ">", "0", ":", "\n", "            ", "self", ".", "hit_streak", "=", "0", "\n", "self", ".", "still_first", "=", "False", "\n", "", "self", ".", "time_since_update", "+=", "1", "\n", "self", ".", "fall", "=", "True", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.if_valid": [[53, 56], ["None"], "methods", ["None"], ["", "def", "if_valid", "(", "self", ",", "update_info", ")", ":", "\n", "        ", "self", ".", "recent_state", "=", "update_info", ".", "mode", "\n", "return", "update_info", ".", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.update": [[57, 72], ["hit_manager.HitManager.if_valid", "hit_manager.HitManager.state_transition"], "methods", ["home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.if_valid", "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.state_transition"], ["", "def", "update", "(", "self", ",", "update_info", ":", "UpdateInfoData", ",", "is_key_frame", "=", "True", ")", ":", "\n", "# the update happening during the non-key-frame", "\n", "# can extend the life of tracklet", "\n", "        ", "association", "=", "self", ".", "if_valid", "(", "update_info", ")", "\n", "self", ".", "recent_state", "=", "association", "\n", "if", "association", "!=", "0", ":", "\n", "            ", "self", ".", "fall", "=", "False", "\n", "self", ".", "time_since_update", "=", "0", "\n", "self", ".", "history", "=", "[", "]", "\n", "self", ".", "hits", "+=", "1", "\n", "self", ".", "hit_streak", "+=", "1", "# number of continuing hit", "\n", "if", "self", ".", "still_first", ":", "\n", "                ", "self", ".", "first_continuing_hit", "+=", "1", "# number of continuing hit in the fist time", "\n", "", "", "if", "is_key_frame", ":", "\n", "            ", "self", ".", "state_transition", "(", "association", ",", "update_info", ".", "frame_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.state_transition": [[73, 85], ["None"], "methods", ["None"], ["", "", "def", "state_transition", "(", "self", ",", "mode", ",", "frame_index", ")", ":", "\n", "# if just founded", "\n", "        ", "if", "self", ".", "state", "==", "'birth'", ":", "\n", "            ", "if", "(", "self", ".", "hits", ">=", "self", ".", "min_hits", ")", "or", "(", "frame_index", "<=", "self", ".", "min_hits", ")", ":", "\n", "                ", "self", ".", "state", "=", "'alive'", "\n", "self", ".", "recent_state", "=", "mode", "\n", "", "elif", "(", "not", "self", ".", "immortal", ")", "and", "self", ".", "time_since_update", ">=", "self", ".", "max_age", ":", "\n", "                ", "self", ".", "state", "=", "'dead'", "\n", "# already alive", "\n", "", "", "elif", "(", "not", "self", ".", "immortal", ")", "and", "self", ".", "state", "==", "'alive'", ":", "\n", "            ", "if", "self", ".", "time_since_update", ">=", "self", ".", "max_age", ":", "\n", "                ", "self", ".", "state", "=", "'dead'", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.alive": [[86, 88], ["None"], "methods", ["None"], ["", "", "", "def", "alive", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "return", "self", ".", "state", "==", "'alive'", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.death": [[89, 91], ["None"], "methods", ["None"], ["", "def", "death", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "return", "self", ".", "state", "==", "'dead'", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.valid_output": [[92, 94], ["None"], "methods", ["None"], ["", "def", "valid_output", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "return", "(", "self", ".", "state", "==", "'alive'", ")", "and", "(", "self", ".", "no_asso", "==", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.immortaltracker_immortaltracker.life.hit_manager.HitManager.state_string": [[95, 102], ["None"], "methods", ["None"], ["", "def", "state_string", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "if", "self", ".", "state", "==", "'birth'", ":", "\n", "            ", "return", "'{:}_{:}_{:}'", ".", "format", "(", "self", ".", "state", ",", "self", ".", "hits", ",", "self", ".", "time_since_update", ")", "\n", "", "elif", "self", ".", "state", "==", "'alive'", ":", "\n", "            ", "return", "'{:}_{:}_{:}'", ".", "format", "(", "self", ".", "state", ",", "self", ".", "recent_state", ",", "self", ".", "time_since_update", ")", "\n", "", "elif", "self", ".", "state", "==", "'dead'", ":", "\n", "            ", "return", "'{:}_{:}'", ".", "format", "(", "self", ".", "state", ",", "self", ".", "time_since_update", ")", "", "", "", "", ""]]}