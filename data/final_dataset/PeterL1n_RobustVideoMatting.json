{"home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.matting_loss": [[7, 32], ["dict", "torch.nn.functional.l1_loss", "train_loss.laplacian_loss", "true_pha.gt", "torch.nn.functional.l1_loss", "pred_pha.flatten", "true_pha.flatten", "torch.nn.functional.mse_loss", "torch.nn.functional.mse_loss"], "function", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.laplacian_loss"], ["def", "matting_loss", "(", "pred_fgr", ",", "pred_pha", ",", "true_fgr", ",", "true_pha", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        pred_fgr: Shape(B, T, 3, H, W)\n        pred_pha: Shape(B, T, 1, H, W)\n        true_fgr: Shape(B, T, 3, H, W)\n        true_pha: Shape(B, T, 1, H, W)\n    \"\"\"", "\n", "loss", "=", "dict", "(", ")", "\n", "# Alpha losses", "\n", "loss", "[", "'pha_l1'", "]", "=", "F", ".", "l1_loss", "(", "pred_pha", ",", "true_pha", ")", "\n", "loss", "[", "'pha_laplacian'", "]", "=", "laplacian_loss", "(", "pred_pha", ".", "flatten", "(", "0", ",", "1", ")", ",", "true_pha", ".", "flatten", "(", "0", ",", "1", ")", ")", "\n", "loss", "[", "'pha_coherence'", "]", "=", "F", ".", "mse_loss", "(", "pred_pha", "[", ":", ",", "1", ":", "]", "-", "pred_pha", "[", ":", ",", ":", "-", "1", "]", ",", "\n", "true_pha", "[", ":", ",", "1", ":", "]", "-", "true_pha", "[", ":", ",", ":", "-", "1", "]", ")", "*", "5", "\n", "# Foreground losses", "\n", "true_msk", "=", "true_pha", ".", "gt", "(", "0", ")", "\n", "pred_fgr", "=", "pred_fgr", "*", "true_msk", "\n", "true_fgr", "=", "true_fgr", "*", "true_msk", "\n", "loss", "[", "'fgr_l1'", "]", "=", "F", ".", "l1_loss", "(", "pred_fgr", ",", "true_fgr", ")", "\n", "loss", "[", "'fgr_coherence'", "]", "=", "F", ".", "mse_loss", "(", "pred_fgr", "[", ":", ",", "1", ":", "]", "-", "pred_fgr", "[", ":", ",", ":", "-", "1", "]", ",", "\n", "true_fgr", "[", ":", ",", "1", ":", "]", "-", "true_fgr", "[", ":", ",", ":", "-", "1", "]", ")", "*", "5", "\n", "# Total", "\n", "loss", "[", "'total'", "]", "=", "loss", "[", "'pha_l1'", "]", "+", "loss", "[", "'pha_coherence'", "]", "+", "loss", "[", "'pha_laplacian'", "]", "+", "loss", "[", "'fgr_l1'", "]", "+", "loss", "[", "'fgr_coherence'", "]", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.segmentation_loss": [[33, 40], ["torch.nn.functional.binary_cross_entropy_with_logits"], "function", ["None"], ["", "def", "segmentation_loss", "(", "pred_seg", ",", "true_seg", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        pred_seg: Shape(B, T, 1, H, W)\n        true_seg: Shape(B, T, 1, H, W)\n    \"\"\"", "\n", "return", "F", ".", "binary_cross_entropy_with_logits", "(", "pred_seg", ",", "true_seg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.laplacian_loss": [[45, 53], ["train_loss.gauss_kernel", "train_loss.laplacian_pyramid", "train_loss.laplacian_pyramid", "range", "torch.nn.functional.l1_loss"], "function", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.gauss_kernel", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.laplacian_pyramid", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.laplacian_pyramid"], ["", "def", "laplacian_loss", "(", "pred", ",", "true", ",", "max_levels", "=", "5", ")", ":", "\n", "    ", "kernel", "=", "gauss_kernel", "(", "device", "=", "pred", ".", "device", ",", "dtype", "=", "pred", ".", "dtype", ")", "\n", "pred_pyramid", "=", "laplacian_pyramid", "(", "pred", ",", "kernel", ",", "max_levels", ")", "\n", "true_pyramid", "=", "laplacian_pyramid", "(", "true", ",", "kernel", ",", "max_levels", ")", "\n", "loss", "=", "0", "\n", "for", "level", "in", "range", "(", "max_levels", ")", ":", "\n", "        ", "loss", "+=", "(", "2", "**", "level", ")", "*", "F", ".", "l1_loss", "(", "pred_pyramid", "[", "level", "]", ",", "true_pyramid", "[", "level", "]", ")", "\n", "", "return", "loss", "/", "max_levels", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.laplacian_pyramid": [[54, 65], ["range", "train_loss.crop_to_even_size", "train_loss.downsample", "train_loss.upsample", "pyramid.append"], "function", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.crop_to_even_size", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.downsample", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.upsample"], ["", "def", "laplacian_pyramid", "(", "img", ",", "kernel", ",", "max_levels", ")", ":", "\n", "    ", "current", "=", "img", "\n", "pyramid", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "max_levels", ")", ":", "\n", "        ", "current", "=", "crop_to_even_size", "(", "current", ")", "\n", "down", "=", "downsample", "(", "current", ",", "kernel", ")", "\n", "up", "=", "upsample", "(", "down", ",", "kernel", ")", "\n", "diff", "=", "current", "-", "up", "\n", "pyramid", ".", "append", "(", "diff", ")", "\n", "current", "=", "down", "\n", "", "return", "pyramid", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.gauss_kernel": [[66, 75], ["torch.tensor"], "function", ["None"], ["", "def", "gauss_kernel", "(", "device", "=", "'cpu'", ",", "dtype", "=", "torch", ".", "float32", ")", ":", "\n", "    ", "kernel", "=", "torch", ".", "tensor", "(", "[", "[", "1", ",", "4", ",", "6", ",", "4", ",", "1", "]", ",", "\n", "[", "4", ",", "16", ",", "24", ",", "16", ",", "4", "]", ",", "\n", "[", "6", ",", "24", ",", "36", ",", "24", ",", "6", "]", ",", "\n", "[", "4", ",", "16", ",", "24", ",", "16", ",", "4", "]", ",", "\n", "[", "1", ",", "4", ",", "6", ",", "4", ",", "1", "]", "]", ",", "device", "=", "device", ",", "dtype", "=", "dtype", ")", "\n", "kernel", "/=", "256", "\n", "kernel", "=", "kernel", "[", "None", ",", "None", ",", ":", ",", ":", "]", "\n", "return", "kernel", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.gauss_convolution": [[76, 83], ["img.reshape.reshape", "torch.nn.functional.pad", "torch.nn.functional.conv2d", "img.reshape.reshape"], "function", ["None"], ["", "def", "gauss_convolution", "(", "img", ",", "kernel", ")", ":", "\n", "    ", "B", ",", "C", ",", "H", ",", "W", "=", "img", ".", "shape", "\n", "img", "=", "img", ".", "reshape", "(", "B", "*", "C", ",", "1", ",", "H", ",", "W", ")", "\n", "img", "=", "F", ".", "pad", "(", "img", ",", "(", "2", ",", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'reflect'", ")", "\n", "img", "=", "F", ".", "conv2d", "(", "img", ",", "kernel", ")", "\n", "img", "=", "img", ".", "reshape", "(", "B", ",", "C", ",", "H", ",", "W", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.downsample": [[84, 88], ["train_loss.gauss_convolution"], "function", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.gauss_convolution"], ["", "def", "downsample", "(", "img", ",", "kernel", ")", ":", "\n", "    ", "img", "=", "gauss_convolution", "(", "img", ",", "kernel", ")", "\n", "img", "=", "img", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.upsample": [[89, 95], ["torch.zeros", "train_loss.gauss_convolution"], "function", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.gauss_convolution"], ["", "def", "upsample", "(", "img", ",", "kernel", ")", ":", "\n", "    ", "B", ",", "C", ",", "H", ",", "W", "=", "img", ".", "shape", "\n", "out", "=", "torch", ".", "zeros", "(", "(", "B", ",", "C", ",", "H", "*", "2", ",", "W", "*", "2", ")", ",", "device", "=", "img", ".", "device", ",", "dtype", "=", "img", ".", "dtype", ")", "\n", "out", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "=", "img", "*", "4", "\n", "out", "=", "gauss_convolution", "(", "out", ",", "kernel", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.crop_to_even_size": [[96, 101], ["None"], "function", ["None"], ["", "def", "crop_to_even_size", "(", "img", ")", ":", "\n", "    ", "H", ",", "W", "=", "img", ".", "shape", "[", "2", ":", "]", "\n", "H", "=", "H", "-", "H", "%", "2", "\n", "W", "=", "W", "-", "W", "%", "2", "\n", "return", "img", "[", ":", ",", ":", ",", ":", "H", ",", ":", "W", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.__init__": [[161, 167], ["MattingNetwork().eval().to", "inference.Converter.model.load_state_dict", "torch.jit.script", "torch.jit.freeze", "torch.load", "MattingNetwork().eval", "MattingNetwork"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "variant", ":", "str", ",", "checkpoint", ":", "str", ",", "device", ":", "str", ")", ":", "\n", "        ", "self", ".", "model", "=", "MattingNetwork", "(", "variant", ")", ".", "eval", "(", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "checkpoint", ",", "map_location", "=", "device", ")", ")", "\n", "self", ".", "model", "=", "torch", ".", "jit", ".", "script", "(", "self", ".", "model", ")", "\n", "self", ".", "model", "=", "torch", ".", "jit", ".", "freeze", "(", "self", ".", "model", ")", "\n", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert": [[168, 170], ["inference.convert_video"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.convert_video"], ["", "def", "convert", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "convert_video", "(", "self", ".", "model", ",", "device", "=", "self", ".", "device", ",", "dtype", "=", "torch", ".", "float32", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.convert_video": [[24, 151], ["any", "os.path.isfile", "torch.utils.data.DataLoader", "model.eval.eval", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "inference_utils.VideoReader", "inference_utils.ImageSequenceReader", "next", "torch.tensor().div().view", "isinstance", "inference_utils.VideoWriter", "inference_utils.VideoWriter", "inference_utils.VideoWriter", "inference_utils.ImageSequenceWriter", "inference_utils.ImageSequenceWriter", "inference_utils.ImageSequenceWriter", "model.eval.parameters", "torch.no_grad", "tqdm.auto.tqdm", "inference_utils.ImageSequenceWriter.close", "inference_utils.ImageSequenceWriter.close", "inference_utils.ImageSequenceWriter.close", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torch.tensor().div", "src.to().unsqueeze.to().unsqueeze", "model.eval.", "tqdm.auto.tqdm.update", "int", "int", "int", "len", "inference.auto_downsample_ratio", "inference_utils.ImageSequenceWriter.write", "inference_utils.ImageSequenceWriter.write", "inference_utils.ImageSequenceWriter.write", "src.to().unsqueeze.size", "torch.tensor", "src.to().unsqueeze.to", "torch.cat", "pha.gt"], "function", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.close", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.close", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.close", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.auto_downsample_ratio", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write"], ["def", "convert_video", "(", "model", ",", "\n", "input_source", ":", "str", ",", "\n", "input_resize", ":", "Optional", "[", "Tuple", "[", "int", ",", "int", "]", "]", "=", "None", ",", "\n", "downsample_ratio", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "output_type", ":", "str", "=", "'video'", ",", "\n", "output_composition", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "output_alpha", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "output_foreground", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "output_video_mbps", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "seq_chunk", ":", "int", "=", "1", ",", "\n", "num_workers", ":", "int", "=", "0", ",", "\n", "progress", ":", "bool", "=", "True", ",", "\n", "device", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "dtype", ":", "Optional", "[", "torch", ".", "dtype", "]", "=", "None", ")", ":", "\n", "\n", "    ", "\"\"\"\n    Args:\n        input_source:A video file, or an image sequence directory. Images must be sorted in accending order, support png and jpg.\n        input_resize: If provided, the input are first resized to (w, h).\n        downsample_ratio: The model's downsample_ratio hyperparameter. If not provided, model automatically set one.\n        output_type: Options: [\"video\", \"png_sequence\"].\n        output_composition:\n            The composition output path. File path if output_type == 'video'. Directory path if output_type == 'png_sequence'.\n            If output_type == 'video', the composition has green screen background.\n            If output_type == 'png_sequence'. the composition is RGBA png images.\n        output_alpha: The alpha output from the model.\n        output_foreground: The foreground output from the model.\n        seq_chunk: Number of frames to process at once. Increase it for better parallelism.\n        num_workers: PyTorch's DataLoader workers. Only use >0 for image input.\n        progress: Show progress bar.\n        device: Only need to manually provide if model is a TorchScript freezed model.\n        dtype: Only need to manually provide if model is a TorchScript freezed model.\n    \"\"\"", "\n", "\n", "assert", "downsample_ratio", "is", "None", "or", "(", "downsample_ratio", ">", "0", "and", "downsample_ratio", "<=", "1", ")", ",", "'Downsample ratio must be between 0 (exclusive) and 1 (inclusive).'", "\n", "assert", "any", "(", "[", "output_composition", ",", "output_alpha", ",", "output_foreground", "]", ")", ",", "'Must provide at least one output.'", "\n", "assert", "output_type", "in", "[", "'video'", ",", "'png_sequence'", "]", ",", "'Only support \"video\" and \"png_sequence\" output modes.'", "\n", "assert", "seq_chunk", ">=", "1", ",", "'Sequence chunk must be >= 1'", "\n", "assert", "num_workers", ">=", "0", ",", "'Number of workers must be >= 0'", "\n", "\n", "# Initialize transform", "\n", "if", "input_resize", "is", "not", "None", ":", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "input_resize", "[", ":", ":", "-", "1", "]", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "        ", "transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "\n", "# Initialize reader", "\n", "", "if", "os", ".", "path", ".", "isfile", "(", "input_source", ")", ":", "\n", "        ", "source", "=", "VideoReader", "(", "input_source", ",", "transform", ")", "\n", "", "else", ":", "\n", "        ", "source", "=", "ImageSequenceReader", "(", "input_source", ",", "transform", ")", "\n", "", "reader", "=", "DataLoader", "(", "source", ",", "batch_size", "=", "seq_chunk", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "\n", "# Initialize writers", "\n", "if", "output_type", "==", "'video'", ":", "\n", "        ", "frame_rate", "=", "source", ".", "frame_rate", "if", "isinstance", "(", "source", ",", "VideoReader", ")", "else", "30", "\n", "output_video_mbps", "=", "1", "if", "output_video_mbps", "is", "None", "else", "output_video_mbps", "\n", "if", "output_composition", "is", "not", "None", ":", "\n", "            ", "writer_com", "=", "VideoWriter", "(", "\n", "path", "=", "output_composition", ",", "\n", "frame_rate", "=", "frame_rate", ",", "\n", "bit_rate", "=", "int", "(", "output_video_mbps", "*", "1000000", ")", ")", "\n", "", "if", "output_alpha", "is", "not", "None", ":", "\n", "            ", "writer_pha", "=", "VideoWriter", "(", "\n", "path", "=", "output_alpha", ",", "\n", "frame_rate", "=", "frame_rate", ",", "\n", "bit_rate", "=", "int", "(", "output_video_mbps", "*", "1000000", ")", ")", "\n", "", "if", "output_foreground", "is", "not", "None", ":", "\n", "            ", "writer_fgr", "=", "VideoWriter", "(", "\n", "path", "=", "output_foreground", ",", "\n", "frame_rate", "=", "frame_rate", ",", "\n", "bit_rate", "=", "int", "(", "output_video_mbps", "*", "1000000", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "if", "output_composition", "is", "not", "None", ":", "\n", "            ", "writer_com", "=", "ImageSequenceWriter", "(", "output_composition", ",", "'png'", ")", "\n", "", "if", "output_alpha", "is", "not", "None", ":", "\n", "            ", "writer_pha", "=", "ImageSequenceWriter", "(", "output_alpha", ",", "'png'", ")", "\n", "", "if", "output_foreground", "is", "not", "None", ":", "\n", "            ", "writer_fgr", "=", "ImageSequenceWriter", "(", "output_foreground", ",", "'png'", ")", "\n", "\n", "# Inference", "\n", "", "", "model", "=", "model", ".", "eval", "(", ")", "\n", "if", "device", "is", "None", "or", "dtype", "is", "None", ":", "\n", "        ", "param", "=", "next", "(", "model", ".", "parameters", "(", ")", ")", "\n", "dtype", "=", "param", ".", "dtype", "\n", "device", "=", "param", ".", "device", "\n", "\n", "", "if", "(", "output_composition", "is", "not", "None", ")", "and", "(", "output_type", "==", "'video'", ")", ":", "\n", "        ", "bgr", "=", "torch", ".", "tensor", "(", "[", "120", ",", "255", ",", "155", "]", ",", "device", "=", "device", ",", "dtype", "=", "dtype", ")", ".", "div", "(", "255", ")", ".", "view", "(", "1", ",", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "", "try", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "bar", "=", "tqdm", "(", "total", "=", "len", "(", "source", ")", ",", "disable", "=", "not", "progress", ",", "dynamic_ncols", "=", "True", ")", "\n", "rec", "=", "[", "None", "]", "*", "4", "\n", "for", "src", "in", "reader", ":", "\n", "\n", "                ", "if", "downsample_ratio", "is", "None", ":", "\n", "                    ", "downsample_ratio", "=", "auto_downsample_ratio", "(", "*", "src", ".", "shape", "[", "2", ":", "]", ")", "\n", "\n", "", "src", "=", "src", ".", "to", "(", "device", ",", "dtype", ",", "non_blocking", "=", "True", ")", ".", "unsqueeze", "(", "0", ")", "# [B, T, C, H, W]", "\n", "fgr", ",", "pha", ",", "*", "rec", "=", "model", "(", "src", ",", "*", "rec", ",", "downsample_ratio", ")", "\n", "\n", "if", "output_foreground", "is", "not", "None", ":", "\n", "                    ", "writer_fgr", ".", "write", "(", "fgr", "[", "0", "]", ")", "\n", "", "if", "output_alpha", "is", "not", "None", ":", "\n", "                    ", "writer_pha", ".", "write", "(", "pha", "[", "0", "]", ")", "\n", "", "if", "output_composition", "is", "not", "None", ":", "\n", "                    ", "if", "output_type", "==", "'video'", ":", "\n", "                        ", "com", "=", "fgr", "*", "pha", "+", "bgr", "*", "(", "1", "-", "pha", ")", "\n", "", "else", ":", "\n", "                        ", "fgr", "=", "fgr", "*", "pha", ".", "gt", "(", "0", ")", "\n", "com", "=", "torch", ".", "cat", "(", "[", "fgr", ",", "pha", "]", ",", "dim", "=", "-", "3", ")", "\n", "", "writer_com", ".", "write", "(", "com", "[", "0", "]", ")", "\n", "\n", "", "bar", ".", "update", "(", "src", ".", "size", "(", "1", ")", ")", "\n", "\n", "", "", "", "finally", ":", "\n", "# Clean up", "\n", "        ", "if", "output_composition", "is", "not", "None", ":", "\n", "            ", "writer_com", ".", "close", "(", ")", "\n", "", "if", "output_alpha", "is", "not", "None", ":", "\n", "            ", "writer_pha", ".", "close", "(", ")", "\n", "", "if", "output_foreground", "is", "not", "None", ":", "\n", "            ", "writer_fgr", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.auto_downsample_ratio": [[153, 158], ["min", "max"], "function", ["None"], ["", "", "", "def", "auto_downsample_ratio", "(", "h", ",", "w", ")", ":", "\n", "    ", "\"\"\"\n    Automatically find a downsample ratio so that the largest side of the resolution be 512px.\n    \"\"\"", "\n", "return", "min", "(", "512", "/", "max", "(", "h", ",", "w", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.VideoReader.__init__": [[11, 15], ["pims.PyAVVideoReader"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "video", "=", "pims", ".", "PyAVVideoReader", "(", "path", ")", "\n", "self", ".", "rate", "=", "self", ".", "video", ".", "frame_rate", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.VideoReader.frame_rate": [[16, 19], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "frame_rate", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "rate", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.VideoReader.__len__": [[20, 22], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "video", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.VideoReader.__getitem__": [[23, 29], ["PIL.Image.fromarray", "numpy.asarray", "inference_utils.VideoReader.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "frame", "=", "self", ".", "video", "[", "idx", "]", "\n", "frame", "=", "Image", ".", "fromarray", "(", "np", ".", "asarray", "(", "frame", ")", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "frame", "=", "self", ".", "transform", "(", "frame", ")", "\n", "", "return", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.VideoWriter.__init__": [[32, 37], ["av.open", "inference_utils.VideoWriter.container.add_stream", "round"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "frame_rate", ",", "bit_rate", "=", "1000000", ")", ":", "\n", "        ", "self", ".", "container", "=", "av", ".", "open", "(", "path", ",", "mode", "=", "'w'", ")", "\n", "self", ".", "stream", "=", "self", ".", "container", ".", "add_stream", "(", "'h264'", ",", "rate", "=", "round", "(", "frame_rate", ")", ")", "\n", "self", ".", "stream", ".", "pix_fmt", "=", "'yuv420p'", "\n", "self", ".", "stream", ".", "bit_rate", "=", "bit_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.VideoWriter.write": [[38, 49], ["frames.repeat.repeat.size", "frames.repeat.repeat.size", "frames.repeat.repeat.mul().byte().cpu().permute().numpy", "range", "frames.repeat.repeat.size", "frames.repeat.repeat.repeat", "av.VideoFrame.from_ndarray", "inference_utils.VideoWriter.container.mux", "frames.repeat.repeat.mul().byte().cpu().permute", "inference_utils.VideoWriter.stream.encode", "frames.repeat.repeat.mul().byte().cpu", "frames.repeat.repeat.mul().byte", "frames.repeat.repeat.mul"], "methods", ["None"], ["", "def", "write", "(", "self", ",", "frames", ")", ":", "\n", "# frames: [T, C, H, W]", "\n", "        ", "self", ".", "stream", ".", "width", "=", "frames", ".", "size", "(", "3", ")", "\n", "self", ".", "stream", ".", "height", "=", "frames", ".", "size", "(", "2", ")", "\n", "if", "frames", ".", "size", "(", "1", ")", "==", "1", ":", "\n", "            ", "frames", "=", "frames", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", "# convert grayscale to RGB", "\n", "", "frames", "=", "frames", ".", "mul", "(", "255", ")", ".", "byte", "(", ")", ".", "cpu", "(", ")", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "numpy", "(", ")", "\n", "for", "t", "in", "range", "(", "frames", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "frame", "=", "frames", "[", "t", "]", "\n", "frame", "=", "av", ".", "VideoFrame", ".", "from_ndarray", "(", "frame", ",", "format", "=", "'rgb24'", ")", "\n", "self", ".", "container", ".", "mux", "(", "self", ".", "stream", ".", "encode", "(", "frame", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.VideoWriter.close": [[50, 53], ["inference_utils.VideoWriter.container.mux", "inference_utils.VideoWriter.container.close", "inference_utils.VideoWriter.stream.encode"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "container", ".", "mux", "(", "self", ".", "stream", ".", "encode", "(", ")", ")", "\n", "self", ".", "container", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceReader.__init__": [[56, 60], ["sorted", "os.listdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "self", ".", "files", "=", "sorted", "(", "os", ".", "listdir", "(", "path", ")", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceReader.__len__": [[61, 63], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceReader.__getitem__": [[64, 70], ["PIL.Image.open", "img.load", "inference_utils.ImageSequenceReader.transform", "os.path.join"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "self", ".", "files", "[", "idx", "]", ")", ")", "as", "img", ":", "\n", "            ", "img", ".", "load", "(", ")", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "transform", "(", "img", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.__init__": [[73, 78], ["os.makedirs"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "extension", "=", "'jpg'", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "self", ".", "extension", "=", "extension", "\n", "self", ".", "counter", "=", "0", "\n", "os", ".", "makedirs", "(", "path", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write": [[79, 85], ["range", "torchvision.transforms.functional.to_pil_image().save", "os.path.join", "torchvision.transforms.functional.to_pil_image", "str().zfill", "str"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save"], ["", "def", "write", "(", "self", ",", "frames", ")", ":", "\n", "# frames: [T, C, H, W]", "\n", "        ", "for", "t", "in", "range", "(", "frames", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "to_pil_image", "(", "frames", "[", "t", "]", ")", ".", "save", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "path", ",", "str", "(", "self", ".", "counter", ")", ".", "zfill", "(", "4", ")", "+", "'.'", "+", "self", ".", "extension", ")", ")", "\n", "self", ".", "counter", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.close": [[86, 88], ["None"], "methods", ["None"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.__init__": [[127, 135], ["train.Trainer.parse_args", "train.Trainer.init_distributed", "train.Trainer.init_datasets", "train.Trainer.init_model", "train.Trainer.init_writer", "train.Trainer.train", "train.Trainer.cleanup"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.parse_args", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.init_distributed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.init_datasets", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_speed_test.InferenceSpeedTest.init_model", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.init_writer", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.train", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.cleanup"], ["    ", "def", "__init__", "(", "self", ",", "rank", ",", "world_size", ")", ":", "\n", "        ", "self", ".", "parse_args", "(", ")", "\n", "self", ".", "init_distributed", "(", "rank", ",", "world_size", ")", "\n", "self", ".", "init_datasets", "(", ")", "\n", "self", ".", "init_model", "(", ")", "\n", "self", ".", "init_writer", "(", ")", "\n", "self", ".", "train", "(", ")", "\n", "self", ".", "cleanup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.parse_args": [[136, 174], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.parse_args"], ["", "def", "parse_args", "(", "self", ")", ":", "\n", "        ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "# Model", "\n", "parser", ".", "add_argument", "(", "'--model-variant'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "choices", "=", "[", "'mobilenetv3'", ",", "'resnet50'", "]", ")", "\n", "# Matting dataset", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "choices", "=", "[", "'videomatte'", ",", "'imagematte'", "]", ")", "\n", "# Learning rate", "\n", "parser", ".", "add_argument", "(", "'--learning-rate-backbone'", ",", "type", "=", "float", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--learning-rate-aspp'", ",", "type", "=", "float", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--learning-rate-decoder'", ",", "type", "=", "float", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--learning-rate-refiner'", ",", "type", "=", "float", ",", "required", "=", "True", ")", "\n", "# Training setting", "\n", "parser", ".", "add_argument", "(", "'--train-hr'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--resolution-lr'", ",", "type", "=", "int", ",", "default", "=", "512", ")", "\n", "parser", ".", "add_argument", "(", "'--resolution-hr'", ",", "type", "=", "int", ",", "default", "=", "2048", ")", "\n", "parser", ".", "add_argument", "(", "'--seq-length-lr'", ",", "type", "=", "int", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--seq-length-hr'", ",", "type", "=", "int", ",", "default", "=", "6", ")", "\n", "parser", ".", "add_argument", "(", "'--downsample-ratio'", ",", "type", "=", "float", ",", "default", "=", "0.25", ")", "\n", "parser", ".", "add_argument", "(", "'--batch-size-per-gpu'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--num-workers'", ",", "type", "=", "int", ",", "default", "=", "8", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch-start'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch-end'", ",", "type", "=", "int", ",", "default", "=", "16", ")", "\n", "# Tensorboard logging", "\n", "parser", ".", "add_argument", "(", "'--log-dir'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--log-train-loss-interval'", ",", "type", "=", "int", ",", "default", "=", "20", ")", "\n", "parser", ".", "add_argument", "(", "'--log-train-images-interval'", ",", "type", "=", "int", ",", "default", "=", "500", ")", "\n", "# Checkpoint loading and saving", "\n", "parser", ".", "add_argument", "(", "'--checkpoint'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--checkpoint-dir'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--checkpoint-save-interval'", ",", "type", "=", "int", ",", "default", "=", "500", ")", "\n", "# Distributed", "\n", "parser", ".", "add_argument", "(", "'--distributed-addr'", ",", "type", "=", "str", ",", "default", "=", "'localhost'", ")", "\n", "parser", ".", "add_argument", "(", "'--distributed-port'", ",", "type", "=", "str", ",", "default", "=", "'12355'", ")", "\n", "# Debugging", "\n", "parser", ".", "add_argument", "(", "'--disable-progress-bar'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--disable-validation'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--disable-mixed-precision'", ",", "action", "=", "'store_true'", ")", "\n", "self", ".", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.init_distributed": [[175, 182], ["train.Trainer.log", "torch.distributed.init_process_group"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log"], ["", "def", "init_distributed", "(", "self", ",", "rank", ",", "world_size", ")", ":", "\n", "        ", "self", ".", "rank", "=", "rank", "\n", "self", ".", "world_size", "=", "world_size", "\n", "self", ".", "log", "(", "'Initializing distributed'", ")", "\n", "os", ".", "environ", "[", "'MASTER_ADDR'", "]", "=", "self", ".", "args", ".", "distributed_addr", "\n", "os", ".", "environ", "[", "'MASTER_PORT'", "]", "=", "self", ".", "args", ".", "distributed_port", "\n", "dist", ".", "init_process_group", "(", "\"nccl\"", ",", "rank", "=", "rank", ",", "world_size", "=", "world_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.init_datasets": [[183, 316], ["train.Trainer.log", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train.Trainer.log", "torch.utils.data.ConcatDataset", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "train.Trainer.log", "dataset.youtubevis.YouTubeVISDataset", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "dataset.videomatte.VideoMatteDataset", "dataset.videomatte.VideoMatteDataset", "dataset.imagematte.ImageMatteDataset", "dataset.imagematte.ImageMatteDataset", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "dataset.videomatte.VideoMatteDataset", "dataset.imagematte.ImageMatteDataset", "dataset.coco.CocoPanopticDataset", "dataset.spd.SuperviselyPersonDataset", "dataset.augmentation.TrainFrameSampler", "dataset.youtubevis.YouTubeVISAugmentation", "dataset.augmentation.TrainFrameSampler", "dataset.videomatte.VideoMatteTrainAugmentation", "dataset.augmentation.ValidFrameSampler", "dataset.videomatte.VideoMatteValidAugmentation", "dataset.augmentation.TrainFrameSampler", "dataset.imagematte.ImageMatteAugmentation", "dataset.augmentation.ValidFrameSampler", "dataset.imagematte.ImageMatteAugmentation", "dataset.augmentation.TrainFrameSampler", "dataset.videomatte.VideoMatteTrainAugmentation", "dataset.augmentation.TrainFrameSampler", "dataset.imagematte.ImageMatteAugmentation", "dataset.coco.CocoPanopticTrainAugmentation", "dataset.coco.CocoPanopticTrainAugmentation"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log"], ["", "def", "init_datasets", "(", "self", ")", ":", "\n", "        ", "self", ".", "log", "(", "'Initializing matting datasets'", ")", "\n", "size_hr", "=", "(", "self", ".", "args", ".", "resolution_hr", ",", "self", ".", "args", ".", "resolution_hr", ")", "\n", "size_lr", "=", "(", "self", ".", "args", ".", "resolution_lr", ",", "self", ".", "args", ".", "resolution_lr", ")", "\n", "\n", "# Matting datasets:", "\n", "if", "self", ".", "args", ".", "dataset", "==", "'videomatte'", ":", "\n", "            ", "self", ".", "dataset_lr_train", "=", "VideoMatteDataset", "(", "\n", "videomatte_dir", "=", "DATA_PATHS", "[", "'videomatte'", "]", "[", "'train'", "]", ",", "\n", "background_image_dir", "=", "DATA_PATHS", "[", "'background_images'", "]", "[", "'train'", "]", ",", "\n", "background_video_dir", "=", "DATA_PATHS", "[", "'background_videos'", "]", "[", "'train'", "]", ",", "\n", "size", "=", "self", ".", "args", ".", "resolution_lr", ",", "\n", "seq_length", "=", "self", ".", "args", ".", "seq_length_lr", ",", "\n", "seq_sampler", "=", "TrainFrameSampler", "(", ")", ",", "\n", "transform", "=", "VideoMatteTrainAugmentation", "(", "size_lr", ")", ")", "\n", "if", "self", ".", "args", ".", "train_hr", ":", "\n", "                ", "self", ".", "dataset_hr_train", "=", "VideoMatteDataset", "(", "\n", "videomatte_dir", "=", "DATA_PATHS", "[", "'videomatte'", "]", "[", "'train'", "]", ",", "\n", "background_image_dir", "=", "DATA_PATHS", "[", "'background_images'", "]", "[", "'train'", "]", ",", "\n", "background_video_dir", "=", "DATA_PATHS", "[", "'background_videos'", "]", "[", "'train'", "]", ",", "\n", "size", "=", "self", ".", "args", ".", "resolution_hr", ",", "\n", "seq_length", "=", "self", ".", "args", ".", "seq_length_hr", ",", "\n", "seq_sampler", "=", "TrainFrameSampler", "(", ")", ",", "\n", "transform", "=", "VideoMatteTrainAugmentation", "(", "size_hr", ")", ")", "\n", "", "self", ".", "dataset_valid", "=", "VideoMatteDataset", "(", "\n", "videomatte_dir", "=", "DATA_PATHS", "[", "'videomatte'", "]", "[", "'valid'", "]", ",", "\n", "background_image_dir", "=", "DATA_PATHS", "[", "'background_images'", "]", "[", "'valid'", "]", ",", "\n", "background_video_dir", "=", "DATA_PATHS", "[", "'background_videos'", "]", "[", "'valid'", "]", ",", "\n", "size", "=", "self", ".", "args", ".", "resolution_hr", "if", "self", ".", "args", ".", "train_hr", "else", "self", ".", "args", ".", "resolution_lr", ",", "\n", "seq_length", "=", "self", ".", "args", ".", "seq_length_hr", "if", "self", ".", "args", ".", "train_hr", "else", "self", ".", "args", ".", "seq_length_lr", ",", "\n", "seq_sampler", "=", "ValidFrameSampler", "(", ")", ",", "\n", "transform", "=", "VideoMatteValidAugmentation", "(", "size_hr", "if", "self", ".", "args", ".", "train_hr", "else", "size_lr", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dataset_lr_train", "=", "ImageMatteDataset", "(", "\n", "imagematte_dir", "=", "DATA_PATHS", "[", "'imagematte'", "]", "[", "'train'", "]", ",", "\n", "background_image_dir", "=", "DATA_PATHS", "[", "'background_images'", "]", "[", "'train'", "]", ",", "\n", "background_video_dir", "=", "DATA_PATHS", "[", "'background_videos'", "]", "[", "'train'", "]", ",", "\n", "size", "=", "self", ".", "args", ".", "resolution_lr", ",", "\n", "seq_length", "=", "self", ".", "args", ".", "seq_length_lr", ",", "\n", "seq_sampler", "=", "TrainFrameSampler", "(", ")", ",", "\n", "transform", "=", "ImageMatteAugmentation", "(", "size_lr", ")", ")", "\n", "if", "self", ".", "args", ".", "train_hr", ":", "\n", "                ", "self", ".", "dataset_hr_train", "=", "ImageMatteDataset", "(", "\n", "imagematte_dir", "=", "DATA_PATHS", "[", "'imagematte'", "]", "[", "'train'", "]", ",", "\n", "background_image_dir", "=", "DATA_PATHS", "[", "'background_images'", "]", "[", "'train'", "]", ",", "\n", "background_video_dir", "=", "DATA_PATHS", "[", "'background_videos'", "]", "[", "'train'", "]", ",", "\n", "size", "=", "self", ".", "args", ".", "resolution_hr", ",", "\n", "seq_length", "=", "self", ".", "args", ".", "seq_length_hr", ",", "\n", "seq_sampler", "=", "TrainFrameSampler", "(", ")", ",", "\n", "transform", "=", "ImageMatteAugmentation", "(", "size_hr", ")", ")", "\n", "", "self", ".", "dataset_valid", "=", "ImageMatteDataset", "(", "\n", "imagematte_dir", "=", "DATA_PATHS", "[", "'imagematte'", "]", "[", "'valid'", "]", ",", "\n", "background_image_dir", "=", "DATA_PATHS", "[", "'background_images'", "]", "[", "'valid'", "]", ",", "\n", "background_video_dir", "=", "DATA_PATHS", "[", "'background_videos'", "]", "[", "'valid'", "]", ",", "\n", "size", "=", "self", ".", "args", ".", "resolution_hr", "if", "self", ".", "args", ".", "train_hr", "else", "self", ".", "args", ".", "resolution_lr", ",", "\n", "seq_length", "=", "self", ".", "args", ".", "seq_length_hr", "if", "self", ".", "args", ".", "train_hr", "else", "self", ".", "args", ".", "seq_length_lr", ",", "\n", "seq_sampler", "=", "ValidFrameSampler", "(", ")", ",", "\n", "transform", "=", "ImageMatteAugmentation", "(", "size_hr", "if", "self", ".", "args", ".", "train_hr", "else", "size_lr", ")", ")", "\n", "\n", "# Matting dataloaders:", "\n", "", "self", ".", "datasampler_lr_train", "=", "DistributedSampler", "(", "\n", "dataset", "=", "self", ".", "dataset_lr_train", ",", "\n", "rank", "=", "self", ".", "rank", ",", "\n", "num_replicas", "=", "self", ".", "world_size", ",", "\n", "shuffle", "=", "True", ")", "\n", "self", ".", "dataloader_lr_train", "=", "DataLoader", "(", "\n", "dataset", "=", "self", ".", "dataset_lr_train", ",", "\n", "batch_size", "=", "self", ".", "args", ".", "batch_size_per_gpu", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "num_workers", ",", "\n", "sampler", "=", "self", ".", "datasampler_lr_train", ",", "\n", "pin_memory", "=", "True", ")", "\n", "if", "self", ".", "args", ".", "train_hr", ":", "\n", "            ", "self", ".", "datasampler_hr_train", "=", "DistributedSampler", "(", "\n", "dataset", "=", "self", ".", "dataset_hr_train", ",", "\n", "rank", "=", "self", ".", "rank", ",", "\n", "num_replicas", "=", "self", ".", "world_size", ",", "\n", "shuffle", "=", "True", ")", "\n", "self", ".", "dataloader_hr_train", "=", "DataLoader", "(", "\n", "dataset", "=", "self", ".", "dataset_hr_train", ",", "\n", "batch_size", "=", "self", ".", "args", ".", "batch_size_per_gpu", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "num_workers", ",", "\n", "sampler", "=", "self", ".", "datasampler_hr_train", ",", "\n", "pin_memory", "=", "True", ")", "\n", "", "self", ".", "dataloader_valid", "=", "DataLoader", "(", "\n", "dataset", "=", "self", ".", "dataset_valid", ",", "\n", "batch_size", "=", "self", ".", "args", ".", "batch_size_per_gpu", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "# Segementation datasets", "\n", "self", ".", "log", "(", "'Initializing image segmentation datasets'", ")", "\n", "self", ".", "dataset_seg_image", "=", "ConcatDataset", "(", "[", "\n", "CocoPanopticDataset", "(", "\n", "imgdir", "=", "DATA_PATHS", "[", "'coco_panoptic'", "]", "[", "'imgdir'", "]", ",", "\n", "anndir", "=", "DATA_PATHS", "[", "'coco_panoptic'", "]", "[", "'anndir'", "]", ",", "\n", "annfile", "=", "DATA_PATHS", "[", "'coco_panoptic'", "]", "[", "'annfile'", "]", ",", "\n", "transform", "=", "CocoPanopticTrainAugmentation", "(", "size_lr", ")", ")", ",", "\n", "SuperviselyPersonDataset", "(", "\n", "imgdir", "=", "DATA_PATHS", "[", "'spd'", "]", "[", "'imgdir'", "]", ",", "\n", "segdir", "=", "DATA_PATHS", "[", "'spd'", "]", "[", "'segdir'", "]", ",", "\n", "transform", "=", "CocoPanopticTrainAugmentation", "(", "size_lr", ")", ")", "\n", "]", ")", "\n", "self", ".", "datasampler_seg_image", "=", "DistributedSampler", "(", "\n", "dataset", "=", "self", ".", "dataset_seg_image", ",", "\n", "rank", "=", "self", ".", "rank", ",", "\n", "num_replicas", "=", "self", ".", "world_size", ",", "\n", "shuffle", "=", "True", ")", "\n", "self", ".", "dataloader_seg_image", "=", "DataLoader", "(", "\n", "dataset", "=", "self", ".", "dataset_seg_image", ",", "\n", "batch_size", "=", "self", ".", "args", ".", "batch_size_per_gpu", "*", "self", ".", "args", ".", "seq_length_lr", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "num_workers", ",", "\n", "sampler", "=", "self", ".", "datasampler_seg_image", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "self", ".", "log", "(", "'Initializing video segmentation datasets'", ")", "\n", "self", ".", "dataset_seg_video", "=", "YouTubeVISDataset", "(", "\n", "videodir", "=", "DATA_PATHS", "[", "'youtubevis'", "]", "[", "'videodir'", "]", ",", "\n", "annfile", "=", "DATA_PATHS", "[", "'youtubevis'", "]", "[", "'annfile'", "]", ",", "\n", "size", "=", "self", ".", "args", ".", "resolution_lr", ",", "\n", "seq_length", "=", "self", ".", "args", ".", "seq_length_lr", ",", "\n", "seq_sampler", "=", "TrainFrameSampler", "(", "speed", "=", "[", "1", "]", ")", ",", "\n", "transform", "=", "YouTubeVISAugmentation", "(", "size_lr", ")", ")", "\n", "self", ".", "datasampler_seg_video", "=", "DistributedSampler", "(", "\n", "dataset", "=", "self", ".", "dataset_seg_video", ",", "\n", "rank", "=", "self", ".", "rank", ",", "\n", "num_replicas", "=", "self", ".", "world_size", ",", "\n", "shuffle", "=", "True", ")", "\n", "self", ".", "dataloader_seg_video", "=", "DataLoader", "(", "\n", "dataset", "=", "self", ".", "dataset_seg_video", ",", "\n", "batch_size", "=", "self", ".", "args", ".", "batch_size_per_gpu", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "num_workers", ",", "\n", "sampler", "=", "self", ".", "datasampler_seg_video", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.init_model": [[317, 337], ["train.Trainer.log", "model.MattingNetwork().to", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.parallel.DistributedDataParallel", "torch.optim.Adam", "torch.cuda.amp.GradScaler", "train.Trainer.log", "train.Trainer.log", "model.MattingNetwork", "train.Trainer.model.load_state_dict", "torch.load", "train.Trainer.model.backbone.parameters", "train.Trainer.model.aspp.parameters", "train.Trainer.model.decoder.parameters", "train.Trainer.model.project_mat.parameters", "train.Trainer.model.project_seg.parameters", "train.Trainer.model.refiner.parameters"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log"], ["", "def", "init_model", "(", "self", ")", ":", "\n", "        ", "self", ".", "log", "(", "'Initializing model'", ")", "\n", "self", ".", "model", "=", "MattingNetwork", "(", "self", ".", "args", ".", "model_variant", ",", "pretrained_backbone", "=", "True", ")", ".", "to", "(", "self", ".", "rank", ")", "\n", "\n", "if", "self", ".", "args", ".", "checkpoint", ":", "\n", "            ", "self", ".", "log", "(", "f'Restoring from checkpoint: {self.args.checkpoint}'", ")", "\n", "self", ".", "log", "(", "self", ".", "model", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "self", ".", "args", ".", "checkpoint", ",", "map_location", "=", "f'cuda:{self.rank}'", ")", ")", ")", "\n", "\n", "", "self", ".", "model", "=", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "self", ".", "model", ")", "\n", "self", ".", "model_ddp", "=", "DDP", "(", "self", ".", "model", ",", "device_ids", "=", "[", "self", ".", "rank", "]", ",", "broadcast_buffers", "=", "False", ",", "find_unused_parameters", "=", "True", ")", "\n", "self", ".", "optimizer", "=", "Adam", "(", "[", "\n", "{", "'params'", ":", "self", ".", "model", ".", "backbone", ".", "parameters", "(", ")", ",", "'lr'", ":", "self", ".", "args", ".", "learning_rate_backbone", "}", ",", "\n", "{", "'params'", ":", "self", ".", "model", ".", "aspp", ".", "parameters", "(", ")", ",", "'lr'", ":", "self", ".", "args", ".", "learning_rate_aspp", "}", ",", "\n", "{", "'params'", ":", "self", ".", "model", ".", "decoder", ".", "parameters", "(", ")", ",", "'lr'", ":", "self", ".", "args", ".", "learning_rate_decoder", "}", ",", "\n", "{", "'params'", ":", "self", ".", "model", ".", "project_mat", ".", "parameters", "(", ")", ",", "'lr'", ":", "self", ".", "args", ".", "learning_rate_decoder", "}", ",", "\n", "{", "'params'", ":", "self", ".", "model", ".", "project_seg", ".", "parameters", "(", ")", ",", "'lr'", ":", "self", ".", "args", ".", "learning_rate_decoder", "}", ",", "\n", "{", "'params'", ":", "self", ".", "model", ".", "refiner", ".", "parameters", "(", ")", ",", "'lr'", ":", "self", ".", "args", ".", "learning_rate_refiner", "}", ",", "\n", "]", ")", "\n", "self", ".", "scaler", "=", "GradScaler", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.init_writer": [[338, 342], ["train.Trainer.log", "torch.utils.tensorboard.SummaryWriter"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log"], ["", "def", "init_writer", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "rank", "==", "0", ":", "\n", "            ", "self", ".", "log", "(", "'Initializing writer'", ")", "\n", "self", ".", "writer", "=", "SummaryWriter", "(", "self", ".", "args", ".", "log_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.train": [[343, 373], ["range", "train.Trainer.log", "tqdm.tqdm.tqdm", "len", "train.Trainer.validate", "train.Trainer.train_mat", "train.Trainer.load_next_mat_hr_sample", "train.Trainer.train_mat", "train.Trainer.load_next_seg_video_sample", "train.Trainer.train_seg", "train.Trainer.load_next_seg_image_sample", "train.Trainer.train_seg", "train.Trainer.save", "true_img.unsqueeze", "true_seg.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.validate", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.train_mat", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.load_next_mat_hr_sample", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.train_mat", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.load_next_seg_video_sample", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.train_seg", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.load_next_seg_image_sample", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.train_seg", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save"], ["", "", "def", "train", "(", "self", ")", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "self", ".", "args", ".", "epoch_start", ",", "self", ".", "args", ".", "epoch_end", ")", ":", "\n", "            ", "self", ".", "epoch", "=", "epoch", "\n", "self", ".", "step", "=", "epoch", "*", "len", "(", "self", ".", "dataloader_lr_train", ")", "\n", "\n", "if", "not", "self", ".", "args", ".", "disable_validation", ":", "\n", "                ", "self", ".", "validate", "(", ")", "\n", "\n", "", "self", ".", "log", "(", "f'Training epoch: {epoch}'", ")", "\n", "for", "true_fgr", ",", "true_pha", ",", "true_bgr", "in", "tqdm", "(", "self", ".", "dataloader_lr_train", ",", "disable", "=", "self", ".", "args", ".", "disable_progress_bar", ",", "dynamic_ncols", "=", "True", ")", ":", "\n", "# Low resolution pass", "\n", "                ", "self", ".", "train_mat", "(", "true_fgr", ",", "true_pha", ",", "true_bgr", ",", "downsample_ratio", "=", "1", ",", "tag", "=", "'lr'", ")", "\n", "\n", "# High resolution pass", "\n", "if", "self", ".", "args", ".", "train_hr", ":", "\n", "                    ", "true_fgr", ",", "true_pha", ",", "true_bgr", "=", "self", ".", "load_next_mat_hr_sample", "(", ")", "\n", "self", ".", "train_mat", "(", "true_fgr", ",", "true_pha", ",", "true_bgr", ",", "downsample_ratio", "=", "self", ".", "args", ".", "downsample_ratio", ",", "tag", "=", "'hr'", ")", "\n", "\n", "# Segmentation pass", "\n", "", "if", "self", ".", "step", "%", "2", "==", "0", ":", "\n", "                    ", "true_img", ",", "true_seg", "=", "self", ".", "load_next_seg_video_sample", "(", ")", "\n", "self", ".", "train_seg", "(", "true_img", ",", "true_seg", ",", "log_label", "=", "'seg_video'", ")", "\n", "", "else", ":", "\n", "                    ", "true_img", ",", "true_seg", "=", "self", ".", "load_next_seg_image_sample", "(", ")", "\n", "self", ".", "train_seg", "(", "true_img", ".", "unsqueeze", "(", "1", ")", ",", "true_seg", ".", "unsqueeze", "(", "1", ")", ",", "log_label", "=", "'seg_image'", ")", "\n", "\n", "", "if", "self", ".", "step", "%", "self", ".", "args", ".", "checkpoint_save_interval", "==", "0", ":", "\n", "                    ", "self", ".", "save", "(", ")", "\n", "\n", "", "self", ".", "step", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.train_mat": [[374, 400], ["true_fgr.to.to.to", "true_pha.to.to.to", "true_bgr.to.to.to", "train.Trainer.random_crop", "train.Trainer.scaler.scale().backward", "train.Trainer.scaler.step", "train.Trainer.scaler.update", "train.Trainer.optimizer.zero_grad", "torch.cuda.amp.autocast", "train_loss.matting_loss", "train_loss.matting_loss.items", "train.Trainer.writer.add_image", "train.Trainer.writer.add_image", "train.Trainer.writer.add_image", "train.Trainer.writer.add_image", "train.Trainer.writer.add_image", "train.Trainer.model_ddp", "train.Trainer.scaler.scale", "train.Trainer.writer.add_scalar", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "pred_fgr.flatten", "pred_pha.flatten", "true_fgr.to.to.flatten", "true_pha.to.to.flatten", "true_src.flatten", "pred_fgr.size", "pred_pha.size", "true_fgr.to.to.size", "true_pha.to.to.size", "true_src.size"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.random_crop", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.matting_loss"], ["", "", "", "def", "train_mat", "(", "self", ",", "true_fgr", ",", "true_pha", ",", "true_bgr", ",", "downsample_ratio", ",", "tag", ")", ":", "\n", "        ", "true_fgr", "=", "true_fgr", ".", "to", "(", "self", ".", "rank", ",", "non_blocking", "=", "True", ")", "\n", "true_pha", "=", "true_pha", ".", "to", "(", "self", ".", "rank", ",", "non_blocking", "=", "True", ")", "\n", "true_bgr", "=", "true_bgr", ".", "to", "(", "self", ".", "rank", ",", "non_blocking", "=", "True", ")", "\n", "true_fgr", ",", "true_pha", ",", "true_bgr", "=", "self", ".", "random_crop", "(", "true_fgr", ",", "true_pha", ",", "true_bgr", ")", "\n", "true_src", "=", "true_fgr", "*", "true_pha", "+", "true_bgr", "*", "(", "1", "-", "true_pha", ")", "\n", "\n", "with", "autocast", "(", "enabled", "=", "not", "self", ".", "args", ".", "disable_mixed_precision", ")", ":", "\n", "            ", "pred_fgr", ",", "pred_pha", "=", "self", ".", "model_ddp", "(", "true_src", ",", "downsample_ratio", "=", "downsample_ratio", ")", "[", ":", "2", "]", "\n", "loss", "=", "matting_loss", "(", "pred_fgr", ",", "pred_pha", ",", "true_fgr", ",", "true_pha", ")", "\n", "\n", "", "self", ".", "scaler", ".", "scale", "(", "loss", "[", "'total'", "]", ")", ".", "backward", "(", ")", "\n", "self", ".", "scaler", ".", "step", "(", "self", ".", "optimizer", ")", "\n", "self", ".", "scaler", ".", "update", "(", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "if", "self", ".", "rank", "==", "0", "and", "self", ".", "step", "%", "self", ".", "args", ".", "log_train_loss_interval", "==", "0", ":", "\n", "            ", "for", "loss_name", ",", "loss_value", "in", "loss", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "writer", ".", "add_scalar", "(", "f'train_{tag}_{loss_name}'", ",", "loss_value", ",", "self", ".", "step", ")", "\n", "\n", "", "", "if", "self", ".", "rank", "==", "0", "and", "self", ".", "step", "%", "self", ".", "args", ".", "log_train_images_interval", "==", "0", ":", "\n", "            ", "self", ".", "writer", ".", "add_image", "(", "f'train_{tag}_pred_fgr'", ",", "make_grid", "(", "pred_fgr", ".", "flatten", "(", "0", ",", "1", ")", ",", "nrow", "=", "pred_fgr", ".", "size", "(", "1", ")", ")", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "f'train_{tag}_pred_pha'", ",", "make_grid", "(", "pred_pha", ".", "flatten", "(", "0", ",", "1", ")", ",", "nrow", "=", "pred_pha", ".", "size", "(", "1", ")", ")", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "f'train_{tag}_true_fgr'", ",", "make_grid", "(", "true_fgr", ".", "flatten", "(", "0", ",", "1", ")", ",", "nrow", "=", "true_fgr", ".", "size", "(", "1", ")", ")", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "f'train_{tag}_true_pha'", ",", "make_grid", "(", "true_pha", ".", "flatten", "(", "0", ",", "1", ")", ",", "nrow", "=", "true_pha", ".", "size", "(", "1", ")", ")", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "f'train_{tag}_true_src'", ",", "make_grid", "(", "true_src", ".", "flatten", "(", "0", ",", "1", ")", ",", "nrow", "=", "true_src", ".", "size", "(", "1", ")", ")", ",", "self", ".", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.train_seg": [[401, 423], ["true_img.to.to.to", "true_seg.to.to.to", "train.Trainer.random_crop", "train.Trainer.scaler.scale().backward", "train.Trainer.scaler.step", "train.Trainer.scaler.update", "train.Trainer.optimizer.zero_grad", "torch.cuda.amp.autocast", "train_loss.segmentation_loss", "train.Trainer.writer.add_scalar", "train.Trainer.writer.add_image", "train.Trainer.writer.add_image", "train.Trainer.writer.add_image", "train.Trainer.model_ddp", "train.Trainer.scaler.scale", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "pred_seg.flatten().float().sigmoid", "true_seg.to.to.flatten", "true_img.to.to.flatten", "pred_seg.flatten().float", "pred_seg.flatten"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.random_crop", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.segmentation_loss"], ["", "", "def", "train_seg", "(", "self", ",", "true_img", ",", "true_seg", ",", "log_label", ")", ":", "\n", "        ", "true_img", "=", "true_img", ".", "to", "(", "self", ".", "rank", ",", "non_blocking", "=", "True", ")", "\n", "true_seg", "=", "true_seg", ".", "to", "(", "self", ".", "rank", ",", "non_blocking", "=", "True", ")", "\n", "\n", "true_img", ",", "true_seg", "=", "self", ".", "random_crop", "(", "true_img", ",", "true_seg", ")", "\n", "\n", "with", "autocast", "(", "enabled", "=", "not", "self", ".", "args", ".", "disable_mixed_precision", ")", ":", "\n", "            ", "pred_seg", "=", "self", ".", "model_ddp", "(", "true_img", ",", "segmentation_pass", "=", "True", ")", "[", "0", "]", "\n", "loss", "=", "segmentation_loss", "(", "pred_seg", ",", "true_seg", ")", "\n", "\n", "", "self", ".", "scaler", ".", "scale", "(", "loss", ")", ".", "backward", "(", ")", "\n", "self", ".", "scaler", ".", "step", "(", "self", ".", "optimizer", ")", "\n", "self", ".", "scaler", ".", "update", "(", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "if", "self", ".", "rank", "==", "0", "and", "(", "self", ".", "step", "-", "self", ".", "step", "%", "2", ")", "%", "self", ".", "args", ".", "log_train_loss_interval", "==", "0", ":", "\n", "            ", "self", ".", "writer", ".", "add_scalar", "(", "f'{log_label}_loss'", ",", "loss", ",", "self", ".", "step", ")", "\n", "\n", "", "if", "self", ".", "rank", "==", "0", "and", "(", "self", ".", "step", "-", "self", ".", "step", "%", "2", ")", "%", "self", ".", "args", ".", "log_train_images_interval", "==", "0", ":", "\n", "            ", "self", ".", "writer", ".", "add_image", "(", "f'{log_label}_pred_seg'", ",", "make_grid", "(", "pred_seg", ".", "flatten", "(", "0", ",", "1", ")", ".", "float", "(", ")", ".", "sigmoid", "(", ")", ",", "nrow", "=", "self", ".", "args", ".", "seq_length_lr", ")", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "f'{log_label}_true_seg'", ",", "make_grid", "(", "true_seg", ".", "flatten", "(", "0", ",", "1", ")", ",", "nrow", "=", "self", ".", "args", ".", "seq_length_lr", ")", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "f'{log_label}_true_img'", ",", "make_grid", "(", "true_img", ".", "flatten", "(", "0", ",", "1", ")", ",", "nrow", "=", "self", ".", "args", ".", "seq_length_lr", ")", ",", "self", ".", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.load_next_mat_hr_sample": [[424, 432], ["next", "train.Trainer.datasampler_hr_train.set_epoch", "iter", "next"], "methods", ["None"], ["", "", "def", "load_next_mat_hr_sample", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "sample", "=", "next", "(", "self", ".", "dataiterator_mat_hr", ")", "\n", "", "except", ":", "\n", "            ", "self", ".", "datasampler_hr_train", ".", "set_epoch", "(", "self", ".", "datasampler_hr_train", ".", "epoch", "+", "1", ")", "\n", "self", ".", "dataiterator_mat_hr", "=", "iter", "(", "self", ".", "dataloader_hr_train", ")", "\n", "sample", "=", "next", "(", "self", ".", "dataiterator_mat_hr", ")", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.load_next_seg_video_sample": [[433, 441], ["next", "train.Trainer.datasampler_seg_video.set_epoch", "iter", "next"], "methods", ["None"], ["", "def", "load_next_seg_video_sample", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "sample", "=", "next", "(", "self", ".", "dataiterator_seg_video", ")", "\n", "", "except", ":", "\n", "            ", "self", ".", "datasampler_seg_video", ".", "set_epoch", "(", "self", ".", "datasampler_seg_video", ".", "epoch", "+", "1", ")", "\n", "self", ".", "dataiterator_seg_video", "=", "iter", "(", "self", ".", "dataloader_seg_video", ")", "\n", "sample", "=", "next", "(", "self", ".", "dataiterator_seg_video", ")", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.load_next_seg_image_sample": [[442, 450], ["next", "train.Trainer.datasampler_seg_image.set_epoch", "iter", "next"], "methods", ["None"], ["", "def", "load_next_seg_image_sample", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "sample", "=", "next", "(", "self", ".", "dataiterator_seg_image", ")", "\n", "", "except", ":", "\n", "            ", "self", ".", "datasampler_seg_image", ".", "set_epoch", "(", "self", ".", "datasampler_seg_image", ".", "epoch", "+", "1", ")", "\n", "self", ".", "dataiterator_seg_image", "=", "iter", "(", "self", ".", "dataloader_seg_image", ")", "\n", "sample", "=", "next", "(", "self", ".", "dataiterator_seg_image", ")", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.validate": [[451, 472], ["torch.distributed.barrier", "train.Trainer.log", "train.Trainer.model_ddp.eval", "train.Trainer.log", "train.Trainer.writer.add_scalar", "train.Trainer.model_ddp.train", "torch.no_grad", "torch.cuda.amp.autocast", "tqdm.tqdm.tqdm", "true_fgr.to.to.to", "true_pha.to.to.to", "true_bgr.to.to.to", "true_src.size", "train.Trainer.model", "[].item", "train_loss.matting_loss"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.train", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.matting_loss"], ["", "def", "validate", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "rank", "==", "0", ":", "\n", "            ", "self", ".", "log", "(", "f'Validating at the start of epoch: {self.epoch}'", ")", "\n", "self", ".", "model_ddp", ".", "eval", "(", ")", "\n", "total_loss", ",", "total_count", "=", "0", ",", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "with", "autocast", "(", "enabled", "=", "not", "self", ".", "args", ".", "disable_mixed_precision", ")", ":", "\n", "                    ", "for", "true_fgr", ",", "true_pha", ",", "true_bgr", "in", "tqdm", "(", "self", ".", "dataloader_valid", ",", "disable", "=", "self", ".", "args", ".", "disable_progress_bar", ",", "dynamic_ncols", "=", "True", ")", ":", "\n", "                        ", "true_fgr", "=", "true_fgr", ".", "to", "(", "self", ".", "rank", ",", "non_blocking", "=", "True", ")", "\n", "true_pha", "=", "true_pha", ".", "to", "(", "self", ".", "rank", ",", "non_blocking", "=", "True", ")", "\n", "true_bgr", "=", "true_bgr", ".", "to", "(", "self", ".", "rank", ",", "non_blocking", "=", "True", ")", "\n", "true_src", "=", "true_fgr", "*", "true_pha", "+", "true_bgr", "*", "(", "1", "-", "true_pha", ")", "\n", "batch_size", "=", "true_src", ".", "size", "(", "0", ")", "\n", "pred_fgr", ",", "pred_pha", "=", "self", ".", "model", "(", "true_src", ")", "[", ":", "2", "]", "\n", "total_loss", "+=", "matting_loss", "(", "pred_fgr", ",", "pred_pha", ",", "true_fgr", ",", "true_pha", ")", "[", "'total'", "]", ".", "item", "(", ")", "*", "batch_size", "\n", "total_count", "+=", "batch_size", "\n", "", "", "", "avg_loss", "=", "total_loss", "/", "total_count", "\n", "self", ".", "log", "(", "f'Validation set average loss: {avg_loss}'", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'valid_loss'", ",", "avg_loss", ",", "self", ".", "step", ")", "\n", "self", ".", "model_ddp", ".", "train", "(", ")", "\n", "", "dist", ".", "barrier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.random_crop": [[473, 486], ["random.choice", "random.choice", "range", "range", "img.reshape.reshape.flatten", "torch.nn.functional.interpolate", "torchvision.transforms.functional.center_crop", "img.reshape.reshape.reshape", "results.append", "max", "max"], "methods", ["None"], ["", "def", "random_crop", "(", "self", ",", "*", "imgs", ")", ":", "\n", "        ", "h", ",", "w", "=", "imgs", "[", "0", "]", ".", "shape", "[", "-", "2", ":", "]", "\n", "w", "=", "random", ".", "choice", "(", "range", "(", "w", "//", "2", ",", "w", ")", ")", "\n", "h", "=", "random", ".", "choice", "(", "range", "(", "h", "//", "2", ",", "h", ")", ")", "\n", "results", "=", "[", "]", "\n", "for", "img", "in", "imgs", ":", "\n", "            ", "B", ",", "T", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "img", "=", "img", ".", "flatten", "(", "0", ",", "1", ")", "\n", "img", "=", "F", ".", "interpolate", "(", "img", ",", "(", "max", "(", "h", ",", "w", ")", ",", "max", "(", "h", ",", "w", ")", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "img", "=", "center_crop", "(", "img", ",", "(", "h", ",", "w", ")", ")", "\n", "img", "=", "img", ".", "reshape", "(", "B", ",", "T", ",", "*", "img", ".", "shape", "[", "1", ":", "]", ")", "\n", "results", ".", "append", "(", "img", ")", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save": [[487, 493], ["torch.distributed.barrier", "os.makedirs", "torch.save", "train.Trainer.log", "train.Trainer.model.state_dict", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "rank", "==", "0", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "args", ".", "checkpoint_dir", ",", "exist_ok", "=", "True", ")", "\n", "torch", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "checkpoint_dir", ",", "f'epoch-{self.epoch}.pth'", ")", ")", "\n", "self", ".", "log", "(", "'Model saved'", ")", "\n", "", "dist", ".", "barrier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.cleanup": [[494, 496], ["torch.distributed.destroy_process_group"], "methods", ["None"], ["", "def", "cleanup", "(", "self", ")", ":", "\n", "        ", "dist", ".", "destroy_process_group", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log": [[497, 499], ["print"], "methods", ["None"], ["", "def", "log", "(", "self", ",", "msg", ")", ":", "\n", "        ", "print", "(", "f'[GPU{self.rank}] {msg}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.hubconf.mobilenetv3": [[17, 23], ["model.MattingNetwork", "model.MattingNetwork.load_state_dict", "torch.hub.load_state_dict_from_url"], "function", ["None"], ["def", "mobilenetv3", "(", "pretrained", ":", "bool", "=", "True", ",", "progress", ":", "bool", "=", "True", ")", ":", "\n", "    ", "model", "=", "MattingNetwork", "(", "'mobilenetv3'", ")", "\n", "if", "pretrained", ":", "\n", "        ", "url", "=", "'https://github.com/PeterL1n/RobustVideoMatting/releases/download/v1.0.0/rvm_mobilenetv3.pth'", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "url", ",", "map_location", "=", "'cpu'", ",", "progress", "=", "progress", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.hubconf.resnet50": [[25, 31], ["model.MattingNetwork", "model.MattingNetwork.load_state_dict", "torch.hub.load_state_dict_from_url"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", ":", "bool", "=", "True", ",", "progress", ":", "bool", "=", "True", ")", ":", "\n", "    ", "model", "=", "MattingNetwork", "(", "'resnet50'", ")", "\n", "if", "pretrained", ":", "\n", "        ", "url", "=", "'https://github.com/PeterL1n/RobustVideoMatting/releases/download/v1.0.0/rvm_resnet50.pth'", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "url", ",", "map_location", "=", "'cpu'", ",", "progress", "=", "progress", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.hubconf.converter": [[33, 40], ["print", "print"], "function", ["None"], ["", "def", "converter", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "from", "inference", "import", "convert_video", "\n", "return", "convert_video", "\n", "", "except", "ModuleNotFoundError", "as", "error", ":", "\n", "        ", "print", "(", "error", ")", "\n", "print", "(", "'Please run \"pip install av tqdm pims\"'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_speed_test.InferenceSpeedTest.__init__": [[18, 22], ["inference_speed_test.InferenceSpeedTest.parse_args", "inference_speed_test.InferenceSpeedTest.init_model", "inference_speed_test.InferenceSpeedTest.loop"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.parse_args", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_speed_test.InferenceSpeedTest.init_model", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_speed_test.InferenceSpeedTest.loop"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "parse_args", "(", ")", "\n", "self", ".", "init_model", "(", ")", "\n", "self", ".", "loop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_speed_test.InferenceSpeedTest.parse_args": [[23, 31], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.parse_args"], ["", "def", "parse_args", "(", "self", ")", ":", "\n", "        ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--model-variant'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--resolution'", ",", "type", "=", "int", ",", "required", "=", "True", ",", "nargs", "=", "2", ")", "\n", "parser", ".", "add_argument", "(", "'--downsample-ratio'", ",", "type", "=", "float", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--precision'", ",", "type", "=", "str", ",", "default", "=", "'float32'", ")", "\n", "parser", ".", "add_argument", "(", "'--disable-refiner'", ",", "action", "=", "'store_true'", ")", "\n", "self", ".", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_speed_test.InferenceSpeedTest.init_model": [[32, 39], ["model.model.MattingNetwork", "inference_speed_test.InferenceSpeedTest.model.to().eval", "torch.jit.script", "torch.jit.freeze", "inference_speed_test.InferenceSpeedTest.model.to"], "methods", ["None"], ["", "def", "init_model", "(", "self", ")", ":", "\n", "        ", "self", ".", "device", "=", "'cuda'", "\n", "self", ".", "precision", "=", "{", "'float32'", ":", "torch", ".", "float32", ",", "'float16'", ":", "torch", ".", "float16", "}", "[", "self", ".", "args", ".", "precision", "]", "\n", "self", ".", "model", "=", "MattingNetwork", "(", "self", ".", "args", ".", "model_variant", ")", "\n", "self", ".", "model", "=", "self", ".", "model", ".", "to", "(", "device", "=", "self", ".", "device", ",", "dtype", "=", "self", ".", "precision", ")", ".", "eval", "(", ")", "\n", "self", ".", "model", "=", "torch", ".", "jit", ".", "script", "(", "self", ".", "model", ")", "\n", "self", ".", "model", "=", "torch", ".", "jit", ".", "freeze", "(", "self", ".", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_speed_test.InferenceSpeedTest.loop": [[40, 48], ["torch.randn", "torch.no_grad", "tqdm.tqdm.tqdm", "range", "inference_speed_test.InferenceSpeedTest.model", "torch.cuda.synchronize"], "methods", ["None"], ["", "def", "loop", "(", "self", ")", ":", "\n", "        ", "w", ",", "h", "=", "self", ".", "args", ".", "resolution", "\n", "src", "=", "torch", ".", "randn", "(", "(", "1", ",", "3", ",", "h", ",", "w", ")", ",", "device", "=", "self", ".", "device", ",", "dtype", "=", "self", ".", "precision", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "rec", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "for", "_", "in", "tqdm", "(", "range", "(", "1000", ")", ")", ":", "\n", "                ", "fgr", ",", "pha", ",", "*", "rec", "=", "self", ".", "model", "(", "src", ",", "*", "rec", ",", "self", ".", "args", ".", "downsample_ratio", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticDataset.__init__": [[13, 24], ["open", "list", "json.load", "filter", "any"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "imgdir", ":", "str", ",", "\n", "anndir", ":", "str", ",", "\n", "annfile", ":", "str", ",", "\n", "transform", "=", "None", ")", ":", "\n", "        ", "with", "open", "(", "annfile", ")", "as", "f", ":", "\n", "            ", "self", ".", "data", "=", "json", ".", "load", "(", "f", ")", "[", "'annotations'", "]", "\n", "self", ".", "data", "=", "list", "(", "filter", "(", "lambda", "data", ":", "any", "(", "info", "[", "'category_id'", "]", "==", "1", "for", "info", "in", "data", "[", "'segments_info'", "]", ")", ",", "self", ".", "data", ")", ")", "\n", "", "self", ".", "imgdir", "=", "imgdir", "\n", "self", ".", "anndir", "=", "anndir", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticDataset.__len__": [[25, 27], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticDataset.__getitem__": [[28, 37], ["coco.CocoPanopticDataset._load_img", "coco.CocoPanopticDataset._load_seg", "coco.CocoPanopticDataset.transform"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticDataset._load_img", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticDataset._load_seg"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "data", "=", "self", ".", "data", "[", "idx", "]", "\n", "img", "=", "self", ".", "_load_img", "(", "data", ")", "\n", "seg", "=", "self", ".", "_load_seg", "(", "data", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", ",", "seg", "=", "self", ".", "transform", "(", "img", ",", "seg", ")", "\n", "\n", "", "return", "img", ",", "seg", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticDataset._load_img": [[38, 41], ["PIL.Image.open", "img.convert", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "data[].replace"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert"], ["", "def", "_load_img", "(", "self", ",", "data", ")", ":", "\n", "        ", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "imgdir", ",", "data", "[", "'file_name'", "]", ".", "replace", "(", "'.png'", ",", "'.jpg'", ")", ")", ")", "as", "img", ":", "\n", "            ", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticDataset._load_seg": [[42, 55], ["numpy.array().astype", "numpy.zeros", "PIL.Image.fromarray", "PIL.Image.open", "numpy.array().astype.load", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.array"], "methods", ["None"], ["", "", "def", "_load_seg", "(", "self", ",", "data", ")", ":", "\n", "        ", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "anndir", ",", "data", "[", "'file_name'", "]", ")", ")", "as", "ann", ":", "\n", "            ", "ann", ".", "load", "(", ")", "\n", "\n", "", "ann", "=", "np", ".", "array", "(", "ann", ",", "copy", "=", "False", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "ann", "=", "ann", "[", ":", ",", ":", ",", "0", "]", "+", "256", "*", "ann", "[", ":", ",", ":", ",", "1", "]", "+", "256", "*", "256", "*", "ann", "[", ":", ",", ":", ",", "2", "]", "\n", "seg", "=", "np", ".", "zeros", "(", "ann", ".", "shape", ",", "np", ".", "uint8", ")", "\n", "\n", "for", "segments_info", "in", "data", "[", "'segments_info'", "]", ":", "\n", "            ", "if", "segments_info", "[", "'category_id'", "]", "in", "[", "1", ",", "27", ",", "32", "]", ":", "# person, backpack, tie", "\n", "                ", "seg", "[", "ann", "==", "segments_info", "[", "'id'", "]", "]", "=", "255", "\n", "\n", "", "", "return", "Image", ".", "fromarray", "(", "seg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticTrainAugmentation.__init__": [[58, 61], ["torchvision.transforms.ColorJitter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "jitter", "=", "transforms", ".", "ColorJitter", "(", "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticTrainAugmentation.__call__": [[62, 87], ["torchvision.transforms.RandomAffine.get_params", "torchvision.transforms.functional.affine", "torchvision.transforms.functional.affine", "torchvision.transforms.RandomResizedCrop.get_params", "torchvision.transforms.functional.resized_crop", "torchvision.transforms.functional.resized_crop", "coco.CocoPanopticTrainAugmentation.jitter", "torchvision.transforms.functional.to_tensor", "torchvision.transforms.functional.to_tensor", "random.random", "torchvision.transforms.functional.hflip", "torchvision.transforms.functional.hflip"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "seg", ")", ":", "\n", "# Affine", "\n", "        ", "params", "=", "transforms", ".", "RandomAffine", ".", "get_params", "(", "degrees", "=", "(", "-", "20", ",", "20", ")", ",", "translate", "=", "(", "0.1", ",", "0.1", ")", ",", "\n", "scale_ranges", "=", "(", "1", ",", "1", ")", ",", "shears", "=", "(", "-", "10", ",", "10", ")", ",", "img_size", "=", "img", ".", "size", ")", "\n", "img", "=", "F", ".", "affine", "(", "img", ",", "*", "params", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "seg", "=", "F", ".", "affine", "(", "seg", ",", "*", "params", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "NEAREST", ")", "\n", "\n", "# Resize", "\n", "params", "=", "transforms", ".", "RandomResizedCrop", ".", "get_params", "(", "img", ",", "scale", "=", "(", "0.5", ",", "1", ")", ",", "ratio", "=", "(", "0.7", ",", "1.3", ")", ")", "\n", "img", "=", "F", ".", "resized_crop", "(", "img", ",", "*", "params", ",", "self", ".", "size", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "seg", "=", "F", ".", "resized_crop", "(", "seg", ",", "*", "params", ",", "self", ".", "size", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "NEAREST", ")", "\n", "\n", "# Horizontal flip", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "img", "=", "F", ".", "hflip", "(", "img", ")", "\n", "seg", "=", "F", ".", "hflip", "(", "seg", ")", "\n", "\n", "# Color jitter", "\n", "", "img", "=", "self", ".", "jitter", "(", "img", ")", "\n", "\n", "# To tensor", "\n", "img", "=", "F", ".", "to_tensor", "(", "img", ")", "\n", "seg", "=", "F", ".", "to_tensor", "(", "seg", ")", "\n", "\n", "return", "img", ",", "seg", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticValidAugmentation.__init__": [[90, 92], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.coco.CocoPanopticValidAugmentation.__call__": [[93, 104], ["torchvision.transforms.RandomResizedCrop.get_params", "torchvision.transforms.functional.resized_crop", "torchvision.transforms.functional.resized_crop", "torchvision.transforms.functional.to_tensor", "torchvision.transforms.functional.to_tensor"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "seg", ")", ":", "\n", "# Resize", "\n", "        ", "params", "=", "transforms", ".", "RandomResizedCrop", ".", "get_params", "(", "img", ",", "scale", "=", "(", "1", ",", "1", ")", ",", "ratio", "=", "(", "1.", ",", "1.", ")", ")", "\n", "img", "=", "F", ".", "resized_crop", "(", "img", ",", "*", "params", ",", "self", ".", "size", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "seg", "=", "F", ".", "resized_crop", "(", "seg", ",", "*", "params", ",", "self", ".", "size", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "NEAREST", ")", "\n", "\n", "# To tensor", "\n", "img", "=", "F", ".", "to_tensor", "(", "img", ")", "\n", "seg", "=", "F", ".", "to_tensor", "(", "seg", ")", "\n", "\n", "return", "img", ",", "seg", "", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.youtubevis.YouTubeVISDataset.__init__": [[13, 43], ["youtubevis.YouTubeVISDataset.videos.keys", "open", "json.load", "range", "zip", "len", "youtubevis.YouTubeVISDataset.index.append", "frame.append", "range", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "videodir", ",", "annfile", ",", "size", ",", "seq_length", ",", "seq_sampler", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "videodir", "=", "videodir", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "seq_length", "=", "seq_length", "\n", "self", ".", "seq_sampler", "=", "seq_sampler", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "with", "open", "(", "annfile", ")", "as", "f", ":", "\n", "            ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "self", ".", "masks", "=", "{", "}", "\n", "for", "ann", "in", "data", "[", "'annotations'", "]", ":", "\n", "            ", "if", "ann", "[", "'category_id'", "]", "==", "26", ":", "# person", "\n", "                ", "video_id", "=", "ann", "[", "'video_id'", "]", "\n", "if", "video_id", "not", "in", "self", ".", "masks", ":", "\n", "                    ", "self", ".", "masks", "[", "video_id", "]", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "ann", "[", "'segmentations'", "]", ")", ")", "]", "\n", "", "for", "frame", ",", "mask", "in", "zip", "(", "self", ".", "masks", "[", "video_id", "]", ",", "ann", "[", "'segmentations'", "]", ")", ":", "\n", "                    ", "if", "mask", "is", "not", "None", ":", "\n", "                        ", "frame", ".", "append", "(", "mask", ")", "\n", "\n", "", "", "", "", "self", ".", "videos", "=", "{", "}", "\n", "for", "video", "in", "data", "[", "'videos'", "]", ":", "\n", "            ", "video_id", "=", "video", "[", "'id'", "]", "\n", "if", "video_id", "in", "self", ".", "masks", ":", "\n", "                ", "self", ".", "videos", "[", "video_id", "]", "=", "video", "\n", "\n", "", "", "self", ".", "index", "=", "[", "]", "\n", "for", "video_id", "in", "self", ".", "videos", ".", "keys", "(", ")", ":", "\n", "            ", "for", "frame", "in", "range", "(", "len", "(", "self", ".", "videos", "[", "video_id", "]", "[", "'file_names'", "]", ")", ")", ":", "\n", "                ", "self", ".", "index", ".", "append", "(", "(", "video_id", ",", "frame", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.youtubevis.YouTubeVISDataset.__len__": [[44, 46], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.youtubevis.YouTubeVISDataset.__getitem__": [[47, 72], ["len", "youtubevis.YouTubeVISDataset.seq_sampler", "numpy.zeros", "segs.append", "youtubevis.YouTubeVISDataset.transform", "PIL.Image.open", "imgs.append", "youtubevis.YouTubeVISDataset._decode_rle", "youtubevis.YouTubeVISDataset._downsample_if_needed", "os.path.join", "youtubevis.YouTubeVISDataset._downsample_if_needed", "PIL.Image.fromarray", "img.convert"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.youtubevis.YouTubeVISDataset._decode_rle", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "video_id", ",", "frame_id", "=", "self", ".", "index", "[", "idx", "]", "\n", "video", "=", "self", ".", "videos", "[", "video_id", "]", "\n", "frame_count", "=", "len", "(", "self", ".", "videos", "[", "video_id", "]", "[", "'file_names'", "]", ")", "\n", "H", ",", "W", "=", "video", "[", "'height'", "]", ",", "video", "[", "'width'", "]", "\n", "\n", "imgs", ",", "segs", "=", "[", "]", ",", "[", "]", "\n", "for", "t", "in", "self", ".", "seq_sampler", "(", "self", ".", "seq_length", ")", ":", "\n", "            ", "frame", "=", "(", "frame_id", "+", "t", ")", "%", "frame_count", "\n", "\n", "filename", "=", "video", "[", "'file_names'", "]", "[", "frame", "]", "\n", "masks", "=", "self", ".", "masks", "[", "video_id", "]", "[", "frame", "]", "\n", "\n", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "videodir", ",", "filename", ")", ")", "as", "img", ":", "\n", "                ", "imgs", ".", "append", "(", "self", ".", "_downsample_if_needed", "(", "img", ".", "convert", "(", "'RGB'", ")", ",", "Image", ".", "BILINEAR", ")", ")", "\n", "\n", "", "seg", "=", "np", ".", "zeros", "(", "(", "H", ",", "W", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "mask", "in", "masks", ":", "\n", "                ", "seg", "|=", "self", ".", "_decode_rle", "(", "mask", ")", "\n", "", "segs", ".", "append", "(", "self", ".", "_downsample_if_needed", "(", "Image", ".", "fromarray", "(", "seg", ")", ",", "Image", ".", "NEAREST", ")", ")", "\n", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "imgs", ",", "segs", "=", "self", ".", "transform", "(", "imgs", ",", "segs", ")", "\n", "\n", "", "return", "imgs", ",", "segs", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.youtubevis.YouTubeVISDataset._decode_rle": [[73, 84], ["numpy.zeros", "range", "numpy.zeros.reshape().transpose", "len", "numpy.zeros.reshape"], "methods", ["None"], ["", "def", "_decode_rle", "(", "self", ",", "rle", ")", ":", "\n", "        ", "H", ",", "W", "=", "rle", "[", "'size'", "]", "\n", "msk", "=", "np", ".", "zeros", "(", "H", "*", "W", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "encoding", "=", "rle", "[", "'counts'", "]", "\n", "skip", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "encoding", ")", "-", "1", ",", "2", ")", ":", "\n", "            ", "skip", "+=", "encoding", "[", "i", "]", "\n", "draw", "=", "encoding", "[", "i", "+", "1", "]", "\n", "msk", "[", "skip", ":", "skip", "+", "draw", "]", "=", "255", "\n", "skip", "+=", "draw", "\n", "", "return", "msk", ".", "reshape", "(", "W", ",", "H", ")", ".", "transpose", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.youtubevis.YouTubeVISDataset._downsample_if_needed": [[85, 93], ["min", "int", "int", "img.resize.resize.resize", "min"], "methods", ["None"], ["", "def", "_downsample_if_needed", "(", "self", ",", "img", ",", "resample", ")", ":", "\n", "        ", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "min", "(", "w", ",", "h", ")", ">", "self", ".", "size", ":", "\n", "            ", "scale", "=", "self", ".", "size", "/", "min", "(", "w", ",", "h", ")", "\n", "w", "=", "int", "(", "scale", "*", "w", ")", "\n", "h", "=", "int", "(", "scale", "*", "h", ")", "\n", "img", "=", "img", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "resample", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.youtubevis.YouTubeVISAugmentation.__init__": [[96, 99], ["torchvision.transforms.ColorJitter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "jitter", "=", "transforms", ".", "ColorJitter", "(", "0.3", ",", "0.3", ",", "0.3", ",", "0.15", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.youtubevis.YouTubeVISAugmentation.__call__": [[100, 124], ["torch.stack", "torch.stack", "torchvision.transforms.RandomResizedCrop.get_params", "torchvision.transforms.functional.resized_crop", "torchvision.transforms.functional.resized_crop", "youtubevis.YouTubeVISAugmentation.jitter", "random.random", "torchvision.transforms.functional.rgb_to_grayscale", "random.random", "torchvision.transforms.functional.hflip", "torchvision.transforms.functional.hflip", "torchvision.transforms.functional.to_tensor", "torchvision.transforms.functional.to_tensor"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "imgs", ",", "segs", ")", ":", "\n", "\n", "# To tensor", "\n", "        ", "imgs", "=", "torch", ".", "stack", "(", "[", "F", ".", "to_tensor", "(", "img", ")", "for", "img", "in", "imgs", "]", ")", "\n", "segs", "=", "torch", ".", "stack", "(", "[", "F", ".", "to_tensor", "(", "seg", ")", "for", "seg", "in", "segs", "]", ")", "\n", "\n", "# Resize", "\n", "params", "=", "transforms", ".", "RandomResizedCrop", ".", "get_params", "(", "imgs", ",", "scale", "=", "(", "0.8", ",", "1", ")", ",", "ratio", "=", "(", "0.9", ",", "1.1", ")", ")", "\n", "imgs", "=", "F", ".", "resized_crop", "(", "imgs", ",", "*", "params", ",", "self", ".", "size", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "segs", "=", "F", ".", "resized_crop", "(", "segs", ",", "*", "params", ",", "self", ".", "size", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "\n", "# Color jitter", "\n", "imgs", "=", "self", ".", "jitter", "(", "imgs", ")", "\n", "\n", "# Grayscale", "\n", "if", "random", ".", "random", "(", ")", "<", "0.05", ":", "\n", "            ", "imgs", "=", "F", ".", "rgb_to_grayscale", "(", "imgs", ",", "num_output_channels", "=", "3", ")", "\n", "\n", "# Horizontal flip", "\n", "", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "imgs", "=", "F", ".", "hflip", "(", "imgs", ")", "\n", "segs", "=", "F", ".", "hflip", "(", "segs", ")", "\n", "\n", "", "return", "imgs", ",", "segs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.imagematte.ImageMatteDataset.__init__": [[10, 30], ["os.listdir", "os.listdir", "os.listdir", "os.path.join", "sorted", "os.listdir", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "imagematte_dir", ",", "\n", "background_image_dir", ",", "\n", "background_video_dir", ",", "\n", "size", ",", "\n", "seq_length", ",", "\n", "seq_sampler", ",", "\n", "transform", ")", ":", "\n", "        ", "self", ".", "imagematte_dir", "=", "imagematte_dir", "\n", "self", ".", "imagematte_files", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "imagematte_dir", ",", "'fgr'", ")", ")", "\n", "self", ".", "background_image_dir", "=", "background_image_dir", "\n", "self", ".", "background_image_files", "=", "os", ".", "listdir", "(", "background_image_dir", ")", "\n", "self", ".", "background_video_dir", "=", "background_video_dir", "\n", "self", ".", "background_video_clips", "=", "os", ".", "listdir", "(", "background_video_dir", ")", "\n", "self", ".", "background_video_frames", "=", "[", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "background_video_dir", ",", "clip", ")", ")", ")", "\n", "for", "clip", "in", "self", ".", "background_video_clips", "]", "\n", "self", ".", "seq_length", "=", "seq_length", "\n", "self", ".", "seq_sampler", "=", "seq_sampler", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.imagematte.ImageMatteDataset.__len__": [[31, 33], ["max", "len", "len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "max", "(", "len", "(", "self", ".", "imagematte_files", ")", ",", "len", "(", "self", ".", "background_image_files", ")", "+", "len", "(", "self", ".", "background_video_clips", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.imagematte.ImageMatteDataset.__getitem__": [[34, 46], ["imagematte.ImageMatteDataset._get_imagematte", "random.random", "imagematte.ImageMatteDataset._get_random_image_background", "imagematte.ImageMatteDataset._get_random_video_background", "imagematte.ImageMatteDataset.transform"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.imagematte.ImageMatteDataset._get_imagematte", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._get_random_image_background", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._get_random_video_background"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "bgrs", "=", "self", ".", "_get_random_image_background", "(", ")", "\n", "", "else", ":", "\n", "            ", "bgrs", "=", "self", ".", "_get_random_video_background", "(", ")", "\n", "\n", "", "fgrs", ",", "phas", "=", "self", ".", "_get_imagematte", "(", "idx", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "transform", "(", "fgrs", ",", "phas", ",", "bgrs", ")", "\n", "\n", "", "return", "fgrs", ",", "phas", ",", "bgrs", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.imagematte.ImageMatteDataset._get_imagematte": [[47, 55], ["PIL.Image.open", "PIL.Image.open", "imagematte.ImageMatteDataset._downsample_if_needed", "imagematte.ImageMatteDataset._downsample_if_needed", "os.path.join", "os.path.join", "imagematte.ImageMatteDataset.convert", "imagematte.ImageMatteDataset.convert", "len", "len"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert"], ["", "def", "_get_imagematte", "(", "self", ",", "idx", ")", ":", "\n", "        ", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "imagematte_dir", ",", "'fgr'", ",", "self", ".", "imagematte_files", "[", "idx", "%", "len", "(", "self", ".", "imagematte_files", ")", "]", ")", ")", "as", "fgr", ",", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "imagematte_dir", ",", "'pha'", ",", "self", ".", "imagematte_files", "[", "idx", "%", "len", "(", "self", ".", "imagematte_files", ")", "]", ")", ")", "as", "pha", ":", "\n", "            ", "fgr", "=", "self", ".", "_downsample_if_needed", "(", "fgr", ".", "convert", "(", "'RGB'", ")", ")", "\n", "pha", "=", "self", ".", "_downsample_if_needed", "(", "pha", ".", "convert", "(", "'L'", ")", ")", "\n", "", "fgrs", "=", "[", "fgr", "]", "*", "self", ".", "seq_length", "\n", "phas", "=", "[", "pha", "]", "*", "self", ".", "seq_length", "\n", "return", "fgrs", ",", "phas", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.imagematte.ImageMatteDataset._get_random_image_background": [[56, 61], ["PIL.Image.open", "imagematte.ImageMatteDataset._downsample_if_needed", "os.path.join", "imagematte.ImageMatteDataset.convert", "random.choice", "range", "len"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert"], ["", "def", "_get_random_image_background", "(", "self", ")", ":", "\n", "        ", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "background_image_dir", ",", "self", ".", "background_image_files", "[", "random", ".", "choice", "(", "range", "(", "len", "(", "self", ".", "background_image_files", ")", ")", ")", "]", ")", ")", "as", "bgr", ":", "\n", "            ", "bgr", "=", "self", ".", "_downsample_if_needed", "(", "bgr", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "bgrs", "=", "[", "bgr", "]", "*", "self", ".", "seq_length", "\n", "return", "bgrs", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.imagematte.ImageMatteDataset._get_random_video_background": [[62, 75], ["random.choice", "len", "random.choice", "imagematte.ImageMatteDataset.seq_sampler", "range", "range", "bgrs.append", "len", "max", "PIL.Image.open", "imagematte.ImageMatteDataset._downsample_if_needed", "os.path.join", "imagematte.ImageMatteDataset.convert"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert"], ["", "def", "_get_random_video_background", "(", "self", ")", ":", "\n", "        ", "clip_idx", "=", "random", ".", "choice", "(", "range", "(", "len", "(", "self", ".", "background_video_clips", ")", ")", ")", "\n", "frame_count", "=", "len", "(", "self", ".", "background_video_frames", "[", "clip_idx", "]", ")", "\n", "frame_idx", "=", "random", ".", "choice", "(", "range", "(", "max", "(", "1", ",", "frame_count", "-", "self", ".", "seq_length", ")", ")", ")", "\n", "clip", "=", "self", ".", "background_video_clips", "[", "clip_idx", "]", "\n", "bgrs", "=", "[", "]", "\n", "for", "i", "in", "self", ".", "seq_sampler", "(", "self", ".", "seq_length", ")", ":", "\n", "            ", "frame_idx_t", "=", "frame_idx", "+", "i", "\n", "frame", "=", "self", ".", "background_video_frames", "[", "clip_idx", "]", "[", "frame_idx_t", "%", "frame_count", "]", "\n", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "background_video_dir", ",", "clip", ",", "frame", ")", ")", "as", "bgr", ":", "\n", "                ", "bgr", "=", "self", ".", "_downsample_if_needed", "(", "bgr", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "bgrs", ".", "append", "(", "bgr", ")", "\n", "", "return", "bgrs", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.imagematte.ImageMatteDataset._downsample_if_needed": [[76, 84], ["min", "int", "int", "img.resize.resize.resize", "min"], "methods", ["None"], ["", "def", "_downsample_if_needed", "(", "self", ",", "img", ")", ":", "\n", "        ", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "min", "(", "w", ",", "h", ")", ">", "self", ".", "size", ":", "\n", "            ", "scale", "=", "self", ".", "size", "/", "min", "(", "w", ",", "h", ")", "\n", "w", "=", "int", "(", "scale", "*", "w", ")", "\n", "h", "=", "int", "(", "scale", "*", "h", ")", "\n", "img", "=", "img", ".", "resize", "(", "(", "w", ",", "h", ")", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.imagematte.ImageMatteAugmentation.__init__": [[86, 98], ["augmentation.MotionAugmentation.__init__"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "size", "=", "size", ",", "\n", "prob_fgr_affine", "=", "0.95", ",", "\n", "prob_bgr_affine", "=", "0.3", ",", "\n", "prob_noise", "=", "0.05", ",", "\n", "prob_color_jitter", "=", "0.3", ",", "\n", "prob_grayscale", "=", "0.03", ",", "\n", "prob_sharpness", "=", "0.05", ",", "\n", "prob_blur", "=", "0.02", ",", "\n", "prob_hflip", "=", "0.5", ",", "\n", "prob_pause", "=", "0.03", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.spd.SuperviselyPersonDataset.__init__": [[7, 14], ["sorted", "sorted", "os.listdir", "os.listdir", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "imgdir", ",", "segdir", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "img_dir", "=", "imgdir", "\n", "self", ".", "img_files", "=", "sorted", "(", "os", ".", "listdir", "(", "imgdir", ")", ")", "\n", "self", ".", "seg_dir", "=", "segdir", "\n", "self", ".", "seg_files", "=", "sorted", "(", "os", ".", "listdir", "(", "segdir", ")", ")", "\n", "assert", "len", "(", "self", ".", "img_files", ")", "==", "len", "(", "self", ".", "seg_files", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.spd.SuperviselyPersonDataset.__len__": [[15, 17], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.spd.SuperviselyPersonDataset.__getitem__": [[18, 28], ["PIL.Image.open", "PIL.Image.open", "img.convert.convert.convert", "seg.convert.convert.convert", "spd.SuperviselyPersonDataset.transform", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "img_dir", ",", "self", ".", "img_files", "[", "idx", "]", ")", ")", "as", "img", ",", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "seg_dir", ",", "self", ".", "seg_files", "[", "idx", "]", ")", ")", "as", "seg", ":", "\n", "            ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "seg", "=", "seg", ".", "convert", "(", "'L'", ")", "\n", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", ",", "seg", "=", "self", ".", "transform", "(", "img", ",", "seg", ")", "\n", "\n", "", "return", "img", ",", "seg", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset.__init__": [[10, 36], ["os.listdir", "sorted", "sorted", "os.listdir", "sorted", "os.listdir", "sorted", "os.listdir", "os.path.join", "os.listdir", "range", "range", "os.path.join", "os.path.join", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "videomatte_dir", ",", "\n", "background_image_dir", ",", "\n", "background_video_dir", ",", "\n", "size", ",", "\n", "seq_length", ",", "\n", "seq_sampler", ",", "\n", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "background_image_dir", "=", "background_image_dir", "\n", "self", ".", "background_image_files", "=", "os", ".", "listdir", "(", "background_image_dir", ")", "\n", "self", ".", "background_video_dir", "=", "background_video_dir", "\n", "self", ".", "background_video_clips", "=", "sorted", "(", "os", ".", "listdir", "(", "background_video_dir", ")", ")", "\n", "self", ".", "background_video_frames", "=", "[", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "background_video_dir", ",", "clip", ")", ")", ")", "\n", "for", "clip", "in", "self", ".", "background_video_clips", "]", "\n", "\n", "self", ".", "videomatte_dir", "=", "videomatte_dir", "\n", "self", ".", "videomatte_clips", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "videomatte_dir", ",", "'fgr'", ")", ")", ")", "\n", "self", ".", "videomatte_frames", "=", "[", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "videomatte_dir", ",", "'fgr'", ",", "clip", ")", ")", ")", "\n", "for", "clip", "in", "self", ".", "videomatte_clips", "]", "\n", "self", ".", "videomatte_idx", "=", "[", "(", "clip_idx", ",", "frame_idx", ")", "\n", "for", "clip_idx", "in", "range", "(", "len", "(", "self", ".", "videomatte_clips", ")", ")", "\n", "for", "frame_idx", "in", "range", "(", "0", ",", "len", "(", "self", ".", "videomatte_frames", "[", "clip_idx", "]", ")", ",", "seq_length", ")", "]", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "seq_length", "=", "seq_length", "\n", "self", ".", "seq_sampler", "=", "seq_sampler", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset.__len__": [[37, 39], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "videomatte_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset.__getitem__": [[40, 52], ["videomatte.VideoMatteDataset._get_videomatte", "random.random", "videomatte.VideoMatteDataset._get_random_image_background", "videomatte.VideoMatteDataset._get_random_video_background", "videomatte.VideoMatteDataset.transform"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._get_videomatte", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._get_random_image_background", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._get_random_video_background"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "bgrs", "=", "self", ".", "_get_random_image_background", "(", ")", "\n", "", "else", ":", "\n", "            ", "bgrs", "=", "self", ".", "_get_random_video_background", "(", ")", "\n", "\n", "", "fgrs", ",", "phas", "=", "self", ".", "_get_videomatte", "(", "idx", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "transform", "(", "fgrs", ",", "phas", ",", "bgrs", ")", "\n", "\n", "", "return", "fgrs", ",", "phas", ",", "bgrs", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._get_random_image_background": [[53, 58], ["PIL.Image.open", "videomatte.VideoMatteDataset._downsample_if_needed", "os.path.join", "videomatte.VideoMatteDataset.convert", "random.choice"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert"], ["", "def", "_get_random_image_background", "(", "self", ")", ":", "\n", "        ", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "background_image_dir", ",", "random", ".", "choice", "(", "self", ".", "background_image_files", ")", ")", ")", "as", "bgr", ":", "\n", "            ", "bgr", "=", "self", ".", "_downsample_if_needed", "(", "bgr", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "bgrs", "=", "[", "bgr", "]", "*", "self", ".", "seq_length", "\n", "return", "bgrs", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._get_random_video_background": [[59, 72], ["random.choice", "len", "random.choice", "videomatte.VideoMatteDataset.seq_sampler", "range", "range", "bgrs.append", "len", "max", "PIL.Image.open", "videomatte.VideoMatteDataset._downsample_if_needed", "os.path.join", "videomatte.VideoMatteDataset.convert"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert"], ["", "def", "_get_random_video_background", "(", "self", ")", ":", "\n", "        ", "clip_idx", "=", "random", ".", "choice", "(", "range", "(", "len", "(", "self", ".", "background_video_clips", ")", ")", ")", "\n", "frame_count", "=", "len", "(", "self", ".", "background_video_frames", "[", "clip_idx", "]", ")", "\n", "frame_idx", "=", "random", ".", "choice", "(", "range", "(", "max", "(", "1", ",", "frame_count", "-", "self", ".", "seq_length", ")", ")", ")", "\n", "clip", "=", "self", ".", "background_video_clips", "[", "clip_idx", "]", "\n", "bgrs", "=", "[", "]", "\n", "for", "i", "in", "self", ".", "seq_sampler", "(", "self", ".", "seq_length", ")", ":", "\n", "            ", "frame_idx_t", "=", "frame_idx", "+", "i", "\n", "frame", "=", "self", ".", "background_video_frames", "[", "clip_idx", "]", "[", "frame_idx_t", "%", "frame_count", "]", "\n", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "background_video_dir", ",", "clip", ",", "frame", ")", ")", "as", "bgr", ":", "\n", "                ", "bgr", "=", "self", ".", "_downsample_if_needed", "(", "bgr", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "bgrs", ".", "append", "(", "bgr", ")", "\n", "", "return", "bgrs", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._get_videomatte": [[73, 87], ["len", "videomatte.VideoMatteDataset.seq_sampler", "fgrs.append", "phas.append", "PIL.Image.open", "PIL.Image.open", "videomatte.VideoMatteDataset._downsample_if_needed", "videomatte.VideoMatteDataset._downsample_if_needed", "os.path.join", "os.path.join", "videomatte.VideoMatteDataset.convert", "videomatte.VideoMatteDataset.convert"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert"], ["", "def", "_get_videomatte", "(", "self", ",", "idx", ")", ":", "\n", "        ", "clip_idx", ",", "frame_idx", "=", "self", ".", "videomatte_idx", "[", "idx", "]", "\n", "clip", "=", "self", ".", "videomatte_clips", "[", "clip_idx", "]", "\n", "frame_count", "=", "len", "(", "self", ".", "videomatte_frames", "[", "clip_idx", "]", ")", "\n", "fgrs", ",", "phas", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "self", ".", "seq_sampler", "(", "self", ".", "seq_length", ")", ":", "\n", "            ", "frame", "=", "self", ".", "videomatte_frames", "[", "clip_idx", "]", "[", "(", "frame_idx", "+", "i", ")", "%", "frame_count", "]", "\n", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "videomatte_dir", ",", "'fgr'", ",", "clip", ",", "frame", ")", ")", "as", "fgr", ",", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "videomatte_dir", ",", "'pha'", ",", "clip", ",", "frame", ")", ")", "as", "pha", ":", "\n", "                    ", "fgr", "=", "self", ".", "_downsample_if_needed", "(", "fgr", ".", "convert", "(", "'RGB'", ")", ")", "\n", "pha", "=", "self", ".", "_downsample_if_needed", "(", "pha", ".", "convert", "(", "'L'", ")", ")", "\n", "", "fgrs", ".", "append", "(", "fgr", ")", "\n", "phas", ".", "append", "(", "pha", ")", "\n", "", "return", "fgrs", ",", "phas", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteDataset._downsample_if_needed": [[88, 96], ["min", "int", "int", "img.resize.resize.resize", "min"], "methods", ["None"], ["", "def", "_downsample_if_needed", "(", "self", ",", "img", ")", ":", "\n", "        ", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "min", "(", "w", ",", "h", ")", ">", "self", ".", "size", ":", "\n", "            ", "scale", "=", "self", ".", "size", "/", "min", "(", "w", ",", "h", ")", "\n", "w", "=", "int", "(", "scale", "*", "w", ")", "\n", "h", "=", "int", "(", "scale", "*", "h", ")", "\n", "img", "=", "img", ".", "resize", "(", "(", "w", ",", "h", ")", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteTrainAugmentation.__init__": [[98, 110], ["augmentation.MotionAugmentation.__init__"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "size", "=", "size", ",", "\n", "prob_fgr_affine", "=", "0.3", ",", "\n", "prob_bgr_affine", "=", "0.3", ",", "\n", "prob_noise", "=", "0.1", ",", "\n", "prob_color_jitter", "=", "0.3", ",", "\n", "prob_grayscale", "=", "0.02", ",", "\n", "prob_sharpness", "=", "0.1", ",", "\n", "prob_blur", "=", "0.02", ",", "\n", "prob_hflip", "=", "0.5", ",", "\n", "prob_pause", "=", "0.03", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.videomatte.VideoMatteValidAugmentation.__init__": [[113, 125], ["augmentation.MotionAugmentation.__init__"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "size", "=", "size", ",", "\n", "prob_fgr_affine", "=", "0", ",", "\n", "prob_bgr_affine", "=", "0", ",", "\n", "prob_noise", "=", "0", ",", "\n", "prob_color_jitter", "=", "0", ",", "\n", "prob_grayscale", "=", "0", ",", "\n", "prob_sharpness", "=", "0", ",", "\n", "prob_blur", "=", "0", ",", "\n", "prob_hflip", "=", "0", ",", "\n", "prob_pause", "=", "0", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation.__init__": [[9, 34], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "size", ",", "\n", "prob_fgr_affine", ",", "\n", "prob_bgr_affine", ",", "\n", "prob_noise", ",", "\n", "prob_color_jitter", ",", "\n", "prob_grayscale", ",", "\n", "prob_sharpness", ",", "\n", "prob_blur", ",", "\n", "prob_hflip", ",", "\n", "prob_pause", ",", "\n", "static_affine", "=", "True", ",", "\n", "aspect_ratio_range", "=", "(", "0.9", ",", "1.1", ")", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "prob_fgr_affine", "=", "prob_fgr_affine", "\n", "self", ".", "prob_bgr_affine", "=", "prob_bgr_affine", "\n", "self", ".", "prob_noise", "=", "prob_noise", "\n", "self", ".", "prob_color_jitter", "=", "prob_color_jitter", "\n", "self", ".", "prob_grayscale", "=", "prob_grayscale", "\n", "self", ".", "prob_sharpness", "=", "prob_sharpness", "\n", "self", ".", "prob_blur", "=", "prob_blur", "\n", "self", ".", "prob_hflip", "=", "prob_hflip", "\n", "self", ".", "prob_pause", "=", "prob_pause", "\n", "self", ".", "static_affine", "=", "static_affine", "\n", "self", ".", "aspect_ratio_range", "=", "aspect_ratio_range", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation.__call__": [[35, 105], ["torch.stack", "torch.stack", "torch.stack", "torchvision.transforms.RandomResizedCrop.get_params", "torchvision.transforms.functional.resized_crop", "torchvision.transforms.functional.resized_crop", "torchvision.transforms.RandomResizedCrop.get_params", "torchvision.transforms.functional.resized_crop", "random.random", "augmentation.MotionAugmentation._motion_affine", "random.random", "augmentation.MotionAugmentation._motion_affine", "random.random", "augmentation.MotionAugmentation._motion_affine", "augmentation.MotionAugmentation._static_affine", "augmentation.MotionAugmentation._static_affine", "random.random", "torchvision.transforms.functional.hflip", "torchvision.transforms.functional.hflip", "random.random", "torchvision.transforms.functional.hflip", "random.random", "augmentation.MotionAugmentation._motion_noise", "random.random", "augmentation.MotionAugmentation._motion_color_jitter", "random.random", "augmentation.MotionAugmentation._motion_color_jitter", "random.random", "torchvision.transforms.functional.rgb_to_grayscale().contiguous", "torchvision.transforms.functional.rgb_to_grayscale().contiguous", "random.random", "torchvision.transforms.functional.adjust_sharpness", "torchvision.transforms.functional.adjust_sharpness", "torchvision.transforms.functional.adjust_sharpness", "random.random", "augmentation.MotionAugmentation._motion_blur", "random.random", "augmentation.MotionAugmentation._motion_blur", "random.random", "augmentation.MotionAugmentation._motion_blur", "random.random", "augmentation.MotionAugmentation._motion_pause", "torchvision.transforms.functional.to_tensor", "torchvision.transforms.functional.to_tensor", "torchvision.transforms.functional.to_tensor", "random.random", "torchvision.transforms.functional.rgb_to_grayscale", "torchvision.transforms.functional.rgb_to_grayscale"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_affine", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_affine", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_affine", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._static_affine", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._static_affine", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_noise", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_color_jitter", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_color_jitter", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_blur", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_blur", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_blur", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_pause"], ["", "def", "__call__", "(", "self", ",", "fgrs", ",", "phas", ",", "bgrs", ")", ":", "\n", "# Foreground affine", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_fgr_affine", ":", "\n", "            ", "fgrs", ",", "phas", "=", "self", ".", "_motion_affine", "(", "fgrs", ",", "phas", ")", "\n", "\n", "# Background affine", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_bgr_affine", "/", "2", ":", "\n", "            ", "bgrs", "=", "self", ".", "_motion_affine", "(", "bgrs", ")", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_bgr_affine", "/", "2", ":", "\n", "            ", "fgrs", ",", "phas", ",", "bgrs", "=", "self", ".", "_motion_affine", "(", "fgrs", ",", "phas", ",", "bgrs", ")", "\n", "\n", "# Still Affine", "\n", "", "if", "self", ".", "static_affine", ":", "\n", "            ", "fgrs", ",", "phas", "=", "self", ".", "_static_affine", "(", "fgrs", ",", "phas", ",", "scale_ranges", "=", "(", "0.5", ",", "1", ")", ")", "\n", "bgrs", "=", "self", ".", "_static_affine", "(", "bgrs", ",", "scale_ranges", "=", "(", "1", ",", "1.5", ")", ")", "\n", "\n", "# To tensor", "\n", "", "fgrs", "=", "torch", ".", "stack", "(", "[", "F", ".", "to_tensor", "(", "fgr", ")", "for", "fgr", "in", "fgrs", "]", ")", "\n", "phas", "=", "torch", ".", "stack", "(", "[", "F", ".", "to_tensor", "(", "pha", ")", "for", "pha", "in", "phas", "]", ")", "\n", "bgrs", "=", "torch", ".", "stack", "(", "[", "F", ".", "to_tensor", "(", "bgr", ")", "for", "bgr", "in", "bgrs", "]", ")", "\n", "\n", "# Resize", "\n", "params", "=", "transforms", ".", "RandomResizedCrop", ".", "get_params", "(", "fgrs", ",", "scale", "=", "(", "1", ",", "1", ")", ",", "ratio", "=", "self", ".", "aspect_ratio_range", ")", "\n", "fgrs", "=", "F", ".", "resized_crop", "(", "fgrs", ",", "*", "params", ",", "self", ".", "size", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "phas", "=", "F", ".", "resized_crop", "(", "phas", ",", "*", "params", ",", "self", ".", "size", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "params", "=", "transforms", ".", "RandomResizedCrop", ".", "get_params", "(", "bgrs", ",", "scale", "=", "(", "1", ",", "1", ")", ",", "ratio", "=", "self", ".", "aspect_ratio_range", ")", "\n", "bgrs", "=", "F", ".", "resized_crop", "(", "bgrs", ",", "*", "params", ",", "self", ".", "size", ",", "interpolation", "=", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "\n", "# Horizontal flip", "\n", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_hflip", ":", "\n", "            ", "fgrs", "=", "F", ".", "hflip", "(", "fgrs", ")", "\n", "phas", "=", "F", ".", "hflip", "(", "phas", ")", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_hflip", ":", "\n", "            ", "bgrs", "=", "F", ".", "hflip", "(", "bgrs", ")", "\n", "\n", "# Noise", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_noise", ":", "\n", "            ", "fgrs", ",", "bgrs", "=", "self", ".", "_motion_noise", "(", "fgrs", ",", "bgrs", ")", "\n", "\n", "# Color jitter", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_color_jitter", ":", "\n", "            ", "fgrs", "=", "self", ".", "_motion_color_jitter", "(", "fgrs", ")", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_color_jitter", ":", "\n", "            ", "bgrs", "=", "self", ".", "_motion_color_jitter", "(", "bgrs", ")", "\n", "\n", "# Grayscale", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_grayscale", ":", "\n", "            ", "fgrs", "=", "F", ".", "rgb_to_grayscale", "(", "fgrs", ",", "num_output_channels", "=", "3", ")", ".", "contiguous", "(", ")", "\n", "bgrs", "=", "F", ".", "rgb_to_grayscale", "(", "bgrs", ",", "num_output_channels", "=", "3", ")", ".", "contiguous", "(", ")", "\n", "\n", "# Sharpen", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_sharpness", ":", "\n", "            ", "sharpness", "=", "random", ".", "random", "(", ")", "*", "8", "\n", "fgrs", "=", "F", ".", "adjust_sharpness", "(", "fgrs", ",", "sharpness", ")", "\n", "phas", "=", "F", ".", "adjust_sharpness", "(", "phas", ",", "sharpness", ")", "\n", "bgrs", "=", "F", ".", "adjust_sharpness", "(", "bgrs", ",", "sharpness", ")", "\n", "\n", "# Blur", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_blur", "/", "3", ":", "\n", "            ", "fgrs", ",", "phas", "=", "self", ".", "_motion_blur", "(", "fgrs", ",", "phas", ")", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_blur", "/", "3", ":", "\n", "            ", "bgrs", "=", "self", ".", "_motion_blur", "(", "bgrs", ")", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_blur", "/", "3", ":", "\n", "            ", "fgrs", ",", "phas", ",", "bgrs", "=", "self", ".", "_motion_blur", "(", "fgrs", ",", "phas", ",", "bgrs", ")", "\n", "\n", "# Pause", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob_pause", ":", "\n", "            ", "fgrs", ",", "phas", ",", "bgrs", "=", "self", ".", "_motion_pause", "(", "fgrs", ",", "phas", ",", "bgrs", ")", "\n", "\n", "", "return", "fgrs", ",", "phas", ",", "bgrs", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._static_affine": [[106, 112], ["torchvision.transforms.RandomAffine.get_params", "torchvision.transforms.functional.affine", "len"], "methods", ["None"], ["", "def", "_static_affine", "(", "self", ",", "*", "imgs", ",", "scale_ranges", ")", ":", "\n", "        ", "params", "=", "transforms", ".", "RandomAffine", ".", "get_params", "(", "\n", "degrees", "=", "(", "-", "10", ",", "10", ")", ",", "translate", "=", "(", "0.1", ",", "0.1", ")", ",", "scale_ranges", "=", "scale_ranges", ",", "\n", "shears", "=", "(", "-", "5", ",", "5", ")", ",", "img_size", "=", "imgs", "[", "0", "]", "[", "0", "]", ".", "size", ")", "\n", "imgs", "=", "[", "[", "F", ".", "affine", "(", "t", ",", "*", "params", ",", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "for", "t", "in", "img", "]", "for", "img", "in", "imgs", "]", "\n", "return", "imgs", "if", "len", "(", "imgs", ")", ">", "1", "else", "imgs", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_affine": [[113, 132], ["dict", "torchvision.transforms.RandomAffine.get_params", "torchvision.transforms.RandomAffine.get_params", "len", "augmentation.random_easing_fn", "range", "random_easing_fn.", "augmentation.lerp", "augmentation.lerp", "augmentation.lerp", "augmentation.lerp", "augmentation.lerp", "augmentation.lerp", "torchvision.transforms.functional.affine", "len"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.random_easing_fn", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp"], ["", "def", "_motion_affine", "(", "self", ",", "*", "imgs", ")", ":", "\n", "        ", "config", "=", "dict", "(", "degrees", "=", "(", "-", "10", ",", "10", ")", ",", "translate", "=", "(", "0.1", ",", "0.1", ")", ",", "\n", "scale_ranges", "=", "(", "0.9", ",", "1.1", ")", ",", "shears", "=", "(", "-", "5", ",", "5", ")", ",", "img_size", "=", "imgs", "[", "0", "]", "[", "0", "]", ".", "size", ")", "\n", "angleA", ",", "(", "transXA", ",", "transYA", ")", ",", "scaleA", ",", "(", "shearXA", ",", "shearYA", ")", "=", "transforms", ".", "RandomAffine", ".", "get_params", "(", "**", "config", ")", "\n", "angleB", ",", "(", "transXB", ",", "transYB", ")", ",", "scaleB", ",", "(", "shearXB", ",", "shearYB", ")", "=", "transforms", ".", "RandomAffine", ".", "get_params", "(", "**", "config", ")", "\n", "\n", "T", "=", "len", "(", "imgs", "[", "0", "]", ")", "\n", "easing", "=", "random_easing_fn", "(", ")", "\n", "for", "t", "in", "range", "(", "T", ")", ":", "\n", "            ", "percentage", "=", "easing", "(", "t", "/", "(", "T", "-", "1", ")", ")", "\n", "angle", "=", "lerp", "(", "angleA", ",", "angleB", ",", "percentage", ")", "\n", "transX", "=", "lerp", "(", "transXA", ",", "transXB", ",", "percentage", ")", "\n", "transY", "=", "lerp", "(", "transYA", ",", "transYB", ",", "percentage", ")", "\n", "scale", "=", "lerp", "(", "scaleA", ",", "scaleB", ",", "percentage", ")", "\n", "shearX", "=", "lerp", "(", "shearXA", ",", "shearXB", ",", "percentage", ")", "\n", "shearY", "=", "lerp", "(", "shearYA", ",", "shearYB", ",", "percentage", ")", "\n", "for", "img", "in", "imgs", ":", "\n", "                ", "img", "[", "t", "]", "=", "F", ".", "affine", "(", "img", "[", "t", "]", ",", "angle", ",", "(", "transX", ",", "transY", ")", ",", "scale", ",", "(", "shearX", ",", "shearY", ")", ",", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "", "", "return", "imgs", "if", "len", "(", "imgs", ")", ">", "1", "else", "imgs", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_noise": [[133, 144], ["random.random", "torch.randn", "torchvision.transforms.functional.resize.mul_", "img.add_().clamp_", "random.random", "torchvision.transforms.functional.resize", "len", "round", "round", "img.add_", "random.random"], "methods", ["None"], ["", "def", "_motion_noise", "(", "self", ",", "*", "imgs", ")", ":", "\n", "        ", "grain_size", "=", "random", ".", "random", "(", ")", "*", "3", "+", "1", "# range 1 ~ 4", "\n", "monochrome", "=", "random", ".", "random", "(", ")", "<", "0.5", "\n", "for", "img", "in", "imgs", ":", "\n", "            ", "T", ",", "C", ",", "H", ",", "W", "=", "img", ".", "shape", "\n", "noise", "=", "torch", ".", "randn", "(", "(", "T", ",", "1", "if", "monochrome", "else", "C", ",", "round", "(", "H", "/", "grain_size", ")", ",", "round", "(", "W", "/", "grain_size", ")", ")", ")", "\n", "noise", ".", "mul_", "(", "random", ".", "random", "(", ")", "*", "0.2", "/", "grain_size", ")", "\n", "if", "grain_size", "!=", "1", ":", "\n", "                ", "noise", "=", "F", ".", "resize", "(", "noise", ",", "(", "H", ",", "W", ")", ")", "\n", "", "img", ".", "add_", "(", "noise", ")", ".", "clamp_", "(", "0", ",", "1", ")", "\n", "", "return", "imgs", "if", "len", "(", "imgs", ")", ">", "1", "else", "imgs", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_color_jitter": [[145, 159], ["torch.randn().mul().tolist", "augmentation.random_easing_fn", "len", "range", "random.random", "torch.randn().mul", "random_easing_fn.", "torchvision.transforms.functional.adjust_brightness", "torchvision.transforms.functional.adjust_contrast", "torchvision.transforms.functional.adjust_saturation", "torchvision.transforms.functional.adjust_hue", "len", "max", "max", "max", "min", "torch.randn", "max", "augmentation.lerp", "augmentation.lerp", "augmentation.lerp", "augmentation.lerp"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.random_easing_fn", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp"], ["", "def", "_motion_color_jitter", "(", "self", ",", "*", "imgs", ")", ":", "\n", "        ", "brightnessA", ",", "brightnessB", ",", "contrastA", ",", "contrastB", ",", "saturationA", ",", "saturationB", ",", "hueA", ",", "hueB", "=", "torch", ".", "randn", "(", "8", ")", ".", "mul", "(", "0.1", ")", ".", "tolist", "(", ")", "\n", "strength", "=", "random", ".", "random", "(", ")", "*", "0.2", "\n", "easing", "=", "random_easing_fn", "(", ")", "\n", "T", "=", "len", "(", "imgs", "[", "0", "]", ")", "\n", "for", "t", "in", "range", "(", "T", ")", ":", "\n", "            ", "percentage", "=", "easing", "(", "t", "/", "(", "T", "-", "1", ")", ")", "*", "strength", "\n", "for", "img", "in", "imgs", ":", "\n", "                ", "img", "[", "t", "]", "=", "F", ".", "adjust_brightness", "(", "img", "[", "t", "]", ",", "max", "(", "1", "+", "lerp", "(", "brightnessA", ",", "brightnessB", ",", "percentage", ")", ",", "0.1", ")", ")", "\n", "img", "[", "t", "]", "=", "F", ".", "adjust_contrast", "(", "img", "[", "t", "]", ",", "max", "(", "1", "+", "lerp", "(", "contrastA", ",", "contrastB", ",", "percentage", ")", ",", "0.1", ")", ")", "\n", "img", "[", "t", "]", "=", "F", ".", "adjust_saturation", "(", "img", "[", "t", "]", ",", "max", "(", "1", "+", "lerp", "(", "brightnessA", ",", "brightnessB", ",", "percentage", ")", ",", "0.1", ")", ")", "\n", "img", "[", "t", "]", "=", "F", ".", "adjust_hue", "(", "img", "[", "t", "]", ",", "min", "(", "0.5", ",", "max", "(", "-", "0.5", ",", "lerp", "(", "hueA", ",", "hueB", ",", "percentage", ")", "*", "0.1", ")", ")", ")", "\n", "", "", "return", "imgs", "if", "len", "(", "imgs", ")", ">", "1", "else", "imgs", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_blur": [[160, 177], ["len", "augmentation.random_easing_fn", "range", "random.random", "random.random", "random_easing_fn.", "max", "augmentation.lerp", "int", "len", "torchvision.transforms.functional.gaussian_blur"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.random_easing_fn", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp"], ["", "def", "_motion_blur", "(", "self", ",", "*", "imgs", ")", ":", "\n", "        ", "blurA", "=", "random", ".", "random", "(", ")", "*", "10", "\n", "blurB", "=", "random", ".", "random", "(", ")", "*", "10", "\n", "\n", "T", "=", "len", "(", "imgs", "[", "0", "]", ")", "\n", "easing", "=", "random_easing_fn", "(", ")", "\n", "for", "t", "in", "range", "(", "T", ")", ":", "\n", "            ", "percentage", "=", "easing", "(", "t", "/", "(", "T", "-", "1", ")", ")", "\n", "blur", "=", "max", "(", "lerp", "(", "blurA", ",", "blurB", ",", "percentage", ")", ",", "0", ")", "\n", "if", "blur", "!=", "0", ":", "\n", "                ", "kernel_size", "=", "int", "(", "blur", "*", "2", ")", "\n", "if", "kernel_size", "%", "2", "==", "0", ":", "\n", "                    ", "kernel_size", "+=", "1", "# Make kernel_size odd", "\n", "", "for", "img", "in", "imgs", ":", "\n", "                    ", "img", "[", "t", "]", "=", "F", ".", "gaussian_blur", "(", "img", "[", "t", "]", ",", "kernel_size", ",", "sigma", "=", "blur", ")", "\n", "\n", "", "", "", "return", "imgs", "if", "len", "(", "imgs", ")", ">", "1", "else", "imgs", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.MotionAugmentation._motion_pause": [[178, 185], ["len", "random.choice", "random.choice", "range", "range", "len"], "methods", ["None"], ["", "def", "_motion_pause", "(", "self", ",", "*", "imgs", ")", ":", "\n", "        ", "T", "=", "len", "(", "imgs", "[", "0", "]", ")", "\n", "pause_frame", "=", "random", ".", "choice", "(", "range", "(", "T", "-", "1", ")", ")", "\n", "pause_length", "=", "random", ".", "choice", "(", "range", "(", "T", "-", "pause_frame", ")", ")", "\n", "for", "img", "in", "imgs", ":", "\n", "            ", "img", "[", "pause_frame", "+", "1", ":", "pause_frame", "+", "pause_length", "]", "=", "img", "[", "pause_frame", "]", "\n", "", "return", "imgs", "if", "len", "(", "imgs", ")", ">", "1", "else", "imgs", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.Step.__call__": [[230, 232], ["None"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "value", ")", ":", "\n", "        ", "return", "0", "if", "value", "<", "0.5", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.TrainFrameSampler.__init__": [[238, 240], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "speed", "=", "[", "0.5", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ")", ":", "\n", "        ", "self", ".", "speed", "=", "speed", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.TrainFrameSampler.__call__": [[241, 257], ["list", "random.choice", "random.choice", "range", "int", "range", "random.random"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "seq_length", ")", ":", "\n", "        ", "frames", "=", "list", "(", "range", "(", "seq_length", ")", ")", "\n", "\n", "# Speed up", "\n", "speed", "=", "random", ".", "choice", "(", "self", ".", "speed", ")", "\n", "frames", "=", "[", "int", "(", "f", "*", "speed", ")", "for", "f", "in", "frames", "]", "\n", "\n", "# Shift", "\n", "shift", "=", "random", ".", "choice", "(", "range", "(", "seq_length", ")", ")", "\n", "frames", "=", "[", "f", "+", "shift", "for", "f", "in", "frames", "]", "\n", "\n", "# Reverse", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "frames", "=", "frames", "[", ":", ":", "-", "1", "]", "\n", "\n", "", "return", "frames", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.ValidFrameSampler.__call__": [[259, 261], ["range"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "seq_length", ")", ":", "\n", "        ", "return", "range", "(", "seq_length", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.lerp": [[187, 189], ["None"], "function", ["None"], ["", "", "def", "lerp", "(", "a", ",", "b", ",", "percentage", ")", ":", "\n", "    ", "return", "a", "*", "(", "1", "-", "percentage", ")", "+", "b", "*", "percentage", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.dataset.augmentation.random_easing_fn": [[191, 227], ["random.random", "easing_functions.LinearInOut", "random.choice"], "function", ["None"], ["", "def", "random_easing_fn", "(", ")", ":", "\n", "    ", "if", "random", ".", "random", "(", ")", "<", "0.2", ":", "\n", "        ", "return", "ef", ".", "LinearInOut", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "random", ".", "choice", "(", "[", "\n", "ef", ".", "BackEaseIn", ",", "\n", "ef", ".", "BackEaseOut", ",", "\n", "ef", ".", "BackEaseInOut", ",", "\n", "ef", ".", "BounceEaseIn", ",", "\n", "ef", ".", "BounceEaseOut", ",", "\n", "ef", ".", "BounceEaseInOut", ",", "\n", "ef", ".", "CircularEaseIn", ",", "\n", "ef", ".", "CircularEaseOut", ",", "\n", "ef", ".", "CircularEaseInOut", ",", "\n", "ef", ".", "CubicEaseIn", ",", "\n", "ef", ".", "CubicEaseOut", ",", "\n", "ef", ".", "CubicEaseInOut", ",", "\n", "ef", ".", "ExponentialEaseIn", ",", "\n", "ef", ".", "ExponentialEaseOut", ",", "\n", "ef", ".", "ExponentialEaseInOut", ",", "\n", "ef", ".", "ElasticEaseIn", ",", "\n", "ef", ".", "ElasticEaseOut", ",", "\n", "ef", ".", "ElasticEaseInOut", ",", "\n", "ef", ".", "QuadEaseIn", ",", "\n", "ef", ".", "QuadEaseOut", ",", "\n", "ef", ".", "QuadEaseInOut", ",", "\n", "ef", ".", "QuarticEaseIn", ",", "\n", "ef", ".", "QuarticEaseOut", ",", "\n", "ef", ".", "QuarticEaseInOut", ",", "\n", "ef", ".", "QuinticEaseIn", ",", "\n", "ef", ".", "QuinticEaseOut", ",", "\n", "ef", ".", "QuinticEaseInOut", ",", "\n", "ef", ".", "SineEaseIn", ",", "\n", "ef", ".", "SineEaseOut", ",", "\n", "ef", ".", "SineEaseInOut", ",", "\n", "Step", ",", "\n", "]", ")", "(", ")", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.fast_guided_filter.FastGuidedFilterRefiner.__init__": [[10, 13], ["torch.nn.Module.__init__", "fast_guided_filter.FastGuidedFilter"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "guilded_filter", "=", "FastGuidedFilter", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.fast_guided_filter.FastGuidedFilterRefiner.forward_single_frame": [[14, 24], ["fine_src.mean", "base_src.mean", "fast_guided_filter.FastGuidedFilterRefiner.guilded_filter().split", "fast_guided_filter.FastGuidedFilterRefiner.guilded_filter", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward_single_frame", "(", "self", ",", "fine_src", ",", "base_src", ",", "base_fgr", ",", "base_pha", ")", ":", "\n", "        ", "fine_src_gray", "=", "fine_src", ".", "mean", "(", "1", ",", "keepdim", "=", "True", ")", "\n", "base_src_gray", "=", "base_src", ".", "mean", "(", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "fgr", ",", "pha", "=", "self", ".", "guilded_filter", "(", "\n", "torch", ".", "cat", "(", "[", "base_src", ",", "base_src_gray", "]", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "cat", "(", "[", "base_fgr", ",", "base_pha", "]", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "cat", "(", "[", "fine_src", ",", "fine_src_gray", "]", ",", "dim", "=", "1", ")", ")", ".", "split", "(", "[", "3", ",", "1", "]", ",", "dim", "=", "1", ")", "\n", "\n", "return", "fgr", ",", "pha", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.fast_guided_filter.FastGuidedFilterRefiner.forward_time_series": [[25, 35], ["fast_guided_filter.FastGuidedFilterRefiner.forward_single_frame", "fgr.unflatten.unflatten.unflatten", "pha.unflatten.unflatten.unflatten", "fine_src.flatten", "base_src.flatten", "base_fgr.flatten", "base_pha.flatten"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward_time_series", "(", "self", ",", "fine_src", ",", "base_src", ",", "base_fgr", ",", "base_pha", ")", ":", "\n", "        ", "B", ",", "T", "=", "fine_src", ".", "shape", "[", ":", "2", "]", "\n", "fgr", ",", "pha", "=", "self", ".", "forward_single_frame", "(", "\n", "fine_src", ".", "flatten", "(", "0", ",", "1", ")", ",", "\n", "base_src", ".", "flatten", "(", "0", ",", "1", ")", ",", "\n", "base_fgr", ".", "flatten", "(", "0", ",", "1", ")", ",", "\n", "base_pha", ".", "flatten", "(", "0", ",", "1", ")", ")", "\n", "fgr", "=", "fgr", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "pha", "=", "pha", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "return", "fgr", ",", "pha", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.fast_guided_filter.FastGuidedFilterRefiner.forward": [[36, 41], ["fast_guided_filter.FastGuidedFilterRefiner.forward_time_series", "fast_guided_filter.FastGuidedFilterRefiner.forward_single_frame"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward", "(", "self", ",", "fine_src", ",", "base_src", ",", "base_fgr", ",", "base_pha", ",", "base_hid", ")", ":", "\n", "        ", "if", "fine_src", ".", "ndim", "==", "5", ":", "\n", "            ", "return", "self", ".", "forward_time_series", "(", "fine_src", ",", "base_src", ",", "base_fgr", ",", "base_pha", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_single_frame", "(", "fine_src", ",", "base_src", ",", "base_fgr", ",", "base_pha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.fast_guided_filter.FastGuidedFilter.__init__": [[44, 49], ["torch.nn.Module.__init__", "fast_guided_filter.BoxFilter"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "r", ":", "int", ",", "eps", ":", "float", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "r", "=", "r", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "boxfilter", "=", "BoxFilter", "(", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.fast_guided_filter.FastGuidedFilter.forward": [[50, 60], ["fast_guided_filter.FastGuidedFilter.boxfilter", "fast_guided_filter.FastGuidedFilter.boxfilter", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "fast_guided_filter.FastGuidedFilter.boxfilter", "fast_guided_filter.FastGuidedFilter.boxfilter"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "lr_x", ",", "lr_y", ",", "hr_x", ")", ":", "\n", "        ", "mean_x", "=", "self", ".", "boxfilter", "(", "lr_x", ")", "\n", "mean_y", "=", "self", ".", "boxfilter", "(", "lr_y", ")", "\n", "cov_xy", "=", "self", ".", "boxfilter", "(", "lr_x", "*", "lr_y", ")", "-", "mean_x", "*", "mean_y", "\n", "var_x", "=", "self", ".", "boxfilter", "(", "lr_x", "*", "lr_x", ")", "-", "mean_x", "*", "mean_x", "\n", "A", "=", "cov_xy", "/", "(", "var_x", "+", "self", ".", "eps", ")", "\n", "b", "=", "mean_y", "-", "A", "*", "mean_x", "\n", "A", "=", "F", ".", "interpolate", "(", "A", ",", "hr_x", ".", "shape", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "b", "=", "F", ".", "interpolate", "(", "b", ",", "hr_x", ".", "shape", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "return", "A", "*", "hr_x", "+", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.fast_guided_filter.BoxFilter.__init__": [[63, 66], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "r", ")", ":", "\n", "        ", "super", "(", "BoxFilter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "r", "=", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.fast_guided_filter.BoxFilter.forward": [[67, 77], ["torch.full", "torch.full", "torch.nn.functional.conv2d", "torch.nn.functional.conv2d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# Note: The original implementation at <https://github.com/wuhuikai/DeepGuidedFilter/>", "\n", "#       uses faster box blur. However, it may not be friendly for ONNX export.", "\n", "#       We are switching to use simple convolution for box blur.", "\n", "        ", "kernel_size", "=", "2", "*", "self", ".", "r", "+", "1", "\n", "kernel_x", "=", "torch", ".", "full", "(", "(", "x", ".", "data", ".", "shape", "[", "1", "]", ",", "1", ",", "1", ",", "kernel_size", ")", ",", "1", "/", "kernel_size", ",", "device", "=", "x", ".", "device", ",", "dtype", "=", "x", ".", "dtype", ")", "\n", "kernel_y", "=", "torch", ".", "full", "(", "(", "x", ".", "data", ".", "shape", "[", "1", "]", ",", "1", ",", "kernel_size", ",", "1", ")", ",", "1", "/", "kernel_size", ",", "device", "=", "x", ".", "device", ",", "dtype", "=", "x", ".", "dtype", ")", "\n", "x", "=", "F", ".", "conv2d", "(", "x", ",", "kernel_x", ",", "padding", "=", "(", "0", ",", "self", ".", "r", ")", ",", "groups", "=", "x", ".", "data", ".", "shape", "[", "1", "]", ")", "\n", "x", "=", "F", ".", "conv2d", "(", "x", ",", "kernel_y", ",", "padding", "=", "(", "self", ".", "r", ",", "0", ")", ",", "groups", "=", "x", ".", "data", ".", "shape", "[", "1", "]", ")", "\n", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.mobilenetv3.MobileNetV3LargeEncoder.__init__": [[7, 35], ["torchvision.models.mobilenetv3.MobileNetV3.__init__", "mobilenetv3.MobileNetV3LargeEncoder.load_state_dict", "torch.hub.load_state_dict_from_url", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig", "torchvision.models.mobilenetv3.InvertedResidualConfig"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "inverted_residual_setting", "=", "[", "\n", "InvertedResidualConfig", "(", "16", ",", "3", ",", "16", ",", "16", ",", "False", ",", "\"RE\"", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "InvertedResidualConfig", "(", "16", ",", "3", ",", "64", ",", "24", ",", "False", ",", "\"RE\"", ",", "2", ",", "1", ",", "1", ")", ",", "# C1", "\n", "InvertedResidualConfig", "(", "24", ",", "3", ",", "72", ",", "24", ",", "False", ",", "\"RE\"", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "InvertedResidualConfig", "(", "24", ",", "5", ",", "72", ",", "40", ",", "True", ",", "\"RE\"", ",", "2", ",", "1", ",", "1", ")", ",", "# C2", "\n", "InvertedResidualConfig", "(", "40", ",", "5", ",", "120", ",", "40", ",", "True", ",", "\"RE\"", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "InvertedResidualConfig", "(", "40", ",", "5", ",", "120", ",", "40", ",", "True", ",", "\"RE\"", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "InvertedResidualConfig", "(", "40", ",", "3", ",", "240", ",", "80", ",", "False", ",", "\"HS\"", ",", "2", ",", "1", ",", "1", ")", ",", "# C3", "\n", "InvertedResidualConfig", "(", "80", ",", "3", ",", "200", ",", "80", ",", "False", ",", "\"HS\"", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "InvertedResidualConfig", "(", "80", ",", "3", ",", "184", ",", "80", ",", "False", ",", "\"HS\"", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "InvertedResidualConfig", "(", "80", ",", "3", ",", "184", ",", "80", ",", "False", ",", "\"HS\"", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "InvertedResidualConfig", "(", "80", ",", "3", ",", "480", ",", "112", ",", "True", ",", "\"HS\"", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "InvertedResidualConfig", "(", "112", ",", "3", ",", "672", ",", "112", ",", "True", ",", "\"HS\"", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "InvertedResidualConfig", "(", "112", ",", "5", ",", "672", ",", "160", ",", "True", ",", "\"HS\"", ",", "2", ",", "2", ",", "1", ")", ",", "# C4", "\n", "InvertedResidualConfig", "(", "160", ",", "5", ",", "960", ",", "160", ",", "True", ",", "\"HS\"", ",", "1", ",", "2", ",", "1", ")", ",", "\n", "InvertedResidualConfig", "(", "160", ",", "5", ",", "960", ",", "160", ",", "True", ",", "\"HS\"", ",", "1", ",", "2", ",", "1", ")", ",", "\n", "]", ",", "\n", "last_channel", "=", "1280", "\n", ")", "\n", "\n", "if", "pretrained", ":", "\n", "            ", "self", ".", "load_state_dict", "(", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "'https://download.pytorch.org/models/mobilenet_v3_large-8738ca79.pth'", ")", ")", "\n", "\n", "", "del", "self", ".", "avgpool", "\n", "del", "self", ".", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.mobilenetv3.MobileNetV3LargeEncoder.forward_single_frame": [[36, 61], ["torchvision.transforms.functional.normalize"], "methods", ["None"], ["", "def", "forward_single_frame", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "normalize", "(", "x", ",", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "x", "=", "self", ".", "features", "[", "0", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "1", "]", "(", "x", ")", "\n", "f1", "=", "x", "\n", "x", "=", "self", ".", "features", "[", "2", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "3", "]", "(", "x", ")", "\n", "f2", "=", "x", "\n", "x", "=", "self", ".", "features", "[", "4", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "5", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "6", "]", "(", "x", ")", "\n", "f3", "=", "x", "\n", "x", "=", "self", ".", "features", "[", "7", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "8", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "9", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "10", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "11", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "12", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "13", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "14", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "15", "]", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "[", "16", "]", "(", "x", ")", "\n", "f4", "=", "x", "\n", "return", "[", "f1", ",", "f2", ",", "f3", ",", "f4", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.mobilenetv3.MobileNetV3LargeEncoder.forward_time_series": [[62, 67], ["mobilenetv3.MobileNetV3LargeEncoder.forward_single_frame", "x.flatten", "f.unflatten"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward_time_series", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "T", "=", "x", ".", "shape", "[", ":", "2", "]", "\n", "features", "=", "self", ".", "forward_single_frame", "(", "x", ".", "flatten", "(", "0", ",", "1", ")", ")", "\n", "features", "=", "[", "f", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "for", "f", "in", "features", "]", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.mobilenetv3.MobileNetV3LargeEncoder.forward": [[68, 73], ["mobilenetv3.MobileNetV3LargeEncoder.forward_time_series", "mobilenetv3.MobileNetV3LargeEncoder.forward_single_frame"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "x", ".", "ndim", "==", "5", ":", "\n", "            ", "return", "self", ".", "forward_time_series", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_single_frame", "(", "x", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.deep_guided_filter.DeepGuidedFilterRefiner.__init__": [[10, 22], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hid_channels", "=", "16", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "box_filter", "=", "nn", ".", "Conv2d", "(", "4", ",", "4", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "groups", "=", "4", ")", "\n", "self", ".", "box_filter", ".", "weight", ".", "data", "[", "...", "]", "=", "1", "/", "9", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", "*", "2", "+", "hid_channels", ",", "hid_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hid_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "hid_channels", ",", "hid_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hid_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "hid_channels", ",", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.deep_guided_filter.DeepGuidedFilterRefiner.forward_single_frame": [[24, 44], ["torch.cat", "torch.cat", "torch.cat", "deep_guided_filter.DeepGuidedFilterRefiner.box_filter", "deep_guided_filter.DeepGuidedFilterRefiner.box_filter", "deep_guided_filter.DeepGuidedFilterRefiner.conv", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "out.split", "deep_guided_filter.DeepGuidedFilterRefiner.box_filter", "deep_guided_filter.DeepGuidedFilterRefiner.box_filter", "torch.cat", "fine_src.mean", "base_src.mean"], "methods", ["None"], ["", "def", "forward_single_frame", "(", "self", ",", "fine_src", ",", "base_src", ",", "base_fgr", ",", "base_pha", ",", "base_hid", ")", ":", "\n", "        ", "fine_x", "=", "torch", ".", "cat", "(", "[", "fine_src", ",", "fine_src", ".", "mean", "(", "1", ",", "keepdim", "=", "True", ")", "]", ",", "dim", "=", "1", ")", "\n", "base_x", "=", "torch", ".", "cat", "(", "[", "base_src", ",", "base_src", ".", "mean", "(", "1", ",", "keepdim", "=", "True", ")", "]", ",", "dim", "=", "1", ")", "\n", "base_y", "=", "torch", ".", "cat", "(", "[", "base_fgr", ",", "base_pha", "]", ",", "dim", "=", "1", ")", "\n", "\n", "mean_x", "=", "self", ".", "box_filter", "(", "base_x", ")", "\n", "mean_y", "=", "self", ".", "box_filter", "(", "base_y", ")", "\n", "cov_xy", "=", "self", ".", "box_filter", "(", "base_x", "*", "base_y", ")", "-", "mean_x", "*", "mean_y", "\n", "var_x", "=", "self", ".", "box_filter", "(", "base_x", "*", "base_x", ")", "-", "mean_x", "*", "mean_x", "\n", "\n", "A", "=", "self", ".", "conv", "(", "torch", ".", "cat", "(", "[", "cov_xy", ",", "var_x", ",", "base_hid", "]", ",", "dim", "=", "1", ")", ")", "\n", "b", "=", "mean_y", "-", "A", "*", "mean_x", "\n", "\n", "H", ",", "W", "=", "fine_src", ".", "shape", "[", "2", ":", "]", "\n", "A", "=", "F", ".", "interpolate", "(", "A", ",", "(", "H", ",", "W", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "b", "=", "F", ".", "interpolate", "(", "b", ",", "(", "H", ",", "W", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "out", "=", "A", "*", "fine_x", "+", "b", "\n", "fgr", ",", "pha", "=", "out", ".", "split", "(", "[", "3", ",", "1", "]", ",", "dim", "=", "1", ")", "\n", "return", "fgr", ",", "pha", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.deep_guided_filter.DeepGuidedFilterRefiner.forward_time_series": [[45, 56], ["deep_guided_filter.DeepGuidedFilterRefiner.forward_single_frame", "fgr.unflatten.unflatten.unflatten", "pha.unflatten.unflatten.unflatten", "fine_src.flatten", "base_src.flatten", "base_fgr.flatten", "base_pha.flatten", "base_hid.flatten"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward_time_series", "(", "self", ",", "fine_src", ",", "base_src", ",", "base_fgr", ",", "base_pha", ",", "base_hid", ")", ":", "\n", "        ", "B", ",", "T", "=", "fine_src", ".", "shape", "[", ":", "2", "]", "\n", "fgr", ",", "pha", "=", "self", ".", "forward_single_frame", "(", "\n", "fine_src", ".", "flatten", "(", "0", ",", "1", ")", ",", "\n", "base_src", ".", "flatten", "(", "0", ",", "1", ")", ",", "\n", "base_fgr", ".", "flatten", "(", "0", ",", "1", ")", ",", "\n", "base_pha", ".", "flatten", "(", "0", ",", "1", ")", ",", "\n", "base_hid", ".", "flatten", "(", "0", ",", "1", ")", ")", "\n", "fgr", "=", "fgr", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "pha", "=", "pha", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "return", "fgr", ",", "pha", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.deep_guided_filter.DeepGuidedFilterRefiner.forward": [[57, 62], ["deep_guided_filter.DeepGuidedFilterRefiner.forward_time_series", "deep_guided_filter.DeepGuidedFilterRefiner.forward_single_frame"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward", "(", "self", ",", "fine_src", ",", "base_src", ",", "base_fgr", ",", "base_pha", ",", "base_hid", ")", ":", "\n", "        ", "if", "fine_src", ".", "ndim", "==", "5", ":", "\n", "            ", "return", "self", ".", "forward_time_series", "(", "fine_src", ",", "base_src", ",", "base_fgr", ",", "base_pha", ",", "base_hid", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_single_frame", "(", "fine_src", ",", "base_src", ",", "base_fgr", ",", "base_pha", ",", "base_hid", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.RecurrentDecoder.__init__": [[8, 16], ["torch.nn.Module.__init__", "decoder.AvgPool", "decoder.BottleneckBlock", "decoder.UpsamplingBlock", "decoder.UpsamplingBlock", "decoder.UpsamplingBlock", "decoder.OutputBlock"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "feature_channels", ",", "decoder_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avgpool", "=", "AvgPool", "(", ")", "\n", "self", ".", "decode4", "=", "BottleneckBlock", "(", "feature_channels", "[", "3", "]", ")", "\n", "self", ".", "decode3", "=", "UpsamplingBlock", "(", "feature_channels", "[", "3", "]", ",", "feature_channels", "[", "2", "]", ",", "3", ",", "decoder_channels", "[", "0", "]", ")", "\n", "self", ".", "decode2", "=", "UpsamplingBlock", "(", "decoder_channels", "[", "0", "]", ",", "feature_channels", "[", "1", "]", ",", "3", ",", "decoder_channels", "[", "1", "]", ")", "\n", "self", ".", "decode1", "=", "UpsamplingBlock", "(", "decoder_channels", "[", "1", "]", ",", "feature_channels", "[", "0", "]", ",", "3", ",", "decoder_channels", "[", "2", "]", ")", "\n", "self", ".", "decode0", "=", "OutputBlock", "(", "decoder_channels", "[", "2", "]", ",", "3", ",", "decoder_channels", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.RecurrentDecoder.forward": [[17, 28], ["decoder.RecurrentDecoder.avgpool", "decoder.RecurrentDecoder.decode4", "decoder.RecurrentDecoder.decode3", "decoder.RecurrentDecoder.decode2", "decoder.RecurrentDecoder.decode1", "decoder.RecurrentDecoder.decode0"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "\n", "s0", ":", "Tensor", ",", "f1", ":", "Tensor", ",", "f2", ":", "Tensor", ",", "f3", ":", "Tensor", ",", "f4", ":", "Tensor", ",", "\n", "r1", ":", "Optional", "[", "Tensor", "]", ",", "r2", ":", "Optional", "[", "Tensor", "]", ",", "\n", "r3", ":", "Optional", "[", "Tensor", "]", ",", "r4", ":", "Optional", "[", "Tensor", "]", ")", ":", "\n", "        ", "s1", ",", "s2", ",", "s3", "=", "self", ".", "avgpool", "(", "s0", ")", "\n", "x4", ",", "r4", "=", "self", ".", "decode4", "(", "f4", ",", "r4", ")", "\n", "x3", ",", "r3", "=", "self", ".", "decode3", "(", "x4", ",", "f3", ",", "s3", ",", "r3", ")", "\n", "x2", ",", "r2", "=", "self", ".", "decode2", "(", "x3", ",", "f2", ",", "s2", ",", "r2", ")", "\n", "x1", ",", "r1", "=", "self", ".", "decode1", "(", "x2", ",", "f1", ",", "s1", ",", "r1", ")", "\n", "x0", "=", "self", ".", "decode0", "(", "x1", ",", "s0", ")", "\n", "return", "x0", ",", "r1", ",", "r2", ",", "r3", ",", "r4", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.AvgPool.__init__": [[31, 34], ["torch.nn.Module.__init__", "torch.nn.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "2", ",", "2", ",", "count_include_pad", "=", "False", ",", "ceil_mode", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.AvgPool.forward_single_frame": [[35, 40], ["decoder.AvgPool.avgpool", "decoder.AvgPool.avgpool", "decoder.AvgPool.avgpool"], "methods", ["None"], ["", "def", "forward_single_frame", "(", "self", ",", "s0", ")", ":", "\n", "        ", "s1", "=", "self", ".", "avgpool", "(", "s0", ")", "\n", "s2", "=", "self", ".", "avgpool", "(", "s1", ")", "\n", "s3", "=", "self", ".", "avgpool", "(", "s2", ")", "\n", "return", "s1", ",", "s2", ",", "s3", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.AvgPool.forward_time_series": [[41, 49], ["s0.flatten.flatten.flatten", "decoder.AvgPool.forward_single_frame", "s1.unflatten.unflatten.unflatten", "s2.unflatten.unflatten.unflatten", "s3.unflatten.unflatten.unflatten"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward_time_series", "(", "self", ",", "s0", ")", ":", "\n", "        ", "B", ",", "T", "=", "s0", ".", "shape", "[", ":", "2", "]", "\n", "s0", "=", "s0", ".", "flatten", "(", "0", ",", "1", ")", "\n", "s1", ",", "s2", ",", "s3", "=", "self", ".", "forward_single_frame", "(", "s0", ")", "\n", "s1", "=", "s1", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "s2", "=", "s2", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "s3", "=", "s3", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "return", "s1", ",", "s2", ",", "s3", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.AvgPool.forward": [[50, 55], ["decoder.AvgPool.forward_time_series", "decoder.AvgPool.forward_single_frame"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward", "(", "self", ",", "s0", ")", ":", "\n", "        ", "if", "s0", ".", "ndim", "==", "5", ":", "\n", "            ", "return", "self", ".", "forward_time_series", "(", "s0", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_single_frame", "(", "s0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.BottleneckBlock.__init__": [[58, 62], ["torch.nn.Module.__init__", "decoder.ConvGRU"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "gru", "=", "ConvGRU", "(", "channels", "//", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.BottleneckBlock.forward": [[63, 68], ["torch.cat.split", "decoder.BottleneckBlock.gru", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "r", ":", "Optional", "[", "Tensor", "]", ")", ":", "\n", "        ", "a", ",", "b", "=", "x", ".", "split", "(", "self", ".", "channels", "//", "2", ",", "dim", "=", "-", "3", ")", "\n", "b", ",", "r", "=", "self", ".", "gru", "(", "b", ",", "r", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "a", ",", "b", "]", ",", "dim", "=", "-", "3", ")", "\n", "return", "x", ",", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.UpsamplingBlock.__init__": [[71, 81], ["torch.nn.Module.__init__", "torch.nn.Upsample", "torch.nn.Sequential", "decoder.ConvGRU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "skip_channels", ",", "src_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "+", "skip_channels", "+", "src_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n", "self", ".", "gru", "=", "ConvGRU", "(", "out_channels", "//", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.UpsamplingBlock.forward_single_frame": [[82, 91], ["decoder.UpsamplingBlock.upsample", "torch.cat", "decoder.UpsamplingBlock.conv", "torch.cat.split", "decoder.UpsamplingBlock.gru", "torch.cat", "s.size", "s.size"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.upsample"], ["", "def", "forward_single_frame", "(", "self", ",", "x", ",", "f", ",", "s", ",", "r", ":", "Optional", "[", "Tensor", "]", ")", ":", "\n", "        ", "x", "=", "self", ".", "upsample", "(", "x", ")", "\n", "x", "=", "x", "[", ":", ",", ":", ",", ":", "s", ".", "size", "(", "2", ")", ",", ":", "s", ".", "size", "(", "3", ")", "]", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "f", ",", "s", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "a", ",", "b", "=", "x", ".", "split", "(", "self", ".", "out_channels", "//", "2", ",", "dim", "=", "1", ")", "\n", "b", ",", "r", "=", "self", ".", "gru", "(", "b", ",", "r", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "a", ",", "b", "]", ",", "dim", "=", "1", ")", "\n", "return", "x", ",", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.UpsamplingBlock.forward_time_series": [[92, 106], ["torch.cat.flatten", "f.flatten.flatten.flatten", "s.flatten.flatten.flatten", "decoder.UpsamplingBlock.upsample", "torch.cat", "decoder.UpsamplingBlock.conv", "torch.cat.unflatten", "torch.cat.split", "decoder.UpsamplingBlock.gru", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.upsample"], ["", "def", "forward_time_series", "(", "self", ",", "x", ",", "f", ",", "s", ",", "r", ":", "Optional", "[", "Tensor", "]", ")", ":", "\n", "        ", "B", ",", "T", ",", "_", ",", "H", ",", "W", "=", "s", ".", "shape", "\n", "x", "=", "x", ".", "flatten", "(", "0", ",", "1", ")", "\n", "f", "=", "f", ".", "flatten", "(", "0", ",", "1", ")", "\n", "s", "=", "s", ".", "flatten", "(", "0", ",", "1", ")", "\n", "x", "=", "self", ".", "upsample", "(", "x", ")", "\n", "x", "=", "x", "[", ":", ",", ":", ",", ":", "H", ",", ":", "W", "]", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "f", ",", "s", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "x", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "a", ",", "b", "=", "x", ".", "split", "(", "self", ".", "out_channels", "//", "2", ",", "dim", "=", "2", ")", "\n", "b", ",", "r", "=", "self", ".", "gru", "(", "b", ",", "r", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "a", ",", "b", "]", ",", "dim", "=", "2", ")", "\n", "return", "x", ",", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.UpsamplingBlock.forward": [[107, 112], ["decoder.UpsamplingBlock.forward_time_series", "decoder.UpsamplingBlock.forward_single_frame"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward", "(", "self", ",", "x", ",", "f", ",", "s", ",", "r", ":", "Optional", "[", "Tensor", "]", ")", ":", "\n", "        ", "if", "x", ".", "ndim", "==", "5", ":", "\n", "            ", "return", "self", ".", "forward_time_series", "(", "x", ",", "f", ",", "s", ",", "r", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_single_frame", "(", "x", ",", "f", ",", "s", ",", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.OutputBlock.__init__": [[115, 125], ["torch.nn.Module.__init__", "torch.nn.Upsample", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "src_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "+", "src_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_channels", ",", "out_channels", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.OutputBlock.forward_single_frame": [[127, 133], ["decoder.OutputBlock.upsample", "torch.cat", "decoder.OutputBlock.conv", "s.size", "s.size"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.upsample"], ["", "def", "forward_single_frame", "(", "self", ",", "x", ",", "s", ")", ":", "\n", "        ", "x", "=", "self", ".", "upsample", "(", "x", ")", "\n", "x", "=", "x", "[", ":", ",", ":", ",", ":", "s", ".", "size", "(", "2", ")", ",", ":", "s", ".", "size", "(", "3", ")", "]", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "s", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.OutputBlock.forward_time_series": [[134, 144], ["x.unflatten.unflatten.flatten", "s.flatten.flatten.flatten", "decoder.OutputBlock.upsample", "torch.cat", "decoder.OutputBlock.conv", "x.unflatten.unflatten.unflatten"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train_loss.upsample"], ["", "def", "forward_time_series", "(", "self", ",", "x", ",", "s", ")", ":", "\n", "        ", "B", ",", "T", ",", "_", ",", "H", ",", "W", "=", "s", ".", "shape", "\n", "x", "=", "x", ".", "flatten", "(", "0", ",", "1", ")", "\n", "s", "=", "s", ".", "flatten", "(", "0", ",", "1", ")", "\n", "x", "=", "self", ".", "upsample", "(", "x", ")", "\n", "x", "=", "x", "[", ":", ",", ":", ",", ":", "H", ",", ":", "W", "]", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "s", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "x", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.OutputBlock.forward": [[145, 150], ["decoder.OutputBlock.forward_time_series", "decoder.OutputBlock.forward_single_frame"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward", "(", "self", ",", "x", ",", "s", ")", ":", "\n", "        ", "if", "x", ".", "ndim", "==", "5", ":", "\n", "            ", "return", "self", ".", "forward_time_series", "(", "x", ",", "s", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_single_frame", "(", "x", ",", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.ConvGRU.__init__": [[153, 166], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Sigmoid", "torch.nn.Conv2d", "torch.nn.Tanh"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "channels", ":", "int", ",", "\n", "kernel_size", ":", "int", "=", "3", ",", "\n", "padding", ":", "int", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "ih", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", "*", "2", ",", "channels", "*", "2", ",", "kernel_size", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "hh", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", "*", "2", ",", "channels", ",", "kernel_size", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.ConvGRU.forward_single_frame": [[168, 173], ["decoder.ConvGRU.ih().split", "decoder.ConvGRU.hh", "torch.cat", "decoder.ConvGRU.ih", "torch.cat"], "methods", ["None"], ["", "def", "forward_single_frame", "(", "self", ",", "x", ",", "h", ")", ":", "\n", "        ", "r", ",", "z", "=", "self", ".", "ih", "(", "torch", ".", "cat", "(", "[", "x", ",", "h", "]", ",", "dim", "=", "1", ")", ")", ".", "split", "(", "self", ".", "channels", ",", "dim", "=", "1", ")", "\n", "c", "=", "self", ".", "hh", "(", "torch", ".", "cat", "(", "[", "x", ",", "r", "*", "h", "]", ",", "dim", "=", "1", ")", ")", "\n", "h", "=", "(", "1", "-", "z", ")", "*", "h", "+", "z", "*", "c", "\n", "return", "h", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.ConvGRU.forward_time_series": [[174, 181], ["x.unbind", "torch.stack", "decoder.ConvGRU.forward_single_frame", "torch.stack.append"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward_time_series", "(", "self", ",", "x", ",", "h", ")", ":", "\n", "        ", "o", "=", "[", "]", "\n", "for", "xt", "in", "x", ".", "unbind", "(", "dim", "=", "1", ")", ":", "\n", "            ", "ot", ",", "h", "=", "self", ".", "forward_single_frame", "(", "xt", ",", "h", ")", "\n", "o", ".", "append", "(", "ot", ")", "\n", "", "o", "=", "torch", ".", "stack", "(", "o", ",", "dim", "=", "1", ")", "\n", "return", "o", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.ConvGRU.forward": [[182, 191], ["torch.zeros", "decoder.ConvGRU.forward_time_series", "decoder.ConvGRU.forward_single_frame", "x.size", "x.size", "x.size", "x.size"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward", "(", "self", ",", "x", ",", "h", ":", "Optional", "[", "Tensor", "]", ")", ":", "\n", "        ", "if", "h", "is", "None", ":", "\n", "            ", "h", "=", "torch", ".", "zeros", "(", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "-", "3", ")", ",", "x", ".", "size", "(", "-", "2", ")", ",", "x", ".", "size", "(", "-", "1", ")", ")", ",", "\n", "device", "=", "x", ".", "device", ",", "dtype", "=", "x", ".", "dtype", ")", "\n", "\n", "", "if", "x", ".", "ndim", "==", "5", ":", "\n", "            ", "return", "self", ".", "forward_time_series", "(", "x", ",", "h", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_single_frame", "(", "x", ",", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.Projection.__init__": [[194, 197], ["torch.nn.Module.__init__", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.Projection.forward_single_frame": [[198, 200], ["decoder.Projection.conv"], "methods", ["None"], ["", "def", "forward_single_frame", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.Projection.forward_time_series": [[201, 204], ["decoder.Projection.conv().unflatten", "decoder.Projection.conv", "x.flatten"], "methods", ["None"], ["", "def", "forward_time_series", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "T", "=", "x", ".", "shape", "[", ":", "2", "]", "\n", "return", "self", ".", "conv", "(", "x", ".", "flatten", "(", "0", ",", "1", ")", ")", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.decoder.Projection.forward": [[205, 210], ["decoder.Projection.forward_time_series", "decoder.Projection.forward_single_frame"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "x", ".", "ndim", "==", "5", ":", "\n", "            ", "return", "self", ".", "forward_time_series", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_single_frame", "(", "x", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.resnet.ResNet50Encoder.__init__": [[6, 19], ["torchvision.models.resnet.ResNet.__init__", "resnet.ResNet50Encoder.load_state_dict", "torch.hub.load_state_dict_from_url"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "block", "=", "Bottleneck", ",", "\n", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "True", "]", ",", "\n", "norm_layer", "=", "None", ")", "\n", "\n", "if", "pretrained", ":", "\n", "            ", "self", ".", "load_state_dict", "(", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "'https://download.pytorch.org/models/resnet50-0676ba61.pth'", ")", ")", "\n", "\n", "", "del", "self", ".", "avgpool", "\n", "del", "self", ".", "fc", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.resnet.ResNet50Encoder.forward_single_frame": [[20, 34], ["resnet.ResNet50Encoder.conv1", "resnet.ResNet50Encoder.bn1", "resnet.ResNet50Encoder.relu", "resnet.ResNet50Encoder.maxpool", "resnet.ResNet50Encoder.layer1", "resnet.ResNet50Encoder.layer2", "resnet.ResNet50Encoder.layer3", "resnet.ResNet50Encoder.layer4"], "methods", ["None"], ["", "def", "forward_single_frame", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "f1", "=", "x", "# 1/2", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "f2", "=", "x", "# 1/4", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "f3", "=", "x", "# 1/8", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "f4", "=", "x", "# 1/16", "\n", "return", "[", "f1", ",", "f2", ",", "f3", ",", "f4", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.resnet.ResNet50Encoder.forward_time_series": [[35, 40], ["resnet.ResNet50Encoder.forward_single_frame", "x.flatten", "f.unflatten"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward_time_series", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "T", "=", "x", ".", "shape", "[", ":", "2", "]", "\n", "features", "=", "self", ".", "forward_single_frame", "(", "x", ".", "flatten", "(", "0", ",", "1", ")", ")", "\n", "features", "=", "[", "f", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "for", "f", "in", "features", "]", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.resnet.ResNet50Encoder.forward": [[41, 46], ["resnet.ResNet50Encoder.forward_time_series", "resnet.ResNet50Encoder.forward_single_frame"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "x", ".", "ndim", "==", "5", ":", "\n", "            ", "return", "self", ".", "forward_time_series", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_single_frame", "(", "x", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.model.MattingNetwork.__init__": [[15, 39], ["torch.nn.Module.__init__", "decoder.Projection", "decoder.Projection", "mobilenetv3.MobileNetV3LargeEncoder", "lraspp.LRASPP", "decoder.RecurrentDecoder", "resnet.ResNet50Encoder", "lraspp.LRASPP", "decoder.RecurrentDecoder", "deep_guided_filter.DeepGuidedFilterRefiner", "fast_guided_filter.FastGuidedFilterRefiner"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "variant", ":", "str", "=", "'mobilenetv3'", ",", "\n", "refiner", ":", "str", "=", "'deep_guided_filter'", ",", "\n", "pretrained_backbone", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "variant", "in", "[", "'mobilenetv3'", ",", "'resnet50'", "]", "\n", "assert", "refiner", "in", "[", "'fast_guided_filter'", ",", "'deep_guided_filter'", "]", "\n", "\n", "if", "variant", "==", "'mobilenetv3'", ":", "\n", "            ", "self", ".", "backbone", "=", "MobileNetV3LargeEncoder", "(", "pretrained_backbone", ")", "\n", "self", ".", "aspp", "=", "LRASPP", "(", "960", ",", "128", ")", "\n", "self", ".", "decoder", "=", "RecurrentDecoder", "(", "[", "16", ",", "24", ",", "40", ",", "128", "]", ",", "[", "80", ",", "40", ",", "32", ",", "16", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "backbone", "=", "ResNet50Encoder", "(", "pretrained_backbone", ")", "\n", "self", ".", "aspp", "=", "LRASPP", "(", "2048", ",", "256", ")", "\n", "self", ".", "decoder", "=", "RecurrentDecoder", "(", "[", "64", ",", "256", ",", "512", ",", "256", "]", ",", "[", "128", ",", "64", ",", "32", ",", "16", "]", ")", "\n", "\n", "", "self", ".", "project_mat", "=", "Projection", "(", "16", ",", "4", ")", "\n", "self", ".", "project_seg", "=", "Projection", "(", "16", ",", "1", ")", "\n", "\n", "if", "refiner", "==", "'deep_guided_filter'", ":", "\n", "            ", "self", ".", "refiner", "=", "DeepGuidedFilterRefiner", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "refiner", "=", "FastGuidedFilterRefiner", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.model.MattingNetwork.forward": [[40, 69], ["model.MattingNetwork.backbone", "model.MattingNetwork.aspp", "model.MattingNetwork.decoder", "model.MattingNetwork._interpolate", "model.MattingNetwork.project_mat().split", "fgr.clamp.clamp.clamp", "pha.clamp.clamp.clamp", "model.MattingNetwork.project_seg", "model.MattingNetwork.refiner", "model.MattingNetwork.project_mat"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.model.MattingNetwork._interpolate"], ["", "", "def", "forward", "(", "self", ",", "\n", "src", ":", "Tensor", ",", "\n", "r1", ":", "Optional", "[", "Tensor", "]", "=", "None", ",", "\n", "r2", ":", "Optional", "[", "Tensor", "]", "=", "None", ",", "\n", "r3", ":", "Optional", "[", "Tensor", "]", "=", "None", ",", "\n", "r4", ":", "Optional", "[", "Tensor", "]", "=", "None", ",", "\n", "downsample_ratio", ":", "float", "=", "1", ",", "\n", "segmentation_pass", ":", "bool", "=", "False", ")", ":", "\n", "\n", "        ", "if", "downsample_ratio", "!=", "1", ":", "\n", "            ", "src_sm", "=", "self", ".", "_interpolate", "(", "src", ",", "scale_factor", "=", "downsample_ratio", ")", "\n", "", "else", ":", "\n", "            ", "src_sm", "=", "src", "\n", "\n", "", "f1", ",", "f2", ",", "f3", ",", "f4", "=", "self", ".", "backbone", "(", "src_sm", ")", "\n", "f4", "=", "self", ".", "aspp", "(", "f4", ")", "\n", "hid", ",", "*", "rec", "=", "self", ".", "decoder", "(", "src_sm", ",", "f1", ",", "f2", ",", "f3", ",", "f4", ",", "r1", ",", "r2", ",", "r3", ",", "r4", ")", "\n", "\n", "if", "not", "segmentation_pass", ":", "\n", "            ", "fgr_residual", ",", "pha", "=", "self", ".", "project_mat", "(", "hid", ")", ".", "split", "(", "[", "3", ",", "1", "]", ",", "dim", "=", "-", "3", ")", "\n", "if", "downsample_ratio", "!=", "1", ":", "\n", "                ", "fgr_residual", ",", "pha", "=", "self", ".", "refiner", "(", "src", ",", "src_sm", ",", "fgr_residual", ",", "pha", ",", "hid", ")", "\n", "", "fgr", "=", "fgr_residual", "+", "src", "\n", "fgr", "=", "fgr", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "pha", "=", "pha", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "return", "[", "fgr", ",", "pha", ",", "*", "rec", "]", "\n", "", "else", ":", "\n", "            ", "seg", "=", "self", ".", "project_seg", "(", "hid", ")", "\n", "return", "[", "seg", ",", "*", "rec", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.model.MattingNetwork._interpolate": [[70, 80], ["torch.nn.functional.interpolate", "torch.nn.functional.interpolate.unflatten", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate.flatten"], "methods", ["None"], ["", "", "def", "_interpolate", "(", "self", ",", "x", ":", "Tensor", ",", "scale_factor", ":", "float", ")", ":", "\n", "        ", "if", "x", ".", "ndim", "==", "5", ":", "\n", "            ", "B", ",", "T", "=", "x", ".", "shape", "[", ":", "2", "]", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ".", "flatten", "(", "0", ",", "1", ")", ",", "scale_factor", "=", "scale_factor", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ",", "recompute_scale_factor", "=", "False", ")", "\n", "x", "=", "x", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "scale_factor", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ",", "recompute_scale_factor", "=", "False", ")", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.__init__": [[4, 15], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "aspp1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", "\n", ")", "\n", "self", ".", "aspp2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame": [[17, 19], ["lraspp.LRASPP.aspp1", "lraspp.LRASPP.aspp2"], "methods", ["None"], ["", "def", "forward_single_frame", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "aspp1", "(", "x", ")", "*", "self", ".", "aspp2", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series": [[20, 24], ["lraspp.LRASPP.forward_single_frame().unflatten", "lraspp.LRASPP.forward_single_frame", "lraspp.LRASPP.flatten"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward_time_series", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "T", "=", "x", ".", "shape", "[", ":", "2", "]", "\n", "x", "=", "self", ".", "forward_single_frame", "(", "x", ".", "flatten", "(", "0", ",", "1", ")", ")", ".", "unflatten", "(", "0", ",", "(", "B", ",", "T", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward": [[25, 30], ["lraspp.LRASPP.forward_time_series", "lraspp.LRASPP.forward_single_frame"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_time_series", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.model.lraspp.LRASPP.forward_single_frame"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "x", ".", "ndim", "==", "5", ":", "\n", "            ", "return", "self", ".", "forward_time_series", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_single_frame", "(", "x", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.Evaluator.__init__": [[48, 53], ["evaluate_hr.Evaluator.parse_args", "evaluate_hr.Evaluator.init_metrics", "evaluate_hr.Evaluator.evaluate", "evaluate_hr.Evaluator.write_excel"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.parse_args", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.init_metrics", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.evaluate", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.write_excel"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "parse_args", "(", ")", "\n", "self", ".", "init_metrics", "(", ")", "\n", "self", ".", "evaluate", "(", ")", "\n", "self", ".", "write_excel", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.Evaluator.parse_args": [[54, 62], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.parse_args"], ["", "def", "parse_args", "(", "self", ")", ":", "\n", "        ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--pred-dir'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--true-dir'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--num-workers'", ",", "type", "=", "int", ",", "default", "=", "48", ")", "\n", "parser", ".", "add_argument", "(", "'--metrics'", ",", "type", "=", "str", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "\n", "'pha_mad'", ",", "'pha_mse'", ",", "'pha_grad'", ",", "'pha_dtssd'", ",", "'fgr_mse'", "]", ")", "\n", "self", ".", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.Evaluator.init_metrics": [[63, 68], ["evaluate_hr.MetricMAD", "evaluate_hr.MetricMSE", "evaluate_hr.MetricGRAD", "evaluate_hr.MetricDTSSD"], "methods", ["None"], ["", "def", "init_metrics", "(", "self", ")", ":", "\n", "        ", "self", ".", "mad", "=", "MetricMAD", "(", ")", "\n", "self", ".", "mse", "=", "MetricMSE", "(", ")", "\n", "self", ".", "grad", "=", "MetricGRAD", "(", ")", "\n", "self", ".", "dtssd", "=", "MetricDTSSD", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.Evaluator.evaluate": [[69, 82], ["concurrent.futures.ThreadPoolExecutor", "sorted", "os.listdir", "os.path.isdir", "executor.submit.result", "os.path.join", "sorted", "os.listdir", "executor.submit", "tasks.append", "os.path.join"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "tasks", "=", "[", "]", "\n", "position", "=", "0", "\n", "\n", "with", "ThreadPoolExecutor", "(", "max_workers", "=", "self", ".", "args", ".", "num_workers", ")", "as", "executor", ":", "\n", "            ", "for", "dataset", "in", "sorted", "(", "os", ".", "listdir", "(", "self", ".", "args", ".", "pred_dir", ")", ")", ":", "\n", "                ", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "dataset", ")", ")", ":", "\n", "                    ", "for", "clip", "in", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "dataset", ")", ")", ")", ":", "\n", "                        ", "future", "=", "executor", ".", "submit", "(", "self", ".", "evaluate_worker", ",", "dataset", ",", "clip", ",", "position", ")", "\n", "tasks", ".", "append", "(", "(", "dataset", ",", "clip", ",", "future", ")", ")", "\n", "position", "+=", "1", "\n", "\n", "", "", "", "", "self", ".", "results", "=", "[", "(", "dataset", ",", "clip", ",", "future", ".", "result", "(", ")", ")", "for", "dataset", ",", "clip", ",", "future", "in", "tasks", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.Evaluator.write_excel": [[83, 108], ["xlsxwriter.Workbook", "xlsxwriter.Workbook.add_worksheet", "enumerate", "enumerate", "xlsxwriter.Workbook.close", "os.path.join", "xlsxwriter.Workbook.add_worksheet", "[].keys", "xlsxwriter.Workbook.add_worksheet.write", "xlsxwriter.Workbook.add_worksheet.write", "zip", "[].keys", "metrics.values", "metricsheet.write", "metricsheet.write", "metricsheet.write_row", "metricsheet.write", "metricsheet.write", "range", "os.path.basename", "len", "metricsheet.write", "xlsxwriter.utility.xl_col_to_name", "metricsheet.write"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.close", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write"], ["", "def", "write_excel", "(", "self", ")", ":", "\n", "        ", "workbook", "=", "xlsxwriter", ".", "Workbook", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "f'{os.path.basename(self.args.pred_dir)}.xlsx'", ")", ")", "\n", "summarysheet", "=", "workbook", ".", "add_worksheet", "(", "'summary'", ")", "\n", "metricsheets", "=", "[", "workbook", ".", "add_worksheet", "(", "metric", ")", "for", "metric", "in", "self", ".", "results", "[", "0", "]", "[", "2", "]", ".", "keys", "(", ")", "]", "\n", "\n", "for", "i", ",", "metric", "in", "enumerate", "(", "self", ".", "results", "[", "0", "]", "[", "2", "]", ".", "keys", "(", ")", ")", ":", "\n", "            ", "summarysheet", ".", "write", "(", "i", ",", "0", ",", "metric", ")", "\n", "summarysheet", ".", "write", "(", "i", ",", "1", ",", "f'={metric}!B2'", ")", "\n", "\n", "", "for", "row", ",", "(", "dataset", ",", "clip", ",", "metrics", ")", "in", "enumerate", "(", "self", ".", "results", ")", ":", "\n", "            ", "for", "metricsheet", ",", "metric", "in", "zip", "(", "metricsheets", ",", "metrics", ".", "values", "(", ")", ")", ":", "\n", "# Write the header", "\n", "                ", "if", "row", "==", "0", ":", "\n", "                    ", "metricsheet", ".", "write", "(", "1", ",", "0", ",", "'Average'", ")", "\n", "metricsheet", ".", "write", "(", "1", ",", "1", ",", "f'=AVERAGE(C2:ZZ2)'", ")", "\n", "for", "col", "in", "range", "(", "len", "(", "metric", ")", ")", ":", "\n", "                        ", "metricsheet", ".", "write", "(", "0", ",", "col", "+", "2", ",", "col", ")", "\n", "colname", "=", "xlsxwriter", ".", "utility", ".", "xl_col_to_name", "(", "col", "+", "2", ")", "\n", "metricsheet", ".", "write", "(", "1", ",", "col", "+", "2", ",", "f'=AVERAGE({colname}3:{colname}9999)'", ")", "\n", "\n", "", "", "metricsheet", ".", "write", "(", "row", "+", "2", ",", "0", ",", "dataset", ")", "\n", "metricsheet", ".", "write", "(", "row", "+", "2", ",", "1", ",", "clip", ")", "\n", "metricsheet", ".", "write_row", "(", "row", "+", "2", ",", "2", ",", "metric", ")", "\n", "\n", "", "", "workbook", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.Evaluator.evaluate_worker": [[109, 151], ["sorted", "enumerate", "os.listdir", "tqdm.tqdm.tqdm", "cv2.imread", "cv2.imread", "torch.from_numpy().cuda().float().div_", "torch.from_numpy().cuda().float().div_", "os.path.join", "os.path.join", "os.path.join", "metrics[].append", "metrics[].append", "metrics[].append", "metrics[].append", "cv2.imread", "cv2.imread", "torch.from_numpy().float().div_", "torch.from_numpy().float().div_", "metrics[].append", "torch.from_numpy().cuda().float", "torch.from_numpy().cuda().float", "evaluate_hr.Evaluator.mad", "evaluate_hr.Evaluator.mse", "evaluate_hr.Evaluator.grad", "evaluate_hr.Evaluator.conn", "metrics[].append", "metrics[].append", "os.path.join", "os.path.join", "evaluate_hr.Evaluator.mse", "evaluate_hr.Evaluator.dtssd", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "evaluate_worker", "(", "self", ",", "dataset", ",", "clip", ",", "position", ")", ":", "\n", "        ", "framenames", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "dataset", ",", "clip", ",", "'pha'", ")", ")", ")", "\n", "metrics", "=", "{", "metric_name", ":", "[", "]", "for", "metric_name", "in", "self", ".", "args", ".", "metrics", "}", "\n", "\n", "pred_pha_tm1", "=", "None", "\n", "true_pha_tm1", "=", "None", "\n", "\n", "for", "i", ",", "framename", "in", "enumerate", "(", "tqdm", "(", "framenames", ",", "desc", "=", "f'{dataset} {clip}'", ",", "position", "=", "position", ",", "dynamic_ncols", "=", "True", ")", ")", ":", "\n", "            ", "true_pha", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "true_dir", ",", "dataset", ",", "clip", ",", "'pha'", ",", "framename", ")", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "pred_pha", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "dataset", ",", "clip", ",", "'pha'", ",", "framename", ")", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "\n", "true_pha", "=", "torch", ".", "from_numpy", "(", "true_pha", ")", ".", "cuda", "(", "non_blocking", "=", "True", ")", ".", "float", "(", ")", ".", "div_", "(", "255", ")", "\n", "pred_pha", "=", "torch", ".", "from_numpy", "(", "pred_pha", ")", ".", "cuda", "(", "non_blocking", "=", "True", ")", ".", "float", "(", ")", ".", "div_", "(", "255", ")", "\n", "\n", "if", "'pha_mad'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "metrics", "[", "'pha_mad'", "]", ".", "append", "(", "self", ".", "mad", "(", "pred_pha", ",", "true_pha", ")", ")", "\n", "", "if", "'pha_mse'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "metrics", "[", "'pha_mse'", "]", ".", "append", "(", "self", ".", "mse", "(", "pred_pha", ",", "true_pha", ")", ")", "\n", "", "if", "'pha_grad'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "metrics", "[", "'pha_grad'", "]", ".", "append", "(", "self", ".", "grad", "(", "pred_pha", ",", "true_pha", ")", ")", "\n", "", "if", "'pha_conn'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "metrics", "[", "'pha_conn'", "]", ".", "append", "(", "self", ".", "conn", "(", "pred_pha", ",", "true_pha", ")", ")", "\n", "", "if", "'pha_dtssd'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "metrics", "[", "'pha_dtssd'", "]", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                    ", "metrics", "[", "'pha_dtssd'", "]", ".", "append", "(", "self", ".", "dtssd", "(", "pred_pha", ",", "pred_pha_tm1", ",", "true_pha", ",", "true_pha_tm1", ")", ")", "\n", "\n", "", "", "pred_pha_tm1", "=", "pred_pha", "\n", "true_pha_tm1", "=", "true_pha", "\n", "\n", "if", "'fgr_mse'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "true_fgr", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "true_dir", ",", "dataset", ",", "clip", ",", "'fgr'", ",", "framename", ")", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "pred_fgr", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "dataset", ",", "clip", ",", "'fgr'", ",", "framename", ")", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "\n", "true_fgr", "=", "torch", ".", "from_numpy", "(", "true_fgr", ")", ".", "float", "(", ")", ".", "div_", "(", "255", ")", "\n", "pred_fgr", "=", "torch", ".", "from_numpy", "(", "pred_fgr", ")", ".", "float", "(", ")", ".", "div_", "(", "255", ")", "\n", "\n", "true_msk", "=", "true_pha", ">", "0", "\n", "metrics", "[", "'fgr_mse'", "]", ".", "append", "(", "self", ".", "mse", "(", "pred_fgr", "[", "true_msk", "]", ",", "true_fgr", "[", "true_msk", "]", ")", ")", "\n", "\n", "", "", "return", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.MetricMAD.__call__": [[154, 156], ["None"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "pred", ",", "true", ")", ":", "\n", "        ", "return", "(", "pred", "-", "true", ")", ".", "abs_", "(", ")", ".", "mean", "(", ")", "*", "1e3", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.MetricMSE.__call__": [[159, 161], ["None"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "pred", ",", "true", ")", ":", "\n", "        ", "return", "(", "(", "pred", "-", "true", ")", "**", "2", ")", ".", "mean", "(", ")", "*", "1e3", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.MetricGRAD.__init__": [[164, 168], ["evaluate_hr.MetricGRAD.gauss_filter", "torch.from_numpy().unsqueeze().cuda", "torch.from_numpy().unsqueeze().cuda", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gauss_filter"], ["    ", "def", "__init__", "(", "self", ",", "sigma", "=", "1.4", ")", ":", "\n", "        ", "self", ".", "filter_x", ",", "self", ".", "filter_y", "=", "self", ".", "gauss_filter", "(", "sigma", ")", "\n", "self", ".", "filter_x", "=", "torch", ".", "from_numpy", "(", "self", ".", "filter_x", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "self", ".", "filter_y", "=", "torch", ".", "from_numpy", "(", "self", ".", "filter_y", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.MetricGRAD.__call__": [[169, 173], ["evaluate_hr.MetricGRAD.gauss_gradient", "evaluate_hr.MetricGRAD.gauss_gradient"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gauss_gradient", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gauss_gradient"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "true", ")", ":", "\n", "        ", "true_grad", "=", "self", ".", "gauss_gradient", "(", "true", ")", "\n", "pred_grad", "=", "self", ".", "gauss_gradient", "(", "pred", ")", "\n", "return", "(", "(", "true_grad", "-", "pred_grad", ")", "**", "2", ")", ".", "sum", "(", ")", "/", "1000", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.MetricGRAD.gauss_gradient": [[174, 178], ["kornia.filters.filter2D", "kornia.filters.filter2D"], "methods", ["None"], ["", "def", "gauss_gradient", "(", "self", ",", "img", ")", ":", "\n", "        ", "img_filtered_x", "=", "kornia", ".", "filters", ".", "filter2D", "(", "img", "[", "None", ",", "None", ",", ":", ",", ":", "]", ",", "self", ".", "filter_x", ",", "border_type", "=", "'replicate'", ")", "[", "0", ",", "0", "]", "\n", "img_filtered_y", "=", "kornia", ".", "filters", ".", "filter2D", "(", "img", "[", "None", ",", "None", ",", ":", ",", ":", "]", ",", "self", ".", "filter_y", ",", "border_type", "=", "'replicate'", ")", "[", "0", ",", "0", "]", "\n", "return", "(", "img_filtered_x", "**", "2", "+", "img_filtered_y", "**", "2", ")", ".", "sqrt", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.MetricGRAD.gauss_filter": [[179, 197], ["numpy.ceil", "numpy.int", "numpy.zeros", "range", "numpy.sqrt", "numpy.transpose", "range", "numpy.sqrt", "evaluate_hr.MetricGRAD.gaussian", "evaluate_hr.MetricGRAD.dgaussian", "numpy.log", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gaussian", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.dgaussian", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log"], ["", "@", "staticmethod", "\n", "def", "gauss_filter", "(", "sigma", ",", "epsilon", "=", "1e-2", ")", ":", "\n", "        ", "half_size", "=", "np", ".", "ceil", "(", "sigma", "*", "np", ".", "sqrt", "(", "-", "2", "*", "np", ".", "log", "(", "np", ".", "sqrt", "(", "2", "*", "np", ".", "pi", ")", "*", "sigma", "*", "epsilon", ")", ")", ")", "\n", "size", "=", "np", ".", "int", "(", "2", "*", "half_size", "+", "1", ")", "\n", "\n", "# create filter in x axis", "\n", "filter_x", "=", "np", ".", "zeros", "(", "(", "size", ",", "size", ")", ")", "\n", "for", "i", "in", "range", "(", "size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "size", ")", ":", "\n", "                ", "filter_x", "[", "i", ",", "j", "]", "=", "MetricGRAD", ".", "gaussian", "(", "i", "-", "half_size", ",", "sigma", ")", "*", "MetricGRAD", ".", "dgaussian", "(", "\n", "j", "-", "half_size", ",", "sigma", ")", "\n", "\n", "# normalize filter", "\n", "", "", "norm", "=", "np", ".", "sqrt", "(", "(", "filter_x", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "filter_x", "=", "filter_x", "/", "norm", "\n", "filter_y", "=", "np", ".", "transpose", "(", "filter_x", ")", "\n", "\n", "return", "filter_x", ",", "filter_y", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.MetricGRAD.gaussian": [[198, 201], ["numpy.exp", "numpy.sqrt"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "gaussian", "(", "x", ",", "sigma", ")", ":", "\n", "        ", "return", "np", ".", "exp", "(", "-", "x", "**", "2", "/", "(", "2", "*", "sigma", "**", "2", ")", ")", "/", "(", "sigma", "*", "np", ".", "sqrt", "(", "2", "*", "np", ".", "pi", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.MetricGRAD.dgaussian": [[202, 205], ["evaluate_hr.MetricGRAD.gaussian"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gaussian"], ["", "@", "staticmethod", "\n", "def", "dgaussian", "(", "x", ",", "sigma", ")", ":", "\n", "        ", "return", "-", "x", "*", "MetricGRAD", ".", "gaussian", "(", "x", ",", "sigma", ")", "/", "sigma", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_hr.MetricDTSSD.__call__": [[208, 213], ["dtSSD.sqrt.sqrt.sqrt", "dtSSD.sqrt.sqrt.sum", "true_t.numel"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "pred_t", ",", "pred_tm1", ",", "true_t", ",", "true_tm1", ")", ":", "\n", "        ", "dtSSD", "=", "(", "(", "pred_t", "-", "pred_tm1", ")", "-", "(", "true_t", "-", "true_tm1", ")", ")", "**", "2", "\n", "dtSSD", "=", "dtSSD", ".", "sum", "(", ")", "/", "true_t", ".", "numel", "(", ")", "\n", "dtSSD", "=", "dtSSD", ".", "sqrt", "(", ")", "\n", "return", "dtSSD", "*", "1e2", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_video.lerp": [[95, 97], ["None"], "function", ["None"], ["def", "lerp", "(", "a", ",", "b", ",", "percentage", ")", ":", "\n", "    ", "return", "a", "*", "(", "1", "-", "percentage", ")", "+", "b", "*", "percentage", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_video.motion_affine": [[98, 117], ["dict", "torchvision.transforms.RandomAffine.get_params", "torchvision.transforms.RandomAffine.get_params", "len", "random.random", "range", "generate_imagematte_with_background_video.lerp", "generate_imagematte_with_background_video.lerp", "generate_imagematte_with_background_video.lerp", "generate_imagematte_with_background_video.lerp", "generate_imagematte_with_background_video.lerp", "generate_imagematte_with_background_video.lerp", "torchvision.transforms.functional.affine"], "function", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp"], ["", "def", "motion_affine", "(", "*", "imgs", ")", ":", "\n", "    ", "config", "=", "dict", "(", "degrees", "=", "(", "-", "10", ",", "10", ")", ",", "translate", "=", "(", "0.1", ",", "0.1", ")", ",", "\n", "scale_ranges", "=", "(", "0.9", ",", "1.1", ")", ",", "shears", "=", "(", "-", "5", ",", "5", ")", ",", "img_size", "=", "imgs", "[", "0", "]", "[", "0", "]", ".", "size", ")", "\n", "angleA", ",", "(", "transXA", ",", "transYA", ")", ",", "scaleA", ",", "(", "shearXA", ",", "shearYA", ")", "=", "transforms", ".", "RandomAffine", ".", "get_params", "(", "**", "config", ")", "\n", "angleB", ",", "(", "transXB", ",", "transYB", ")", ",", "scaleB", ",", "(", "shearXB", ",", "shearYB", ")", "=", "transforms", ".", "RandomAffine", ".", "get_params", "(", "**", "config", ")", "\n", "\n", "T", "=", "len", "(", "imgs", "[", "0", "]", ")", "\n", "variation_over_time", "=", "random", ".", "random", "(", ")", "\n", "for", "t", "in", "range", "(", "T", ")", ":", "\n", "        ", "percentage", "=", "(", "t", "/", "(", "T", "-", "1", ")", ")", "*", "variation_over_time", "\n", "angle", "=", "lerp", "(", "angleA", ",", "angleB", ",", "percentage", ")", "\n", "transX", "=", "lerp", "(", "transXA", ",", "transXB", ",", "percentage", ")", "\n", "transY", "=", "lerp", "(", "transYA", ",", "transYB", ",", "percentage", ")", "\n", "scale", "=", "lerp", "(", "scaleA", ",", "scaleB", ",", "percentage", ")", "\n", "shearX", "=", "lerp", "(", "shearXA", ",", "shearXB", ",", "percentage", ")", "\n", "shearY", "=", "lerp", "(", "shearYA", ",", "shearYB", ",", "percentage", ")", "\n", "for", "img", "in", "imgs", ":", "\n", "            ", "img", "[", "t", "]", "=", "F", ".", "affine", "(", "img", "[", "t", "]", ",", "angle", ",", "(", "transX", ",", "transY", ")", ",", "scale", ",", "(", "shearX", ",", "shearY", ")", ",", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "", "", "return", "imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_video.process": [[119, 186], ["pims.PyAVVideoReader", "os.path.join", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "generate_imagematte_with_background_video.motion_affine", "range", "os.path.join", "str().zfill", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "PIL.Image.open", "PIL.Image.open", "fgr.transpose.convert", "pha.transpose.convert", "fgr.transpose.resize", "pha.transpose.resize", "torchvision.transforms.functional.pad", "torchvision.transforms.functional.pad", "fgr.transpose.save", "pha.transpose.save", "PIL.Image.fromarray().convert", "F.center_crop.resize", "torchvision.transforms.functional.center_crop", "F.center_crop.save", "PIL.Image.fromarray", "Image.fromarray.save", "os.path.join", "os.path.join", "max", "int", "int", "fgr.transpose.transpose", "pha.transpose.transpose", "os.path.join", "os.path.join", "min", "int", "int", "os.path.join", "numpy.uint8", "os.path.join", "len", "len", "str", "PIL.Image.fromarray", "numpy.asarray().astype", "len", "str().zfill", "str().zfill", "str().zfill", "str().zfill", "numpy.asarray", "numpy.asarray", "numpy.asarray", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.motion_affine", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save"], ["", "def", "process", "(", "i", ")", ":", "\n", "    ", "imagematte_filename", "=", "imagematte_filenames", "[", "i", "%", "len", "(", "imagematte_filenames", ")", "]", "\n", "background_filename", "=", "background_filenames", "[", "i", "%", "len", "(", "background_filenames", ")", "]", "\n", "\n", "bgrs", "=", "pims", ".", "PyAVVideoReader", "(", "os", ".", "path", ".", "join", "(", "args", ".", "background_dir", ",", "background_filename", ")", ")", "\n", "\n", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_dir", ",", "str", "(", "i", ")", ".", "zfill", "(", "4", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'fgr'", ")", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'pha'", ")", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'com'", ")", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'bgr'", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "imagematte_dir", ",", "'fgr'", ",", "imagematte_filename", ")", ")", "as", "fgr", ",", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "imagematte_dir", ",", "'pha'", ",", "imagematte_filename", ")", ")", "as", "pha", ":", "\n", "        ", "fgr", "=", "fgr", ".", "convert", "(", "'RGB'", ")", "\n", "pha", "=", "pha", ".", "convert", "(", "'L'", ")", "\n", "\n", "", "fgrs", "=", "[", "fgr", "]", "*", "args", ".", "num_frames", "\n", "phas", "=", "[", "pha", "]", "*", "args", ".", "num_frames", "\n", "fgrs", ",", "phas", "=", "motion_affine", "(", "fgrs", ",", "phas", ")", "\n", "\n", "for", "t", "in", "range", "(", "args", ".", "num_frames", ")", ":", "\n", "        ", "fgr", "=", "fgrs", "[", "t", "]", "\n", "pha", "=", "phas", "[", "t", "]", "\n", "\n", "w", ",", "h", "=", "fgr", ".", "size", "\n", "scale", "=", "args", ".", "resolution", "/", "max", "(", "h", ",", "w", ")", "\n", "w", ",", "h", "=", "int", "(", "w", "*", "scale", ")", ",", "int", "(", "h", "*", "scale", ")", "\n", "\n", "fgr", "=", "fgr", ".", "resize", "(", "(", "w", ",", "h", ")", ")", "\n", "pha", "=", "pha", ".", "resize", "(", "(", "w", ",", "h", ")", ")", "\n", "\n", "if", "h", "<", "args", ".", "resolution", ":", "\n", "            ", "pt", "=", "(", "args", ".", "resolution", "-", "h", ")", "//", "2", "\n", "pb", "=", "args", ".", "resolution", "-", "h", "-", "pt", "\n", "", "else", ":", "\n", "            ", "pt", "=", "0", "\n", "pb", "=", "0", "\n", "\n", "", "if", "w", "<", "args", ".", "resolution", ":", "\n", "            ", "pl", "=", "(", "args", ".", "resolution", "-", "w", ")", "//", "2", "\n", "pr", "=", "args", ".", "resolution", "-", "w", "-", "pl", "\n", "", "else", ":", "\n", "            ", "pl", "=", "0", "\n", "pr", "=", "0", "\n", "\n", "", "fgr", "=", "F", ".", "pad", "(", "fgr", ",", "[", "pl", ",", "pt", ",", "pr", ",", "pb", "]", ")", "\n", "pha", "=", "F", ".", "pad", "(", "pha", ",", "[", "pl", ",", "pt", ",", "pr", ",", "pb", "]", ")", "\n", "\n", "if", "i", "//", "len", "(", "imagematte_filenames", ")", "%", "2", "==", "1", ":", "\n", "            ", "fgr", "=", "fgr", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "pha", "=", "pha", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "", "fgr", ".", "save", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'fgr'", ",", "str", "(", "t", ")", ".", "zfill", "(", "4", ")", "+", "args", ".", "extension", ")", ")", "\n", "pha", ".", "save", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'pha'", ",", "str", "(", "t", ")", ".", "zfill", "(", "4", ")", "+", "args", ".", "extension", ")", ")", "\n", "\n", "bgr", "=", "Image", ".", "fromarray", "(", "bgrs", "[", "t", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "w", ",", "h", "=", "bgr", ".", "size", "\n", "scale", "=", "args", ".", "resolution", "/", "min", "(", "h", ",", "w", ")", "\n", "w", ",", "h", "=", "int", "(", "w", "*", "scale", ")", ",", "int", "(", "h", "*", "scale", ")", "\n", "bgr", "=", "bgr", ".", "resize", "(", "(", "w", ",", "h", ")", ")", "\n", "bgr", "=", "F", ".", "center_crop", "(", "bgr", ",", "(", "args", ".", "resolution", ",", "args", ".", "resolution", ")", ")", "\n", "bgr", ".", "save", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'bgr'", ",", "str", "(", "t", ")", ".", "zfill", "(", "4", ")", "+", "args", ".", "extension", ")", ")", "\n", "\n", "pha", "=", "np", ".", "asarray", "(", "pha", ")", ".", "astype", "(", "float", ")", "[", ":", ",", ":", ",", "None", "]", "/", "255", "\n", "com", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "np", ".", "asarray", "(", "fgr", ")", "*", "pha", "+", "np", ".", "asarray", "(", "bgr", ")", "*", "(", "1", "-", "pha", ")", ")", ")", "\n", "com", ".", "save", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'com'", ",", "str", "(", "t", ")", ".", "zfill", "(", "4", ")", "+", "args", ".", "extension", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp": [[47, 49], ["None"], "function", ["None"], ["def", "lerp", "(", "a", ",", "b", ",", "percentage", ")", ":", "\n", "    ", "return", "a", "*", "(", "1", "-", "percentage", ")", "+", "b", "*", "percentage", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.motion_affine": [[50, 69], ["dict", "torchvision.transforms.RandomAffine.get_params", "torchvision.transforms.RandomAffine.get_params", "len", "random.random", "range", "generate_imagematte_with_background_image.lerp", "generate_imagematte_with_background_image.lerp", "generate_imagematte_with_background_image.lerp", "generate_imagematte_with_background_image.lerp", "generate_imagematte_with_background_image.lerp", "generate_imagematte_with_background_image.lerp", "torchvision.transforms.functional.affine"], "function", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.lerp"], ["", "def", "motion_affine", "(", "*", "imgs", ")", ":", "\n", "    ", "config", "=", "dict", "(", "degrees", "=", "(", "-", "10", ",", "10", ")", ",", "translate", "=", "(", "0.1", ",", "0.1", ")", ",", "\n", "scale_ranges", "=", "(", "0.9", ",", "1.1", ")", ",", "shears", "=", "(", "-", "5", ",", "5", ")", ",", "img_size", "=", "imgs", "[", "0", "]", "[", "0", "]", ".", "size", ")", "\n", "angleA", ",", "(", "transXA", ",", "transYA", ")", ",", "scaleA", ",", "(", "shearXA", ",", "shearYA", ")", "=", "transforms", ".", "RandomAffine", ".", "get_params", "(", "**", "config", ")", "\n", "angleB", ",", "(", "transXB", ",", "transYB", ")", ",", "scaleB", ",", "(", "shearXB", ",", "shearYB", ")", "=", "transforms", ".", "RandomAffine", ".", "get_params", "(", "**", "config", ")", "\n", "\n", "T", "=", "len", "(", "imgs", "[", "0", "]", ")", "\n", "variation_over_time", "=", "random", ".", "random", "(", ")", "\n", "for", "t", "in", "range", "(", "T", ")", ":", "\n", "        ", "percentage", "=", "(", "t", "/", "(", "T", "-", "1", ")", ")", "*", "variation_over_time", "\n", "angle", "=", "lerp", "(", "angleA", ",", "angleB", ",", "percentage", ")", "\n", "transX", "=", "lerp", "(", "transXA", ",", "transXB", ",", "percentage", ")", "\n", "transY", "=", "lerp", "(", "transYA", ",", "transYB", ",", "percentage", ")", "\n", "scale", "=", "lerp", "(", "scaleA", ",", "scaleB", ",", "percentage", ")", "\n", "shearX", "=", "lerp", "(", "shearXA", ",", "shearXB", ",", "percentage", ")", "\n", "shearY", "=", "lerp", "(", "shearYA", ",", "shearYB", ",", "percentage", ")", "\n", "for", "img", "in", "imgs", ":", "\n", "            ", "img", "[", "t", "]", "=", "F", ".", "affine", "(", "img", "[", "t", "]", ",", "angle", ",", "(", "transX", ",", "transY", ")", ",", "scale", ",", "(", "shearX", ",", "shearY", ")", ",", "F", ".", "InterpolationMode", ".", "BILINEAR", ")", "\n", "", "", "return", "imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.process": [[72, 143], ["os.path.join", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "generate_imagematte_with_background_image.motion_affine", "tqdm.tqdm", "str().zfill", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "PIL.Image.open", "F.center_crop.convert", "F.center_crop.resize", "torchvision.transforms.functional.center_crop", "PIL.Image.open", "PIL.Image.open", "fgr.transpose.convert", "pha.transpose.convert", "range", "fgr.transpose.resize", "pha.transpose.resize", "torchvision.transforms.functional.pad", "torchvision.transforms.functional.pad", "fgr.transpose.save", "pha.transpose.save", "PIL.Image.fromarray", "Image.fromarray.save", "os.path.join", "min", "int", "int", "os.path.join", "os.path.join", "str().zfill", "max", "int", "int", "fgr.transpose.transpose", "pha.transpose.transpose", "os.path.join", "os.path.join", "F.center_crop.save", "os.symlink", "numpy.uint8", "os.path.join", "len", "len", "str", "os.path.join", "os.path.join", "numpy.asarray().astype", "str", "len", "str().zfill", "str().zfill", "str().zfill", "str().zfill", "str().zfill", "str().zfill", "numpy.asarray", "numpy.asarray", "numpy.asarray", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.generate_imagematte_with_background_image.motion_affine", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference.Converter.convert", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.save"], ["", "def", "process", "(", "i", ")", ":", "\n", "    ", "imagematte_filename", "=", "imagematte_filenames", "[", "i", "%", "len", "(", "imagematte_filenames", ")", "]", "\n", "background_filename", "=", "background_filenames", "[", "i", "%", "len", "(", "background_filenames", ")", "]", "\n", "\n", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_dir", ",", "str", "(", "i", ")", ".", "zfill", "(", "4", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'fgr'", ")", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'pha'", ")", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'com'", ")", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'bgr'", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "background_dir", ",", "background_filename", ")", ")", "as", "bgr", ":", "\n", "        ", "bgr", "=", "bgr", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "w", ",", "h", "=", "bgr", ".", "size", "\n", "scale", "=", "args", ".", "resolution", "/", "min", "(", "h", ",", "w", ")", "\n", "w", ",", "h", "=", "int", "(", "w", "*", "scale", ")", ",", "int", "(", "h", "*", "scale", ")", "\n", "bgr", "=", "bgr", ".", "resize", "(", "(", "w", ",", "h", ")", ")", "\n", "bgr", "=", "F", ".", "center_crop", "(", "bgr", ",", "(", "args", ".", "resolution", ",", "args", ".", "resolution", ")", ")", "\n", "\n", "", "with", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "imagematte_dir", ",", "'fgr'", ",", "imagematte_filename", ")", ")", "as", "fgr", ",", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "imagematte_dir", ",", "'pha'", ",", "imagematte_filename", ")", ")", "as", "pha", ":", "\n", "        ", "fgr", "=", "fgr", ".", "convert", "(", "'RGB'", ")", "\n", "pha", "=", "pha", ".", "convert", "(", "'L'", ")", "\n", "\n", "", "fgrs", "=", "[", "fgr", "]", "*", "args", ".", "num_frames", "\n", "phas", "=", "[", "pha", "]", "*", "args", ".", "num_frames", "\n", "fgrs", ",", "phas", "=", "motion_affine", "(", "fgrs", ",", "phas", ")", "\n", "\n", "for", "t", "in", "tqdm", "(", "range", "(", "args", ".", "num_frames", ")", ",", "desc", "=", "str", "(", "i", ")", ".", "zfill", "(", "4", ")", ")", ":", "\n", "        ", "fgr", "=", "fgrs", "[", "t", "]", "\n", "pha", "=", "phas", "[", "t", "]", "\n", "\n", "w", ",", "h", "=", "fgr", ".", "size", "\n", "scale", "=", "args", ".", "resolution", "/", "max", "(", "h", ",", "w", ")", "\n", "w", ",", "h", "=", "int", "(", "w", "*", "scale", ")", ",", "int", "(", "h", "*", "scale", ")", "\n", "\n", "fgr", "=", "fgr", ".", "resize", "(", "(", "w", ",", "h", ")", ")", "\n", "pha", "=", "pha", ".", "resize", "(", "(", "w", ",", "h", ")", ")", "\n", "\n", "if", "h", "<", "args", ".", "resolution", ":", "\n", "            ", "pt", "=", "(", "args", ".", "resolution", "-", "h", ")", "//", "2", "\n", "pb", "=", "args", ".", "resolution", "-", "h", "-", "pt", "\n", "", "else", ":", "\n", "            ", "pt", "=", "0", "\n", "pb", "=", "0", "\n", "\n", "", "if", "w", "<", "args", ".", "resolution", ":", "\n", "            ", "pl", "=", "(", "args", ".", "resolution", "-", "w", ")", "//", "2", "\n", "pr", "=", "args", ".", "resolution", "-", "w", "-", "pl", "\n", "", "else", ":", "\n", "            ", "pl", "=", "0", "\n", "pr", "=", "0", "\n", "\n", "", "fgr", "=", "F", ".", "pad", "(", "fgr", ",", "[", "pl", ",", "pt", ",", "pr", ",", "pb", "]", ")", "\n", "pha", "=", "F", ".", "pad", "(", "pha", ",", "[", "pl", ",", "pt", ",", "pr", ",", "pb", "]", ")", "\n", "\n", "if", "i", "//", "len", "(", "imagematte_filenames", ")", "%", "2", "==", "1", ":", "\n", "            ", "fgr", "=", "fgr", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "pha", "=", "pha", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "", "fgr", ".", "save", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'fgr'", ",", "str", "(", "t", ")", ".", "zfill", "(", "4", ")", "+", "args", ".", "extension", ")", ")", "\n", "pha", ".", "save", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'pha'", ",", "str", "(", "t", ")", ".", "zfill", "(", "4", ")", "+", "args", ".", "extension", ")", ")", "\n", "\n", "if", "t", "==", "0", ":", "\n", "            ", "bgr", ".", "save", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'bgr'", ",", "str", "(", "t", ")", ".", "zfill", "(", "4", ")", "+", "args", ".", "extension", ")", ")", "\n", "", "else", ":", "\n", "            ", "os", ".", "symlink", "(", "str", "(", "0", ")", ".", "zfill", "(", "4", ")", "+", "args", ".", "extension", ",", "os", ".", "path", ".", "join", "(", "out_path", ",", "'bgr'", ",", "str", "(", "t", ")", ".", "zfill", "(", "4", ")", "+", "args", ".", "extension", ")", ")", "\n", "\n", "", "pha", "=", "np", ".", "asarray", "(", "pha", ")", ".", "astype", "(", "float", ")", "[", ":", ",", ":", ",", "None", "]", "/", "255", "\n", "com", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "np", ".", "asarray", "(", "fgr", ")", "*", "pha", "+", "np", ".", "asarray", "(", "bgr", ")", "*", "(", "1", "-", "pha", ")", ")", ")", "\n", "com", ".", "save", "(", "os", ".", "path", ".", "join", "(", "out_path", ",", "'com'", ",", "str", "(", "t", ")", ".", "zfill", "(", "4", ")", "+", "args", ".", "extension", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.__init__": [[46, 51], ["evaluate_lr.Evaluator.parse_args", "evaluate_lr.Evaluator.init_metrics", "evaluate_lr.Evaluator.evaluate", "evaluate_lr.Evaluator.write_excel"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.parse_args", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.init_metrics", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.evaluate", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.write_excel"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "parse_args", "(", ")", "\n", "self", ".", "init_metrics", "(", ")", "\n", "self", ".", "evaluate", "(", ")", "\n", "self", ".", "write_excel", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.parse_args": [[52, 60], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.parse_args"], ["", "def", "parse_args", "(", "self", ")", ":", "\n", "        ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--pred-dir'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--true-dir'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--num-workers'", ",", "type", "=", "int", ",", "default", "=", "48", ")", "\n", "parser", ".", "add_argument", "(", "'--metrics'", ",", "type", "=", "str", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "\n", "'pha_mad'", ",", "'pha_mse'", ",", "'pha_grad'", ",", "'pha_conn'", ",", "'pha_dtssd'", ",", "'fgr_mad'", ",", "'fgr_mse'", "]", ")", "\n", "self", ".", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.init_metrics": [[61, 67], ["evaluate_lr.MetricMAD", "evaluate_lr.MetricMSE", "evaluate_lr.MetricGRAD", "evaluate_lr.MetricCONN", "evaluate_lr.MetricDTSSD"], "methods", ["None"], ["", "def", "init_metrics", "(", "self", ")", ":", "\n", "        ", "self", ".", "mad", "=", "MetricMAD", "(", ")", "\n", "self", ".", "mse", "=", "MetricMSE", "(", ")", "\n", "self", ".", "grad", "=", "MetricGRAD", "(", ")", "\n", "self", ".", "conn", "=", "MetricCONN", "(", ")", "\n", "self", ".", "dtssd", "=", "MetricDTSSD", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.evaluate": [[68, 81], ["concurrent.futures.ThreadPoolExecutor", "sorted", "os.listdir", "os.path.isdir", "executor.submit.result", "os.path.join", "sorted", "os.listdir", "executor.submit", "tasks.append", "os.path.join"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "tasks", "=", "[", "]", "\n", "position", "=", "0", "\n", "\n", "with", "ThreadPoolExecutor", "(", "max_workers", "=", "self", ".", "args", ".", "num_workers", ")", "as", "executor", ":", "\n", "            ", "for", "dataset", "in", "sorted", "(", "os", ".", "listdir", "(", "self", ".", "args", ".", "pred_dir", ")", ")", ":", "\n", "                ", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "dataset", ")", ")", ":", "\n", "                    ", "for", "clip", "in", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "dataset", ")", ")", ")", ":", "\n", "                        ", "future", "=", "executor", ".", "submit", "(", "self", ".", "evaluate_worker", ",", "dataset", ",", "clip", ",", "position", ")", "\n", "tasks", ".", "append", "(", "(", "dataset", ",", "clip", ",", "future", ")", ")", "\n", "position", "+=", "1", "\n", "\n", "", "", "", "", "self", ".", "results", "=", "[", "(", "dataset", ",", "clip", ",", "future", ".", "result", "(", ")", ")", "for", "dataset", ",", "clip", ",", "future", "in", "tasks", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.write_excel": [[82, 107], ["xlsxwriter.Workbook", "xlsxwriter.Workbook.add_worksheet", "enumerate", "enumerate", "xlsxwriter.Workbook.close", "os.path.join", "xlsxwriter.Workbook.add_worksheet", "[].keys", "xlsxwriter.Workbook.add_worksheet.write", "xlsxwriter.Workbook.add_worksheet.write", "zip", "[].keys", "metrics.values", "metricsheet.write", "metricsheet.write", "metricsheet.write_row", "metricsheet.write", "metricsheet.write", "range", "os.path.basename", "len", "metricsheet.write", "xlsxwriter.utility.xl_col_to_name", "metricsheet.write"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.close", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.inference_utils.ImageSequenceWriter.write"], ["", "def", "write_excel", "(", "self", ")", ":", "\n", "        ", "workbook", "=", "xlsxwriter", ".", "Workbook", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "f'{os.path.basename(self.args.pred_dir)}.xlsx'", ")", ")", "\n", "summarysheet", "=", "workbook", ".", "add_worksheet", "(", "'summary'", ")", "\n", "metricsheets", "=", "[", "workbook", ".", "add_worksheet", "(", "metric", ")", "for", "metric", "in", "self", ".", "results", "[", "0", "]", "[", "2", "]", ".", "keys", "(", ")", "]", "\n", "\n", "for", "i", ",", "metric", "in", "enumerate", "(", "self", ".", "results", "[", "0", "]", "[", "2", "]", ".", "keys", "(", ")", ")", ":", "\n", "            ", "summarysheet", ".", "write", "(", "i", ",", "0", ",", "metric", ")", "\n", "summarysheet", ".", "write", "(", "i", ",", "1", ",", "f'={metric}!B2'", ")", "\n", "\n", "", "for", "row", ",", "(", "dataset", ",", "clip", ",", "metrics", ")", "in", "enumerate", "(", "self", ".", "results", ")", ":", "\n", "            ", "for", "metricsheet", ",", "metric", "in", "zip", "(", "metricsheets", ",", "metrics", ".", "values", "(", ")", ")", ":", "\n", "# Write the header", "\n", "                ", "if", "row", "==", "0", ":", "\n", "                    ", "metricsheet", ".", "write", "(", "1", ",", "0", ",", "'Average'", ")", "\n", "metricsheet", ".", "write", "(", "1", ",", "1", ",", "f'=AVERAGE(C2:ZZ2)'", ")", "\n", "for", "col", "in", "range", "(", "len", "(", "metric", ")", ")", ":", "\n", "                        ", "metricsheet", ".", "write", "(", "0", ",", "col", "+", "2", ",", "col", ")", "\n", "colname", "=", "xlsxwriter", ".", "utility", ".", "xl_col_to_name", "(", "col", "+", "2", ")", "\n", "metricsheet", ".", "write", "(", "1", ",", "col", "+", "2", ",", "f'=AVERAGE({colname}3:{colname}9999)'", ")", "\n", "\n", "", "", "metricsheet", ".", "write", "(", "row", "+", "2", ",", "0", ",", "dataset", ")", "\n", "metricsheet", ".", "write", "(", "row", "+", "2", ",", "1", ",", "clip", ")", "\n", "metricsheet", ".", "write_row", "(", "row", "+", "2", ",", "2", ",", "metric", ")", "\n", "\n", "", "", "workbook", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.Evaluator.evaluate_worker": [[108, 146], ["sorted", "enumerate", "os.listdir", "tqdm.tqdm.tqdm", "os.path.join", "cv2.imread().astype", "cv2.imread().astype", "metrics[].append", "metrics[].append", "metrics[].append", "metrics[].append", "evaluate_lr.Evaluator.mad", "evaluate_lr.Evaluator.mse", "evaluate_lr.Evaluator.grad", "evaluate_lr.Evaluator.conn", "metrics[].append", "metrics[].append", "cv2.imread().astype", "cv2.imread().astype", "metrics[].append", "metrics[].append", "cv2.imread", "cv2.imread", "evaluate_lr.Evaluator.dtssd", "evaluate_lr.Evaluator.mse", "evaluate_lr.Evaluator.mad", "os.path.join", "os.path.join", "cv2.imread", "cv2.imread", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "evaluate_worker", "(", "self", ",", "dataset", ",", "clip", ",", "position", ")", ":", "\n", "        ", "framenames", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "dataset", ",", "clip", ",", "'pha'", ")", ")", ")", "\n", "metrics", "=", "{", "metric_name", ":", "[", "]", "for", "metric_name", "in", "self", ".", "args", ".", "metrics", "}", "\n", "\n", "pred_pha_tm1", "=", "None", "\n", "true_pha_tm1", "=", "None", "\n", "\n", "for", "i", ",", "framename", "in", "enumerate", "(", "tqdm", "(", "framenames", ",", "desc", "=", "f'{dataset} {clip}'", ",", "position", "=", "position", ",", "dynamic_ncols", "=", "True", ")", ")", ":", "\n", "            ", "true_pha", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "true_dir", ",", "dataset", ",", "clip", ",", "'pha'", ",", "framename", ")", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "pred_pha", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "dataset", ",", "clip", ",", "'pha'", ",", "framename", ")", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "if", "'pha_mad'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "metrics", "[", "'pha_mad'", "]", ".", "append", "(", "self", ".", "mad", "(", "pred_pha", ",", "true_pha", ")", ")", "\n", "", "if", "'pha_mse'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "metrics", "[", "'pha_mse'", "]", ".", "append", "(", "self", ".", "mse", "(", "pred_pha", ",", "true_pha", ")", ")", "\n", "", "if", "'pha_grad'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "metrics", "[", "'pha_grad'", "]", ".", "append", "(", "self", ".", "grad", "(", "pred_pha", ",", "true_pha", ")", ")", "\n", "", "if", "'pha_conn'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "metrics", "[", "'pha_conn'", "]", ".", "append", "(", "self", ".", "conn", "(", "pred_pha", ",", "true_pha", ")", ")", "\n", "", "if", "'pha_dtssd'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "metrics", "[", "'pha_dtssd'", "]", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                    ", "metrics", "[", "'pha_dtssd'", "]", ".", "append", "(", "self", ".", "dtssd", "(", "pred_pha", ",", "pred_pha_tm1", ",", "true_pha", ",", "true_pha_tm1", ")", ")", "\n", "\n", "", "", "pred_pha_tm1", "=", "pred_pha", "\n", "true_pha_tm1", "=", "true_pha", "\n", "\n", "if", "'fgr_mse'", "in", "self", ".", "args", ".", "metrics", "or", "'fgr_mad'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                ", "true_fgr", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "true_dir", ",", "dataset", ",", "clip", ",", "'fgr'", ",", "framename", ")", ",", "cv2", ".", "IMREAD_COLOR", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "pred_fgr", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "pred_dir", ",", "dataset", ",", "clip", ",", "'fgr'", ",", "framename", ")", ",", "cv2", ".", "IMREAD_COLOR", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "true_msk", "=", "true_pha", ">", "0", "\n", "\n", "if", "'fgr_mse'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                    ", "metrics", "[", "'fgr_mse'", "]", ".", "append", "(", "self", ".", "mse", "(", "pred_fgr", "[", "true_msk", "]", ",", "true_fgr", "[", "true_msk", "]", ")", ")", "\n", "", "if", "'fgr_mad'", "in", "self", ".", "args", ".", "metrics", ":", "\n", "                    ", "metrics", "[", "'fgr_mad'", "]", ".", "append", "(", "self", ".", "mad", "(", "pred_fgr", "[", "true_msk", "]", ",", "true_fgr", "[", "true_msk", "]", ")", ")", "\n", "\n", "", "", "", "return", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricMAD.__call__": [[149, 151], ["numpy.abs().mean", "numpy.abs"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "pred", ",", "true", ")", ":", "\n", "        ", "return", "np", ".", "abs", "(", "pred", "-", "true", ")", ".", "mean", "(", ")", "*", "1e3", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricMSE.__call__": [[154, 156], ["None"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "pred", ",", "true", ")", ":", "\n", "        ", "return", "(", "(", "pred", "-", "true", ")", "**", "2", ")", ".", "mean", "(", ")", "*", "1e3", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__init__": [[159, 161], ["evaluate_lr.MetricGRAD.gauss_filter"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gauss_filter"], ["    ", "def", "__init__", "(", "self", ",", "sigma", "=", "1.4", ")", ":", "\n", "        ", "self", ".", "filter_x", ",", "self", ".", "filter_y", "=", "self", ".", "gauss_filter", "(", "sigma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.__call__": [[162, 173], ["numpy.zeros_like", "numpy.zeros_like", "cv2.normalize", "cv2.normalize", "evaluate_lr.MetricGRAD.gauss_gradient().astype", "evaluate_lr.MetricGRAD.gauss_gradient().astype", "evaluate_lr.MetricGRAD.gauss_gradient", "evaluate_lr.MetricGRAD.gauss_gradient"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gauss_gradient", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gauss_gradient"], ["", "def", "__call__", "(", "self", ",", "pred", ",", "true", ")", ":", "\n", "        ", "pred_normed", "=", "np", ".", "zeros_like", "(", "pred", ")", "\n", "true_normed", "=", "np", ".", "zeros_like", "(", "true", ")", "\n", "cv2", ".", "normalize", "(", "pred", ",", "pred_normed", ",", "1.", ",", "0.", ",", "cv2", ".", "NORM_MINMAX", ")", "\n", "cv2", ".", "normalize", "(", "true", ",", "true_normed", ",", "1.", ",", "0.", ",", "cv2", ".", "NORM_MINMAX", ")", "\n", "\n", "true_grad", "=", "self", ".", "gauss_gradient", "(", "true_normed", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "pred_grad", "=", "self", ".", "gauss_gradient", "(", "pred_normed", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "grad_loss", "=", "(", "(", "true_grad", "-", "pred_grad", ")", "**", "2", ")", ".", "sum", "(", ")", "\n", "return", "grad_loss", "/", "1000", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gauss_gradient": [[174, 178], ["cv2.filter2D", "cv2.filter2D", "numpy.sqrt"], "methods", ["None"], ["", "def", "gauss_gradient", "(", "self", ",", "img", ")", ":", "\n", "        ", "img_filtered_x", "=", "cv2", ".", "filter2D", "(", "img", ",", "-", "1", ",", "self", ".", "filter_x", ",", "borderType", "=", "cv2", ".", "BORDER_REPLICATE", ")", "\n", "img_filtered_y", "=", "cv2", ".", "filter2D", "(", "img", ",", "-", "1", ",", "self", ".", "filter_y", ",", "borderType", "=", "cv2", ".", "BORDER_REPLICATE", ")", "\n", "return", "np", ".", "sqrt", "(", "img_filtered_x", "**", "2", "+", "img_filtered_y", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gauss_filter": [[179, 197], ["numpy.ceil", "numpy.int", "numpy.zeros", "range", "numpy.sqrt", "numpy.transpose", "range", "numpy.sqrt", "evaluate_lr.MetricGRAD.gaussian", "evaluate_lr.MetricGRAD.dgaussian", "numpy.log", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gaussian", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.dgaussian", "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.None.train.Trainer.log"], ["", "@", "staticmethod", "\n", "def", "gauss_filter", "(", "sigma", ",", "epsilon", "=", "1e-2", ")", ":", "\n", "        ", "half_size", "=", "np", ".", "ceil", "(", "sigma", "*", "np", ".", "sqrt", "(", "-", "2", "*", "np", ".", "log", "(", "np", ".", "sqrt", "(", "2", "*", "np", ".", "pi", ")", "*", "sigma", "*", "epsilon", ")", ")", ")", "\n", "size", "=", "np", ".", "int", "(", "2", "*", "half_size", "+", "1", ")", "\n", "\n", "# create filter in x axis", "\n", "filter_x", "=", "np", ".", "zeros", "(", "(", "size", ",", "size", ")", ")", "\n", "for", "i", "in", "range", "(", "size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "size", ")", ":", "\n", "                ", "filter_x", "[", "i", ",", "j", "]", "=", "MetricGRAD", ".", "gaussian", "(", "i", "-", "half_size", ",", "sigma", ")", "*", "MetricGRAD", ".", "dgaussian", "(", "\n", "j", "-", "half_size", ",", "sigma", ")", "\n", "\n", "# normalize filter", "\n", "", "", "norm", "=", "np", ".", "sqrt", "(", "(", "filter_x", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "filter_x", "=", "filter_x", "/", "norm", "\n", "filter_y", "=", "np", ".", "transpose", "(", "filter_x", ")", "\n", "\n", "return", "filter_x", ",", "filter_y", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gaussian": [[198, 201], ["numpy.exp", "numpy.sqrt"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "gaussian", "(", "x", ",", "sigma", ")", ":", "\n", "        ", "return", "np", ".", "exp", "(", "-", "x", "**", "2", "/", "(", "2", "*", "sigma", "**", "2", ")", ")", "/", "(", "sigma", "*", "np", ".", "sqrt", "(", "2", "*", "np", ".", "pi", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.dgaussian": [[202, 205], ["evaluate_lr.MetricGRAD.gaussian"], "methods", ["home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricGRAD.gaussian"], ["", "@", "staticmethod", "\n", "def", "dgaussian", "(", "x", ",", "sigma", ")", ":", "\n", "        ", "return", "-", "x", "*", "MetricGRAD", ".", "gaussian", "(", "x", ",", "sigma", ")", "/", "sigma", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricCONN.__call__": [[208, 242], ["numpy.arange", "range", "numpy.sum", "numpy.ones_like", "len", "cv2.connectedComponentsWithStats", "numpy.zeros_like", "numpy.abs", "len", "numpy.argmax"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "pred", ",", "true", ")", ":", "\n", "        ", "step", "=", "0.1", "\n", "thresh_steps", "=", "np", ".", "arange", "(", "0", ",", "1", "+", "step", ",", "step", ")", "\n", "round_down_map", "=", "-", "np", ".", "ones_like", "(", "true", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "thresh_steps", ")", ")", ":", "\n", "            ", "true_thresh", "=", "true", ">=", "thresh_steps", "[", "i", "]", "\n", "pred_thresh", "=", "pred", ">=", "thresh_steps", "[", "i", "]", "\n", "intersection", "=", "(", "true_thresh", "&", "pred_thresh", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "# connected components", "\n", "_", ",", "output", ",", "stats", ",", "_", "=", "cv2", ".", "connectedComponentsWithStats", "(", "\n", "intersection", ",", "connectivity", "=", "4", ")", "\n", "# start from 1 in dim 0 to exclude background", "\n", "size", "=", "stats", "[", "1", ":", ",", "-", "1", "]", "\n", "\n", "# largest connected component of the intersection", "\n", "omega", "=", "np", ".", "zeros_like", "(", "true", ")", "\n", "if", "len", "(", "size", ")", "!=", "0", ":", "\n", "                ", "max_id", "=", "np", ".", "argmax", "(", "size", ")", "\n", "# plus one to include background", "\n", "omega", "[", "output", "==", "max_id", "+", "1", "]", "=", "1", "\n", "\n", "", "mask", "=", "(", "round_down_map", "==", "-", "1", ")", "&", "(", "omega", "==", "0", ")", "\n", "round_down_map", "[", "mask", "]", "=", "thresh_steps", "[", "i", "-", "1", "]", "\n", "", "round_down_map", "[", "round_down_map", "==", "-", "1", "]", "=", "1", "\n", "\n", "true_diff", "=", "true", "-", "round_down_map", "\n", "pred_diff", "=", "pred", "-", "round_down_map", "\n", "# only calculate difference larger than or equal to 0.15", "\n", "true_phi", "=", "1", "-", "true_diff", "*", "(", "true_diff", ">=", "0.15", ")", "\n", "pred_phi", "=", "1", "-", "pred_diff", "*", "(", "pred_diff", ">=", "0.15", ")", "\n", "\n", "connectivity_error", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "true_phi", "-", "pred_phi", ")", ")", "\n", "return", "connectivity_error", "/", "1000", "\n", "\n"]], "home.repos.pwc.inspect_result.PeterL1n_RobustVideoMatting.evaluation.evaluate_lr.MetricDTSSD.__call__": [[245, 250], ["numpy.sqrt", "numpy.sum"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "pred_t", ",", "pred_tm1", ",", "true_t", ",", "true_tm1", ")", ":", "\n", "        ", "dtSSD", "=", "(", "(", "pred_t", "-", "pred_tm1", ")", "-", "(", "true_t", "-", "true_tm1", ")", ")", "**", "2", "\n", "dtSSD", "=", "np", ".", "sum", "(", "dtSSD", ")", "/", "true_t", ".", "size", "\n", "dtSSD", "=", "np", ".", "sqrt", "(", "dtSSD", ")", "\n", "return", "dtSSD", "*", "1e2", "\n", "\n"]]}