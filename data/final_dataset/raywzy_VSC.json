{"home.repos.pwc.inspect_result.raywzy_VSC.None.Train_Model.l2_loss": [[19, 21], ["len"], "function", ["None"], ["def", "l2_loss", "(", "a", ",", "b", ")", ":", "\n", "    ", "return", "(", "(", "a", "-", "b", ")", "**", "2", ")", ".", "sum", "(", ")", "/", "(", "len", "(", "a", ")", "*", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.None.Train_Model.mask_l2_loss": [[22, 24], ["Train_Model.l2_loss"], "function", ["home.repos.pwc.inspect_result.raywzy_VSC.None.Train_Model.l2_loss"], ["", "def", "mask_l2_loss", "(", "a", ",", "b", ",", "mask", ")", ":", "\n", "    ", "return", "l2_loss", "(", "a", "[", "mask", "]", ",", "b", "[", "mask", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.None.Train_Model.CDVSc": [[28, 83], ["list", "A.cpu.cpu", "B.cpu.cpu", "CD_loss.to.to", "range", "min", "min"], "function", ["None"], ["", "def", "CDVSc", "(", "a", ",", "b", ",", "device", ",", "n", ",", "m", ",", "opts", ")", ":", "\n", "\n", "\n", "    ", "mask", "=", "list", "(", "range", "(", "n", "-", "m", ")", ")", "\n", "L2_loss", "=", "(", "(", "a", "[", "mask", "]", "-", "b", "[", "mask", "]", ")", "**", "2", ")", ".", "sum", "(", ")", "/", "(", "(", "n", "-", "m", ")", "*", "2", ")", "## L2_Loss of seen classes", "\n", "\n", "#### Start Calculating CD Loss", "\n", "\n", "CD_loss", "=", "None", "\n", "\n", "A", "=", "a", "[", "n", "-", "m", ":", "]", "\n", "B", "=", "b", "[", "n", "-", "m", ":", "]", "\n", "\n", "A", "=", "A", ".", "cpu", "(", ")", "\n", "B", "=", "B", ".", "cpu", "(", ")", "\n", "\n", "for", "x", "in", "A", ":", "\n", "        ", "for", "y", "in", "B", ":", "\n", "            ", "dis", "=", "(", "(", "x", "-", "y", ")", "**", "2", ")", ".", "sum", "(", ")", "\n", "\n", "\n", "", "", "for", "x", "in", "A", ":", "\n", "        ", "MINI", "=", "None", "\n", "for", "y", "in", "B", ":", "\n", "            ", "dis", "=", "(", "(", "x", "-", "y", ")", "**", "2", ")", ".", "sum", "(", ")", "\n", "if", "MINI", "is", "None", ":", "\n", "                ", "MINI", "=", "dis", "\n", "", "else", ":", "\n", "                ", "MINI", "=", "min", "(", "MINI", ",", "dis", ")", "\n", "", "", "if", "CD_loss", "is", "None", ":", "\n", "            ", "CD_loss", "=", "MINI", "\n", "", "else", ":", "\n", "            ", "CD_loss", "+=", "MINI", "\n", "\n", "", "", "for", "x", "in", "B", ":", "\n", "        ", "MINI", "=", "None", "\n", "for", "y", "in", "A", ":", "\n", "            ", "dis", "=", "(", "(", "x", "-", "y", ")", "**", "2", ")", ".", "sum", "(", ")", "\n", "if", "MINI", "is", "None", ":", "\n", "                ", "MINI", "=", "dis", "\n", "", "else", ":", "\n", "                ", "MINI", "=", "min", "(", "MINI", ",", "dis", ")", "\n", "", "", "if", "CD_loss", "is", "None", ":", "\n", "            ", "CD_loss", "=", "MINI", "\n", "", "else", ":", "\n", "            ", "CD_loss", "+=", "MINI", "\n", "\n", "\n", "", "", "CD_loss", "=", "CD_loss", ".", "to", "(", "device", ")", "\n", "#######", "\n", "\n", "lamda", "=", "0.0003", "\n", "\n", "tot_loss", "=", "L2_loss", "+", "CD_loss", "*", "opts", ".", "lamda", "\n", "return", "tot_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.None.Train_Model.BMVSc": [[86, 116], ["list", "torch.zeros", "torch.zeros", "torch.zeros", "DIS.to.to", "enumerate", "DIS.to.cpu().detach().numpy", "scipy.optimize.linear_sum_assignment", "enumerate", "range", "enumerate", "DIS.to.cpu().detach", "DIS.to.cpu"], "function", ["None"], ["", "def", "BMVSc", "(", "a", ",", "b", ",", "device", ",", "n", ",", "m", ",", "opts", ")", ":", "\n", "\n", "    ", "mask", "=", "list", "(", "range", "(", "n", "-", "m", ")", ")", "\n", "L2_loss", "=", "(", "(", "a", "[", "mask", "]", "-", "b", "[", "mask", "]", ")", "**", "2", ")", ".", "sum", "(", ")", "/", "(", "(", "n", "-", "m", ")", "*", "2", ")", "## L2_Loss of seen classes", "\n", "\n", "\n", "A", "=", "a", "[", "n", "-", "m", ":", "]", "\n", "B", "=", "b", "[", "n", "-", "m", ":", "]", "\n", "\n", "DIS", "=", "torch", ".", "zeros", "(", "(", "m", ",", "m", ")", ")", "\n", "\n", "\n", "DIS", "=", "DIS", ".", "to", "(", "device", ")", "\n", "\n", "for", "A_id", ",", "x", "in", "enumerate", "(", "A", ")", ":", "\n", "        ", "for", "B_id", ",", "y", "in", "enumerate", "(", "B", ")", ":", "\n", "            ", "dis", "=", "(", "(", "x", "-", "y", ")", "**", "2", ")", ".", "sum", "(", ")", "\n", "DIS", "[", "A_id", ",", "B_id", "]", "=", "dis", "\n", "\n", "", "", "matching_loss", "=", "0", "\n", "\n", "cost", "=", "DIS", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "row_ind", ",", "col_ind", "=", "linear_sum_assignment", "(", "cost", ")", "\n", "\n", "for", "i", ",", "x", "in", "enumerate", "(", "row_ind", ")", ":", "\n", "        ", "matching_loss", "+=", "DIS", "[", "row_ind", "[", "i", "]", ",", "col_ind", "[", "i", "]", "]", "\n", "\n", "", "tot_loss", "=", "L2_loss", "+", "matching_loss", "*", "opts", ".", "lamda", "\n", "\n", "return", "tot_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.None.Train_Model.WDVSc": [[118, 143], ["Tools.Wasserstein.SinkhornDistance", "list", "A.cpu.cpu", "B.cpu.cpu", "range", "Tools.Wasserstein.SinkhornDistance.", "WD_loss.to.to"], "function", ["None"], ["", "def", "WDVSc", "(", "a", ",", "b", ",", "device", ",", "n", ",", "m", ",", "opts", ")", ":", "\n", "\n", "\n", "    ", "WD", "=", "SinkhornDistance", "(", "0.01", ",", "1000", ",", "None", ",", "\"mean\"", ")", "\n", "\n", "mask", "=", "list", "(", "range", "(", "n", "-", "m", ")", ")", "\n", "L2_loss", "=", "(", "(", "a", "[", "mask", "]", "-", "b", "[", "mask", "]", ")", "**", "2", ")", ".", "sum", "(", ")", "/", "(", "(", "n", "-", "m", ")", "*", "2", ")", "## L2_Loss of seen classes", "\n", "\n", "A", "=", "a", "[", "n", "-", "m", ":", "]", "\n", "B", "=", "b", "[", "n", "-", "m", ":", "]", "\n", "\n", "A", "=", "A", ".", "cpu", "(", ")", "\n", "B", "=", "B", ".", "cpu", "(", ")", "\n", "if", "opts", ".", "no_use_VSC", ":", "\n", "        ", "WD_loss", "=", "0.", "\n", "P", "=", "None", "\n", "C", "=", "None", "\n", "", "else", ":", "\n", "        ", "WD_loss", ",", "P", ",", "C", "=", "WD", "(", "A", ",", "B", ")", "\n", "WD_loss", "=", "WD_loss", ".", "to", "(", "device", ")", "\n", "\n", "\n", "", "tot_loss", "=", "L2_loss", "+", "WD_loss", "*", "opts", ".", "lamda", "\n", "\n", "return", "tot_loss", ",", "P", ",", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.None.Train_Model.get_train_center": [[147, 152], ["json.load", "open"], "function", ["None"], ["", "def", "get_train_center", "(", "url", ")", ":", "\n", "\n", "    ", "obj", "=", "json", ".", "load", "(", "open", "(", "url", ",", "\"r\"", ")", ")", "\n", "VC", "=", "obj", "[", "\"train\"", "]", "\n", "return", "VC", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.None.Train_Model.get_cluster_center": [[154, 159], ["json.load", "open"], "function", ["None"], ["", "def", "get_cluster_center", "(", "url", ")", ":", "\n", "\n", "    ", "obj", "=", "json", ".", "load", "(", "open", "(", "url", ",", "\"r\"", ")", ")", "\n", "test_center", "=", "obj", "[", "\"VC\"", "]", "\n", "return", "test_center", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.None.Train_Model.get_attributes": [[163, 202], ["torch.tensor", "torch.tensor", "torch.tensor", "ret.to.to", "open", "open", "open", "open", "lines.strip().split", "attributes.append", "lines.strip().split", "lines.strip().split", "ret.to.append", "lines.strip().split", "ret.to.append", "float", "cur.append", "lines.strip", "lines.strip", "lines.strip", "lines.strip"], "function", ["None"], ["", "def", "get_attributes", "(", "device", ",", "att_url", ",", "class_url", ",", "train_class", ",", "test_class", ")", ":", "\n", "\n", "    ", "attributes", "=", "[", "]", "\n", "with", "open", "(", "att_url", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "for", "lines", "in", "f", ":", "\n", "            ", "line", "=", "lines", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "cur", "=", "[", "]", "\n", "for", "x", "in", "line", ":", "\n", "                ", "y", "=", "float", "(", "x", ")", "\n", "y", "=", "y", "/", "100.0", "\n", "if", "y", "<", "0.0", ":", "\n", "                    ", "y", "=", "0.0", "\n", "", "cur", ".", "append", "(", "y", ")", "\n", "", "attributes", ".", "append", "(", "cur", ")", "\n", "", "", "ys", "=", "{", "}", "\n", "pos", "=", "0", "\n", "with", "open", "(", "class_url", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "for", "lines", "in", "f", ":", "\n", "            ", "line", "=", "lines", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "ys", "[", "line", "[", "1", "]", "]", "=", "attributes", "[", "pos", "]", "\n", "pos", "+=", "1", "\n", "\n", "\n", "", "", "ret", "=", "[", "]", "\n", "with", "open", "(", "train_class", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "for", "lines", "in", "f", ":", "\n", "            ", "line", "=", "lines", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "ret", ".", "append", "(", "ys", "[", "line", "[", "0", "]", "]", ")", "\n", "\n", "", "", "with", "open", "(", "test_class", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "for", "lines", "in", "f", ":", "\n", "            ", "line", "=", "lines", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "ret", ".", "append", "(", "ys", "[", "line", "[", "0", "]", "]", ")", "\n", "\n", "\n", "", "", "ret", "=", "torch", ".", "tensor", "(", "ret", ")", "\n", "ret", "=", "ret", ".", "to", "(", "device", ")", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.None.Eval_Model.L2_dis": [[23, 26], ["numpy.sum"], "function", ["None"], ["def", "L2_dis", "(", "x", ",", "y", ")", ":", "\n", "\n", "    ", "return", "np", ".", "sum", "(", "(", "x", "-", "y", ")", "*", "(", "x", "-", "y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.None.Eval_Model.NN_search": [[27, 40], ["center.keys", "Eval_Model.L2_dis"], "function", ["home.repos.pwc.inspect_result.raywzy_VSC.None.Eval_Model.L2_dis"], ["", "def", "NN_search", "(", "x", ",", "center", ")", ":", "\n", "\n", "    ", "ret", "=", "\"\"", "\n", "MINI", "=", "-", "1", "\n", "for", "c", "in", "center", ".", "keys", "(", ")", ":", "\n", "        ", "tmp", "=", "L2_dis", "(", "x", ",", "center", "[", "c", "]", ")", "\n", "if", "MINI", "==", "-", "1", ":", "\n", "            ", "MINI", "=", "tmp", "\n", "ret", "=", "c", "\n", "", "if", "tmp", "<", "MINI", ":", "\n", "            ", "MINI", "=", "tmp", "\n", "ret", "=", "c", "\n", "", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.None.Eval_Model.get_center": [[42, 54], ["os.path.join", "open", "enumerate", "lines.strip().split", "numpy.array", "float", "lines.strip"], "function", ["None"], ["", "def", "get_center", "(", "checkpoint_fn", ")", ":", "\n", "    ", "center", "=", "{", "}", "\n", "file", "=", "\"Pred_Center.txt\"", "\n", "center_fn", "=", "os", ".", "path", ".", "join", "(", "checkpoint_fn", ",", "file", ")", "\n", "with", "open", "(", "center_fn", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "for", "i", ",", "lines", "in", "enumerate", "(", "f", ")", ":", "\n", "            ", "line", "=", "lines", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "pp", "=", "[", "float", "(", "x", ")", "for", "x", "in", "line", "]", "\n", "center", "[", "target_class", "[", "i", "]", "]", "=", "np", ".", "array", "(", "pp", ")", "\n", "\n", "\n", "", "", "return", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Cluster.Cluster.Cluster": [[18, 24], ["Cluster.KM", "Cluster.SC"], "function", ["home.repos.pwc.inspect_result.raywzy_VSC.Cluster.Cluster.KM", "home.repos.pwc.inspect_result.raywzy_VSC.Cluster.Cluster.SC"], ["def", "Cluster", "(", "features", ",", "opts", ")", ":", "\n", "\n", "    ", "if", "opts", ".", "cluster_method", "==", "'Kmeans'", ":", "\n", "        ", "KM", "(", "features", ",", "opts", ")", "\n", "", "else", ":", "\n", "        ", "SC", "(", "features", ",", "opts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Cluster.Cluster.KM": [[25, 38], ["sklearn.cluster.KMeans", "print", "sklearn.cluster.KMeans.fit", "print", "sklearn.cluster.KMeans.cluster_centers_.tolist", "print", "json.dump", "print", "open"], "function", ["None"], ["", "", "def", "KM", "(", "features", ",", "opts", ")", ":", "\n", "    ", "clf", "=", "KMeans", "(", "n_clusters", "=", "opts", ".", "center_num", ",", "n_init", "=", "50", ",", "max_iter", "=", "100000", ",", "init", "=", "\"k-means++\"", ")", "\n", "\n", "print", "(", "\"Start Cluster ...\"", ")", "\n", "s", "=", "clf", ".", "fit", "(", "features", ")", "\n", "print", "(", "\"Finish Cluster ...\"", ")", "\n", "\n", "obj", "=", "{", "}", "\n", "obj", "[", "\"VC\"", "]", "=", "clf", ".", "cluster_centers_", ".", "tolist", "(", ")", "\n", "\n", "print", "(", "'Start writing ...'", ")", "\n", "json", ".", "dump", "(", "obj", ",", "open", "(", "\"C_VC_ResNet_%s_%s.json\"", "%", "(", "opts", ".", "dataset_name", ",", "opts", ".", "mode", ")", ",", "\"w\"", ")", ")", "\n", "print", "(", "\"Finish writing ...\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Cluster.Cluster.SC": [[40, 73], ["sklearn.cluster.SpectralClustering", "print", "sklearn.cluster.SpectralClustering.fit_predict", "print", "enumerate", "sum.keys", "print", "json.dump", "print", "enumerate", "enumerate", "all_cluster_center.append", "open", "sum.get"], "function", ["None"], ["", "def", "SC", "(", "features", ",", "opts", ")", ":", "\n", "    ", "Spectral", "=", "SpectralClustering", "(", "n_clusters", "=", "opts", ".", "center_num", ",", "eigen_solver", "=", "'arpack'", ",", "affinity", "=", "\"nearest_neighbors\"", ")", "\n", "\n", "print", "(", "\"Start Cluster ...\"", ")", "\n", "pred_class", "=", "Spectral", ".", "fit_predict", "(", "features", ")", "\n", "print", "(", "\"Finish Cluster ...\"", ")", "\n", "\n", "belong", "=", "Spectral", ".", "labels_", "\n", "sum", "=", "{", "}", "\n", "count", "=", "{", "}", "\n", "for", "i", ",", "x", "in", "enumerate", "(", "features", ")", ":", "\n", "        ", "label", "=", "belong", "[", "i", "]", "\n", "if", "sum", ".", "get", "(", "label", ")", "is", "None", ":", "\n", "            ", "sum", "[", "label", "]", "=", "[", "0.0", "]", "*", "2048", "\n", "count", "[", "label", "]", "=", "0", "\n", "", "for", "j", ",", "y", "in", "enumerate", "(", "x", ")", ":", "\n", "            ", "sum", "[", "label", "]", "[", "j", "]", "+=", "y", "\n", "", "count", "[", "label", "]", "+=", "1", "\n", "\n", "", "all_cluster_center", "=", "[", "]", "\n", "for", "label", "in", "sum", ".", "keys", "(", ")", ":", "\n", "\n", "        ", "for", "i", ",", "x", "in", "enumerate", "(", "sum", "[", "label", "]", ")", ":", "\n", "            ", "sum", "[", "label", "]", "[", "i", "]", "/=", "(", "count", "[", "label", "]", "*", "1.0", ")", "\n", "\n", "", "all_cluster_center", ".", "append", "(", "sum", "[", "label", "]", ")", "\n", "\n", "", "print", "(", "\"Start writing ...\"", ")", "\n", "obj", "=", "{", "}", "\n", "url", "=", "\"C_VC_ResNet_%s_%s.json\"", "%", "(", "opts", ".", "dataset_name", ",", "opts", ".", "mode", ")", "\n", "obj", "[", "\"VC\"", "]", "=", "all_cluster_center", "\n", "json", ".", "dump", "(", "obj", ",", "open", "(", "url", ",", "\"w\"", ")", ")", "\n", "print", "(", "\"Finish writing ...\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Finetune.ImageFolder.__init__": [[34, 39], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "imgs", ",", "transform", "=", "None", ",", "loader", "=", "default_loader", ")", ":", "\n", "\n", "        ", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Finetune.ImageFolder.__getitem__": [[40, 47], ["Finetune.ImageFolder.loader", "Finetune.ImageFolder.transform"], "methods", ["home.repos.pwc.inspect_result.raywzy_VSC.Tools.Feature_extractor.loader", "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Feature_extractor.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "idx", ",", "fn", "=", "self", ".", "imgs", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "fn", ")", "\n", "#img=img.resize((224,224))", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "return", "img", ",", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Finetune.ImageFolder.__len__": [[48, 50], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Finetune.default_loader": [[20, 22], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["def", "default_loader", "(", "path", ")", ":", "\n", "    ", "return", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Finetune.get_ResNet": [[23, 31], ["torchvision.resnet101", "print", "print", "torch.Linear", "ResNet.to.to"], "function", ["None"], ["", "def", "get_ResNet", "(", "device", ")", ":", "\n", "    ", "ResNet", "=", "models", ".", "resnet101", "(", "pretrained", "=", "True", ")", "\n", "x", "=", "ResNet", ".", "fc", ".", "in_features", "\n", "print", "(", "x", ")", "\n", "print", "(", "\"****\"", ")", "\n", "ResNet", ".", "fc", "=", "nn", ".", "Linear", "(", "x", ",", "150", ")", "\n", "ResNet", "=", "ResNet", ".", "to", "(", "device", ")", "\n", "return", "ResNet", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Finetune.get_data_loader": [[51, 99], ["Finetune.ImageFolder", "Finetune.ImageFolder", "len", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.Compose", "torchvision.Compose", "open", "os.path.join", "os.listdir", "lines.strip().split", "train_class.append", "os.path.join", "imgs.append", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Normalize", "lines.strip"], "function", ["None"], ["", "", "def", "get_data_loader", "(", "opts", ")", ":", "\n", "\n", "    ", "data_transform", "=", "{", "\n", "'train'", ":", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", ",", "\n", "'val'", ":", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", ",", "\n", "}", "\n", "\n", "ys", "=", "{", "}", "\n", "pos", "=", "0", "\n", "train_class", "=", "[", "]", "\n", "with", "open", "(", "opts", ".", "train_class_list", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "for", "lines", "in", "f", ":", "\n", "            ", "line", "=", "lines", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "train_class", ".", "append", "(", "line", "[", "0", "]", ")", "\n", "ys", "[", "line", "[", "0", "]", "]", "=", "pos", "\n", "pos", "+=", "1", "\n", "\n", "", "", "imgs", "=", "[", "]", "\n", "\n", "for", "x", "in", "train_class", ":", "\n", "        ", "cur_class_url", "=", "os", ".", "path", ".", "join", "(", "opts", ".", "data_dir", ",", "x", ")", "\n", "\n", "image_list", "=", "os", ".", "listdir", "(", "cur_class_url", ")", "\n", "for", "y", "in", "image_list", ":", "\n", "            ", "path", "=", "os", ".", "path", ".", "join", "(", "cur_class_url", ",", "y", ")", "\n", "imgs", ".", "append", "(", "(", "ys", "[", "x", "]", ",", "path", ")", ")", "\n", "\n", "", "", "all_dataset", "=", "{", "}", "\n", "all_dataset", "[", "\"train\"", "]", "=", "ImageFolder", "(", "imgs", ",", "data_transform", "[", "'train'", "]", ")", "\n", "all_dataset", "[", "\"val\"", "]", "=", "ImageFolder", "(", "imgs", ",", "data_transform", "[", "'val'", "]", ")", "\n", "\n", "L", "=", "len", "(", "all_dataset", "[", "\"train\"", "]", ")", "\n", "\n", "all_loader", "=", "{", "}", "\n", "all_loader", "[", "\"train\"", "]", "=", "DataLoader", "(", "dataset", "=", "all_dataset", "[", "\"train\"", "]", ",", "batch_size", "=", "32", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "all_loader", "[", "\"val\"", "]", "=", "DataLoader", "(", "dataset", "=", "all_dataset", "[", "\"val\"", "]", ",", "batch_size", "=", "32", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ")", "\n", "\n", "return", "all_loader", ",", "L", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Feature_extractor.loader": [[25, 27], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["def", "loader", "(", "path", ")", ":", "\n", "    ", "return", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Feature_extractor.transform": [[28, 35], ["torchvision.Compose", "Feature_extractor.loader", "trans.resize", "transforms.Compose.", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["home.repos.pwc.inspect_result.raywzy_VSC.Tools.Feature_extractor.loader"], ["", "def", "transform", "(", "path", ")", ":", "\n", "    ", "trans", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "img", "=", "loader", "(", "path", ")", "\n", "img", "=", "img", ".", "resize", "(", "(", "224", ",", "224", ")", ")", "\n", "img", "=", "trans", "(", "img", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Wasserstein.SinkhornDistance.__init__": [[21, 27], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.GCN.__init__"], ["def", "__init__", "(", "self", ",", "eps", ",", "max_iter", ",", "device", ",", "reduction", "=", "'none'", ")", ":", "\n", "        ", "super", "(", "SinkhornDistance", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "max_iter", "=", "max_iter", "\n", "self", ".", "reduction", "=", "reduction", "\n", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Wasserstein.SinkhornDistance.forward": [[28, 84], ["Wasserstein.SinkhornDistance._cost_matrix", "torch.empty().fill_().squeeze", "torch.empty().fill_().squeeze", "torch.empty().fill_().squeeze", "torch.empty().fill_().squeeze", "torch.empty().fill_().squeeze", "torch.empty().fill_().squeeze", "torch.empty().fill_().squeeze", "torch.empty().fill_().squeeze", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "x.dim", "mu.to.to.to", "nu.to.to.to", "u.to.to.to", "v.to.to.to", "Wasserstein.SinkhornDistance.M", "cost.sum.sum.mean", "torch.empty().fill_", "torch.empty().fill_", "torch.empty().fill_", "torch.empty().fill_", "torch.empty().fill_", "torch.empty().fill_", "torch.empty().fill_", "torch.empty().fill_", "err.item", "cost.sum.sum.sum", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.log", "torch.log", "torch.log", "torch.log", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.log", "torch.log", "torch.log", "torch.log", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "Wasserstein.SinkhornDistance.M", "Wasserstein.SinkhornDistance.M().transpose", "Wasserstein.SinkhornDistance.M"], "methods", ["home.repos.pwc.inspect_result.raywzy_VSC.Tools.Wasserstein.SinkhornDistance._cost_matrix", "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Wasserstein.SinkhornDistance.M", "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Wasserstein.SinkhornDistance.M", "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Wasserstein.SinkhornDistance.M"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "# The Sinkhorn algorithm takes as input three variables :", "\n", "        ", "C", "=", "self", ".", "_cost_matrix", "(", "x", ",", "y", ")", "# Wasserstein cost function", "\n", "x_points", "=", "x", ".", "shape", "[", "-", "2", "]", "\n", "y_points", "=", "y", ".", "shape", "[", "-", "2", "]", "\n", "if", "x", ".", "dim", "(", ")", "==", "2", ":", "\n", "            ", "batch_size", "=", "1", "\n", "", "else", ":", "\n", "            ", "batch_size", "=", "x", ".", "shape", "[", "0", "]", "\n", "\n", "# both marginals are fixed with equal weights", "\n", "", "mu", "=", "torch", ".", "empty", "(", "batch_size", ",", "x_points", ",", "dtype", "=", "torch", ".", "float", ",", "\n", "requires_grad", "=", "False", ")", ".", "fill_", "(", "1.0", "/", "x_points", ")", ".", "squeeze", "(", ")", "\n", "nu", "=", "torch", ".", "empty", "(", "batch_size", ",", "y_points", ",", "dtype", "=", "torch", ".", "float", ",", "\n", "requires_grad", "=", "False", ")", ".", "fill_", "(", "1.0", "/", "y_points", ")", ".", "squeeze", "(", ")", "\n", "\n", "if", "self", ".", "device", "is", "not", "None", ":", "\n", "            ", "mu", "=", "mu", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "nu", "=", "nu", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "", "u", "=", "torch", ".", "zeros_like", "(", "mu", ")", "\n", "v", "=", "torch", ".", "zeros_like", "(", "nu", ")", "\n", "\n", "if", "self", ".", "device", "is", "not", "None", ":", "\n", "            ", "u", "=", "u", ".", "to", "(", "self", ".", "device", ")", "\n", "v", "=", "v", ".", "to", "(", "self", ".", "device", ")", "\n", "# To check if algorithm terminates because of threshold", "\n", "# or max iterations reached", "\n", "", "actual_nits", "=", "0", "\n", "# Stopping criterion", "\n", "thresh", "=", "1e-1", "\n", "\n", "# Sinkhorn iterations", "\n", "for", "i", "in", "range", "(", "self", ".", "max_iter", ")", ":", "\n", "            ", "u1", "=", "u", "# useful to check the update", "\n", "u", "=", "self", ".", "eps", "*", "(", "torch", ".", "log", "(", "mu", "+", "1e-8", ")", "-", "torch", ".", "logsumexp", "(", "self", ".", "M", "(", "C", ",", "u", ",", "v", ")", ",", "dim", "=", "-", "1", ")", ")", "+", "u", "\n", "v", "=", "self", ".", "eps", "*", "(", "torch", ".", "log", "(", "nu", "+", "1e-8", ")", "-", "torch", ".", "logsumexp", "(", "self", ".", "M", "(", "C", ",", "u", ",", "v", ")", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ",", "dim", "=", "-", "1", ")", ")", "+", "v", "\n", "err", "=", "(", "u", "-", "u1", ")", ".", "abs", "(", ")", ".", "sum", "(", "-", "1", ")", ".", "mean", "(", ")", "\n", "\n", "actual_nits", "+=", "1", "\n", "if", "err", ".", "item", "(", ")", "<", "thresh", ":", "\n", "                ", "break", "\n", "\n", "", "", "U", ",", "V", "=", "u", ",", "v", "\n", "# Transport plan pi = diag(a)*K*diag(b)", "\n", "pi", "=", "torch", ".", "exp", "(", "self", ".", "M", "(", "C", ",", "U", ",", "V", ")", ")", "\n", "# Sinkhorn distance", "\n", "cost", "=", "torch", ".", "sum", "(", "pi", "*", "C", ",", "dim", "=", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "if", "self", ".", "reduction", "==", "'mean'", ":", "\n", "            ", "cost", "=", "cost", ".", "mean", "(", ")", "\n", "", "elif", "self", ".", "reduction", "==", "'sum'", ":", "\n", "            ", "cost", "=", "cost", ".", "sum", "(", ")", "\n", "\n", "", "return", "cost", ",", "pi", ",", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Wasserstein.SinkhornDistance.M": [[85, 89], ["v.unsqueeze", "u.unsqueeze"], "methods", ["None"], ["", "def", "M", "(", "self", ",", "C", ",", "u", ",", "v", ")", ":", "\n", "        ", "\"Modified cost for logarithmic updates\"", "\n", "\"$M_{ij} = (-c_{ij} + u_i + v_j) / \\epsilon$\"", "\n", "return", "(", "-", "C", "+", "u", ".", "unsqueeze", "(", "-", "1", ")", "+", "v", ".", "unsqueeze", "(", "-", "2", ")", ")", "/", "self", ".", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Wasserstein.SinkhornDistance._cost_matrix": [[90, 97], ["x.unsqueeze", "y.unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_cost_matrix", "(", "x", ",", "y", ",", "p", "=", "2", ")", ":", "\n", "        ", "\"Returns the matrix of $|x_i-y_j|^p$.\"", "\n", "x_col", "=", "x", ".", "unsqueeze", "(", "-", "2", ")", "\n", "y_lin", "=", "y", ".", "unsqueeze", "(", "-", "3", ")", "\n", "C", "=", "torch", ".", "sum", "(", "(", "torch", ".", "abs", "(", "x_col", "-", "y_lin", ")", ")", "**", "p", ",", "-", "1", ")", "\n", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Tools.Wasserstein.SinkhornDistance.ave": [[98, 102], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "ave", "(", "u", ",", "u1", ",", "tau", ")", ":", "\n", "        ", "\"Barycenter subroutine, used by kinetic acceleration through extrapolation.\"", "\n", "return", "tau", "*", "u", "+", "(", "1", "-", "tau", ")", "*", "u1", "", "", "", ""]], "home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.GraphConv.__init__": [[42, 61], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.GCN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "dropout", "=", "False", ",", "relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "GraphConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "dropout", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "None", "\n", "#x=0", "\n", "", "self", ".", "w", "=", "nn", ".", "Parameter", "(", "torch", ".", "empty", "(", "in_channels", ",", "out_channels", ")", ")", "\n", "self", ".", "b", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "out_channels", ")", ")", "\n", "xavier_uniform_", "(", "self", ".", "w", ")", "\n", "#xavier_uniform_(self.b)", "\n", "#xavier_normal_(self.w)", "\n", "#normal_(self.w,std=x)", "\n", "if", "relu", ":", "\n", "            ", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", "\n", "#self.relu=nn.ReLU()", "\n", "", "else", ":", "\n", "            ", "self", ".", "relu", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.GraphConv.forward": [[62, 71], ["GCN.GraphConv.dropout", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "GCN.GraphConv.relu", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ",", "adj", ")", ":", "\n", "        ", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "inputs", "=", "self", ".", "dropout", "(", "inputs", ")", "\n", "\n", "", "outputs", "=", "torch", ".", "mm", "(", "adj", ",", "torch", ".", "mm", "(", "inputs", ",", "self", ".", "w", ")", ")", "+", "self", ".", "b", "\n", "\n", "if", "self", ".", "relu", "is", "not", "None", ":", "\n", "            ", "outputs", "=", "self", ".", "relu", "(", "outputs", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.GCN.__init__": [[75, 115], ["torch.Module.__init__", "numpy.array", "scipy.coo_matrix", "GCN.normt_spm", "GCN.spm_to_tensor", "spm_to_tensor.to", "hidden_layers.split", "GCN.GraphConv", "GCN.GCN.add_module", "layers.append", "int", "GCN.GraphConv", "GCN.GCN.add_module", "layers.append", "numpy.ones", "len"], "methods", ["home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.GCN.__init__", "home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.normt_spm", "home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.spm_to_tensor"], ["    ", "def", "__init__", "(", "self", ",", "n", ",", "edges", ",", "in_channels", ",", "out_channels", ",", "hidden_layers", ",", "device", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "edges", "=", "np", ".", "array", "(", "edges", ")", "\n", "adj", "=", "sp", ".", "coo_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "edges", ")", ")", ",", "(", "edges", "[", ":", ",", "0", "]", ",", "edges", "[", ":", ",", "1", "]", ")", ")", ",", "\n", "shape", "=", "(", "n", ",", "n", ")", ",", "dtype", "=", "'float32'", ")", "\n", "adj", "=", "normt_spm", "(", "adj", ",", "method", "=", "'in'", ")", "\n", "adj", "=", "spm_to_tensor", "(", "adj", ")", "\n", "self", ".", "adj", "=", "adj", ".", "to", "(", "device", ")", "\n", "\n", "hl", "=", "hidden_layers", ".", "split", "(", "','", ")", "\n", "if", "hl", "[", "-", "1", "]", "==", "'d'", ":", "\n", "            ", "dropout_last", "=", "True", "\n", "hl", "=", "hl", "[", ":", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "dropout_last", "=", "False", "\n", "\n", "", "i", "=", "0", "\n", "layers", "=", "[", "]", "\n", "last_c", "=", "in_channels", "\n", "for", "c", "in", "hl", ":", "\n", "            ", "if", "c", "[", "0", "]", "==", "'d'", ":", "\n", "                ", "dropout", "=", "True", "\n", "c", "=", "c", "[", "1", ":", "]", "\n", "", "else", ":", "\n", "                ", "dropout", "=", "False", "\n", "", "c", "=", "int", "(", "c", ")", "\n", "\n", "i", "+=", "1", "\n", "conv", "=", "GraphConv", "(", "last_c", ",", "c", ",", "dropout", "=", "dropout", ")", "\n", "self", ".", "add_module", "(", "'conv{}'", ".", "format", "(", "i", ")", ",", "conv", ")", "\n", "layers", ".", "append", "(", "conv", ")", "\n", "\n", "last_c", "=", "c", "\n", "\n", "", "conv", "=", "GraphConv", "(", "last_c", ",", "out_channels", ",", "relu", "=", "False", ",", "dropout", "=", "dropout_last", ")", "\n", "self", ".", "add_module", "(", "'conv-last'", ",", "conv", ")", "\n", "layers", ".", "append", "(", "conv", ")", "\n", "\n", "self", ".", "layers", "=", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.GCN.forward": [[116, 120], ["torch.normalize", "torch.normalize", "torch.normalize", "conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "conv", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "conv", "(", "x", ",", "self", ".", "adj", ")", "\n", "", "return", "F", ".", "normalize", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.normt_spm": [[11, 28], ["mx.dot().transpose().dot.transpose", "numpy.array", "numpy.power().flatten", "scipy.diags", "sp.diags.dot", "numpy.array", "numpy.power().flatten", "scipy.diags", "mx.dot().transpose().dot.dot().transpose().dot", "mx.dot().transpose().dot.sum", "mx.dot().transpose().dot.sum", "numpy.power", "numpy.isinf", "numpy.power", "numpy.isinf", "mx.dot().transpose().dot.dot().transpose", "mx.dot().transpose().dot.dot"], "function", ["None"], ["def", "normt_spm", "(", "mx", ",", "method", "=", "'in'", ")", ":", "\n", "    ", "if", "method", "==", "'in'", ":", "\n", "        ", "mx", "=", "mx", ".", "transpose", "(", ")", "\n", "rowsum", "=", "np", ".", "array", "(", "mx", ".", "sum", "(", "1", ")", ")", "\n", "r_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "r_inv", "[", "np", ".", "isinf", "(", "r_inv", ")", "]", "=", "0.", "\n", "r_mat_inv", "=", "sp", ".", "diags", "(", "r_inv", ")", "\n", "mx", "=", "r_mat_inv", ".", "dot", "(", "mx", ")", "\n", "return", "mx", "\n", "\n", "", "if", "method", "==", "'sym'", ":", "\n", "        ", "rowsum", "=", "np", ".", "array", "(", "mx", ".", "sum", "(", "1", ")", ")", "\n", "r_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "r_inv", "[", "np", ".", "isinf", "(", "r_inv", ")", "]", "=", "0.", "\n", "r_mat_inv", "=", "sp", ".", "diags", "(", "r_inv", ")", "\n", "mx", "=", "mx", ".", "dot", "(", "r_mat_inv", ")", ".", "transpose", "(", ")", ".", "dot", "(", "r_mat_inv", ")", "\n", "return", "mx", "\n", "\n"]], "home.repos.pwc.inspect_result.raywzy_VSC.Models.GCN.spm_to_tensor": [[30, 37], ["sparse_mx.tocoo().astype.tocoo().astype", "torch.from_numpy().long", "torch.from_numpy().long", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.Size", "torch.Size", "torch.Size", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "sparse_mx.tocoo().astype.tocoo", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.vstack"], "function", ["None"], ["", "", "def", "spm_to_tensor", "(", "sparse_mx", ")", ":", "\n", "    ", "sparse_mx", "=", "sparse_mx", ".", "tocoo", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "indices", "=", "torch", ".", "from_numpy", "(", "np", ".", "vstack", "(", "\n", "(", "sparse_mx", ".", "row", ",", "sparse_mx", ".", "col", ")", ")", ")", ".", "long", "(", ")", "\n", "values", "=", "torch", ".", "from_numpy", "(", "sparse_mx", ".", "data", ")", "\n", "shape", "=", "torch", ".", "Size", "(", "sparse_mx", ".", "shape", ")", "\n", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "indices", ",", "values", ",", "shape", ")", "\n", "\n"]]}