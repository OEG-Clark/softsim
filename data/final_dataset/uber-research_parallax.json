{"home.repos.pwc.inspect_result.uber-research_parallax.None.polar.polar_chart_vertices": [[35, 40], ["numpy.cos", "numpy.sin"], "function", ["None"], ["def", "polar_chart_vertices", "(", "theta", ",", "radius", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    return vertices of the polar axes centered at [0.5, 0.5] with radius = 0.5\n    \"\"\"", "\n", "return", "[", "(", "radius", "*", "np", ".", "cos", "(", "t", ")", ",", "radius", "*", "np", ".", "sin", "(", "t", ")", ")", "for", "t", "in", "theta", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.polar.formula_patch": [[42, 48], ["numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "formula_patch", "(", "value", ",", "theta", ")", ":", "\n", "    ", "\"\"\"\n    return vertices of a formula patch\n    \"\"\"", "\n", "dx", ",", "dy", "=", "value", "*", "np", ".", "cos", "(", "theta", ")", ",", "value", "*", "np", ".", "sin", "(", "theta", ")", "\n", "return", "dx", ",", "dy", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.polar.reset_plot": [[50, 58], ["len"], "function", ["None"], ["", "def", "reset_plot", "(", ")", ":", "\n", "    ", "\"\"\"\n    iterate through all visual element and set them to invisible\n    \"\"\"", "\n", "global", "visual_elements", "\n", "if", "len", "(", "visual_elements", ")", ">", "0", ":", "\n", "        ", "for", "el", "in", "visual_elements", ":", "\n", "            ", "el", ".", "visible", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.polar.select_embeddings": [[60, 105], ["axes.value.strip", "items.value.strip", "re.split", "re.split", "modules.api.projection", "len", "len"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.api.projection"], ["", "", "", "def", "select_embeddings", "(", ")", ":", "\n", "    ", "axes_list", "=", "[", "]", "\n", "axes_val", "=", "axes", ".", "value", ".", "strip", "(", ")", "\n", "if", "axes_val", "!=", "''", ":", "\n", "        ", "axes_list", "=", "re", ".", "split", "(", "\"\\s*;\\s*\"", ",", "axes_val", ")", "\n", "\n", "", "items_list", "=", "[", "]", "\n", "items_val", "=", "items", ".", "value", ".", "strip", "(", ")", "\n", "if", "items_val", "!=", "''", ":", "\n", "        ", "items_list", "=", "re", ".", "split", "(", "\"\\s*;\\s*\"", ",", "items_val", ")", "\n", "\n", "", "if", "len", "(", "axes_list", ")", ">=", "3", "and", "len", "(", "items_list", ")", ">=", "1", ":", "\n", "\n", "        ", "'''\n        if projection_tab_panel.active == 0:  # explicit\n            mode = 'explicit'\n            metric = measure_1.value\n            pre_filtering = True\n            post_filtering = False\n        elif projection_tab_panel.active == 1:  # pca\n            mode = 'pca'\n            metric = None\n            formulae = None\n            pre_filtering = False\n            post_filtering = True\n        else:  # if projection_tab_panel.active == 2:  # tsne\n            mode = 'tsne'\n            metric = measure_3.value\n            formulae = None\n            pre_filtering = False\n            post_filtering = True\n        '''", "\n", "\n", "return", "projection", "(", "data_manager", ",", "\n", "dataset_id", "=", "dataset", ".", "value", ",", "\n", "mode", "=", "'explicit'", ",", "\n", "rank_slice", "=", "(", "0", ",", "0", ")", ",", "\n", "metric", "=", "measure", ".", "value", ",", "\n", "formulae", "=", "axes_list", ",", "\n", "items", "=", "items_list", ",", "\n", "pre_filtering", "=", "True", ",", "\n", "post_filtering", "=", "False", ",", "\n", ")", "\n", "", "else", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.polar.update": [[107, 160], ["polar.reset_plot", "axes.value.strip", "len", "polar.select_embeddings", "select_embeddings.items", "polar.polar_chart_vertices", "re.split", "numpy.linspace", "len", "pdfs.append", "polar.formula_patch", "plot.patch", "plot.text", "visual_elements.append", "visual_elements.append", "min", "plot.line", "plot.text", "visual_elements.append", "visual_elements.append", "numpy.linspace", "numpy.linspace", "plot.circle", "visual_elements.append", "max", "len", "max", "numpy.array().flatten", "len", "len", "numpy.array"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.None.polar.reset_plot", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.select_embeddings", "home.repos.pwc.inspect_result.uber-research_parallax.None.polar.polar_chart_vertices", "home.repos.pwc.inspect_result.uber-research_parallax.None.polar.formula_patch"], ["", "", "def", "update", "(", "attr", ",", "old", ",", "new", ")", ":", "\n", "    ", "reset_plot", "(", ")", "\n", "\n", "axes_list", "=", "[", "]", "\n", "axes_val", "=", "axes", ".", "value", ".", "strip", "(", ")", "\n", "if", "axes_val", "!=", "''", ":", "\n", "        ", "axes_list", "=", "re", ".", "split", "(", "\"\\s*;\\s*\"", ",", "axes_val", ")", "\n", "\n", "", "num_axes", "=", "len", "(", "axes_list", ")", "\n", "theta", "=", "np", ".", "linspace", "(", "PI", "*", "2", ",", "0", ",", "num_axes", ",", "endpoint", "=", "False", ")", "+", "PI", "/", "2", "\n", "\n", "embeddings", "=", "select_embeddings", "(", ")", "\n", "plot", ".", "title", ".", "text", "=", "\"%d embeddings selected\"", "%", "len", "(", "embeddings", ")", "\n", "\n", "pdfs", "=", "[", "]", "\n", "i", "=", "0", "\n", "for", "label", ",", "emb_dict", "in", "embeddings", ".", "items", "(", ")", ":", "\n", "        ", "coords", "=", "emb_dict", "[", "'coords'", "]", "\n", "coords", "=", "[", "max", "(", "coord", ",", "0", ")", "for", "coord", "in", "coords", "]", "\n", "pdfs", ".", "append", "(", "coords", ")", "\n", "x", ",", "y", "=", "formula_patch", "(", "coords", ",", "theta", ")", "\n", "patch", "=", "plot", ".", "patch", "(", "x", "=", "x", ",", "y", "=", "y", ",", "fill_alpha", "=", "opacity", ".", "value", ",", "\n", "fill_color", "=", "colors", "[", "i", "%", "len", "(", "colors", ")", "]", ",", "legend", "=", "label", ",", "\n", "line_color", "=", "colors", "[", "i", "%", "len", "(", "colors", ")", "]", ",", "line_alpha", "=", "1", ",", "line_width", "=", "3", ")", "\n", "patch_label", "=", "plot", ".", "text", "(", "\n", "x", "=", "x", ",", "y", "=", "y", ",", "text", "=", "[", "\"%.2f\"", "%", "n", "for", "n", "in", "emb_dict", "[", "'coords'", "]", "]", ",", "\n", "text_baseline", "=", "\"middle\"", ",", "text_align", "=", "\"center\"", ",", "text_font_size", "=", "'9pt'", ")", "\n", "visual_elements", ".", "append", "(", "patch", ")", "\n", "visual_elements", ".", "append", "(", "patch_label", ")", "\n", "i", "+=", "1", "\n", "\n", "", "radius", "=", "1", "if", "len", "(", "pdfs", ")", "==", "0", "else", "min", "(", "1", ",", "max", "(", "np", ".", "array", "(", "pdfs", ")", ".", "flatten", "(", ")", ")", "*", "1.05", ")", "\n", "vertices", "=", "polar_chart_vertices", "(", "theta", ",", "radius", ")", "\n", "x_v", "=", "[", "v", "[", "0", "]", "for", "v", "in", "vertices", "]", "\n", "y_v", "=", "[", "v", "[", "1", "]", "for", "v", "in", "vertices", "]", "\n", "\n", "for", "v", "in", "vertices", ":", "\n", "        ", "xs", "=", "[", "0", ",", "v", "[", "0", "]", "]", "\n", "ys", "=", "[", "0", ",", "v", "[", "1", "]", "]", "\n", "line", "=", "plot", ".", "line", "(", "x", "=", "xs", ",", "y", "=", "ys", ")", "\n", "label", "=", "plot", ".", "text", "(", "x", "=", "x_v", ",", "y", "=", "y_v", ",", "text", "=", "axes_list", ")", "\n", "visual_elements", ".", "append", "(", "line", ")", "\n", "visual_elements", ".", "append", "(", "label", ")", "\n", "\n", "# ticks: # segments, 6 ticks", "\n", "num_ticks", "=", "6", "\n", "xticks", "=", "np", ".", "linspace", "(", "0", ",", "v", "[", "0", "]", ",", "num_ticks", ")", "\n", "yticks", "=", "np", ".", "linspace", "(", "0", ",", "v", "[", "1", "]", ",", "num_ticks", ")", "\n", "circle", "=", "plot", ".", "circle", "(", "x", "=", "xticks", ",", "y", "=", "yticks", ",", "color", "=", "\"gray\"", ",", "alpha", "=", "0.5", ")", "\n", "visual_elements", ".", "append", "(", "circle", ")", "\n", "\n", "", "plot", ".", "legend", ".", "location", "=", "\"top_left\"", "\n", "plot", ".", "legend", ".", "click_policy", "=", "\"hide\"", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.build_data_filter": [[180, 199], ["bokeh.models.widgets.Select", "bokeh.models.widgets.TextInput", "bokeh.models.widgets.Select", "bokeh.models.widgets.TextInput"], "function", ["None"], ["def", "build_data_filter", "(", ")", ":", "\n", "    ", "measure_cf", "=", "Select", "(", "options", "=", "[", "(", "'cosine_similarity'", ",", "'Cosine Similarity'", ")", ",", "\n", "(", "'cosine'", ",", "'Cosine Distance'", ")", ",", "\n", "(", "'euclidean'", ",", "'Euclidean'", ")", ",", "\n", "(", "'dot_product'", ",", "'Dot product'", ")", ",", "\n", "(", "'correlation'", ",", "'Correlation'", ")", ",", "\n", "]", ",", "\n", "value", "=", "'cosine_similarity'", ")", "\n", "formula_cf", "=", "TextInput", "(", "value", "=", "''", ",", "placeholder", "=", "\"formula\"", ")", "\n", "compare_cf", "=", "Select", "(", "options", "=", "[", "(", "'greater'", ",", "'>'", ")", ",", "\n", "(", "'greater_equal'", ",", "'\u2265'", ")", ",", "\n", "(", "'close'", ",", "'~'", ")", ",", "\n", "(", "'less_equal'", ",", "'\u2264'", ")", ",", "\n", "(", "'less'", ",", "'<'", ")", ",", "\n", "]", ",", "\n", "value", "=", "'greater'", ",", "width", "=", "20", ")", "\n", "value_cf", "=", "TextInput", "(", "value", "=", "''", ",", "placeholder", "=", "\"numeric value\"", ")", "\n", "data_filter", "=", "[", "measure_cf", ",", "formula_cf", ",", "compare_cf", ",", "value_cf", "]", "\n", "return", "data_filter", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.select_embeddings": [[222, 330], ["x_axis.value.strip", "y_axis.value.strip", "items.value.strip", "modules.api.projection", "data_filter[].value.strip", "data_filter[].value.strip", "re.split", "int", "int", "int", "int", "metadata_filters_params.append", "float", "data_filters_params.append", "float", "float", "float", "int", "int", "float", "float", "int", "int", "metadata_filters_params.append", "set", "print", "int", "int", "metadata_filters_params.append", "set", "len", "metadata_filters_params.append", "len"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.api.projection"], ["", "def", "select_embeddings", "(", ")", ":", "\n", "    ", "x_axis_value", "=", "x_axis", ".", "value", ".", "strip", "(", ")", "\n", "y_axis_value", "=", "y_axis", ".", "value", ".", "strip", "(", ")", "\n", "if", "projection_tab_panel", ".", "active", "==", "0", "and", "(", "\n", "x_axis_value", "==", "''", "or", "y_axis_value", "==", "''", ")", ":", "\n", "        ", "return", "{", "}", "\n", "", "else", ":", "\n", "        ", "metadata_filters_params", "=", "[", "]", "\n", "for", "metadata_filter", "in", "metadata_filters", ":", "\n", "            ", "if", "metadata_type", "[", "metadata_filter", ".", "title", "]", "==", "'boolean'", ":", "\n", "                ", "if", "metadata_filter", ".", "value", "!=", "'Any'", ":", "\n", "                    ", "metadata_filters_params", ".", "append", "(", "(", "metadata_filter", ".", "title", ",", "\n", "metadata_filter", ".", "value", "==", "'True'", ")", ")", "\n", "", "", "elif", "metadata_type", "[", "metadata_filter", ".", "title", "]", "==", "'numerical'", ":", "\n", "                ", "filter_value", "=", "(", "\n", "int", "(", "metadata_filter", ".", "value", "[", "0", "]", ")", ",", "\n", "int", "(", "metadata_filter", ".", "value", "[", "1", "]", ")", ")", "\n", "if", "filter_value", "!=", "(", "int", "(", "rank_slice", ".", "start", ")", ",", "int", "(", "rank_slice", ".", "end", ")", ")", ":", "\n", "                    ", "metadata_filters_params", ".", "append", "(", "\n", "(", "metadata_filter", ".", "title", ",", "filter_value", ")", ")", "\n", "", "", "elif", "metadata_type", "[", "metadata_filter", ".", "title", "]", "==", "'categorical'", ":", "\n", "                ", "filter_value", "=", "set", "(", "metadata_filter", ".", "value", ")", "\n", "if", "len", "(", "filter_value", ")", ">", "0", "and", "filter_value", "!=", "metadata_domain", "[", "\n", "metadata_filter", ".", "title", "]", ":", "\n", "                    ", "metadata_filters_params", ".", "append", "(", "\n", "(", "metadata_filter", ".", "title", ",", "filter_value", ")", ")", "\n", "", "", "elif", "metadata_type", "[", "metadata_filter", ".", "title", "]", "==", "'set'", ":", "\n", "                ", "filter_value", "=", "set", "(", "metadata_filter", ".", "value", ")", "\n", "if", "len", "(", "filter_value", ")", ">", "0", "and", "filter_value", "!=", "metadata_domain", "[", "\n", "metadata_filter", ".", "title", "]", ":", "\n", "                    ", "metadata_filters_params", ".", "append", "(", "\n", "(", "metadata_filter", ".", "title", ",", "filter_value", ")", ")", "\n", "\n", "", "", "", "data_filters_params", "=", "[", "]", "\n", "for", "data_filter", "in", "data_filters_groups", ":", "\n", "            ", "formula", "=", "data_filter", "[", "1", "]", ".", "value", ".", "strip", "(", ")", "\n", "number_value", "=", "data_filter", "[", "3", "]", ".", "value", ".", "strip", "(", ")", "\n", "if", "formula", "!=", "''", "and", "number_value", "!=", "''", ":", "\n", "                ", "measure", "=", "data_filter", "[", "0", "]", ".", "value", "\n", "compare_function", "=", "data_filter", "[", "2", "]", ".", "value", "\n", "try", ":", "\n", "                    ", "number", "=", "float", "(", "number_value", ")", "\n", "data_filters_params", ".", "append", "(", "{", "'measure'", ":", "measure", ",", "\n", "'formula'", ":", "formula", ",", "\n", "'compare_function'", ":", "compare_function", ",", "\n", "'number'", ":", "number", "}", ")", "\n", "", "except", ":", "\n", "                    ", "print", "(", "'invalid number value:'", ",", "number_value", ")", "\n", "\n", "", "", "", "items_list", "=", "[", "]", "\n", "items_val", "=", "items", ".", "value", ".", "strip", "(", ")", "\n", "if", "items_val", "!=", "''", ":", "\n", "            ", "items_list", "=", "re", ".", "split", "(", "\"\\s*;\\s*\"", ",", "items_val", ")", "\n", "\n", "", "additional_arguments", "=", "{", "}", "\n", "if", "projection_tab_panel", ".", "active", "==", "0", ":", "# explicit", "\n", "            ", "mode", "=", "'explicit'", "\n", "metric", "=", "measure_1", ".", "value", "\n", "formulae", "=", "[", "x_axis_value", ",", "y_axis_value", "]", "\n", "pre_filtering", "=", "True", "\n", "post_filtering", "=", "False", "\n", "", "elif", "projection_tab_panel", ".", "active", "==", "1", ":", "# pca", "\n", "            ", "mode", "=", "'pca'", "\n", "metric", "=", "None", "\n", "formulae", "=", "None", "\n", "pre_filtering", "=", "filtering_before_after_2", ".", "active", "==", "0", "\n", "post_filtering", "=", "filtering_before_after_2", ".", "active", "==", "1", "\n", "", "elif", "projection_tab_panel", ".", "active", "==", "2", ":", "# tsne", "\n", "            ", "mode", "=", "'tsne'", "\n", "metric", "=", "measure_3", ".", "value", "\n", "formulae", "=", "None", "\n", "pre_filtering", "=", "filtering_before_after_3", ".", "active", "==", "0", "\n", "post_filtering", "=", "filtering_before_after_3", ".", "active", "==", "1", "\n", "\n", "additional_arguments", "[", "'perplexity'", "]", "=", "float", "(", "perplexity", ".", "value", ")", "\n", "additional_arguments", "[", "'early_exaggeration'", "]", "=", "float", "(", "early_exaggeration", ".", "value", ")", "\n", "additional_arguments", "[", "'learning_rate'", "]", "=", "float", "(", "learning_rate", ".", "value", ")", "\n", "additional_arguments", "[", "'n_iter'", "]", "=", "int", "(", "n_iter", ".", "value", ")", "\n", "additional_arguments", "[", "'n_iter_without_progress'", "]", "=", "int", "(", "n_iter_without_progress", ".", "value", ")", "\n", "additional_arguments", "[", "'min_grad_norm'", "]", "=", "float", "(", "min_grad_norm", ".", "value", ")", "\n", "additional_arguments", "[", "'init'", "]", "=", "init", ".", "value", "\n", "additional_arguments", "[", "'method'", "]", "=", "method", ".", "value", "\n", "additional_arguments", "[", "'angle'", "]", "=", "float", "(", "angle", ".", "value", ")", "\n", "", "else", ":", "\n", "            ", "mode", "=", "'umap'", "\n", "metric", "=", "None", "\n", "formulae", "=", "None", "\n", "pre_filtering", "=", "filtering_before_after_4", ".", "active", "==", "0", "\n", "post_filtering", "=", "filtering_before_after_4", ".", "active", "==", "1", "\n", "\n", "\n", "", "rank_slice_values", "=", "(", "int", "(", "rank_slice", ".", "value", "[", "0", "]", ")", ",", "int", "(", "rank_slice", ".", "value", "[", "1", "]", ")", ")", "\n", "if", "rank_slice_values", "==", "(", "int", "(", "rank_slice", ".", "start", ")", ",", "int", "(", "rank_slice", ".", "end", ")", ")", ":", "\n", "            ", "rank_slice_values", "=", "None", "\n", "\n", "", "return", "projection", "(", "data_manager", ",", "\n", "dataset_id", "=", "dataset", ".", "value", ",", "\n", "data_filters", "=", "data_filters_params", ",", "\n", "metadata_filters", "=", "metadata_filters_params", ",", "\n", "mode", "=", "mode", ",", "\n", "rank_slice", "=", "rank_slice_values", ",", "\n", "metric", "=", "metric", ",", "\n", "n_axes", "=", "2", ",", "\n", "formulae", "=", "formulae", ",", "\n", "items", "=", "items_list", ",", "\n", "pre_filtering", "=", "pre_filtering", ",", "\n", "post_filtering", "=", "post_filtering", ",", "\n", "**", "additional_arguments", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.update_view": [[333, 400], ["items.value.strip", "set", "embeddings.items", "dict", "dict", "re.split", "x.append", "y.append", "labels.append", "colors.append", "min", "max", "dict", "measure_1.value.split", "len", "items.value.strip", "x_item.append", "y_item.append", "labels_item.append", "colors_item.append", "len", "len", "min", "min", "max", "max", "measure_3.value.split", "len", "len"], "function", ["None"], ["", "", "def", "update_view", "(", "embeddings", ")", ":", "\n", "    ", "if", "projection_tab_panel", ".", "active", "==", "0", ":", "# explicit", "\n", "        ", "plot", ".", "xaxis", ".", "axis_label", "=", "x_axis", ".", "value", "\n", "plot", ".", "yaxis", ".", "axis_label", "=", "y_axis", ".", "value", "\n", "line", ".", "line_alpha", "=", "1", "\n", "", "else", ":", "\n", "        ", "plot", ".", "xaxis", ".", "axis_label", "=", "''", "\n", "plot", ".", "yaxis", ".", "axis_label", "=", "''", "\n", "line", ".", "line_alpha", "=", "0", "\n", "\n", "", "if", "projection_tab_panel", ".", "active", "==", "0", ":", "# explicit", "\n", "        ", "measure_name", "=", "' '", ".", "join", "(", "measure_1", ".", "value", ".", "split", "(", "'_'", ")", ")", "\n", "plot", ".", "title", ".", "text", "=", "\"{} embeddings selected, {} measure\"", ".", "format", "(", "\n", "len", "(", "embeddings", ")", ",", "measure_name", ")", "\n", "", "elif", "projection_tab_panel", ".", "active", "==", "2", ":", "# t-SNE", "\n", "        ", "measure_name", "=", "' '", ".", "join", "(", "measure_3", ".", "value", ".", "split", "(", "'_'", ")", ")", "\n", "plot", ".", "title", ".", "text", "=", "\"{} embeddings selected, {} measure\"", ".", "format", "(", "\n", "len", "(", "embeddings", ")", ",", "measure_name", ")", "\n", "", "else", ":", "\n", "        ", "plot", ".", "title", ".", "text", "=", "\"{} embeddings selected\"", ".", "format", "(", "len", "(", "embeddings", ")", ")", "\n", "\n", "", "items_list", "=", "[", "]", "\n", "items_val", "=", "items", ".", "value", ".", "strip", "(", ")", "\n", "if", "items_val", "!=", "''", ":", "\n", "        ", "items_list", "=", "re", ".", "split", "(", "\"\\s*;\\s*\"", ",", "items", ".", "value", ".", "strip", "(", ")", ")", "\n", "", "highlight_items", "=", "set", "(", "items_list", ")", "\n", "\n", "x", "=", "[", "]", "\n", "y", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "colors", "=", "[", "]", "\n", "x_item", "=", "[", "]", "\n", "y_item", "=", "[", "]", "\n", "labels_item", "=", "[", "]", "\n", "colors_item", "=", "[", "]", "\n", "for", "label", ",", "emd_dict", "in", "embeddings", ".", "items", "(", ")", ":", "\n", "        ", "x", ".", "append", "(", "emd_dict", "[", "'coords'", "]", "[", "0", "]", ")", "\n", "y", ".", "append", "(", "emd_dict", "[", "'coords'", "]", "[", "1", "]", ")", "\n", "labels", ".", "append", "(", "label", ")", "\n", "colors", ".", "append", "(", "\n", "highlight_color", "if", "label", "in", "highlight_items", "else", "default_color", ")", "\n", "\n", "if", "label", "in", "highlight_items", ":", "\n", "            ", "x_item", ".", "append", "(", "emd_dict", "[", "'coords'", "]", "[", "0", "]", ")", "\n", "y_item", ".", "append", "(", "emd_dict", "[", "'coords'", "]", "[", "1", "]", ")", "\n", "labels_item", ".", "append", "(", "label", ")", "\n", "colors_item", ".", "append", "(", "\n", "highlight_color", "if", "label", "in", "highlight_items", "else", "default_color", ")", "\n", "\n", "", "", "source", ".", "data", "=", "dict", "(", "\n", "x", "=", "x", ",", "\n", "y", "=", "y", ",", "\n", "color", "=", "colors", ",", "\n", "label", "=", "labels", ",", "\n", ")", "\n", "\n", "source_items", ".", "data", "=", "dict", "(", "\n", "x", "=", "x_item", ",", "\n", "y", "=", "y_item", ",", "\n", "color", "=", "colors_item", ",", "\n", "label", "=", "labels_item", ",", "\n", ")", "\n", "\n", "if", "len", "(", "x", ")", ">", "0", "and", "len", "(", "y", ")", ">", "0", ":", "\n", "        ", "line_min", "=", "min", "(", "min", "(", "x", ")", ",", "min", "(", "y", ")", ")", "\n", "line_max", "=", "max", "(", "max", "(", "x", ")", ",", "max", "(", "y", ")", ")", "\n", "line_source", ".", "data", "=", "dict", "(", "x", "=", "[", "line_min", ",", "line_max", "]", ",", "y", "=", "[", "line_min", ",", "line_max", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.update": [[402, 407], ["cartesian.select_embeddings", "cartesian.update_view"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.select_embeddings", "home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.update_view"], ["", "", "def", "update", "(", "attr", ",", "old", ",", "new", ")", ":", "\n", "    ", "global", "last_embeddings", "\n", "embeddings", "=", "select_embeddings", "(", ")", "\n", "last_embeddings", "=", "embeddings", "\n", "update_view", "(", "embeddings", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.update_items": [[409, 413], ["cartesian.update_view", "cartesian.select_embeddings"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.update_view", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.select_embeddings"], ["", "def", "update_items", "(", "attr", ",", "old", ",", "new", ")", ":", "\n", "    ", "global", "last_embeddings", "\n", "embeddings", "=", "last_embeddings", "if", "last_embeddings", "is", "not", "None", "else", "select_embeddings", "(", ")", "\n", "update_view", "(", "embeddings", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.update_dataset": [[415, 456], ["data_manager.get_size", "rank_slice.update", "data_manager.get_metadata_type", "data_manager.get_metadata_domain", "cartesian.build_controls", "cartesian.update", "len", "metadata_filters.pop", "metadata_filters.append", "hasattr", "hasattr", "bokeh.models.widgets.Select", "control.on_change", "control.on_change", "data_manager.get_size", "bokeh.models.RangeSlider", "sorted", "bokeh.models.MultiSelect", "list", "sorted", "bokeh.models.MultiSelect", "ValueError", "list"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_size", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata_type", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata_domain", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.build_controls", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_size"], ["", "def", "update_dataset", "(", "attr", ",", "old", ",", "new", ")", ":", "\n", "    ", "selected_dataset", "=", "dataset", ".", "value", "\n", "rank_slice", ".", "end", "=", "data_manager", ".", "get_size", "(", "selected_dataset", ")", "\n", "rank_slice", ".", "update", "(", "value", "=", "(", "1", ",", "data_manager", ".", "get_size", "(", "selected_dataset", ")", ")", ")", "\n", "\n", "metadata_type", "=", "data_manager", ".", "get_metadata_type", "(", "selected_dataset", ")", "\n", "metadata_domain", "=", "data_manager", ".", "get_metadata_domain", "(", "selected_dataset", ")", "\n", "\n", "while", "len", "(", "metadata_filters", ")", ">", "0", ":", "\n", "        ", "metadata_filters", ".", "pop", "(", ")", "\n", "", "for", "attribute", "in", "metadata_type", ":", "\n", "        ", "m_type", "=", "metadata_type", "[", "attribute", "]", "\n", "m_domain", "=", "metadata_domain", "[", "attribute", "]", "\n", "if", "m_type", "==", "'boolean'", ":", "\n", "            ", "filter", "=", "Select", "(", "title", "=", "attribute", ",", "value", "=", "\"Any\"", ",", "\n", "options", "=", "[", "\"Any\"", ",", "\"True\"", ",", "\"False\"", "]", ")", "\n", "", "elif", "m_type", "==", "'numerical'", ":", "\n", "            ", "filter", "=", "RangeSlider", "(", "start", "=", "m_domain", "[", "0", "]", ",", "end", "=", "m_domain", "[", "1", "]", ",", "\n", "value", "=", "m_domain", ",", "step", "=", "1", ",", "title", "=", "attribute", ")", "\n", "", "elif", "m_type", "==", "'categorical'", ":", "\n", "            ", "categories", "=", "sorted", "(", "list", "(", "metadata_domain", "[", "attribute", "]", ")", ")", "\n", "filter", "=", "MultiSelect", "(", "title", "=", "attribute", ",", "value", "=", "categories", ",", "\n", "options", "=", "categories", ")", "\n", "", "elif", "m_type", "==", "'set'", ":", "\n", "            ", "categories", "=", "sorted", "(", "list", "(", "metadata_domain", "[", "attribute", "]", ")", ")", "\n", "filter", "=", "MultiSelect", "(", "title", "=", "attribute", ",", "value", "=", "categories", ",", "\n", "options", "=", "categories", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Unsupported attribute type {} in metadata'", ".", "format", "(", "m_type", ")", ")", "\n", "", "metadata_filters", ".", "append", "(", "filter", ")", "\n", "\n", "", "for", "control", "in", "metadata_filters", ":", "\n", "        ", "if", "hasattr", "(", "control", ",", "'value'", ")", ":", "\n", "            ", "control", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "", "if", "hasattr", "(", "control", ",", "'active'", ")", ":", "\n", "            ", "control", ".", "on_change", "(", "'active'", ",", "update", ")", "\n", "\n", "", "", "inputs", ".", "children", "=", "build_controls", "(", ")", "\n", "\n", "update", "(", "attr", ",", "old", ",", "new", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.update_viz": [[458, 478], ["str", "int", "int", "int", "str", "str", "int", "int"], "function", ["None"], ["", "def", "update_viz", "(", "attr", ",", "old", ",", "new", ")", ":", "\n", "    ", "if", "opacity", ".", "value", "!=", "scatter", ".", "glyph", ".", "fill_alpha", ":", "\n", "        ", "scatter", ".", "glyph", ".", "fill_alpha", "=", "opacity", ".", "value", "\n", "\n", "", "new_axes_font_size", "=", "str", "(", "int", "(", "axes_font_size", ".", "value", ")", ")", "+", "'pt'", "\n", "plot", ".", "title", ".", "text_font_size", "=", "new_axes_font_size", "\n", "plot", ".", "xaxis", ".", "axis_label_text_font_size", "=", "new_axes_font_size", "\n", "plot", ".", "xaxis", ".", "major_label_text_font_size", "=", "new_axes_font_size", "\n", "plot", ".", "yaxis", ".", "axis_label_text_font_size", "=", "new_axes_font_size", "\n", "plot", ".", "yaxis", ".", "major_label_text_font_size", "=", "new_axes_font_size", "\n", "\n", "if", "args", ".", "labels", ":", "\n", "        ", "labels_annotations", ".", "text_alpha", "=", "int", "(", "\n", "show_labels", ".", "active", "==", "2", ")", "*", "labels_opacity", ".", "value", "\n", "labels_annotations_items", ".", "text_alpha", "=", "int", "(", "\n", "show_labels", ".", "active", "==", "1", "or", "show_labels", ".", "active", "==", "2", ")", "*", "labels_items_opacity", ".", "value", "\n", "labels_annotations", ".", "text_font_size", "=", "str", "(", "\n", "int", "(", "labels_font_size", ".", "value", ")", ")", "+", "'pt'", "\n", "labels_annotations_items", ".", "text_font_size", "=", "str", "(", "\n", "int", "(", "labels_font_size", ".", "value", ")", ")", "+", "'pt'", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.add_data_filter": [[480, 486], ["data_filters.append", "cartesian.build_data_filter", "data_filters.extend", "data_filters_groups.append", "cartesian.build_controls", "bokeh.models.Div"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.build_data_filter", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.build_controls"], ["", "", "def", "add_data_filter", "(", ")", ":", "\n", "    ", "data_filters", ".", "append", "(", "Div", "(", "text", "=", "\"<hr/>\"", ")", ")", "\n", "data_filter", "=", "build_data_filter", "(", ")", "\n", "data_filters", ".", "extend", "(", "data_filter", ")", "\n", "data_filters_groups", ".", "append", "(", "data_filter", ")", "\n", "inputs", ".", "children", "=", "build_controls", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.cartesian.build_controls": [[488, 524], ["dataset.on_change", "measure_1.on_change", "x_axis.on_change", "y_axis.on_change", "filtering_before_after_2.on_change", "projection_tab_panel.on_change", "items.on_change", "opacity.on_change", "axes_font_size.on_change", "rank_slice.on_change", "controls.append", "controls.insert", "show_labels.on_change", "controls.insert", "labels_font_size.on_change", "controls.insert", "labels_opacity.on_change", "controls.insert", "labels_items_opacity.on_change", "add_data_filter_button._callbacks.get", "add_data_filter_button.on_click", "hasattr", "hasattr", "control.on_change", "control.on_change"], "function", ["None"], ["", "def", "build_controls", "(", ")", ":", "\n", "    ", "controls", "=", "[", "dataset", ",", "projection_tab_panel", ",", "items", ",", "\n", "visualization_title", ",", "opacity", ",", "axes_font_size", ",", "\n", "filters_title", ",", "rank_slice", ",", "*", "metadata_filters", ",", "\n", "data_filters_title", ",", "*", "data_filters", "]", "\n", "\n", "dataset", ".", "on_change", "(", "'value'", ",", "update_dataset", ")", "\n", "measure_1", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "x_axis", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "y_axis", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "filtering_before_after_2", ".", "on_change", "(", "'active'", ",", "update", ")", "\n", "projection_tab_panel", ".", "on_change", "(", "'active'", ",", "update", ")", "\n", "items", ".", "on_change", "(", "'value'", ",", "update_items", ")", "\n", "opacity", ".", "on_change", "(", "'value'", ",", "update_viz", ")", "\n", "axes_font_size", ".", "on_change", "(", "'value'", ",", "update_viz", ")", "\n", "if", "args", ".", "labels", ":", "\n", "        ", "controls", ".", "insert", "(", "6", ",", "show_labels", ")", "\n", "show_labels", ".", "on_change", "(", "'active'", ",", "update_viz", ")", "\n", "controls", ".", "insert", "(", "7", ",", "labels_font_size", ")", "\n", "labels_font_size", ".", "on_change", "(", "'value'", ",", "update_viz", ")", "\n", "controls", ".", "insert", "(", "8", ",", "labels_opacity", ")", "\n", "labels_opacity", ".", "on_change", "(", "'value'", ",", "update_viz", ")", "\n", "controls", ".", "insert", "(", "9", ",", "labels_items_opacity", ")", "\n", "labels_items_opacity", ".", "on_change", "(", "'value'", ",", "update_viz", ")", "\n", "", "rank_slice", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "controls", ".", "append", "(", "add_data_filter_button", ")", "\n", "if", "not", "add_data_filter_button", ".", "_callbacks", ".", "get", "(", "'clicks'", ")", ":", "\n", "        ", "add_data_filter_button", ".", "on_click", "(", "add_data_filter", ")", "\n", "\n", "", "for", "control", "in", "metadata_filters", "+", "data_filters", ":", "\n", "        ", "if", "hasattr", "(", "control", ",", "'value'", ")", ":", "\n", "            ", "control", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "", "if", "hasattr", "(", "control", ",", "'active'", ")", ":", "\n", "            ", "control", ".", "on_change", "(", "'active'", ",", "update", ")", "\n", "\n", "", "", "return", "controls", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.build_data_filter": [[206, 228], ["bokeh.models.widgets.Select", "bokeh.models.widgets.TextInput", "bokeh.models.widgets.Select", "bokeh.models.widgets.TextInput", "bokeh.models.widgets.Select"], "function", ["None"], ["def", "build_data_filter", "(", ")", ":", "\n", "    ", "measure_cf", "=", "Select", "(", "options", "=", "[", "(", "'cosine_similarity'", ",", "'Cosine Similarity'", ")", ",", "\n", "(", "'cosine'", ",", "'Cosine Distance'", ")", ",", "\n", "(", "'euclidean'", ",", "'Euclidean'", ")", ",", "\n", "(", "'dot_product'", ",", "'Dot product'", ")", ",", "\n", "(", "'correlation'", ",", "'Correlation'", ")", ",", "\n", "]", ",", "\n", "value", "=", "'cosine_similarity'", ")", "\n", "formula_cf", "=", "TextInput", "(", "value", "=", "''", ",", "placeholder", "=", "\"formula\"", ")", "\n", "compare_cf", "=", "Select", "(", "options", "=", "[", "(", "'greater'", ",", "'>'", ")", ",", "\n", "(", "'greater_equal'", ",", "'\u2265'", ")", ",", "\n", "(", "'equal'", ",", "'='", ")", ",", "\n", "(", "'less_equal'", ",", "'\u2264'", ")", ",", "\n", "(", "'less'", ",", "'<'", ")", ",", "\n", "]", ",", "\n", "value", "=", "'greater'", ",", "width", "=", "20", ")", "\n", "value_cf", "=", "TextInput", "(", "value", "=", "''", ",", "placeholder", "=", "\"numeric value\"", ")", "\n", "dataset_cf", "=", "Select", "(", "title", "=", "\"Dataset\"", ",", "options", "=", "[", "'Both'", ",", "selected_dataset_1", ",", "\n", "selected_dataset_2", "]", ",", "\n", "value", "=", "'Both'", ")", "\n", "data_filter", "=", "[", "measure_cf", ",", "formula_cf", ",", "compare_cf", ",", "value_cf", ",", "dataset_cf", "]", "\n", "return", "data_filter", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.select_embeddings": [[246, 418], ["x_axis.value.strip", "y_axis.value.strip", "items.value.strip", "modules.api.projection", "modules.api.projection", "set().intersection", "difference_slider.on_change", "data_filter[].value.strip", "data_filter[].value.strip", "re.split", "int", "int", "int", "int", "set", "max", "len", "numpy.linalg.norm", "int", "int", "int", "int", "set", "modules.api.projection.keys", "numpy.linalg.norm", "difference_slider.update", "difference_slider.update", "metadata_filters_params_1.append", "metadata_filters_params_2.append", "float", "data_filters_params.append", "modules.api.projection.keys", "len", "int", "int", "metadata_filters_params_1.append", "set", "int", "int", "metadata_filters_params_2.append", "set", "print", "int", "int", "metadata_filters_params_1.append", "set", "int", "int", "metadata_filters_params_2.append", "set", "min", "len", "metadata_filters_params_1.append", "metadata_filters_params_2.append", "len", "len"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.api.projection", "home.repos.pwc.inspect_result.uber-research_parallax.modules.api.projection", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update"], ["", "def", "select_embeddings", "(", ")", ":", "\n", "    ", "x_axis_value", "=", "x_axis", ".", "value", ".", "strip", "(", ")", "\n", "y_axis_value", "=", "y_axis", ".", "value", ".", "strip", "(", ")", "\n", "if", "x_axis_value", "==", "''", "or", "y_axis_value", "==", "''", ":", "\n", "        ", "return", "{", "}", "\n", "", "else", ":", "\n", "        ", "metadata_filters_params_1", "=", "[", "]", "\n", "for", "metadata_filter", "in", "metadata_filters_1", ":", "\n", "            ", "if", "metadata_type_1", "[", "metadata_filter", ".", "title", "]", "==", "'boolean'", ":", "\n", "                ", "if", "metadata_filter", ".", "value", "!=", "'Any'", ":", "\n", "                    ", "metadata_filters_params_1", ".", "append", "(", "(", "metadata_filter", ".", "title", ",", "\n", "metadata_filter", ".", "value", "==", "'True'", ")", ")", "\n", "", "", "elif", "metadata_type_1", "[", "metadata_filter", ".", "title", "]", "==", "'numerical'", ":", "\n", "                ", "filter_value", "=", "(", "\n", "int", "(", "metadata_filter", ".", "value", "[", "0", "]", ")", ",", "\n", "int", "(", "metadata_filter", ".", "value", "[", "1", "]", ")", ")", "\n", "if", "filter_value", "!=", "(", "\n", "int", "(", "rank_slice_1", ".", "start", ")", ",", "int", "(", "rank_slice_1", ".", "end", ")", ")", ":", "\n", "                    ", "metadata_filters_params_1", ".", "append", "(", "\n", "(", "metadata_filter", ".", "title", ",", "filter_value", ")", ")", "\n", "", "", "elif", "metadata_type_1", "[", "metadata_filter", ".", "title", "]", "==", "'categorical'", ":", "\n", "                ", "filter_value", "=", "set", "(", "metadata_filter", ".", "value", ")", "\n", "if", "len", "(", "filter_value", ")", ">", "0", "and", "filter_value", "!=", "metadata_domain_1", "[", "\n", "metadata_filter", ".", "title", "]", ":", "\n", "                    ", "metadata_filters_params_1", ".", "append", "(", "\n", "(", "metadata_filter", ".", "title", ",", "filter_value", ")", ")", "\n", "", "", "elif", "metadata_type_1", "[", "metadata_filter", ".", "title", "]", "==", "'set'", ":", "\n", "                ", "filter_value", "=", "set", "(", "metadata_filter", ".", "value", ")", "\n", "if", "len", "(", "filter_value", ")", ">", "0", "and", "filter_value", "!=", "metadata_domain_1", "[", "\n", "metadata_filter", ".", "title", "]", ":", "\n", "                    ", "metadata_filters_params_1", ".", "append", "(", "\n", "(", "metadata_filter", ".", "title", ",", "filter_value", ")", ")", "\n", "\n", "", "", "", "metadata_filters_params_2", "=", "[", "]", "\n", "for", "metadata_filter", "in", "metadata_filters_2", ":", "\n", "            ", "if", "metadata_type_2", "[", "metadata_filter", ".", "title", "]", "==", "'boolean'", ":", "\n", "                ", "if", "metadata_filter", ".", "value", "!=", "'Any'", ":", "\n", "                    ", "metadata_filters_params_2", ".", "append", "(", "(", "metadata_filter", ".", "title", ",", "\n", "metadata_filter", ".", "value", "==", "'True'", ")", ")", "\n", "", "", "elif", "metadata_type_2", "[", "metadata_filter", ".", "title", "]", "==", "'numerical'", ":", "\n", "                ", "filter_value", "=", "(", "\n", "int", "(", "metadata_filter", ".", "value", "[", "0", "]", ")", ",", "\n", "int", "(", "metadata_filter", ".", "value", "[", "1", "]", ")", ")", "\n", "if", "filter_value", "!=", "(", "\n", "int", "(", "rank_slice_2", ".", "start", ")", ",", "int", "(", "rank_slice_2", ".", "end", ")", ")", ":", "\n", "                    ", "metadata_filters_params_2", ".", "append", "(", "\n", "(", "metadata_filter", ".", "title", ",", "filter_value", ")", ")", "\n", "", "", "elif", "metadata_type_2", "[", "metadata_filter", ".", "title", "]", "==", "'categorical'", ":", "\n", "                ", "filter_value", "=", "set", "(", "metadata_filter", ".", "value", ")", "\n", "if", "filter_value", "!=", "metadata_domain_2", "[", "metadata_filter", ".", "title", "]", ":", "\n", "                    ", "metadata_filters_params_2", ".", "append", "(", "\n", "(", "metadata_filter", ".", "title", ",", "filter_value", ")", ")", "\n", "", "", "elif", "metadata_type_2", "[", "metadata_filter", ".", "title", "]", "==", "'set'", ":", "\n", "                ", "filter_value", "=", "set", "(", "metadata_filter", ".", "value", ")", "\n", "if", "len", "(", "filter_value", ")", ">", "0", "and", "filter_value", "!=", "metadata_domain_2", "[", "\n", "metadata_filter", ".", "title", "]", ":", "\n", "                    ", "metadata_filters_params_2", ".", "append", "(", "\n", "(", "metadata_filter", ".", "title", ",", "filter_value", ")", ")", "\n", "\n", "", "", "", "data_filters_params", "=", "[", "]", "\n", "for", "data_filter", "in", "data_filters_groups", ":", "\n", "            ", "formula", "=", "data_filter", "[", "1", "]", ".", "value", ".", "strip", "(", ")", "\n", "number_value", "=", "data_filter", "[", "3", "]", ".", "value", ".", "strip", "(", ")", "\n", "if", "formula", "!=", "''", "and", "number_value", "!=", "''", ":", "\n", "                ", "measure_val", "=", "data_filter", "[", "0", "]", ".", "value", "\n", "compare_function", "=", "data_filter", "[", "2", "]", ".", "value", "\n", "try", ":", "\n", "                    ", "number", "=", "float", "(", "number_value", ")", "\n", "data_filters_params", ".", "append", "(", "{", "'measure'", ":", "measure_val", ",", "\n", "'formula'", ":", "formula", ",", "\n", "'compare_function'", ":", "compare_function", ",", "\n", "'number'", ":", "number", "}", ")", "\n", "", "except", ":", "\n", "                    ", "print", "(", "'invalid number value:'", ",", "number_value", ")", "\n", "\n", "", "", "", "items_list", "=", "[", "]", "\n", "items_val", "=", "items", ".", "value", ".", "strip", "(", ")", "\n", "if", "items_val", "!=", "''", ":", "\n", "            ", "items_list", "=", "re", ".", "split", "(", "\"\\s*;\\s*\"", ",", "items_val", ")", "\n", "\n", "", "mode", "=", "'explicit'", "\n", "metric", "=", "measure", ".", "value", "\n", "formulae", "=", "[", "x_axis_value", ",", "y_axis_value", "]", "\n", "pre_filtering", "=", "True", "\n", "post_filtering", "=", "False", "\n", "\n", "rank_slice_values_1", "=", "(", "\n", "int", "(", "rank_slice_1", ".", "value", "[", "0", "]", ")", ",", "int", "(", "rank_slice_1", ".", "value", "[", "1", "]", ")", ")", "\n", "if", "rank_slice_values_1", "==", "(", "\n", "int", "(", "rank_slice_1", ".", "start", ")", ",", "int", "(", "rank_slice_1", ".", "end", ")", ")", ":", "\n", "            ", "rank_slice_values_1", "=", "None", "\n", "\n", "", "rank_slice_values_2", "=", "(", "\n", "int", "(", "rank_slice_2", ".", "value", "[", "0", "]", ")", ",", "int", "(", "rank_slice_2", ".", "value", "[", "1", "]", ")", ")", "\n", "if", "rank_slice_values_2", "==", "(", "\n", "int", "(", "rank_slice_2", ".", "start", ")", ",", "int", "(", "rank_slice_2", ".", "end", ")", ")", ":", "\n", "            ", "rank_slice_values_2", "=", "None", "\n", "\n", "", "embeddings_1", "=", "projection", "(", "\n", "data_manager", ",", "\n", "dataset_id", "=", "dataset_1", ".", "value", ",", "\n", "data_filters", "=", "data_filters_params", ",", "\n", "metadata_filters", "=", "metadata_filters_params_1", ",", "\n", "mode", "=", "mode", ",", "\n", "rank_slice", "=", "rank_slice_values_1", ",", "\n", "metric", "=", "metric", ",", "\n", "n_axes", "=", "2", ",", "\n", "formulae", "=", "formulae", ",", "\n", "items", "=", "items_list", ",", "\n", "pre_filtering", "=", "pre_filtering", ",", "\n", "post_filtering", "=", "post_filtering", ",", "\n", ")", "\n", "\n", "embeddings_2", "=", "projection", "(", "\n", "data_manager", ",", "\n", "dataset_id", "=", "dataset_2", ".", "value", ",", "\n", "data_filters", "=", "data_filters_params", ",", "\n", "metadata_filters", "=", "metadata_filters_params_2", ",", "\n", "mode", "=", "mode", ",", "\n", "rank_slice", "=", "rank_slice_values_2", ",", "\n", "metric", "=", "metric", ",", "\n", "n_axes", "=", "2", ",", "\n", "formulae", "=", "formulae", ",", "\n", "items", "=", "items_list", ",", "\n", "pre_filtering", "=", "pre_filtering", ",", "\n", "post_filtering", "=", "post_filtering", ",", "\n", ")", "\n", "\n", "embeddings", "=", "{", "}", "\n", "common_keys", "=", "set", "(", "embeddings_1", ".", "keys", "(", ")", ")", ".", "intersection", "(", "\n", "set", "(", "embeddings_2", ".", "keys", "(", ")", ")", ")", "\n", "\n", "max_difference", "=", "0", "\n", "for", "key", "in", "common_keys", ":", "\n", "            ", "max_difference", "=", "max", "(", "max_difference", ",", "np", ".", "linalg", ".", "norm", "(", "\n", "embeddings_1", "[", "key", "]", "[", "'coords'", "]", "-", "embeddings_2", "[", "key", "]", "[", "'coords'", "]", ")", ")", "\n", "\n", "", "difference_slider", ".", "_callbacks", "[", "'value'", "]", "=", "[", "]", "\n", "old_end", "=", "difference_slider", ".", "end", "\n", "if", "max_difference", ">", "0", ":", "\n", "            ", "difference_slider", ".", "end", "=", "max_difference", "\n", "", "if", "len", "(", "common_keys", ")", ">", "0", ":", "\n", "            ", "if", "difference_slider", ".", "value", "[", "1", "]", "==", "old_end", ":", "\n", "                ", "difference_slider", ".", "update", "(", "\n", "value", "=", "(", "0", ",", "difference_slider", ".", "end", ")", ")", "\n", "", "else", ":", "\n", "                ", "difference_slider", ".", "update", "(", "\n", "value", "=", "(", "0", ",", "min", "(", "max_difference", ",", "difference_slider", ".", "value", "[", "1", "]", ")", ")", ")", "\n", "", "", "difference_slider", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "\n", "for", "key", "in", "common_keys", ":", "\n", "\n", "            ", "distance", "=", "np", ".", "linalg", ".", "norm", "(", "\n", "embeddings_1", "[", "key", "]", "[", "'coords'", "]", "-", "embeddings_2", "[", "key", "]", "[", "'coords'", "]", ")", "\n", "slope", "=", "(", "embeddings_2", "[", "key", "]", "[", "'coords'", "]", "[", "1", "]", "-", "\n", "embeddings_1", "[", "key", "]", "[", "'coords'", "]", "[", "1", "]", ")", "/", "(", "embeddings_2", "[", "key", "]", "[", "'coords'", "]", "[", "0", "]", "-", "\n", "embeddings_1", "[", "key", "]", "[", "'coords'", "]", "[", "0", "]", ")", "\n", "\n", "if", "distance", ">=", "difference_slider", ".", "value", "[", "0", "]", "and", "distance", "<=", "difference_slider", ".", "value", "[", "1", "]", "and", "slope", ">=", "slope_slider", ".", "value", "[", "0", "]", "and", "slope", "<=", "slope_slider", ".", "value", "[", "1", "]", ":", "\n", "                ", "if", "len", "(", "items_list", ")", "==", "0", ":", "\n", "                    ", "embeddings", "[", "key", "]", "=", "{", "'coords_1'", ":", "embeddings_1", "[", "key", "]", "[", "'coords'", "]", ",", "\n", "'coords_2'", ":", "embeddings_2", "[", "key", "]", "[", "'coords'", "]", "}", "\n", "", "else", ":", "\n", "                    ", "if", "key", "in", "items_list", ":", "\n", "                        ", "embeddings", "[", "key", "]", "=", "{", "\n", "'coords_1'", ":", "embeddings_1", "[", "key", "]", "[", "'coords'", "]", ",", "\n", "'coords_2'", ":", "embeddings_2", "[", "key", "]", "[", "'coords'", "]", "}", "\n", "", "", "", "", "return", "embeddings", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update": [[420, 487], ["comparison.select_embeddings", "items.value.strip", "set", "select_embeddings.items", "dict", "dict", "dict", "measure.value.split", "len", "re.split", "x0.append", "y0.append", "x1.append", "y1.append", "max", "labels.append", "colors.append", "colors_1.append", "colors_2.append", "len", "min", "max", "dict", "items.value.strip", "numpy.linalg.norm", "min", "min", "min", "min", "max", "max", "max", "max", "len", "len"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.select_embeddings"], ["", "", "def", "update", "(", "attr", ",", "old", ",", "new", ")", ":", "\n", "    ", "embeddings", "=", "select_embeddings", "(", ")", "\n", "\n", "plot", ".", "xaxis", ".", "axis_label", "=", "x_axis", ".", "value", "\n", "plot", ".", "yaxis", ".", "axis_label", "=", "y_axis", ".", "value", "\n", "\n", "measure_name", "=", "' '", ".", "join", "(", "measure", ".", "value", ".", "split", "(", "'_'", ")", ")", "\n", "plot", ".", "title", ".", "text", "=", "\"{} embeddings selected, {} measure\"", ".", "format", "(", "\n", "len", "(", "embeddings", ")", ",", "measure_name", ")", "\n", "\n", "items_list", "=", "[", "]", "\n", "items_val", "=", "items", ".", "value", ".", "strip", "(", ")", "\n", "if", "items_val", "!=", "''", ":", "\n", "        ", "items_list", "=", "re", ".", "split", "(", "\"\\s*;\\s*\"", ",", "items", ".", "value", ".", "strip", "(", ")", ")", "\n", "", "highlight_items", "=", "set", "(", "items_list", ")", "\n", "\n", "max_difference", "=", "0", "\n", "x0", "=", "[", "]", "\n", "y0", "=", "[", "]", "\n", "x1", "=", "[", "]", "\n", "y1", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "colors", "=", "[", "]", "\n", "colors_1", "=", "[", "]", "\n", "colors_2", "=", "[", "]", "\n", "for", "label", ",", "emb_dict", "in", "embeddings", ".", "items", "(", ")", ":", "\n", "        ", "x0", ".", "append", "(", "emb_dict", "[", "'coords_1'", "]", "[", "0", "]", ")", "\n", "y0", ".", "append", "(", "emb_dict", "[", "'coords_1'", "]", "[", "1", "]", ")", "\n", "x1", ".", "append", "(", "emb_dict", "[", "'coords_2'", "]", "[", "0", "]", ")", "\n", "y1", ".", "append", "(", "emb_dict", "[", "'coords_2'", "]", "[", "1", "]", ")", "\n", "max_difference", "=", "max", "(", "max_difference", ",", "np", ".", "linalg", ".", "norm", "(", "\n", "emb_dict", "[", "'coords_1'", "]", "-", "emb_dict", "[", "'coords_2'", "]", ")", ")", "\n", "labels", ".", "append", "(", "label", ")", "\n", "colors", ".", "append", "(", "\n", "highlight_segment_color", "if", "label", "in", "highlight_items", "else", "default_segment_color", ")", "\n", "colors_1", ".", "append", "(", "\n", "highlight_color_1", "if", "label", "in", "highlight_items", "else", "default_color_1", ")", "\n", "colors_2", ".", "append", "(", "\n", "highlight_color_2", "if", "label", "in", "highlight_items", "else", "default_color_2", ")", "\n", "\n", "", "source", ".", "data", "=", "dict", "(", "\n", "x0", "=", "x0", ",", "\n", "y0", "=", "y0", ",", "\n", "x1", "=", "x1", ",", "\n", "y1", "=", "y1", ",", "\n", "color", "=", "colors", ",", "\n", "label", "=", "labels", ",", "\n", ")", "\n", "source_1", ".", "data", "=", "dict", "(", "\n", "x", "=", "x0", ",", "\n", "y", "=", "y0", ",", "\n", "color", "=", "colors_1", ",", "\n", "label", "=", "labels", ",", "\n", "legend", "=", "[", "selected_dataset_1", "]", "*", "len", "(", "labels", ")", "\n", ")", "\n", "source_2", ".", "data", "=", "dict", "(", "\n", "x", "=", "x1", ",", "\n", "y", "=", "y1", ",", "\n", "color", "=", "colors_2", ",", "\n", "label", "=", "labels", ",", "\n", "legend", "=", "[", "selected_dataset_2", "]", "*", "len", "(", "labels", ")", "\n", ")", "\n", "\n", "if", "len", "(", "embeddings", ")", ">", "0", ":", "\n", "        ", "line_min", "=", "min", "(", "min", "(", "x0", ")", ",", "min", "(", "y0", ")", ",", "min", "(", "x1", ")", ",", "min", "(", "y1", ")", ")", "\n", "line_max", "=", "max", "(", "max", "(", "x0", ")", ",", "max", "(", "y0", ")", ",", "max", "(", "x1", ")", ",", "max", "(", "y1", ")", ")", "\n", "line_source", ".", "data", "=", "dict", "(", "x", "=", "[", "line_min", ",", "line_max", "]", ",", "y", "=", "[", "line_min", ",", "line_max", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update_dataset": [[489, 572], ["data_manager.get_size", "rank_slice_1.update", "data_manager.get_metadata_type", "data_manager.get_metadata_domain", "data_manager.get_size", "rank_slice_2.update", "data_manager.get_metadata_type", "data_manager.get_metadata_domain", "comparison.build_controls", "comparison.update", "len", "metadata_filters_1.pop", "metadata_filters_1.append", "len", "metadata_filters_2.pop", "metadata_filters_2.append", "df_group[].update", "hasattr", "hasattr", "bokeh.models.widgets.Select", "bokeh.models.widgets.Select", "df_group[].update", "control.on_change", "control.on_change", "data_manager.get_size", "bokeh.models.RangeSlider", "data_manager.get_size", "bokeh.models.RangeSlider", "sorted", "bokeh.models.MultiSelect", "sorted", "bokeh.models.MultiSelect", "list", "sorted", "bokeh.models.MultiSelect", "ValueError", "list", "sorted", "bokeh.models.MultiSelect", "ValueError", "list", "list"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_size", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata_type", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata_domain", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_size", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata_type", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata_domain", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.build_controls", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_size", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_size"], ["", "", "def", "update_dataset", "(", "attr", ",", "old", ",", "new", ")", ":", "\n", "# Dataset 1", "\n", "    ", "global", "selected_dataset_1", "\n", "selected_dataset_1", "=", "dataset_1", ".", "value", "\n", "rank_slice_1", ".", "end", "=", "data_manager", ".", "get_size", "(", "selected_dataset_1", ")", "\n", "rank_slice_1", ".", "update", "(", "value", "=", "(", "1", ",", "data_manager", ".", "get_size", "(", "selected_dataset_1", ")", ")", ")", "\n", "\n", "metadata_type_1", "=", "data_manager", ".", "get_metadata_type", "(", "selected_dataset_1", ")", "\n", "metadata_domain_1", "=", "data_manager", ".", "get_metadata_domain", "(", "selected_dataset_1", ")", "\n", "\n", "while", "len", "(", "metadata_filters_1", ")", ">", "0", ":", "\n", "        ", "metadata_filters_1", ".", "pop", "(", ")", "\n", "", "for", "attribute", "in", "metadata_type_1", ":", "\n", "        ", "m_type", "=", "metadata_type_1", "[", "attribute", "]", "\n", "m_domain", "=", "metadata_domain_1", "[", "attribute", "]", "\n", "if", "m_type", "==", "'boolean'", ":", "\n", "            ", "filter", "=", "Select", "(", "title", "=", "attribute", ",", "value", "=", "\"Any\"", ",", "\n", "options", "=", "[", "\"Any\"", ",", "\"True\"", ",", "\"False\"", "]", ")", "\n", "", "elif", "m_type", "==", "'numerical'", ":", "\n", "            ", "filter", "=", "RangeSlider", "(", "start", "=", "m_domain", "[", "0", "]", ",", "end", "=", "m_domain", "[", "1", "]", ",", "\n", "value", "=", "m_domain", ",", "step", "=", "1", ",", "title", "=", "attribute", ")", "\n", "", "elif", "m_type", "==", "'categorical'", ":", "\n", "            ", "categories", "=", "sorted", "(", "list", "(", "metadata_domain_1", "[", "attribute", "]", ")", ")", "\n", "filter", "=", "MultiSelect", "(", "title", "=", "attribute", ",", "value", "=", "categories", ",", "\n", "options", "=", "categories", ")", "\n", "", "elif", "m_type", "==", "'set'", ":", "\n", "            ", "categories", "=", "sorted", "(", "list", "(", "metadata_domain_1", "[", "attribute", "]", ")", ")", "\n", "filter", "=", "MultiSelect", "(", "title", "=", "attribute", ",", "value", "=", "categories", ",", "\n", "options", "=", "categories", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Unsupported attribute type {} in metadata'", ".", "format", "(", "m_type", ")", ")", "\n", "", "metadata_filters_1", ".", "append", "(", "filter", ")", "\n", "\n", "# Dataset 2", "\n", "", "global", "selected_dataset_2", "\n", "selected_dataset_2", "=", "dataset_2", ".", "value", "\n", "rank_slice_2", ".", "end", "=", "data_manager", ".", "get_size", "(", "selected_dataset_2", ")", "\n", "rank_slice_2", ".", "update", "(", "value", "=", "(", "1", ",", "data_manager", ".", "get_size", "(", "selected_dataset_2", ")", ")", ")", "\n", "\n", "metadata_type_2", "=", "data_manager", ".", "get_metadata_type", "(", "selected_dataset_2", ")", "\n", "metadata_domain_2", "=", "data_manager", ".", "get_metadata_domain", "(", "selected_dataset_2", ")", "\n", "\n", "while", "len", "(", "metadata_filters_2", ")", ">", "0", ":", "\n", "        ", "metadata_filters_2", ".", "pop", "(", ")", "\n", "", "for", "attribute", "in", "metadata_type_2", ":", "\n", "        ", "m_type", "=", "metadata_type_2", "[", "attribute", "]", "\n", "m_domain", "=", "metadata_domain_2", "[", "attribute", "]", "\n", "if", "m_type", "==", "'boolean'", ":", "\n", "            ", "filter", "=", "Select", "(", "title", "=", "attribute", ",", "value", "=", "\"Any\"", ",", "\n", "options", "=", "[", "\"Any\"", ",", "\"True\"", ",", "\"False\"", "]", ")", "\n", "", "elif", "m_type", "==", "'numerical'", ":", "\n", "            ", "filter", "=", "RangeSlider", "(", "start", "=", "m_domain", "[", "0", "]", ",", "end", "=", "m_domain", "[", "1", "]", ",", "\n", "value", "=", "m_domain", ",", "step", "=", "1", ",", "title", "=", "attribute", ")", "\n", "", "elif", "m_type", "==", "'categorical'", ":", "\n", "            ", "categories", "=", "sorted", "(", "list", "(", "metadata_domain_2", "[", "attribute", "]", ")", ")", "\n", "filter", "=", "MultiSelect", "(", "title", "=", "attribute", ",", "value", "=", "categories", ",", "\n", "options", "=", "categories", ")", "\n", "", "elif", "m_type", "==", "'set'", ":", "\n", "            ", "categories", "=", "sorted", "(", "list", "(", "metadata_domain_2", "[", "attribute", "]", ")", ")", "\n", "filter", "=", "MultiSelect", "(", "title", "=", "attribute", ",", "value", "=", "categories", ",", "\n", "options", "=", "categories", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Unsupported attribute type {} in metadata'", ".", "format", "(", "m_type", ")", ")", "\n", "", "metadata_filters_2", ".", "append", "(", "filter", ")", "\n", "\n", "", "for", "df_group", "in", "data_filters_groups", ":", "\n", "        ", "df_group", "[", "4", "]", ".", "update", "(", "\n", "options", "=", "[", "'Both'", ",", "selected_dataset_1", ",", "selected_dataset_2", "]", ")", "\n", "if", "df_group", "[", "4", "]", ".", "value", "not", "in", "[", "'Both'", ",", "selected_dataset_1", ",", "\n", "selected_dataset_2", "]", ":", "\n", "            ", "df_group", "[", "4", "]", ".", "update", "(", "value", "=", "'Both'", ")", "\n", "\n", "", "", "for", "control", "in", "metadata_filters_1", "+", "metadata_filters_2", ":", "\n", "        ", "if", "hasattr", "(", "control", ",", "'value'", ")", ":", "\n", "            ", "control", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "", "if", "hasattr", "(", "control", ",", "'active'", ")", ":", "\n", "            ", "control", ".", "on_change", "(", "'active'", ",", "update", ")", "\n", "\n", "", "", "inputs", ".", "children", "=", "build_controls", "(", ")", "\n", "\n", "update", "(", "attr", ",", "old", ",", "new", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update_viz": [[574, 594], ["str", "int", "int", "int", "str", "str", "int", "int"], "function", ["None"], ["", "def", "update_viz", "(", "attr", ",", "old", ",", "new", ")", ":", "\n", "    ", "if", "opacity", ".", "value", "!=", "scatter_1", ".", "glyph", ".", "fill_alpha", ":", "\n", "        ", "scatter_1", ".", "glyph", ".", "fill_alpha", "=", "opacity", ".", "value", "\n", "scatter_2", ".", "glyph", ".", "fill_alpha", "=", "opacity", ".", "value", "\n", "segments", ".", "line_alpha", "=", "opacity", ".", "value", "\n", "\n", "", "new_axes_font_size", "=", "str", "(", "int", "(", "axes_font_size", ".", "value", ")", ")", "+", "'pt'", "\n", "plot", ".", "title", ".", "text_font_size", "=", "new_axes_font_size", "\n", "plot", ".", "xaxis", ".", "axis_label_text_font_size", "=", "new_axes_font_size", "\n", "plot", ".", "xaxis", ".", "major_label_text_font_size", "=", "new_axes_font_size", "\n", "plot", ".", "yaxis", ".", "axis_label_text_font_size", "=", "new_axes_font_size", "\n", "plot", ".", "yaxis", ".", "major_label_text_font_size", "=", "new_axes_font_size", "\n", "\n", "if", "args", ".", "labels", ":", "\n", "        ", "labels_annotations_1", ".", "text_alpha", "=", "int", "(", "show_labels", ".", "value", "==", "'True'", ")", "\n", "labels_annotations_1", ".", "text_font_size", "=", "str", "(", "\n", "int", "(", "labels_font_size", ".", "value", ")", ")", "+", "'pt'", "\n", "labels_annotations_2", ".", "text_alpha", "=", "int", "(", "show_labels", ".", "value", "==", "'True'", ")", "\n", "labels_annotations_2", ".", "text_font_size", "=", "str", "(", "\n", "int", "(", "labels_font_size", ".", "value", ")", ")", "+", "'pt'", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.add_data_filter": [[596, 602], ["data_filters.append", "comparison.build_data_filter", "data_filters.extend", "data_filters_groups.append", "comparison.build_controls", "bokeh.models.Div"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.build_data_filter", "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.build_controls"], ["", "", "def", "add_data_filter", "(", ")", ":", "\n", "    ", "data_filters", ".", "append", "(", "Div", "(", "text", "=", "\"<hr/>\"", ")", ")", "\n", "data_filter", "=", "build_data_filter", "(", ")", "\n", "data_filters", ".", "extend", "(", "data_filter", ")", "\n", "data_filters_groups", ".", "append", "(", "data_filter", ")", "\n", "inputs", ".", "children", "=", "build_controls", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.build_controls": [[604, 640], ["dataset_1.on_change", "dataset_2.on_change", "measure.on_change", "x_axis.on_change", "y_axis.on_change", "items.on_change", "opacity.on_change", "axes_font_size.on_change", "rank_slice_1.on_change", "rank_slice_2.on_change", "difference_slider.on_change", "slope_slider.on_change", "controls.append", "controls.insert", "show_labels.on_change", "controls.insert", "labels_font_size.on_change", "add_data_filter_button._callbacks.get", "add_data_filter_button.on_click", "hasattr", "hasattr", "control.on_change", "control.on_change"], "function", ["None"], ["", "def", "build_controls", "(", ")", ":", "\n", "    ", "controls", "=", "[", "dataset_1", ",", "dataset_2", ",", "measure", ",", "x_axis", ",", "y_axis", ",", "items", ",", "\n", "visualization_title", ",", "opacity", ",", "axes_font_size", ",", "\n", "metadata_filters_title_1", ",", "rank_slice_1", ",", "*", "metadata_filters_1", ",", "\n", "metadata_filters_title_2", ",", "rank_slice_2", ",", "*", "metadata_filters_2", ",", "\n", "data_filters_title", ",", "difference_slider", ",", "slope_slider", ",", "\n", "*", "data_filters", "]", "\n", "\n", "dataset_1", ".", "on_change", "(", "'value'", ",", "update_dataset", ")", "\n", "dataset_2", ".", "on_change", "(", "'value'", ",", "update_dataset", ")", "\n", "measure", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "x_axis", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "y_axis", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "items", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "opacity", ".", "on_change", "(", "'value'", ",", "update_viz", ")", "\n", "axes_font_size", ".", "on_change", "(", "'value'", ",", "update_viz", ")", "\n", "if", "args", ".", "labels", ":", "\n", "        ", "controls", ".", "insert", "(", "9", ",", "show_labels", ")", "\n", "show_labels", ".", "on_change", "(", "'value'", ",", "update_viz", ")", "\n", "controls", ".", "insert", "(", "10", ",", "labels_font_size", ")", "\n", "labels_font_size", ".", "on_change", "(", "'value'", ",", "update_viz", ")", "\n", "", "rank_slice_1", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "rank_slice_2", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "difference_slider", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "slope_slider", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "controls", ".", "append", "(", "add_data_filter_button", ")", "\n", "if", "not", "add_data_filter_button", ".", "_callbacks", ".", "get", "(", "'clicks'", ")", ":", "\n", "        ", "add_data_filter_button", ".", "on_click", "(", "add_data_filter", ")", "\n", "\n", "", "for", "control", "in", "metadata_filters_1", "+", "metadata_filters_2", "+", "data_filters", ":", "\n", "        ", "if", "hasattr", "(", "control", ",", "'value'", ")", ":", "\n", "            ", "control", ".", "on_change", "(", "'value'", ",", "update", ")", "\n", "", "if", "hasattr", "(", "control", ",", "'active'", ")", ":", "\n", "            ", "control", ".", "on_change", "(", "'active'", ",", "update", ")", "\n", "\n", "", "", "return", "controls", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.format_utils.ordered_dict_to_table": [[14, 27], ["table.append", "val.item", "numpy.round"], "function", ["None"], ["def", "ordered_dict_to_table", "(", "embeddings", ")", ":", "\n", "    ", "\"\"\"\n    change the format (ordered_dict) of the embeddings to a list of list representation\n    change numpy float value to native python float value for serialization\n    \"\"\"", "\n", "table", "=", "[", "]", "\n", "if", "not", "embeddings", ":", "\n", "        ", "return", "table", "\n", "\n", "", "for", "word", "in", "embeddings", ":", "\n", "        ", "table", ".", "append", "(", "[", "word", "]", "+", "[", "val", ".", "item", "(", ")", "for", "val", "in", "np", ".", "round", "(", "embeddings", "[", "word", "]", ",", "decimals", "=", "float_precision", ")", "]", ")", "\n", "\n", "", "return", "table", "\n", "", ""]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.__init__": [[19, 39], ["Exception", "print", "data_manager.DataManager._load_dataset", "print", "len", "dataset.get"], "methods", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager._load_dataset"], ["    ", "def", "__init__", "(", "self", ",", "datasets", ",", "top_k", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"\n        wordVectors is a sorted dict of words with its coordinates\n        wordMetadata is a dict of words with associated metadata\n        \"\"\"", "\n", "# self.embeddings = OrderedDict()", "\n", "# self.embeddings_metadata = {}", "\n", "# self.embeddings_metadata_type = {}", "\n", "if", "not", "datasets", "or", "len", "(", "datasets", ")", "==", "0", ":", "\n", "            ", "raise", "Exception", "(", "\"error: invalid datasets\"", ")", "\n", "\n", "", "self", ".", "embeddings_data", "=", "{", "}", "\n", "for", "dataset", "in", "datasets", ":", "\n", "            ", "print", "(", "'Loading dataset'", ",", "dataset", "[", "'name'", "]", ")", "\n", "self", ".", "embeddings_data", "[", "dataset", "[", "'name'", "]", "]", "=", "self", ".", "_load_dataset", "(", "\n", "dataset", "[", "\"embeddings_file\"", "]", ",", "\n", "dataset", ".", "get", "(", "\"metadata_file\"", ",", "None", ")", ",", "top_k", ")", "\n", "print", "(", ")", "\n", "\n", "", "self", ".", "dataset_ids", "=", "[", "dataset", "[", "'name'", "]", "for", "dataset", "in", "datasets", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager._load_dataset": [[40, 151], ["collections.OrderedDict", "open", "open", "enumerate", "f.readline", "open", "json.load", "embeddings_metadata_type.items", "print", "print", "print", "print", "len", "f.readline.split", "numpy.array", "f.readline.split", "len", "print", "metadata[].items", "print", "len", "float", "set", "set", "set", "print", "min", "max", "embeddings_metadata_domain[].add", "embeddings_metadata_domain[].add", "set", "embeddings_metadata_domain[].update", "print"], "methods", ["home.repos.pwc.inspect_result.uber-research_parallax.None.comparison.update"], ["", "def", "_load_dataset", "(", "self", ",", "embeddings_file", ",", "metadata_file", ",", "top_k", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"load txt file, each line contains a word vector with the format: word dim1 dim2 ...\"\"\"", "\n", "\n", "embeddings", "=", "OrderedDict", "(", ")", "\n", "embeddings_metadata", "=", "{", "}", "\n", "embeddings_metadata_type", "=", "{", "}", "\n", "embeddings_metadata_domain", "=", "{", "}", "\n", "embedding_size", "=", "0", "\n", "\n", "# collect embeddings size assuming the first line is correct", "\n", "with", "open", "(", "embeddings_file", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "            ", "found_line", "=", "False", "\n", "while", "not", "found_line", ":", "\n", "                ", "line", "=", "f", ".", "readline", "(", ")", "\n", "if", "line", ":", "\n", "                    ", "embedding_size", "=", "len", "(", "line", ".", "split", "(", ")", ")", "-", "1", "\n", "found_line", "=", "True", "\n", "\n", "# collect embeddings", "\n", "", "", "", "with", "open", "(", "embeddings_file", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "            ", "for", "line_number", ",", "line", "in", "enumerate", "(", "f", ")", ":", "\n", "                ", "if", "top_k", "!=", "-", "1", "and", "line_number", ">=", "top_k", ":", "\n", "                    ", "break", "\n", "", "if", "line", ":", "\n", "                    ", "try", ":", "\n", "                        ", "split", "=", "line", ".", "split", "(", ")", "\n", "if", "len", "(", "split", ")", "!=", "embedding_size", "+", "1", ":", "\n", "                            ", "raise", "ValueError", "\n", "", "word", "=", "split", "[", "0", "]", "\n", "embedding", "=", "np", ".", "array", "(", "\n", "[", "float", "(", "val", ")", "for", "val", "in", "split", "[", "-", "embedding_size", ":", "]", "]", "\n", ")", "\n", "embeddings", "[", "word", "]", "=", "embedding", "\n", "", "except", "ValueError", ":", "\n", "                        ", "print", "(", "\n", "'Line {} in the GloVe file {} is malformed, '", "\n", "'skipping it'", ".", "format", "(", "\n", "line_number", ",", "embeddings_file", "\n", ")", "\n", ")", "\n", "\n", "", "", "", "", "if", "metadata_file", "is", "not", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "with", "open", "(", "metadata_file", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "file", ":", "\n", "                    ", "data", "=", "json", ".", "load", "(", "file", ")", "\n", "embeddings_metadata_type", "=", "data", "[", "\"types\"", "]", "\n", "metadata", "=", "data", "[", "\"values\"", "]", "\n", "\n", "# init domain", "\n", "for", "attribute", ",", "attribute_type", "in", "embeddings_metadata_type", ".", "items", "(", ")", ":", "\n", "                        ", "if", "attribute_type", "==", "\"numerical\"", ":", "\n", "                            ", "embeddings_metadata_domain", "[", "attribute", "]", "=", "[", "1e12", ",", "\n", "-", "1e12", "]", "\n", "", "elif", "attribute_type", "==", "\"categorical\"", ":", "\n", "                            ", "embeddings_metadata_domain", "[", "attribute", "]", "=", "set", "(", ")", "\n", "", "elif", "attribute_type", "==", "\"boolean\"", ":", "\n", "                            ", "embeddings_metadata_domain", "[", "attribute", "]", "=", "set", "(", ")", "\n", "", "elif", "attribute_type", "==", "\"set\"", ":", "\n", "                            ", "embeddings_metadata_domain", "[", "attribute", "]", "=", "set", "(", ")", "\n", "", "else", ":", "\n", "                            ", "print", "(", "\"attribute type: {} not supported yet\"", ".", "format", "(", "\n", "attribute_type", ")", ")", "\n", "\n", "", "", "for", "embedding", "in", "embeddings", ":", "\n", "                        ", "if", "embedding", "in", "metadata", ":", "\n", "                            ", "embeddings_metadata", "[", "embedding", "]", "=", "metadata", "[", "embedding", "]", "\n", "# update domain", "\n", "for", "attribute", ",", "value", "in", "metadata", "[", "embedding", "]", ".", "items", "(", ")", ":", "\n", "                                ", "attribute_type", "=", "embeddings_metadata_type", "[", "\n", "attribute", "]", "\n", "if", "attribute_type", "==", "\"numerical\"", ":", "\n", "                                    ", "embeddings_metadata_domain", "[", "attribute", "]", "=", "[", "\n", "min", "(", "embeddings_metadata_domain", "[", "\n", "attribute", "]", "[", "0", "]", ",", "value", ")", ",", "\n", "max", "(", "embeddings_metadata_domain", "[", "\n", "attribute", "]", "[", "1", "]", ",", "value", ")", "\n", "]", "\n", "", "elif", "attribute_type", "==", "\"categorical\"", ":", "\n", "                                    ", "embeddings_metadata_domain", "[", "attribute", "]", ".", "add", "(", "\n", "value", ")", "\n", "", "elif", "attribute_type", "==", "\"boolean\"", ":", "\n", "                                    ", "embeddings_metadata_domain", "[", "attribute", "]", ".", "add", "(", "\n", "value", ")", "\n", "", "elif", "attribute_type", "==", "\"set\"", ":", "\n", "                                    ", "value", "=", "set", "(", "value", ")", "\n", "embeddings_metadata", "[", "embedding", "]", "[", "\n", "attribute", "]", "=", "value", "\n", "embeddings_metadata_domain", "[", "\n", "attribute", "]", ".", "update", "(", "value", ")", "\n", "", "else", ":", "\n", "                                    ", "print", "(", "\n", "\"Metadata attribute type not supported\"", ")", "\n", "", "", "", "else", ":", "\n", "                            ", "print", "(", "\n", "\"Cannot find the metadata of embedding {} in file: {}\"", ".", "format", "(", "\n", "embedding", ",", "metadata_file", ")", ")", "\n", "\n", "", "", "print", "(", "\n", "\"Metadata of {} embeddings loaded in memory from file: {}\"", ".", "format", "(", "\n", "len", "(", "embeddings_metadata", ")", ",", "\n", "metadata_file", ")", ")", "\n", "print", "(", "'Metadata type:'", ",", "embeddings_metadata_type", ")", "\n", "print", "(", "'Metadata domain:'", ",", "embeddings_metadata_domain", ")", "\n", "", "", "except", "FileNotFoundError", ":", "\n", "                ", "print", "(", "'File {} not found, skipping loagind metadata'", ")", "\n", "\n", "", "", "return", "{", "\n", "\"embeddings\"", ":", "embeddings", ",", "\n", "\"embeddings_metadata\"", ":", "embeddings_metadata", ",", "\n", "\"embeddings_metadata_type\"", ":", "embeddings_metadata_type", ",", "\n", "\"embeddings_metadata_domain\"", ":", "embeddings_metadata_domain", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_embeddings": [[153, 155], ["None"], "methods", ["None"], ["", "def", "get_embeddings", "(", "self", ",", "dataset_id", ")", ":", "\n", "        ", "return", "self", ".", "embeddings_data", "[", "dataset_id", "]", "[", "\"embeddings\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata": [[156, 158], ["None"], "methods", ["None"], ["", "def", "get_metadata", "(", "self", ",", "dataset_id", ")", ":", "\n", "        ", "return", "self", ".", "embeddings_data", "[", "dataset_id", "]", "[", "\"embeddings_metadata\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata_type": [[159, 161], ["None"], "methods", ["None"], ["", "def", "get_metadata_type", "(", "self", ",", "dataset_id", ")", ":", "\n", "        ", "return", "self", ".", "embeddings_data", "[", "dataset_id", "]", "[", "\"embeddings_metadata_type\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata_domain": [[162, 164], ["None"], "methods", ["None"], ["", "def", "get_metadata_domain", "(", "self", ",", "dataset_id", ")", ":", "\n", "        ", "return", "self", ".", "embeddings_data", "[", "dataset_id", "]", "[", "\"embeddings_metadata_domain\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_size": [[165, 167], ["len"], "methods", ["None"], ["", "def", "get_size", "(", "self", ",", "dataset_id", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "embeddings_data", "[", "dataset_id", "]", "[", "\"embeddings\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_num_datasets": [[168, 170], ["len"], "methods", ["None"], ["", "def", "get_num_datasets", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "embeddings_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_attribute": [[15, 71], ["Exception", "isinstance", "isinstance", "print", "type", "isinstance", "isinstance", "Exception", "Exception", "Exception", "attribute_value.lower.lower", "Exception", "len", "len", "len", "len", "str().lower", "val.intersection", "str"], "function", ["None"], ["def", "filter_by_attribute", "(", "metadata_obj", ",", "metadata_type", ",", "attribute_name", ",", "attribute_value", ")", ":", "\n", "    ", "\"\"\"\n    three types of metadata attributes:\n    1) boolean (value: true or false)\n    2) numerical (value: list [min, max])\n    3) categorical (value: list [cate1, cate2 ...])\n\n    metadata_obj: {\"len\", 3, \"stopword\": False} (for each instance)\n    metadata_type: {\"len\", 3, \"stopword\": False} (defines the data type of attributes globally)\n    \"\"\"", "\n", "try", ":", "\n", "        ", "if", "attribute_name", "not", "in", "metadata_obj", ":", "\n", "            ", "raise", "Exception", "(", "\"attribute_name does not exist\"", ")", "\n", "\n", "", "attr_type", "=", "metadata_type", "[", "attribute_name", "]", "\n", "val", "=", "metadata_obj", "[", "attribute_name", "]", "\n", "\n", "if", "attr_type", "==", "'boolean'", ":", "\n", "            ", "if", "type", "(", "attribute_value", ")", "==", "bool", ":", "\n", "                ", "return", "attribute_value", "==", "val", "\n", "", "elif", "isinstance", "(", "attribute_value", ",", "str", ")", ":", "\n", "                ", "attribute_value", "=", "attribute_value", ".", "lower", "(", ")", "\n", "if", "attribute_value", "==", "'any'", ":", "\n", "                    ", "return", "True", "\n", "", "else", ":", "\n", "                    ", "return", "attribute_value", "==", "str", "(", "val", ")", ".", "lower", "(", ")", "\n", "", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "\"invalid boolean format\"", ")", "\n", "\n", "", "", "if", "attr_type", "==", "'numerical'", ":", "\n", "            ", "if", "isinstance", "(", "attribute_value", ",", "(", "list", ",", "tuple", ")", ")", "and", "len", "(", "attribute_value", ")", "==", "2", ":", "\n", "                ", "return", "attribute_value", "[", "0", "]", "<=", "val", "<=", "attribute_value", "[", "1", "]", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "\"invalid numerical format\"", ")", "\n", "\n", "", "", "if", "attr_type", "==", "'categorical'", ":", "\n", "            ", "if", "isinstance", "(", "attribute_value", ",", "(", "set", ",", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "if", "len", "(", "attribute_value", ")", ">", "0", ":", "\n", "                    ", "return", "val", "in", "attribute_value", "\n", "", "else", ":", "\n", "                    ", "return", "True", "\n", "", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "\"invalid categorical format\"", ")", "\n", "\n", "", "", "if", "attr_type", "==", "'set'", ":", "\n", "            ", "if", "isinstance", "(", "attribute_value", ",", "(", "set", ",", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "if", "len", "(", "attribute_value", ")", ">", "0", ":", "\n", "                    ", "return", "len", "(", "val", ".", "intersection", "(", "attribute_value", ")", ")", ">", "0", "\n", "", "else", ":", "\n", "                    ", "return", "True", "\n", "", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "\"invalid categorical format\"", ")", "\n", "\n", "", "", "", "except", "Exception", "as", "err", ":", "\n", "        ", "print", "(", "err", ")", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_attributes": [[73, 82], ["len", "filter_utils.filter_by_attribute"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_attribute"], ["", "", "def", "filter_by_attributes", "(", "metadata", ",", "metadata_type", ",", "filter_parameters", ")", ":", "\n", "    ", "if", "not", "filter_parameters", "or", "len", "(", "filter_parameters", ")", "==", "0", "or", "not", "metadata", ":", "\n", "        ", "return", "True", "\n", "\n", "", "for", "filter_param", "in", "filter_parameters", ":", "\n", "        ", "if", "not", "filter_by_attribute", "(", "metadata", ",", "metadata_type", ",", "filter_param", "[", "0", "]", ",", "filter_param", "[", "1", "]", ")", ":", "\n", "            ", "return", "False", "\n", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_embeddings_metadata": [[84, 95], ["set", "filter_utils.filter_by_attributes", "set.add"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_attributes"], ["", "def", "filter_embeddings_metadata", "(", "embeddings_metadata", ",", "metadata_type", ",", "metadata_filters", ")", ":", "\n", "    ", "\"\"\"\n    metadata_filters is a list of tuples in this format (attr_name, attr_val)\n    \"\"\"", "\n", "filtered_ids", "=", "set", "(", ")", "\n", "for", "id", "in", "embeddings_metadata", ":", "\n", "        ", "metadata_obj", "=", "embeddings_metadata", "[", "id", "]", "\n", "if", "filter_by_attributes", "(", "metadata_obj", ",", "metadata_type", ",", "metadata_filters", ")", ":", "\n", "            ", "filtered_ids", ".", "add", "(", "id", ")", "\n", "\n", "", "", "return", "filtered_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_embeddings": [[106, 127], ["set", "full_embeddings.keys", "modules.formulae_utils.formulae_to_vector", "modules.embeddings_utils.low_dimensional_projection", "set", "modules.embeddings_utils.low_dimensional_projection.items", "compare_function", "set.add"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.formulae_utils.formulae_to_vector", "home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils.low_dimensional_projection"], ["def", "filter_embeddings", "(", "embeddings", ",", "data_filters", ",", "full_embeddings", ")", ":", "\n", "    ", "\"\"\"\n    data_filters is a list of dictionaries in this format {measure: measure, formula: formula, compare_function: compare_function, number: number}\n    \"\"\"", "\n", "\n", "filtered_ids", "=", "set", "(", "full_embeddings", ".", "keys", "(", ")", ")", "\n", "for", "data_filter", "in", "data_filters", ":", "\n", "# evaluate formulae", "\n", "        ", "axes_vectors", "=", "formulae_to_vector", "(", "[", "data_filter", "[", "'formula'", "]", "]", ",", "full_embeddings", ")", "\n", "scores", "=", "low_dimensional_projection", "(", "embeddings", ",", "mode", "=", "'explicit'", ",", "\n", "metric", "=", "data_filter", "[", "'measure'", "]", ",", "\n", "axes_vectors", "=", "axes_vectors", ",", "\n", "n_axes", "=", "1", ")", "\n", "compare_function", "=", "compare_function_register", "[", "data_filter", "[", "'compare_function'", "]", "]", "\n", "intersection_ids", "=", "set", "(", ")", "\n", "for", "id", ",", "score", "in", "scores", ".", "items", "(", ")", ":", "\n", "            ", "if", "compare_function", "(", "score", "[", "0", "]", ",", "data_filter", "[", "'number'", "]", ")", "and", "id", "in", "filtered_ids", ":", "\n", "                ", "intersection_ids", ".", "add", "(", "id", ")", "\n", "", "", "filtered_ids", "=", "intersection_ids", "\n", "\n", "", "return", "filtered_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_ids": [[129, 138], ["collections.OrderedDict"], "function", ["None"], ["", "def", "filter_by_ids", "(", "embeddings", ",", "ids", ")", ":", "\n", "    ", "if", "not", "ids", ":", "\n", "        ", "return", "embeddings", "\n", "", "else", ":", "\n", "        ", "filtered_embeddings", "=", "OrderedDict", "(", ")", "\n", "for", "id", "in", "embeddings", ":", "\n", "            ", "if", "id", "in", "ids", ":", "\n", "                ", "filtered_embeddings", "[", "id", "]", "=", "embeddings", "[", "id", "]", "\n", "", "", "return", "filtered_embeddings", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.slice_embeddings": [[140, 145], ["set", "set.add", "list", "embeddings.keys"], "function", ["None"], ["", "", "def", "slice_embeddings", "(", "embeddings", ",", "rank_slice", ",", "reserved_keys", ")", ":", "\n", "    ", "sliced_keys", "=", "set", "(", "list", "(", "embeddings", ".", "keys", "(", ")", ")", "[", "rank_slice", "]", ")", "\n", "for", "key", "in", "reserved_keys", ":", "\n", "        ", "sliced_keys", ".", "add", "(", "key", ")", "\n", "", "return", "sliced_keys", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.api.projection": [[15, 118], ["print", "data_manager.get_embeddings", "data_manager.get_metadata", "data_manager.get_metadata_type", "modules.embeddings_utils.low_dimensional_projection", "modules.filter_utils.filter_by_ids.items", "locals", "ValueError", "ValueError", "isinstance", "isinstance", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError", "modules.formulae_utils.formulae_to_vector", "modules.formulae_utils.formulae_to_vector", "api.filter", "api.filter", "modules.filter_utils.filter_by_ids", "data_manager.get_metadata.get", "slice", "ValueError", "len", "data_manager.get_embeddings", "print", "enumerate", "data_manager.get_embeddings.keys", "ValueError", "data_manager.get_embeddings", "len", "data_manager.get_embeddings"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_embeddings", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_metadata_type", "home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils.low_dimensional_projection", "home.repos.pwc.inspect_result.uber-research_parallax.modules.formulae_utils.formulae_to_vector", "home.repos.pwc.inspect_result.uber-research_parallax.modules.formulae_utils.formulae_to_vector", "home.repos.pwc.inspect_result.uber-research_parallax.modules.api.filter", "home.repos.pwc.inspect_result.uber-research_parallax.modules.api.filter", "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_ids", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_embeddings", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_embeddings", "home.repos.pwc.inspect_result.uber-research_parallax.modules.data_manager.DataManager.get_embeddings"], ["def", "projection", "(", "data_manager", ",", "dataset_id", "=", "None", ",", "data_filters", "=", "None", ",", "\n", "metadata_filters", "=", "None", ",", "mode", "=", "None", ",", "rank_slice", "=", "None", ",", "\n", "metric", "=", "None", ",", "\n", "n_axes", "=", "None", ",", "formulae", "=", "None", ",", "items", "=", "None", ",", "pre_filtering", "=", "True", ",", "\n", "post_filtering", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "print", "(", "\"projection\"", ",", "locals", "(", ")", ")", "\n", "# error handling", "\n", "if", "dataset_id", "is", "None", "or", "not", "dataset_id", "in", "data_manager", ".", "dataset_ids", ":", "\n", "        ", "raise", "ValueError", "(", "\"error: dataset_id not specified or out of range\"", ")", "\n", "\n", "", "if", "not", "mode", ":", "\n", "        ", "raise", "ValueError", "(", "\"error: projection_mode not defined\"", ")", "\n", "\n", "", "if", "not", "isinstance", "(", "rank_slice", ",", "slice", ")", ":", "\n", "        ", "if", "isinstance", "(", "rank_slice", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "rank_slice", "=", "slice", "(", "*", "rank_slice", ")", "\n", "", "elif", "rank_slice", "is", "None", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"error: rank_slice not valid\"", ")", "\n", "\n", "", "", "if", "mode", "==", "\"explicit\"", "and", "(", "not", "formulae", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"error: formulae not defined in the explicit projection_mode\"", ")", "\n", "\n", "", "if", "mode", "==", "\"explicit\"", "and", "(", "not", "metric", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"error: metric not defined in the explicit projection_mode\"", ")", "\n", "\n", "", "if", "mode", "==", "\"tsne\"", "and", "(", "not", "metric", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"error: metric not defined in the tsne projection_mode\"", ")", "\n", "\n", "", "if", "mode", "==", "\"tsne\"", "and", "(", "not", "n_axes", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"error: n_axes not defined in the tsne projection_mode\"", ")", "\n", "\n", "", "if", "mode", "==", "\"pca\"", "and", "not", "n_axes", ":", "\n", "        ", "raise", "ValueError", "(", "\"error: n_axes not defined in the pca projection_mode\"", ")", "\n", "\n", "", "embeddings", "=", "data_manager", ".", "get_embeddings", "(", "dataset_id", ")", "\n", "metadata", "=", "data_manager", ".", "get_metadata", "(", "dataset_id", ")", "\n", "metadata_type", "=", "data_manager", ".", "get_metadata_type", "(", "dataset_id", ")", "\n", "\n", "# evaluate formulae", "\n", "axes_vectors", "=", "None", "\n", "if", "mode", "==", "\"explicit\"", "and", "formulae", ":", "\n", "        ", "axes_vectors", "=", "formulae_to_vector", "(", "formulae", ",", "embeddings", ")", "\n", "if", "axes_vectors", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"error: invalid formula or variable not found in formula\"", ")", "\n", "\n", "# evaluate items and add to data manager", "\n", "", "", "if", "items", "and", "len", "(", "items", ")", ">", "0", ":", "\n", "        ", "item_vectors", "=", "formulae_to_vector", "(", "items", ",", "data_manager", ".", "get_embeddings", "(", "\n", "dataset_id", ")", ")", "\n", "if", "item_vectors", "is", "None", ":", "\n", "            ", "print", "(", "\"warning: invalid item or variable in item not found\"", ")", "\n", "", "else", ":", "\n", "            ", "for", "i", ",", "item", "in", "enumerate", "(", "items", ")", ":", "\n", "                ", "if", "item", "not", "in", "embeddings", ":", "\n", "                    ", "embeddings", "[", "item", "]", "=", "item_vectors", "[", "i", "]", "\n", "\n", "# pre filter by metadata", "\n", "", "", "", "", "if", "pre_filtering", ":", "\n", "        ", "embeddings", ",", "metadata", "=", "filter", "(", "embeddings", ",", "metadata", ",", "metadata_type", ",", "\n", "rank_slice", ",", "metadata_filters", ",", "\n", "data_filters", ",", "\n", "reserved_keys", "=", "items", ",", "\n", "full_embeddings", "=", "data_manager", ".", "get_embeddings", "(", "\n", "dataset_id", ")", ")", "\n", "\n", "", "if", "not", "embeddings", "or", "not", "len", "(", "embeddings", ")", ">", "0", ":", "\n", "        ", "return", "{", "}", "\n", "\n", "# perform projection", "\n", "", "projected_embeddings", "=", "low_dimensional_projection", "(", "\n", "embeddings", ",", "\n", "mode", "=", "mode", ",", "\n", "metric", "=", "metric", ",", "\n", "axes_vectors", "=", "axes_vectors", ",", "\n", "n_axes", "=", "n_axes", ",", "\n", "**", "kwargs", "\n", ")", "\n", "\n", "# post filter by metadata", "\n", "if", "post_filtering", ":", "\n", "        ", "embeddings", ",", "metadata", "=", "filter", "(", "embeddings", ",", "metadata", ",", "metadata_type", ",", "\n", "rank_slice", ",", "metadata_filters", ",", "\n", "data_filters", ",", "\n", "reserved_keys", "=", "items", ",", "\n", "full_embeddings", "=", "data_manager", ".", "get_embeddings", "(", "\n", "dataset_id", ")", ")", "\n", "projected_embeddings", "=", "filter_by_ids", "(", "projected_embeddings", ",", "\n", "embeddings", ".", "keys", "(", ")", ")", "\n", "\n", "", "result", "=", "{", "}", "\n", "for", "word", ",", "coords", "in", "projected_embeddings", ".", "items", "(", ")", ":", "\n", "        ", "val", "=", "metadata", ".", "get", "(", "word", ",", "{", "}", ")", "\n", "val", "[", "\"coords\"", "]", "=", "coords", "\n", "result", "[", "word", "]", "=", "val", "\n", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.api.filter": [[120, 162], ["modules.filter_utils.slice_embeddings", "modules.filter_utils.filter_embeddings_metadata", "modules.filter_utils.filter_embeddings", "len", "modules.filter_utils.filter_by_ids", "modules.filter_utils.filter_by_ids", "len", "len", "modules.filter_utils.filter_by_ids", "modules.filter_utils.filter_by_ids", "len", "len", "modules.filter_utils.filter_by_ids", "modules.filter_utils.filter_by_ids"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.slice_embeddings", "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_embeddings_metadata", "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_embeddings", "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_ids", "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_ids", "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_ids", "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_ids", "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_ids", "home.repos.pwc.inspect_result.uber-research_parallax.modules.filter_utils.filter_by_ids"], ["", "def", "filter", "(", "embeddings", ",", "metadata", ",", "metadata_type", ",", "rank_slice", "=", "None", ",", "\n", "metadata_filters", "=", "None", ",", "data_filters", "=", "None", ",", "\n", "reserved_keys", "=", "None", ",", "full_embeddings", "=", "None", ")", ":", "\n", "    ", "filtered_embeddings", "=", "embeddings", "\n", "filtered_metadata", "=", "metadata", "\n", "\n", "# slice", "\n", "if", "rank_slice", ":", "\n", "        ", "filtered_ids", "=", "slice_embeddings", "(", "filtered_embeddings", ",", "rank_slice", ",", "\n", "reserved_keys", ")", "\n", "if", "len", "(", "filtered_ids", ")", "==", "0", ":", "\n", "            ", "return", "{", "}", ",", "{", "}", "\n", "", "else", ":", "\n", "            ", "filtered_embeddings", "=", "filter_by_ids", "(", "filtered_embeddings", ",", "\n", "filtered_ids", ")", "\n", "filtered_metadata", "=", "filter_by_ids", "(", "filtered_metadata", ",", "filtered_ids", ")", "\n", "\n", "# metadata filtering", "\n", "", "", "if", "metadata_filters", "and", "len", "(", "metadata_filters", ")", ">", "0", ":", "\n", "        ", "filtered_ids", "=", "filter_embeddings_metadata", "(", "filtered_metadata", ",", "\n", "metadata_type", ",", "\n", "metadata_filters", ")", "\n", "if", "len", "(", "filtered_ids", ")", "==", "0", ":", "\n", "            ", "return", "{", "}", ",", "{", "}", "\n", "", "else", ":", "\n", "            ", "filtered_embeddings", "=", "filter_by_ids", "(", "filtered_embeddings", ",", "\n", "filtered_ids", ")", "\n", "filtered_metadata", "=", "filter_by_ids", "(", "filtered_metadata", ",", "filtered_ids", ")", "\n", "\n", "# data filtering", "\n", "", "", "if", "data_filters", "and", "len", "(", "data_filters", ")", ">", "0", ":", "\n", "        ", "filtered_ids", "=", "filter_embeddings", "(", "filtered_embeddings", ",", "\n", "data_filters", ",", "\n", "full_embeddings", "=", "full_embeddings", "if", "full_embeddings", "is", "not", "None", "else", "embeddings", ")", "\n", "if", "len", "(", "filtered_ids", ")", "==", "0", ":", "\n", "            ", "return", "{", "}", ",", "{", "}", "\n", "", "else", ":", "\n", "            ", "filtered_embeddings", "=", "filter_by_ids", "(", "filtered_embeddings", ",", "\n", "filtered_ids", ")", "\n", "filtered_metadata", "=", "filter_by_ids", "(", "filtered_metadata", ",", "filtered_ids", ")", "\n", "\n", "", "", "return", "filtered_embeddings", ",", "filtered_metadata", "\n", "", ""]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.formulae_utils.average": [[15, 17], ["numpy.mean", "numpy.stack"], "function", ["None"], ["def", "average", "(", "*", "args", ")", ":", "\n", "    ", "return", "np", ".", "mean", "(", "np", ".", "stack", "(", "args", ")", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.formulae_utils.quantum_not": [[19, 21], ["numpy.dot"], "function", ["None"], ["", "def", "quantum_not", "(", "a", ",", "b", ")", ":", "\n", "    ", "return", "a", "-", "(", "np", ".", "dot", "(", "a", ",", "b", ")", ")", "*", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.formulae_utils.normalized_quantum_not": [[23, 29], ["numpy.dot", "numpy.dot"], "function", ["None"], ["", "def", "normalized_quantum_not", "(", "a", ",", "b", ")", ":", "\n", "# Widdows in \"Word Vectors and Quantum Logic Experiments with negation and disjunction\" has |b|^2 at the denominator", "\n", "# He says that that't b dot b, the norm2 of b, but the norm of b is the root of that.", "\n", "# In the proof of Theorem 1 he substitutes |b|^2 with b dot b and the demonstration works,", "\n", "# so I implement it a b dot b rather than norm2.", "\n", "    ", "return", "a", "-", "(", "np", ".", "dot", "(", "a", ",", "b", ")", "/", "np", ".", "dot", "(", "b", ",", "b", ")", ")", "*", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.formulae_utils.cosadd": [[30, 34], ["None"], "function", ["None"], ["", "def", "cosadd", "(", "a", ",", "b", ",", "c", ")", ":", "\n", "# the analogy function from Mikolov's word2vec paper", "\n", "# defined as 3CosSum in Levy & Goldberg's Linguistic Regularities in Sparse and Explicit Word Representations", "\n", "    ", "return", "b", "+", "c", "-", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.formulae_utils.formula_to_vector": [[45, 47], ["eval"], "function", ["None"], ["def", "formula_to_vector", "(", "expression", ",", "embeddings", ")", ":", "\n", "    ", "return", "eval", "(", "expression", ",", "embeddings", ",", "additional_functions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.formulae_utils.formulae_to_vector": [[49, 63], ["len", "len", "results.append", "formulae_utils.formula_to_vector", "print"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.formulae_utils.formula_to_vector"], ["", "def", "formulae_to_vector", "(", "formulae", ",", "embeddings", ")", ":", "\n", "    ", "\"\"\"calculate the vector of the math formulae defined by the user\"\"\"", "\n", "if", "not", "formulae", "or", "len", "(", "formulae", ")", "==", "0", "or", "not", "embeddings", "or", "len", "(", "embeddings", ")", "==", "0", ":", "\n", "        ", "return", "None", "\n", "\n", "", "results", "=", "[", "]", "\n", "for", "formula", "in", "formulae", ":", "\n", "        ", "try", ":", "\n", "            ", "results", ".", "append", "(", "formula_to_vector", "(", "formula", ",", "embeddings", ")", ")", "\n", "", "except", "Exception", "as", "err", ":", "\n", "            ", "print", "(", "err", ")", "\n", "return", "None", "\n", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.generate_metadata.generate_postag": [[35, 44], ["set", "list", "nltk.corpus.wordnet.synsets", "set.add", "print", "synset.pos"], "function", ["None"], ["def", "generate_postag", "(", "word", ")", ":", "\n", "    ", "poss", "=", "set", "(", ")", "\n", "try", ":", "\n", "        ", "synsets", "=", "wn", ".", "synsets", "(", "word", ")", "\n", "for", "synset", "in", "synsets", ":", "\n", "            ", "poss", ".", "add", "(", "to_pos", "[", "synset", ".", "pos", "(", ")", "]", ")", "\n", "", "", "except", ":", "\n", "        ", "print", "(", "word", "+", "\" dosn't have synsets\"", ")", "\n", "", "return", "list", "(", "poss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.generate_metadata.is_stopword": [[46, 48], ["word.lower"], "function", ["None"], ["", "def", "is_stopword", "(", "word", ")", ":", "\n", "    ", "return", "word", ".", "lower", "(", ")", "in", "stopwords", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.generate_metadata.generate_metadata_for_single_word": [[50, 55], ["len", "generate_metadata.generate_postag", "generate_metadata.is_stopword"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.generate_metadata.generate_postag", "home.repos.pwc.inspect_result.uber-research_parallax.modules.generate_metadata.is_stopword"], ["", "def", "generate_metadata_for_single_word", "(", "word", ")", ":", "\n", "    ", "return", "{", "\n", "\"length\"", ":", "len", "(", "word", ")", ",", "\n", "\"pos tag\"", ":", "generate_postag", "(", "word", ")", ",", "\n", "\"stopword\"", ":", "is_stopword", "(", "word", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.generate_metadata.generate_metadata": [[58, 68], ["generate_metadata.generate_metadata_for_single_word"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.generate_metadata.generate_metadata_for_single_word"], ["", "def", "generate_metadata", "(", "embeddings", ")", ":", "\n", "    ", "\"\"\"\n    generate some sample attributes for each word\n    these attributes are from additional resources and may not be relevant to the word vectors\n    \"\"\"", "\n", "metadata", "=", "{", "}", "\n", "for", "word", "in", "embeddings", ":", "\n", "        ", "metadata", "[", "word", "]", "=", "generate_metadata_for_single_word", "(", "word", ")", "\n", "\n", "", "return", "{", "\"types\"", ":", "metadata_type", ",", "\"values\"", ":", "metadata", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils.low_dimensional_projection": [[18, 53], ["Exception", "embeddings_utils._explict_projection", "len", "embeddings_utils._tsne_projection", "embeddings_utils._pca_projection", "embeddings_utils._umap_projection", "Exception"], "function", ["home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils._explict_projection", "home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils._tsne_projection", "home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils._pca_projection", "home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils._umap_projection"], ["def", "low_dimensional_projection", "(", "embeddings", ",", "mode", "=", "\"explicit\"", ",", "metric", "=", "\"cosine\"", ",", "\n", "axes_vectors", "=", "None", ",", "n_axes", "=", "2", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    projection_mode is one of the three [\"pca\", \"tsne\", \"explicit\"]\n\n    top_k_result determines how many vectors to return\n    for pca or tsne modes, we need to calculate all id vectors and get their embedding before returning top k\n    for explicit projection_mode, we can just retrieve top k and then calculate the embedding\n\n    for tsne or explicit modes, metrix is the distance measure (not used in pca projection_mode)\n    A list of typical distance metrics can be found here:\n    https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.pdist.html\n\n    for pca or tsne modes, n_axes determines the dimension of the embedding space (not used in explicit projection_mode)\n    for explicit projection_mode, axes_val contains a list of vectors representing the coordinates of the explicit axes\n    defined by the user in the interface (not used in the pca or tsne modes)\n    \"\"\"", "\n", "\"\"\"Available metrics for scipy cdist: \u2018braycurtis\u2019, \u2018canberra\u2019, \u2018chebyshev\u2019, \u2018cityblock\u2019, \u2018correlation\u2019, \u2018cosine\u2019, \n    \u2018dice\u2019, \u2018euclidean\u2019, \u2018hamming\u2019, \u2018jaccard\u2019, \u2018kulsinski\u2019, \u2018mahalanobis\u2019, \u2018matching\u2019, \u2018minkowski\u2019, \u2018rogerstanimoto\u2019, \n    \u2018russellrao\u2019, \u2018seuclidean\u2019, \u2018sokalmichener\u2019, \u2018sokalsneath\u2019, \u2018sqeuclidean\u2019, \u2018wminkowski\u2019, \u2018yule\n    These can all be options in the UI, but to begin with let's use: 'cosine', 'correlation' and 'euclidean'\n    \"\"\"", "\n", "if", "not", "embeddings", "or", "len", "(", "embeddings", ")", "==", "0", ":", "\n", "        ", "raise", "Exception", "(", "\"Invalid input parameters\"", ")", "\n", "\n", "", "if", "mode", "==", "\"explicit\"", ":", "\n", "        ", "return", "_explict_projection", "(", "embeddings", ",", "metric", ",", "axes_vectors", ",", "**", "kwargs", ")", "\n", "", "elif", "mode", "==", "\"tsne\"", ":", "\n", "        ", "return", "_tsne_projection", "(", "embeddings", ",", "metric", ",", "n_axes", ",", "**", "kwargs", ")", "\n", "", "elif", "mode", "==", "\"pca\"", ":", "\n", "        ", "return", "_pca_projection", "(", "embeddings", ",", "n_axes", ",", "**", "kwargs", ")", "\n", "", "elif", "mode", "==", "\"umap\"", ":", "\n", "        ", "return", "_umap_projection", "(", "embeddings", ",", "n_axes", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"invalid embedding projection_mode\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils._explict_projection": [[55, 75], ["numpy.stack", "numpy.stack", "embeddings.values", "numpy.matmul", "scipy.spatial.distance.cdist", "enumerate", "scipy.spatial.distance.cdist", "scipy.spatial.distance.cdist"], "function", ["None"], ["", "", "def", "_explict_projection", "(", "embeddings", ",", "metric", ",", "axes_vectors", ",", "**", "kwargs", ")", ":", "\n", "    ", "embeddings_matrix", "=", "np", ".", "stack", "(", "embeddings", ".", "values", "(", ")", ")", "# num_embeds x hidden", "\n", "axes_matrix", "=", "np", ".", "stack", "(", "axes_vectors", ")", "# num_axes x hidden_dimension", "\n", "\n", "# projected_matrix hs dimensions min(num_ids, top_k) x num_axes", "\n", "if", "metric", "==", "'dot_product'", ":", "\n", "        ", "projected_matrix", "=", "np", ".", "matmul", "(", "embeddings_matrix", ",", "axes_matrix", ".", "T", ")", "\n", "", "elif", "metric", "==", "'cosine_distance'", ":", "\n", "        ", "projected_matrix", "=", "cdist", "(", "embeddings_matrix", ",", "axes_matrix", ",", "\n", "metric", "=", "'cosine'", ")", "\n", "", "elif", "metric", "==", "'cosine_similarity'", ":", "\n", "        ", "projected_matrix", "=", "1", "-", "cdist", "(", "embeddings_matrix", ",", "axes_matrix", ",", "\n", "metric", "=", "'cosine'", ")", "\n", "", "else", ":", "\n", "        ", "projected_matrix", "=", "cdist", "(", "embeddings_matrix", ",", "axes_matrix", ",", "metric", "=", "metric", ")", "\n", "\n", "", "projected_emebddings", "=", "{", "embedding_id", ":", "projected_matrix", "[", "i", ",", ":", "]", "for", "\n", "i", ",", "embedding_id", "in", "\n", "enumerate", "(", "embeddings", ")", "}", "\n", "return", "projected_emebddings", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils._tsne_projection": [[77, 107], ["numpy.stack", "sklearn.manifold.TSNE", "time.time", "sklearn.manifold.TSNE.fit_transform", "print", "embeddings.values", "enumerate", "time.time"], "function", ["None"], ["", "def", "_tsne_projection", "(", "embeddings", ",", "metric", ",", "n_axes", ",", "perplexity", "=", "30.0", ",", "\n", "early_exaggeration", "=", "12.0", ",", "learning_rate", "=", "200.0", ",", "n_iter", "=", "1000", ",", "\n", "n_iter_without_progress", "=", "300", ",", "min_grad_norm", "=", "1e-07", ",", "\n", "init", "=", "'pca'", ",", "method", "=", "'barnes_hut'", ",", "angle", "=", "0.5", ")", ":", "\n", "    ", "if", "metric", "==", "'cosine_distance'", "or", "metric", "==", "'cosine_similarity'", ":", "\n", "        ", "metric", "=", "'cosine'", "\n", "# embeddings_matrix = np.stack(list(embeddings.values())[:rank_slice])  # min(num_embeds, top_k) x hidden", "\n", "", "embeddings_matrix", "=", "np", ".", "stack", "(", "embeddings", ".", "values", "(", ")", ")", "# num_embeds x hidden", "\n", "tsne", "=", "TSNE", "(", "\n", "n_components", "=", "n_axes", ",", "\n", "metric", "=", "metric", ",", "\n", "perplexity", "=", "perplexity", ",", "\n", "early_exaggeration", "=", "early_exaggeration", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "n_iter", "=", "n_iter", ",", "\n", "n_iter_without_progress", "=", "n_iter_without_progress", ",", "\n", "min_grad_norm", "=", "min_grad_norm", ",", "\n", "init", "=", "init", ",", "\n", "method", "=", "method", ",", "\n", "angle", "=", "angle", ",", "\n", "verbose", "=", "1", "\n", ")", "\n", "# TSNE doesn't have separate fit and transform, so ccan't be cached...", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "projected_matrix", "=", "tsne", ".", "fit_transform", "(", "embeddings_matrix", ")", "\n", "print", "(", "\"Took {}s\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "projected_emebddings", "=", "{", "embedding_id", ":", "projected_matrix", "[", "i", ",", ":", "]", "for", "\n", "i", ",", "embedding_id", "in", "\n", "enumerate", "(", "embeddings", ")", "}", "\n", "return", "projected_emebddings", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils._pca_projection": [[109, 121], ["numpy.stack", "sklearn.decomposition.PCA", "sklearn.decomposition.PCA.fit", "sklearn.decomposition.PCA.transform", "embeddings.values", "enumerate"], "function", ["None"], ["", "def", "_pca_projection", "(", "embeddings", ",", "n_axes", ",", "**", "kwargs", ")", ":", "\n", "# the following line is much faster, but it's mathematically wrong", "\n", "# embeddings_matrix = np.stack(list(embeddings.values())[:rank_slice])  # min(num_embeds, top_k) x hidden", "\n", "    ", "embeddings_matrix", "=", "np", ".", "stack", "(", "embeddings", ".", "values", "(", ")", ")", "# num_embeds x hidden", "\n", "pca", "=", "PCA", "(", "n_components", "=", "n_axes", ")", "\n", "# this guy may me cached for efficiency, that's why I don;t do fit_transofrm", "\n", "pca", ".", "fit", "(", "embeddings_matrix", ")", "\n", "projected_matrix", "=", "pca", ".", "transform", "(", "embeddings_matrix", ")", "\n", "projected_emebddings", "=", "{", "embedding_id", ":", "projected_matrix", "[", "i", ",", ":", "]", "for", "\n", "i", ",", "embedding_id", "in", "\n", "enumerate", "(", "embeddings", ")", "}", "\n", "return", "projected_emebddings", "\n", "\n"]], "home.repos.pwc.inspect_result.uber-research_parallax.modules.embeddings_utils._umap_projection": [[122, 132], ["numpy.stack", "umap.UMAP", "umap.UMAP.fit", "umap.UMAP.transform", "embeddings.values", "enumerate"], "function", ["None"], ["", "def", "_umap_projection", "(", "embeddings", ",", "n_axes", ",", "**", "kwargs", ")", ":", "\n", "    ", "embeddings_matrix", "=", "np", ".", "stack", "(", "embeddings", ".", "values", "(", ")", ")", "\n", "umap", "=", "UMAP", "(", ")", "\n", "\n", "umap", ".", "fit", "(", "embeddings_matrix", ")", "\n", "projected_matrix", "=", "umap", ".", "transform", "(", "embeddings_matrix", ")", "\n", "projected_emebddings", "=", "{", "embedding_id", ":", "projected_matrix", "[", "i", ",", ":", "]", "for", "\n", "i", ",", "embedding_id", "in", "\n", "enumerate", "(", "embeddings", ")", "}", "\n", "return", "projected_emebddings", "\n", "\n"]]}