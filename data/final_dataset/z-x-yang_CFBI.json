{"home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.eval.zip_folder": [[5, 14], ["zipfile.ZipFile", "len", "os.walk", "zipfile.ZipFile.close", "os.path.dirname", "os.path.join", "pathfile[].strip", "zipfile.ZipFile.write"], "function", ["None"], ["def", "zip_folder", "(", "source_folder", ",", "zip_dir", ")", ":", "\n", "    ", "f", "=", "zipfile", ".", "ZipFile", "(", "zip_dir", ",", "'w'", ",", "zipfile", ".", "ZIP_DEFLATED", ")", "\n", "pre_len", "=", "len", "(", "os", ".", "path", ".", "dirname", "(", "source_folder", ")", ")", "\n", "for", "dirpath", ",", "dirnames", ",", "filenames", "in", "os", ".", "walk", "(", "source_folder", ")", ":", "\n", "        ", "for", "filename", "in", "filenames", ":", "\n", "            ", "pathfile", "=", "os", ".", "path", ".", "join", "(", "dirpath", ",", "filename", ")", "\n", "arcname", "=", "pathfile", "[", "pre_len", ":", "]", ".", "strip", "(", "os", ".", "path", ".", "sep", ")", "\n", "f", ".", "write", "(", "pathfile", ",", "arcname", ")", "\n", "", "", "f", ".", "close", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.meters.AverageMeter.__init__": [[7, 12], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.meters.AverageMeter.reset": [[13, 18], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.meters.AverageMeter.update": [[19, 24], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.metric.pytorch_iou": [[3, 35], ["obj_num.size", "range", "pred[].unsqueeze", "target[].unsqueeze", "torch.arange().int().view", "len", "torch.stack().mean", "torch.ones", "torch.arange().int().view.size", "torch.ones.append", "torch.arange().int", "now_iou.mean", "torch.stack", "torch.arange"], "function", ["None"], ["def", "pytorch_iou", "(", "pred", ",", "target", ",", "obj_num", ",", "epsilon", "=", "1e-6", ")", ":", "\n", "    ", "'''\n    pred: [bs, h, w]\n    target: [bs, h, w]\n    obj_num: [bs]\n    '''", "\n", "bs", "=", "obj_num", ".", "size", "(", "0", ")", "\n", "all_iou", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "bs", ")", ":", "\n", "        ", "now_pred", "=", "pred", "[", "idx", "]", ".", "unsqueeze", "(", "0", ")", "\n", "now_target", "=", "target", "[", "idx", "]", ".", "unsqueeze", "(", "0", ")", "\n", "now_obj_num", "=", "obj_num", "[", "idx", "]", "\n", "\n", "obj_ids", "=", "torch", ".", "arange", "(", "0", ",", "now_obj_num", "+", "1", ",", "device", "=", "now_pred", ".", "device", ")", ".", "int", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "if", "obj_ids", ".", "size", "(", "0", ")", "==", "1", ":", "# only contain background", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "obj_ids", "=", "obj_ids", "[", "1", ":", "]", "\n", "now_pred", "=", "(", "now_pred", "==", "obj_ids", ")", ".", "float", "(", ")", "\n", "now_target", "=", "(", "now_target", "==", "obj_ids", ")", ".", "float", "(", ")", "\n", "\n", "intersection", "=", "(", "now_pred", "*", "now_target", ")", ".", "sum", "(", "(", "1", ",", "2", ")", ")", "\n", "union", "=", "(", "(", "now_pred", "+", "now_target", ")", ">", "0", ")", ".", "float", "(", ")", ".", "sum", "(", "(", "1", ",", "2", ")", ")", "\n", "\n", "now_iou", "=", "(", "intersection", "+", "epsilon", ")", "/", "(", "union", "+", "epsilon", ")", "\n", "\n", "all_iou", ".", "append", "(", "now_iou", ".", "mean", "(", ")", ")", "\n", "", "", "if", "len", "(", "all_iou", ")", ">", "0", ":", "\n", "        ", "all_iou", "=", "torch", ".", "stack", "(", "all_iou", ")", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "all_iou", "=", "torch", ".", "ones", "(", "(", "1", ")", ",", "device", "=", "pred", ".", "device", ")", "\n", "", "return", "all_iou", "\n", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.checkpoint.load_network_and_optimizer": [[5, 26], ["torch.load", "net.state_dict", "pretrained_dict.items", "net.state_dict.update", "net.load_state_dict", "opt.load_state_dict", "net.cuda", "torch.device", "pretrained_dict_remove.append", "str"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.meters.AverageMeter.update"], ["def", "load_network_and_optimizer", "(", "net", ",", "opt", ",", "pretrained_dir", ",", "gpu", ")", ":", "\n", "    ", "pretrained", "=", "torch", ".", "load", "(", "\n", "pretrained_dir", ",", "\n", "map_location", "=", "torch", ".", "device", "(", "\"cuda:\"", "+", "str", "(", "gpu", ")", ")", ")", "\n", "pretrained_dict", "=", "pretrained", "[", "'state_dict'", "]", "\n", "model_dict", "=", "net", ".", "state_dict", "(", ")", "\n", "pretrained_dict_update", "=", "{", "}", "\n", "pretrained_dict_remove", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "in", "model_dict", ":", "\n", "            ", "pretrained_dict_update", "[", "k", "]", "=", "v", "\n", "", "elif", "k", "[", ":", "7", "]", "==", "'module.'", ":", "\n", "            ", "if", "k", "[", "7", ":", "]", "in", "model_dict", ":", "\n", "                ", "pretrained_dict_update", "[", "k", "[", "7", ":", "]", "]", "=", "v", "\n", "", "", "else", ":", "\n", "            ", "pretrained_dict_remove", ".", "append", "(", "k", ")", "\n", "", "", "model_dict", ".", "update", "(", "pretrained_dict_update", ")", "\n", "net", ".", "load_state_dict", "(", "model_dict", ")", "\n", "opt", ".", "load_state_dict", "(", "pretrained", "[", "'optimizer'", "]", ")", "\n", "del", "(", "pretrained", ")", "\n", "return", "net", ".", "cuda", "(", "gpu", ")", ",", "opt", ",", "pretrained_dict_remove", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.checkpoint.load_network": [[27, 47], ["torch.load", "net.state_dict", "pretrained_dict.items", "net.state_dict.update", "net.load_state_dict", "net.cuda", "torch.device", "pretrained_dict_remove.append", "str"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.meters.AverageMeter.update"], ["", "def", "load_network", "(", "net", ",", "pretrained_dir", ",", "gpu", ")", ":", "\n", "    ", "pretrained", "=", "torch", ".", "load", "(", "\n", "pretrained_dir", ",", "\n", "map_location", "=", "torch", ".", "device", "(", "\"cuda:\"", "+", "str", "(", "gpu", ")", ")", ")", "\n", "pretrained_dict", "=", "pretrained", "[", "'state_dict'", "]", "\n", "model_dict", "=", "net", ".", "state_dict", "(", ")", "\n", "pretrained_dict_update", "=", "{", "}", "\n", "pretrained_dict_remove", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "in", "model_dict", ":", "\n", "            ", "pretrained_dict_update", "[", "k", "]", "=", "v", "\n", "", "elif", "k", "[", ":", "7", "]", "==", "'module.'", ":", "\n", "            ", "if", "k", "[", "7", ":", "]", "in", "model_dict", ":", "\n", "                ", "pretrained_dict_update", "[", "k", "[", "7", ":", "]", "]", "=", "v", "\n", "", "", "else", ":", "\n", "            ", "pretrained_dict_remove", ".", "append", "(", "k", ")", "\n", "", "", "model_dict", ".", "update", "(", "pretrained_dict_update", ")", "\n", "net", ".", "load_state_dict", "(", "model_dict", ")", "\n", "del", "(", "pretrained", ")", "\n", "return", "net", ".", "cuda", "(", "gpu", ")", ",", "pretrained_dict_remove", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.checkpoint.save_network": [[48, 73], ["os.listdir", "os.path.join", "torch.save", "len", "os.path.exists", "os.makedirs", "os.path.join", "torch.save", "int", "all_step.append", "list", "os.path.join", "os.system", "net.state_dict", "opt.state_dict", "os.path.exists", "os.makedirs", "numpy.sort", "net.state_dict", "opt.state_dict", "[].split", "ckpt_name.split"], "function", ["None"], ["", "def", "save_network", "(", "net", ",", "opt", ",", "step", ",", "save_path", ",", "max_keep", "=", "8", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "save_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_path", ")", "\n", "", "save_file", "=", "'save_step_%s.pth'", "%", "(", "step", ")", "\n", "save_dir", "=", "os", ".", "path", ".", "join", "(", "save_path", ",", "save_file", ")", "\n", "torch", ".", "save", "(", "{", "'state_dict'", ":", "net", ".", "state_dict", "(", ")", ",", "'optimizer'", ":", "opt", ".", "state_dict", "(", ")", "}", ",", "save_dir", ")", "\n", "", "except", ":", "\n", "        ", "save_path", "=", "'./saved_models'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_path", ")", "\n", "", "save_file", "=", "'save_step_%s.pth'", "%", "(", "step", ")", "\n", "save_dir", "=", "os", ".", "path", ".", "join", "(", "save_path", ",", "save_file", ")", "\n", "torch", ".", "save", "(", "{", "'state_dict'", ":", "net", ".", "state_dict", "(", ")", ",", "'optimizer'", ":", "opt", ".", "state_dict", "(", ")", "}", ",", "save_dir", ")", "\n", "\n", "", "all_ckpt", "=", "os", ".", "listdir", "(", "save_path", ")", "\n", "if", "len", "(", "all_ckpt", ")", ">", "max_keep", ":", "\n", "        ", "all_step", "=", "[", "]", "\n", "for", "ckpt_name", "in", "all_ckpt", ":", "\n", "            ", "step", "=", "int", "(", "ckpt_name", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "all_step", ".", "append", "(", "step", ")", "\n", "", "all_step", "=", "list", "(", "np", ".", "sort", "(", "all_step", ")", ")", "[", ":", "-", "max_keep", "]", "\n", "for", "step", "in", "all_step", ":", "\n", "            ", "ckpt_path", "=", "os", ".", "path", ".", "join", "(", "save_path", ",", "'save_step_%s.pth'", "%", "(", "step", ")", ")", "\n", "os", ".", "system", "(", "'rm {}'", ".", "format", "(", "ckpt_path", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.image.label2colormap": [[8, 17], ["label.astype", "numpy.zeros"], "function", ["None"], ["def", "label2colormap", "(", "label", ")", ":", "\n", "\n", "    ", "m", "=", "label", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "r", ",", "c", "=", "m", ".", "shape", "\n", "cmap", "=", "np", ".", "zeros", "(", "(", "r", ",", "c", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "cmap", "[", ":", ",", ":", ",", "0", "]", "=", "(", "m", "&", "1", ")", "<<", "7", "|", "(", "m", "&", "8", ")", "<<", "3", "|", "(", "m", "&", "64", ")", ">>", "1", "\n", "cmap", "[", ":", ",", ":", ",", "1", "]", "=", "(", "m", "&", "2", ")", "<<", "6", "|", "(", "m", "&", "16", ")", "<<", "2", "|", "(", "m", "&", "128", ")", ">>", "2", "\n", "cmap", "[", ":", ",", ":", ",", "2", "]", "=", "(", "m", "&", "4", ")", "<<", "5", "|", "(", "m", "&", "32", ")", "<<", "1", "\n", "return", "cmap", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.image.masked_image": [[18, 23], ["numpy.expand_dims", "numpy.repeat"], "function", ["None"], ["", "def", "masked_image", "(", "image", ",", "colored_mask", ",", "mask", ",", "alpha", "=", "0.7", ")", ":", "\n", "    ", "mask", "=", "np", ".", "expand_dims", "(", "mask", ">", "0", ",", "axis", "=", "0", ")", "\n", "mask", "=", "np", ".", "repeat", "(", "mask", ",", "3", ",", "axis", "=", "0", ")", "\n", "show_img", "=", "(", "image", "*", "alpha", "+", "colored_mask", "*", "(", "1", "-", "alpha", ")", ")", "*", "mask", "+", "image", "*", "(", "1", "-", "mask", ")", "\n", "return", "show_img", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.image.save_image": [[24, 27], ["PIL.Image.fromarray", "Image.fromarray.save", "numpy.uint8().transpose", "numpy.uint8"], "function", ["None"], ["", "def", "save_image", "(", "image", ",", "path", ")", ":", "\n", "    ", "im", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "image", "*", "255.", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", ")", "\n", "im", ".", "save", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.image.save_mask": [[28, 33], ["mask_tensor.cpu().numpy().astype", "PIL.Image.fromarray().convert", "Image.fromarray().convert.putpalette", "Image.fromarray().convert.save", "mask_tensor.cpu().numpy", "PIL.Image.fromarray", "mask_tensor.cpu"], "function", ["None"], ["", "def", "save_mask", "(", "mask_tensor", ",", "path", ")", ":", "\n", "    ", "mask", "=", "mask_tensor", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", "\n", "mask", "=", "Image", ".", "fromarray", "(", "mask", ")", ".", "convert", "(", "'P'", ")", "\n", "mask", ".", "putpalette", "(", "_palette", ")", "\n", "mask", ".", "save", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.image.flip_tensor": [[34, 38], ["torch.arange().long", "tensor.index_select.index_select", "torch.arange", "tensor.index_select.size"], "function", ["None"], ["", "def", "flip_tensor", "(", "tensor", ",", "dim", "=", "0", ")", ":", "\n", "    ", "inv_idx", "=", "torch", ".", "arange", "(", "tensor", ".", "size", "(", "dim", ")", "-", "1", ",", "-", "1", ",", "-", "1", ",", "device", "=", "tensor", ".", "device", ")", ".", "long", "(", ")", "\n", "tensor", "=", "tensor", ".", "index_select", "(", "dim", ",", "inv_idx", ")", "\n", "return", "tensor", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.tools.test_eval.main": [[7, 25], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "importlib.import_module", "networks.engine.eval_manager.Evaluator", "networks.engine.eval_manager.Evaluator.evaluating"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.evaluating"], ["def", "main", "(", ")", ":", "\n", "    ", "import", "argparse", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Test CFBI\"", ")", "\n", "parser", ".", "add_argument", "(", "'--gpu_id'", ",", "type", "=", "int", ",", "default", "=", "7", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "default", "=", "'configs.resnet101_cfbi'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt_path'", ",", "type", "=", "str", ",", "default", "=", "'test'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "importlib", ".", "import_module", "(", "args", ".", "config", ")", "\n", "cfg", "=", "config", ".", "cfg", "\n", "\n", "cfg", ".", "TEST_GPU_ID", "=", "args", ".", "gpu_id", "\n", "cfg", ".", "TEST_DATASET", "=", "'test'", "\n", "cfg", ".", "TEST_CKPT_PATH", "=", "args", ".", "ckpt_path", "\n", "cfg", ".", "TEST_MULTISCALE", "=", "[", "0.5", ",", "1", "]", "\n", "cfg", ".", "TEST_FLIP", "=", "True", "\n", "\n", "evaluator", "=", "Evaluator", "(", "cfg", "=", "cfg", ")", "\n", "evaluator", ".", "evaluating", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.tools.eval_net.main": [[7, 70], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.parse_args", "importlib.import_module", "networks.engine.eval_manager.Evaluator", "networks.engine.eval_manager.Evaluator.evaluating"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.evaluating"], ["def", "main", "(", ")", ":", "\n", "    ", "import", "argparse", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Eval CFBI\"", ")", "\n", "parser", ".", "add_argument", "(", "'--exp_name'", ",", "type", "=", "str", ",", "default", "=", "''", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "default", "=", "'configs.resnet101_cfbi'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--gpu_id'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--ckpt_path'", ",", "type", "=", "str", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt_step'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "''", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--flip'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "set_defaults", "(", "flip", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--ms'", ",", "nargs", "=", "'+'", ",", "type", "=", "float", ",", "default", "=", "[", "1.", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--max_long_edge'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--float16'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "set_defaults", "(", "float16", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--global_atrous_rate'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--global_chunks'", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "'--min_matching_pixels'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--no_local_parallel'", ",", "dest", "=", "'local_parallel'", ",", "action", "=", "'store_false'", ")", "\n", "parser", ".", "set_defaults", "(", "local_parallel", "=", "True", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "config", "=", "importlib", ".", "import_module", "(", "args", ".", "config", ")", "\n", "cfg", "=", "config", ".", "cfg", "\n", "\n", "cfg", ".", "TEST_GPU_ID", "=", "args", ".", "gpu_id", "\n", "if", "args", ".", "exp_name", "!=", "''", ":", "\n", "        ", "cfg", ".", "EXP_NAME", "=", "args", ".", "exp_name", "\n", "\n", "", "if", "args", ".", "ckpt_path", "!=", "''", ":", "\n", "        ", "cfg", ".", "TEST_CKPT_PATH", "=", "args", ".", "ckpt_path", "\n", "", "if", "args", ".", "ckpt_step", ">", "0", ":", "\n", "        ", "cfg", ".", "TEST_CKPT_STEP", "=", "args", ".", "ckpt_step", "\n", "\n", "", "if", "args", ".", "dataset", "!=", "''", ":", "\n", "        ", "cfg", ".", "TEST_DATASET", "=", "args", ".", "dataset", "\n", "\n", "", "cfg", ".", "TEST_FLIP", "=", "args", ".", "flip", "\n", "cfg", ".", "TEST_MULTISCALE", "=", "args", ".", "ms", "\n", "if", "args", ".", "max_long_edge", ">", "0", ":", "\n", "        ", "cfg", ".", "TEST_MAX_SIZE", "=", "args", ".", "max_long_edge", "\n", "", "else", ":", "\n", "        ", "cfg", ".", "TEST_MAX_SIZE", "=", "800", "*", "1.3", "if", "cfg", ".", "TEST_MULTISCALE", "==", "[", "1.", "]", "else", "800", "\n", "\n", "", "cfg", ".", "MODEL_FLOAT16_MATCHING", "=", "args", ".", "float16", "\n", "if", "'cfbip'", "in", "cfg", ".", "MODEL_MODULE", ":", "\n", "        ", "cfg", ".", "TEST_GLOBAL_ATROUS_RATE", "=", "[", "args", ".", "global_atrous_rate", ",", "1", ",", "1", "]", "\n", "", "else", ":", "\n", "        ", "cfg", ".", "TEST_GLOBAL_ATROUS_RATE", "=", "args", ".", "global_atrous_rate", "\n", "", "cfg", ".", "TEST_GLOBAL_CHUNKS", "=", "args", ".", "global_chunks", "\n", "cfg", ".", "TEST_LOCAL_PARALLEL", "=", "args", ".", "local_parallel", "\n", "\n", "if", "args", ".", "min_matching_pixels", ">", "0", ":", "\n", "        ", "cfg", ".", "TEST_GLOBAL_MATCHING_MIN_PIXEL", "=", "args", ".", "min_matching_pixels", "\n", "\n", "", "evaluator", "=", "Evaluator", "(", "cfg", "=", "cfg", ")", "\n", "evaluator", ".", "evaluating", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.aspp._ASPPModule.__init__": [[8, 17], ["torch.nn.Module.__init__", "networks.layers.gct.GCT", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "torch.nn.ReLU", "torch.nn.ReLU", "aspp._ASPPModule._init_weight", "int"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._init_weight"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "kernel_size", ",", "padding", ",", "dilation", ")", ":", "\n", "        ", "super", "(", "_ASPPModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "GCT", "=", "GCT", "(", "inplanes", ")", "\n", "self", ".", "atrous_conv", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "1", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "GroupNorm", "(", "int", "(", "planes", "/", "4", ")", ",", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "_init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.aspp._ASPPModule.forward": [[18, 24], ["aspp._ASPPModule.GCT", "aspp._ASPPModule.atrous_conv", "aspp._ASPPModule.bn", "aspp._ASPPModule.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "GCT", "(", "x", ")", "\n", "x", "=", "self", ".", "atrous_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "\n", "return", "self", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.aspp._ASPPModule._init_weight": [[25, 32], ["aspp._ASPPModule.modules", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_init_weight", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.aspp.ASPP.__init__": [[34, 55], ["torch.nn.Module.__init__", "aspp._ASPPModule", "aspp._ASPPModule", "aspp._ASPPModule", "aspp._ASPPModule", "torch.nn.Sequential", "torch.nn.Sequential", "networks.layers.gct.GCT", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "torch.nn.ReLU", "torch.nn.ReLU", "aspp.ASPP._init_weight", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._init_weight"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ASPP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inplanes", "=", "512", "\n", "dilations", "=", "[", "1", ",", "6", ",", "12", ",", "18", "]", "\n", "\n", "\n", "self", ".", "aspp1", "=", "_ASPPModule", "(", "inplanes", ",", "128", ",", "1", ",", "padding", "=", "0", ",", "dilation", "=", "dilations", "[", "0", "]", ")", "\n", "self", ".", "aspp2", "=", "_ASPPModule", "(", "inplanes", ",", "128", ",", "3", ",", "padding", "=", "dilations", "[", "1", "]", ",", "dilation", "=", "dilations", "[", "1", "]", ")", "\n", "self", ".", "aspp3", "=", "_ASPPModule", "(", "inplanes", ",", "128", ",", "3", ",", "padding", "=", "dilations", "[", "2", "]", ",", "dilation", "=", "dilations", "[", "2", "]", ")", "\n", "self", ".", "aspp4", "=", "_ASPPModule", "(", "inplanes", ",", "128", ",", "3", ",", "padding", "=", "dilations", "[", "3", "]", ",", "dilation", "=", "dilations", "[", "3", "]", ")", "\n", "\n", "self", ".", "global_avg_pool", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "128", ",", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "GCT", "=", "GCT", "(", "640", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "640", ",", "256", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "32", ",", "256", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "_init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.aspp.ASPP.forward": [[56, 71], ["aspp.ASPP.aspp1", "aspp.ASPP.aspp2", "aspp.ASPP.aspp3", "aspp.ASPP.aspp4", "aspp.ASPP.global_avg_pool", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "aspp.ASPP.GCT", "aspp.ASPP.conv1", "aspp.ASPP.bn1", "aspp.ASPP.relu", "aspp.ASPP.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "aspp1", "(", "x", ")", "\n", "x2", "=", "self", ".", "aspp2", "(", "x", ")", "\n", "x3", "=", "self", ".", "aspp3", "(", "x", ")", "\n", "x4", "=", "self", ".", "aspp4", "(", "x", ")", "\n", "x5", "=", "self", ".", "global_avg_pool", "(", "x", ")", "\n", "x5", "=", "F", ".", "interpolate", "(", "x5", ",", "size", "=", "x4", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ")", ",", "dim", "=", "1", ")", "\n", "\n", "x", "=", "self", ".", "GCT", "(", "x", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.aspp.ASPP._init_weight": [[72, 79], ["aspp.ASPP.modules", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_init_weight", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.foreground2background": [[6, 21], ["range", "torch.cat", "torch.cat", "torch.cat", "range", "torch.cat", "torch.cat", "torch.cat", "torch.min", "torch.min", "torch.min", "torch.cat.append", "torch.cat.append", "dis[].unsqueeze"], "function", ["None"], ["def", "foreground2background", "(", "dis", ",", "obj_num", ")", ":", "\n", "    ", "if", "obj_num", "==", "1", ":", "\n", "        ", "return", "dis", "\n", "", "bg_dis", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "obj_num", ")", ":", "\n", "        ", "obj_back", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "obj_num", ")", ":", "\n", "            ", "if", "i", "==", "j", ":", "\n", "                ", "continue", "\n", "", "obj_back", ".", "append", "(", "dis", "[", "j", "]", ".", "unsqueeze", "(", "0", ")", ")", "\n", "", "obj_back", "=", "torch", ".", "cat", "(", "obj_back", ",", "dim", "=", "1", ")", "\n", "obj_back", ",", "_", "=", "torch", ".", "min", "(", "obj_back", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "bg_dis", ".", "append", "(", "obj_back", ")", "\n", "", "bg_dis", "=", "torch", ".", "cat", "(", "bg_dis", ",", "dim", "=", "0", ")", "\n", "return", "bg_dis", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching._pairwise_distances": [[24, 40], ["xs.unsqueeze.unsqueeze", "ys.unsqueeze.unsqueeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.t", "torch.t", "torch.t"], "function", ["None"], ["def", "_pairwise_distances", "(", "x", ",", "x2", ",", "y", ",", "y2", ")", ":", "\n", "    ", "\"\"\"\n    Computes pairwise squared l2 distances between tensors x and y.\n    Args:\n    x: [n, feature_dim].\n    y: [m, feature_dim].\n    Returns:\n    d: [n, m].\n    \"\"\"", "\n", "xs", "=", "x2", "\n", "ys", "=", "y2", "\n", "\n", "xs", "=", "xs", ".", "unsqueeze", "(", "1", ")", "\n", "ys", "=", "ys", ".", "unsqueeze", "(", "0", ")", "\n", "d", "=", "xs", "+", "ys", "-", "2.", "*", "torch", ".", "matmul", "(", "x", ",", "torch", ".", "t", "(", "y", ")", ")", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching._flattened_pairwise_distances": [[42, 55], ["matching._pairwise_distances"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching._pairwise_distances"], ["", "def", "_flattened_pairwise_distances", "(", "reference_embeddings", ",", "ref_square", ",", "query_embeddings", ",", "query_square", ")", ":", "\n", "    ", "\"\"\"\n    Calculates flattened tensor of pairwise distances between ref and query.\n    Args:\n        reference_embeddings: [..., embedding_dim],\n          the embedding vectors for the reference frame\n        query_embeddings: [..., embedding_dim], \n          the embedding vectors for the query frames.\n    Returns:\n        dists: [reference_embeddings.size / embedding_dim, query_embeddings.size / embedding_dim]\n    \"\"\"", "\n", "dists", "=", "_pairwise_distances", "(", "query_embeddings", ",", "query_square", ",", "reference_embeddings", ",", "ref_square", ")", "\n", "return", "dists", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching._nn_features_per_object_for_chunk": [[56, 85], ["matching._flattened_pairwise_distances", "torch.min", "torch.min", "torch.min", "wrong_label_mask.float.half", "wrong_label_mask.float.float", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching._flattened_pairwise_distances"], ["", "def", "_nn_features_per_object_for_chunk", "(", "\n", "reference_embeddings", ",", "ref_square", ",", "query_embeddings", ",", "query_square", ",", "wrong_label_mask", ")", ":", "\n", "    ", "\"\"\"Extracts features for each object using nearest neighbor attention.\n    Args:\n        reference_embeddings: [n_chunk, embedding_dim],\n          the embedding vectors for the reference frame.\n        query_embeddings: [m_chunk, embedding_dim],\n          the embedding vectors for the query frames.\n        wrong_label_mask: [n_objects, n_chunk],\n          the mask for pixels not used for matching.\n    Returns:\n        nn_features: A float32 tensor of nearest neighbor features of shape\n          [m_chunk, n_objects, n_chunk].\n    \"\"\"", "\n", "if", "reference_embeddings", ".", "dtype", "==", "torch", ".", "float16", ":", "\n", "        ", "wrong_label_mask", "=", "wrong_label_mask", ".", "half", "(", ")", "\n", "", "else", ":", "\n", "        ", "wrong_label_mask", "=", "wrong_label_mask", ".", "float", "(", ")", "\n", "\n", "", "reference_embeddings_key", "=", "reference_embeddings", "\n", "query_embeddings_key", "=", "query_embeddings", "\n", "dists", "=", "_flattened_pairwise_distances", "(", "reference_embeddings_key", ",", "ref_square", ",", "query_embeddings_key", ",", "query_square", ")", "\n", "\n", "dists", "=", "(", "torch", ".", "unsqueeze", "(", "dists", ",", "1", ")", "+", "\n", "torch", ".", "unsqueeze", "(", "wrong_label_mask", ",", "0", ")", "*", "\n", "WRONG_LABEL_PADDING_DISTANCE", ")", "\n", "\n", "features", ",", "_", "=", "torch", ".", "min", "(", "dists", ",", "2", ",", "keepdim", "=", "True", ")", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching._nearest_neighbor_features_per_object_in_chunks": [[86, 134], ["query_embeddings_flat.size", "int", "wrong_label_mask.permute.permute", "reference_embeddings_flat.pow().sum", "query_embeddings_flat.pow().sum", "range", "numpy.ceil", "matching._nn_features_per_object_for_chunk", "all_features.append", "torch.cat", "torch.cat", "torch.cat", "reference_embeddings_flat.pow", "query_embeddings_flat.pow", "float", "query_square_chunk.size"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching._nn_features_per_object_for_chunk"], ["", "def", "_nearest_neighbor_features_per_object_in_chunks", "(", "\n", "reference_embeddings_flat", ",", "query_embeddings_flat", ",", "reference_labels_flat", ",", "n_chunks", ")", ":", "\n", "    ", "\"\"\"Calculates the nearest neighbor features per object in chunks to save mem.\n    Uses chunking to bound the memory use.\n    Args:\n        reference_embeddings_flat: [n, embedding_dim],\n          the embedding vectors for the reference frame.\n        query_embeddings_flat: [m, embedding_dim], \n          the embedding vectors for the query frames.\n        reference_labels_flat: [n, n_objects], \n          the class labels of the reference frame.\n        n_chunks: Integer, the number of chunks to use to save memory\n          (set to 1 for no chunking).\n    Returns:\n        nn_features: [m, n_objects, n].\n    \"\"\"", "\n", "\n", "feature_dim", ",", "embedding_dim", "=", "query_embeddings_flat", ".", "size", "(", ")", "\n", "chunk_size", "=", "int", "(", "np", ".", "ceil", "(", "float", "(", "feature_dim", ")", "/", "n_chunks", ")", ")", "\n", "wrong_label_mask", "=", "reference_labels_flat", "<", "0.1", "\n", "wrong_label_mask", "=", "wrong_label_mask", ".", "permute", "(", "1", ",", "0", ")", "\n", "ref_square", "=", "reference_embeddings_flat", ".", "pow", "(", "2", ")", ".", "sum", "(", "1", ")", "\n", "query_square", "=", "query_embeddings_flat", ".", "pow", "(", "2", ")", ".", "sum", "(", "1", ")", "\n", "\n", "all_features", "=", "[", "]", "\n", "for", "n", "in", "range", "(", "n_chunks", ")", ":", "\n", "        ", "if", "n_chunks", "==", "1", ":", "\n", "            ", "query_embeddings_flat_chunk", "=", "query_embeddings_flat", "\n", "query_square_chunk", "=", "query_square", "\n", "chunk_start", "=", "0", "\n", "", "else", ":", "\n", "            ", "chunk_start", "=", "n", "*", "chunk_size", "\n", "chunk_end", "=", "(", "n", "+", "1", ")", "*", "chunk_size", "\n", "query_square_chunk", "=", "query_square", "[", "chunk_start", ":", "chunk_end", "]", "\n", "if", "query_square_chunk", ".", "size", "(", "0", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "", "query_embeddings_flat_chunk", "=", "query_embeddings_flat", "[", "chunk_start", ":", "chunk_end", "]", "\n", "", "features", "=", "_nn_features_per_object_for_chunk", "(", "\n", "reference_embeddings_flat", ",", "ref_square", ",", "query_embeddings_flat_chunk", ",", "query_square_chunk", ",", "\n", "wrong_label_mask", ")", "\n", "all_features", ".", "append", "(", "features", ")", "\n", "", "if", "n_chunks", "==", "1", ":", "\n", "        ", "nn_features", "=", "all_features", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "nn_features", "=", "torch", ".", "cat", "(", "all_features", ",", "dim", "=", "0", ")", "\n", "\n", "\n", "", "return", "nn_features", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.global_matching": [[136, 206], ["query_embeddings.half.size", "reference_labels.size", "reference_embeddings.half.view", "reference_labels.view", "query_embeddings.half.view", "torch.masked_select().view", "torch.masked_select().view", "torch.masked_select().view", "torch.masked_select().view", "torch.masked_select().view", "torch.masked_select().view", "matching._nearest_neighbor_features_per_object_in_chunks", "_nearest_neighbor_features_per_object_in_chunks.view", "query_embeddings.half.half", "reference_embeddings.half.half", "torch.zeros", "torch.zeros", "torch.zeros", "selected_points.view.view", "torch.sum", "torch.sum", "torch.sum", "torch.masked_select().view.size", "torch.ones", "torch.ones", "torch.ones", "nn_features_reshape.float.view().permute", "torch.interpolate().permute().view", "nn_features_reshape.float.float", "reference_embeddings.half.size", "reference_labels.size", "selected_points.view.view", "reference_labels.sum", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "all_ref_fg.expand", "all_ref_fg.expand", "nn_features_reshape.float.view", "torch.interpolate().permute", "dis_bias.view", "torch.interpolate"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching._nearest_neighbor_features_per_object_in_chunks"], ["", "def", "global_matching", "(", "\n", "reference_embeddings", ",", "query_embeddings", ",", "reference_labels", ",", "\n", "n_chunks", "=", "100", ",", "dis_bias", "=", "0.", ",", "ori_size", "=", "None", ",", "atrous_rate", "=", "1", ",", "use_float16", "=", "True", ",", "atrous_obj_pixel_num", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    Calculates the distance to the nearest neighbor per object.\n    For every pixel of query_embeddings calculate the distance to the\n    nearest neighbor in the (possibly subsampled) reference_embeddings per object.\n    Args:\n        reference_embeddings: [height, width, embedding_dim],\n          the embedding vectors for the reference frame.\n        query_embeddings: [height, width,\n          embedding_dim], the embedding vectors for the query frames.\n        reference_labels: [height, width, obj_nums], \n          the class labels of the reference frame.\n        n_chunks: Integer, the number of chunks to use to save memory\n          (set to 1 for no chunking).\n        dis_bias: [n_objects], foreground and background bias\n        ori_size: (ori_height, ori_width),\n          the original spatial size. If \"None\", (ori_height, ori_width) = (height, width).\n        atrous_rate: Integer, the atrous rate of reference_embeddings.\n        use_float16: Bool, if \"True\", use float16 type for matching.\n    Returns:\n        nn_features: [1, ori_height, ori_width, n_objects, feature_dim].\n    \"\"\"", "\n", "\n", "assert", "(", "reference_embeddings", ".", "size", "(", ")", "[", ":", "2", "]", "==", "reference_labels", ".", "size", "(", ")", "[", ":", "2", "]", ")", "\n", "if", "use_float16", ":", "\n", "        ", "query_embeddings", "=", "query_embeddings", ".", "half", "(", ")", "\n", "reference_embeddings", "=", "reference_embeddings", ".", "half", "(", ")", "\n", "", "h", ",", "w", ",", "embedding_dim", "=", "query_embeddings", ".", "size", "(", ")", "\n", "obj_nums", "=", "reference_labels", ".", "size", "(", "2", ")", "\n", "\n", "if", "atrous_rate", ">", "1", ":", "\n", "        ", "h_pad", "=", "(", "atrous_rate", "-", "h", "%", "atrous_rate", ")", "%", "atrous_rate", "\n", "w_pad", "=", "(", "atrous_rate", "-", "w", "%", "atrous_rate", ")", "%", "atrous_rate", "\n", "selected_points", "=", "torch", ".", "zeros", "(", "h", "+", "h_pad", ",", "w", "+", "w_pad", ",", "device", "=", "query_embeddings", ".", "device", ")", "\n", "selected_points", "=", "selected_points", ".", "view", "(", "(", "h", "+", "h_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ",", "\n", "(", "w", "+", "w_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ")", "\n", "selected_points", "[", ":", ",", "0", ",", ":", ",", "0", "]", "=", "1.", "\n", "selected_points", "=", "selected_points", ".", "view", "(", "h", "+", "h_pad", ",", "w", "+", "w_pad", ",", "1", ")", "[", ":", "h", ",", ":", "w", "]", "\n", "is_big_obj", "=", "reference_labels", ".", "sum", "(", "dim", "=", "(", "0", ",", "1", ")", ")", ">", "(", "atrous_obj_pixel_num", "*", "atrous_rate", "**", "2", ")", "\n", "reference_labels", "[", ":", ",", ":", ",", "is_big_obj", "]", "=", "reference_labels", "[", ":", ",", ":", ",", "is_big_obj", "]", "*", "selected_points", "\n", "\n", "", "reference_embeddings_flat", "=", "reference_embeddings", ".", "view", "(", "-", "1", ",", "embedding_dim", ")", "\n", "reference_labels_flat", "=", "reference_labels", ".", "view", "(", "-", "1", ",", "obj_nums", ")", "\n", "query_embeddings_flat", "=", "query_embeddings", ".", "view", "(", "-", "1", ",", "embedding_dim", ")", "\n", "\n", "all_ref_fg", "=", "torch", ".", "sum", "(", "reference_labels_flat", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ">", "0.9", "\n", "reference_labels_flat", "=", "torch", ".", "masked_select", "(", "reference_labels_flat", ",", "\n", "all_ref_fg", ".", "expand", "(", "-", "1", ",", "obj_nums", ")", ")", ".", "view", "(", "-", "1", ",", "obj_nums", ")", "\n", "if", "reference_labels_flat", ".", "size", "(", "0", ")", "==", "0", ":", "\n", "        ", "return", "torch", ".", "ones", "(", "1", ",", "h", ",", "w", ",", "obj_nums", ",", "1", ",", "device", "=", "all_ref_fg", ".", "device", ")", "\n", "", "reference_embeddings_flat", "=", "torch", ".", "masked_select", "(", "reference_embeddings_flat", ",", "\n", "all_ref_fg", ".", "expand", "(", "-", "1", ",", "embedding_dim", ")", ")", ".", "view", "(", "-", "1", ",", "embedding_dim", ")", "\n", "\n", "nn_features", "=", "_nearest_neighbor_features_per_object_in_chunks", "(", "\n", "reference_embeddings_flat", ",", "query_embeddings_flat", ",", "reference_labels_flat", ",", "\n", "n_chunks", ")", "\n", "\n", "nn_features_reshape", "=", "nn_features", ".", "view", "(", "1", ",", "h", ",", "w", ",", "obj_nums", ",", "1", ")", "\n", "nn_features_reshape", "=", "(", "torch", ".", "sigmoid", "(", "nn_features_reshape", "+", "dis_bias", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ",", "1", ")", ")", "-", "0.5", ")", "*", "2", "\n", "\n", "if", "ori_size", "is", "not", "None", ":", "\n", "        ", "nn_features_reshape", "=", "nn_features_reshape", ".", "view", "(", "h", ",", "w", ",", "obj_nums", ",", "1", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "nn_features_reshape", "=", "F", ".", "interpolate", "(", "nn_features_reshape", ",", "size", "=", "ori_size", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", ".", "view", "(", "1", ",", "ori_size", "[", "0", "]", ",", "ori_size", "[", "1", "]", ",", "obj_nums", ",", "1", ")", "\n", "\n", "", "if", "use_float16", ":", "\n", "        ", "nn_features_reshape", "=", "nn_features_reshape", ".", "float", "(", ")", "\n", "", "return", "nn_features_reshape", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.global_matching_for_eval": [[208, 338], ["query_embeddings.size", "all_reference_labels[].size", "len", "query_embeddings.view", "torch.masked_select().view", "torch.masked_select().view", "torch.masked_select().view", "torch.masked_select().view", "torch.masked_select().view", "torch.masked_select().view", "matching._nearest_neighbor_features_per_object_in_chunks", "_nearest_neighbor_features_per_object_in_chunks.view", "zip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sum", "torch.sum", "torch.sum", "reference_labels.view.size", "torch.ones", "torch.ones", "torch.ones", "query_embeddings_flat.half.half", "reference_embeddings.view.half", "nn_features_reshape.float.view().permute", "torch.interpolate().permute().view", "nn_features_reshape.float.float", "torch.zeros", "torch.zeros", "torch.zeros", "selected_points.view.view", "range", "F.pad.view", "F.pad.view", "all_reference_embeddings_flat.append", "all_reference_labels_flat.append", "F.pad.view", "F.pad.view", "zip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "selected_points.view.view", "F.pad.view", "F.pad.view", "reference_embeddings[].contiguous", "reference_labels[].contiguous", "range", "F.pad.view", "F.pad.view", "all_reference_embeddings_flat.append", "all_reference_labels_flat.append", "all_ref_fg.expand", "all_ref_fg.expand", "nn_features_reshape.float.view", "torch.interpolate().permute", "F.pad.sum", "torch.pad", "torch.pad", "F.pad.view", "F.pad.view", "reference_embeddings[].contiguous", "reference_labels[].contiguous", "dis_bias.view", "torch.pad", "torch.pad", "torch.interpolate"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching._nearest_neighbor_features_per_object_in_chunks"], ["", "def", "global_matching_for_eval", "(", "\n", "all_reference_embeddings", ",", "query_embeddings", ",", "all_reference_labels", ",", "\n", "n_chunks", "=", "20", ",", "dis_bias", "=", "0.", ",", "ori_size", "=", "None", ",", "atrous_rate", "=", "1", ",", "use_float16", "=", "True", ",", "atrous_obj_pixel_num", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    Calculates the distance to the nearest neighbor per object.\n    For every pixel of query_embeddings calculate the distance to the\n    nearest neighbor in the (possibly subsampled) reference_embeddings per object.\n    Args:\n        all_reference_embeddings: A list of reference_embeddings,\n          each with size [height, width, embedding_dim],\n          the embedding vectors for the reference frame.\n        query_embeddings: [n_query_images, height, width,\n          embedding_dim], the embedding vectors for the query frames.\n        all_reference_labels: A list of reference_labels,\n          each with size [height, width, obj_nums], \n          the class labels of the reference frame.\n        n_chunks: Integer, the number of chunks to use to save memory\n          (set to 1 for no chunking).\n        dis_bias: [n_objects], foreground and background bias\n        ori_size: (ori_height, ori_width),\n          the original spatial size. If \"None\", (ori_height, ori_width) = (height, width).\n        atrous_rate: Integer, the atrous rate of reference_embeddings.\n        use_float16: Bool, if \"True\", use float16 type for matching.\n    Returns:\n        nn_features: [n_query_images, ori_height, ori_width, n_objects, feature_dim].\n    \"\"\"", "\n", "\n", "h", ",", "w", ",", "embedding_dim", "=", "query_embeddings", ".", "size", "(", ")", "\n", "obj_nums", "=", "all_reference_labels", "[", "0", "]", ".", "size", "(", "2", ")", "\n", "all_reference_embeddings_flat", "=", "[", "]", "\n", "all_reference_labels_flat", "=", "[", "]", "\n", "ref_num", "=", "len", "(", "all_reference_labels", ")", "\n", "n_chunks", "*=", "ref_num", "\n", "if", "atrous_obj_pixel_num", ">", "0", ":", "\n", "        ", "if", "atrous_rate", ">", "1", ":", "\n", "            ", "h_pad", "=", "(", "atrous_rate", "-", "h", "%", "atrous_rate", ")", "%", "atrous_rate", "\n", "w_pad", "=", "(", "atrous_rate", "-", "w", "%", "atrous_rate", ")", "%", "atrous_rate", "\n", "selected_points", "=", "torch", ".", "zeros", "(", "h", "+", "h_pad", ",", "w", "+", "w_pad", ",", "device", "=", "query_embeddings", ".", "device", ")", "\n", "selected_points", "=", "selected_points", ".", "view", "(", "(", "h", "+", "h_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ",", "\n", "(", "w", "+", "w_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ")", "\n", "selected_points", "[", ":", ",", "0", ",", ":", ",", "0", "]", "=", "1.", "\n", "selected_points", "=", "selected_points", ".", "view", "(", "h", "+", "h_pad", ",", "w", "+", "w_pad", ",", "1", ")", "[", ":", "h", ",", ":", "w", "]", "\n", "\n", "", "for", "reference_embeddings", ",", "reference_labels", ",", "idx", "in", "zip", "(", "all_reference_embeddings", ",", "all_reference_labels", ",", "range", "(", "ref_num", ")", ")", ":", "\n", "            ", "if", "atrous_rate", ">", "1", ":", "\n", "                ", "is_big_obj", "=", "reference_labels", ".", "sum", "(", "dim", "=", "(", "0", ",", "1", ")", ")", ">", "(", "atrous_obj_pixel_num", "*", "atrous_rate", "**", "2", ")", "\n", "reference_labels", "[", ":", ",", ":", ",", "is_big_obj", "]", "=", "reference_labels", "[", ":", ",", ":", ",", "is_big_obj", "]", "*", "selected_points", "\n", "\n", "", "reference_embeddings_flat", "=", "reference_embeddings", ".", "view", "(", "-", "1", ",", "embedding_dim", ")", "\n", "reference_labels_flat", "=", "reference_labels", ".", "view", "(", "-", "1", ",", "obj_nums", ")", "\n", "\n", "all_reference_embeddings_flat", ".", "append", "(", "reference_embeddings_flat", ")", "\n", "all_reference_labels_flat", ".", "append", "(", "reference_labels_flat", ")", "\n", "\n", "", "reference_embeddings_flat", "=", "torch", ".", "cat", "(", "all_reference_embeddings_flat", ",", "dim", "=", "0", ")", "\n", "reference_labels_flat", "=", "torch", ".", "cat", "(", "all_reference_labels_flat", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "        ", "if", "ref_num", "==", "1", ":", "\n", "            ", "reference_embeddings", ",", "reference_labels", "=", "all_reference_embeddings", "[", "0", "]", ",", "all_reference_labels", "[", "0", "]", "\n", "if", "atrous_rate", ">", "1", ":", "\n", "                ", "h_pad", "=", "(", "atrous_rate", "-", "h", "%", "atrous_rate", ")", "%", "atrous_rate", "\n", "w_pad", "=", "(", "atrous_rate", "-", "w", "%", "atrous_rate", ")", "%", "atrous_rate", "\n", "if", "h_pad", ">", "0", "or", "w_pad", ">", "0", ":", "\n", "                    ", "reference_embeddings", "=", "F", ".", "pad", "(", "reference_embeddings", ",", "(", "0", ",", "0", ",", "0", ",", "w_pad", ",", "0", ",", "h_pad", ")", ")", "\n", "reference_labels", "=", "F", ".", "pad", "(", "reference_labels", ",", "(", "0", ",", "0", ",", "0", ",", "w_pad", ",", "0", ",", "h_pad", ")", ")", "\n", "\n", "", "reference_embeddings", "=", "reference_embeddings", ".", "view", "(", "(", "h", "+", "h_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ",", "\n", "(", "w", "+", "w_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ",", "-", "1", ")", "\n", "reference_labels", "=", "reference_labels", ".", "view", "(", "(", "h", "+", "h_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ",", "\n", "(", "w", "+", "w_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ",", "-", "1", ")", "\n", "reference_embeddings", "=", "reference_embeddings", "[", ":", ",", "0", ",", ":", ",", "0", ",", ":", "]", ".", "contiguous", "(", ")", "\n", "reference_labels", "=", "reference_labels", "[", ":", ",", "0", ",", ":", ",", "0", ",", ":", "]", ".", "contiguous", "(", ")", "\n", "", "reference_embeddings_flat", "=", "reference_embeddings", ".", "view", "(", "-", "1", ",", "embedding_dim", ")", "\n", "reference_labels_flat", "=", "reference_labels", ".", "view", "(", "-", "1", ",", "obj_nums", ")", "\n", "", "else", ":", "\n", "\n", "            ", "for", "reference_embeddings", ",", "reference_labels", ",", "idx", "in", "zip", "(", "all_reference_embeddings", ",", "all_reference_labels", ",", "range", "(", "ref_num", ")", ")", ":", "\n", "                ", "if", "atrous_rate", ">", "1", ":", "\n", "                    ", "h_pad", "=", "(", "atrous_rate", "-", "h", "%", "atrous_rate", ")", "%", "atrous_rate", "\n", "w_pad", "=", "(", "atrous_rate", "-", "w", "%", "atrous_rate", ")", "%", "atrous_rate", "\n", "if", "h_pad", ">", "0", "or", "w_pad", ">", "0", ":", "\n", "                        ", "reference_embeddings", "=", "F", ".", "pad", "(", "reference_embeddings", ",", "(", "0", ",", "0", ",", "0", ",", "w_pad", ",", "0", ",", "h_pad", ")", ")", "\n", "reference_labels", "=", "F", ".", "pad", "(", "reference_labels", ",", "(", "0", ",", "0", ",", "0", ",", "w_pad", ",", "0", ",", "h_pad", ")", ")", "\n", "\n", "", "reference_embeddings", "=", "reference_embeddings", ".", "view", "(", "(", "h", "+", "h_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ",", "\n", "(", "w", "+", "w_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ",", "-", "1", ")", "\n", "reference_labels", "=", "reference_labels", ".", "view", "(", "(", "h", "+", "h_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ",", "\n", "(", "w", "+", "w_pad", ")", "//", "atrous_rate", ",", "atrous_rate", ",", "-", "1", ")", "\n", "reference_embeddings", "=", "reference_embeddings", "[", ":", ",", "0", ",", ":", ",", "0", ",", ":", "]", ".", "contiguous", "(", ")", "\n", "reference_labels", "=", "reference_labels", "[", ":", ",", "0", ",", ":", ",", "0", ",", ":", "]", ".", "contiguous", "(", ")", "\n", "\n", "\n", "", "reference_embeddings_flat", "=", "reference_embeddings", ".", "view", "(", "-", "1", ",", "embedding_dim", ")", "\n", "reference_labels_flat", "=", "reference_labels", ".", "view", "(", "-", "1", ",", "obj_nums", ")", "\n", "\n", "all_reference_embeddings_flat", ".", "append", "(", "reference_embeddings_flat", ")", "\n", "all_reference_labels_flat", ".", "append", "(", "reference_labels_flat", ")", "\n", "\n", "", "reference_embeddings_flat", "=", "torch", ".", "cat", "(", "all_reference_embeddings_flat", ",", "dim", "=", "0", ")", "\n", "reference_labels_flat", "=", "torch", ".", "cat", "(", "all_reference_labels_flat", ",", "dim", "=", "0", ")", "\n", "\n", "\n", "\n", "", "", "query_embeddings_flat", "=", "query_embeddings", ".", "view", "(", "-", "1", ",", "embedding_dim", ")", "\n", "\n", "all_ref_fg", "=", "torch", ".", "sum", "(", "reference_labels_flat", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ">", "0.9", "\n", "reference_labels_flat", "=", "torch", ".", "masked_select", "(", "reference_labels_flat", ",", "\n", "all_ref_fg", ".", "expand", "(", "-", "1", ",", "obj_nums", ")", ")", ".", "view", "(", "-", "1", ",", "obj_nums", ")", "\n", "if", "reference_labels_flat", ".", "size", "(", "0", ")", "==", "0", ":", "\n", "        ", "return", "torch", ".", "ones", "(", "1", ",", "h", ",", "w", ",", "obj_nums", ",", "1", ",", "device", "=", "all_ref_fg", ".", "device", ")", "\n", "", "reference_embeddings_flat", "=", "torch", ".", "masked_select", "(", "reference_embeddings_flat", ",", "\n", "all_ref_fg", ".", "expand", "(", "-", "1", ",", "embedding_dim", ")", ")", ".", "view", "(", "-", "1", ",", "embedding_dim", ")", "\n", "\n", "if", "use_float16", ":", "\n", "        ", "query_embeddings_flat", "=", "query_embeddings_flat", ".", "half", "(", ")", "\n", "reference_embeddings_flat", "=", "reference_embeddings_flat", ".", "half", "(", ")", "\n", "", "nn_features", "=", "_nearest_neighbor_features_per_object_in_chunks", "(", "\n", "reference_embeddings_flat", ",", "query_embeddings_flat", ",", "reference_labels_flat", ",", "n_chunks", ")", "\n", "\n", "nn_features_reshape", "=", "nn_features", ".", "view", "(", "1", ",", "h", ",", "w", ",", "obj_nums", ",", "1", ")", "\n", "nn_features_reshape", "=", "(", "torch", ".", "sigmoid", "(", "nn_features_reshape", "+", "dis_bias", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ",", "1", ")", ")", "-", "0.5", ")", "*", "2", "\n", "\n", "if", "ori_size", "is", "not", "None", ":", "\n", "        ", "nn_features_reshape", "=", "nn_features_reshape", ".", "view", "(", "h", ",", "w", ",", "obj_nums", ",", "1", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "nn_features_reshape", "=", "F", ".", "interpolate", "(", "nn_features_reshape", ",", "size", "=", "ori_size", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", ".", "view", "(", "1", ",", "ori_size", "[", "0", "]", ",", "ori_size", "[", "1", "]", ",", "obj_nums", ",", "1", ")", "\n", "\n", "", "if", "use_float16", ":", "\n", "        ", "nn_features_reshape", "=", "nn_features_reshape", ".", "float", "(", ")", "\n", "", "return", "nn_features_reshape", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.local_pairwise_distances": [[340, 385], ["torch.functional.pad", "x.squeeze().permute.size", "range", "torch.stack", "torch.stack", "torch.stack", "x.squeeze().permute.size", "x.squeeze().permute.permute().unsqueeze", "y.squeeze().permute.permute().unsqueeze", "torch.interpolate", "torch.interpolate", "x.squeeze().permute.squeeze().permute", "y.squeeze().permute.squeeze().permute", "range", "torch.sum", "torch.sum", "torch.sum", "torch.stack.append", "x.squeeze().permute.permute", "y.squeeze().permute.permute", "int", "int", "x.squeeze().permute.squeeze", "y.squeeze().permute.squeeze", "torch.pow", "torch.pow", "torch.pow"], "function", ["None"], ["", "def", "local_pairwise_distances", "(", "\n", "x", ",", "y", ",", "max_distance", "=", "9", ",", "atrous_rate", "=", "1", ",", "allow_downsample", "=", "False", ")", ":", "\n", "    ", "\"\"\"Computes pairwise squared l2 distances using a local search window.\n        Use for-loop for saving memory.\n    Args:\n        x: Float32 tensor of shape [height, width, feature_dim].\n        y: Float32 tensor of shape [height, width, feature_dim].\n        max_distance: Integer, the maximum distance in pixel coordinates\n          per dimension which is considered to be in the search window.\n        atrous_rate: Integer, the atrous rate of local matching.\n        allow_downsample: Bool, if \"True\", downsample x and y\n          with a stride of 2.\n    Returns:\n        Float32 distances tensor of shape [height, width, (2 * max_distance + 1) ** 2].\n    \"\"\"", "\n", "if", "allow_downsample", ":", "\n", "        ", "ori_height", ",", "ori_width", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "y", "=", "y", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "down_size", "=", "(", "int", "(", "ori_height", "/", "2", ")", "+", "1", ",", "int", "(", "ori_width", "/", "2", ")", "+", "1", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "down_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "y", "=", "F", ".", "interpolate", "(", "y", ",", "size", "=", "down_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "x", "=", "x", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "y", "=", "y", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "", "pad_max_distance", "=", "max_distance", "-", "max_distance", "%", "atrous_rate", "\n", "padded_y", "=", "nn", ".", "functional", ".", "pad", "(", "y", ",", "\n", "(", "0", ",", "0", ",", "pad_max_distance", ",", "pad_max_distance", ",", "pad_max_distance", ",", "pad_max_distance", ")", ",", "\n", "mode", "=", "'constant'", ",", "value", "=", "WRONG_LABEL_PADDING_DISTANCE", ")", "\n", "\n", "height", ",", "width", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "dists", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", "*", "pad_max_distance", "//", "atrous_rate", "+", "1", ")", ":", "\n", "        ", "i_start", "=", "i", "*", "atrous_rate", "\n", "i_end", "=", "i_start", "+", "height", "\n", "y_slice", "=", "padded_y", "[", "i_start", ":", "i_end", "]", "\n", "for", "j", "in", "range", "(", "2", "*", "max_distance", "+", "1", ")", ":", "\n", "            ", "j_start", "=", "j", "*", "atrous_rate", "\n", "j_end", "=", "j_start", "+", "width", "\n", "offset_y", "=", "y_slice", "[", ":", ",", "j_start", ":", "j_end", "]", "\n", "dist", "=", "torch", ".", "sum", "(", "torch", ".", "pow", "(", "(", "x", "-", "offset_y", ")", ",", "2", ")", ",", "dim", "=", "2", ")", "\n", "dists", ".", "append", "(", "dist", ")", "\n", "", "", "dists", "=", "torch", ".", "stack", "(", "dists", ",", "dim", "=", "2", ")", "\n", "\n", "return", "dists", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.local_pairwise_distances_parallel": [[386, 429], ["F.interpolate.size", "F.interpolate.permute().unsqueeze", "F.interpolate.permute().unsqueeze", "F.interpolate.size", "F.interpolate.pow().sum().view", "F.interpolate.pow().sum().view", "torch.pad", "torch.pad", "torch.unfold().view().permute", "torch.unfold().view", "F.interpolate.view().permute", "torch.interpolate", "torch.interpolate", "F.interpolate.permute", "F.interpolate.permute", "F.interpolate.pow().sum", "F.interpolate.pow().sum", "torch.unfold().view", "torch.unfold", "F.interpolate.view", "torch.matmul().view", "torch.matmul().view", "torch.matmul().view", "int", "int", "F.interpolate.pow", "F.interpolate.pow", "torch.unfold", "torch.matmul", "torch.matmul", "torch.matmul"], "function", ["None"], ["", "def", "local_pairwise_distances_parallel", "(", "\n", "x", ",", "y", ",", "max_distance", "=", "9", ",", "atrous_rate", "=", "1", ",", "allow_downsample", "=", "True", ")", ":", "\n", "    ", "\"\"\"Computes pairwise squared l2 distances using a local search window.\n    Args:\n        x: Float32 tensor of shape [height, width, feature_dim].\n        y: Float32 tensor of shape [height, width, feature_dim].\n        max_distance: Integer, the maximum distance in pixel coordinates\n          per dimension which is considered to be in the search window.\n        atrous_rate: Integer, the atrous rate of local matching.\n        allow_downsample: Bool, if \"True\", downsample x and y\n          with a stride of 2.\n    Returns:\n        Float32 distances tensor of shape [height, width, (2 * max_distance + 1) ** 2].\n    \"\"\"", "\n", "ori_height", ",", "ori_width", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "y", "=", "y", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "if", "allow_downsample", ":", "\n", "        ", "down_size", "=", "(", "int", "(", "ori_height", "/", "2", ")", "+", "1", ",", "int", "(", "ori_width", "/", "2", ")", "+", "1", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "down_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "y", "=", "F", ".", "interpolate", "(", "y", ",", "size", "=", "down_size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "", "_", ",", "channels", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "\n", "x2", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "view", "(", "height", ",", "width", ",", "1", ")", "\n", "\n", "y2", "=", "y", ".", "pow", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "view", "(", "1", ",", "1", ",", "height", ",", "width", ")", "\n", "\n", "pad_max_distance", "=", "max_distance", "-", "max_distance", "%", "atrous_rate", "\n", "\n", "padded_y", "=", "F", ".", "pad", "(", "y", ",", "(", "pad_max_distance", ",", "pad_max_distance", ",", "pad_max_distance", ",", "pad_max_distance", ")", ")", "\n", "padded_y2", "=", "F", ".", "pad", "(", "y2", ",", "(", "pad_max_distance", ",", "pad_max_distance", ",", "pad_max_distance", ",", "pad_max_distance", ")", ",", "\n", "mode", "=", "'constant'", ",", "value", "=", "WRONG_LABEL_PADDING_DISTANCE", ")", "\n", "\n", "offset_y", "=", "F", ".", "unfold", "(", "padded_y", ",", "kernel_size", "=", "(", "height", ",", "width", ")", ",", "\n", "stride", "=", "(", "atrous_rate", ",", "atrous_rate", ")", ")", ".", "view", "(", "channels", ",", "height", "*", "width", ",", "-", "1", ")", ".", "permute", "(", "1", ",", "0", ",", "2", ")", "\n", "offset_y2", "=", "F", ".", "unfold", "(", "padded_y2", ",", "kernel_size", "=", "(", "height", ",", "width", ")", ",", "\n", "stride", "=", "(", "atrous_rate", ",", "atrous_rate", ")", ")", ".", "view", "(", "height", ",", "width", ",", "-", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "channels", ",", "height", "*", "width", ",", "-", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "dists", "=", "x2", "+", "offset_y2", "-", "2.", "*", "torch", ".", "matmul", "(", "x", ",", "offset_y", ")", ".", "view", "(", "height", ",", "width", ",", "-", "1", ")", "\n", "\n", "return", "dists", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.local_matching": [[433, 526], ["prev_frame_labels.size", "prev_frame_labels.permute().unsqueeze", "torch.pad", "local_pairwise_distances.unsqueeze().expand", "torch.where", "torch.where", "torch.where", "torch.min", "torch.min", "torch.min", "torch.where.view", "torch.cat", "torch.cat", "torch.cat", "F.interpolate.permute", "F.interpolate.view", "torch.ones", "torch.ones", "torch.ones", "query_embedding.half.half", "prev_frame_embedding.half.half", "pad.half.half", "matching.local_pairwise_distances_parallel", "matching.local_pairwise_distances", "local_pairwise_distances.size", "torch.interpolate", "torch.unfold().view().permute", "dists.permute().unsqueeze", "reshaped_d_masked[].contiguous", "new_d_masked.view.view", "torch.min", "torch.min", "torch.min", "new_dists.permute().unsqueeze.permute().unsqueeze", "F.interpolate.append", "F.interpolate.float", "torch.interpolate", "prev_frame_embedding.half.size", "prev_frame_labels.permute", "local_pairwise_distances.unsqueeze", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.unfold().view", "dists.permute", "new_dists.permute().unsqueeze.permute", "dis_bias.view", "torch.unfold"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.local_pairwise_distances_parallel", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.local_pairwise_distances"], ["", "def", "local_matching", "(", "\n", "prev_frame_embedding", ",", "query_embedding", ",", "prev_frame_labels", ",", "\n", "dis_bias", "=", "0.", ",", "multi_local_distance", "=", "[", "15", "]", ",", "\n", "ori_size", "=", "None", ",", "atrous_rate", "=", "1", ",", "use_float16", "=", "True", ",", "allow_downsample", "=", "True", ",", "allow_parallel", "=", "True", ")", ":", "\n", "    ", "\"\"\"Computes nearest neighbor features while only allowing local matches.\n    Args:\n        prev_frame_embedding: [height, width, embedding_dim],\n          the embedding vectors for the last frame.\n        query_embedding: [height, width, embedding_dim],\n          the embedding vectors for the query frames.\n        prev_frame_labels: [height, width, n_objects], \n        the class labels of the previous frame.\n        multi_local_distance: A list of Integer, \n          a list of maximum distance allowed for local matching.\n        ori_size: (ori_height, ori_width),\n          the original spatial size. If \"None\", (ori_height, ori_width) = (height, width).\n        atrous_rate: Integer, the atrous rate of local matching.\n        use_float16: Bool, if \"True\", use float16 type for matching.\n        allow_downsample: Bool, if \"True\", downsample prev_frame_embedding and query_embedding\n          with a stride of 2.\n        allow_parallel: Bool, if \"True\", do matching in a parallel way. If \"False\", do matching in\n          a for-loop way, which will save GPU memory.\n    Returns:\n        nn_features: A float32 np.array of nearest neighbor features of shape\n          [1, height, width, n_objects, 1].\n    \"\"\"", "\n", "max_distance", "=", "multi_local_distance", "[", "-", "1", "]", "\n", "\n", "if", "ori_size", "is", "None", ":", "\n", "        ", "height", ",", "width", "=", "prev_frame_embedding", ".", "size", "(", ")", "[", ":", "2", "]", "\n", "ori_size", "=", "(", "height", ",", "width", ")", "\n", "\n", "", "obj_num", "=", "prev_frame_labels", ".", "size", "(", "2", ")", "\n", "pad", "=", "torch", ".", "ones", "(", "1", ",", "device", "=", "prev_frame_embedding", ".", "device", ")", "*", "WRONG_LABEL_PADDING_DISTANCE", "\n", "if", "use_float16", ":", "\n", "        ", "query_embedding", "=", "query_embedding", ".", "half", "(", ")", "\n", "prev_frame_embedding", "=", "prev_frame_embedding", ".", "half", "(", ")", "\n", "pad", "=", "pad", ".", "half", "(", ")", "\n", "\n", "", "if", "allow_parallel", ":", "\n", "        ", "d", "=", "local_pairwise_distances_parallel", "(", "query_embedding", ",", "prev_frame_embedding", ",", "\n", "max_distance", "=", "max_distance", ",", "atrous_rate", "=", "atrous_rate", ",", "allow_downsample", "=", "allow_downsample", ")", "\n", "", "else", ":", "\n", "        ", "d", "=", "local_pairwise_distances", "(", "query_embedding", ",", "prev_frame_embedding", ",", "\n", "max_distance", "=", "max_distance", ",", "atrous_rate", "=", "atrous_rate", ",", "allow_downsample", "=", "allow_downsample", ")", "\n", "\n", "", "height", ",", "width", "=", "d", ".", "size", "(", ")", "[", ":", "2", "]", "\n", "\n", "labels", "=", "prev_frame_labels", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "if", "(", "height", ",", "width", ")", "!=", "ori_size", ":", "\n", "        ", "labels", "=", "F", ".", "interpolate", "(", "labels", ",", "size", "=", "(", "height", ",", "width", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "", "pad_max_distance", "=", "max_distance", "-", "max_distance", "%", "atrous_rate", "\n", "atrous_max_distance", "=", "pad_max_distance", "//", "atrous_rate", "\n", "\n", "padded_labels", "=", "F", ".", "pad", "(", "labels", ",", "\n", "(", "pad_max_distance", ",", "pad_max_distance", ",", "\n", "pad_max_distance", ",", "pad_max_distance", ",", "\n", ")", ",", "mode", "=", "'constant'", ",", "value", "=", "0", ")", "\n", "offset_masks", "=", "F", ".", "unfold", "(", "padded_labels", ",", "kernel_size", "=", "(", "height", ",", "width", ")", ",", "\n", "stride", "=", "(", "atrous_rate", ",", "atrous_rate", ")", ")", ".", "view", "(", "obj_num", ",", "height", ",", "width", ",", "-", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "3", ",", "0", ")", ">", "0.9", "\n", "\n", "d_tiled", "=", "d", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "(", "-", "1", ",", "-", "1", ",", "-", "1", ",", "obj_num", ")", ")", "# h, w, num_local_pos, obj_num", "\n", "\n", "d_masked", "=", "torch", ".", "where", "(", "offset_masks", ",", "d_tiled", ",", "pad", ")", "\n", "dists", ",", "pos", "=", "torch", ".", "min", "(", "d_masked", ",", "dim", "=", "2", ")", "\n", "multi_dists", "=", "[", "dists", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", "]", "# n_objects, num_multi_local, h, w", "\n", "\n", "reshaped_d_masked", "=", "d_masked", ".", "view", "(", "height", ",", "width", ",", "2", "*", "atrous_max_distance", "+", "1", ",", "\n", "2", "*", "atrous_max_distance", "+", "1", ",", "obj_num", ")", "\n", "for", "local_dis", "in", "multi_local_distance", "[", ":", "-", "1", "]", ":", "\n", "        ", "local_dis", "=", "local_dis", "//", "atrous_rate", "\n", "start_idx", "=", "atrous_max_distance", "-", "local_dis", "\n", "end_idx", "=", "atrous_max_distance", "+", "local_dis", "+", "1", "\n", "new_d_masked", "=", "reshaped_d_masked", "[", ":", ",", ":", ",", "start_idx", ":", "end_idx", ",", "start_idx", ":", "end_idx", ",", ":", "]", ".", "contiguous", "(", ")", "\n", "new_d_masked", "=", "new_d_masked", ".", "view", "(", "height", ",", "width", ",", "-", "1", ",", "obj_num", ")", "\n", "new_dists", ",", "_", "=", "torch", ".", "min", "(", "new_d_masked", ",", "dim", "=", "2", ")", "\n", "new_dists", "=", "new_dists", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "multi_dists", ".", "append", "(", "new_dists", ")", "\n", "\n", "", "multi_dists", "=", "torch", ".", "cat", "(", "multi_dists", ",", "dim", "=", "1", ")", "\n", "multi_dists", "=", "(", "torch", ".", "sigmoid", "(", "multi_dists", "+", "dis_bias", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", ")", "-", "0.5", ")", "*", "2", "\n", "\n", "if", "use_float16", ":", "\n", "        ", "multi_dists", "=", "multi_dists", ".", "float", "(", ")", "\n", "\n", "", "if", "(", "height", ",", "width", ")", "!=", "ori_size", ":", "\n", "        ", "multi_dists", "=", "F", ".", "interpolate", "(", "multi_dists", ",", "size", "=", "ori_size", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "multi_dists", "=", "multi_dists", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "multi_dists", "=", "multi_dists", ".", "view", "(", "1", ",", "ori_size", "[", "0", "]", ",", "ori_size", "[", "1", "]", ",", "obj_num", ",", "-", "1", ")", "\n", "\n", "return", "multi_dists", "\n", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.normalization.FrozenBatchNorm2d.__init__": [[11, 18], ["torch.Module.__init__", "normalization.FrozenBatchNorm2d.register_buffer", "normalization.FrozenBatchNorm2d.register_buffer", "normalization.FrozenBatchNorm2d.register_buffer", "normalization.FrozenBatchNorm2d.register_buffer", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["def", "__init__", "(", "self", ",", "n", ",", "epsilon", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", "FrozenBatchNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "register_buffer", "(", "\"weight\"", ",", "torch", ".", "ones", "(", "n", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"bias\"", ",", "torch", ".", "zeros", "(", "n", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"running_mean\"", ",", "torch", ".", "zeros", "(", "n", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"running_var\"", ",", "torch", ".", "ones", "(", "n", ")", ")", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.normalization.FrozenBatchNorm2d.forward": [[19, 25], ["scale.reshape.reshape.reshape", "bias.reshape.reshape.reshape"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "scale", "=", "self", ".", "weight", "*", "(", "self", ".", "running_var", "+", "self", ".", "epsilon", ")", ".", "rsqrt", "(", ")", "\n", "bias", "=", "self", ".", "bias", "-", "self", ".", "running_mean", "*", "scale", "\n", "scale", "=", "scale", ".", "reshape", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "bias", "=", "bias", ".", "reshape", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "scale", "+", "bias", "", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.fpn.FPN.__init__": [[8, 16], ["torch.nn.Module.__init__", "fpn.FPN._make_layer", "fpn.FPN._make_layer", "fpn.FPN._make_layer", "fpn.FPN._make_layer", "fpn.FPN._make_layer"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "in_dim_4x", ",", "in_dim_8x", ",", "in_dim_16x", ",", "out_dim", ")", ":", "\n", "        ", "super", "(", "FPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "toplayer", "=", "self", ".", "_make_layer", "(", "in_dim_16x", ",", "out_dim", ")", "\n", "self", ".", "latlayer1", "=", "self", ".", "_make_layer", "(", "in_dim_8x", ",", "out_dim", ")", "\n", "self", ".", "latlayer2", "=", "self", ".", "_make_layer", "(", "in_dim_4x", ",", "out_dim", ")", "\n", "\n", "self", ".", "smooth1", "=", "self", ".", "_make_layer", "(", "out_dim", ",", "out_dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "smooth2", "=", "self", ".", "_make_layer", "(", "out_dim", ",", "out_dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.fpn.FPN.forward": [[17, 30], ["fpn.FPN.toplayer", "fpn.FPN.latlayer1", "fpn.FPN.latlayer2", "fpn.FPN.smooth1", "fpn.FPN.smooth2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "fpn.FPN.size", "fpn.FPN.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_4x", ",", "x_8x", ",", "x_16x", ")", ":", "\n", "\n", "        ", "x_16x", "=", "self", ".", "toplayer", "(", "x_16x", ")", "\n", "x_8x", "=", "self", ".", "latlayer1", "(", "x_8x", ")", "\n", "x_4x", "=", "self", ".", "latlayer2", "(", "x_4x", ")", "\n", "\n", "x_8x", "=", "x_8x", "+", "F", ".", "interpolate", "(", "x_16x", ",", "size", "=", "x_8x", ".", "size", "(", ")", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "x_4x", "=", "x_4x", "+", "F", ".", "interpolate", "(", "x_8x", ",", "size", "=", "x_4x", ".", "size", "(", ")", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "x_8x", "=", "self", ".", "smooth1", "(", "x_8x", ")", "\n", "x_4x", "=", "self", ".", "smooth2", "(", "x_4x", ")", "\n", "\n", "return", "F", ".", "relu", "(", "x_4x", ")", ",", "F", ".", "relu", "(", "x_8x", ")", ",", "F", ".", "relu", "(", "x_16x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.fpn.FPN._make_layer": [[32, 36], ["torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.GroupNorm", "torch.nn.GroupNorm"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "in_dim", ",", "out_dim", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_dim", ",", "out_dim", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "GroupNorm", "(", "32", ",", "out_dim", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.loss.Concat_BCEWithLogitsLoss.__init__": [[6, 17], ["torch.Module.__init__", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "top_k_percent_pixels", "=", "None", ",", "\n", "hard_example_mining_step", "=", "100000", ")", ":", "\n", "        ", "super", "(", "Concat_BCEWithLogitsLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "top_k_percent_pixels", "=", "top_k_percent_pixels", "\n", "if", "top_k_percent_pixels", "is", "not", "None", ":", "\n", "            ", "assert", "(", "top_k_percent_pixels", ">", "0", "and", "top_k_percent_pixels", "<", "1", ")", "\n", "", "self", ".", "hard_example_mining_step", "=", "hard_example_mining_step", "\n", "if", "self", ".", "top_k_percent_pixels", "==", "None", ":", "\n", "            ", "self", ".", "bceloss", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'mean'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bceloss", "=", "nn", ".", "BCEWithLogitsLoss", "(", "reduction", "=", "'none'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.loss.Concat_BCEWithLogitsLoss.forward": [[18, 50], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "loss.Concat_BCEWithLogitsLoss.unsqueeze", "torch.cat.append", "torch.cat.append", "loss.Concat_BCEWithLogitsLoss.bceloss", "float", "pred_logits.view.view.view", "gts.view.view.view", "loss.Concat_BCEWithLogitsLoss.bceloss", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "pred_logits.view.view.size", "gts.view.view.size", "int", "min", "int", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "pred_logits.view.view.size", "pred_logits.view.view.size", "pred_logits.view.view.size", "pred_logits.view.view.size", "gts.view.view.size", "gts.view.view.size", "float"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "dic_tmp", ",", "y", ",", "step", ")", ":", "\n", "        ", "total_loss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dic_tmp", ")", ")", ":", "\n", "            ", "pred_logits", "=", "dic_tmp", "[", "i", "]", "\n", "gts", "=", "y", "[", "i", "]", "\n", "if", "self", ".", "top_k_percent_pixels", "==", "None", ":", "\n", "                ", "final_loss", "=", "self", ".", "bceloss", "(", "pred_logits", ",", "gts", ")", "\n", "", "else", ":", "\n", "# Only compute the loss for top k percent pixels.", "\n", "# First, compute the loss for all pixels. Note we do not put the loss", "\n", "# to loss_collection and set reduction = None to keep the shape.", "\n", "                ", "num_pixels", "=", "float", "(", "pred_logits", ".", "size", "(", "2", ")", "*", "pred_logits", ".", "size", "(", "3", ")", ")", "\n", "pred_logits", "=", "pred_logits", ".", "view", "(", "-", "1", ",", "pred_logits", ".", "size", "(", "\n", "1", ")", ",", "pred_logits", ".", "size", "(", "2", ")", "*", "pred_logits", ".", "size", "(", "3", ")", ")", "\n", "gts", "=", "gts", ".", "view", "(", "-", "1", ",", "gts", ".", "size", "(", "1", ")", ",", "gts", ".", "size", "(", "2", ")", "*", "gts", ".", "size", "(", "3", ")", ")", "\n", "pixel_losses", "=", "self", ".", "bceloss", "(", "pred_logits", ",", "gts", ")", "\n", "if", "self", ".", "hard_example_mining_step", "==", "0", ":", "\n", "                    ", "top_k_pixels", "=", "int", "(", "self", ".", "top_k_percent_pixels", "*", "num_pixels", ")", "\n", "", "else", ":", "\n", "                    ", "ratio", "=", "min", "(", "\n", "1.0", ",", "step", "/", "float", "(", "self", ".", "hard_example_mining_step", ")", ")", "\n", "top_k_pixels", "=", "int", "(", "\n", "(", "ratio", "*", "self", ".", "top_k_percent_pixels", "+", "(", "1.0", "-", "ratio", ")", ")", "*", "num_pixels", ")", "\n", "", "_", ",", "top_k_indices", "=", "torch", ".", "topk", "(", "\n", "pixel_losses", ",", "k", "=", "top_k_pixels", ",", "dim", "=", "2", ")", "\n", "\n", "final_loss", "=", "nn", ".", "BCEWithLogitsLoss", "(", "\n", "weight", "=", "top_k_indices", ",", "reduction", "=", "'mean'", ")", "(", "pred_logits", ",", "gts", ")", "\n", "", "final_loss", "=", "final_loss", ".", "unsqueeze", "(", "0", ")", "\n", "total_loss", ".", "append", "(", "final_loss", ")", "\n", "", "total_loss", "=", "torch", ".", "cat", "(", "total_loss", ",", "dim", "=", "0", ")", "\n", "return", "total_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.loss.Concat_CrossEntropyLoss.__init__": [[53, 66], ["torch.Module.__init__", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "top_k_percent_pixels", "=", "None", ",", "\n", "hard_example_mining_step", "=", "100000", ")", ":", "\n", "        ", "super", "(", "Concat_CrossEntropyLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "top_k_percent_pixels", "=", "top_k_percent_pixels", "\n", "if", "top_k_percent_pixels", "is", "not", "None", ":", "\n", "            ", "assert", "(", "top_k_percent_pixels", ">", "0", "and", "top_k_percent_pixels", "<", "1", ")", "\n", "", "self", ".", "hard_example_mining_step", "=", "hard_example_mining_step", "\n", "if", "self", ".", "top_k_percent_pixels", "==", "None", ":", "\n", "            ", "self", ".", "celoss", "=", "nn", ".", "CrossEntropyLoss", "(", "\n", "ignore_index", "=", "255", ",", "reduction", "=", "'mean'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "celoss", "=", "nn", ".", "CrossEntropyLoss", "(", "\n", "ignore_index", "=", "255", ",", "reduction", "=", "'none'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.loss.Concat_CrossEntropyLoss.forward": [[67, 98], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "torch.mean.unsqueeze", "torch.mean.unsqueeze", "torch.cat.append", "torch.cat.append", "loss.Concat_CrossEntropyLoss.celoss", "float", "pred_logits.view.view.view", "gts.view.view.view", "loss.Concat_CrossEntropyLoss.celoss", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "pred_logits.view.view.size", "int", "min", "int", "pred_logits.view.view.size", "pred_logits.view.view.size", "pred_logits.view.view.size", "pred_logits.view.view.size", "gts.view.view.size", "gts.view.view.size", "float"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "dic_tmp", ",", "y", ",", "step", ")", ":", "\n", "        ", "total_loss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dic_tmp", ")", ")", ":", "\n", "            ", "pred_logits", "=", "dic_tmp", "[", "i", "]", "\n", "gts", "=", "y", "[", "i", "]", "\n", "if", "self", ".", "top_k_percent_pixels", "==", "None", ":", "\n", "                ", "final_loss", "=", "self", ".", "celoss", "(", "pred_logits", ",", "gts", ")", "\n", "", "else", ":", "\n", "# Only compute the loss for top k percent pixels.", "\n", "# First, compute the loss for all pixels. Note we do not put the loss", "\n", "# to loss_collection and set reduction = None to keep the shape.", "\n", "                ", "num_pixels", "=", "float", "(", "pred_logits", ".", "size", "(", "2", ")", "*", "pred_logits", ".", "size", "(", "3", ")", ")", "\n", "pred_logits", "=", "pred_logits", ".", "view", "(", "-", "1", ",", "pred_logits", ".", "size", "(", "\n", "1", ")", ",", "pred_logits", ".", "size", "(", "2", ")", "*", "pred_logits", ".", "size", "(", "3", ")", ")", "\n", "gts", "=", "gts", ".", "view", "(", "-", "1", ",", "gts", ".", "size", "(", "1", ")", "*", "gts", ".", "size", "(", "2", ")", ")", "\n", "pixel_losses", "=", "self", ".", "celoss", "(", "pred_logits", ",", "gts", ")", "\n", "if", "self", ".", "hard_example_mining_step", "==", "0", ":", "\n", "                    ", "top_k_pixels", "=", "int", "(", "self", ".", "top_k_percent_pixels", "*", "num_pixels", ")", "\n", "", "else", ":", "\n", "                    ", "ratio", "=", "min", "(", "\n", "1.0", ",", "step", "/", "float", "(", "self", ".", "hard_example_mining_step", ")", ")", "\n", "top_k_pixels", "=", "int", "(", "\n", "(", "ratio", "*", "self", ".", "top_k_percent_pixels", "+", "(", "1.0", "-", "ratio", ")", ")", "*", "num_pixels", ")", "\n", "", "top_k_loss", ",", "top_k_indices", "=", "torch", ".", "topk", "(", "\n", "pixel_losses", ",", "k", "=", "top_k_pixels", ",", "dim", "=", "1", ")", "\n", "\n", "final_loss", "=", "torch", ".", "mean", "(", "top_k_loss", ")", "\n", "", "final_loss", "=", "final_loss", ".", "unsqueeze", "(", "0", ")", "\n", "total_loss", ".", "append", "(", "final_loss", ")", "\n", "", "total_loss", "=", "torch", ".", "cat", "(", "total_loss", ",", "dim", "=", "0", ")", "\n", "return", "total_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.attention.IA_gate.__init__": [[8, 11], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ")", ":", "\n", "        ", "super", "(", "IA_gate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "IA", "=", "nn", ".", "Linear", "(", "in_dim", ",", "out_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.attention.IA_gate.forward": [[12, 18], ["attention.IA_gate.IA", "a.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "a.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "IA_head", ")", ":", "\n", "        ", "a", "=", "self", ".", "IA", "(", "IA_head", ")", "\n", "a", "=", "1.", "+", "torch", ".", "tanh", "(", "a", ")", "\n", "a", "=", "a", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "x", "=", "a", "*", "x", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.attention.calculate_attention_head": [[19, 40], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cat", "torch.cat", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["", "", "def", "calculate_attention_head", "(", "ref_embedding", ",", "ref_label", ",", "prev_embedding", ",", "prev_label", ",", "epsilon", "=", "1e-5", ")", ":", "\n", "\n", "    ", "ref_head", "=", "ref_embedding", "*", "ref_label", "\n", "ref_head_pos", "=", "torch", ".", "sum", "(", "ref_head", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "ref_head_neg", "=", "torch", ".", "sum", "(", "ref_embedding", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "-", "ref_head_pos", "\n", "ref_pos_num", "=", "torch", ".", "sum", "(", "ref_label", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "ref_neg_num", "=", "torch", ".", "sum", "(", "1.", "-", "ref_label", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "ref_head_pos", "=", "ref_head_pos", "/", "(", "ref_pos_num", "+", "epsilon", ")", "\n", "ref_head_neg", "=", "ref_head_neg", "/", "(", "ref_neg_num", "+", "epsilon", ")", "\n", "\n", "prev_head", "=", "prev_embedding", "*", "prev_label", "\n", "prev_head_pos", "=", "torch", ".", "sum", "(", "prev_head", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "prev_head_neg", "=", "torch", ".", "sum", "(", "prev_embedding", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "-", "prev_head_pos", "\n", "prev_pos_num", "=", "torch", ".", "sum", "(", "prev_label", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "prev_neg_num", "=", "torch", ".", "sum", "(", "1.", "-", "prev_label", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "prev_head_pos", "=", "prev_head_pos", "/", "(", "prev_pos_num", "+", "epsilon", ")", "\n", "prev_head_neg", "=", "prev_head_neg", "/", "(", "prev_neg_num", "+", "epsilon", ")", "\n", "\n", "total_head", "=", "torch", ".", "cat", "(", "[", "ref_head_pos", ",", "ref_head_neg", ",", "prev_head_pos", ",", "prev_head_neg", "]", ",", "dim", "=", "1", ")", "\n", "\n", "return", "total_head", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.attention.calculate_attention_head_for_eval": [[41, 72], ["range", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cat", "torch.cat", "len", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["", "def", "calculate_attention_head_for_eval", "(", "ref_embeddings", ",", "ref_labels", ",", "prev_embedding", ",", "prev_label", ",", "epsilon", "=", "1e-5", ")", ":", "\n", "    ", "total_ref_head_pos", "=", "0.", "\n", "total_ref_head_neg", "=", "0.", "\n", "total_ref_pos_num", "=", "0.", "\n", "total_ref_neg_num", "=", "0.", "\n", "\n", "for", "idx", "in", "range", "(", "len", "(", "ref_embeddings", ")", ")", ":", "\n", "        ", "ref_embedding", "=", "ref_embeddings", "[", "idx", "]", "\n", "ref_label", "=", "ref_labels", "[", "idx", "]", "\n", "ref_head", "=", "ref_embedding", "*", "ref_label", "\n", "ref_head_pos", "=", "torch", ".", "sum", "(", "ref_head", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "ref_head_neg", "=", "torch", ".", "sum", "(", "ref_embedding", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "-", "ref_head_pos", "\n", "ref_pos_num", "=", "torch", ".", "sum", "(", "ref_label", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "ref_neg_num", "=", "torch", ".", "sum", "(", "1.", "-", "ref_label", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "total_ref_head_pos", "=", "total_ref_head_pos", "+", "ref_head_pos", "\n", "total_ref_head_neg", "=", "total_ref_head_neg", "+", "ref_head_neg", "\n", "total_ref_pos_num", "=", "total_ref_pos_num", "+", "ref_pos_num", "\n", "total_ref_neg_num", "=", "total_ref_neg_num", "+", "ref_neg_num", "\n", "", "ref_head_pos", "=", "total_ref_head_pos", "/", "(", "total_ref_pos_num", "+", "epsilon", ")", "\n", "ref_head_neg", "=", "total_ref_head_neg", "/", "(", "total_ref_neg_num", "+", "epsilon", ")", "\n", "\n", "prev_head", "=", "prev_embedding", "*", "prev_label", "\n", "prev_head_pos", "=", "torch", ".", "sum", "(", "prev_head", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "prev_head_neg", "=", "torch", ".", "sum", "(", "prev_embedding", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "-", "prev_head_pos", "\n", "prev_pos_num", "=", "torch", ".", "sum", "(", "prev_label", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "prev_neg_num", "=", "torch", ".", "sum", "(", "1.", "-", "prev_label", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "prev_head_pos", "=", "prev_head_pos", "/", "(", "prev_pos_num", "+", "epsilon", ")", "\n", "prev_head_neg", "=", "prev_head_neg", "/", "(", "prev_neg_num", "+", "epsilon", ")", "\n", "\n", "total_head", "=", "torch", ".", "cat", "(", "[", "ref_head_pos", ",", "ref_head_neg", ",", "prev_head_pos", ",", "prev_head_neg", "]", ",", "dim", "=", "1", ")", "\n", "return", "total_head", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.gct.GCT.__init__": [[8, 16], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "epsilon", "=", "1e-5", ",", "mode", "=", "'l2'", ",", "after_relu", "=", "False", ")", ":", "\n", "        ", "super", "(", "GCT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "num_channels", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_channels", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "beta", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_channels", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "after_relu", "=", "after_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.gct.GCT.forward": [[17, 37], ["torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "print", "exit", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs.sum", "torch.abs.sum", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "x.pow().sum", "embedding.pow().mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "x.pow", "embedding.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "if", "self", ".", "mode", "==", "'l2'", ":", "\n", "            ", "embedding", "=", "(", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "(", "2", ",", "3", ")", ",", "keepdim", "=", "True", ")", "+", "self", ".", "epsilon", ")", ".", "pow", "(", "0.5", ")", "*", "self", ".", "alpha", "\n", "norm", "=", "self", ".", "gamma", "/", "(", "embedding", ".", "pow", "(", "2", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "self", ".", "epsilon", ")", ".", "pow", "(", "0.5", ")", "\n", "\n", "", "elif", "self", ".", "mode", "==", "'l1'", ":", "\n", "            ", "if", "not", "self", ".", "after_relu", ":", "\n", "                ", "_x", "=", "torch", ".", "abs", "(", "x", ")", "\n", "", "else", ":", "\n", "                ", "_x", "=", "x", "\n", "", "embedding", "=", "_x", ".", "sum", "(", "(", "2", ",", "3", ")", ",", "keepdim", "=", "True", ")", "*", "self", ".", "alpha", "\n", "norm", "=", "self", ".", "gamma", "/", "(", "torch", ".", "abs", "(", "embedding", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "self", ".", "epsilon", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown mode!'", ")", "\n", "exit", "(", ")", "\n", "\n", "", "gate", "=", "1.", "+", "torch", ".", "tanh", "(", "embedding", "*", "norm", "+", "self", ".", "beta", ")", "\n", "\n", "return", "x", "*", "gate", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.gct.Bottleneck.__init__": [[39, 69], ["torch.nn.Module.__init__", "int", "gct.GCT", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "torch.nn.ReLU", "torch.nn.ReLU", "gct.Bottleneck.modules", "torch.nn.Sequential", "torch.nn.Sequential", "isinstance", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "outplanes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "expansion", "=", "4", "\n", "planes", "=", "int", "(", "outplanes", "/", "expansion", ")", "\n", "self", ".", "GCT1", "=", "GCT", "(", "inplanes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "32", ",", "planes", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "padding", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "GroupNorm", "(", "32", ",", "planes", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "GroupNorm", "(", "32", ",", "planes", "*", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "if", "stride", "!=", "1", "or", "inplanes", "!=", "planes", "*", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", "*", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "GroupNorm", "(", "32", ",", "planes", "*", "expansion", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "downsample", "=", "None", "\n", "", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "dilation", "=", "dilation", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.gct.Bottleneck.forward": [[70, 92], ["gct.Bottleneck.GCT1", "gct.Bottleneck.conv1", "gct.Bottleneck.bn1", "gct.Bottleneck.relu", "gct.Bottleneck.conv2", "gct.Bottleneck.bn2", "gct.Bottleneck.relu", "gct.Bottleneck.conv3", "gct.Bottleneck.bn3", "gct.Bottleneck.relu", "gct.Bottleneck.downsample"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "GCT1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbi.CFBI.__init__": [[11, 48], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "networks.layers.loss.Concat_CrossEntropyLoss", "networks.cfbi.ensembler.CollaborativeEnsembler", "networks.cfbi.ensembler.DynamicPreHead", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "isinstance", "len", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "len"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "feature_extracter", ")", ":", "\n", "        ", "super", "(", "CFBI", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "epsilon", "=", "cfg", ".", "MODEL_EPSILON", "\n", "\n", "self", ".", "feature_extracter", "=", "feature_extracter", "\n", "\n", "self", ".", "seperate_conv", "=", "nn", ".", "Conv2d", "(", "cfg", ".", "MODEL_ASPP_OUTDIM", ",", "cfg", ".", "MODEL_ASPP_OUTDIM", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "cfg", ".", "MODEL_ASPP_OUTDIM", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "cfg", ".", "MODEL_GN_GROUPS", ",", "cfg", ".", "MODEL_ASPP_OUTDIM", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "embedding_conv", "=", "nn", ".", "Conv2d", "(", "cfg", ".", "MODEL_ASPP_OUTDIM", ",", "cfg", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", ",", "1", ",", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "GroupNorm", "(", "cfg", ".", "MODEL_GN_EMB_GROUPS", ",", "cfg", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "semantic_embedding", "=", "nn", ".", "Sequential", "(", "*", "[", "self", ".", "seperate_conv", ",", "self", ".", "bn1", ",", "self", ".", "relu1", ",", "self", ".", "embedding_conv", ",", "self", ".", "bn2", ",", "self", ".", "relu2", "]", ")", "\n", "\n", "self", ".", "bg_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "fg_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "criterion", "=", "Concat_CrossEntropyLoss", "(", "cfg", ".", "TRAIN_TOP_K_PERCENT_PIXELS", ",", "cfg", ".", "TRAIN_HARD_MINING_STEP", ")", "\n", "\n", "for", "m", "in", "self", ".", "semantic_embedding", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "\n", "", "", "self", ".", "dynamic_seghead", "=", "CollaborativeEnsembler", "(", "\n", "in_dim", "=", "cfg", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", "*", "3", "+", "cfg", ".", "MODEL_PRE_HEAD_EMBEDDING_DIM", ",", "\n", "attention_dim", "=", "cfg", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", "*", "4", ",", "\n", "embed_dim", "=", "cfg", ".", "MODEL_HEAD_EMBEDDING_DIM", ",", "\n", "refine_dim", "=", "cfg", ".", "MODEL_REFINE_CHANNELS", ",", "\n", "low_level_dim", "=", "cfg", ".", "MODEL_LOW_LEVEL_INPLANES", ")", "\n", "\n", "in_dim", "=", "2", "+", "len", "(", "cfg", ".", "MODEL_MULTI_LOCAL_DISTANCE", ")", "\n", "if", "cfg", ".", "MODEL_MATCHING_BACKGROUND", ":", "\n", "            ", "in_dim", "+=", "1", "+", "len", "(", "cfg", ".", "MODEL_MULTI_LOCAL_DISTANCE", ")", "\n", "", "self", ".", "dynamic_prehead", "=", "DynamicPreHead", "(", "\n", "in_dim", "=", "in_dim", ",", "\n", "embed_dim", "=", "cfg", ".", "MODEL_PRE_HEAD_EMBEDDING_DIM", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbi.CFBI.forward": [[50, 78], ["cfbi.CFBI.extract_feature", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "current_frame_embedding.size", "cfbi.CFBI.before_seghead_process", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "label_dic.append", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.cat.append", "torch.cat.append", "torch.cat.append", "cfbi.CFBI.criterion", "int", "int", "label_tmp.long", "x.size", "x.size"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.extract_feature", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.before_seghead_process"], ["", "def", "forward", "(", "self", ",", "input", ",", "ref_frame_label", ",", "previous_frame_mask", ",", "current_frame_mask", ",", "\n", "gt_ids", ",", "step", "=", "0", ",", "tf_board", "=", "False", ")", ":", "\n", "        ", "x", ",", "low_level", "=", "self", ".", "extract_feature", "(", "input", ")", "\n", "ref_frame_embedding", ",", "previous_frame_embedding", ",", "current_frame_embedding", "=", "torch", ".", "split", "(", "x", ",", "split_size_or_sections", "=", "int", "(", "x", ".", "size", "(", "0", ")", "/", "3", ")", ",", "dim", "=", "0", ")", "\n", "_", ",", "_", ",", "current_low_level", "=", "torch", ".", "split", "(", "low_level", ",", "split_size_or_sections", "=", "int", "(", "x", ".", "size", "(", "0", ")", "/", "3", ")", ",", "dim", "=", "0", ")", "\n", "bs", ",", "c", ",", "h", ",", "w", "=", "current_frame_embedding", ".", "size", "(", ")", "\n", "tmp_dic", ",", "boards", "=", "self", ".", "before_seghead_process", "(", "\n", "ref_frame_embedding", ",", "\n", "previous_frame_embedding", ",", "\n", "current_frame_embedding", ",", "\n", "ref_frame_label", ",", "\n", "previous_frame_mask", ",", "\n", "gt_ids", ",", "\n", "current_low_level", "=", "current_low_level", ",", "tf_board", "=", "tf_board", ")", "\n", "label_dic", "=", "[", "]", "\n", "all_pred", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bs", ")", ":", "\n", "            ", "tmp_pred_logits", "=", "tmp_dic", "[", "i", "]", "\n", "tmp_pred_logits", "=", "nn", ".", "functional", ".", "interpolate", "(", "tmp_pred_logits", ",", "size", "=", "(", "input", ".", "shape", "[", "2", "]", ",", "input", ".", "shape", "[", "3", "]", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "tmp_dic", "[", "i", "]", "=", "tmp_pred_logits", "\n", "label_tmp", ",", "obj_num", "=", "current_frame_mask", "[", "i", "]", ",", "gt_ids", "[", "i", "]", "\n", "label_dic", ".", "append", "(", "label_tmp", ".", "long", "(", ")", ")", "\n", "pred", "=", "tmp_pred_logits", "\n", "preds_s", "=", "torch", ".", "argmax", "(", "pred", ",", "dim", "=", "1", ")", "\n", "all_pred", ".", "append", "(", "preds_s", ")", "\n", "", "all_pred", "=", "torch", ".", "cat", "(", "all_pred", ",", "dim", "=", "0", ")", "\n", "\n", "return", "self", ".", "criterion", "(", "tmp_dic", ",", "label_dic", ",", "step", ")", ",", "all_pred", ",", "boards", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbi.CFBI.forward_for_eval": [[79, 102], ["cfbi.CFBI.extract_feature", "current_frame_embedding.size", "cfbi.CFBI.before_seghead_process", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.softmax.append", "torch.softmax.append", "torch.softmax.append"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.extract_feature", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.before_seghead_process"], ["", "def", "forward_for_eval", "(", "self", ",", "ref_embeddings", ",", "ref_masks", ",", "prev_embedding", ",", "prev_mask", ",", "current_frame", ",", "pred_size", ",", "gt_ids", ")", ":", "\n", "        ", "current_frame_embedding", ",", "current_low_level", "=", "self", ".", "extract_feature", "(", "current_frame", ")", "\n", "if", "prev_embedding", "is", "None", ":", "\n", "            ", "return", "None", ",", "current_frame_embedding", "\n", "", "else", ":", "\n", "            ", "bs", ",", "c", ",", "h", ",", "w", "=", "current_frame_embedding", ".", "size", "(", ")", "\n", "tmp_dic", ",", "_", "=", "self", ".", "before_seghead_process", "(", "\n", "ref_embeddings", ",", "\n", "prev_embedding", ",", "\n", "current_frame_embedding", ",", "\n", "ref_masks", ",", "\n", "prev_mask", ",", "\n", "gt_ids", ",", "\n", "current_low_level", "=", "current_low_level", ",", "\n", "tf_board", "=", "False", ")", "\n", "all_pred", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bs", ")", ":", "\n", "                ", "pred", "=", "tmp_dic", "[", "i", "]", "\n", "pred", "=", "nn", ".", "functional", ".", "interpolate", "(", "pred", ",", "size", "=", "(", "pred_size", "[", "0", "]", ",", "pred_size", "[", "1", "]", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "all_pred", ".", "append", "(", "pred", ")", "\n", "", "all_pred", "=", "torch", ".", "cat", "(", "all_pred", ",", "dim", "=", "0", ")", "\n", "all_pred", "=", "torch", ".", "softmax", "(", "all_pred", ",", "dim", "=", "1", ")", "\n", "return", "all_pred", ",", "current_frame_embedding", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbi.CFBI.extract_feature": [[103, 107], ["cfbi.CFBI.feature_extracter", "cfbi.CFBI.semantic_embedding"], "methods", ["None"], ["", "", "def", "extract_feature", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", ",", "low_level", "=", "self", ".", "feature_extracter", "(", "x", ")", "\n", "x", "=", "self", ".", "semantic_embedding", "(", "x", ")", "\n", "return", "x", ",", "low_level", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbi.CFBI.before_seghead_process": [[108, 249], ["current_frame_embedding.size", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "scale_previous_frame_label.int.int.int", "range", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "scale_ref_frame_label.int.int.int", "previous_frame_mask.float", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view.size", "torch.arange().int().view.size", "torch.arange().int().view.size", "seq_current_frame_embedding.permute.permute.permute", "seq_prev_frame_embedding.permute.permute.permute", "seq_previous_frame_label.squeeze().permute.squeeze().permute.squeeze().permute", "networks.layers.matching.local_matching", "current_frame_embedding[].unsqueeze().expand", "previous_frame_embedding[].unsqueeze().expand", "networks.layers.matching.global_matching_for_eval.squeeze().permute", "networks.layers.matching.local_matching.squeeze().permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cfbi.CFBI.dynamic_prehead", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "current_low_level[].unsqueeze", "cfbi.CFBI.dynamic_seghead", "dic_tmp.append", "ref_frame_label.float", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "each_scale_ref_frame_label.int.int.int", "scale_ref_frame_labels.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "seq_ref_frame_embedding.permute.permute.permute", "seq_ref_frame_label.squeeze().permute.squeeze().permute.squeeze().permute", "networks.layers.matching.global_matching", "range", "networks.layers.matching.global_matching_for_eval", "networks.layers.matching.foreground2background", "networks.layers.matching.local_matching.squeeze().permute.permute().unsqueeze", "networks.layers.matching.foreground2background", "to_cat_local_matching_bg.permute().squeeze.permute().squeeze.permute().squeeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.layers.attention.calculate_attention_head", "networks.layers.attention.calculate_attention_head_for_eval", "each_ref_frame_label.float", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "len", "seq_ref_frame_embedding.permute.permute.permute", "all_reference_embeddings.append", "seq_ref_frame_labels.append", "seq_ref_frame_label.squeeze().permute.squeeze().permute.squeeze().permute", "all_reference_labels.append", "seq_previous_frame_label.squeeze().permute.squeeze().permute.squeeze", "current_frame_embedding[].unsqueeze", "previous_frame_embedding[].unsqueeze", "networks.layers.matching.global_matching_for_eval.squeeze", "networks.layers.matching.local_matching.squeeze", "ref_frame_embedding[].unsqueeze().expand", "previous_frame_embedding[].unsqueeze().expand", "previous_frame_embedding[].unsqueeze().expand", "cfbi.CFBI.fg_bias.expand", "seq_ref_frame_label.squeeze().permute.squeeze().permute.squeeze", "scale_previous_frame_label[].int", "networks.layers.matching.local_matching.squeeze().permute.permute", "to_cat_local_matching_bg.permute().squeeze.permute().squeeze.permute", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "scale_ref_frame_label[].int", "seq_ref_frame_label.squeeze().permute.squeeze().permute.squeeze", "ref_frame_embedding[].unsqueeze", "previous_frame_embedding[].unsqueeze", "previous_frame_embedding[].unsqueeze", "scale_ref_frame_label[].int"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.local_matching", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.global_matching", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.global_matching_for_eval", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.foreground2background", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.foreground2background", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.attention.calculate_attention_head", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.attention.calculate_attention_head_for_eval"], ["", "def", "before_seghead_process", "(", "self", ",", "\n", "ref_frame_embedding", "=", "None", ",", "previous_frame_embedding", "=", "None", ",", "current_frame_embedding", "=", "None", ",", "\n", "ref_frame_label", "=", "None", ",", "previous_frame_mask", "=", "None", ",", "\n", "gt_ids", "=", "None", ",", "current_low_level", "=", "None", ",", "tf_board", "=", "False", ")", ":", "\n", "\n", "        ", "cfg", "=", "self", ".", "cfg", "\n", "\n", "dic_tmp", "=", "[", "]", "\n", "bs", ",", "c", ",", "h", ",", "w", "=", "current_frame_embedding", ".", "size", "(", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "scale_ref_frame_label", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "ref_frame_label", ".", "float", "(", ")", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'nearest'", ")", "\n", "scale_ref_frame_label", "=", "scale_ref_frame_label", ".", "int", "(", ")", "\n", "", "else", ":", "\n", "            ", "scale_ref_frame_labels", "=", "[", "]", "\n", "for", "each_ref_frame_label", "in", "ref_frame_label", ":", "\n", "                ", "each_scale_ref_frame_label", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "each_ref_frame_label", ".", "float", "(", ")", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'nearest'", ")", "\n", "each_scale_ref_frame_label", "=", "each_scale_ref_frame_label", ".", "int", "(", ")", "\n", "scale_ref_frame_labels", ".", "append", "(", "each_scale_ref_frame_label", ")", "\n", "\n", "", "", "scale_previous_frame_label", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "previous_frame_mask", ".", "float", "(", ")", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'nearest'", ")", "\n", "scale_previous_frame_label", "=", "scale_previous_frame_label", ".", "int", "(", ")", "\n", "\n", "boards", "=", "{", "'image'", ":", "{", "}", ",", "'scalar'", ":", "{", "}", "}", "\n", "\n", "for", "n", "in", "range", "(", "bs", ")", ":", "\n", "            ", "ref_obj_ids", "=", "torch", ".", "arange", "(", "0", ",", "gt_ids", "[", "n", "]", "+", "1", ",", "device", "=", "current_frame_embedding", ".", "device", ")", ".", "int", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "obj_num", "=", "ref_obj_ids", ".", "size", "(", "0", ")", "\n", "if", "gt_ids", "[", "n", "]", ">", "0", ":", "\n", "                ", "dis_bias", "=", "torch", ".", "cat", "(", "[", "self", ".", "bg_bias", ",", "self", ".", "fg_bias", ".", "expand", "(", "gt_ids", "[", "n", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "dis_bias", "=", "self", ".", "bg_bias", "\n", "\n", "", "seq_current_frame_embedding", "=", "current_frame_embedding", "[", "n", "]", "\n", "seq_current_frame_embedding", "=", "seq_current_frame_embedding", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "########################Global dist map", "\n", "\n", "if", "self", ".", "training", ":", "\n", "                ", "seq_ref_frame_embedding", "=", "ref_frame_embedding", "[", "n", "]", "\n", "seq_ref_frame_embedding", "=", "seq_ref_frame_embedding", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "seq_ref_frame_label", "=", "(", "scale_ref_frame_label", "[", "n", "]", ".", "int", "(", ")", "==", "ref_obj_ids", ")", ".", "float", "(", ")", "\n", "to_cat_ref_frame", "=", "seq_ref_frame_label", "\n", "seq_ref_frame_label", "=", "seq_ref_frame_label", ".", "squeeze", "(", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "global_matching_fg", "=", "global_matching", "(", "\n", "reference_embeddings", "=", "seq_ref_frame_embedding", ",", "\n", "query_embeddings", "=", "seq_current_frame_embedding", ",", "\n", "reference_labels", "=", "seq_ref_frame_label", ",", "\n", "n_chunks", "=", "cfg", ".", "TRAIN_GLOBAL_CHUNKS", ",", "\n", "dis_bias", "=", "dis_bias", ",", "\n", "atrous_rate", "=", "cfg", ".", "TRAIN_GLOBAL_ATROUS_RATE", ",", "\n", "use_float16", "=", "cfg", ".", "MODEL_FLOAT16_MATCHING", ")", "\n", "", "else", ":", "\n", "                ", "all_reference_embeddings", "=", "[", "]", "\n", "all_reference_labels", "=", "[", "]", "\n", "seq_ref_frame_labels", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "len", "(", "scale_ref_frame_labels", ")", ")", ":", "\n", "                    ", "each_ref_frame_embedding", "=", "ref_frame_embedding", "[", "idx", "]", "\n", "scale_ref_frame_label", "=", "scale_ref_frame_labels", "[", "idx", "]", "\n", "\n", "seq_ref_frame_embedding", "=", "each_ref_frame_embedding", "[", "n", "]", "\n", "seq_ref_frame_embedding", "=", "seq_ref_frame_embedding", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "all_reference_embeddings", ".", "append", "(", "seq_ref_frame_embedding", ")", "\n", "\n", "seq_ref_frame_label", "=", "(", "scale_ref_frame_label", "[", "n", "]", ".", "int", "(", ")", "==", "ref_obj_ids", ")", ".", "float", "(", ")", "\n", "seq_ref_frame_labels", ".", "append", "(", "seq_ref_frame_label", ")", "\n", "seq_ref_frame_label", "=", "seq_ref_frame_label", ".", "squeeze", "(", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "all_reference_labels", ".", "append", "(", "seq_ref_frame_label", ")", "\n", "", "global_matching_fg", "=", "global_matching_for_eval", "(", "\n", "all_reference_embeddings", "=", "all_reference_embeddings", ",", "\n", "query_embeddings", "=", "seq_current_frame_embedding", ",", "\n", "all_reference_labels", "=", "all_reference_labels", ",", "\n", "n_chunks", "=", "cfg", ".", "TEST_GLOBAL_CHUNKS", ",", "\n", "dis_bias", "=", "dis_bias", ",", "\n", "atrous_rate", "=", "cfg", ".", "TEST_GLOBAL_ATROUS_RATE", ",", "\n", "use_float16", "=", "cfg", ".", "MODEL_FLOAT16_MATCHING", ")", "\n", "\n", "\n", "#########################Local dist map", "\n", "", "seq_prev_frame_embedding", "=", "previous_frame_embedding", "[", "n", "]", "\n", "seq_prev_frame_embedding", "=", "seq_prev_frame_embedding", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "seq_previous_frame_label", "=", "(", "scale_previous_frame_label", "[", "n", "]", ".", "int", "(", ")", "==", "ref_obj_ids", ")", ".", "float", "(", ")", "\n", "to_cat_previous_frame", "=", "seq_previous_frame_label", "\n", "seq_previous_frame_label", "=", "seq_previous_frame_label", ".", "squeeze", "(", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "local_matching_fg", "=", "local_matching", "(", "\n", "prev_frame_embedding", "=", "seq_prev_frame_embedding", ",", "\n", "query_embedding", "=", "seq_current_frame_embedding", ",", "\n", "prev_frame_labels", "=", "seq_previous_frame_label", ",", "\n", "multi_local_distance", "=", "cfg", ".", "MODEL_MULTI_LOCAL_DISTANCE", ",", "\n", "dis_bias", "=", "dis_bias", ",", "\n", "use_float16", "=", "cfg", ".", "MODEL_FLOAT16_MATCHING", ",", "\n", "atrous_rate", "=", "cfg", ".", "TRAIN_LOCAL_ATROUS_RATE", "if", "self", ".", "training", "else", "cfg", ".", "TEST_LOCAL_ATROUS_RATE", ",", "\n", "allow_downsample", "=", "cfg", ".", "MODEL_LOCAL_DOWNSAMPLE", ",", "\n", "allow_parallel", "=", "cfg", ".", "TRAIN_LOCAL_PARALLEL", "if", "self", ".", "training", "else", "cfg", ".", "TEST_LOCAL_PARALLEL", ")", "\n", "\n", "##########################", "\n", "\n", "to_cat_current_frame_embedding", "=", "current_frame_embedding", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "obj_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "to_cat_prev_frame_embedding", "=", "previous_frame_embedding", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "obj_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "\n", "to_cat_global_matching_fg", "=", "global_matching_fg", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "to_cat_local_matching_fg", "=", "local_matching_fg", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "\n", "if", "cfg", ".", "MODEL_MATCHING_BACKGROUND", ":", "\n", "                ", "to_cat_global_matching_bg", "=", "foreground2background", "(", "to_cat_global_matching_fg", ",", "gt_ids", "[", "n", "]", "+", "1", ")", "\n", "reshaped_prev_nn_feature_n", "=", "to_cat_local_matching_fg", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "to_cat_local_matching_bg", "=", "foreground2background", "(", "reshaped_prev_nn_feature_n", ",", "gt_ids", "[", "n", "]", "+", "1", ")", "\n", "to_cat_local_matching_bg", "=", "to_cat_local_matching_bg", ".", "permute", "(", "0", ",", "4", ",", "2", ",", "3", ",", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "", "pre_to_cat", "=", "torch", ".", "cat", "(", "(", "to_cat_global_matching_fg", ",", "to_cat_local_matching_fg", ",", "to_cat_previous_frame", ")", ",", "1", ")", "\n", "\n", "if", "cfg", ".", "MODEL_MATCHING_BACKGROUND", ":", "\n", "                ", "pre_to_cat", "=", "torch", ".", "cat", "(", "[", "pre_to_cat", ",", "to_cat_local_matching_bg", ",", "to_cat_global_matching_bg", "]", ",", "1", ")", "\n", "\n", "", "pre_to_cat", "=", "self", ".", "dynamic_prehead", "(", "pre_to_cat", ")", "\n", "\n", "to_cat", "=", "torch", ".", "cat", "(", "(", "to_cat_current_frame_embedding", ",", "to_cat_prev_frame_embedding", "*", "to_cat_previous_frame", ",", "to_cat_prev_frame_embedding", "*", "(", "1", "-", "to_cat_previous_frame", ")", ",", "pre_to_cat", ")", ",", "1", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "                ", "attention_head", "=", "calculate_attention_head", "(", "\n", "ref_frame_embedding", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "obj_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ")", ",", "\n", "to_cat_ref_frame", ",", "\n", "previous_frame_embedding", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "obj_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ")", ",", "\n", "to_cat_previous_frame", ",", "\n", "epsilon", "=", "self", ".", "epsilon", ")", "\n", "", "else", ":", "\n", "                ", "attention_head", "=", "calculate_attention_head_for_eval", "(", "\n", "ref_frame_embedding", ",", "\n", "seq_ref_frame_labels", ",", "\n", "previous_frame_embedding", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "obj_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ")", ",", "\n", "to_cat_previous_frame", ",", "\n", "epsilon", "=", "self", ".", "epsilon", ")", "\n", "\n", "", "low_level_feat", "=", "current_low_level", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "pred", "=", "self", ".", "dynamic_seghead", "(", "to_cat", ",", "attention_head", ",", "low_level_feat", ")", "\n", "\n", "dic_tmp", ".", "append", "(", "pred", ")", "\n", "\n", "", "return", "dic_tmp", ",", "boards", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbi.get_module": [[250, 252], ["None"], "function", ["None"], ["", "", "def", "get_module", "(", ")", ":", "\n", "    ", "return", "CFBI", "\n", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.__init__": [[12, 41], ["torch.Module.__init__", "networks.layers.fpn.FPN", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "networks.layers.loss.Concat_CrossEntropyLoss", "cfbip.CFBIP.modules", "networks.cfbi.ensembler.CollaborativeEnsemblerMS", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "feature_extracter", ")", ":", "\n", "        ", "super", "(", "CFBIP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "epsilon", "=", "cfg", ".", "MODEL_EPSILON", "\n", "\n", "self", ".", "feature_extracter", "=", "feature_extracter", "\n", "\n", "self", ".", "fpn", "=", "FPN", "(", "in_dim_4x", "=", "cfg", ".", "MODEL_ASPP_OUTDIM", ",", "in_dim_8x", "=", "512", ",", "in_dim_16x", "=", "cfg", ".", "MODEL_ASPP_OUTDIM", ",", "out_dim", "=", "cfg", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", ")", "\n", "\n", "self", ".", "bg_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "fg_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "criterion", "=", "Concat_CrossEntropyLoss", "(", "cfg", ".", "TRAIN_TOP_K_PERCENT_PIXELS", ",", "cfg", ".", "TRAIN_HARD_MINING_STEP", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "GroupNorm", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "", "self", ".", "dynamic_seghead", "=", "CollaborativeEnsemblerMS", "(", "\n", "in_dim_4x", "=", "cfg", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", "*", "3", "+", "3", "+", "2", "*", "len", "(", "cfg", ".", "MODEL_MULTI_LOCAL_DISTANCE", "[", "0", "]", ")", ",", "\n", "in_dim_8x", "=", "cfg", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", "*", "3", "+", "3", "+", "2", "*", "len", "(", "cfg", ".", "MODEL_MULTI_LOCAL_DISTANCE", "[", "1", "]", ")", ",", "\n", "in_dim_16x", "=", "cfg", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", "*", "3", "+", "3", "+", "2", "*", "len", "(", "cfg", ".", "MODEL_MULTI_LOCAL_DISTANCE", "[", "2", "]", ")", ",", "\n", "attention_dim", "=", "cfg", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", "*", "4", ",", "\n", "embed_dim", "=", "cfg", ".", "MODEL_HEAD_EMBEDDING_DIM", ",", "\n", "refine_dim", "=", "cfg", ".", "MODEL_REFINE_CHANNELS", ",", "\n", "low_level_dim", "=", "cfg", ".", "MODEL_LOW_LEVEL_INPLANES", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.forward": [[43, 82], ["cfbip.CFBIP.extract_feature", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "current_frame_embedding_4x.size", "cfbip.CFBIP.before_seghead_process", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.cat.append", "torch.cat.append", "torch.cat.append", "label_dic.append", "cfbip.CFBIP.criterion", "int", "int", "int", "int", "label_tmp.long", "low_level.size", "low_level.size", "low_level.size", "low_level.size"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.extract_feature", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.before_seghead_process"], ["", "def", "forward", "(", "self", ",", "input", ",", "ref_frame_label", ",", "previous_frame_mask", ",", "current_frame_mask", ",", "\n", "gt_ids", ",", "step", "=", "0", ",", "tf_board", "=", "False", ")", ":", "\n", "        ", "x_4x", ",", "x_8x", ",", "x_16x", ",", "low_level", "=", "self", ".", "extract_feature", "(", "input", ")", "\n", "\n", "ref_frame_embedding_4x", ",", "previous_frame_embedding_4x", ",", "current_frame_embedding_4x", "=", "torch", ".", "split", "(", "x_4x", ",", "split_size_or_sections", "=", "int", "(", "low_level", ".", "size", "(", "0", ")", "/", "3", ")", ",", "dim", "=", "0", ")", "\n", "ref_frame_embedding_8x", ",", "previous_frame_embedding_8x", ",", "current_frame_embedding_8x", "=", "torch", ".", "split", "(", "x_8x", ",", "split_size_or_sections", "=", "int", "(", "low_level", ".", "size", "(", "0", ")", "/", "3", ")", ",", "dim", "=", "0", ")", "\n", "ref_frame_embedding_16x", ",", "previous_frame_embedding_16x", ",", "current_frame_embedding_16x", "=", "torch", ".", "split", "(", "x_16x", ",", "split_size_or_sections", "=", "int", "(", "low_level", ".", "size", "(", "0", ")", "/", "3", ")", ",", "dim", "=", "0", ")", "\n", "\n", "ref_frame_embeddings", "=", "[", "ref_frame_embedding_4x", ",", "ref_frame_embedding_8x", ",", "ref_frame_embedding_16x", "]", "\n", "previous_frame_embeddings", "=", "[", "previous_frame_embedding_4x", ",", "previous_frame_embedding_8x", ",", "previous_frame_embedding_16x", "]", "\n", "current_frame_embeddings", "=", "[", "current_frame_embedding_4x", ",", "current_frame_embedding_8x", ",", "current_frame_embedding_16x", "]", "\n", "\n", "_", ",", "_", ",", "current_low_level", "=", "torch", ".", "split", "(", "low_level", ",", "split_size_or_sections", "=", "int", "(", "low_level", ".", "size", "(", "0", ")", "/", "3", ")", ",", "dim", "=", "0", ")", "\n", "\n", "bs", ",", "c", ",", "h", ",", "w", "=", "current_frame_embedding_4x", ".", "size", "(", ")", "\n", "tmp_dic", ",", "boards", "=", "self", ".", "before_seghead_process", "(", "\n", "ref_frame_embeddings", ",", "\n", "previous_frame_embeddings", ",", "\n", "current_frame_embeddings", ",", "\n", "ref_frame_label", ",", "\n", "previous_frame_mask", ",", "\n", "gt_ids", ",", "\n", "current_low_level", "=", "current_low_level", ",", "\n", "tf_board", "=", "tf_board", ")", "\n", "\n", "label_dic", "=", "[", "]", "\n", "all_pred", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bs", ")", ":", "\n", "            ", "tmp_pred_logits", "=", "tmp_dic", "[", "i", "]", "\n", "tmp_pred_logits", "=", "nn", ".", "functional", ".", "interpolate", "(", "tmp_pred_logits", ",", "size", "=", "(", "input", ".", "shape", "[", "2", "]", ",", "input", ".", "shape", "[", "3", "]", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "tmp_dic", "[", "i", "]", "=", "tmp_pred_logits", "\n", "pred", "=", "tmp_dic", "[", "i", "]", "\n", "preds_s", "=", "torch", ".", "argmax", "(", "pred", ",", "dim", "=", "1", ")", "\n", "all_pred", ".", "append", "(", "preds_s", ")", "\n", "label_tmp", ",", "obj_num", "=", "current_frame_mask", "[", "i", "]", ",", "gt_ids", "[", "i", "]", "\n", "label_dic", ".", "append", "(", "label_tmp", ".", "long", "(", ")", ")", "\n", "", "all_pred", "=", "torch", ".", "cat", "(", "all_pred", ",", "dim", "=", "0", ")", "\n", "\n", "return", "self", ".", "criterion", "(", "tmp_dic", ",", "label_dic", ",", "step", ")", ",", "all_pred", ",", "boards", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.forward_for_eval": [[83, 113], ["cfbip.CFBIP.extract_feature", "current_frame_embedding_4x.size", "cfbip.CFBIP.before_seghead_process", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.softmax.append", "torch.softmax.append", "torch.softmax.append"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.extract_feature", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.before_seghead_process"], ["", "def", "forward_for_eval", "(", "self", ",", "ref_embeddings", ",", "ref_masks", ",", "prev_embedding", ",", "prev_mask", ",", "current_frame", ",", "\n", "pred_size", ",", "gt_ids", ",", "is_flipped", "=", "False", ")", ":", "\n", "\n", "        ", "current_frame_embedding_4x", ",", "current_frame_embedding_8x", ",", "current_frame_embedding_16x", ",", "current_low_level", "=", "self", ".", "extract_feature", "(", "current_frame", ")", "\n", "current_frame_embedding", "=", "[", "current_frame_embedding_4x", ",", "current_frame_embedding_8x", ",", "current_frame_embedding_16x", "]", "\n", "\n", "if", "prev_embedding", "is", "None", ":", "\n", "            ", "return", "None", ",", "current_frame_embedding", "\n", "", "else", ":", "\n", "            ", "bs", ",", "c", ",", "h", ",", "w", "=", "current_frame_embedding_4x", ".", "size", "(", ")", "\n", "tmp_dic", ",", "_", "=", "self", ".", "before_seghead_process", "(", "\n", "ref_embeddings", ",", "\n", "prev_embedding", ",", "\n", "current_frame_embedding", ",", "\n", "ref_masks", ",", "\n", "prev_mask", ",", "\n", "gt_ids", ",", "\n", "current_low_level", "=", "current_low_level", ",", "\n", "tf_board", "=", "False", ")", "\n", "all_pred", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bs", ")", ":", "\n", "                ", "pred", "=", "tmp_dic", "[", "i", "]", "\n", "\n", "pred", "=", "nn", ".", "functional", ".", "interpolate", "(", "pred", ",", "size", "=", "(", "pred_size", "[", "0", "]", ",", "pred_size", "[", "1", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "all_pred", ".", "append", "(", "pred", ")", "\n", "", "all_pred", "=", "torch", ".", "cat", "(", "all_pred", ",", "dim", "=", "0", ")", "\n", "all_pred", "=", "torch", ".", "softmax", "(", "all_pred", ",", "dim", "=", "1", ")", "\n", "return", "all_pred", ",", "current_frame_embedding", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.extract_feature": [[114, 120], ["cfbip.CFBIP.feature_extracter", "cfbip.CFBIP.fpn"], "methods", ["None"], ["", "", "def", "extract_feature", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", ",", "aspp_x", ",", "low_level", ",", "mid_level", "=", "self", ".", "feature_extracter", "(", "x", ",", "True", ")", "\n", "\n", "x_4x", ",", "x_8x", ",", "x_16x", "=", "self", ".", "fpn", "(", "x", ",", "mid_level", ",", "aspp_x", ")", "\n", "\n", "return", "x_4x", ",", "x_8x", ",", "x_16x", ",", "low_level", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.before_seghead_process": [[121, 277], ["range", "current_frame_embedding.size", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "scale_previous_frame_labels.append", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view", "torch.arange().int().view.size", "torch.arange().int().view.size", "torch.arange().int().view.size", "current_low_level[].unsqueeze", "zip", "cfbip.CFBIP.dynamic_seghead", "dic_tmp.append", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "scale_ref_frame_labels.append", "list", "scale_ref_frame_labels.append", "range", "seq_current_frame_embedding[].permute", "seq_prev_frame_embedding[].permute", "seq_previous_frame_label.squeeze().permute", "networks.layers.matching.local_matching", "networks.layers.matching.global_matching_for_eval.squeeze().permute", "networks.layers.matching.local_matching.squeeze().permute", "current_frame_embedding[].unsqueeze().expand", "previous_frame_embedding[].unsqueeze().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "all_CE_input.append", "all_attention_head.append", "zip", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "torch.nn.functional.interpolate().int", "all_scale_ref_frame_label.append", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cfbip.CFBIP.bg_bias[].unsqueeze", "seq_ref_frame_embedding[].permute", "seq_ref_frame_label.squeeze().permute.squeeze().permute.squeeze().permute", "networks.layers.matching.global_matching", "range", "networks.layers.matching.global_matching_for_eval", "networks.layers.matching.foreground2background", "networks.layers.matching.local_matching.squeeze().permute.permute().unsqueeze", "networks.layers.matching.foreground2background", "to_cat_local_matching_bg.permute().squeeze.permute().squeeze.permute().squeeze", "networks.layers.attention.calculate_attention_head", "networks.layers.attention.calculate_attention_head_for_eval", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "previous_frame_mask.float", "len", "seq_ref_frame_embedding.permute.permute.permute", "seq_ref_frame_labels.append", "seq_ref_frame_label.squeeze().permute.squeeze().permute.squeeze().permute", "all_reference_embeddings.append", "all_reference_labels.append", "seq_previous_frame_label.squeeze", "networks.layers.matching.global_matching_for_eval.squeeze", "networks.layers.matching.local_matching.squeeze", "current_frame_embedding[].unsqueeze", "previous_frame_embedding[].unsqueeze", "ref_frame_embedding[].unsqueeze().expand", "previous_frame_embedding[].unsqueeze().expand", "previous_frame_embedding[].unsqueeze().expand", "ref_frame_labels.float", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "scale_previous_frame_label[].int", "cfbip.CFBIP.bg_bias[].unsqueeze", "cfbip.CFBIP.fg_bias[].unsqueeze().expand", "seq_ref_frame_label.squeeze().permute.squeeze().permute.squeeze", "networks.layers.matching.local_matching.squeeze().permute.permute", "to_cat_local_matching_bg.permute().squeeze.permute().squeeze.permute", "ref_frame_label.float", "scale_ref_frame_label[].int", "seq_ref_frame_label.squeeze().permute.squeeze().permute.squeeze", "ref_frame_embedding[].unsqueeze", "previous_frame_embedding[].unsqueeze", "previous_frame_embedding[].unsqueeze", "cfbip.CFBIP.fg_bias[].unsqueeze", "scale_ref_frame_label[].int"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.local_matching", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.global_matching", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.global_matching_for_eval", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.foreground2background", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.matching.foreground2background", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.attention.calculate_attention_head", "home.repos.pwc.inspect_result.z-x-yang_CFBI.layers.attention.calculate_attention_head_for_eval"], ["", "def", "before_seghead_process", "(", "self", ",", "\n", "ref_frame_embeddings", "=", "None", ",", "previous_frame_embeddings", "=", "None", ",", "current_frame_embeddings", "=", "None", ",", "\n", "ref_frame_labels", "=", "None", ",", "previous_frame_mask", "=", "None", ",", "\n", "gt_ids", "=", "None", ",", "current_low_level", "=", "None", ",", "tf_board", "=", "False", ")", ":", "\n", "\n", "        ", "cfg", "=", "self", ".", "cfg", "\n", "\n", "dic_tmp", "=", "[", "]", "\n", "boards", "=", "{", "}", "\n", "scale_ref_frame_labels", "=", "[", "]", "\n", "scale_previous_frame_labels", "=", "[", "]", "\n", "for", "current_frame_embedding", "in", "current_frame_embeddings", ":", "\n", "            ", "bs", ",", "c", ",", "h", ",", "w", "=", "current_frame_embedding", ".", "size", "(", ")", "\n", "if", "self", ".", "training", ":", "\n", "                ", "scale_ref_frame_label", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "ref_frame_labels", ".", "float", "(", ")", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'nearest'", ")", ".", "int", "(", ")", "\n", "scale_ref_frame_labels", ".", "append", "(", "scale_ref_frame_label", ")", "\n", "", "else", ":", "\n", "                ", "ref_frame_embeddings", "=", "list", "(", "zip", "(", "*", "ref_frame_embeddings", ")", ")", "\n", "all_scale_ref_frame_label", "=", "[", "]", "\n", "for", "ref_frame_label", "in", "ref_frame_labels", ":", "\n", "                    ", "scale_ref_frame_label", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "ref_frame_label", ".", "float", "(", ")", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'nearest'", ")", ".", "int", "(", ")", "\n", "all_scale_ref_frame_label", ".", "append", "(", "scale_ref_frame_label", ")", "\n", "", "scale_ref_frame_labels", ".", "append", "(", "all_scale_ref_frame_label", ")", "\n", "", "scale_previous_frame_label", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "previous_frame_mask", ".", "float", "(", ")", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'nearest'", ")", ".", "int", "(", ")", "\n", "scale_previous_frame_labels", ".", "append", "(", "scale_previous_frame_label", ")", "\n", "\n", "", "for", "n", "in", "range", "(", "bs", ")", ":", "\n", "            ", "ref_obj_ids", "=", "torch", ".", "arange", "(", "0", ",", "gt_ids", "[", "n", "]", "+", "1", ",", "device", "=", "current_frame_embedding", ".", "device", ")", ".", "int", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "obj_num", "=", "ref_obj_ids", ".", "size", "(", "0", ")", "\n", "low_level_feat", "=", "current_low_level", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", "\n", "all_CE_input", "=", "[", "]", "\n", "all_attention_head", "=", "[", "]", "\n", "for", "scale_idx", ",", "current_frame_embedding", ",", "ref_frame_embedding", ",", "previous_frame_embedding", ",", "scale_ref_frame_label", ",", "scale_previous_frame_label", "in", "zip", "(", "\n", "range", "(", "3", ")", ",", "current_frame_embeddings", ",", "ref_frame_embeddings", ",", "previous_frame_embeddings", ",", "scale_ref_frame_labels", ",", "scale_previous_frame_labels", ")", ":", "\n", "########################Prepare", "\n", "\n", "                ", "seq_current_frame_embedding", "=", "current_frame_embedding", "[", "n", "]", "\n", "seq_prev_frame_embedding", "=", "previous_frame_embedding", "[", "n", "]", "\n", "seq_previous_frame_label", "=", "(", "scale_previous_frame_label", "[", "n", "]", ".", "int", "(", ")", "==", "ref_obj_ids", ")", ".", "float", "(", ")", "\n", "\n", "if", "gt_ids", "[", "n", "]", ">", "0", ":", "\n", "                    ", "dis_bias", "=", "torch", ".", "cat", "(", "[", "self", ".", "bg_bias", "[", "scale_idx", "]", ".", "unsqueeze", "(", "0", ")", ",", "self", ".", "fg_bias", "[", "scale_idx", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "gt_ids", "[", "n", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                    ", "dis_bias", "=", "self", ".", "bg_bias", "[", "scale_idx", "]", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "########################Global FG map", "\n", "", "matching_dim", "=", "cfg", ".", "MODEL_SEMANTIC_MATCHING_DIM", "[", "scale_idx", "]", "\n", "seq_current_frame_embedding_for_matching", "=", "seq_current_frame_embedding", "[", ":", "matching_dim", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "                    ", "seq_ref_frame_embedding", "=", "ref_frame_embedding", "[", "n", "]", "\n", "seq_ref_frame_label", "=", "(", "scale_ref_frame_label", "[", "n", "]", ".", "int", "(", ")", "==", "ref_obj_ids", ")", ".", "float", "(", ")", "\n", "seq_ref_frame_embedding_for_matching", "=", "seq_ref_frame_embedding", "[", ":", "matching_dim", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "seq_ref_frame_label_for_matching", "=", "seq_ref_frame_label", ".", "squeeze", "(", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "global_matching_fg", "=", "global_matching", "(", "\n", "reference_embeddings", "=", "seq_ref_frame_embedding_for_matching", ",", "\n", "query_embeddings", "=", "seq_current_frame_embedding_for_matching", ",", "\n", "reference_labels", "=", "seq_ref_frame_label_for_matching", ",", "\n", "n_chunks", "=", "cfg", ".", "TRAIN_GLOBAL_MATCHING_CHUNK", "[", "scale_idx", "]", ",", "\n", "dis_bias", "=", "dis_bias", ",", "\n", "atrous_rate", "=", "cfg", ".", "TRAIN_GLOBAL_ATROUS_RATE", "[", "scale_idx", "]", ",", "\n", "use_float16", "=", "cfg", ".", "MODEL_FLOAT16_MATCHING", ")", "\n", "", "else", ":", "\n", "                    ", "all_scale_ref_frame_label", "=", "scale_ref_frame_label", "\n", "all_ref_frame_embedding", "=", "ref_frame_embedding", "\n", "all_reference_embeddings", "=", "[", "]", "\n", "all_reference_labels", "=", "[", "]", "\n", "seq_ref_frame_labels", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "len", "(", "all_scale_ref_frame_label", ")", ")", ":", "\n", "                        ", "ref_frame_embedding", "=", "all_ref_frame_embedding", "[", "idx", "]", "\n", "scale_ref_frame_label", "=", "all_scale_ref_frame_label", "[", "idx", "]", "\n", "\n", "seq_ref_frame_embedding", "=", "ref_frame_embedding", "[", "n", "]", "\n", "seq_ref_frame_embedding", "=", "seq_ref_frame_embedding", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "seq_ref_frame_label", "=", "(", "scale_ref_frame_label", "[", "n", "]", ".", "int", "(", ")", "==", "ref_obj_ids", ")", ".", "float", "(", ")", "\n", "seq_ref_frame_labels", ".", "append", "(", "seq_ref_frame_label", ")", "\n", "seq_ref_frame_label", "=", "seq_ref_frame_label", ".", "squeeze", "(", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "all_reference_embeddings", ".", "append", "(", "seq_ref_frame_embedding", "[", ":", ",", ":", ",", ":", "matching_dim", "]", ")", "\n", "all_reference_labels", ".", "append", "(", "seq_ref_frame_label", ")", "\n", "\n", "", "global_matching_fg", "=", "global_matching_for_eval", "(", "\n", "all_reference_embeddings", "=", "all_reference_embeddings", ",", "\n", "query_embeddings", "=", "seq_current_frame_embedding_for_matching", ",", "\n", "all_reference_labels", "=", "all_reference_labels", ",", "\n", "n_chunks", "=", "cfg", ".", "TEST_GLOBAL_MATCHING_CHUNK", "[", "scale_idx", "]", ",", "\n", "dis_bias", "=", "dis_bias", ",", "\n", "atrous_rate", "=", "cfg", ".", "TEST_GLOBAL_ATROUS_RATE", "[", "scale_idx", "]", ",", "\n", "use_float16", "=", "cfg", ".", "MODEL_FLOAT16_MATCHING", ",", "\n", "atrous_obj_pixel_num", "=", "cfg", ".", "TEST_GLOBAL_MATCHING_MIN_PIXEL", ")", "\n", "\n", "\n", "#########################Local FG map", "\n", "", "seq_prev_frame_embedding_for_matching", "=", "seq_prev_frame_embedding", "[", ":", "matching_dim", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "seq_previous_frame_label_for_matching", "=", "seq_previous_frame_label", ".", "squeeze", "(", "1", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "local_matching_fg", "=", "local_matching", "(", "\n", "prev_frame_embedding", "=", "seq_prev_frame_embedding_for_matching", ",", "\n", "query_embedding", "=", "seq_current_frame_embedding_for_matching", ",", "\n", "prev_frame_labels", "=", "seq_previous_frame_label_for_matching", ",", "\n", "multi_local_distance", "=", "cfg", ".", "MODEL_MULTI_LOCAL_DISTANCE", "[", "scale_idx", "]", ",", "\n", "dis_bias", "=", "dis_bias", ",", "\n", "atrous_rate", "=", "cfg", ".", "TRAIN_LOCAL_ATROUS_RATE", "[", "scale_idx", "]", "if", "self", ".", "training", "else", "cfg", ".", "TEST_LOCAL_ATROUS_RATE", "[", "scale_idx", "]", ",", "\n", "use_float16", "=", "cfg", ".", "MODEL_FLOAT16_MATCHING", ",", "\n", "allow_downsample", "=", "False", ",", "\n", "allow_parallel", "=", "cfg", ".", "TRAIN_LOCAL_PARALLEL", "if", "self", ".", "training", "else", "cfg", ".", "TEST_LOCAL_PARALLEL", ")", "\n", "\n", "\n", "\n", "##########################Aggregate Pixel-level Matching", "\n", "to_cat_global_matching_fg", "=", "global_matching_fg", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "to_cat_local_matching_fg", "=", "local_matching_fg", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "all_to_cat", "=", "[", "to_cat_global_matching_fg", ",", "to_cat_local_matching_fg", ",", "seq_previous_frame_label", "]", "\n", "\n", "#########################Global and Local BG map", "\n", "if", "cfg", ".", "MODEL_MATCHING_BACKGROUND", ":", "\n", "                    ", "to_cat_global_matching_bg", "=", "foreground2background", "(", "to_cat_global_matching_fg", ",", "gt_ids", "[", "n", "]", "+", "1", ")", "\n", "reshaped_prev_nn_feature_n", "=", "to_cat_local_matching_fg", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "to_cat_local_matching_bg", "=", "foreground2background", "(", "reshaped_prev_nn_feature_n", ",", "gt_ids", "[", "n", "]", "+", "1", ")", "\n", "to_cat_local_matching_bg", "=", "to_cat_local_matching_bg", ".", "permute", "(", "0", ",", "4", ",", "2", ",", "3", ",", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "all_to_cat", "+=", "[", "to_cat_local_matching_bg", ",", "to_cat_global_matching_bg", "]", "\n", "\n", "", "to_cat_current_frame_embedding", "=", "current_frame_embedding", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "obj_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "to_cat_prev_frame_embedding", "=", "previous_frame_embedding", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "obj_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "to_cat_prev_frame_embedding_fg", "=", "to_cat_prev_frame_embedding", "*", "seq_previous_frame_label", "\n", "to_cat_prev_frame_embedding_bg", "=", "to_cat_prev_frame_embedding", "*", "(", "1", "-", "seq_previous_frame_label", ")", "\n", "all_to_cat", "+=", "[", "to_cat_current_frame_embedding", ",", "to_cat_prev_frame_embedding_fg", ",", "to_cat_prev_frame_embedding_bg", "]", "\n", "\n", "CE_input", "=", "torch", ".", "cat", "(", "all_to_cat", ",", "1", ")", "\n", "\n", "##########################Instance-level Attention", "\n", "\n", "if", "self", ".", "training", ":", "\n", "                    ", "attention_head", "=", "calculate_attention_head", "(", "\n", "ref_frame_embedding", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "obj_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ")", ",", "\n", "seq_ref_frame_label", ",", "\n", "previous_frame_embedding", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "obj_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ")", ",", "\n", "seq_previous_frame_label", ",", "\n", "epsilon", "=", "self", ".", "epsilon", ")", "\n", "", "else", ":", "\n", "                    ", "attention_head", "=", "calculate_attention_head_for_eval", "(", "\n", "all_ref_frame_embedding", ",", "\n", "seq_ref_frame_labels", ",", "\n", "previous_frame_embedding", "[", "n", "]", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "(", "obj_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ")", ",", "\n", "seq_previous_frame_label", ",", "\n", "epsilon", "=", "self", ".", "epsilon", ")", "\n", "\n", "", "all_CE_input", ".", "append", "(", "CE_input", ")", "\n", "all_attention_head", ".", "append", "(", "attention_head", ")", "\n", "\n", "##########################Collaborative Ensembler", "\n", "", "pred", "=", "self", ".", "dynamic_seghead", "(", "all_CE_input", ",", "all_attention_head", ",", "low_level_feat", ")", "\n", "\n", "dic_tmp", ".", "append", "(", "pred", ")", "\n", "\n", "", "return", "dic_tmp", ",", "boards", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.get_module": [[278, 280], ["None"], "function", ["None"], ["", "", "def", "get_module", "(", ")", ":", "\n", "    ", "return", "CFBIP", "\n", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsembler.__init__": [[10, 74], ["torch.Module.__init__", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.aspp.ASPP", "networks.layers.gct.GCT", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "networks.layers.attention.IA_gate", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "networks.layers.attention.IA_gate", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_dim", "=", "256", ",", "\n", "attention_dim", "=", "400", ",", "\n", "embed_dim", "=", "100", ",", "\n", "refine_dim", "=", "48", ",", "\n", "low_level_dim", "=", "256", ")", ":", "\n", "        ", "super", "(", "CollaborativeEnsembler", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "IA_in_dim", "=", "attention_dim", "\n", "\n", "# stage 1", "\n", "self", ".", "IA1", "=", "IA_gate", "(", "IA_in_dim", ",", "in_dim", ")", "\n", "self", ".", "layer1", "=", "Bottleneck", "(", "in_dim", ",", "embed_dim", ")", "\n", "\n", "self", ".", "IA2", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", ")", "\n", "self", ".", "layer2", "=", "Bottleneck", "(", "embed_dim", ",", "embed_dim", ",", "1", ",", "2", ")", "\n", "\n", "# stage2", "\n", "self", ".", "IA3", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", ")", "\n", "self", ".", "layer3", "=", "Bottleneck", "(", "embed_dim", ",", "embed_dim", "*", "2", ",", "2", ")", "\n", "\n", "self", ".", "IA4", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", ")", "\n", "self", ".", "layer4", "=", "Bottleneck", "(", "embed_dim", "*", "2", ",", "embed_dim", "*", "2", ",", "1", ",", "2", ")", "\n", "\n", "self", ".", "IA5", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", ")", "\n", "self", ".", "layer5", "=", "Bottleneck", "(", "embed_dim", "*", "2", ",", "embed_dim", "*", "2", ",", "1", ",", "4", ")", "\n", "\n", "# stage3", "\n", "self", ".", "IA6", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", ")", "\n", "self", ".", "layer6", "=", "Bottleneck", "(", "embed_dim", "*", "2", ",", "embed_dim", "*", "2", ",", "2", ")", "\n", "\n", "self", ".", "IA7", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", ")", "\n", "self", ".", "layer7", "=", "Bottleneck", "(", "embed_dim", "*", "2", ",", "embed_dim", "*", "2", ",", "1", ",", "2", ")", "\n", "\n", "self", ".", "IA8", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", ")", "\n", "self", ".", "layer8", "=", "Bottleneck", "(", "embed_dim", "*", "2", ",", "embed_dim", "*", "2", ",", "1", ",", "4", ")", "\n", "\n", "# ASPP", "\n", "self", ".", "IA9", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", ")", "\n", "self", ".", "ASPP", "=", "ASPP", "(", ")", "\n", "\n", "# Decoder", "\n", "self", ".", "GCT_sc", "=", "GCT", "(", "low_level_dim", "+", "embed_dim", ")", "\n", "self", ".", "conv_sc", "=", "nn", ".", "Conv2d", "(", "low_level_dim", "+", "embed_dim", ",", "refine_dim", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn_sc", "=", "nn", ".", "GroupNorm", "(", "int", "(", "refine_dim", "/", "4", ")", ",", "refine_dim", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "\n", "self", ".", "IA10", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "+", "refine_dim", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "embed_dim", "+", "refine_dim", ",", "int", "(", "embed_dim", "/", "2", ")", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "32", ",", "int", "(", "embed_dim", "/", "2", ")", ")", "\n", "\n", "\n", "self", ".", "IA11", "=", "IA_gate", "(", "IA_in_dim", ",", "int", "(", "embed_dim", "/", "2", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "int", "(", "embed_dim", "/", "2", ")", ",", "int", "(", "embed_dim", "/", "2", ")", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "GroupNorm", "(", "32", ",", "int", "(", "embed_dim", "/", "2", ")", ")", "\n", "\n", "# Output", "\n", "self", ".", "IA_final_fg", "=", "nn", ".", "Linear", "(", "IA_in_dim", ",", "int", "(", "embed_dim", "/", "2", ")", "+", "1", ")", "\n", "self", ".", "IA_final_bg", "=", "nn", ".", "Linear", "(", "IA_in_dim", ",", "int", "(", "embed_dim", "/", "2", ")", "+", "1", ")", "\n", "\n", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "conv_sc", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "conv1", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "conv2", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsembler.forward": [[77, 118], ["ensembler.CollaborativeEnsembler.IA1", "ensembler.CollaborativeEnsembler.layer1", "ensembler.CollaborativeEnsembler.IA2", "ensembler.CollaborativeEnsembler.layer2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ensembler.CollaborativeEnsembler.IA3", "ensembler.CollaborativeEnsembler.layer3", "ensembler.CollaborativeEnsembler.IA4", "ensembler.CollaborativeEnsembler.layer4", "ensembler.CollaborativeEnsembler.IA5", "ensembler.CollaborativeEnsembler.layer5", "ensembler.CollaborativeEnsembler.IA6", "ensembler.CollaborativeEnsembler.layer6", "ensembler.CollaborativeEnsembler.IA7", "ensembler.CollaborativeEnsembler.layer7", "ensembler.CollaborativeEnsembler.IA8", "ensembler.CollaborativeEnsembler.layer8", "ensembler.CollaborativeEnsembler.IA9", "ensembler.CollaborativeEnsembler.ASPP", "ensembler.CollaborativeEnsembler.decoder", "ensembler.CollaborativeEnsembler.IA_logit", "ensembler.CollaborativeEnsembler.IA_logit", "ensembler.CollaborativeEnsembler.augment_background_logit", "torch.cat.expand", "torch.cat.expand", "torch.cat.expand", "ensembler.CollaborativeEnsembler.size"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.decoder", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.IA_logit", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.IA_logit", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.augment_background_logit"], ["", "def", "forward", "(", "self", ",", "x", ",", "IA_head", "=", "None", ",", "low_level_feat", "=", "None", ")", ":", "\n", "# stage 1", "\n", "        ", "x", "=", "self", ".", "IA1", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "IA2", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "\n", "low_level_feat", "=", "torch", ".", "cat", "(", "[", "low_level_feat", ".", "expand", "(", "x", ".", "size", "(", ")", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ",", "x", "]", ",", "dim", "=", "1", ")", "\n", "\n", "# stage 2", "\n", "x", "=", "self", ".", "IA3", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "IA4", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "IA5", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "layer5", "(", "x", ")", "\n", "\n", "# stage 3", "\n", "x", "=", "self", ".", "IA6", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "layer6", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "IA7", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "layer7", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "IA8", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "layer8", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "IA9", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "ASPP", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "decoder", "(", "x", ",", "low_level_feat", ",", "IA_head", ")", "\n", "\n", "fg_logit", "=", "self", ".", "IA_logit", "(", "x", ",", "IA_head", ",", "self", ".", "IA_final_fg", ")", "\n", "bg_logit", "=", "self", ".", "IA_logit", "(", "x", ",", "IA_head", ",", "self", ".", "IA_final_bg", ")", "\n", "\n", "pred", "=", "self", ".", "augment_background_logit", "(", "fg_logit", ",", "bg_logit", ")", "\n", "\n", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsembler.IA_logit": [[119, 129], ["x.view.view.size", "x.view.view.view", "IA_final", "IA_weight.view.view.view", "IA_bias.view.view.view", "torch.conv2d().view", "torch.conv2d().view", "torch.conv2d().view", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["", "def", "IA_logit", "(", "self", ",", "x", ",", "IA_head", ",", "IA_final", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "1", ",", "n", "*", "c", ",", "h", ",", "w", ")", "\n", "IA_output", "=", "IA_final", "(", "IA_head", ")", "\n", "IA_weight", "=", "IA_output", "[", ":", ",", ":", "c", "]", "\n", "IA_bias", "=", "IA_output", "[", ":", ",", "-", "1", "]", "\n", "IA_weight", "=", "IA_weight", ".", "view", "(", "n", ",", "c", ",", "1", ",", "1", ")", "\n", "IA_bias", "=", "IA_bias", ".", "view", "(", "-", "1", ")", "\n", "logit", "=", "F", ".", "conv2d", "(", "x", ",", "weight", "=", "IA_weight", ",", "bias", "=", "IA_bias", ",", "groups", "=", "n", ")", ".", "view", "(", "n", ",", "1", ",", "h", ",", "w", ")", "\n", "return", "logit", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsembler.decoder": [[130, 150], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "ensembler.CollaborativeEnsembler.GCT_sc", "ensembler.CollaborativeEnsembler.conv_sc", "ensembler.CollaborativeEnsembler.bn_sc", "ensembler.CollaborativeEnsembler.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ensembler.CollaborativeEnsembler.IA10", "ensembler.CollaborativeEnsembler.conv1", "ensembler.CollaborativeEnsembler.bn1", "ensembler.CollaborativeEnsembler.relu", "ensembler.CollaborativeEnsembler.IA11", "ensembler.CollaborativeEnsembler.conv2", "ensembler.CollaborativeEnsembler.bn2", "ensembler.CollaborativeEnsembler.relu", "ensembler.CollaborativeEnsembler.size"], "methods", ["None"], ["", "def", "decoder", "(", "self", ",", "x", ",", "low_level_feat", ",", "IA_head", ")", ":", "\n", "        ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "low_level_feat", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bicubic'", ",", "align_corners", "=", "True", ")", "\n", "\n", "low_level_feat", "=", "self", ".", "GCT_sc", "(", "low_level_feat", ")", "\n", "low_level_feat", "=", "self", ".", "conv_sc", "(", "low_level_feat", ")", "\n", "low_level_feat", "=", "self", ".", "bn_sc", "(", "low_level_feat", ")", "\n", "low_level_feat", "=", "self", ".", "relu", "(", "low_level_feat", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "low_level_feat", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "IA10", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "IA11", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsembler.augment_background_logit": [[151, 164], ["fg_logit.size", "pred.permute.permute.permute", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["", "def", "augment_background_logit", "(", "self", ",", "fg_logit", ",", "bg_logit", ")", ":", "\n", "#  We augment the logit of absolute background by using the relative background logit of all the ", "\n", "#  foreground objects.", "\n", "        ", "obj_num", "=", "fg_logit", ".", "size", "(", "0", ")", "\n", "pred", "=", "fg_logit", "\n", "if", "obj_num", ">", "1", ":", "\n", "            ", "bg_logit", "=", "bg_logit", "[", "1", ":", "obj_num", ",", ":", ",", ":", ",", ":", "]", "\n", "aug_bg_logit", ",", "_", "=", "torch", ".", "min", "(", "bg_logit", ",", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "pad", "=", "torch", ".", "zeros", "(", "aug_bg_logit", ".", "size", "(", ")", ",", "device", "=", "aug_bg_logit", ".", "device", ")", ".", "expand", "(", "obj_num", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "aug_bg_logit", "=", "torch", ".", "cat", "(", "[", "aug_bg_logit", ",", "pad", "]", ",", "dim", "=", "0", ")", "\n", "pred", "=", "pred", "+", "aug_bg_logit", "\n", "", "pred", "=", "pred", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", "\n", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.DynamicPreHead.__init__": [[166, 172], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "int", "int"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", "=", "3", ",", "embed_dim", "=", "100", ",", "kernel_size", "=", "1", ")", ":", "\n", "        ", "super", "(", "DynamicPreHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_dim", ",", "embed_dim", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "int", "(", "(", "kernel_size", "-", "1", ")", "/", "2", ")", ")", "\n", "self", ".", "bn", "=", "nn", ".", "GroupNorm", "(", "int", "(", "embed_dim", "/", "4", ")", ",", "embed_dim", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "conv", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.DynamicPreHead.forward": [[174, 179], ["ensembler.DynamicPreHead.conv", "ensembler.DynamicPreHead.bn", "ensembler.DynamicPreHead.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.__init__": [[181, 249], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.gct.Bottleneck", "networks.layers.attention.IA_gate", "networks.layers.aspp.ASPP", "networks.layers.gct.GCT", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "networks.layers.attention.IA_gate", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "networks.layers.attention.IA_gate", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_dim_4x", ",", "\n", "in_dim_8x", ",", "\n", "in_dim_16x", ",", "\n", "attention_dim", "=", "400", ",", "\n", "embed_dim", "=", "100", ",", "\n", "refine_dim", "=", "48", ",", "\n", "low_level_dim", "=", "256", ")", ":", "\n", "        ", "super", "(", "CollaborativeEnsemblerMS", ",", "self", ")", ".", "__init__", "(", ")", "\n", "IA_in_dim", "=", "attention_dim", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "# stage 1", "\n", "self", ".", "S1_IA1", "=", "IA_gate", "(", "IA_in_dim", ",", "in_dim_4x", ")", "\n", "self", ".", "S1_layer1", "=", "Bottleneck", "(", "in_dim_4x", ",", "embed_dim", ")", "\n", "\n", "self", ".", "S1_IA2", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", ")", "\n", "self", ".", "S1_layer2", "=", "Bottleneck", "(", "embed_dim", ",", "embed_dim", ",", "1", ",", "2", ")", "\n", "\n", "# stage2", "\n", "self", ".", "S2_IA1", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", ")", "\n", "self", ".", "S2_layer1", "=", "Bottleneck", "(", "embed_dim", ",", "embed_dim", "*", "2", ",", "2", ")", "\n", "\n", "self", ".", "S2_IA2", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", "+", "in_dim_8x", ")", "\n", "self", ".", "S2_layer2", "=", "Bottleneck", "(", "embed_dim", "*", "2", "+", "in_dim_8x", ",", "embed_dim", "*", "2", ",", "1", ",", "2", ")", "\n", "\n", "self", ".", "S2_IA3", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", ")", "\n", "self", ".", "S2_layer3", "=", "Bottleneck", "(", "embed_dim", "*", "2", ",", "embed_dim", "*", "2", ",", "1", ",", "4", ")", "\n", "\n", "\n", "# stage3", "\n", "self", ".", "S3_IA1", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", ")", "\n", "self", ".", "S3_layer1", "=", "Bottleneck", "(", "embed_dim", "*", "2", ",", "embed_dim", "*", "2", ",", "2", ")", "\n", "\n", "self", ".", "S3_IA2", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", "+", "in_dim_16x", ")", "\n", "self", ".", "S3_layer2", "=", "Bottleneck", "(", "embed_dim", "*", "2", "+", "in_dim_16x", ",", "embed_dim", "*", "2", ",", "1", ",", "2", ")", "\n", "\n", "self", ".", "S3_IA3", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", ")", "\n", "self", ".", "S3_layer3", "=", "Bottleneck", "(", "embed_dim", "*", "2", ",", "embed_dim", "*", "2", ",", "1", ",", "4", ")", "\n", "\n", "\n", "self", ".", "ASPP_IA", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "*", "2", ")", "\n", "self", ".", "ASPP", "=", "ASPP", "(", ")", "\n", "\n", "# Decoder", "\n", "self", ".", "GCT_sc", "=", "GCT", "(", "low_level_dim", "+", "embed_dim", ")", "\n", "self", ".", "conv_sc", "=", "nn", ".", "Conv2d", "(", "low_level_dim", "+", "embed_dim", ",", "refine_dim", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn_sc", "=", "nn", ".", "GroupNorm", "(", "int", "(", "refine_dim", "/", "4", ")", ",", "refine_dim", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "\n", "self", ".", "IA10", "=", "IA_gate", "(", "IA_in_dim", ",", "embed_dim", "+", "refine_dim", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "embed_dim", "+", "refine_dim", ",", "int", "(", "embed_dim", "/", "2", ")", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "32", ",", "int", "(", "embed_dim", "/", "2", ")", ")", "\n", "\n", "\n", "self", ".", "IA11", "=", "IA_gate", "(", "IA_in_dim", ",", "int", "(", "embed_dim", "/", "2", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "int", "(", "embed_dim", "/", "2", ")", ",", "int", "(", "embed_dim", "/", "2", ")", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "GroupNorm", "(", "32", ",", "int", "(", "embed_dim", "/", "2", ")", ")", "\n", "\n", "# Output", "\n", "self", ".", "IA_final_fg", "=", "nn", ".", "Linear", "(", "IA_in_dim", ",", "int", "(", "embed_dim", "/", "2", ")", "+", "1", ")", "\n", "self", ".", "IA_final_bg", "=", "nn", ".", "Linear", "(", "IA_in_dim", ",", "int", "(", "embed_dim", "/", "2", ")", "+", "1", ")", "\n", "\n", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "conv_sc", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "conv1", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "conv2", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.forward": [[252, 299], ["ensembler.CollaborativeEnsemblerMS.S1_IA1", "ensembler.CollaborativeEnsemblerMS.S1_layer1", "ensembler.CollaborativeEnsemblerMS.S1_IA2", "ensembler.CollaborativeEnsemblerMS.S1_layer2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ensembler.CollaborativeEnsemblerMS.S2_IA1", "ensembler.CollaborativeEnsemblerMS.S2_layer1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ensembler.CollaborativeEnsemblerMS.S2_IA2", "ensembler.CollaborativeEnsemblerMS.S2_layer2", "ensembler.CollaborativeEnsemblerMS.S2_IA3", "ensembler.CollaborativeEnsemblerMS.S2_layer3", "ensembler.CollaborativeEnsemblerMS.S3_IA1", "ensembler.CollaborativeEnsemblerMS.S3_layer1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ensembler.CollaborativeEnsemblerMS.S3_IA2", "ensembler.CollaborativeEnsemblerMS.S3_layer2", "ensembler.CollaborativeEnsemblerMS.S3_IA3", "ensembler.CollaborativeEnsemblerMS.S3_layer3", "ensembler.CollaborativeEnsemblerMS.ASPP_IA", "ensembler.CollaborativeEnsemblerMS.ASPP", "ensembler.CollaborativeEnsemblerMS.decoder", "ensembler.CollaborativeEnsemblerMS.IA_logit", "ensembler.CollaborativeEnsemblerMS.IA_logit", "ensembler.CollaborativeEnsemblerMS.augment_background_logit", "torch.cat.expand", "torch.cat.expand", "torch.cat.expand", "ensembler.CollaborativeEnsemblerMS.size"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.decoder", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.IA_logit", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.IA_logit", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.augment_background_logit"], ["", "def", "forward", "(", "self", ",", "all_x", ",", "all_IA_head", "=", "None", ",", "low_level_feat", "=", "None", ")", ":", "\n", "        ", "x_4x", ",", "x_8x", ",", "x_16x", "=", "all_x", "\n", "IA_head", "=", "all_IA_head", "[", "0", "]", "\n", "\n", "# stage 1", "\n", "x", "=", "self", ".", "S1_IA1", "(", "x_4x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "S1_layer1", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "S1_IA2", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "S1_layer2", "(", "x", ")", "\n", "\n", "low_level_feat", "=", "torch", ".", "cat", "(", "[", "low_level_feat", ".", "expand", "(", "x", ".", "size", "(", ")", "[", "0", "]", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ",", "x", "]", ",", "dim", "=", "1", ")", "\n", "\n", "# stage 2", "\n", "x", "=", "self", ".", "S2_IA1", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "S2_layer1", "(", "x", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "x_8x", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "S2_IA2", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "S2_layer2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "S2_IA3", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "S2_layer3", "(", "x", ")", "\n", "\n", "# stage 3", "\n", "x", "=", "self", ".", "S3_IA1", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "S3_layer1", "(", "x", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "x_16x", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "S3_IA2", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "S3_layer2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "S3_IA3", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "S3_layer3", "(", "x", ")", "\n", "\n", "# ASPP + Decoder", "\n", "x", "=", "self", ".", "ASPP_IA", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "ASPP", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "decoder", "(", "x", ",", "low_level_feat", ",", "IA_head", ")", "\n", "\n", "fg_logit", "=", "self", ".", "IA_logit", "(", "x", ",", "IA_head", ",", "self", ".", "IA_final_fg", ")", "\n", "bg_logit", "=", "self", ".", "IA_logit", "(", "x", ",", "IA_head", ",", "self", ".", "IA_final_bg", ")", "\n", "\n", "pred", "=", "self", ".", "augment_background_logit", "(", "fg_logit", ",", "bg_logit", ")", "\n", "\n", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.IA_logit": [[300, 310], ["x.view.view.size", "x.view.view.view", "IA_final", "IA_weight.view.view.view", "IA_bias.view.view.view", "torch.conv2d().view", "torch.conv2d().view", "torch.conv2d().view", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["", "def", "IA_logit", "(", "self", ",", "x", ",", "IA_head", ",", "IA_final", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "1", ",", "n", "*", "c", ",", "h", ",", "w", ")", "\n", "IA_output", "=", "IA_final", "(", "IA_head", ")", "\n", "IA_weight", "=", "IA_output", "[", ":", ",", ":", "c", "]", "\n", "IA_bias", "=", "IA_output", "[", ":", ",", "-", "1", "]", "\n", "IA_weight", "=", "IA_weight", ".", "view", "(", "n", ",", "c", ",", "1", ",", "1", ")", "\n", "IA_bias", "=", "IA_bias", ".", "view", "(", "-", "1", ")", "\n", "logit", "=", "F", ".", "conv2d", "(", "x", ",", "weight", "=", "IA_weight", ",", "bias", "=", "IA_bias", ",", "groups", "=", "n", ")", ".", "view", "(", "n", ",", "1", ",", "h", ",", "w", ")", "\n", "return", "logit", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.decoder": [[311, 331], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "ensembler.CollaborativeEnsemblerMS.GCT_sc", "ensembler.CollaborativeEnsemblerMS.conv_sc", "ensembler.CollaborativeEnsemblerMS.bn_sc", "ensembler.CollaborativeEnsemblerMS.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ensembler.CollaborativeEnsemblerMS.IA10", "ensembler.CollaborativeEnsemblerMS.conv1", "ensembler.CollaborativeEnsemblerMS.bn1", "ensembler.CollaborativeEnsemblerMS.relu", "ensembler.CollaborativeEnsemblerMS.IA11", "ensembler.CollaborativeEnsemblerMS.conv2", "ensembler.CollaborativeEnsemblerMS.bn2", "ensembler.CollaborativeEnsemblerMS.relu", "ensembler.CollaborativeEnsemblerMS.size"], "methods", ["None"], ["", "def", "decoder", "(", "self", ",", "x", ",", "low_level_feat", ",", "IA_head", ")", ":", "\n", "        ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "low_level_feat", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bicubic'", ",", "align_corners", "=", "True", ")", "\n", "\n", "low_level_feat", "=", "self", ".", "GCT_sc", "(", "low_level_feat", ")", "\n", "low_level_feat", "=", "self", ".", "conv_sc", "(", "low_level_feat", ")", "\n", "low_level_feat", "=", "self", ".", "bn_sc", "(", "low_level_feat", ")", "\n", "low_level_feat", "=", "self", ".", "relu", "(", "low_level_feat", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "low_level_feat", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "IA10", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "IA11", "(", "x", ",", "IA_head", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.augment_background_logit": [[332, 345], ["fg_logit.size", "pred.permute.permute.permute", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.zeros().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["", "def", "augment_background_logit", "(", "self", ",", "fg_logit", ",", "bg_logit", ")", ":", "\n", "#  We augment the logit of absolute background by using the relative background logit of all the ", "\n", "#  foreground objects.", "\n", "        ", "obj_num", "=", "fg_logit", ".", "size", "(", "0", ")", "\n", "pred", "=", "fg_logit", "\n", "if", "obj_num", ">", "1", ":", "\n", "            ", "bg_logit", "=", "bg_logit", "[", "1", ":", "obj_num", ",", ":", ",", ":", ",", ":", "]", "\n", "aug_bg_logit", ",", "_", "=", "torch", ".", "min", "(", "bg_logit", ",", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "pad", "=", "torch", ".", "zeros", "(", "aug_bg_logit", ".", "size", "(", ")", ",", "device", "=", "aug_bg_logit", ".", "device", ")", ".", "expand", "(", "obj_num", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "aug_bg_logit", "=", "torch", ".", "cat", "(", "[", "aug_bg_logit", ",", "pad", "]", ",", "dim", "=", "0", ")", "\n", "pred", "=", "pred", "+", "aug_bg_logit", "\n", "", "pred", "=", "pred", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", "\n", "return", "pred", "\n", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.aspp._ASPPModule.__init__": [[7, 15], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "aspp._ASPPModule._init_weight"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._init_weight"], ["class", "_ASPPModule", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "kernel_size", ",", "padding", ",", "dilation", ")", ":", "\n", "        ", "super", "(", "_ASPPModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "GCT", "=", "GCT", "(", "inplanes", ")", "\n", "self", ".", "atrous_conv", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "1", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "GroupNorm", "(", "int", "(", "planes", "/", "4", ")", ",", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.aspp._ASPPModule.forward": [[16, 21], ["aspp._ASPPModule.atrous_conv", "aspp._ASPPModule.bn", "aspp._ASPPModule.relu"], "methods", ["None"], ["self", ".", "_init_weight", "(", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "GCT", "(", "x", ")", "\n", "x", "=", "self", ".", "atrous_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.aspp._ASPPModule._init_weight": [[22, 29], ["aspp._ASPPModule.modules", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["\n", "return", "self", ".", "relu", "(", "x", ")", "\n", "\n", "", "def", "_init_weight", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.aspp.ASPP.__init__": [[31, 60], ["torch.Module.__init__", "aspp._ASPPModule", "aspp._ASPPModule", "aspp._ASPPModule", "aspp._ASPPModule", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "aspp.ASPP._init_weight", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._init_weight"], ["m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "", "", "", "class", "ASPP", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ASPP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inplanes", "=", "512", "\n", "dilations", "=", "[", "1", ",", "6", ",", "12", ",", "18", "]", "\n", "\n", "\n", "self", ".", "aspp1", "=", "_ASPPModule", "(", "inplanes", ",", "128", ",", "1", ",", "padding", "=", "0", ",", "dilation", "=", "dilations", "[", "0", "]", ")", "\n", "self", ".", "aspp2", "=", "_ASPPModule", "(", "inplanes", ",", "128", ",", "3", ",", "padding", "=", "dilations", "[", "1", "]", ",", "dilation", "=", "dilations", "[", "1", "]", ")", "\n", "self", ".", "aspp3", "=", "_ASPPModule", "(", "inplanes", ",", "128", ",", "3", ",", "padding", "=", "dilations", "[", "2", "]", ",", "dilation", "=", "dilations", "[", "2", "]", ")", "\n", "self", ".", "aspp4", "=", "_ASPPModule", "(", "inplanes", ",", "128", ",", "3", ",", "padding", "=", "dilations", "[", "3", "]", ",", "dilation", "=", "dilations", "[", "3", "]", ")", "\n", "\n", "self", ".", "global_avg_pool", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "128", ",", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "GCT", "=", "GCT", "(", "640", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "640", ",", "256", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "32", ",", "256", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "_init_weight", "(", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "aspp1", "(", "x", ")", "\n", "x2", "=", "self", ".", "aspp2", "(", "x", ")", "\n", "x3", "=", "self", ".", "aspp3", "(", "x", ")", "\n", "x4", "=", "self", ".", "aspp4", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.aspp.ASPP.forward": [[61, 75], ["aspp.ASPP.aspp1", "aspp.ASPP.aspp2", "aspp.ASPP.aspp3", "aspp.ASPP.aspp4", "aspp.ASPP.global_avg_pool", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "aspp.ASPP.conv1", "aspp.ASPP.bn1", "aspp.ASPP.relu", "aspp.ASPP.dropout", "aspp.ASPP.size"], "methods", ["None"], ["x5", "=", "self", ".", "global_avg_pool", "(", "x", ")", "\n", "x5", "=", "F", ".", "interpolate", "(", "x5", ",", "size", "=", "x4", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ")", ",", "dim", "=", "1", ")", "\n", "\n", "x", "=", "self", ".", "GCT", "(", "x", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n", "", "def", "_init_weight", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.aspp.ASPP._init_weight": [[76, 83], ["aspp.ASPP.modules", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.aspp.build_aspp": [[85, 87], ["aspp.ASPP"], "function", ["None"], []], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.deeplab.DeepLab.__init__": [[10, 25], ["torch.Module.__init__", "networks.deeplab.backbone.build_backbone", "networks.deeplab.aspp.build_aspp", "networks.deeplab.decoder.build_decoder", "print"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.__init__.build_backbone", "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.aspp.build_aspp", "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.decoder.build_decoder"], ["    ", "def", "__init__", "(", "self", ",", "\n", "backbone", "=", "'resnet'", ",", "\n", "output_stride", "=", "16", ",", "\n", "freeze_bn", "=", "True", ")", ":", "\n", "        ", "super", "(", "DeepLab", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "freeze_bn", "==", "True", ":", "\n", "            ", "print", "(", "\"Use frozen BN in DeepLab!\"", ")", "\n", "BatchNorm", "=", "FrozenBatchNorm2d", "\n", "", "else", ":", "\n", "            ", "BatchNorm", "=", "nn", ".", "BatchNorm2d", "\n", "\n", "", "self", ".", "backbone", "=", "build_backbone", "(", "backbone", ",", "output_stride", ",", "BatchNorm", ")", "\n", "self", ".", "aspp", "=", "build_aspp", "(", "backbone", ",", "output_stride", ",", "BatchNorm", ")", "\n", "self", ".", "decoder", "=", "build_decoder", "(", "backbone", ",", "BatchNorm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.deeplab.DeepLab.forward": [[27, 39], ["deeplab.DeepLab.aspp", "deeplab.DeepLab.decoder", "deeplab.DeepLab.backbone", "deeplab.DeepLab.backbone"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.ensembler.CollaborativeEnsemblerMS.decoder"], ["", "def", "forward", "(", "self", ",", "input", ",", "return_aspp", "=", "False", ")", ":", "\n", "        ", "if", "return_aspp", ":", "\n", "            ", "x", ",", "low_level_feat", ",", "mid_level_feat", "=", "self", ".", "backbone", "(", "input", ",", "True", ")", "\n", "", "else", ":", "\n", "            ", "x", ",", "low_level_feat", "=", "self", ".", "backbone", "(", "input", ")", "\n", "", "aspp_x", "=", "self", ".", "aspp", "(", "x", ")", "\n", "x", "=", "self", ".", "decoder", "(", "aspp_x", ",", "low_level_feat", ")", "\n", "\n", "if", "return_aspp", ":", "\n", "            ", "return", "x", ",", "aspp_x", ",", "low_level_feat", ",", "mid_level_feat", "\n", "", "else", ":", "\n", "            ", "return", "x", ",", "low_level_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.deeplab.DeepLab.get_1x_lr_params": [[41, 49], ["range", "len", "modules[].named_modules", "isinstance", "isinstance", "m[].parameters"], "methods", ["None"], ["", "", "def", "get_1x_lr_params", "(", "self", ")", ":", "\n", "        ", "modules", "=", "[", "self", ".", "backbone", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "modules", ")", ")", ":", "\n", "            ", "for", "m", "in", "modules", "[", "i", "]", ".", "named_modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", "[", "1", "]", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", "[", "1", "]", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                    ", "for", "p", "in", "m", "[", "1", "]", ".", "parameters", "(", ")", ":", "\n", "                        ", "if", "p", ".", "requires_grad", ":", "\n", "                            ", "yield", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.deeplab.DeepLab.get_10x_lr_params": [[50, 58], ["range", "len", "modules[].named_modules", "isinstance", "isinstance", "m[].parameters"], "methods", ["None"], ["", "", "", "", "", "", "def", "get_10x_lr_params", "(", "self", ")", ":", "\n", "        ", "modules", "=", "[", "self", ".", "aspp", ",", "self", ".", "decoder", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "modules", ")", ")", ":", "\n", "            ", "for", "m", "in", "modules", "[", "i", "]", ".", "named_modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", "[", "1", "]", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", "[", "1", "]", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                    ", "for", "p", "in", "m", "[", "1", "]", ".", "parameters", "(", ")", ":", "\n", "                        ", "if", "p", ".", "requires_grad", ":", "\n", "                            ", "yield", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.decoder.Decoder.__init__": [[7, 30], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "decoder.Decoder._init_weight", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._init_weight"], ["    ", "def", "__init__", "(", "self", ",", "backbone", ",", "BatchNorm", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "backbone", "==", "'resnet'", ":", "\n", "            ", "low_level_inplanes", "=", "256", "\n", "", "elif", "backbone", "==", "'mobilenet'", ":", "\n", "            ", "low_level_inplanes", "=", "24", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "low_level_inplanes", ",", "48", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "BatchNorm", "(", "48", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "last_conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "304", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Sequential", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Sequential", "(", ")", ")", "\n", "\n", "self", ".", "_init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.decoder.Decoder.forward": [[32, 42], ["decoder.Decoder.conv1", "decoder.Decoder.bn1", "decoder.Decoder.relu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "decoder.Decoder.last_conv", "decoder.Decoder.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "low_level_feat", ")", ":", "\n", "        ", "low_level_feat", "=", "self", ".", "conv1", "(", "low_level_feat", ")", "\n", "low_level_feat", "=", "self", ".", "bn1", "(", "low_level_feat", ")", "\n", "low_level_feat", "=", "self", ".", "relu", "(", "low_level_feat", ")", "\n", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "low_level_feat", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "low_level_feat", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "last_conv", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.decoder.Decoder._init_weight": [[43, 50], ["decoder.Decoder.modules", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_init_weight", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.deeplab.decoder.build_decoder": [[51, 53], ["decoder.Decoder"], "function", ["None"], ["", "", "", "", "def", "build_decoder", "(", "backbone", ",", "BatchNorm", ")", ":", "\n", "    ", "return", "Decoder", "(", "backbone", ",", "BatchNorm", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.InvertedResidual.__init__": [[25, 58], ["torch.Module.__init__", "round", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", ",", "dilation", ",", "expand_ratio", ",", "BatchNorm", ")", ":", "\n", "        ", "super", "(", "InvertedResidual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "assert", "stride", "in", "[", "1", ",", "2", "]", "\n", "\n", "hidden_dim", "=", "round", "(", "inp", "*", "expand_ratio", ")", "\n", "self", ".", "use_res_connect", "=", "self", ".", "stride", "==", "1", "and", "inp", "==", "oup", "\n", "self", ".", "kernel_size", "=", "3", "\n", "self", ".", "dilation", "=", "dilation", "\n", "\n", "if", "expand_ratio", "==", "1", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "hidden_dim", ",", "3", ",", "stride", ",", "0", ",", "dilation", ",", "groups", "=", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "oup", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "hidden_dim", ",", "1", ",", "1", ",", "0", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "hidden_dim", ",", "3", ",", "stride", ",", "0", ",", "dilation", ",", "groups", "=", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "oup", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.InvertedResidual.forward": [[60, 67], ["mobilenet.fixed_padding", "mobilenet.InvertedResidual.conv", "mobilenet.InvertedResidual.conv"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.fixed_padding"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_pad", "=", "fixed_padding", "(", "x", ",", "self", ".", "kernel_size", ",", "dilation", "=", "self", ".", "dilation", ")", "\n", "if", "self", ".", "use_res_connect", ":", "\n", "            ", "x", "=", "x", "+", "self", ".", "conv", "(", "x_pad", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "conv", "(", "x_pad", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.MobileNetV2.__init__": [[70, 120], ["torch.Module.__init__", "int", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mobilenet.MobileNetV2._initialize_weights", "mobilenet.conv_bn", "int", "range", "mobilenet.MobileNetV2._load_pretrained_model", "mobilenet.MobileNetV2.features.append", "mobilenet.MobileNetV2.features.append", "block", "block"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.MobileNetV2._initialize_weights", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.conv_bn", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._load_pretrained_model"], ["    ", "def", "__init__", "(", "self", ",", "output_stride", "=", "8", ",", "BatchNorm", "=", "None", ",", "width_mult", "=", "1.", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "block", "=", "InvertedResidual", "\n", "input_channel", "=", "32", "\n", "current_stride", "=", "1", "\n", "rate", "=", "1", "\n", "interverted_residual_setting", "=", "[", "\n", "# t, c, n, s", "\n", "[", "1", ",", "16", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "24", ",", "2", ",", "2", "]", ",", "\n", "[", "6", ",", "32", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "64", ",", "4", ",", "2", "]", ",", "\n", "[", "6", ",", "96", ",", "3", ",", "1", "]", ",", "\n", "[", "6", ",", "160", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "320", ",", "1", ",", "1", "]", ",", "\n", "]", "\n", "\n", "# building first layer", "\n", "input_channel", "=", "int", "(", "input_channel", "*", "width_mult", ")", "\n", "self", ".", "features", "=", "[", "conv_bn", "(", "3", ",", "input_channel", ",", "2", ",", "BatchNorm", ")", "]", "\n", "current_stride", "*=", "2", "\n", "# building inverted residual blocks", "\n", "for", "t", ",", "c", ",", "n", ",", "s", "in", "interverted_residual_setting", ":", "\n", "            ", "if", "current_stride", "==", "output_stride", ":", "\n", "                ", "stride", "=", "1", "\n", "dilation", "=", "rate", "\n", "rate", "*=", "s", "\n", "", "else", ":", "\n", "                ", "stride", "=", "s", "\n", "dilation", "=", "1", "\n", "current_stride", "*=", "s", "\n", "", "output_channel", "=", "int", "(", "c", "*", "width_mult", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "self", ".", "features", ".", "append", "(", "block", "(", "input_channel", ",", "output_channel", ",", "stride", ",", "dilation", ",", "t", ",", "BatchNorm", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "features", ".", "append", "(", "block", "(", "input_channel", ",", "output_channel", ",", "1", ",", "rate", ",", "t", ",", "BatchNorm", ")", ")", "\n", "", "input_channel", "=", "output_channel", "\n", "", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "features", ")", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n", "if", "pretrained", ":", "\n", "            ", "self", ".", "_load_pretrained_model", "(", ")", "\n", "\n", "", "self", ".", "low_level_features", "=", "self", ".", "features", "[", "0", ":", "4", "]", "\n", "self", ".", "high_level_features", "=", "self", ".", "features", "[", "4", ":", "]", "\n", "\n", "self", ".", "feautre_8x", "=", "self", ".", "features", "[", "4", ":", "7", "]", "\n", "self", ".", "feature_16x", "=", "self", ".", "features", "[", "7", ":", "14", "]", "\n", "self", ".", "feature_32x", "=", "self", ".", "features", "[", "14", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.MobileNetV2.forward": [[121, 132], ["mobilenet.MobileNetV2.low_level_features", "mobilenet.MobileNetV2.feautre_8x", "mobilenet.MobileNetV2.feature_16x", "mobilenet.MobileNetV2.feature_32x", "mobilenet.MobileNetV2.low_level_features", "mobilenet.MobileNetV2.high_level_features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "return_mid_level", "=", "False", ")", ":", "\n", "        ", "if", "return_mid_level", ":", "\n", "            ", "low_level_feat", "=", "self", ".", "low_level_features", "(", "x", ")", "\n", "mid_level_feat", "=", "self", ".", "feautre_8x", "(", "low_level_feat", ")", "\n", "x", "=", "self", ".", "feature_16x", "(", "mid_level_feat", ")", "\n", "x", "=", "self", ".", "feature_32x", "(", "x", ")", "\n", "return", "x", ",", "low_level_feat", ",", "mid_level_feat", "\n", "", "else", ":", "\n", "            ", "low_level_feat", "=", "self", ".", "low_level_features", "(", "x", ")", "\n", "x", "=", "self", ".", "high_level_features", "(", "low_level_feat", ")", "\n", "return", "x", ",", "low_level_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.MobileNetV2._load_pretrained_model": [[133, 142], ["torch.load_url", "torch.load_url", "torch.load_url", "torch.load_url", "mobilenet.MobileNetV2.state_dict", "torch.load_url.items", "mobilenet.MobileNetV2.update", "mobilenet.MobileNetV2.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.meters.AverageMeter.update"], ["", "", "def", "_load_pretrained_model", "(", "self", ")", ":", "\n", "        ", "pretrain_dict", "=", "model_zoo", ".", "load_url", "(", "'http://jeff95.me/models/mobilenet_v2-6a65762b.pth'", ")", "\n", "model_dict", "=", "{", "}", "\n", "state_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "k", ",", "v", "in", "pretrain_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "state_dict", ":", "\n", "                ", "model_dict", "[", "k", "]", "=", "v", "\n", "", "", "state_dict", ".", "update", "(", "model_dict", ")", "\n", "self", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.MobileNetV2._initialize_weights": [[143, 150], ["mobilenet.MobileNetV2.modules", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.conv_bn": [[7, 12], ["torch.Sequential", "torch.Conv2d", "BatchNorm", "torch.ReLU6"], "function", ["None"], ["def", "conv_bn", "(", "inp", ",", "oup", ",", "stride", ",", "BatchNorm", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "3", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.mobilenet.fixed_padding": [[15, 22], ["torch.pad"], "function", ["None"], ["", "def", "fixed_padding", "(", "inputs", ",", "kernel_size", ",", "dilation", ")", ":", "\n", "    ", "kernel_size_effective", "=", "kernel_size", "+", "(", "kernel_size", "-", "1", ")", "*", "(", "dilation", "-", "1", ")", "\n", "pad_total", "=", "kernel_size_effective", "-", "1", "\n", "pad_beg", "=", "pad_total", "//", "2", "\n", "pad_end", "=", "pad_total", "-", "pad_beg", "\n", "padded_inputs", "=", "F", ".", "pad", "(", "inputs", ",", "(", "pad_beg", ",", "pad_end", ",", "pad_beg", ",", "pad_end", ")", ")", "\n", "return", "padded_inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.Bottleneck.__init__": [[8, 21], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "downsample", "=", "None", ",", "BatchNorm", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "BatchNorm", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "padding", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "BatchNorm", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "BatchNorm", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "dilation", "=", "dilation", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.Bottleneck.forward": [[22, 43], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet.__init__": [[46, 71], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_MG_unit", "resnet.ResNet._init_weight"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_MG_unit", "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._init_weight"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "output_stride", ",", "BatchNorm", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "blocks", "=", "[", "1", ",", "2", ",", "4", "]", "\n", "if", "output_stride", "==", "16", ":", "\n", "            ", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", "\n", "dilations", "=", "[", "1", ",", "1", ",", "1", ",", "2", "]", "\n", "", "elif", "output_stride", "==", "8", ":", "\n", "            ", "strides", "=", "[", "1", ",", "2", ",", "1", ",", "1", "]", "\n", "dilations", "=", "[", "1", ",", "1", ",", "2", ",", "4", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "# Modules", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "BatchNorm", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "stride", "=", "strides", "[", "0", "]", ",", "dilation", "=", "dilations", "[", "0", "]", ",", "BatchNorm", "=", "BatchNorm", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "strides", "[", "1", "]", ",", "dilation", "=", "dilations", "[", "1", "]", ",", "BatchNorm", "=", "BatchNorm", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "strides", "[", "2", "]", ",", "dilation", "=", "dilations", "[", "2", "]", ",", "BatchNorm", "=", "BatchNorm", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_MG_unit", "(", "block", ",", "512", ",", "blocks", "=", "blocks", ",", "stride", "=", "strides", "[", "3", "]", ",", "dilation", "=", "dilations", "[", "3", "]", ",", "BatchNorm", "=", "BatchNorm", ")", "\n", "self", ".", "_init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_layer": [[72, 88], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "BatchNorm", "=", "None", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "dilation", ",", "downsample", ",", "BatchNorm", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ",", "BatchNorm", "=", "BatchNorm", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._make_MG_unit": [[89, 107], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "len", "layers.append", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "block"], "methods", ["None"], ["", "def", "_make_MG_unit", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "BatchNorm", "=", "None", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "dilation", "=", "blocks", "[", "0", "]", "*", "dilation", ",", "\n", "downsample", "=", "downsample", ",", "BatchNorm", "=", "BatchNorm", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "blocks", ")", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "\n", "dilation", "=", "blocks", "[", "i", "]", "*", "dilation", ",", "BatchNorm", "=", "BatchNorm", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet.forward": [[108, 124], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "return_mid_level", "=", "False", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "input", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "low_level_feat", "=", "x", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "mid_level_feat", "=", "x", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "if", "return_mid_level", ":", "\n", "            ", "return", "x", ",", "low_level_feat", ",", "mid_level_feat", "\n", "", "else", ":", "\n", "            ", "return", "x", ",", "low_level_feat", "\n", "", "", "def", "_init_weight", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._init_weight": [[124, 132], ["resnet.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "", "def", "_init_weight", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet._load_pretrained_model": [[133, 142], ["torch.load_url", "torch.load_url", "resnet.ResNet.state_dict", "torch.load_url.items", "resnet.ResNet.update", "resnet.ResNet.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.meters.AverageMeter.update"], ["", "", "", "def", "_load_pretrained_model", "(", "self", ")", ":", "\n", "        ", "pretrain_dict", "=", "model_zoo", ".", "load_url", "(", "'https://download.pytorch.org/models/resnet101-5d3b4d8f.pth'", ")", "\n", "model_dict", "=", "{", "}", "\n", "state_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "k", ",", "v", "in", "pretrain_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "state_dict", ":", "\n", "                ", "model_dict", "[", "k", "]", "=", "v", "\n", "", "", "state_dict", ".", "update", "(", "model_dict", ")", "\n", "self", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet101": [[143, 150], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet101", "(", "output_stride", ",", "BatchNorm", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "output_stride", ",", "BatchNorm", ",", "pretrained", "=", "pretrained", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.__init__.build_backbone": [[3, 10], ["networks.deeplab.backbone.resnet.ResNet101", "networks.deeplab.backbone.mobilenet.MobileNetV2"], "function", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.backbone.resnet.ResNet101"], []], "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.__init__": [[20, 41], ["eval_manager.Evaluator.print_log", "print", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "eval_manager.Evaluator.print_log", "networks.deeplab.deeplab.DeepLab().cuda", "eval_manager.Evaluator.print_log", "importlib.import_module", "eval_manager.Evaluator.process_pretrained_model", "eval_manager.Evaluator.prepare_dataset", "networks.deeplab.deeplab.DeepLab", "importlib.import_module.get_module"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.process_pretrained_model", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.prepare_dataset", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.get_module"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "gpu", "=", "cfg", ".", "TEST_GPU_ID", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "print_log", "(", "cfg", ".", "__dict__", ")", "\n", "print", "(", "\"Use GPU {} for evaluating\"", ".", "format", "(", "self", ".", "gpu", ")", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "self", ".", "gpu", ")", "\n", "\n", "self", ".", "print_log", "(", "'Build backbone.'", ")", "\n", "self", ".", "feature_extracter", "=", "DeepLab", "(", "\n", "backbone", "=", "cfg", ".", "MODEL_BACKBONE", ",", "\n", "freeze_bn", "=", "cfg", ".", "MODEL_FREEZE_BN", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "\n", "self", ".", "print_log", "(", "'Build VOS model.'", ")", "\n", "CFBI", "=", "importlib", ".", "import_module", "(", "cfg", ".", "MODEL_MODULE", ")", "\n", "self", ".", "model", "=", "CFBI", ".", "get_module", "(", ")", "(", "\n", "cfg", ",", "\n", "self", ".", "feature_extracter", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "\n", "self", ".", "process_pretrained_model", "(", ")", "\n", "\n", "self", ".", "prepare_dataset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.process_pretrained_model": [[42, 71], ["eval_manager.Evaluator.print_log", "os.path.join", "utils.checkpoint.load_network", "eval_manager.Evaluator.print_log", "utils.checkpoint.load_network", "eval_manager.Evaluator.print_log", "str", "os.listdir", "len", "eval_manager.Evaluator.print_log", "len", "eval_manager.Evaluator.print_log", "len", "list", "eval_manager.Evaluator.print_log", "exit", "map", "numpy.sort", "int", "[].split", "x.split"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log", "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.checkpoint.load_network", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log", "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.checkpoint.load_network", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log"], ["", "def", "process_pretrained_model", "(", "self", ")", ":", "\n", "        ", "cfg", "=", "self", ".", "cfg", "\n", "if", "cfg", ".", "TEST_CKPT_PATH", "==", "'test'", ":", "\n", "            ", "self", ".", "ckpt", "=", "'test'", "\n", "self", ".", "print_log", "(", "'Test evaluation.'", ")", "\n", "return", "\n", "", "if", "cfg", ".", "TEST_CKPT_PATH", "is", "None", ":", "\n", "            ", "if", "cfg", ".", "TEST_CKPT_STEP", "is", "not", "None", ":", "\n", "                ", "ckpt", "=", "str", "(", "cfg", ".", "TEST_CKPT_STEP", ")", "\n", "", "else", ":", "\n", "                ", "ckpts", "=", "os", ".", "listdir", "(", "cfg", ".", "DIR_CKPT", ")", "\n", "if", "len", "(", "ckpts", ")", ">", "0", ":", "\n", "                    ", "ckpts", "=", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", ",", "ckpts", ")", ")", "\n", "ckpt", "=", "np", ".", "sort", "(", "ckpts", ")", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "                    ", "self", ".", "print_log", "(", "'No checkpoint in {}.'", ".", "format", "(", "cfg", ".", "DIR_CKPT", ")", ")", "\n", "exit", "(", ")", "\n", "", "", "self", ".", "ckpt", "=", "ckpt", "\n", "cfg", ".", "TEST_CKPT_PATH", "=", "os", ".", "path", ".", "join", "(", "cfg", ".", "DIR_CKPT", ",", "'save_step_%s.pth'", "%", "ckpt", ")", "\n", "self", ".", "model", ",", "removed_dict", "=", "load_network", "(", "self", ".", "model", ",", "cfg", ".", "TEST_CKPT_PATH", ",", "self", ".", "gpu", ")", "\n", "if", "len", "(", "removed_dict", ")", ">", "0", ":", "\n", "                ", "self", ".", "print_log", "(", "'Remove {} from pretrained model.'", ".", "format", "(", "removed_dict", ")", ")", "\n", "", "self", ".", "print_log", "(", "'Load latest checkpoint from {}'", ".", "format", "(", "cfg", ".", "TEST_CKPT_PATH", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "ckpt", "=", "'unknown'", "\n", "self", ".", "model", ",", "removed_dict", "=", "load_network", "(", "self", ".", "model", ",", "cfg", ".", "TEST_CKPT_PATH", ",", "self", ".", "gpu", ")", "\n", "if", "len", "(", "removed_dict", ")", ">", "0", ":", "\n", "                ", "self", ".", "print_log", "(", "'Remove {} from pretrained model.'", ".", "format", "(", "removed_dict", ")", ")", "\n", "", "self", ".", "print_log", "(", "'Load checkpoint from {}'", ".", "format", "(", "cfg", ".", "TEST_CKPT_PATH", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.prepare_dataset": [[72, 126], ["eval_manager.Evaluator.print_log", "torchvision.transforms.Compose", "print", "os.path.join", "os.path.join", "eval_manager.Evaluator.print_log", "len", "os.path.join", "dataloaders.datasets.YOUTUBE_VOS_Test", "os.path.exists", "os.makedirs", "dataloaders.MultiRestrictSize", "dataloaders.MultiToTensor", "os.path.join", "dataloaders.datasets.DAVIS_Test", "os.path.join", "dataloaders.datasets.DAVIS_Test", "os.path.join", "dataloaders.datasets.EVAL_TEST", "print", "exit"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log"], ["", "", "def", "prepare_dataset", "(", "self", ")", ":", "\n", "        ", "cfg", "=", "self", ".", "cfg", "\n", "self", ".", "print_log", "(", "'Process dataset...'", ")", "\n", "eval_transforms", "=", "transforms", ".", "Compose", "(", "[", "\n", "tr", ".", "MultiRestrictSize", "(", "cfg", ".", "TEST_MIN_SIZE", ",", "cfg", ".", "TEST_MAX_SIZE", ",", "cfg", ".", "TEST_FLIP", ",", "cfg", ".", "TEST_MULTISCALE", ")", ",", "\n", "tr", ".", "MultiToTensor", "(", ")", "]", ")", "\n", "\n", "eval_name", "=", "'{}_{}_ckpt_{}'", ".", "format", "(", "cfg", ".", "TEST_DATASET", ",", "cfg", ".", "EXP_NAME", ",", "self", ".", "ckpt", ")", "\n", "if", "cfg", ".", "TEST_FLIP", ":", "\n", "            ", "eval_name", "+=", "'_flip'", "\n", "", "if", "len", "(", "cfg", ".", "TEST_MULTISCALE", ")", ">", "1", ":", "\n", "            ", "eval_name", "+=", "'_ms'", "\n", "\n", "", "if", "cfg", ".", "TEST_DATASET", "==", "'youtubevos'", ":", "\n", "            ", "self", ".", "result_root", "=", "os", ".", "path", ".", "join", "(", "cfg", ".", "DIR_EVALUATION", ",", "cfg", ".", "TEST_DATASET", ",", "eval_name", ",", "'Annotations'", ")", "\n", "self", ".", "dataset", "=", "YOUTUBE_VOS_Test", "(", "\n", "root", "=", "cfg", ".", "DIR_YTB_EVAL", ",", "\n", "transform", "=", "eval_transforms", ",", "\n", "result_root", "=", "self", ".", "result_root", ")", "\n", "\n", "", "elif", "cfg", ".", "TEST_DATASET", "==", "'davis2017'", ":", "\n", "            ", "resolution", "=", "'Full-Resolution'", "if", "cfg", ".", "TEST_DATASET_FULL_RESOLUTION", "else", "'480p'", "\n", "self", ".", "result_root", "=", "os", ".", "path", ".", "join", "(", "cfg", ".", "DIR_EVALUATION", ",", "cfg", ".", "TEST_DATASET", ",", "eval_name", ",", "'Annotations'", ",", "resolution", ")", "\n", "self", ".", "dataset", "=", "DAVIS_Test", "(", "\n", "split", "=", "cfg", ".", "TEST_DATASET_SPLIT", ",", "\n", "root", "=", "cfg", ".", "DIR_DAVIS", ",", "\n", "year", "=", "2017", ",", "\n", "transform", "=", "eval_transforms", ",", "\n", "full_resolution", "=", "cfg", ".", "TEST_DATASET_FULL_RESOLUTION", ",", "\n", "result_root", "=", "self", ".", "result_root", ")", "\n", "\n", "", "elif", "cfg", ".", "TEST_DATASET", "==", "'davis2016'", ":", "\n", "            ", "resolution", "=", "'Full-Resolution'", "if", "cfg", ".", "TEST_DATASET_FULL_RESOLUTION", "else", "'480p'", "\n", "self", ".", "result_root", "=", "os", ".", "path", ".", "join", "(", "cfg", ".", "DIR_EVALUATION", ",", "cfg", ".", "TEST_DATASET", ",", "eval_name", ",", "'Annotations'", ",", "resolution", ")", "\n", "self", ".", "dataset", "=", "DAVIS_Test", "(", "\n", "split", "=", "cfg", ".", "TEST_DATASET_SPLIT", ",", "\n", "root", "=", "cfg", ".", "DIR_DAVIS", ",", "\n", "year", "=", "2016", ",", "\n", "transform", "=", "eval_transforms", ",", "\n", "full_resolution", "=", "cfg", ".", "TEST_DATASET_FULL_RESOLUTION", ",", "\n", "result_root", "=", "self", ".", "result_root", ")", "\n", "", "elif", "cfg", ".", "TEST_DATASET", "==", "'test'", ":", "\n", "            ", "self", ".", "result_root", "=", "os", ".", "path", ".", "join", "(", "cfg", ".", "DIR_EVALUATION", ",", "cfg", ".", "TEST_DATASET", ",", "eval_name", ",", "'Annotations'", ")", "\n", "self", ".", "dataset", "=", "EVAL_TEST", "(", "eval_transforms", ",", "self", ".", "result_root", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown dataset!'", ")", "\n", "exit", "(", ")", "\n", "\n", "", "print", "(", "'Eval {} on {}:'", ".", "format", "(", "cfg", ".", "EXP_NAME", ",", "cfg", ".", "TEST_DATASET", ")", ")", "\n", "self", ".", "source_folder", "=", "os", ".", "path", ".", "join", "(", "cfg", ".", "DIR_EVALUATION", ",", "cfg", ".", "TEST_DATASET", ",", "eval_name", ",", "'Annotations'", ")", "\n", "self", ".", "zip_dir", "=", "os", ".", "path", ".", "join", "(", "cfg", ".", "DIR_EVALUATION", ",", "cfg", ".", "TEST_DATASET", ",", "'{}.zip'", ".", "format", "(", "eval_name", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "result_root", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "result_root", ")", "\n", "", "self", ".", "print_log", "(", "'Done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.evaluating": [[127, 256], ["eval_manager.Evaluator.model.eval", "len", "enumerate", "utils.eval.zip_folder", "eval_manager.Evaluator.print_log", "print", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "time.time", "range", "len", "current_img.cuda.cuda.cuda", "obj_num[].item.cuda", "current_img.cuda.cuda.size", "eval_manager.Evaluator.model.forward_for_eval", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax.view", "torch.argmax.view", "torch.argmax.view", "utils.image.flip_tensor", "utils.image.flip_tensor.view", "range", "obj_num[].item", "print", "utils.image.save_mask", "print", "len", "ref_embeddings.append", "ref_masks.append", "prev_embedding.append", "prev_mask.append", "sample.keys", "sample[].cuda", "ref_embeddings[].append", "ref_masks[].append", "torch.mean.append", "torch.mean.append", "torch.mean.append", "join_label.squeeze().squeeze.squeeze().squeeze.squeeze().squeeze", "len", "time.time", "os.path.join", "time.time", "print", "utils.image.flip_tensor", "ref_embeddings[].append", "join_label.squeeze().squeeze.squeeze().squeeze.squeeze", "ref_masks[].append", "ref_masks[].append", "imgname[].split"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.eval.zip_folder", "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log", "home.repos.pwc.inspect_result.z-x-yang_CFBI.cfbi.cfbip.CFBIP.forward_for_eval", "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.image.flip_tensor", "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.image.save_mask", "home.repos.pwc.inspect_result.z-x-yang_CFBI.utils.image.flip_tensor"], ["", "def", "evaluating", "(", "self", ")", ":", "\n", "        ", "cfg", "=", "self", ".", "cfg", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "video_num", "=", "0", "\n", "total_time", "=", "0", "\n", "total_frame", "=", "0", "\n", "total_sfps", "=", "0", "\n", "total_video_num", "=", "len", "(", "self", ".", "dataset", ")", "\n", "for", "seq_idx", ",", "seq_dataset", "in", "enumerate", "(", "self", ".", "dataset", ")", ":", "\n", "            ", "video_num", "+=", "1", "\n", "seq_name", "=", "seq_dataset", ".", "seq_name", "\n", "print", "(", "'Prcessing Seq {} [{}/{}]:'", ".", "format", "(", "seq_name", ",", "video_num", ",", "total_video_num", ")", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "seq_dataloader", "=", "DataLoader", "(", "seq_dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "cfg", ".", "TEST_WORKERS", ",", "pin_memory", "=", "True", ")", "\n", "\n", "seq_total_time", "=", "0", "\n", "seq_total_frame", "=", "0", "\n", "ref_embeddings", "=", "[", "]", "\n", "ref_masks", "=", "[", "]", "\n", "prev_embedding", "=", "[", "]", "\n", "prev_mask", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "frame_idx", ",", "samples", "in", "enumerate", "(", "seq_dataloader", ")", ":", "\n", "                    ", "time_start", "=", "time", ".", "time", "(", ")", "\n", "all_preds", "=", "[", "]", "\n", "join_label", "=", "None", "\n", "for", "aug_idx", "in", "range", "(", "len", "(", "samples", ")", ")", ":", "\n", "                        ", "if", "len", "(", "ref_embeddings", ")", "<=", "aug_idx", ":", "\n", "                            ", "ref_embeddings", ".", "append", "(", "[", "]", ")", "\n", "ref_masks", ".", "append", "(", "[", "]", ")", "\n", "prev_embedding", ".", "append", "(", "None", ")", "\n", "prev_mask", ".", "append", "(", "None", ")", "\n", "\n", "", "sample", "=", "samples", "[", "aug_idx", "]", "\n", "ref_emb", "=", "ref_embeddings", "[", "aug_idx", "]", "\n", "ref_m", "=", "ref_masks", "[", "aug_idx", "]", "\n", "prev_emb", "=", "prev_embedding", "[", "aug_idx", "]", "\n", "prev_m", "=", "prev_mask", "[", "aug_idx", "]", "\n", "\n", "current_img", "=", "sample", "[", "'current_img'", "]", "\n", "if", "'current_label'", "in", "sample", ".", "keys", "(", ")", ":", "\n", "                            ", "current_label", "=", "sample", "[", "'current_label'", "]", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "", "else", ":", "\n", "                            ", "current_label", "=", "None", "\n", "\n", "", "obj_num", "=", "sample", "[", "'meta'", "]", "[", "'obj_num'", "]", "\n", "imgname", "=", "sample", "[", "'meta'", "]", "[", "'current_name'", "]", "\n", "ori_height", "=", "sample", "[", "'meta'", "]", "[", "'height'", "]", "\n", "ori_width", "=", "sample", "[", "'meta'", "]", "[", "'width'", "]", "\n", "current_img", "=", "current_img", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "obj_num", "=", "obj_num", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "bs", ",", "_", ",", "h", ",", "w", "=", "current_img", ".", "size", "(", ")", "\n", "\n", "all_pred", ",", "current_embedding", "=", "self", ".", "model", ".", "forward_for_eval", "(", "ref_emb", ",", "ref_m", ",", "prev_emb", ",", "prev_m", ",", "current_img", ",", "gt_ids", "=", "obj_num", ",", "pred_size", "=", "[", "ori_height", ",", "ori_width", "]", ")", "\n", "\n", "if", "frame_idx", "==", "0", ":", "\n", "                            ", "if", "current_label", "is", "None", ":", "\n", "                                ", "print", "(", "\"No first frame label in Seq {}.\"", ".", "format", "(", "seq_name", ")", ")", "\n", "", "ref_embeddings", "[", "aug_idx", "]", ".", "append", "(", "current_embedding", ")", "\n", "ref_masks", "[", "aug_idx", "]", ".", "append", "(", "current_label", ")", "\n", "\n", "prev_embedding", "[", "aug_idx", "]", "=", "current_embedding", "\n", "prev_mask", "[", "aug_idx", "]", "=", "current_label", "\n", "", "else", ":", "\n", "                            ", "if", "sample", "[", "'meta'", "]", "[", "'flip'", "]", ":", "\n", "                                ", "all_pred", "=", "flip_tensor", "(", "all_pred", ",", "3", ")", "\n", "#  In YouTube-VOS, not all the objects appear in the first frame for the first time. Thus, we", "\n", "#  have to introduce new labels for new objects, if necessary.", "\n", "", "if", "not", "sample", "[", "'meta'", "]", "[", "'flip'", "]", "and", "not", "(", "current_label", "is", "None", ")", "and", "join_label", "is", "None", ":", "\n", "                                ", "join_label", "=", "current_label", "\n", "", "all_preds", ".", "append", "(", "all_pred", ")", "\n", "if", "current_label", "is", "not", "None", ":", "\n", "                                ", "ref_embeddings", "[", "aug_idx", "]", ".", "append", "(", "current_embedding", ")", "\n", "", "prev_embedding", "[", "aug_idx", "]", "=", "current_embedding", "\n", "\n", "", "", "if", "frame_idx", ">", "0", ":", "\n", "                        ", "all_preds", "=", "torch", ".", "cat", "(", "all_preds", ",", "dim", "=", "0", ")", "\n", "all_preds", "=", "torch", ".", "mean", "(", "all_preds", ",", "dim", "=", "0", ")", "\n", "pred_label", "=", "torch", ".", "argmax", "(", "all_preds", ",", "dim", "=", "0", ")", "\n", "if", "join_label", "is", "not", "None", ":", "\n", "                            ", "join_label", "=", "join_label", ".", "squeeze", "(", "0", ")", ".", "squeeze", "(", "0", ")", "\n", "keep", "=", "(", "join_label", "==", "0", ")", ".", "long", "(", ")", "\n", "pred_label", "=", "pred_label", "*", "keep", "+", "join_label", "*", "(", "1", "-", "keep", ")", "\n", "pred_label", "=", "pred_label", "\n", "", "current_label", "=", "pred_label", ".", "view", "(", "1", ",", "1", ",", "ori_height", ",", "ori_width", ")", "\n", "flip_pred_label", "=", "flip_tensor", "(", "pred_label", ",", "1", ")", "\n", "flip_current_label", "=", "flip_pred_label", ".", "view", "(", "1", ",", "1", ",", "ori_height", ",", "ori_width", ")", "\n", "\n", "for", "aug_idx", "in", "range", "(", "len", "(", "samples", ")", ")", ":", "\n", "                            ", "if", "join_label", "is", "not", "None", ":", "\n", "                                ", "if", "samples", "[", "aug_idx", "]", "[", "'meta'", "]", "[", "'flip'", "]", ":", "\n", "                                    ", "ref_masks", "[", "aug_idx", "]", ".", "append", "(", "flip_current_label", ")", "\n", "", "else", ":", "\n", "                                    ", "ref_masks", "[", "aug_idx", "]", ".", "append", "(", "current_label", ")", "\n", "", "", "if", "samples", "[", "aug_idx", "]", "[", "'meta'", "]", "[", "'flip'", "]", ":", "\n", "                                ", "prev_mask", "[", "aug_idx", "]", "=", "flip_current_label", "\n", "", "else", ":", "\n", "                                ", "prev_mask", "[", "aug_idx", "]", "=", "current_label", "\n", "\n", "", "", "one_frametime", "=", "time", ".", "time", "(", ")", "-", "time_start", "\n", "seq_total_time", "+=", "one_frametime", "\n", "seq_total_frame", "+=", "1", "\n", "obj_num", "=", "obj_num", "[", "0", "]", ".", "item", "(", ")", "\n", "print", "(", "'Frame: {}, Obj Num: {}, Time: {}'", ".", "format", "(", "imgname", "[", "0", "]", ",", "obj_num", ",", "one_frametime", ")", ")", "\n", "# Save result", "\n", "save_mask", "(", "pred_label", ",", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ",", "imgname", "[", "0", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "'.png'", ")", ")", "\n", "", "else", ":", "\n", "                        ", "one_frametime", "=", "time", ".", "time", "(", ")", "-", "time_start", "\n", "seq_total_time", "+=", "one_frametime", "\n", "print", "(", "'Ref Frame: {}, Time: {}'", ".", "format", "(", "imgname", "[", "0", "]", ",", "one_frametime", ")", ")", "\n", "\n", "", "", "del", "(", "ref_embeddings", ")", "\n", "del", "(", "ref_masks", ")", "\n", "del", "(", "prev_embedding", ")", "\n", "del", "(", "prev_mask", ")", "\n", "del", "(", "seq_dataset", ")", "\n", "del", "(", "seq_dataloader", ")", "\n", "\n", "", "seq_avg_time_per_frame", "=", "seq_total_time", "/", "seq_total_frame", "\n", "total_time", "+=", "seq_total_time", "\n", "total_frame", "+=", "seq_total_frame", "\n", "total_avg_time_per_frame", "=", "total_time", "/", "total_frame", "\n", "total_sfps", "+=", "seq_avg_time_per_frame", "\n", "avg_sfps", "=", "total_sfps", "/", "(", "seq_idx", "+", "1", ")", "\n", "print", "(", "\"Seq {} FPS: {}, Total FPS: {}, FPS per Seq: {}\"", ".", "format", "(", "seq_name", ",", "1.", "/", "seq_avg_time_per_frame", ",", "1.", "/", "total_avg_time_per_frame", ",", "1.", "/", "avg_sfps", ")", ")", "\n", "\n", "", "zip_folder", "(", "self", ".", "source_folder", ",", "self", ".", "zip_dir", ")", "\n", "self", ".", "print_log", "(", "'Save result to {}.'", ".", "format", "(", "self", ".", "zip_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.engine.eval_manager.Evaluator.print_log": [[258, 260], ["print"], "methods", ["None"], ["", "def", "print_log", "(", "self", ",", "string", ")", ":", "\n", "        ", "print", "(", "string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.custom_transforms.MultiRestrictSize.__init__": [[10, 16], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "min_size", "=", "None", ",", "max_size", "=", "800", ",", "flip", "=", "False", ",", "multi_scale", "=", "[", "1.3", "]", ")", ":", "\n", "        ", "self", ".", "min_size", "=", "min_size", "\n", "self", ".", "max_size", "=", "max_size", "\n", "self", ".", "multi_scale", "=", "multi_scale", "\n", "self", ".", "flip", "=", "flip", "\n", "assert", "(", "(", "min_size", "is", "None", ")", ")", "or", "(", "(", "max_size", "is", "None", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.custom_transforms.MultiRestrictSize.__call__": [[17, 86], ["int", "int", "int", "int", "samples.append", "sample.keys", "samples.append", "now_sample.keys", "samples.append", "tmp[].copy", "float", "float", "cv2.resize", "now_sample[].copy", "numpy.around", "numpy.around"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "samples", "=", "[", "]", "\n", "image", "=", "sample", "[", "'current_img'", "]", "\n", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "for", "scale", "in", "self", ".", "multi_scale", ":", "\n", "# Fixed range of scales", "\n", "            ", "sc", "=", "None", "\n", "# Align short edge", "\n", "if", "not", "(", "self", ".", "min_size", "is", "None", ")", ":", "\n", "                ", "if", "h", ">", "w", ":", "\n", "                    ", "short_edge", "=", "w", "\n", "", "else", ":", "\n", "                    ", "short_edge", "=", "h", "\n", "", "if", "short_edge", ">", "self", ".", "min_size", ":", "\n", "                    ", "sc", "=", "float", "(", "self", ".", "min_size", ")", "/", "short_edge", "\n", "", "", "else", ":", "\n", "                ", "if", "h", ">", "w", ":", "\n", "                    ", "long_edge", "=", "h", "\n", "", "else", ":", "\n", "                    ", "long_edge", "=", "w", "\n", "", "if", "long_edge", ">", "self", ".", "max_size", ":", "\n", "                    ", "sc", "=", "float", "(", "self", ".", "max_size", ")", "/", "long_edge", "\n", "\n", "", "", "if", "sc", "is", "None", ":", "\n", "                ", "new_h", "=", "h", "\n", "new_w", "=", "w", "\n", "", "else", ":", "\n", "                ", "new_h", "=", "sc", "*", "h", "\n", "new_w", "=", "sc", "*", "w", "\n", "", "new_h", "=", "int", "(", "new_h", "*", "scale", ")", "\n", "new_w", "=", "int", "(", "new_w", "*", "scale", ")", "\n", "\n", "if", "(", "new_h", "-", "1", ")", "%", "16", "!=", "0", ":", "\n", "                ", "new_h", "=", "int", "(", "np", ".", "around", "(", "(", "new_h", "-", "1", ")", "/", "16.", ")", "*", "16", "+", "1", ")", "\n", "", "if", "(", "new_w", "-", "1", ")", "%", "16", "!=", "0", ":", "\n", "                ", "new_w", "=", "int", "(", "np", ".", "around", "(", "(", "new_w", "-", "1", ")", "/", "16.", ")", "*", "16", "+", "1", ")", "\n", "\n", "", "if", "new_h", "==", "h", "and", "new_w", "==", "w", ":", "\n", "                ", "samples", ".", "append", "(", "sample", ")", "\n", "", "else", ":", "\n", "                ", "new_sample", "=", "{", "}", "\n", "for", "elem", "in", "sample", ".", "keys", "(", ")", ":", "\n", "                    ", "if", "'meta'", "in", "elem", ":", "\n", "                        ", "new_sample", "[", "elem", "]", "=", "sample", "[", "elem", "]", "\n", "continue", "\n", "", "tmp", "=", "sample", "[", "elem", "]", "\n", "if", "'label'", "in", "elem", ":", "\n", "                        ", "new_sample", "[", "elem", "]", "=", "sample", "[", "elem", "]", "\n", "continue", "\n", "", "else", ":", "\n", "                        ", "flagval", "=", "cv2", ".", "INTER_CUBIC", "\n", "tmp", "=", "cv2", ".", "resize", "(", "tmp", ",", "dsize", "=", "(", "new_w", ",", "new_h", ")", ",", "interpolation", "=", "flagval", ")", "\n", "new_sample", "[", "elem", "]", "=", "tmp", "\n", "", "", "samples", ".", "append", "(", "new_sample", ")", "\n", "\n", "", "if", "self", ".", "flip", ":", "\n", "                ", "now_sample", "=", "samples", "[", "-", "1", "]", "\n", "new_sample", "=", "{", "}", "\n", "for", "elem", "in", "now_sample", ".", "keys", "(", ")", ":", "\n", "                    ", "if", "'meta'", "in", "elem", ":", "\n", "                        ", "new_sample", "[", "elem", "]", "=", "now_sample", "[", "elem", "]", ".", "copy", "(", ")", "\n", "new_sample", "[", "elem", "]", "[", "'flip'", "]", "=", "True", "\n", "continue", "\n", "", "tmp", "=", "now_sample", "[", "elem", "]", "\n", "tmp", "=", "tmp", "[", ":", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", "\n", "new_sample", "[", "elem", "]", "=", "tmp", "\n", "", "samples", ".", "append", "(", "new_sample", ")", "\n", "\n", "", "", "return", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.custom_transforms.MultiToTensor.__call__": [[88, 109], ["range", "len", "sample.keys", "tmp.transpose.transpose.transpose", "torch.from_numpy"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "samples", ")", ":", "\n", "        ", "for", "idx", "in", "range", "(", "len", "(", "samples", ")", ")", ":", "\n", "            ", "sample", "=", "samples", "[", "idx", "]", "\n", "for", "elem", "in", "sample", ".", "keys", "(", ")", ":", "\n", "                ", "if", "'meta'", "in", "elem", ":", "\n", "                    ", "continue", "\n", "", "tmp", "=", "sample", "[", "elem", "]", "\n", "if", "tmp", "is", "None", ":", "\n", "                    ", "continue", "\n", "\n", "", "if", "tmp", ".", "ndim", "==", "2", ":", "\n", "                    ", "tmp", "=", "tmp", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "", "else", ":", "\n", "                    ", "tmp", "=", "tmp", "/", "255.", "\n", "tmp", "-=", "(", "0.485", ",", "0.456", ",", "0.406", ")", "\n", "tmp", "/=", "(", "0.229", ",", "0.224", ",", "0.225", ")", "\n", "\n", "", "tmp", "=", "tmp", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "samples", "[", "idx", "]", "[", "elem", "]", "=", "torch", ".", "from_numpy", "(", "tmp", ")", "\n", "\n", "", "", "return", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets._EVAL_TEST.__init__": [[15, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "transform", ",", "seq_name", ")", ":", "\n", "        ", "self", ".", "seq_name", "=", "seq_name", "\n", "self", ".", "num_frame", "=", "10", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets._EVAL_TEST.__len__": [[20, 22], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_frame", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets._EVAL_TEST.__getitem__": [[23, 41], ["numpy.zeros().astype", "datasets._EVAL_TEST.transform", "numpy.zeros", "numpy.ones"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "current_frame_obj_num", "=", "2", "\n", "height", "=", "400", "\n", "width", "=", "400", "\n", "img_name", "=", "'test{}.jpg'", ".", "format", "(", "idx", ")", "\n", "current_img", "=", "np", ".", "zeros", "(", "(", "height", ",", "width", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "if", "idx", "==", "0", ":", "\n", "            ", "current_label", "=", "(", "current_frame_obj_num", "*", "np", ".", "ones", "(", "(", "height", ",", "width", ")", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "sample", "=", "{", "'current_img'", ":", "current_img", ",", "'current_label'", ":", "current_label", "}", "\n", "", "else", ":", "\n", "            ", "sample", "=", "{", "'current_img'", ":", "current_img", "}", "\n", "\n", "", "sample", "[", "'meta'", "]", "=", "{", "'seq_name'", ":", "self", ".", "seq_name", ",", "'frame_num'", ":", "self", ".", "num_frame", ",", "'obj_num'", ":", "current_frame_obj_num", ",", "\n", "'current_name'", ":", "img_name", ",", "'height'", ":", "height", ",", "'width'", ":", "width", ",", "'flip'", ":", "False", "}", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.EVAL_TEST.__init__": [[43, 48], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "transform", "=", "None", ",", "result_root", "=", "None", ")", ":", "\n", "        ", "self", ".", "transform", "=", "transform", "\n", "self", ".", "result_root", "=", "result_root", "\n", "\n", "self", ".", "seqs", "=", "[", "'test1'", ",", "'test2'", ",", "'test3'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.EVAL_TEST.__len__": [[49, 51], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "seqs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.EVAL_TEST.__getitem__": [[52, 60], ["datasets._EVAL_TEST", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "seq_name", "=", "self", ".", "seqs", "[", "idx", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ")", ")", "\n", "\n", "", "seq_dataset", "=", "_EVAL_TEST", "(", "self", ".", "transform", ",", "seq_name", ")", "\n", "return", "seq_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.VOS_Test.__init__": [[62, 83], ["len", "datasets.VOS_Test.obj_nums.append", "datasets.VOS_Test.read_label", "img_name.split", "numpy.unique", "numpy.unique"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.VOS_Test.read_label"], ["    ", "def", "__init__", "(", "self", ",", "image_root", ",", "label_root", ",", "seq_name", ",", "images", ",", "labels", ",", "rgb", "=", "False", ",", "transform", "=", "None", ",", "single_obj", "=", "False", ")", ":", "\n", "        ", "self", ".", "image_root", "=", "image_root", "\n", "self", ".", "label_root", "=", "label_root", "\n", "self", ".", "seq_name", "=", "seq_name", "\n", "self", ".", "images", "=", "images", "\n", "self", ".", "labels", "=", "labels", "\n", "self", ".", "obj_num", "=", "1", "\n", "self", ".", "num_frame", "=", "len", "(", "self", ".", "images", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "rgb", "=", "rgb", "\n", "self", ".", "single_obj", "=", "single_obj", "\n", "\n", "self", ".", "obj_nums", "=", "[", "]", "\n", "temp_obj_num", "=", "0", "\n", "for", "img_name", "in", "self", ".", "images", ":", "\n", "            ", "self", ".", "obj_nums", ".", "append", "(", "temp_obj_num", ")", "\n", "current_label_name", "=", "img_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "'.png'", "\n", "if", "current_label_name", "in", "self", ".", "labels", ":", "\n", "                ", "current_label", "=", "self", ".", "read_label", "(", "current_label_name", ")", "\n", "if", "temp_obj_num", "<", "np", ".", "unique", "(", "current_label", ")", "[", "-", "1", "]", ":", "\n", "                    ", "temp_obj_num", "=", "np", ".", "unique", "(", "current_label", ")", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.VOS_Test.__len__": [[84, 86], ["len"], "methods", ["None"], ["", "", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.VOS_Test.read_image": [[87, 95], ["os.path.join", "cv2.imread", "numpy.array"], "methods", ["None"], ["", "def", "read_image", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img_name", "=", "self", ".", "images", "[", "idx", "]", "\n", "img_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_root", ",", "self", ".", "seq_name", ",", "img_name", ")", "\n", "img", "=", "cv2", ".", "imread", "(", "img_path", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "if", "self", ".", "rgb", ":", "\n", "            ", "img", "=", "img", "[", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.VOS_Test.read_label": [[96, 103], ["os.path.join", "PIL.Image.open", "numpy.array"], "methods", ["None"], ["", "def", "read_label", "(", "self", ",", "label_name", ")", ":", "\n", "        ", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_root", ",", "self", ".", "seq_name", ",", "label_name", ")", "\n", "label", "=", "Image", ".", "open", "(", "label_path", ")", "\n", "label", "=", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "if", "self", ".", "single_obj", ":", "\n", "            ", "label", "=", "(", "label", ">", "0", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.VOS_Test.__getitem__": [[104, 123], ["datasets.VOS_Test.read_image", "datasets.VOS_Test.read_label", "datasets.VOS_Test.transform", "img_name.split"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.VOS_Test.read_image", "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.VOS_Test.read_label"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img_name", "=", "self", ".", "images", "[", "idx", "]", "\n", "current_img", "=", "self", ".", "read_image", "(", "idx", ")", "\n", "height", ",", "width", ",", "channels", "=", "current_img", ".", "shape", "\n", "current_label_name", "=", "img_name", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "'.png'", "\n", "obj_num", "=", "self", ".", "obj_nums", "[", "idx", "]", "\n", "\n", "if", "current_label_name", "in", "self", ".", "labels", ":", "\n", "            ", "current_label", "=", "self", ".", "read_label", "(", "current_label_name", ")", "\n", "sample", "=", "{", "'current_img'", ":", "current_img", ",", "'current_label'", ":", "current_label", "}", "\n", "", "else", ":", "\n", "            ", "sample", "=", "{", "'current_img'", ":", "current_img", "}", "\n", "\n", "", "sample", "[", "'meta'", "]", "=", "{", "'seq_name'", ":", "self", ".", "seq_name", ",", "'frame_num'", ":", "self", ".", "num_frame", ",", "'obj_num'", ":", "obj_num", ",", "\n", "'current_name'", ":", "img_name", ",", "'height'", ":", "height", ",", "'width'", ":", "width", ",", "'flip'", ":", "False", "}", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.YOUTUBE_VOS_Test.__init__": [[127, 138], ["os.path.join", "datasets.YOUTUBE_VOS_Test._check_preprocess", "list", "os.path.join", "os.path.join", "datasets.YOUTUBE_VOS_Test.ann_f.keys"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.YOUTUBE_VOS_Test._check_preprocess"], ["    ", "def", "__init__", "(", "self", ",", "root", "=", "'./valid'", ",", "transform", "=", "None", ",", "rgb", "=", "False", ",", "result_root", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "db_root_dir", "=", "root", "\n", "self", ".", "result_root", "=", "result_root", "\n", "self", ".", "rgb", "=", "rgb", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "seq_list_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "db_root_dir", ",", "'meta.json'", ")", "\n", "self", ".", "_check_preprocess", "(", ")", "\n", "self", ".", "seqs", "=", "list", "(", "self", ".", "ann_f", ".", "keys", "(", ")", ")", "\n", "self", ".", "image_root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'JPEGImages'", ")", "\n", "self", ".", "label_root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'Annotations'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.YOUTUBE_VOS_Test.__len__": [[139, 141], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "seqs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.YOUTUBE_VOS_Test.__getitem__": [[142, 161], ["list", "numpy.sort", "numpy.sort", "datasets.VOS_Test", "data.keys", "map", "numpy.sort.append", "numpy.unique", "numpy.unique", "os.path.isfile", "shutil.copy", "list", "os.path.join", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "seq_name", "=", "self", ".", "seqs", "[", "idx", "]", "\n", "data", "=", "self", ".", "ann_f", "[", "seq_name", "]", "[", "'objects'", "]", "\n", "obj_names", "=", "list", "(", "data", ".", "keys", "(", ")", ")", "\n", "images", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "for", "obj_n", "in", "obj_names", ":", "\n", "            ", "images", "+=", "map", "(", "lambda", "x", ":", "x", "+", "'.jpg'", ",", "list", "(", "data", "[", "obj_n", "]", "[", "\"frames\"", "]", ")", ")", "\n", "labels", ".", "append", "(", "data", "[", "obj_n", "]", "[", "\"frames\"", "]", "[", "0", "]", "+", "'.png'", ")", "\n", "", "images", "=", "np", ".", "sort", "(", "np", ".", "unique", "(", "images", ")", ")", "\n", "labels", "=", "np", ".", "sort", "(", "np", ".", "unique", "(", "labels", ")", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ",", "labels", "[", "0", "]", ")", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ")", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ")", ")", "\n", "", "shutil", ".", "copy", "(", "os", ".", "path", ".", "join", "(", "self", ".", "label_root", ",", "seq_name", ",", "labels", "[", "0", "]", ")", ",", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ",", "labels", "[", "0", "]", ")", ")", "\n", "\n", "", "seq_dataset", "=", "VOS_Test", "(", "self", ".", "image_root", ",", "self", ".", "label_root", ",", "seq_name", ",", "images", ",", "labels", ",", "transform", "=", "self", ".", "transform", ",", "rgb", "=", "self", ".", "rgb", ")", "\n", "return", "seq_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.YOUTUBE_VOS_Test._check_preprocess": [[162, 170], ["os.path.isfile", "print", "json.load", "json.load", "json.load", "json.load", "open"], "methods", ["None"], ["", "def", "_check_preprocess", "(", "self", ")", ":", "\n", "        ", "_seq_list_file", "=", "self", ".", "seq_list_file", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "_seq_list_file", ")", ":", "\n", "            ", "print", "(", "_seq_list_file", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "            ", "self", ".", "ann_f", "=", "json", ".", "load", "(", "open", "(", "self", ".", "seq_list_file", ",", "'r'", ")", ")", "[", "'videos'", "]", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.DAVIS_Test.__init__": [[173, 194], ["os.path.join", "os.path.join", "list", "list", "seq_names.extend", "numpy.unique", "open", "f.readlines", "map", "os.path.join", "str", "elem.strip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "split", "=", "[", "'val'", "]", ",", "root", "=", "'./DAVIS'", ",", "year", "=", "2017", ",", "transform", "=", "None", ",", "rgb", "=", "False", ",", "full_resolution", "=", "False", ",", "result_root", "=", "None", ")", ":", "\n", "        ", "self", ".", "transform", "=", "transform", "\n", "self", ".", "rgb", "=", "rgb", "\n", "self", ".", "result_root", "=", "result_root", "\n", "if", "year", "==", "2016", ":", "\n", "            ", "self", ".", "single_obj", "=", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "single_obj", "=", "False", "\n", "", "if", "full_resolution", ":", "\n", "            ", "resolution", "=", "'Full-Resolution'", "\n", "", "else", ":", "\n", "            ", "resolution", "=", "'480p'", "\n", "", "self", ".", "image_root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'JPEGImages'", ",", "resolution", ")", "\n", "self", ".", "label_root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'Annotations'", ",", "resolution", ")", "\n", "seq_names", "=", "[", "]", "\n", "for", "spt", "in", "split", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'ImageSets'", ",", "str", "(", "year", ")", ",", "spt", "+", "'.txt'", ")", ")", "as", "f", ":", "\n", "                ", "seqs_tmp", "=", "f", ".", "readlines", "(", ")", "\n", "", "seqs_tmp", "=", "list", "(", "map", "(", "lambda", "elem", ":", "elem", ".", "strip", "(", ")", ",", "seqs_tmp", ")", ")", "\n", "seq_names", ".", "extend", "(", "seqs_tmp", ")", "\n", "", "self", ".", "seqs", "=", "list", "(", "np", ".", "unique", "(", "seq_names", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.DAVIS_Test.__len__": [[195, 197], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "seqs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.dataloaders.datasets.DAVIS_Test.__getitem__": [[198, 222], ["list", "datasets.VOS_Test", "numpy.sort", "images[].replace", "os.path.isfile", "os.path.join", "os.path.join", "os.listdir", "os.path.join", "os.path.exists", "os.makedirs", "PIL.Image.open", "numpy.array", "PIL.Image.fromarray().convert", "PIL.Image.fromarray().convert.putpalette", "PIL.Image.fromarray().convert.save", "shutil.copy", "os.path.join", "os.path.join", "os.path.join", "PIL.Image.fromarray"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "seq_name", "=", "self", ".", "seqs", "[", "idx", "]", "\n", "images", "=", "list", "(", "np", ".", "sort", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "image_root", ",", "seq_name", ")", ")", ")", ")", "\n", "labels", "=", "[", "images", "[", "0", "]", ".", "replace", "(", "'jpg'", ",", "'png'", ")", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ",", "labels", "[", "0", "]", ")", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ")", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ")", ")", "\n", "", "source_label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_root", ",", "seq_name", ",", "labels", "[", "0", "]", ")", "\n", "result_label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_root", ",", "seq_name", ",", "labels", "[", "0", "]", ")", "\n", "if", "self", ".", "single_obj", ":", "\n", "                ", "label", "=", "Image", ".", "open", "(", "source_label_path", ")", "\n", "label", "=", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "label", "=", "(", "label", ">", "0", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "label", "=", "Image", ".", "fromarray", "(", "label", ")", ".", "convert", "(", "'P'", ")", "\n", "label", ".", "putpalette", "(", "_palette", ")", "\n", "label", ".", "save", "(", "result_label_path", ")", "\n", "", "else", ":", "\n", "                ", "shutil", ".", "copy", "(", "source_label_path", ",", "result_label_path", ")", "\n", "\n", "\n", "", "", "seq_dataset", "=", "VOS_Test", "(", "self", ".", "image_root", ",", "self", ".", "label_root", ",", "seq_name", ",", "images", ",", "labels", ",", "\n", "transform", "=", "self", ".", "transform", ",", "rgb", "=", "self", ".", "rgb", ",", "single_obj", "=", "self", ".", "single_obj", ")", "\n", "return", "seq_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.resnet101_cfbip.Configuration.__init__": [[10, 125], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "resnet101_cfbip.Configuration.__check"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__check"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "EXP_NAME", "=", "'resnet101_cfbip'", "\n", "\n", "self", ".", "DIR_ROOT", "=", "'./'", "\n", "self", ".", "DIR_DATA", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_ROOT", ",", "'datasets'", ")", "\n", "self", ".", "DIR_DAVIS", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_DATA", ",", "'DAVIS'", ")", "\n", "self", ".", "DIR_YTB", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_DATA", ",", "'YTB/train'", ")", "\n", "self", ".", "DIR_YTB_EVAL", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_DATA", ",", "'YTB/valid'", ")", "\n", "self", ".", "DIR_RESULT", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_ROOT", ",", "'result'", ",", "self", ".", "EXP_NAME", ")", "\n", "self", ".", "DIR_CKPT", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'ckpt'", ")", "\n", "self", ".", "DIR_LOG", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'log'", ")", "\n", "self", ".", "DIR_IMG_LOG", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'log'", ",", "'img'", ")", "\n", "self", ".", "DIR_TB_LOG", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'log'", ",", "'tensorboard'", ")", "\n", "self", ".", "DIR_EVALUATION", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'eval'", ")", "\n", "\n", "self", ".", "DATASETS", "=", "[", "'youtubevos'", "]", "\n", "self", ".", "DATA_WORKERS", "=", "4", "\n", "self", ".", "DATA_RANDOMCROP", "=", "(", "465", ",", "465", ")", "\n", "self", ".", "DATA_RANDOMFLIP", "=", "0.5", "\n", "self", ".", "DATA_MAX_CROP_STEPS", "=", "5", "\n", "self", ".", "DATA_MIN_SCALE_FACTOR", "=", "1.", "\n", "self", ".", "DATA_MAX_SCALE_FACTOR", "=", "1.3", "\n", "self", ".", "DATA_SHORT_EDGE_LEN", "=", "480", "\n", "self", ".", "DATA_RANDOM_REVERSE_SEQ", "=", "True", "\n", "self", ".", "DATA_DAVIS_REPEAT", "=", "30", "\n", "self", ".", "DATA_CURR_SEQ_LEN", "=", "3", "\n", "self", ".", "DATA_RANDOM_GAP_DAVIS", "=", "3", "\n", "self", ".", "DATA_RANDOM_GAP_YTB", "=", "3", "\n", "\n", "\n", "self", ".", "PRETRAIN", "=", "True", "\n", "self", ".", "PRETRAIN_FULL", "=", "False", "\n", "self", ".", "PRETRAIN_MODEL", "=", "'./pretrain_models/resnet101-deeplabv3p.pth.tar'", "\n", "\n", "self", ".", "MODEL_BACKBONE", "=", "'resnet'", "\n", "self", ".", "MODEL_MODULE", "=", "'networks.cfbi.cfbip'", "\n", "self", ".", "MODEL_OUTPUT_STRIDE", "=", "16", "\n", "self", ".", "MODEL_ASPP_OUTDIM", "=", "256", "\n", "self", ".", "MODEL_SHORTCUT_DIM", "=", "48", "\n", "self", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", "=", "256", "\n", "self", ".", "MODEL_SEMANTIC_MATCHING_DIM", "=", "[", "32", ",", "64", ",", "128", "]", "\n", "self", ".", "MODEL_HEAD_EMBEDDING_DIM", "=", "256", "\n", "self", ".", "MODEL_PRE_HEAD_EMBEDDING_DIM", "=", "64", "\n", "self", ".", "MODEL_GN_GROUPS", "=", "32", "\n", "self", ".", "MODEL_GN_EMB_GROUPS", "=", "25", "\n", "self", ".", "MODEL_MULTI_LOCAL_DISTANCE", "=", "[", "[", "4", ",", "8", ",", "12", ",", "16", ",", "20", ",", "24", "]", ",", "\n", "[", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", "]", ",", "\n", "[", "2", ",", "4", ",", "6", ",", "8", ",", "10", "]", "]", "\n", "self", ".", "MODEL_LOCAL_DOWNSAMPLE", "=", "False", "\n", "self", ".", "MODEL_REFINE_CHANNELS", "=", "64", "# n * 32", "\n", "self", ".", "MODEL_LOW_LEVEL_INPLANES", "=", "256", "if", "self", ".", "MODEL_BACKBONE", "==", "'resnet'", "else", "24", "\n", "self", ".", "MODEL_RELATED_CHANNELS", "=", "64", "\n", "self", ".", "MODEL_EPSILON", "=", "1e-5", "\n", "self", ".", "MODEL_MATCHING_BACKGROUND", "=", "True", "\n", "self", ".", "MODEL_GCT_BETA_WD", "=", "True", "\n", "self", ".", "MODEL_FLOAT16_MATCHING", "=", "False", "\n", "self", ".", "MODEL_FREEZE_BN", "=", "True", "\n", "self", ".", "MODEL_FREEZE_BACKBONE", "=", "False", "\n", "\n", "self", ".", "TRAIN_TOTAL_STEPS", "=", "100000", "\n", "self", ".", "TRAIN_START_STEP", "=", "0", "\n", "self", ".", "TRAIN_LR", "=", "0.01", "\n", "self", ".", "TRAIN_OPT", "=", "'sgd'", "\n", "self", ".", "TRAIN_MOMENTUM", "=", "0.9", "\n", "self", ".", "TRAIN_COSINE_DECAY", "=", "False", "\n", "self", ".", "TRAIN_WARM_UP_STEPS", "=", "1000", "\n", "self", ".", "TRAIN_WEIGHT_DECAY", "=", "15e-5", "\n", "self", ".", "TRAIN_POWER", "=", "0.9", "\n", "self", ".", "TRAIN_GPUS", "=", "4", "\n", "self", ".", "TRAIN_BATCH_SIZE", "=", "8", "\n", "self", ".", "TRAIN_START_SEQ_TRAINING_STEPS", "=", "self", ".", "TRAIN_TOTAL_STEPS", "/", "2", "\n", "self", ".", "TRAIN_TBLOG", "=", "False", "\n", "self", ".", "TRAIN_TBLOG_STEP", "=", "60", "\n", "self", ".", "TRAIN_LOG_STEP", "=", "20", "\n", "self", ".", "TRAIN_IMG_LOG", "=", "True", "\n", "self", ".", "TRAIN_TOP_K_PERCENT_PIXELS", "=", "0.15", "\n", "self", ".", "TRAIN_HARD_MINING_STEP", "=", "self", ".", "TRAIN_TOTAL_STEPS", "/", "2", "\n", "self", ".", "TRAIN_CLIP_GRAD_NORM", "=", "5.", "\n", "self", ".", "TRAIN_SAVE_STEP", "=", "1000", "\n", "self", ".", "TRAIN_MAX_KEEP_CKPT", "=", "4", "\n", "self", ".", "TRAIN_RESUME", "=", "False", "\n", "self", ".", "TRAIN_RESUME_CKPT", "=", "None", "\n", "self", ".", "TRAIN_RESUME_STEP", "=", "0", "\n", "self", ".", "TRAIN_AUTO_RESUME", "=", "True", "\n", "self", ".", "TRAIN_LOCAL_PARALLEL", "=", "True", "\n", "self", ".", "TRAIN_GLOBAL_ATROUS_RATE", "=", "[", "2", ",", "1", ",", "1", "]", "\n", "self", ".", "TRAIN_LOCAL_ATROUS_RATE", "=", "[", "2", ",", "1", ",", "1", "]", "\n", "self", ".", "TRAIN_GLOBAL_MATCHING_CHUNK", "=", "[", "20", ",", "10", ",", "5", "]", "\n", "self", ".", "TRAIN_DATASET_FULL_RESOLUTION", "=", "True", "\n", "\n", "\n", "self", ".", "TEST_GPU_ID", "=", "0", "\n", "self", ".", "TEST_DATASET", "=", "'youtubevos'", "\n", "self", ".", "TEST_DATASET_FULL_RESOLUTION", "=", "False", "\n", "self", ".", "TEST_DATASET_SPLIT", "=", "[", "'val'", "]", "\n", "self", ".", "TEST_CKPT_PATH", "=", "None", "\n", "self", ".", "TEST_CKPT_STEP", "=", "None", "# if \"None\", evaluate the latest checkpoint.", "\n", "self", ".", "TEST_FLIP", "=", "False", "\n", "self", ".", "TEST_MULTISCALE", "=", "[", "1", "]", "\n", "self", ".", "TEST_MIN_SIZE", "=", "None", "\n", "self", ".", "TEST_MAX_SIZE", "=", "800", "*", "1.3", "if", "self", ".", "TEST_MULTISCALE", "==", "[", "1.", "]", "else", "800", "\n", "self", ".", "TEST_WORKERS", "=", "4", "\n", "self", ".", "TEST_GLOBAL_MATCHING_CHUNK", "=", "[", "4", ",", "1", ",", "1", "]", "\n", "self", ".", "TEST_GLOBAL_ATROUS_RATE", "=", "[", "2", ",", "1", ",", "1", "]", "\n", "self", ".", "TEST_LOCAL_ATROUS_RATE", "=", "[", "2", ",", "1", ",", "1", "]", "\n", "self", ".", "TEST_GLOBAL_MATCHING_MIN_PIXEL", "=", "0", "\n", "self", ".", "TEST_LOCAL_PARALLEL", "=", "True", "\n", "\n", "# dist", "\n", "self", ".", "DIST_ENABLE", "=", "True", "\n", "self", ".", "DIST_BACKEND", "=", "\"gloo\"", "\n", "self", ".", "DIST_URL", "=", "\"file://./sharefile\"", "\n", "self", ".", "DIST_START_GPU", "=", "0", "\n", "\n", "self", ".", "__check", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.resnet101_cfbip.Configuration.__check": [[126, 134], ["torch.cuda.is_available", "ValueError", "ValueError", "os.path.isdir", "os.makedirs"], "methods", ["None"], ["", "def", "__check", "(", "self", ")", ":", "\n", "        ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                ", "raise", "ValueError", "(", "'config.py: cuda is not avalable'", ")", "\n", "", "if", "self", ".", "TRAIN_GPUS", "==", "0", ":", "\n", "                ", "raise", "ValueError", "(", "'config.py: the number of GPU is 0'", ")", "\n", "", "for", "path", "in", "[", "self", ".", "DIR_RESULT", ",", "self", ".", "DIR_CKPT", ",", "self", ".", "DIR_LOG", ",", "self", ".", "DIR_EVALUATION", ",", "self", ".", "DIR_IMG_LOG", ",", "self", ".", "DIR_TB_LOG", "]", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.resnet101_cfbi.Configuration.__init__": [[10, 122], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "resnet101_cfbi.Configuration.__check"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__check"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "EXP_NAME", "=", "'resnet101_cfbi'", "\n", "\n", "\n", "self", ".", "DIR_ROOT", "=", "'./'", "\n", "self", ".", "DIR_DATA", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_ROOT", ",", "'datasets'", ")", "\n", "self", ".", "DIR_DAVIS", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_DATA", ",", "'DAVIS'", ")", "\n", "self", ".", "DIR_YTB", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_DATA", ",", "'YTB/train'", ")", "\n", "self", ".", "DIR_YTB_EVAL", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_DATA", ",", "'YTB/valid'", ")", "\n", "self", ".", "DIR_RESULT", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_ROOT", ",", "'result'", ",", "self", ".", "EXP_NAME", ")", "\n", "self", ".", "DIR_CKPT", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'ckpt'", ")", "\n", "self", ".", "DIR_LOG", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'log'", ")", "\n", "self", ".", "DIR_IMG_LOG", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'log'", ",", "'img'", ")", "\n", "self", ".", "DIR_TB_LOG", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'log'", ",", "'tensorboard'", ")", "\n", "self", ".", "DIR_EVALUATION", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'eval'", ")", "\n", "\n", "\n", "self", ".", "DATASETS", "=", "[", "'youtubevos'", "]", "\n", "self", ".", "DATA_WORKERS", "=", "4", "\n", "self", ".", "DATA_RANDOMCROP", "=", "(", "465", ",", "465", ")", "\n", "self", ".", "DATA_RANDOMFLIP", "=", "0.5", "\n", "self", ".", "DATA_MAX_CROP_STEPS", "=", "5", "\n", "self", ".", "DATA_MIN_SCALE_FACTOR", "=", "1.", "\n", "self", ".", "DATA_MAX_SCALE_FACTOR", "=", "1.3", "\n", "self", ".", "DATA_SHORT_EDGE_LEN", "=", "480", "\n", "self", ".", "DATA_RANDOM_REVERSE_SEQ", "=", "True", "\n", "self", ".", "DATA_DAVIS_REPEAT", "=", "30", "\n", "self", ".", "DATA_CURR_SEQ_LEN", "=", "3", "\n", "self", ".", "DATA_RANDOM_GAP_DAVIS", "=", "3", "\n", "self", ".", "DATA_RANDOM_GAP_YTB", "=", "3", "\n", "\n", "\n", "self", ".", "PRETRAIN", "=", "True", "\n", "self", ".", "PRETRAIN_FULL", "=", "False", "\n", "self", ".", "PRETRAIN_MODEL", "=", "'./pretrain_models/resnet101-deeplabv3p.pth.tar'", "\n", "\n", "self", ".", "MODEL_BACKBONE", "=", "'resnet'", "\n", "self", ".", "MODEL_MODULE", "=", "'networks.cfbi.cfbi'", "\n", "self", ".", "MODEL_OUTPUT_STRIDE", "=", "16", "\n", "self", ".", "MODEL_ASPP_OUTDIM", "=", "256", "\n", "self", ".", "MODEL_SHORTCUT_DIM", "=", "48", "\n", "self", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", "=", "100", "\n", "self", ".", "MODEL_HEAD_EMBEDDING_DIM", "=", "256", "\n", "self", ".", "MODEL_PRE_HEAD_EMBEDDING_DIM", "=", "64", "\n", "self", ".", "MODEL_GN_GROUPS", "=", "32", "\n", "self", ".", "MODEL_GN_EMB_GROUPS", "=", "25", "\n", "self", ".", "MODEL_MULTI_LOCAL_DISTANCE", "=", "[", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", "]", "\n", "self", ".", "MODEL_LOCAL_DOWNSAMPLE", "=", "True", "\n", "self", ".", "MODEL_REFINE_CHANNELS", "=", "64", "# n * 32", "\n", "self", ".", "MODEL_LOW_LEVEL_INPLANES", "=", "256", "if", "self", ".", "MODEL_BACKBONE", "==", "'resnet'", "else", "24", "\n", "self", ".", "MODEL_RELATED_CHANNELS", "=", "64", "\n", "self", ".", "MODEL_EPSILON", "=", "1e-5", "\n", "self", ".", "MODEL_MATCHING_BACKGROUND", "=", "True", "\n", "self", ".", "MODEL_GCT_BETA_WD", "=", "True", "\n", "self", ".", "MODEL_FLOAT16_MATCHING", "=", "False", "\n", "self", ".", "MODEL_FREEZE_BN", "=", "True", "\n", "self", ".", "MODEL_FREEZE_BACKBONE", "=", "False", "\n", "\n", "self", ".", "TRAIN_TOTAL_STEPS", "=", "100000", "\n", "self", ".", "TRAIN_START_STEP", "=", "0", "\n", "self", ".", "TRAIN_LR", "=", "0.01", "\n", "self", ".", "TRAIN_MOMENTUM", "=", "0.9", "\n", "self", ".", "TRAIN_COSINE_DECAY", "=", "False", "\n", "self", ".", "TRAIN_WARM_UP_STEPS", "=", "1000", "\n", "self", ".", "TRAIN_WEIGHT_DECAY", "=", "15e-5", "\n", "self", ".", "TRAIN_POWER", "=", "0.9", "\n", "self", ".", "TRAIN_GPUS", "=", "4", "\n", "self", ".", "TRAIN_BATCH_SIZE", "=", "8", "\n", "self", ".", "TRAIN_START_SEQ_TRAINING_STEPS", "=", "self", ".", "TRAIN_TOTAL_STEPS", "/", "2", "\n", "self", ".", "TRAIN_TBLOG", "=", "False", "\n", "self", ".", "TRAIN_TBLOG_STEP", "=", "60", "\n", "self", ".", "TRAIN_LOG_STEP", "=", "20", "\n", "self", ".", "TRAIN_IMG_LOG", "=", "False", "\n", "self", ".", "TRAIN_TOP_K_PERCENT_PIXELS", "=", "0.15", "\n", "self", ".", "TRAIN_HARD_MINING_STEP", "=", "self", ".", "TRAIN_TOTAL_STEPS", "/", "2", "\n", "self", ".", "TRAIN_CLIP_GRAD_NORM", "=", "5.", "\n", "self", ".", "TRAIN_SAVE_STEP", "=", "1000", "\n", "self", ".", "TRAIN_MAX_KEEP_CKPT", "=", "8", "\n", "self", ".", "TRAIN_RESUME", "=", "False", "\n", "self", ".", "TRAIN_RESUME_CKPT", "=", "None", "\n", "self", ".", "TRAIN_RESUME_STEP", "=", "0", "\n", "self", ".", "TRAIN_AUTO_RESUME", "=", "True", "\n", "self", ".", "TRAIN_GLOBAL_ATROUS_RATE", "=", "1", "\n", "self", ".", "TRAIN_LOCAL_ATROUS_RATE", "=", "1", "\n", "self", ".", "TRAIN_LOCAL_PARALLEL", "=", "True", "\n", "self", ".", "TRAIN_GLOBAL_CHUNKS", "=", "20", "\n", "self", ".", "TRAIN_DATASET_FULL_RESOLUTION", "=", "True", "\n", "\n", "\n", "self", ".", "TEST_GPU_ID", "=", "0", "\n", "self", ".", "TEST_DATASET", "=", "'youtubevos'", "\n", "self", ".", "TEST_DATASET_FULL_RESOLUTION", "=", "False", "\n", "self", ".", "TEST_DATASET_SPLIT", "=", "[", "'val'", "]", "\n", "self", ".", "TEST_CKPT_PATH", "=", "None", "\n", "self", ".", "TEST_CKPT_STEP", "=", "None", "# if \"None\", evaluate the latest checkpoint.", "\n", "self", ".", "TEST_FLIP", "=", "False", "\n", "self", ".", "TEST_MULTISCALE", "=", "[", "1", "]", "\n", "self", ".", "TEST_MIN_SIZE", "=", "None", "\n", "self", ".", "TEST_MAX_SIZE", "=", "800", "*", "1.3", "if", "self", ".", "TEST_MULTISCALE", "==", "[", "1.", "]", "else", "800", "\n", "self", ".", "TEST_WORKERS", "=", "4", "\n", "self", ".", "TEST_GLOBAL_CHUNKS", "=", "4", "\n", "self", ".", "TEST_GLOBAL_ATROUS_RATE", "=", "1", "\n", "self", ".", "TEST_LOCAL_ATROUS_RATE", "=", "1", "\n", "self", ".", "TEST_LOCAL_PARALLEL", "=", "True", "\n", "\n", "# dist", "\n", "self", ".", "DIST_ENABLE", "=", "True", "\n", "self", ".", "DIST_BACKEND", "=", "\"gloo\"", "\n", "self", ".", "DIST_URL", "=", "\"file://./sharefile\"", "\n", "self", ".", "DIST_START_GPU", "=", "0", "\n", "\n", "self", ".", "__check", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.resnet101_cfbi.Configuration.__check": [[123, 131], ["torch.cuda.is_available", "ValueError", "ValueError", "os.path.isdir", "os.makedirs"], "methods", ["None"], ["", "def", "__check", "(", "self", ")", ":", "\n", "        ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                ", "raise", "ValueError", "(", "'config.py: cuda is not avalable'", ")", "\n", "", "if", "self", ".", "TRAIN_GPUS", "==", "0", ":", "\n", "                ", "raise", "ValueError", "(", "'config.py: the number of GPU is 0'", ")", "\n", "", "for", "path", "in", "[", "self", ".", "DIR_RESULT", ",", "self", ".", "DIR_CKPT", ",", "self", ".", "DIR_LOG", ",", "self", ".", "DIR_EVALUATION", ",", "self", ".", "DIR_IMG_LOG", ",", "self", ".", "DIR_TB_LOG", "]", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__init__": [[10, 118], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "mobilenet_cfbi.Configuration.__check"], "methods", ["home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__check"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "EXP_NAME", "=", "'mobilenetv2_cfbi'", "\n", "\n", "self", ".", "DIR_ROOT", "=", "'./'", "\n", "self", ".", "DIR_DATA", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_ROOT", ",", "'datasets'", ")", "\n", "self", ".", "DIR_DAVIS", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_DATA", ",", "'DAVIS'", ")", "\n", "self", ".", "DIR_YTB", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_DATA", ",", "'YTB/train'", ")", "\n", "self", ".", "DIR_YTB_EVAL", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_DATA", ",", "'YTB/valid'", ")", "\n", "self", ".", "DIR_RESULT", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_ROOT", ",", "'result'", ",", "self", ".", "EXP_NAME", ")", "\n", "self", ".", "DIR_CKPT", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'ckpt'", ")", "\n", "self", ".", "DIR_LOG", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'log'", ")", "\n", "self", ".", "DIR_IMG_LOG", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'log'", ",", "'img'", ")", "\n", "self", ".", "DIR_TB_LOG", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'log'", ",", "'tensorboard'", ")", "\n", "self", ".", "DIR_EVALUATION", "=", "os", ".", "path", ".", "join", "(", "self", ".", "DIR_RESULT", ",", "'eval'", ")", "\n", "\n", "self", ".", "DATASETS", "=", "[", "'youtubevos'", "]", "\n", "self", ".", "DATA_WORKERS", "=", "4", "\n", "self", ".", "DATA_RANDOMCROP", "=", "(", "465", ",", "465", ")", "\n", "self", ".", "DATA_RANDOMFLIP", "=", "0.5", "\n", "self", ".", "DATA_MAX_CROP_STEPS", "=", "5", "\n", "self", ".", "DATA_MIN_SCALE_FACTOR", "=", "1.", "\n", "self", ".", "DATA_MAX_SCALE_FACTOR", "=", "1.3", "\n", "self", ".", "DATA_SHORT_EDGE_LEN", "=", "480", "\n", "self", ".", "DATA_RANDOM_REVERSE_SEQ", "=", "True", "\n", "self", ".", "DATA_DAVIS_REPEAT", "=", "30", "\n", "self", ".", "DATA_CURR_SEQ_LEN", "=", "3", "\n", "self", ".", "DATA_RANDOM_GAP_DAVIS", "=", "3", "\n", "self", ".", "DATA_RANDOM_GAP_YTB", "=", "3", "\n", "\n", "\n", "self", ".", "PRETRAIN", "=", "True", "\n", "self", ".", "PRETRAIN_FULL", "=", "False", "\n", "self", ".", "PRETRAIN_MODEL", "=", "'./pretrain_models/mobilenetv2-deeplabv3p.pth.tar'", "\n", "\n", "self", ".", "MODEL_BACKBONE", "=", "'mobilenet'", "\n", "self", ".", "MODEL_MODULE", "=", "'networks.cfbi.cfbi'", "\n", "self", ".", "MODEL_OUTPUT_STRIDE", "=", "16", "\n", "self", ".", "MODEL_ASPP_OUTDIM", "=", "256", "\n", "self", ".", "MODEL_SHORTCUT_DIM", "=", "48", "\n", "self", ".", "MODEL_SEMANTIC_EMBEDDING_DIM", "=", "100", "\n", "self", ".", "MODEL_HEAD_EMBEDDING_DIM", "=", "256", "\n", "self", ".", "MODEL_PRE_HEAD_EMBEDDING_DIM", "=", "64", "\n", "self", ".", "MODEL_GN_GROUPS", "=", "32", "\n", "self", ".", "MODEL_GN_EMB_GROUPS", "=", "25", "\n", "self", ".", "MODEL_MULTI_LOCAL_DISTANCE", "=", "[", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", "]", "\n", "self", ".", "MODEL_LOCAL_DOWNSAMPLE", "=", "True", "\n", "self", ".", "MODEL_REFINE_CHANNELS", "=", "64", "# n * 32", "\n", "self", ".", "MODEL_LOW_LEVEL_INPLANES", "=", "256", "if", "self", ".", "MODEL_BACKBONE", "==", "'resnet'", "else", "24", "\n", "self", ".", "MODEL_RELATED_CHANNELS", "=", "64", "\n", "self", ".", "MODEL_EPSILON", "=", "1e-5", "\n", "self", ".", "MODEL_MATCHING_BACKGROUND", "=", "True", "\n", "self", ".", "MODEL_GCT_BETA_WD", "=", "True", "\n", "self", ".", "MODEL_FLOAT16_MATCHING", "=", "True", "\n", "self", ".", "MODEL_FREEZE_BN", "=", "True", "\n", "self", ".", "MODEL_FREEZE_BACKBONE", "=", "False", "\n", "\n", "self", ".", "TRAIN_TOTAL_STEPS", "=", "100000", "\n", "self", ".", "TRAIN_START_STEP", "=", "0", "\n", "self", ".", "TRAIN_LR", "=", "0.01", "\n", "self", ".", "TRAIN_MOMENTUM", "=", "0.9", "\n", "self", ".", "TRAIN_COSINE_DECAY", "=", "False", "\n", "self", ".", "TRAIN_WARM_UP_STEPS", "=", "1000", "\n", "self", ".", "TRAIN_WEIGHT_DECAY", "=", "15e-5", "\n", "self", ".", "TRAIN_POWER", "=", "0.9", "\n", "self", ".", "TRAIN_GPUS", "=", "4", "\n", "self", ".", "TRAIN_BATCH_SIZE", "=", "8", "\n", "self", ".", "TRAIN_START_SEQ_TRAINING_STEPS", "=", "self", ".", "TRAIN_TOTAL_STEPS", "/", "2", "\n", "self", ".", "TRAIN_TBLOG", "=", "False", "\n", "self", ".", "TRAIN_TBLOG_STEP", "=", "60", "\n", "self", ".", "TRAIN_LOG_STEP", "=", "20", "\n", "self", ".", "TRAIN_IMG_LOG", "=", "False", "\n", "self", ".", "TRAIN_TOP_K_PERCENT_PIXELS", "=", "0.15", "\n", "self", ".", "TRAIN_HARD_MINING_STEP", "=", "self", ".", "TRAIN_TOTAL_STEPS", "/", "2", "\n", "self", ".", "TRAIN_CLIP_GRAD_NORM", "=", "5.", "\n", "self", ".", "TRAIN_SAVE_STEP", "=", "1000", "\n", "self", ".", "TRAIN_MAX_KEEP_CKPT", "=", "8", "\n", "self", ".", "TRAIN_RESUME", "=", "False", "\n", "self", ".", "TRAIN_RESUME_CKPT", "=", "None", "\n", "self", ".", "TRAIN_RESUME_STEP", "=", "0", "\n", "self", ".", "TRAIN_AUTO_RESUME", "=", "True", "\n", "self", ".", "TRAIN_GLOBAL_ATROUS_RATE", "=", "1", "\n", "self", ".", "TRAIN_LOCAL_ATROUS_RATE", "=", "1", "\n", "self", ".", "TRAIN_GLOBAL_CHUNKS", "=", "20", "\n", "self", ".", "TRAIN_DATASET_FULL_RESOLUTION", "=", "True", "\n", "\n", "\n", "self", ".", "TEST_GPU_ID", "=", "0", "\n", "self", ".", "TEST_DATASET", "=", "'youtubevos'", "\n", "self", ".", "TEST_DATASET_FULL_RESOLUTION", "=", "False", "\n", "self", ".", "TEST_DATASET_SPLIT", "=", "[", "'val'", "]", "\n", "self", ".", "TEST_CKPT_PATH", "=", "None", "\n", "self", ".", "TEST_CKPT_STEP", "=", "None", "# if \"None\", evaluate the latest checkpoint.", "\n", "self", ".", "TEST_FLIP", "=", "False", "\n", "self", ".", "TEST_MULTISCALE", "=", "[", "1", "]", "\n", "self", ".", "TEST_MIN_SIZE", "=", "None", "\n", "self", ".", "TEST_MAX_SIZE", "=", "800", "*", "1.3", "if", "self", ".", "TEST_MULTISCALE", "==", "[", "1", "]", "else", "800", "\n", "self", ".", "TEST_WORKERS", "=", "4", "\n", "self", ".", "TEST_GLOBAL_CHUNKS", "=", "4", "\n", "self", ".", "TEST_GLOBAL_ATROUS_RATE", "=", "2", "\n", "self", ".", "TEST_LOCAL_ATROUS_RATE", "=", "1", "\n", "\n", "# dist", "\n", "self", ".", "DIST_ENABLE", "=", "True", "\n", "self", ".", "DIST_BACKEND", "=", "\"gloo\"", "\n", "self", ".", "DIST_URL", "=", "\"file://./sharefile\"", "\n", "self", ".", "DIST_START_GPU", "=", "0", "\n", "\n", "self", ".", "__check", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.z-x-yang_CFBI.configs.mobilenet_cfbi.Configuration.__check": [[119, 127], ["torch.cuda.is_available", "ValueError", "ValueError", "os.path.isdir", "os.makedirs"], "methods", ["None"], ["", "def", "__check", "(", "self", ")", ":", "\n", "        ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                ", "raise", "ValueError", "(", "'config.py: cuda is not avalable'", ")", "\n", "", "if", "self", ".", "TRAIN_GPUS", "==", "0", ":", "\n", "                ", "raise", "ValueError", "(", "'config.py: the number of GPU is 0'", ")", "\n", "", "for", "path", "in", "[", "self", ".", "DIR_RESULT", ",", "self", ".", "DIR_CKPT", ",", "self", ".", "DIR_LOG", ",", "self", ".", "DIR_EVALUATION", ",", "self", ".", "DIR_IMG_LOG", ",", "self", ".", "DIR_TB_LOG", "]", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]]}