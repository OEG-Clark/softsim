{"home.repos.pwc.inspect_result.albu_albumentations.None.setup.get_version": [[19, 24], ["os.path.abspath", "os.path.join", "os.path.dirname", "io.open", "re.search().group", "re.search", "f.read"], "function", ["None"], ["def", "get_version", "(", ")", ":", "\n", "    ", "current_dir", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ")", "\n", "version_file", "=", "os", ".", "path", ".", "join", "(", "current_dir", ",", "\"albumentations\"", ",", "\"__init__.py\"", ")", "\n", "with", "io", ".", "open", "(", "version_file", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "        ", "return", "re", ".", "search", "(", "r'^__version__ = [\\'\"]([^\\'\"]*)[\\'\"]'", ",", "f", ".", "read", "(", ")", ",", "re", ".", "M", ")", ".", "group", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.None.setup.get_long_description": [[26, 30], ["os.path.abspath", "os.path.dirname", "io.open", "f.read", "os.path.join"], "function", ["None"], ["", "", "def", "get_long_description", "(", ")", ":", "\n", "    ", "base_dir", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ")", "\n", "with", "io", ".", "open", "(", "os", ".", "path", ".", "join", "(", "base_dir", ",", "\"README.md\"", ")", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "        ", "return", "f", ".", "read", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.None.setup.choose_requirement": [[32, 48], ["str", "pkg_resources.get_distribution", "re.split"], "function", ["None"], ["", "", "def", "choose_requirement", "(", "mains", ",", "secondary", ")", ":", "\n", "    ", "\"\"\"If some version of main requirement installed, return main,\n    else return secondary.\n\n    \"\"\"", "\n", "chosen", "=", "secondary", "\n", "for", "main", "in", "mains", ":", "\n", "        ", "try", ":", "\n", "            ", "name", "=", "re", ".", "split", "(", "r\"[!<>=]\"", ",", "main", ")", "[", "0", "]", "\n", "get_distribution", "(", "name", ")", "\n", "chosen", "=", "main", "\n", "break", "\n", "", "except", "DistributionNotFound", ":", "\n", "            ", "pass", "\n", "\n", "", "", "return", "str", "(", "chosen", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.None.setup.get_install_requirements": [[50, 55], ["install_requires.append", "setup.choose_requirement"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.None.setup.choose_requirement"], ["", "def", "get_install_requirements", "(", "install_requires", ",", "choose_install_requires", ")", ":", "\n", "    ", "for", "mains", ",", "secondary", "in", "choose_install_requires", ":", "\n", "        ", "install_requires", ".", "append", "(", "choose_requirement", "(", "mains", ",", "secondary", ")", ")", "\n", "\n", "", "return", "install_requires", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.get_random_state": [[14, 16], ["numpy.random.RandomState", "random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["def", "get_random_state", "(", ")", "->", "np", ".", "random", ".", "RandomState", ":", "\n", "    ", "return", "np", ".", "random", ".", "RandomState", "(", "py_random", ".", "randint", "(", "0", ",", "(", "1", "<<", "32", ")", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform": [[18, 27], ["get_random_state.uniform", "random_utils.get_random_state"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.get_random_state"], ["", "def", "uniform", "(", "\n", "low", ":", "NumType", "=", "0.0", ",", "\n", "high", ":", "NumType", "=", "1.0", ",", "\n", "size", ":", "Optional", "[", "Size", "]", "=", "None", ",", "\n", "random_state", ":", "Optional", "[", "np", ".", "random", ".", "RandomState", "]", "=", "None", ",", "\n", ")", "->", "Any", ":", "\n", "    ", "if", "random_state", "is", "None", ":", "\n", "        ", "random_state", "=", "get_random_state", "(", ")", "\n", "", "return", "random_state", ".", "uniform", "(", "low", ",", "high", ",", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand": [[29, 33], ["get_random_state.rand", "random_utils.get_random_state"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.get_random_state"], ["", "def", "rand", "(", "d0", ":", "NumType", ",", "d1", ":", "NumType", ",", "*", "more", ",", "random_state", ":", "Optional", "[", "np", ".", "random", ".", "RandomState", "]", "=", "None", ",", "**", "kwargs", ")", "->", "Any", ":", "\n", "    ", "if", "random_state", "is", "None", ":", "\n", "        ", "random_state", "=", "get_random_state", "(", ")", "\n", "", "return", "random_state", ".", "rand", "(", "d0", ",", "d1", ",", "*", "more", ",", "**", "kwargs", ")", "# type: ignore", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randn": [[35, 39], ["get_random_state.randn", "random_utils.get_random_state"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randn", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.get_random_state"], ["", "def", "randn", "(", "d0", ":", "NumType", ",", "d1", ":", "NumType", ",", "*", "more", ",", "random_state", ":", "Optional", "[", "np", ".", "random", ".", "RandomState", "]", "=", "None", ",", "**", "kwargs", ")", "->", "Any", ":", "\n", "    ", "if", "random_state", "is", "None", ":", "\n", "        ", "random_state", "=", "get_random_state", "(", ")", "\n", "", "return", "random_state", ".", "randn", "(", "d0", ",", "d1", ",", "*", "more", ",", "**", "kwargs", ")", "# type: ignore", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.normal": [[41, 50], ["get_random_state.normal", "random_utils.get_random_state"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.normal", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.get_random_state"], ["", "def", "normal", "(", "\n", "loc", ":", "NumType", "=", "0.0", ",", "\n", "scale", ":", "NumType", "=", "1.0", ",", "\n", "size", ":", "Optional", "[", "Size", "]", "=", "None", ",", "\n", "random_state", ":", "Optional", "[", "np", ".", "random", ".", "RandomState", "]", "=", "None", ",", "\n", ")", "->", "Any", ":", "\n", "    ", "if", "random_state", "is", "None", ":", "\n", "        ", "random_state", "=", "get_random_state", "(", ")", "\n", "", "return", "random_state", ".", "normal", "(", "loc", ",", "scale", ",", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.poisson": [[52, 58], ["get_random_state.poisson", "random_utils.get_random_state"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.poisson", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.get_random_state"], ["", "def", "poisson", "(", "\n", "lam", ":", "NumType", "=", "1.0", ",", "size", ":", "Optional", "[", "Size", "]", "=", "None", ",", "random_state", ":", "Optional", "[", "np", ".", "random", ".", "RandomState", "]", "=", "None", "\n", ")", "->", "Any", ":", "\n", "    ", "if", "random_state", "is", "None", ":", "\n", "        ", "random_state", "=", "get_random_state", "(", ")", "\n", "", "return", "random_state", ".", "poisson", "(", "lam", ",", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.permutation": [[60, 66], ["get_random_state.permutation", "random_utils.get_random_state"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.permutation", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.get_random_state"], ["", "def", "permutation", "(", "\n", "x", ":", "Union", "[", "int", ",", "Sequence", "[", "float", "]", ",", "np", ".", "ndarray", "]", ",", "random_state", ":", "Optional", "[", "np", ".", "random", ".", "RandomState", "]", "=", "None", "\n", ")", "->", "Any", ":", "\n", "    ", "if", "random_state", "is", "None", ":", "\n", "        ", "random_state", "=", "get_random_state", "(", ")", "\n", "", "return", "random_state", ".", "permutation", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint": [[68, 78], ["get_random_state.randint", "random_utils.get_random_state"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.get_random_state"], ["", "def", "randint", "(", "\n", "low", ":", "IntNumType", ",", "\n", "high", ":", "Optional", "[", "IntNumType", "]", "=", "None", ",", "\n", "size", ":", "Optional", "[", "Size", "]", "=", "None", ",", "\n", "dtype", ":", "Type", "=", "np", ".", "int32", ",", "\n", "random_state", ":", "Optional", "[", "np", ".", "random", ".", "RandomState", "]", "=", "None", ",", "\n", ")", "->", "Any", ":", "\n", "    ", "if", "random_state", "is", "None", ":", "\n", "        ", "random_state", "=", "get_random_state", "(", ")", "\n", "", "return", "random_state", ".", "randint", "(", "low", ",", "high", ",", "size", ",", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random": [[80, 84], ["get_random_state.random", "random_utils.get_random_state"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.get_random_state"], ["", "def", "random", "(", "size", ":", "Optional", "[", "NumType", "]", "=", "None", ",", "random_state", ":", "Optional", "[", "np", ".", "random", ".", "RandomState", "]", "=", "None", ")", "->", "Any", ":", "\n", "    ", "if", "random_state", "is", "None", ":", "\n", "        ", "random_state", "=", "get_random_state", "(", ")", "\n", "", "return", "random_state", ".", "random", "(", "size", ")", "# type: ignore", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice": [[86, 96], ["get_random_state.choice", "random_utils.get_random_state"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.get_random_state"], ["", "def", "choice", "(", "\n", "a", ":", "NumType", ",", "\n", "size", ":", "Optional", "[", "Size", "]", "=", "None", ",", "\n", "replace", ":", "bool", "=", "True", ",", "\n", "p", ":", "Optional", "[", "Union", "[", "Sequence", "[", "float", "]", ",", "np", ".", "ndarray", "]", "]", "=", "None", ",", "\n", "random_state", ":", "Optional", "[", "np", ".", "random", ".", "RandomState", "]", "=", "None", ",", "\n", ")", "->", "Any", ":", "\n", "    ", "if", "random_state", "is", "None", ":", "\n", "        ", "random_state", "=", "get_random_state", "(", ")", "\n", "", "return", "random_state", ".", "choice", "(", "a", ",", "size", ",", "replace", ",", "p", ")", "# type: ignore", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.transforms.ToTensor.__init__": [[51, 54], ["RuntimeError"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "num_classes", "=", "1", ",", "sigmoid", "=", "True", ",", "normalize", "=", "None", ")", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "\"`ToTensor` is obsolete and it was removed from Albumentations. Please use `ToTensorV2` instead - \"", "\n", "\"https://albumentations.ai/docs/api_reference/pytorch/transforms/\"", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.transforms.ToTensorV2.__init__": [[73, 76], ["core.transforms_interface.BasicTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "self", ",", "transpose_mask", "=", "False", ",", "always_apply", "=", "True", ",", "p", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "ToTensorV2", ",", "self", ")", ".", "__init__", "(", "always_apply", "=", "always_apply", ",", "p", "=", "p", ")", "\n", "self", ".", "transpose_mask", "=", "transpose_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.transforms.ToTensorV2.targets": [[77, 80], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets", "(", "self", ")", ":", "\n", "        ", "return", "{", "\"image\"", ":", "self", ".", "apply", ",", "\"mask\"", ":", "self", ".", "apply_to_mask", ",", "\"masks\"", ":", "self", ".", "apply_to_masks", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.transforms.ToTensorV2.apply": [[81, 89], ["torch.from_numpy", "len", "ValueError", "len", "numpy.expand_dims", "numpy.expand_dims.transpose"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose"], ["", "def", "apply", "(", "self", ",", "img", ",", "**", "params", ")", ":", "# skipcq: PYL-W0613", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "not", "in", "[", "2", ",", "3", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\"Albumentations only supports images in HW or HWC format\"", ")", "\n", "\n", "", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "2", ")", "\n", "\n", "", "return", "torch", ".", "from_numpy", "(", "img", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.transforms.ToTensorV2.apply_to_mask": [[90, 94], ["torch.from_numpy", "mask.transpose.transpose.transpose"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose"], ["", "def", "apply_to_mask", "(", "self", ",", "mask", ",", "**", "params", ")", ":", "# skipcq: PYL-W0613", "\n", "        ", "if", "self", ".", "transpose_mask", "and", "mask", ".", "ndim", "==", "3", ":", "\n", "            ", "mask", "=", "mask", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.transforms.ToTensorV2.apply_to_masks": [[95, 97], ["transforms.ToTensorV2.apply_to_mask"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.NoOp.apply_to_mask"], ["", "def", "apply_to_masks", "(", "self", ",", "masks", ",", "**", "params", ")", ":", "\n", "        ", "return", "[", "self", ".", "apply_to_mask", "(", "mask", ",", "**", "params", ")", "for", "mask", "in", "masks", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.transforms.ToTensorV2.get_transform_init_args_names": [[98, 100], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\"transpose_mask\"", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.transforms.ToTensorV2.get_params_dependent_on_targets": [[101, 103], ["None"], "methods", ["None"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ")", ":", "\n", "        ", "return", "{", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.transforms.img_to_tensor": [[14, 19], ["torch.from_numpy", "numpy.moveaxis().astype", "torchvision.transforms.functional.normalize", "numpy.moveaxis"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.normalize"], ["def", "img_to_tensor", "(", "im", ",", "normalize", "=", "None", ")", ":", "\n", "    ", "tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "moveaxis", "(", "im", "/", "(", "255.0", "if", "im", ".", "dtype", "==", "np", ".", "uint8", "else", "1", ")", ",", "-", "1", ",", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "if", "normalize", "is", "not", "None", ":", "\n", "        ", "return", "F", ".", "normalize", "(", "tensor", ",", "**", "normalize", ")", "\n", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.transforms.mask_to_tensor": [[21, 38], ["torch.from_numpy", "numpy.expand_dims().astype", "numpy.zeros", "numpy.moveaxis().astype", "len", "range", "numpy.expand_dims", "numpy.moveaxis"], "function", ["None"], ["", "def", "mask_to_tensor", "(", "mask", ",", "num_classes", ",", "sigmoid", ")", ":", "\n", "    ", "if", "num_classes", ">", "1", ":", "\n", "        ", "if", "not", "sigmoid", ":", "\n", "# softmax", "\n", "            ", "long_mask", "=", "np", ".", "zeros", "(", "(", "mask", ".", "shape", "[", ":", "2", "]", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "if", "len", "(", "mask", ".", "shape", ")", "==", "3", ":", "\n", "                ", "for", "c", "in", "range", "(", "mask", ".", "shape", "[", "2", "]", ")", ":", "\n", "                    ", "long_mask", "[", "mask", "[", "...", ",", "c", "]", ">", "0", "]", "=", "c", "\n", "", "", "else", ":", "\n", "                ", "long_mask", "[", "mask", ">", "127", "]", "=", "1", "\n", "long_mask", "[", "mask", "==", "0", "]", "=", "0", "\n", "", "mask", "=", "long_mask", "\n", "", "else", ":", "\n", "            ", "mask", "=", "np", ".", "moveaxis", "(", "mask", "/", "(", "255.0", "if", "mask", ".", "dtype", "==", "np", ".", "uint8", "else", "1", ")", ",", "-", "1", ",", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "", "else", ":", "\n", "        ", "mask", "=", "np", ".", "expand_dims", "(", "mask", "/", "(", "255.0", "if", "mask", ".", "dtype", "==", "np", ".", "uint8", "else", "1", ")", ",", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.functional.img_to_tensor": [[8, 13], ["torch.from_numpy", "numpy.moveaxis().astype", "torchvision.normalize", "numpy.moveaxis"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.normalize"], ["def", "img_to_tensor", "(", "im", ",", "normalize", "=", "None", ")", ":", "\n", "    ", "tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "moveaxis", "(", "im", "/", "(", "255.0", "if", "im", ".", "dtype", "==", "np", ".", "uint8", "else", "1", ")", ",", "-", "1", ",", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "if", "normalize", "is", "not", "None", ":", "\n", "        ", "return", "F", ".", "normalize", "(", "tensor", ",", "**", "normalize", ")", "\n", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.pytorch.functional.mask_to_tensor": [[15, 32], ["torch.from_numpy", "numpy.expand_dims().astype", "numpy.zeros", "numpy.moveaxis().astype", "len", "range", "numpy.expand_dims", "numpy.moveaxis"], "function", ["None"], ["", "def", "mask_to_tensor", "(", "mask", ",", "num_classes", ",", "sigmoid", ")", ":", "\n", "    ", "if", "num_classes", ">", "1", ":", "\n", "        ", "if", "not", "sigmoid", ":", "\n", "# softmax", "\n", "            ", "long_mask", "=", "np", ".", "zeros", "(", "(", "mask", ".", "shape", "[", ":", "2", "]", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "if", "len", "(", "mask", ".", "shape", ")", "==", "3", ":", "\n", "                ", "for", "c", "in", "range", "(", "mask", ".", "shape", "[", "2", "]", ")", ":", "\n", "                    ", "long_mask", "[", "mask", "[", "...", ",", "c", "]", ">", "0", "]", "=", "c", "\n", "", "", "else", ":", "\n", "                ", "long_mask", "[", "mask", ">", "127", "]", "=", "1", "\n", "long_mask", "[", "mask", "==", "0", "]", "=", "0", "\n", "", "mask", "=", "long_mask", "\n", "", "else", ":", "\n", "            ", "mask", "=", "np", ".", "moveaxis", "(", "mask", "/", "(", "255.0", "if", "mask", ".", "dtype", "==", "np", ".", "uint8", "else", "1", ")", ",", "-", "1", ",", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "", "else", ":", "\n", "        ", "mask", "=", "np", ".", "expand_dims", "(", "mask", "/", "(", "255.0", "if", "mask", ".", "dtype", "==", "np", ".", "uint8", "else", "1", ")", ",", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PadIfNeeded.__init__": [[117, 145], ["core.transforms_interface.DualTransform.__init__", "PadIfNeeded.PositionType", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PadIfNeeded.update_params": [[146, 192], ["super().update_params", "transforms.PadIfNeeded.__update_position_params", "super().update_params.update", "int", "int"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.update_params", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PadIfNeeded.__update_position_params"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PadIfNeeded.apply": [[193, 202], ["functional.pad_with_params"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad_with_params"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PadIfNeeded.apply_to_mask": [[204, 213], ["functional.pad_with_params"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad_with_params"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PadIfNeeded.apply_to_bbox": [[215, 219], ["bbox_utils.denormalize_bbox", "bbox_utils.normalize_bbox"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PadIfNeeded.apply_to_keypoint": [[221, 224], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PadIfNeeded.get_transform_init_args_names": [[225, 234], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PadIfNeeded.__update_position_params": [[236, 272], ["random.randint", "random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.VerticalFlip.apply": [[287, 289], ["functional.vflip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.VerticalFlip.apply_to_bbox": [[290, 292], ["functional.bbox_vflip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_vflip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.VerticalFlip.apply_to_keypoint": [[293, 295], ["functional.keypoint_vflip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_vflip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.VerticalFlip.get_transform_init_args_names": [[296, 298], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.HorizontalFlip.apply": [[313, 320], ["functional.hflip", "functional.hflip_cv2"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip_cv2"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.HorizontalFlip.apply_to_bbox": [[321, 323], ["functional.bbox_hflip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_hflip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.HorizontalFlip.apply_to_keypoint": [[324, 326], ["functional.keypoint_hflip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_hflip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.HorizontalFlip.get_transform_init_args_names": [[327, 329], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Flip.apply": [[344, 351], ["functional.random_flip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.random_flip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Flip.get_params": [[352, 355], ["random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Flip.apply_to_bbox": [[356, 358], ["functional.bbox_flip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_flip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Flip.apply_to_keypoint": [[359, 361], ["functional.keypoint_flip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_flip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Flip.get_transform_init_args_names": [[362, 364], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Transpose.apply": [[379, 381], ["functional.transpose"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Transpose.apply_to_bbox": [[382, 384], ["functional.bbox_transpose"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_transpose"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Transpose.apply_to_keypoint": [[385, 387], ["functional.keypoint_transpose"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_transpose"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Transpose.get_transform_init_args_names": [[388, 390], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.OpticalDistortion.__init__": [[417, 435], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.OpticalDistortion.apply": [[436, 438], ["functional.optical_distortion"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.optical_distortion"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.OpticalDistortion.apply_to_mask": [[439, 441], ["functional.optical_distortion"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.optical_distortion"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.OpticalDistortion.get_params": [[442, 447], ["random.uniform", "round", "round", "random.uniform", "random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.OpticalDistortion.get_transform_init_args_names": [[449, 457], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GridDistortion.__init__": [[484, 502], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GridDistortion.apply": [[503, 512], ["functional.grid_distortion"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.grid_distortion"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GridDistortion.apply_to_mask": [[514, 523], ["functional.grid_distortion"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.grid_distortion"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GridDistortion.get_params": [[525, 529], ["random.uniform", "range", "random.uniform", "range"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GridDistortion.get_transform_init_args_names": [[530, 538], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGridShuffle.__init__": [[555, 558], ["core.transforms_interface.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGridShuffle.apply": [[559, 563], ["functional.swap_tiles_on_image"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.swap_tiles_on_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGridShuffle.apply_to_mask": [[564, 568], ["functional.swap_tiles_on_image"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.swap_tiles_on_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGridShuffle.apply_to_keypoint": [[569, 594], ["tuple"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGridShuffle.get_params_dependent_on_targets": [[595, 642], ["numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.stack", "numpy.indices", "numpy.stack", "numpy.unique", "numpy.split", "index_height_matrix[].reshape", "index_width_matrix[].reshape", "height_tile_sizes.reshape", "width_tile_sizes.reshape", "index_height_matrix.reshape", "index_width_matrix.reshape", "numpy.stack", "ValueError", "ValueError", "numpy.stack.reshape", "numpy.all", "albumentations.random_utils.permutation"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.permutation"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGridShuffle.targets_as_params": [[643, 646], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGridShuffle.get_transform_init_args_names": [[647, 649], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Normalize.__init__": [[666, 678], ["core.transforms_interface.ImageOnlyTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Normalize.apply": [[679, 681], ["functional.normalize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.normalize"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Normalize.get_transform_init_args_names": [[682, 684], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ImageCompression.__init__": [[708, 731], ["core.transforms_interface.ImageOnlyTransform.__init__", "ImageCompression.ImageCompressionType", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ImageCompression.apply": [[732, 736], ["functional.image_compression", "TypeError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.image_compression"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ImageCompression.get_params": [[737, 746], ["random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ImageCompression.get_transform_init_args": [[748, 753], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.JpegCompression.__init__": [[770, 781], ["transforms.ImageCompression.__init__", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.JpegCompression.get_transform_init_args": [[783, 787], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomSnow.__init__": [[807, 829], ["core.transforms_interface.ImageOnlyTransform.__init__", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomSnow.apply": [[830, 832], ["functional.add_snow"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_snow"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomSnow.get_params": [[833, 835], ["random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomSnow.get_transform_init_args_names": [[836, 838], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomRain.__init__": [[862, 901], ["core.transforms_interface.ImageOnlyTransform.__init__", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomRain.apply": [[902, 912], ["functional.add_rain"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_rain"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomRain.targets_as_params": [[914, 917], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomRain.get_params_dependent_on_targets": [[918, 951], ["int", "range", "random.uniform", "random.randint", "rain_drops.append", "random.randint", "random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomRain.get_transform_init_args_names": [[952, 962], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomFog.__init__": [[982, 1004], ["core.transforms_interface.ImageOnlyTransform.__init__", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomFog.apply": [[1005, 1007], ["functional.add_fog"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_fog"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomFog.targets_as_params": [[1008, 1011], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomFog.get_params_dependent_on_targets": [[1012, 1036], ["random.uniform", "max", "int", "range", "random.randint", "random.randint", "haze_list.append", "sum", "sum"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomFog.get_transform_init_args_names": [[1037, 1039], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomSunFlare.__init__": [[1065, 1115], ["core.transforms_interface.ImageOnlyTransform.__init__", "ValueError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomSunFlare.apply": [[1116, 1124], ["functional.add_sun_flare"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_sun_flare"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomSunFlare.targets_as_params": [[1126, 1129], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomSunFlare.get_params_dependent_on_targets": [[1130, 1176], ["random.uniform", "random.uniform", "int", "int", "random.randint", "range", "range", "random.uniform", "x.append", "y.append", "random.uniform", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "max", "max", "max", "max", "math.tan", "len", "pow", "int", "int"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomSunFlare.get_transform_init_args": [[1178, 1192], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomShadow.__init__": [[1216, 1244], ["core.transforms_interface.ImageOnlyTransform.__init__", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomShadow.apply": [[1245, 1247], ["functional.add_shadow"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_shadow"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomShadow.targets_as_params": [[1248, 1251], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomShadow.get_params_dependent_on_targets": [[1252, 1276], ["random.randint", "int", "int", "int", "int", "range", "range", "numpy.array", "vertices_list.append", "vertex.append", "random.randint", "random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomShadow.get_transform_init_args_names": [[1277, 1283], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomToneCurve.__init__": [[1302, 1310], ["core.transforms_interface.ImageOnlyTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomToneCurve.apply": [[1311, 1313], ["functional.move_tone_curve"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.move_tone_curve"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomToneCurve.get_params": [[1314, 1318], ["numpy.clip", "numpy.clip", "albumentations.random_utils.normal", "albumentations.random_utils.normal"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.normal", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.normal"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomToneCurve.get_transform_init_args_names": [[1320, 1322], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.HueSaturationValue.__init__": [[1343, 1355], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.HueSaturationValue.apply": [[1356, 1360], ["functional.shift_hsv", "TypeError", "functional.is_rgb_image", "functional.is_grayscale_image"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_hsv", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.HueSaturationValue.get_params": [[1361, 1366], ["random.uniform", "random.uniform", "random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.HueSaturationValue.get_transform_init_args_names": [[1368, 1370], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Solarize.__init__": [[1387, 1394], ["core.transforms_interface.ImageOnlyTransform.__init__", "isinstance", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Solarize.apply": [[1395, 1397], ["functional.solarize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.solarize"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Solarize.get_params": [[1398, 1400], ["random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Solarize.get_transform_init_args_names": [[1401, 1403], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Posterize.__init__": [[1423, 1433], ["core.transforms_interface.ImageOnlyTransform.__init__", "isinstance", "core.transforms_interface.to_tuple", "len", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Posterize.apply": [[1434, 1436], ["functional.posterize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.posterize"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Posterize.get_params": [[1437, 1441], ["len", "random.randint", "random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Posterize.get_transform_init_args_names": [[1442, 1444], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Equalize.__init__": [[1465, 1483], ["core.transforms_interface.ImageOnlyTransform.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Equalize.apply": [[1484, 1486], ["functional.equalize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Equalize.get_params_dependent_on_targets": [[1487, 1492], ["callable", "transforms.Equalize.mask"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.mask"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Equalize.targets_as_params": [[1493, 1496], ["list"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Equalize.get_transform_init_args_names": [[1497, 1499], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RGBShift.__init__": [[1520, 1532], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RGBShift.apply": [[1533, 1537], ["functional.shift_rgb", "functional.is_rgb_image", "TypeError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_rgb", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RGBShift.get_params": [[1538, 1543], ["random.uniform", "random.uniform", "random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RGBShift.get_transform_init_args_names": [[1545, 1547], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomBrightnessContrast.__init__": [[1568, 1580], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomBrightnessContrast.apply": [[1581, 1583], ["functional.brightness_contrast_adjust"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomBrightnessContrast.get_params": [[1584, 1588], ["random.uniform", "random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomBrightnessContrast.get_transform_init_args_names": [[1590, 1592], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomBrightness.__init__": [[1609, 1616], ["transforms.RandomBrightnessContrast.__init__", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomBrightness.get_transform_init_args": [[1618, 1620], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomContrast.__init__": [[1637, 1642], ["transforms.RandomBrightnessContrast.__init__", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomContrast.get_transform_init_args": [[1644, 1646], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Blur.__init__": [[1663, 1666], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Blur.apply": [[1667, 1669], ["functional.blur"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.blur"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Blur.get_params": [[1670, 1672], ["int", "random.choice", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Blur.get_transform_init_args_names": [[1673, 1675], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.MotionBlur.apply": [[1692, 1694], ["functional.convolve"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.convolve"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.MotionBlur.get_params": [[1695, 1710], ["random.choice", "numpy.zeros", "cv2.line", "numpy.arange", "ValueError", "random.randint", "random.randint", "random.sample", "numpy.zeros.astype", "numpy.sum", "range", "random.randint", "random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.MedianBlur.__init__": [[1727, 1732], ["transforms.Blur.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.MedianBlur.apply": [[1733, 1735], ["functional.median_blur"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.median_blur"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GaussianBlur.__init__": [[1758, 1774], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "warnings.warn", "ValueError", "max"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GaussianBlur.apply": [[1775, 1777], ["functional.gaussian_blur"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gaussian_blur"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GaussianBlur.get_params": [[1778, 1784], ["random.randrange", "random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GaussianBlur.get_transform_init_args_names": [[1785, 1787], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GaussNoise.__init__": [[1807, 1827], ["core.transforms_interface.ImageOnlyTransform.__init__", "isinstance", "isinstance", "ValueError", "ValueError", "TypeError", "ValueError", "type"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GaussNoise.apply": [[1828, 1830], ["functional.gauss_noise"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gauss_noise"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GaussNoise.get_params_dependent_on_targets": [[1831, 1844], ["random.uniform", "albumentations.random_utils.normal", "albumentations.random_utils.normal", "len", "numpy.expand_dims"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.normal", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.normal"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GaussNoise.targets_as_params": [[1845, 1848], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GaussNoise.get_transform_init_args_names": [[1849, 1851], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ISONoise.__init__": [[1871, 1875], ["core.transforms_interface.ImageOnlyTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ISONoise.apply": [[1876, 1878], ["functional.iso_noise", "numpy.random.RandomState"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.iso_noise"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ISONoise.get_params": [[1879, 1884], ["random.uniform", "random.uniform", "random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ISONoise.get_transform_init_args_names": [[1886, 1888], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.CLAHE.__init__": [[1906, 1910], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.CLAHE.apply": [[1911, 1916], ["functional.clahe", "TypeError", "functional.is_rgb_image", "functional.is_grayscale_image"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clahe", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.CLAHE.get_params": [[1917, 1919], ["random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.CLAHE.get_transform_init_args_names": [[1920, 1922], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ChannelShuffle.targets_as_params": [[1937, 1940], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ChannelShuffle.apply": [[1941, 1943], ["functional.channel_shuffle"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.channel_shuffle"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ChannelShuffle.get_params_dependent_on_targets": [[1944, 1949], ["list", "random.shuffle", "range"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ChannelShuffle.get_transform_init_args_names": [[1950, 1952], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.InvertImg.apply": [[1967, 1969], ["functional.invert"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.invert"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.InvertImg.get_transform_init_args_names": [[1970, 1972], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGamma.__init__": [[1988, 1992], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGamma.apply": [[1993, 1995], ["functional.gamma_transform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gamma_transform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGamma.get_params": [[1996, 1998], ["random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RandomGamma.get_transform_init_args_names": [[1999, 2001], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ToGray.apply": [[2017, 2025], ["functional.is_grayscale_image", "functional.to_gray", "warnings.warn", "functional.is_rgb_image", "TypeError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_gray", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ToGray.get_transform_init_args_names": [[2026, 2028], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ToSepia.__init__": [[2043, 2047], ["core.transforms_interface.ImageOnlyTransform.__init__", "numpy.matrix"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ToSepia.apply": [[2049, 2053], ["functional.linear_transformation_rgb", "functional.is_rgb_image", "TypeError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.linear_transformation_rgb", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ToSepia.get_transform_init_args_names": [[2054, 2056], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ToFloat.__init__": [[2078, 2081], ["core.transforms_interface.ImageOnlyTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ToFloat.apply": [[2082, 2084], ["functional.to_float"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ToFloat.get_transform_init_args_names": [[2085, 2087], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.FromFloat.__init__": [[2112, 2116], ["core.transforms_interface.ImageOnlyTransform.__init__", "numpy.dtype"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.FromFloat.apply": [[2117, 2119], ["functional.from_float"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.FromFloat.get_transform_init_args": [[2120, 2122], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Downscale.__init__": [[2139, 2155], ["core.transforms_interface.ImageOnlyTransform.__init__", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Downscale.apply": [[2156, 2158], ["functional.downscale"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.downscale"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Downscale.get_params": [[2159, 2163], ["random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Downscale.get_transform_init_args_names": [[2165, 2167], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Lambda.__init__": [[2188, 2216], ["core.transforms_interface.NoOp.__init__", "isinstance", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Lambda.apply": [[2217, 2220], ["fn"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Lambda.apply_to_mask": [[2221, 2224], ["fn"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Lambda.apply_to_bbox": [[2225, 2228], ["fn"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Lambda.apply_to_keypoint": [[2229, 2232], ["fn"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Lambda.is_serializable": [[2233, 2236], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Lambda._to_dict": [[2237, 2244], ["ValueError", "transforms.Lambda.get_class_fullname"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_class_fullname"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Lambda.__repr__": [[2245, 2250], ["state.update", "state.update", "transforms.Lambda.custom_apply_fns.items", "transforms.Lambda.get_base_init_args", "core.utils.format_args"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_base_init_args", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.format_args"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.MultiplicativeNoise.__init__": [[2270, 2282], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.MultiplicativeNoise.apply": [[2283, 2285], ["numpy.array", "functional.multiply"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.multiply"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.MultiplicativeNoise.get_params_dependent_on_targets": [[2286, 2309], ["albumentations.random_utils.uniform", "functional.is_grayscale_image", "numpy.squeeze", "numpy.array", "functional.is_grayscale_image"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.MultiplicativeNoise.targets_as_params": [[2310, 2313], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.MultiplicativeNoise.get_transform_init_args_names": [[2314, 2316], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.FancyPCA.__init__": [[2338, 2341], ["core.transforms_interface.ImageOnlyTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.FancyPCA.apply": [[2342, 2345], ["functional.fancy_pca"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.fancy_pca"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.FancyPCA.get_params": [[2346, 2348], ["random.gauss"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.FancyPCA.get_transform_init_args_names": [[2349, 2351], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GlassBlur.__init__": [[2375, 2395], ["transforms.Blur.__init__", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GlassBlur.apply": [[2396, 2398], ["functional.glass_blur"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.glass_blur"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GlassBlur.get_params_dependent_on_targets": [[2399, 2409], ["albumentations.random_utils.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GlassBlur.get_transform_init_args_names": [[2410, 2412], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.GlassBlur.targets_as_params": [[2413, 2416], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ColorJitter.__init__": [[2439, 2460], ["core.transforms_interface.ImageOnlyTransform.__init__", "transforms.ColorJitter.__check_values", "transforms.ColorJitter.__check_values", "transforms.ColorJitter.__check_values", "transforms.ColorJitter.__check_values"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ColorJitter.__check_values": [[2462, 2477], ["isinstance", "float", "ValueError", "max", "isinstance", "TypeError", "len", "ValueError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ColorJitter.get_params": [[2478, 2493], ["random.uniform", "random.uniform", "random.uniform", "random.uniform", "random.shuffle"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ColorJitter.apply": [[2495, 2502], ["TypeError", "functional.is_rgb_image", "functional.is_grayscale_image"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.ColorJitter.get_transform_init_args_names": [[2503, 2505], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Sharpen.__init__": [[2520, 2524], ["core.transforms_interface.ImageOnlyTransform.__init__", "transforms.Sharpen.__check_values", "transforms.Sharpen.__check_values", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Sharpen.__check_values": [[2525, 2530], ["float", "ValueError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Sharpen.__generate_sharpening_matrix": [[2531, 2541], ["numpy.array", "numpy.array"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Sharpen.get_params": [[2542, 2547], ["random.uniform", "random.uniform", "transforms.Sharpen.__generate_sharpening_matrix"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Sharpen.__generate_sharpening_matrix"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Sharpen.apply": [[2548, 2550], ["functional.convolve"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.convolve"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Sharpen.get_transform_init_args_names": [[2551, 2553], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Emboss.__init__": [[2568, 2572], ["core.transforms_interface.ImageOnlyTransform.__init__", "transforms.Emboss.__check_values", "transforms.Emboss.__check_values", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Emboss.__check_values": [[2573, 2578], ["float", "ValueError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Emboss.__generate_emboss_matrix": [[2579, 2592], ["numpy.array", "numpy.array"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Emboss.get_params": [[2593, 2598], ["random.uniform", "random.uniform", "transforms.Emboss.__generate_emboss_matrix"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Emboss.__generate_emboss_matrix"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Emboss.apply": [[2599, 2601], ["functional.convolve"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.convolve"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Emboss.get_transform_init_args_names": [[2602, 2604], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Superpixels.__init__": [[2649, 2666], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "min", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Superpixels.get_transform_init_args_names": [[2667, 2669], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Superpixels.get_params": [[2670, 2674], ["random.randint", "random.uniform", "albumentations.random_utils.random"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.Superpixels.apply": [[2675, 2677], ["functional.superpixels"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.superpixels"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.TemplateTransform.__init__": [[2699, 2716], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "isinstance"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.TemplateTransform.apply": [[2717, 2719], ["functional.add_weighted"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_weighted"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.TemplateTransform.get_params": [[2720, 2724], ["random.uniform", "random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.TemplateTransform.get_params_dependent_on_targets": [[2726, 2756], ["random.choice", "numpy.stack.reshape", "functional.get_num_channels", "ValueError", "ValueError", "ValueError", "numpy.stack", "transforms.TemplateTransform.template_transform", "functional.get_num_channels", "functional.get_num_channels", "functional.get_num_channels", "functional.get_num_channels", "functional.get_num_channels", "functional.get_num_channels"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_num_channels", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_num_channels", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_num_channels", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_num_channels", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_num_channels", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_num_channels", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_num_channels"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.TemplateTransform.is_serializable": [[2757, 2760], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.TemplateTransform.targets_as_params": [[2761, 2764], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.TemplateTransform._to_dict": [[2765, 2772], ["ValueError", "transforms.TemplateTransform.get_class_fullname"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_class_fullname"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RingingOvershoot.__init__": [[2793, 2803], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "transforms.RingingOvershoot.__check_values", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RingingOvershoot.__check_values": [[2804, 2809], ["float", "ValueError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RingingOvershoot.get_params": [[2810, 2831], ["random.randrange", "random.uniform", "ValueError", "numpy.errstate", "numpy.fromfunction", "numpy.fromfunction.astype", "numpy.sum", "scipy.special.j1", "numpy.sqrt", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RingingOvershoot.apply": [[2832, 2834], ["functional.convolve"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.convolve"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.RingingOvershoot.get_transform_init_args_names": [[2835, 2837], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.UnsharpMask.__init__": [[2867, 2890], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "transforms.UnsharpMask.__check_values", "transforms.UnsharpMask.__check_values", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "ValueError", "ValueError", "max"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.UnsharpMask.__check_values": [[2891, 2896], ["float", "ValueError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.UnsharpMask.get_params": [[2897, 2902], ["random.randrange", "random.uniform", "random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.UnsharpMask.apply": [[2904, 2906], ["functional.unsharp_mask"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.unsharp_mask"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.UnsharpMask.get_transform_init_args_names": [[2907, 2909], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__init__": [[2943, 2972], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "transforms.AdvancedBlur.__check_values", "transforms.AdvancedBlur.__check_values", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "transforms.AdvancedBlur.__check_values", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "ValueError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.__check_values": [[2973, 2978], ["float", "ValueError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.apply": [[2979, 2981], ["functional.convolve"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.convolve"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.get_params": [[2982, 3016], ["random.randrange", "random.uniform", "random.uniform", "numpy.deg2rad", "numpy.random.RandomState", "numpy.random.RandomState.uniform", "numpy.arange", "numpy.stack", "numpy.array", "numpy.array", "numpy.dot", "numpy.linalg.inv", "numpy.exp", "random.uniform", "random.random", "random.uniform", "random.uniform", "random.randint", "numpy.meshgrid", "numpy.dot", "numpy.exp.astype", "numpy.sum", "numpy.power", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sum", "numpy.sin", "numpy.dot"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.AdvancedBlur.get_transform_init_args_names": [[3017, 3025], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PixelDropout.__init__": [[3052, 3069], ["core.transforms_interface.DualTransform.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PixelDropout.apply": [[3070, 3074], ["functional.pixel_dropout"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pixel_dropout"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PixelDropout.apply_to_mask": [[3075, 3083], ["numpy.array", "functional.pixel_dropout", "numpy.squeeze"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pixel_dropout"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PixelDropout.apply_to_bbox": [[3084, 3086], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PixelDropout.apply_to_keypoint": [[3087, 3089], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PixelDropout.get_params_dependent_on_targets": [[3090, 3114], ["numpy.random.RandomState", "numpy.random.RandomState.choice", "random.randint", "numpy.expand_dims", "functional.is_grayscale_image", "int", "numpy.random.RandomState.randint", "int", "numpy.random.RandomState.uniform().astype", "ValueError", "numpy.random.RandomState.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PixelDropout.targets_as_params": [[3115, 3118], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.transforms.PixelDropout.get_transform_init_args_names": [[3119, 3121], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.BboxProcessor.default_data_name": [[27, 30], ["None"], "methods", ["None"], ["    ", "@", "property", "\n", "def", "default_data_name", "(", "self", ")", ":", "\n", "        ", "return", "\"bboxes\"", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.BboxProcessor.ensure_data_valid": [[31, 43], ["len", "all", "ValueError", "len", "ValueError", "data.keys"], "methods", ["None"], ["", "def", "ensure_data_valid", "(", "self", ",", "data", ")", ":", "\n", "        ", "for", "data_name", "in", "self", ".", "data_fields", ":", "\n", "            ", "data_exists", "=", "data_name", "in", "data", "and", "len", "(", "data", "[", "data_name", "]", ")", "\n", "if", "data_exists", "and", "len", "(", "data", "[", "data_name", "]", "[", "0", "]", ")", "<", "5", ":", "\n", "                ", "if", "self", ".", "params", ".", "label_fields", "is", "None", ":", "\n", "                    ", "raise", "ValueError", "(", "\n", "\"Please specify 'label_fields' in 'bbox_params' or add labels to the end of bbox \"", "\n", "\"because bboxes must have labels\"", "\n", ")", "\n", "", "", "", "if", "self", ".", "params", ".", "label_fields", ":", "\n", "            ", "if", "not", "all", "(", "i", "in", "data", ".", "keys", "(", ")", "for", "i", "in", "self", ".", "params", ".", "label_fields", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\"Your 'label_fields' are not valid - them must have same names as params in dict\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.BboxProcessor.filter": [[44, 47], ["bbox_utils.filter_bboxes"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.filter_bboxes"], ["", "", "", "def", "filter", "(", "self", ",", "data", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "return", "filter_bboxes", "(", "\n", "data", ",", "rows", ",", "cols", ",", "min_area", "=", "self", ".", "params", ".", "min_area", ",", "min_visibility", "=", "self", ".", "params", ".", "min_visibility", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.BboxProcessor.check": [[49, 51], ["bbox_utils.check_bboxes"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.check_bboxes"], ["", "def", "check", "(", "self", ",", "data", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "return", "check_bboxes", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.BboxProcessor.convert_from_albumentations": [[52, 54], ["bbox_utils.convert_bboxes_from_albumentations"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations"], ["", "def", "convert_from_albumentations", "(", "self", ",", "data", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "return", "convert_bboxes_from_albumentations", "(", "data", ",", "self", ".", "params", ".", "format", ",", "rows", ",", "cols", ",", "check_validity", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.BboxProcessor.convert_to_albumentations": [[55, 57], ["bbox_utils.convert_bboxes_to_albumentations"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations"], ["", "def", "convert_to_albumentations", "(", "self", ",", "data", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "return", "convert_bboxes_to_albumentations", "(", "data", ",", "self", ".", "params", ".", "format", ",", "rows", ",", "cols", ",", "check_validity", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox": [[59, 86], ["tuple", "ValueError", "ValueError"], "function", ["None"], ["", "", "def", "normalize_bbox", "(", "bbox", ",", "rows", ",", "cols", ")", ":", "\n", "    ", "\"\"\"Normalize coordinates of a bounding box. Divide x-coordinates by image width and y-coordinates\n    by image height.\n\n    Args:\n        bbox (tuple): Denormalized bounding box `(x_min, y_min, x_max, y_max)`.\n        rows (int): Image height.\n        cols (int): Image width.\n\n    Returns:\n        tuple: Normalized bounding box `(x_min, y_min, x_max, y_max)`.\n\n    Raises:\n        ValueError: If rows or cols is less or equal zero\n\n    \"\"\"", "\n", "(", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", ")", ",", "tail", "=", "bbox", "[", ":", "4", "]", ",", "tuple", "(", "bbox", "[", "4", ":", "]", ")", "\n", "\n", "if", "rows", "<=", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\"Argument rows must be positive integer\"", ")", "\n", "", "if", "cols", "<=", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\"Argument cols must be positive integer\"", ")", "\n", "\n", "", "x_min", ",", "x_max", "=", "x_min", "/", "cols", ",", "x_max", "/", "cols", "\n", "y_min", ",", "y_max", "=", "y_min", "/", "rows", ",", "y_max", "/", "rows", "\n", "\n", "return", "(", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", ")", "+", "tail", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox": [[88, 115], ["tuple", "ValueError", "ValueError"], "function", ["None"], ["", "def", "denormalize_bbox", "(", "bbox", ",", "rows", ",", "cols", ")", ":", "\n", "    ", "\"\"\"Denormalize coordinates of a bounding box. Multiply x-coordinates by image width and y-coordinates\n    by image height. This is an inverse operation for :func:`~albumentations.augmentations.bbox.normalize_bbox`.\n\n    Args:\n        bbox (tuple): Normalized bounding box `(x_min, y_min, x_max, y_max)`.\n        rows (int): Image height.\n        cols (int): Image width.\n\n    Returns:\n        tuple: Denormalized bounding box `(x_min, y_min, x_max, y_max)`.\n\n    Raises:\n        ValueError: If rows or cols is less or equal zero\n\n    \"\"\"", "\n", "(", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", ")", ",", "tail", "=", "bbox", "[", ":", "4", "]", ",", "tuple", "(", "bbox", "[", "4", ":", "]", ")", "\n", "\n", "if", "rows", "<=", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\"Argument rows must be positive integer\"", ")", "\n", "", "if", "cols", "<=", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\"Argument cols must be positive integer\"", ")", "\n", "\n", "", "x_min", ",", "x_max", "=", "x_min", "*", "cols", ",", "x_max", "*", "cols", "\n", "y_min", ",", "y_max", "=", "y_min", "*", "rows", ",", "y_max", "*", "rows", "\n", "\n", "return", "(", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", ")", "+", "tail", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bboxes": [[117, 130], ["bbox_utils.normalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox"], ["", "def", "normalize_bboxes", "(", "bboxes", ",", "rows", ",", "cols", ")", ":", "\n", "    ", "\"\"\"Normalize a list of bounding boxes.\n\n    Args:\n        bboxes (List[tuple]): Denormalized bounding boxes `[(x_min, y_min, x_max, y_max)]`.\n        rows (int): Image height.\n        cols (int): Image width.\n\n    Returns:\n        List[tuple]: Normalized bounding boxes `[(x_min, y_min, x_max, y_max)]`.\n\n    \"\"\"", "\n", "return", "[", "normalize_bbox", "(", "bbox", ",", "rows", ",", "cols", ")", "for", "bbox", "in", "bboxes", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bboxes": [[132, 145], ["bbox_utils.denormalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox"], ["", "def", "denormalize_bboxes", "(", "bboxes", ",", "rows", ",", "cols", ")", ":", "\n", "    ", "\"\"\"Denormalize a list of bounding boxes.\n\n    Args:\n        bboxes (List[tuple]): Normalized bounding boxes `[(x_min, y_min, x_max, y_max)]`.\n        rows (int): Image height.\n        cols (int): Image width.\n\n    Returns:\n        List[tuple]: Denormalized bounding boxes `[(x_min, y_min, x_max, y_max)]`.\n\n    \"\"\"", "\n", "return", "[", "denormalize_bbox", "(", "bbox", ",", "rows", ",", "cols", ")", "for", "bbox", "in", "bboxes", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.calculate_bbox_area": [[147, 163], ["bbox_utils.denormalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox"], ["", "def", "calculate_bbox_area", "(", "bbox", ",", "rows", ",", "cols", ")", ":", "\n", "    ", "\"\"\"Calculate the area of a bounding box in pixels.\n\n    Args:\n        bbox (tuple): A bounding box `(x_min, y_min, x_max, y_max)`.\n        rows (int): Image height.\n        cols (int): Image width.\n\n    Return:\n        int: Area of a bounding box in pixels.\n\n    \"\"\"", "\n", "bbox", "=", "denormalize_bbox", "(", "bbox", ",", "rows", ",", "cols", ")", "\n", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", "=", "bbox", "[", ":", "4", "]", "\n", "area", "=", "(", "x_max", "-", "x_min", ")", "*", "(", "y_max", "-", "y_min", ")", "\n", "return", "area", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility": [[165, 198], ["zip", "bbox_utils.calculate_bbox_area", "bbox_utils.calculate_bbox_area", "all", "visible_bboxes.append"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.calculate_bbox_area", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.calculate_bbox_area"], ["", "def", "filter_bboxes_by_visibility", "(", "\n", "original_shape", ",", "bboxes", ",", "transformed_shape", ",", "transformed_bboxes", ",", "threshold", "=", "0.0", ",", "min_area", "=", "0.0", "\n", ")", ":", "\n", "    ", "\"\"\"Filter bounding boxes and return only those boxes whose visibility after transformation is above\n    the threshold and minimal area of bounding box in pixels is more then min_area.\n\n    Args:\n        original_shape (tuple): Original image shape `(height, width)`.\n        bboxes (List[tuple]): Original bounding boxes `[(x_min, y_min, x_max, y_max)]`.\n        transformed_shape (tuple): Transformed image shape `(height, width)`.\n        transformed_bboxes (List[tuple]): Transformed bounding boxes `[(x_min, y_min, x_max, y_max)]`.\n        threshold (float): visibility threshold. Should be a value in the range [0.0, 1.0].\n        min_area (float): Minimal area threshold.\n\n    Returns:\n        List[tuple]: Filtered bounding boxes `[(x_min, y_min, x_max, y_max)]`.\n\n    \"\"\"", "\n", "img_height", ",", "img_width", "=", "original_shape", "[", ":", "2", "]", "\n", "transformed_img_height", ",", "transformed_img_width", "=", "transformed_shape", "[", ":", "2", "]", "\n", "\n", "visible_bboxes", "=", "[", "]", "\n", "for", "bbox", ",", "transformed_bbox", "in", "zip", "(", "bboxes", ",", "transformed_bboxes", ")", ":", "\n", "        ", "if", "not", "all", "(", "0.0", "<=", "value", "<=", "1.0", "for", "value", "in", "transformed_bbox", "[", ":", "4", "]", ")", ":", "\n", "            ", "continue", "\n", "", "bbox_area", "=", "calculate_bbox_area", "(", "bbox", ",", "img_height", ",", "img_width", ")", "\n", "transformed_bbox_area", "=", "calculate_bbox_area", "(", "transformed_bbox", ",", "transformed_img_height", ",", "transformed_img_width", ")", "\n", "if", "transformed_bbox_area", "<", "min_area", ":", "\n", "            ", "continue", "\n", "", "visibility", "=", "transformed_bbox_area", "/", "bbox_area", "\n", "if", "visibility", ">=", "threshold", ":", "\n", "            ", "visible_bboxes", ".", "append", "(", "transformed_bbox", ")", "\n", "", "", "return", "visible_bboxes", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations": [[200, 261], ["isinstance", "ValueError", "normalize_bbox.tolist", "bbox_utils.normalize_bbox", "bbox_utils.check_bbox", "tuple", "numpy.array", "tuple", "numpy.any", "ValueError", "tuple"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.check_bbox"], ["", "def", "convert_bbox_to_albumentations", "(", "bbox", ",", "source_format", ",", "rows", ",", "cols", ",", "check_validity", "=", "False", ")", ":", "\n", "    ", "\"\"\"Convert a bounding box from a format specified in `source_format` to the format used by albumentations:\n    normalized coordinates of top-left and bottom-right corners of the bounding box in a form of\n    `(x_min, y_min, x_max, y_max)` e.g. `(0.15, 0.27, 0.67, 0.5)`.\n\n    Args:\n        bbox (tuple): A bounding box tuple.\n        source_format (str): format of the bounding box. Should be 'coco', 'pascal_voc', or 'yolo'.\n        check_validity (bool): Check if all boxes are valid boxes.\n        rows (int): Image height.\n        cols (int): Image width.\n\n    Returns:\n        tuple: A bounding box `(x_min, y_min, x_max, y_max)`.\n\n    Note:\n        The `coco` format of a bounding box looks like `(x_min, y_min, width, height)`, e.g. (97, 12, 150, 200).\n        The `pascal_voc` format of a bounding box looks like `(x_min, y_min, x_max, y_max)`, e.g. (97, 12, 247, 212).\n        The `yolo` format of a bounding box looks like `(x, y, width, height)`, e.g. (0.3, 0.1, 0.05, 0.07);\n        where `x`, `y` coordinates of the center of the box, all values normalized to 1 by image height and width.\n\n    Raises:\n        ValueError: if `target_format` is not equal to `coco` or `pascal_voc`, ot `yolo`.\n        ValueError: If in YOLO format all labels not in range (0, 1).\n\n    \"\"\"", "\n", "if", "source_format", "not", "in", "{", "\"coco\"", ",", "\"pascal_voc\"", ",", "\"yolo\"", "}", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Unknown source_format {}. Supported formats are: 'coco', 'pascal_voc' and 'yolo'\"", ".", "format", "(", "source_format", ")", "\n", ")", "\n", "", "if", "isinstance", "(", "bbox", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "bbox", "=", "bbox", ".", "tolist", "(", ")", "\n", "\n", "", "if", "source_format", "==", "\"coco\"", ":", "\n", "        ", "(", "x_min", ",", "y_min", ",", "width", ",", "height", ")", ",", "tail", "=", "bbox", "[", ":", "4", "]", ",", "tuple", "(", "bbox", "[", "4", ":", "]", ")", "\n", "x_max", "=", "x_min", "+", "width", "\n", "y_max", "=", "y_min", "+", "height", "\n", "", "elif", "source_format", "==", "\"yolo\"", ":", "\n", "# https://github.com/pjreddie/darknet/blob/f6d861736038da22c9eb0739dca84003c5a5e275/scripts/voc_label.py#L12", "\n", "        ", "bbox", ",", "tail", "=", "bbox", "[", ":", "4", "]", ",", "tuple", "(", "bbox", "[", "4", ":", "]", ")", "\n", "_bbox", "=", "np", ".", "array", "(", "bbox", "[", ":", "4", "]", ")", "\n", "if", "check_validity", "and", "np", ".", "any", "(", "(", "_bbox", "<=", "0", ")", "|", "(", "_bbox", ">", "1", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"In YOLO format all coordinates must be float and in range (0, 1]\"", ")", "\n", "\n", "", "x", ",", "y", ",", "w", ",", "h", "=", "bbox", "\n", "\n", "w_half", ",", "h_half", "=", "w", "/", "2", ",", "h", "/", "2", "\n", "x_min", "=", "x", "-", "w_half", "\n", "y_min", "=", "y", "-", "h_half", "\n", "x_max", "=", "x_min", "+", "w", "\n", "y_max", "=", "y_min", "+", "h", "\n", "", "else", ":", "\n", "        ", "(", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", ")", ",", "tail", "=", "bbox", "[", ":", "4", "]", ",", "tuple", "(", "bbox", "[", "4", ":", "]", ")", "\n", "\n", "", "bbox", "=", "(", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", ")", "+", "tail", "\n", "\n", "if", "source_format", "!=", "\"yolo\"", ":", "\n", "        ", "bbox", "=", "normalize_bbox", "(", "bbox", ",", "rows", ",", "cols", ")", "\n", "", "if", "check_validity", ":", "\n", "        ", "check_bbox", "(", "bbox", ")", "\n", "", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations": [[263, 307], ["ValueError", "bbox_utils.check_bbox", "bbox_utils.denormalize_bbox", "tuple"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.check_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox"], ["", "def", "convert_bbox_from_albumentations", "(", "bbox", ",", "target_format", ",", "rows", ",", "cols", ",", "check_validity", "=", "False", ")", ":", "\n", "    ", "\"\"\"Convert a bounding box from the format used by albumentations to a format, specified in `target_format`.\n\n    Args:\n        bbox (tuple): An albumentation bounding box `(x_min, y_min, x_max, y_max)`.\n        target_format (str): required format of the output bounding box. Should be 'coco', 'pascal_voc' or 'yolo'.\n        rows (int): Image height.\n        cols (int): Image width.\n        check_validity (bool): Check if all boxes are valid boxes.\n\n    Returns:\n        tuple: A bounding box.\n\n    Note:\n        The `coco` format of a bounding box looks like `[x_min, y_min, width, height]`, e.g. [97, 12, 150, 200].\n        The `pascal_voc` format of a bounding box looks like `[x_min, y_min, x_max, y_max]`, e.g. [97, 12, 247, 212].\n        The `yolo` format of a bounding box looks like `[x, y, width, height]`, e.g. [0.3, 0.1, 0.05, 0.07].\n\n    Raises:\n        ValueError: if `target_format` is not equal to `coco`, `pascal_voc` or `yolo`.\n\n    \"\"\"", "\n", "if", "target_format", "not", "in", "{", "\"coco\"", ",", "\"pascal_voc\"", ",", "\"yolo\"", "}", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Unknown target_format {}. Supported formats are: 'coco', 'pascal_voc' and 'yolo'\"", ".", "format", "(", "target_format", ")", "\n", ")", "\n", "", "if", "check_validity", ":", "\n", "        ", "check_bbox", "(", "bbox", ")", "\n", "\n", "", "if", "target_format", "!=", "\"yolo\"", ":", "\n", "        ", "bbox", "=", "denormalize_bbox", "(", "bbox", ",", "rows", ",", "cols", ")", "\n", "", "if", "target_format", "==", "\"coco\"", ":", "\n", "        ", "(", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", ")", ",", "tail", "=", "bbox", "[", ":", "4", "]", ",", "tuple", "(", "bbox", "[", "4", ":", "]", ")", "\n", "width", "=", "x_max", "-", "x_min", "\n", "height", "=", "y_max", "-", "y_min", "\n", "bbox", "=", "(", "x_min", ",", "y_min", ",", "width", ",", "height", ")", "+", "tail", "\n", "", "elif", "target_format", "==", "\"yolo\"", ":", "\n", "        ", "(", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", ")", ",", "tail", "=", "bbox", "[", ":", "4", "]", ",", "bbox", "[", "4", ":", "]", "\n", "x", "=", "(", "x_min", "+", "x_max", ")", "/", "2.0", "\n", "y", "=", "(", "y_min", "+", "y_max", ")", "/", "2.0", "\n", "w", "=", "x_max", "-", "x_min", "\n", "h", "=", "y_max", "-", "y_min", "\n", "bbox", "=", "(", "x", ",", "y", ",", "w", ",", "h", ")", "+", "tail", "\n", "", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations": [[309, 312], ["bbox_utils.convert_bbox_to_albumentations"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations"], ["", "def", "convert_bboxes_to_albumentations", "(", "bboxes", ",", "source_format", ",", "rows", ",", "cols", ",", "check_validity", "=", "False", ")", ":", "\n", "    ", "\"\"\"Convert a list bounding boxes from a format specified in `source_format` to the format used by albumentations\"\"\"", "\n", "return", "[", "convert_bbox_to_albumentations", "(", "bbox", ",", "source_format", ",", "rows", ",", "cols", ",", "check_validity", ")", "for", "bbox", "in", "bboxes", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations": [[314, 330], ["bbox_utils.convert_bbox_from_albumentations"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations"], ["", "def", "convert_bboxes_from_albumentations", "(", "bboxes", ",", "target_format", ",", "rows", ",", "cols", ",", "check_validity", "=", "False", ")", ":", "\n", "    ", "\"\"\"Convert a list of bounding boxes from the format used by albumentations to a format, specified\n    in `target_format`.\n\n    Args:\n        bboxes (List[tuple]): List of albumentation bounding box `(x_min, y_min, x_max, y_max)`.\n        target_format (str): required format of the output bounding box. Should be 'coco', 'pascal_voc' or 'yolo'.\n        rows (int): Image height.\n        cols (int): Image width.\n        check_validity (bool): Check if all boxes are valid boxes.\n\n    Returns:\n        list[tuple]: List of bounding box.\n\n    \"\"\"", "\n", "return", "[", "convert_bbox_from_albumentations", "(", "bbox", ",", "target_format", ",", "rows", ",", "cols", ",", "check_validity", ")", "for", "bbox", "in", "bboxes", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.check_bbox": [[332, 345], ["zip", "ValueError", "ValueError", "ValueError", "numpy.isclose", "numpy.isclose"], "function", ["None"], ["", "def", "check_bbox", "(", "bbox", ")", ":", "\n", "    ", "\"\"\"Check if bbox boundaries are in range 0, 1 and minimums are lesser then maximums\"\"\"", "\n", "for", "name", ",", "value", "in", "zip", "(", "[", "\"x_min\"", ",", "\"y_min\"", ",", "\"x_max\"", ",", "\"y_max\"", "]", ",", "bbox", "[", ":", "4", "]", ")", ":", "\n", "        ", "if", "not", "0", "<=", "value", "<=", "1", "and", "not", "np", ".", "isclose", "(", "value", ",", "0", ")", "and", "not", "np", ".", "isclose", "(", "value", ",", "1", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Expected {name} for bbox {bbox} \"", "\n", "\"to be in the range [0.0, 1.0], got {value}.\"", ".", "format", "(", "bbox", "=", "bbox", ",", "name", "=", "name", ",", "value", "=", "value", ")", "\n", ")", "\n", "", "", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", "=", "bbox", "[", ":", "4", "]", "\n", "if", "x_max", "<=", "x_min", ":", "\n", "        ", "raise", "ValueError", "(", "\"x_max is less than or equal to x_min for bbox {bbox}.\"", ".", "format", "(", "bbox", "=", "bbox", ")", ")", "\n", "", "if", "y_max", "<=", "y_min", ":", "\n", "        ", "raise", "ValueError", "(", "\"y_max is less than or equal to y_min for bbox {bbox}.\"", ".", "format", "(", "bbox", "=", "bbox", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.check_bboxes": [[347, 351], ["bbox_utils.check_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.check_bbox"], ["", "", "def", "check_bboxes", "(", "bboxes", ")", ":", "\n", "    ", "\"\"\"Check if bboxes boundaries are in range 0, 1 and minimums are lesser then maximums\"\"\"", "\n", "for", "bbox", "in", "bboxes", ":", "\n", "        ", "check_bbox", "(", "bbox", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.filter_bboxes": [[353, 382], ["bbox_utils.calculate_bbox_area", "bbox_utils.calculate_bbox_area", "resulting_boxes.append", "tuple", "tuple", "tuple", "bbox_utils.calculate_bbox_area", "numpy.clip", "numpy.clip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.calculate_bbox_area", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.calculate_bbox_area", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.calculate_bbox_area", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], ["", "", "def", "filter_bboxes", "(", "bboxes", ",", "rows", ",", "cols", ",", "min_area", "=", "0.0", ",", "min_visibility", "=", "0.0", ")", ":", "\n", "    ", "\"\"\"Remove bounding boxes that either lie outside of the visible area by more then min_visibility\n    or whose area in pixels is under the threshold set by `min_area`. Also it crops boxes to final image size.\n\n    Args:\n        bboxes (List[tuple]): List of albumentation bounding box `(x_min, y_min, x_max, y_max)`.\n        rows (int): Image height.\n        cols (int): Image width.\n        min_area (float): Minimum area of a bounding box. All bounding boxes whose visible area in pixels.\n            is less than this value will be removed. Default: 0.0.\n        min_visibility (float): Minimum fraction of area for a bounding box to remain this box in list. Default: 0.0.\n\n    Returns:\n        List[tuple]: List of bounding box.\n\n    \"\"\"", "\n", "resulting_boxes", "=", "[", "]", "\n", "for", "bbox", "in", "bboxes", ":", "\n", "        ", "transformed_box_area", "=", "calculate_bbox_area", "(", "bbox", ",", "rows", ",", "cols", ")", "\n", "bbox", ",", "tail", "=", "tuple", "(", "np", ".", "clip", "(", "bbox", "[", ":", "4", "]", ",", "0", ",", "1.0", ")", ")", ",", "tuple", "(", "bbox", "[", "4", ":", "]", ")", "\n", "clipped_box_area", "=", "calculate_bbox_area", "(", "bbox", ",", "rows", ",", "cols", ")", "\n", "if", "not", "transformed_box_area", "or", "clipped_box_area", "/", "transformed_box_area", "<=", "min_visibility", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "bbox", "=", "tuple", "(", "np", ".", "clip", "(", "bbox", "[", ":", "4", "]", ",", "0", ",", "1.0", ")", ")", "\n", "", "if", "calculate_bbox_area", "(", "bbox", ",", "rows", ",", "cols", ")", "<=", "min_area", ":", "\n", "            ", "continue", "\n", "", "resulting_boxes", ".", "append", "(", "bbox", "+", "tail", ")", "\n", "", "return", "resulting_boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.union_of_bboxes": [[384, 408], ["numpy.min", "numpy.min", "numpy.max", "numpy.max"], "function", ["None"], ["", "def", "union_of_bboxes", "(", "height", ",", "width", ",", "bboxes", ",", "erosion_rate", "=", "0.0", ")", ":", "\n", "    ", "\"\"\"Calculate union of bounding boxes.\n\n    Args:\n        height (float): Height of image or space.\n        width (float): Width of image or space.\n        bboxes (List[tuple]): List like bounding boxes. Format is `[(x_min, y_min, x_max, y_max)]`.\n        erosion_rate (float): How much each bounding box can be shrinked, useful for erosive cropping.\n            Set this in range [0, 1]. 0 will not be erosive at all, 1.0 can make any bbox to lose its volume.\n\n    Returns:\n        tuple: A bounding box `(x_min, y_min, x_max, y_max)`.\n\n    \"\"\"", "\n", "x1", ",", "y1", "=", "width", ",", "height", "\n", "x2", ",", "y2", "=", "0", ",", "0", "\n", "for", "bbox", "in", "bboxes", ":", "\n", "        ", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", "=", "bbox", "[", ":", "4", "]", "\n", "w", ",", "h", "=", "x_max", "-", "x_min", ",", "y_max", "-", "y_min", "\n", "lim_x1", ",", "lim_y1", "=", "x_min", "+", "erosion_rate", "*", "w", ",", "y_min", "+", "erosion_rate", "*", "h", "\n", "lim_x2", ",", "lim_y2", "=", "x_max", "-", "erosion_rate", "*", "w", ",", "y_max", "-", "erosion_rate", "*", "h", "\n", "x1", ",", "y1", "=", "np", ".", "min", "(", "[", "x1", ",", "lim_x1", "]", ")", ",", "np", ".", "min", "(", "[", "y1", ",", "lim_y1", "]", ")", "\n", "x2", ",", "y2", "=", "np", ".", "max", "(", "[", "x2", ",", "lim_x2", "]", ")", ",", "np", ".", "max", "(", "[", "y2", ",", "lim_y2", "]", ")", "\n", "", "return", "x1", ",", "y1", ",", "x2", ",", "y2", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.HistogramMatching.__init__": [[151, 163], ["core.transforms_interface.ImageOnlyTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "reference_images", ":", "List", "[", "Union", "[", "str", ",", "np", ".", "ndarray", "]", "]", ",", "\n", "blend_ratio", "=", "(", "0.5", ",", "1.0", ")", ",", "\n", "read_fn", "=", "read_rgb_image", ",", "\n", "always_apply", "=", "False", ",", "\n", "p", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "always_apply", "=", "always_apply", ",", "p", "=", "p", ")", "\n", "self", ".", "reference_images", "=", "reference_images", "\n", "self", ".", "read_fn", "=", "read_fn", "\n", "self", ".", "blend_ratio", "=", "blend_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.HistogramMatching.apply": [[164, 166], ["domain_adaptation.apply_histogram"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.apply_histogram"], ["", "def", "apply", "(", "self", ",", "img", ",", "reference_image", "=", "None", ",", "blend_ratio", "=", "0.5", ",", "**", "params", ")", ":", "\n", "        ", "return", "apply_histogram", "(", "img", ",", "reference_image", ",", "blend_ratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.HistogramMatching.get_params": [[167, 171], ["domain_adaptation.HistogramMatching.read_fn", "random.uniform", "random.choice"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice"], ["", "def", "get_params", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "\"reference_image\"", ":", "self", ".", "read_fn", "(", "random", ".", "choice", "(", "self", ".", "reference_images", ")", ")", ",", "\n", "\"blend_ratio\"", ":", "random", ".", "uniform", "(", "self", ".", "blend_ratio", "[", "0", "]", ",", "self", ".", "blend_ratio", "[", "1", "]", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.HistogramMatching.get_transform_init_args_names": [[173, 175], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\"reference_images\"", ",", "\"blend_ratio\"", ",", "\"read_fn\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.HistogramMatching._to_dict": [[176, 178], ["NotImplementedError"], "methods", ["None"], ["", "def", "_to_dict", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"HistogramMatching can not be serialized.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.FDA.__init__": [[212, 224], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], ["def", "__init__", "(", "\n", "self", ",", "\n", "reference_images", ":", "List", "[", "Union", "[", "str", ",", "np", ".", "ndarray", "]", "]", ",", "\n", "beta_limit", "=", "0.1", ",", "\n", "read_fn", "=", "read_rgb_image", ",", "\n", "always_apply", "=", "False", ",", "\n", "p", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", "FDA", ",", "self", ")", ".", "__init__", "(", "always_apply", "=", "always_apply", ",", "p", "=", "p", ")", "\n", "self", ".", "reference_images", "=", "reference_images", "\n", "self", ".", "read_fn", "=", "read_fn", "\n", "self", ".", "beta_limit", "=", "to_tuple", "(", "beta_limit", ",", "low", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.FDA.apply": [[225, 227], ["domain_adaptation.fourier_domain_adaptation"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.fourier_domain_adaptation"], ["", "def", "apply", "(", "self", ",", "img", ",", "target_image", "=", "None", ",", "beta", "=", "0.1", ",", "**", "params", ")", ":", "\n", "        ", "return", "fourier_domain_adaptation", "(", "img", "=", "img", ",", "target_img", "=", "target_image", ",", "beta", "=", "beta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.FDA.get_params_dependent_on_targets": [[228, 234], ["domain_adaptation.FDA.read_fn", "cv2.resize", "random.choice"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ")", ":", "\n", "        ", "img", "=", "params", "[", "\"image\"", "]", "\n", "target_img", "=", "self", ".", "read_fn", "(", "random", ".", "choice", "(", "self", ".", "reference_images", ")", ")", "\n", "target_img", "=", "cv2", ".", "resize", "(", "target_img", ",", "dsize", "=", "(", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "return", "{", "\"target_image\"", ":", "target_img", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.FDA.get_params": [[235, 237], ["random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "def", "get_params", "(", "self", ")", ":", "\n", "        ", "return", "{", "\"beta\"", ":", "random", ".", "uniform", "(", "self", ".", "beta_limit", "[", "0", "]", ",", "self", ".", "beta_limit", "[", "1", "]", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.FDA.targets_as_params": [[238, 241], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets_as_params", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"image\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.FDA.get_transform_init_args_names": [[242, 244], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\"reference_images\"", ",", "\"beta_limit\"", ",", "\"read_fn\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.FDA._to_dict": [[245, 247], ["NotImplementedError"], "methods", ["None"], ["", "def", "_to_dict", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"FDA can not be serialized.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.PixelDistributionAdaptation.__init__": [[275, 294], ["core.transforms_interface.ImageOnlyTransform.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "reference_images", ":", "List", "[", "Union", "[", "str", ",", "np", ".", "ndarray", "]", "]", ",", "\n", "blend_ratio", ":", "Tuple", "[", "float", ",", "float", "]", "=", "(", "0.25", ",", "1.0", ")", ",", "\n", "read_fn", ":", "Callable", "[", "[", "Union", "[", "str", ",", "np", ".", "ndarray", "]", "]", ",", "np", ".", "ndarray", "]", "=", "read_rgb_image", ",", "\n", "transform_type", ":", "str", "=", "\"pca\"", ",", "\n", "always_apply", "=", "False", ",", "\n", "p", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "always_apply", "=", "always_apply", ",", "p", "=", "p", ")", "\n", "self", ".", "reference_images", "=", "reference_images", "\n", "self", ".", "read_fn", "=", "read_fn", "\n", "self", ".", "blend_ratio", "=", "blend_ratio", "\n", "expected_transformers", "=", "(", "\"pca\"", ",", "\"standard\"", ",", "\"minmax\"", ")", "\n", "if", "transform_type", "not", "in", "expected_transformers", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f\"Got unexpected transform_type {transform_type}. Expected one of {expected_transformers}\"", "\n", ")", "\n", "", "self", ".", "transform_type", "=", "transform_type", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.PixelDistributionAdaptation._validate_shape": [[295, 300], ["functional.is_grayscale_image", "functional.is_multispectral_image", "ValueError", "len"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_multispectral_image"], ["", "@", "staticmethod", "\n", "def", "_validate_shape", "(", "img", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "if", "is_grayscale_image", "(", "img", ")", "or", "is_multispectral_image", "(", "img", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f\"Unexpected image shape: expected 3 dimensions, got {len(img.shape)}.\"", "\n", "f\"Is it a grayscale or multispectral image? It's not supported for now.\"", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.PixelDistributionAdaptation.ensure_uint8": [[303, 313], ["TypeError", "img.min", "img.max"], "methods", ["None"], ["", "", "def", "ensure_uint8", "(", "self", ",", "img", ":", "np", ".", "ndarray", ")", "->", "Tuple", "[", "np", ".", "ndarray", ",", "bool", "]", ":", "\n", "        ", "if", "img", ".", "dtype", "==", "np", ".", "float32", ":", "\n", "            ", "if", "img", ".", "min", "(", ")", "<", "0", "or", "img", ".", "max", "(", ")", ">", "1", ":", "\n", "                ", "message", "=", "(", "\n", "\"PixelDistributionAdaptation uses uint8 under the hood, so float32 should be converted,\"", "\n", "\"Can not do it automatically when the image is out of [0..1] range.\"", "\n", ")", "\n", "raise", "TypeError", "(", "message", ")", "\n", "", "return", "(", "img", "*", "255", ")", ".", "astype", "(", "\"uint8\"", ")", ",", "True", "\n", "", "return", "img", ",", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.PixelDistributionAdaptation.apply": [[314, 328], ["domain_adaptation.PixelDistributionAdaptation._validate_shape", "domain_adaptation.PixelDistributionAdaptation.ensure_uint8", "domain_adaptation.PixelDistributionAdaptation.ensure_uint8", "domain_adaptation.adapt_pixel_distribution", "adapt_pixel_distribution.astype"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.PixelDistributionAdaptation._validate_shape", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.PixelDistributionAdaptation.ensure_uint8", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.PixelDistributionAdaptation.ensure_uint8", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.adapt_pixel_distribution"], ["", "def", "apply", "(", "self", ",", "img", ",", "reference_image", ",", "blend_ratio", ",", "**", "params", ")", ":", "\n", "        ", "self", ".", "_validate_shape", "(", "img", ")", "\n", "reference_image", ",", "_", "=", "self", ".", "ensure_uint8", "(", "reference_image", ")", "\n", "img", ",", "needs_reconvert", "=", "self", ".", "ensure_uint8", "(", "img", ")", "\n", "\n", "adapted", "=", "adapt_pixel_distribution", "(", "\n", "img", "=", "img", ",", "\n", "ref", "=", "reference_image", ",", "\n", "weight", "=", "blend_ratio", ",", "\n", "transform_type", "=", "self", ".", "transform_type", ",", "\n", ")", "\n", "if", "needs_reconvert", ":", "\n", "            ", "adapted", "=", "adapted", ".", "astype", "(", "\"float32\"", ")", "*", "(", "1", "/", "255", ")", "\n", "", "return", "adapted", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.PixelDistributionAdaptation.get_params": [[329, 333], ["domain_adaptation.PixelDistributionAdaptation.read_fn", "random.uniform", "random.choice"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice"], ["", "def", "get_params", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "\"reference_image\"", ":", "self", ".", "read_fn", "(", "random", ".", "choice", "(", "self", ".", "reference_images", ")", ")", ",", "\n", "\"blend_ratio\"", ":", "random", ".", "uniform", "(", "self", ".", "blend_ratio", "[", "0", "]", ",", "self", ".", "blend_ratio", "[", "1", "]", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.PixelDistributionAdaptation.get_transform_init_args_names": [[335, 337], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\"reference_images\"", ",", "\"blend_ratio\"", ",", "\"read_fn\"", ",", "\"transform_type\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.PixelDistributionAdaptation._to_dict": [[338, 340], ["NotImplementedError"], "methods", ["None"], ["", "def", "_to_dict", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"PixelDistributionAdaptation can not be serialized.\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.fourier_domain_adaptation": [[31, 82], ["numpy.squeeze", "numpy.squeeze", "numpy.fft.fft2", "numpy.fft.fft2", "numpy.abs", "numpy.fft.fftshift", "numpy.fft.fftshift", "numpy.floor().astype", "numpy.floor().astype", "numpy.fft.ifftshift", "numpy.fft.ifft2", "numpy.real", "ValueError", "np.squeeze.astype", "np.squeeze.astype", "numpy.abs", "numpy.angle", "numpy.floor", "numpy.floor", "numpy.exp", "min"], "function", ["None"], ["@", "clipped", "\n", "@", "preserve_shape", "\n", "def", "fourier_domain_adaptation", "(", "img", ":", "np", ".", "ndarray", ",", "target_img", ":", "np", ".", "ndarray", ",", "beta", ":", "float", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "\"\"\"\n    Fourier Domain Adaptation from https://github.com/YanchaoYang/FDA\n\n    Args:\n        img:  source image\n        target_img:  target image for domain adaptation\n        beta: coefficient from source paper\n\n    Returns:\n        transformed image\n\n    \"\"\"", "\n", "\n", "img", "=", "np", ".", "squeeze", "(", "img", ")", "\n", "target_img", "=", "np", ".", "squeeze", "(", "target_img", ")", "\n", "\n", "if", "target_img", ".", "shape", "!=", "img", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"The source and target images must have the same shape,\"", "\n", "\" but got {} and {} respectively.\"", ".", "format", "(", "img", ".", "shape", ",", "target_img", ".", "shape", ")", "\n", ")", "\n", "\n", "# get fft of both source and target", "\n", "", "fft_src", "=", "np", ".", "fft", ".", "fft2", "(", "img", ".", "astype", "(", "np", ".", "float32", ")", ",", "axes", "=", "(", "0", ",", "1", ")", ")", "\n", "fft_trg", "=", "np", ".", "fft", ".", "fft2", "(", "target_img", ".", "astype", "(", "np", ".", "float32", ")", ",", "axes", "=", "(", "0", ",", "1", ")", ")", "\n", "\n", "# extract amplitude and phase of both fft-s", "\n", "amplitude_src", ",", "phase_src", "=", "np", ".", "abs", "(", "fft_src", ")", ",", "np", ".", "angle", "(", "fft_src", ")", "\n", "amplitude_trg", "=", "np", ".", "abs", "(", "fft_trg", ")", "\n", "\n", "# mutate the amplitude part of source with target", "\n", "amplitude_src", "=", "np", ".", "fft", ".", "fftshift", "(", "amplitude_src", ",", "axes", "=", "(", "0", ",", "1", ")", ")", "\n", "amplitude_trg", "=", "np", ".", "fft", ".", "fftshift", "(", "amplitude_trg", ",", "axes", "=", "(", "0", ",", "1", ")", ")", "\n", "height", ",", "width", "=", "amplitude_src", ".", "shape", "[", ":", "2", "]", "\n", "border", "=", "np", ".", "floor", "(", "min", "(", "height", ",", "width", ")", "*", "beta", ")", ".", "astype", "(", "int", ")", "\n", "center_y", ",", "center_x", "=", "np", ".", "floor", "(", "[", "height", "/", "2.0", ",", "width", "/", "2.0", "]", ")", ".", "astype", "(", "int", ")", "\n", "\n", "y1", ",", "y2", "=", "center_y", "-", "border", ",", "center_y", "+", "border", "+", "1", "\n", "x1", ",", "x2", "=", "center_x", "-", "border", ",", "center_x", "+", "border", "+", "1", "\n", "\n", "amplitude_src", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "amplitude_trg", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "\n", "amplitude_src", "=", "np", ".", "fft", ".", "ifftshift", "(", "amplitude_src", ",", "axes", "=", "(", "0", ",", "1", ")", ")", "\n", "\n", "# get mutated image", "\n", "src_image_transformed", "=", "np", ".", "fft", ".", "ifft2", "(", "amplitude_src", "*", "np", ".", "exp", "(", "1j", "*", "phase_src", ")", ",", "axes", "=", "(", "0", ",", "1", ")", ")", "\n", "src_image_transformed", "=", "np", ".", "real", "(", "src_image_transformed", ")", "\n", "\n", "return", "src_image_transformed", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.apply_histogram": [[84, 108], ["cv2.addWeighted", "RuntimeError", "cv2.resize", "numpy.squeeze", "numpy.squeeze", "skimage.exposure.match_histograms", "skimage.exposure.match_histograms", "functional.get_opencv_dtype_from_numpy", "len"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy"], ["", "@", "preserve_shape", "\n", "def", "apply_histogram", "(", "img", ":", "np", ".", "ndarray", ",", "reference_image", ":", "np", ".", "ndarray", ",", "blend_ratio", ":", "float", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "if", "img", ".", "dtype", "!=", "reference_image", ".", "dtype", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "f\"Dtype of image and reference image must be the same. Got {img.dtype} and {reference_image.dtype}\"", "\n", ")", "\n", "", "if", "img", ".", "shape", "[", ":", "2", "]", "!=", "reference_image", ".", "shape", "[", ":", "2", "]", ":", "\n", "        ", "reference_image", "=", "cv2", ".", "resize", "(", "reference_image", ",", "dsize", "=", "(", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "", "img", ",", "reference_image", "=", "np", ".", "squeeze", "(", "img", ")", ",", "np", ".", "squeeze", "(", "reference_image", ")", "\n", "\n", "try", ":", "\n", "        ", "matched", "=", "match_histograms", "(", "img", ",", "reference_image", ",", "channel_axis", "=", "2", "if", "len", "(", "img", ".", "shape", ")", "==", "3", "else", "None", ")", "\n", "", "except", "TypeError", ":", "\n", "        ", "matched", "=", "match_histograms", "(", "img", ",", "reference_image", ",", "multichannel", "=", "True", ")", "# case for scikit-image<0.19.1", "\n", "", "img", "=", "cv2", ".", "addWeighted", "(", "\n", "matched", ",", "\n", "blend_ratio", ",", "\n", "img", ",", "\n", "1", "-", "blend_ratio", ",", "\n", "0", ",", "\n", "dtype", "=", "get_opencv_dtype_from_numpy", "(", "img", ".", "dtype", ")", ",", "\n", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.domain_adaptation.adapt_pixel_distribution": [[110, 120], ["qudida.DomainAdapter", "qudida.DomainAdapter.astype", "qudida.DomainAdapter.", "img.astype"], "function", ["None"], ["", "@", "preserve_shape", "\n", "def", "adapt_pixel_distribution", "(", "\n", "img", ":", "np", ".", "ndarray", ",", "ref", ":", "np", ".", "ndarray", ",", "transform_type", ":", "str", "=", "\"pca\"", ",", "weight", ":", "float", "=", "0.5", "\n", ")", "->", "np", ".", "ndarray", ":", "\n", "    ", "initial_type", "=", "img", ".", "dtype", "\n", "transformer", "=", "{", "\"pca\"", ":", "PCA", ",", "\"standard\"", ":", "StandardScaler", ",", "\"minmax\"", ":", "MinMaxScaler", "}", "[", "transform_type", "]", "(", ")", "\n", "adapter", "=", "DomainAdapter", "(", "transformer", "=", "transformer", ",", "ref_img", "=", "ref", ")", "\n", "result", "=", "adapter", "(", "img", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "blended", "=", "(", "img", ".", "astype", "(", "\"float32\"", ")", "*", "(", "1", "-", "weight", ")", "+", "result", "*", "weight", ")", ".", "astype", "(", "initial_type", ")", "\n", "return", "blended", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.KeypointsProcessor.default_data_name": [[26, 29], ["None"], "methods", ["None"], ["    ", "@", "property", "\n", "def", "default_data_name", "(", "self", ")", ":", "\n", "        ", "return", "\"keypoints\"", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.KeypointsProcessor.ensure_data_valid": [[30, 35], ["all", "ValueError", "data.keys"], "methods", ["None"], ["", "def", "ensure_data_valid", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "params", ".", "label_fields", ":", "\n", "            ", "if", "not", "all", "(", "i", "in", "data", ".", "keys", "(", ")", "for", "i", "in", "self", ".", "params", ".", "label_fields", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "\"Your 'label_fields' are not valid - them must have same names as params in \"", "\n", "\"'keypoint_params' dict\"", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.KeypointsProcessor.ensure_transforms_valid": [[38, 58], ["isinstance", "warnings.warn"], "methods", ["None"], ["", "", "", "def", "ensure_transforms_valid", "(", "self", ",", "transforms", ")", ":", "\n", "# IAA-based augmentations supports only transformation of xy keypoints.", "\n", "# If your keypoints formats is other than 'xy' we emit warning to let user", "\n", "# be aware that angle and size will not be modified.", "\n", "\n", "        ", "try", ":", "\n", "            ", "from", "albumentations", ".", "imgaug", ".", "transforms", "import", "DualIAATransform", "\n", "", "except", "ImportError", ":", "\n", "# imgaug is not installed so we skip imgaug checks.", "\n", "            ", "return", "\n", "\n", "", "if", "self", ".", "params", ".", "format", "is", "not", "None", "and", "self", ".", "params", ".", "format", "!=", "\"xy\"", ":", "\n", "            ", "for", "transform", "in", "transforms", ":", "\n", "                ", "if", "isinstance", "(", "transform", ",", "DualIAATransform", ")", ":", "\n", "                    ", "warnings", ".", "warn", "(", "\n", "\"{} transformation supports only 'xy' keypoints \"", "\n", "\"augmentation. You have '{}' keypoints format. Scale \"", "\n", "\"and angle WILL NOT BE transformed.\"", ".", "format", "(", "transform", ".", "__class__", ".", "__name__", ",", "self", ".", "params", ".", "format", ")", "\n", ")", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.KeypointsProcessor.filter": [[59, 61], ["keypoints_utils.filter_keypoints"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.filter_keypoints"], ["", "", "", "", "def", "filter", "(", "self", ",", "data", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "return", "filter_keypoints", "(", "data", ",", "rows", ",", "cols", ",", "remove_invisible", "=", "self", ".", "params", ".", "remove_invisible", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.KeypointsProcessor.check": [[62, 64], ["keypoints_utils.check_keypoints"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.check_keypoints"], ["", "def", "check", "(", "self", ",", "data", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "return", "check_keypoints", "(", "data", ",", "rows", ",", "cols", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.KeypointsProcessor.convert_from_albumentations": [[65, 73], ["keypoints_utils.convert_keypoints_from_albumentations"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoints_from_albumentations"], ["", "def", "convert_from_albumentations", "(", "self", ",", "data", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "return", "convert_keypoints_from_albumentations", "(", "\n", "data", ",", "\n", "self", ".", "params", ".", "format", ",", "\n", "rows", ",", "\n", "cols", ",", "\n", "check_validity", "=", "self", ".", "params", ".", "remove_invisible", ",", "\n", "angle_in_degrees", "=", "self", ".", "params", ".", "angle_in_degrees", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.KeypointsProcessor.convert_to_albumentations": [[75, 83], ["keypoints_utils.convert_keypoints_to_albumentations"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoints_to_albumentations"], ["", "def", "convert_to_albumentations", "(", "self", ",", "data", ",", "rows", ",", "cols", ")", ":", "\n", "        ", "return", "convert_keypoints_to_albumentations", "(", "\n", "data", ",", "\n", "self", ".", "params", ".", "format", ",", "\n", "rows", ",", "\n", "cols", ",", "\n", "check_validity", "=", "self", ".", "params", ".", "remove_invisible", ",", "\n", "angle_in_degrees", "=", "self", ".", "params", ".", "angle_in_degrees", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.angle_to_2pi_range": [[20, 23], ["None"], "function", ["None"], ["def", "angle_to_2pi_range", "(", "angle", ")", ":", "\n", "    ", "two_pi", "=", "2", "*", "math", ".", "pi", "\n", "return", "angle", "%", "two_pi", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.check_keypoint": [[86, 98], ["zip", "ValueError", "ValueError"], "function", ["None"], ["", "", "def", "check_keypoint", "(", "kp", ",", "rows", ",", "cols", ")", ":", "\n", "    ", "\"\"\"Check if keypoint coordinates are less than image shapes\"\"\"", "\n", "for", "name", ",", "value", ",", "size", "in", "zip", "(", "[", "\"x\"", ",", "\"y\"", "]", ",", "kp", "[", ":", "2", "]", ",", "[", "cols", ",", "rows", "]", ")", ":", "\n", "        ", "if", "not", "0", "<=", "value", "<", "size", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Expected {name} for keypoint {kp} \"", "\n", "\"to be in the range [0.0, {size}], got {value}.\"", ".", "format", "(", "kp", "=", "kp", ",", "name", "=", "name", ",", "value", "=", "value", ",", "size", "=", "size", ")", "\n", ")", "\n", "\n", "", "", "angle", "=", "kp", "[", "2", "]", "\n", "if", "not", "(", "0", "<=", "angle", "<", "2", "*", "math", ".", "pi", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"Keypoint angle must be in range [0, 2 * PI). Got: {angle}\"", ".", "format", "(", "angle", "=", "angle", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.check_keypoints": [[100, 104], ["keypoints_utils.check_keypoint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.check_keypoint"], ["", "", "def", "check_keypoints", "(", "keypoints", ",", "rows", ",", "cols", ")", ":", "\n", "    ", "\"\"\"Check if keypoints boundaries are less than image shapes\"\"\"", "\n", "for", "kp", "in", "keypoints", ":", "\n", "        ", "check_keypoint", "(", "kp", ",", "rows", ",", "cols", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.filter_keypoints": [[106, 119], ["resulting_keypoints.append"], "function", ["None"], ["", "", "def", "filter_keypoints", "(", "keypoints", ",", "rows", ",", "cols", ",", "remove_invisible", ")", ":", "\n", "    ", "if", "not", "remove_invisible", ":", "\n", "        ", "return", "keypoints", "\n", "\n", "", "resulting_keypoints", "=", "[", "]", "\n", "for", "kp", "in", "keypoints", ":", "\n", "        ", "x", ",", "y", "=", "kp", "[", ":", "2", "]", "\n", "if", "x", "<", "0", "or", "x", ">=", "cols", ":", "\n", "            ", "continue", "\n", "", "if", "y", "<", "0", "or", "y", ">=", "rows", ":", "\n", "            ", "continue", "\n", "", "resulting_keypoints", ".", "append", "(", "kp", ")", "\n", "", "return", "resulting_keypoints", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.keypoint_has_extra_data": [[121, 123], ["len", "len"], "function", ["None"], ["", "def", "keypoint_has_extra_data", "(", "kp", ",", "format", ")", ":", "\n", "    ", "return", "len", "(", "kp", ")", ">", "len", "(", "format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_to_albumentations": [[125, 155], ["ValueError", "math.radians", "keypoints_utils.check_keypoint", "tuple", "keypoints_utils.angle_to_2pi_range", "tuple", "tuple", "tuple", "tuple", "tuple"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.check_keypoint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.angle_to_2pi_range"], ["", "def", "convert_keypoint_to_albumentations", "(", "\n", "keypoint", ",", "source_format", ",", "rows", ",", "cols", ",", "check_validity", "=", "False", ",", "angle_in_degrees", "=", "True", "\n", ")", ":", "\n", "    ", "if", "source_format", "not", "in", "keypoint_formats", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown target_format {}. Supported formats are: {}\"", ".", "format", "(", "source_format", ",", "keypoint_formats", ")", ")", "\n", "\n", "", "if", "source_format", "==", "\"xy\"", ":", "\n", "        ", "(", "x", ",", "y", ")", ",", "tail", "=", "keypoint", "[", ":", "2", "]", ",", "tuple", "(", "keypoint", "[", "2", ":", "]", ")", "\n", "a", ",", "s", "=", "0", ",", "0", "\n", "", "elif", "source_format", "==", "\"yx\"", ":", "\n", "        ", "(", "y", ",", "x", ")", ",", "tail", "=", "keypoint", "[", ":", "2", "]", ",", "tuple", "(", "keypoint", "[", "2", ":", "]", ")", "\n", "a", ",", "s", "=", "0", ",", "0", "\n", "", "elif", "source_format", "==", "\"xya\"", ":", "\n", "        ", "(", "x", ",", "y", ",", "a", ")", ",", "tail", "=", "keypoint", "[", ":", "3", "]", ",", "tuple", "(", "keypoint", "[", "3", ":", "]", ")", "\n", "s", "=", "0", "\n", "", "elif", "source_format", "==", "\"xys\"", ":", "\n", "        ", "(", "x", ",", "y", ",", "s", ")", ",", "tail", "=", "keypoint", "[", ":", "3", "]", ",", "tuple", "(", "keypoint", "[", "3", ":", "]", ")", "\n", "a", "=", "0", "\n", "", "elif", "source_format", "==", "\"xyas\"", ":", "\n", "        ", "(", "x", ",", "y", ",", "a", ",", "s", ")", ",", "tail", "=", "keypoint", "[", ":", "4", "]", ",", "tuple", "(", "keypoint", "[", "4", ":", "]", ")", "\n", "", "elif", "source_format", "==", "\"xysa\"", ":", "\n", "        ", "(", "x", ",", "y", ",", "s", ",", "a", ")", ",", "tail", "=", "keypoint", "[", ":", "4", "]", ",", "tuple", "(", "keypoint", "[", "4", ":", "]", ")", "\n", "\n", "", "if", "angle_in_degrees", ":", "\n", "        ", "a", "=", "math", ".", "radians", "(", "a", ")", "\n", "\n", "", "keypoint", "=", "(", "x", ",", "y", ",", "angle_to_2pi_range", "(", "a", ")", ",", "s", ")", "+", "tail", "\n", "if", "check_validity", ":", "\n", "        ", "check_keypoint", "(", "keypoint", ",", "rows", ",", "cols", ")", "\n", "", "return", "keypoint", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_from_albumentations": [[157, 185], ["keypoints_utils.angle_to_2pi_range", "ValueError", "tuple", "keypoints_utils.check_keypoint", "math.degrees"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.angle_to_2pi_range", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.check_keypoint"], ["", "def", "convert_keypoint_from_albumentations", "(", "\n", "keypoint", ",", "target_format", ",", "rows", ",", "cols", ",", "check_validity", "=", "False", ",", "angle_in_degrees", "=", "True", "\n", ")", ":", "\n", "# type (tuple, str, int, int, bool, bool) -> tuple", "\n", "    ", "if", "target_format", "not", "in", "keypoint_formats", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown target_format {}. Supported formats are: {}\"", ".", "format", "(", "target_format", ",", "keypoint_formats", ")", ")", "\n", "\n", "", "(", "x", ",", "y", ",", "angle", ",", "scale", ")", ",", "tail", "=", "keypoint", "[", ":", "4", "]", ",", "tuple", "(", "keypoint", "[", "4", ":", "]", ")", "\n", "angle", "=", "angle_to_2pi_range", "(", "angle", ")", "\n", "if", "check_validity", ":", "\n", "        ", "check_keypoint", "(", "(", "x", ",", "y", ",", "angle", ",", "scale", ")", ",", "rows", ",", "cols", ")", "\n", "", "if", "angle_in_degrees", ":", "\n", "        ", "angle", "=", "math", ".", "degrees", "(", "angle", ")", "\n", "\n", "", "if", "target_format", "==", "\"xy\"", ":", "\n", "        ", "kp", "=", "(", "x", ",", "y", ")", "\n", "", "elif", "target_format", "==", "\"yx\"", ":", "\n", "        ", "kp", "=", "(", "y", ",", "x", ")", "\n", "", "elif", "target_format", "==", "\"xya\"", ":", "\n", "        ", "kp", "=", "(", "x", ",", "y", ",", "angle", ")", "\n", "", "elif", "target_format", "==", "\"xys\"", ":", "\n", "        ", "kp", "=", "(", "x", ",", "y", ",", "scale", ")", "\n", "", "elif", "target_format", "==", "\"xyas\"", ":", "\n", "        ", "kp", "=", "(", "x", ",", "y", ",", "angle", ",", "scale", ")", "\n", "", "elif", "target_format", "==", "\"xysa\"", ":", "\n", "        ", "kp", "=", "(", "x", ",", "y", ",", "scale", ",", "angle", ")", "\n", "\n", "", "return", "kp", "+", "tail", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoints_to_albumentations": [[187, 193], ["keypoints_utils.convert_keypoint_to_albumentations"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_to_albumentations"], ["", "def", "convert_keypoints_to_albumentations", "(", "\n", "keypoints", ",", "source_format", ",", "rows", ",", "cols", ",", "check_validity", "=", "False", ",", "angle_in_degrees", "=", "True", "\n", ")", ":", "\n", "    ", "return", "[", "\n", "convert_keypoint_to_albumentations", "(", "kp", ",", "source_format", ",", "rows", ",", "cols", ",", "check_validity", ",", "angle_in_degrees", ")", "\n", "for", "kp", "in", "keypoints", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoints_from_albumentations": [[196, 202], ["keypoints_utils.convert_keypoint_from_albumentations"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_from_albumentations"], ["", "def", "convert_keypoints_from_albumentations", "(", "\n", "keypoints", ",", "target_format", ",", "rows", ",", "cols", ",", "check_validity", "=", "False", ",", "angle_in_degrees", "=", "True", "\n", ")", ":", "\n", "    ", "return", "[", "\n", "convert_keypoint_from_albumentations", "(", "kp", ",", "target_format", ",", "rows", ",", "cols", ",", "check_validity", ",", "angle_in_degrees", ")", "\n", "for", "kp", "in", "keypoints", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.angle_2pi_range": [[114, 121], ["functools.wraps", "func", "keypoints_utils.angle_to_2pi_range"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.angle_to_2pi_range"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy": [[123, 132], ["isinstance"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip": [[134, 136], ["numpy.clip().astype", "numpy.clip", "numpy.np.uint8", "numpy.np.uint8", "numpy.np.uint8"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clipped": [[138, 146], ["functools.wraps", "MAX_VALUES_BY_DTYPE.get", "functional.clip", "func"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.preserve_shape": [[148, 162], ["functools.wraps", "func", "result.reshape.reshape"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.preserve_channel_dim": [[164, 179], ["functools.wraps", "func", "numpy.expand_dims", "len", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.ensure_contiguous": [[181, 193], ["functools.wraps", "numpy.require", "func"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image": [[195, 197], ["len"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image": [[199, 201], ["len", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_multispectral_image": [[203, 205], ["len"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_num_channels": [[207, 209], ["len"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.non_rgb_warning": [[211, 220], ["functional.is_rgb_image", "functional.is_grayscale_image", "functional.is_multispectral_image", "ValueError"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_multispectral_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip": [[222, 224], ["numpy.ascontiguousarray"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip": [[226, 228], ["numpy.ascontiguousarray"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip_cv2": [[230, 232], ["cv2.flip"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.random_flip": [[234, 237], ["cv2.flip"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose": [[239, 241], ["img.transpose", "img.transpose", "len"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.rot90": [[243, 246], ["numpy.rot90", "numpy.ascontiguousarray"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.rot90"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.normalize": [[248, 261], ["numpy.array", "numpy.array", "numpy.reciprocal", "img.astype.astype"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks": [[263, 302], ["functools.wraps", "functional.get_num_channels", "range", "numpy.dstack", "range", "chunks.append", "numpy.expand_dims", "chunks.append", "cv2.LUT", "cv2.copyMakeBorder", "cv2.blur", "cv2.GaussianBlur", "cv2.medianBlur", "cv2.filter2D", "cv2.remap", "cv2.warpAffine", "cv2.remap", "cv2.LUT", "cv2.LUT", "cv2.resize", "cv2.resize", "cv2.GaussianBlur"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_num_channels", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.blur", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_hsv_uint8": [[304, 327], ["cv2.cvtColor", "cv2.split", "cv2.merge().astype", "cv2.cvtColor", "numpy.arange", "numpy.mod().astype", "cv2.LUT", "numpy.arange", "numpy.clip().astype", "cv2.LUT", "numpy.arange", "numpy.clip().astype", "cv2.LUT", "cv2.merge", "numpy.mod", "numpy.clip", "numpy.clip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_hsv_non_uint8": [[329, 347], ["cv2.cvtColor", "cv2.split", "cv2.merge", "cv2.cvtColor", "cv2.add", "numpy.mod", "functional.clip", "functional.clip", "cv2.add", "cv2.add"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_hsv": [[349, 374], ["functional.is_grayscale_image", "cv2.cvtColor", "functional._shift_hsv_uint8", "functional._shift_hsv_non_uint8", "cv2.cvtColor", "warnings.warn"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_hsv_uint8", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_hsv_non_uint8"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.solarize": [[376, 404], ["np.expand_dims.copy", "numpy.dtype", "cv2.LUT", "numpy.array", "len", "len", "numpy.expand_dims", "range"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.posterize": [[406, 454], ["numpy.uint8", "numpy.any", "numpy.empty_like", "enumerate", "TypeError", "ValueError", "numpy.arange", "cv2.LUT", "functional.is_rgb_image", "TypeError", "len", "numpy.zeros_like", "img.copy", "numpy.uint8", "numpy.zeros_like", "img[].copy", "numpy.arange", "cv2.LUT", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._equalize_pil": [[456, 474], ["cv2.calcHist().ravel", "numpy.empty", "range", "cv2.LUT", "len", "img.copy", "numpy.sum", "img.copy", "min", "numpy.array", "cv2.calcHist"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._equalize_cv": [[476, 502], ["cv2.calcHist().ravel", "min", "numpy.sum", "numpy.zeros", "range", "cv2.LUT", "cv2.equalizeHist", "numpy.full_like", "len", "functional.clip", "cv2.calcHist", "round", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize": [[504, 563], ["functional.is_grayscale_image", "numpy.empty_like", "range", "TypeError", "ValueError", "mask.astype.astype", "function", "cv2.cvtColor", "function", "cv2.cvtColor", "function", "functional.is_rgb_image", "functional.is_grayscale_image", "ValueError", "ValueError", "functional.is_grayscale_image", "functional.is_grayscale_image"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.move_tone_curve": [[565, 598], ["numpy.linspace", "numpy.vectorize", "numpy.rint().astype", "functional._maybe_process_in_chunks", "_maybe_process_in_chunks.", "ValueError", "ValueError", "ValueError", "numpy.rint", "np.vectorize."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_rgb_non_uint8": [[600, 611], ["numpy.empty_like", "enumerate"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_image_uint8": [[613, 621], ["numpy.arange().astype", "numpy.clip().astype", "cv2.LUT", "numpy.arange", "numpy.clip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_rgb_uint8": [[623, 637], ["numpy.empty_like", "enumerate", "img.reshape.reshape", "functional._shift_image_uint8", "functional._shift_image_uint8"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_image_uint8", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_image_uint8"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_rgb": [[639, 644], ["functional._shift_rgb_non_uint8", "functional._shift_rgb_uint8"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_rgb_non_uint8", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._shift_rgb_uint8"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.linear_transformation_rgb": [[646, 651], ["cv2.transform"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clahe": [[653, 668], ["cv2.createCLAHE", "TypeError", "cv2.createCLAHE.apply", "cv2.cvtColor", "cv2.createCLAHE.apply", "cv2.cvtColor", "len"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.apply", "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.apply"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad": [[670, 698], ["functional.pad_with_params", "int", "int", "RuntimeError", "max", "max", "max", "max"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad_with_params"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad_with_params": [[700, 720], ["functional._maybe_process_in_chunks", "_maybe_process_in_chunks."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.blur": [[722, 726], ["functional._maybe_process_in_chunks", "_maybe_process_in_chunks."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gaussian_blur": [[728, 733], ["functional._maybe_process_in_chunks", "_maybe_process_in_chunks."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.median_blur": [[735, 744], ["functional._maybe_process_in_chunks", "_maybe_process_in_chunks.", "ValueError"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.convolve": [[746, 750], ["functional._maybe_process_in_chunks", "_maybe_process_in_chunks."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.image_compression": [[752, 782], ["cv2.imencode", "cv2.imdecode", "warnings.warn", "functional.from_float", "functional.to_float", "NotImplementedError", "ValueError", "int", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_snow": [[784, 828], ["functional.non_rgb_warning", "cv2.cvtColor", "numpy.array", "functional.clip", "numpy.array", "cv2.cvtColor", "functional.from_float", "functional.to_float", "ValueError", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.non_rgb_warning", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_rain": [[830, 894], ["functional.non_rgb_warning", "from_float.copy", "cv2.blur", "cv2.cvtColor().astype", "cv2.cvtColor", "functional.from_float", "cv2.line", "cv2.cvtColor().astype.astype", "functional.to_float", "ValueError", "cv2.cvtColor", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.non_rgb_warning", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.blur", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_fog": [[896, 945], ["functional.non_rgb_warning", "max", "cv2.blur", "functional.from_float", "int", "output.copy.copy", "output.copy.copy", "cv2.circle", "cv2.addWeighted", "img.copy.copy", "functional.to_float", "ValueError", "int", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.non_rgb_warning", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.blur", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_sun_flare": [[947, 1001], ["functional.non_rgb_warning", "from_float.copy", "from_float.copy", "img.copy.copy", "numpy.linspace", "numpy.linspace", "range", "functional.from_float", "cv2.circle", "cv2.addWeighted", "int", "int", "cv2.circle", "cv2.addWeighted", "functional.to_float", "ValueError", "int", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.non_rgb_warning", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_shadow": [[1003, 1045], ["functional.non_rgb_warning", "cv2.cvtColor", "numpy.zeros_like", "cv2.cvtColor", "functional.from_float", "cv2.fillPoly", "functional.to_float", "ValueError", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.non_rgb_warning", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.optical_distortion": [[1047, 1086], ["numpy.array", "numpy.array", "cv2.initUndistortRectifyMap", "cv2.remap"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.grid_distortion": [[1088, 1150], ["numpy.zeros", "range", "numpy.zeros", "range", "numpy.meshgrid", "map_x.astype.astype", "map_y.astype.astype", "functional._maybe_process_in_chunks", "_maybe_process_in_chunks.", "int", "numpy.linspace", "int", "numpy.linspace", "int", "int"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.elastic_transform_approx": [[1152, 1224], ["float", "float", "float", "numpy.float32", "cv2.getAffineTransform", "functional._maybe_process_in_chunks", "_maybe_process_in_chunks.", "cv2.GaussianBlur", "cv2.GaussianBlur", "numpy.meshgrid", "numpy.float32", "numpy.float32", "functional._maybe_process_in_chunks", "_maybe_process_in_chunks.", "numpy.float32", "min", "albumentations.random_utils.uniform().astype", "numpy.arange", "numpy.arange", "albumentations.random_utils.rand().astype", "albumentations.random_utils.rand().astype", "albumentations.random_utils.uniform", "albumentations.random_utils.rand", "albumentations.random_utils.rand"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.invert": [[1226, 1228], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.channel_shuffle": [[1230, 1233], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gamma_transform": [[1235, 1244], ["cv2.LUT", "numpy.power", "table.astype", "numpy.arange"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gauss_noise": [[1246, 1250], ["image.astype.astype"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._brightness_contrast_adjust_non_uint": [[1252, 1266], ["img.astype.astype", "numpy.mean"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._brightness_contrast_adjust_uint": [[1268, 1287], ["numpy.dtype", "numpy.arange().astype", "numpy.clip().astype", "cv2.LUT", "numpy.arange", "numpy.clip", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust": [[1289, 1294], ["functional._brightness_contrast_adjust_non_uint", "functional._brightness_contrast_adjust_uint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._brightness_contrast_adjust_non_uint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._brightness_contrast_adjust_uint"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.iso_noise": [[1296, 1336], ["float", "numpy.multiply", "cv2.cvtColor", "cv2.meanStdDev", "albumentations.random_utils.poisson", "albumentations.random_utils.normal", "np.multiply.astype", "TypeError", "functional.is_rgb_image", "TypeError", "cv2.cvtColor"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.multiply", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.poisson", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.normal", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_gray": [[1338, 1341], ["cv2.cvtColor", "cv2.cvtColor"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.downscale": [[1343, 1355], ["cv2.resize", "cv2.resize", "functional.to_float", "functional.from_float", "numpy.clip", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float": [[1357, 1367], ["img.astype", "RuntimeError"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float": [[1369, 1379], ["RuntimeError"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_vflip": [[1381, 1395], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_hflip": [[1397, 1411], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_flip": [[1413, 1439], ["functional.bbox_vflip", "functional.bbox_hflip", "functional.bbox_hflip", "functional.bbox_vflip", "ValueError"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_hflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_hflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_vflip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_transpose": [[1441, 1465], ["ValueError"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_vflip": [[1467, 1483], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_hflip": [[1485, 1501], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_flip": [[1503, 1532], ["functional.keypoint_vflip", "functional.keypoint_hflip", "functional.keypoint_hflip", "functional.keypoint_vflip", "ValueError"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_hflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_hflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_vflip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.noop": [[1534, 1536], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.swap_tiles_on_image": [[1538, 1561], ["image.copy"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_transpose": [[1563, 1581], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._multiply_uint8": [[1583, 1587], ["img.astype.astype", "numpy.multiply"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.multiply"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._multiply_uint8_optimized": [[1589, 1611], ["numpy.stack", "functional.clip", "range", "numpy.stack", "functional.is_grayscale_image", "numpy.arange", "functional.clip", "functional._maybe_process_in_chunks", "_maybe_process_in_chunks.", "functional._maybe_process_in_chunks", "images.append", "len", "numpy.arange", "_maybe_process_in_chunks."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._multiply_non_uint8": [[1613, 1616], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.multiply": [[1618, 1635], ["functional._multiply_non_uint8", "functional._multiply_uint8", "len", "functional._multiply_uint8_optimized"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._multiply_non_uint8", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._multiply_uint8", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._multiply_uint8_optimized"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.fancy_pca": [[1637, 1702], ["img.astype().copy", "img.reshape", "numpy.cov", "numpy.linalg.eigh", "eig_vals[].argsort", "eig_vals[].sort", "numpy.column_stack", "numpy.zeros", "range", "numpy.clip", "orig_img.astype.astype", "TypeError", "numpy.mean", "numpy.matrix", "numpy.matrix", "functional.is_rgb_image", "img.astype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.glass_blur": [[1704, 1734], ["cv2.GaussianBlur", "cv2.GaussianBlur", "numpy.array", "numpy.arange", "numpy.arange", "numpy.tile", "numpy.repeat", "range", "enumerate", "itertools.product", "range", "range", "range", "len", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._adjust_brightness_torchvision_uint8": [[1736, 1740], ["numpy.clip().astype", "cv2.LUT", "numpy.arange", "numpy.clip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_brightness_torchvision": [[1742, 1753], ["functional.clip", "numpy.zeros_like", "functional._adjust_brightness_torchvision_uint8"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._adjust_brightness_torchvision_uint8"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._adjust_contrast_torchvision_uint8": [[1755, 1761], ["functional.clip", "cv2.LUT", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_contrast_torchvision": [[1763, 1783], ["functional.is_grayscale_image", "functional.clip", "img.mean", "cv2.cvtColor().mean", "numpy.full_like", "functional._adjust_contrast_torchvision_uint8", "int", "cv2.cvtColor", "img.astype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._adjust_contrast_torchvision_uint8"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_saturation_torchvision": [[1786, 1807], ["functional.is_grayscale_image", "cv2.addWeighted", "functional.clip", "cv2.cvtColor", "cv2.cvtColor"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._adjust_hue_torchvision_uint8": [[1809, 1817], ["cv2.cvtColor", "numpy.arange", "numpy.mod().astype", "cv2.LUT", "cv2.cvtColor", "numpy.mod"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_hue_torchvision": [[1819, 1832], ["functional.is_grayscale_image", "cv2.cvtColor", "numpy.mod", "cv2.cvtColor", "functional._adjust_hue_torchvision_uint8"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._adjust_hue_torchvision_uint8"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.superpixels": [[1834, 1892], ["skimage.segmentation.slic", "numpy.copy", "range", "numpy.any", "max", "resize_fn.reshape", "skimage.measure.regionprops", "enumerate", "functional._maybe_process_in_chunks", "_maybe_process_in_chunks.", "functional._maybe_process_in_chunks", "_maybe_process_in_chunks.", "int", "int", "int", "min", "len", "numpy.round", "max"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.add_weighted": [[1894, 1897], ["img1.astype", "img2.astype"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.unsharp_mask": [[1899, 1924], ["functional._maybe_process_in_chunks", "_maybe_process_in_chunks.", "mask.astype.astype", "numpy.clip", "_maybe_process_in_chunks.", "functional.from_float", "functional.to_float", "ValueError", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pixel_dropout": [[1926, 1933], ["numpy.where", "isinstance", "numpy.zeros_like", "numpy.full_like"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.utils.read_bgr_image": [[6, 8], ["cv2.imread"], "function", ["None"], ["def", "read_bgr_image", "(", "path", ")", ":", "\n", "    ", "return", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.augmentations.utils.read_rgb_image": [[10, 13], ["cv2.imread", "cv2.cvtColor"], "function", ["None"], ["", "def", "read_rgb_image", "(", "path", ")", ":", "\n", "    ", "image", "=", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "return", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.channel_dropout.ChannelDropout.__init__": [[29, 47], ["albumentations.core.transforms_interface.ImageOnlyTransform.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "channel_drop_range", ":", "Tuple", "[", "int", ",", "int", "]", "=", "(", "1", ",", "1", ")", ",", "\n", "fill_value", ":", "Union", "[", "int", ",", "float", "]", "=", "0", ",", "\n", "always_apply", ":", "bool", "=", "False", ",", "\n", "p", ":", "float", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", "ChannelDropout", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "\n", "self", ".", "channel_drop_range", "=", "channel_drop_range", "\n", "\n", "self", ".", "min_channels", "=", "channel_drop_range", "[", "0", "]", "\n", "self", ".", "max_channels", "=", "channel_drop_range", "[", "1", "]", "\n", "\n", "if", "not", "1", "<=", "self", ".", "min_channels", "<=", "self", ".", "max_channels", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid channel_drop_range. Got: {}\"", ".", "format", "(", "channel_drop_range", ")", ")", "\n", "\n", "", "self", ".", "fill_value", "=", "fill_value", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.channel_dropout.ChannelDropout.apply": [[48, 50], ["functional.channel_dropout"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.dropout.functional.channel_dropout"], ["", "def", "apply", "(", "self", ",", "img", ":", "np", ".", "ndarray", ",", "channels_to_drop", ":", "Tuple", "[", "int", ",", "...", "]", "=", "(", "0", ",", ")", ",", "**", "params", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "return", "channel_dropout", "(", "img", ",", "channels_to_drop", ",", "self", ".", "fill_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.channel_dropout.ChannelDropout.get_params_dependent_on_targets": [[51, 67], ["random.randint", "random.sample", "NotImplementedError", "ValueError", "range", "len"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ":", "Mapping", "[", "str", ",", "Any", "]", ")", ":", "\n", "        ", "img", "=", "params", "[", "\"image\"", "]", "\n", "\n", "num_channels", "=", "img", ".", "shape", "[", "-", "1", "]", "\n", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "2", "or", "num_channels", "==", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Images has one channel. ChannelDropout is not defined.\"", ")", "\n", "\n", "", "if", "self", ".", "max_channels", ">=", "num_channels", ":", "\n", "            ", "raise", "ValueError", "(", "\"Can not drop all channels in ChannelDropout.\"", ")", "\n", "\n", "", "num_drop_channels", "=", "random", ".", "randint", "(", "self", ".", "min_channels", ",", "self", ".", "max_channels", ")", "\n", "\n", "channels_to_drop", "=", "random", ".", "sample", "(", "range", "(", "num_channels", ")", ",", "k", "=", "num_drop_channels", ")", "\n", "\n", "return", "{", "\"channels_to_drop\"", ":", "channels_to_drop", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.channel_dropout.ChannelDropout.get_transform_init_args_names": [[68, 70], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", "->", "Tuple", "[", "str", ",", "...", "]", ":", "\n", "        ", "return", "\"channel_drop_range\"", ",", "\"fill_value\"", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.channel_dropout.ChannelDropout.targets_as_params": [[71, 74], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets_as_params", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"image\"", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.grid_dropout.GridDropout.__init__": [[47, 75], ["core.transforms_interface.DualTransform.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "ratio", ":", "float", "=", "0.5", ",", "\n", "unit_size_min", ":", "int", "=", "None", ",", "\n", "unit_size_max", ":", "int", "=", "None", ",", "\n", "holes_number_x", ":", "int", "=", "None", ",", "\n", "holes_number_y", ":", "int", "=", "None", ",", "\n", "shift_x", ":", "int", "=", "0", ",", "\n", "shift_y", ":", "int", "=", "0", ",", "\n", "random_offset", ":", "bool", "=", "False", ",", "\n", "fill_value", ":", "int", "=", "0", ",", "\n", "mask_fill_value", ":", "int", "=", "None", ",", "\n", "always_apply", ":", "bool", "=", "False", ",", "\n", "p", ":", "float", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", "GridDropout", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "ratio", "=", "ratio", "\n", "self", ".", "unit_size_min", "=", "unit_size_min", "\n", "self", ".", "unit_size_max", "=", "unit_size_max", "\n", "self", ".", "holes_number_x", "=", "holes_number_x", "\n", "self", ".", "holes_number_y", "=", "holes_number_y", "\n", "self", ".", "shift_x", "=", "shift_x", "\n", "self", ".", "shift_y", "=", "shift_y", "\n", "self", ".", "random_offset", "=", "random_offset", "\n", "self", ".", "fill_value", "=", "fill_value", "\n", "self", ".", "mask_fill_value", "=", "mask_fill_value", "\n", "if", "not", "0", "<", "self", ".", "ratio", "<=", "1", ":", "\n", "            ", "raise", "ValueError", "(", "\"ratio must be between 0 and 1.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.grid_dropout.GridDropout.apply": [[76, 78], ["functional.cutout"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.dropout.functional.cutout"], ["", "", "def", "apply", "(", "self", ",", "img", ":", "np", ".", "ndarray", ",", "holes", ":", "Iterable", "[", "Tuple", "[", "int", ",", "int", ",", "int", ",", "int", "]", "]", "=", "(", ")", ",", "**", "params", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "return", "F", ".", "cutout", "(", "img", ",", "holes", ",", "self", ".", "fill_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.grid_dropout.GridDropout.apply_to_mask": [[79, 84], ["functional.cutout"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.dropout.functional.cutout"], ["", "def", "apply_to_mask", "(", "self", ",", "img", ":", "np", ".", "ndarray", ",", "holes", ":", "Iterable", "[", "Tuple", "[", "int", ",", "int", ",", "int", ",", "int", "]", "]", "=", "(", ")", ",", "**", "params", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "if", "self", ".", "mask_fill_value", "is", "None", ":", "\n", "            ", "return", "img", "\n", "\n", "", "return", "F", ".", "cutout", "(", "img", ",", "holes", ",", "self", ".", "mask_fill_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.grid_dropout.GridDropout.get_params_dependent_on_targets": [[85, 138], ["int", "int", "min", "min", "range", "random.randint", "max", "max", "min", "min", "random.randint", "random.randint", "range", "ValueError", "min", "ValueError", "max", "max", "max", "max", "min", "min", "min", "min", "holes.append", "ValueError", "min", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ")", ":", "\n", "        ", "img", "=", "params", "[", "\"image\"", "]", "\n", "height", ",", "width", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "# set grid using unit size limits", "\n", "if", "self", ".", "unit_size_min", "and", "self", ".", "unit_size_max", ":", "\n", "            ", "if", "not", "2", "<=", "self", ".", "unit_size_min", "<=", "self", ".", "unit_size_max", ":", "\n", "                ", "raise", "ValueError", "(", "\"Max unit size should be >= min size, both at least 2 pixels.\"", ")", "\n", "", "if", "self", ".", "unit_size_max", ">", "min", "(", "height", ",", "width", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\"Grid size limits must be within the shortest image edge.\"", ")", "\n", "", "unit_width", "=", "random", ".", "randint", "(", "self", ".", "unit_size_min", ",", "self", ".", "unit_size_max", "+", "1", ")", "\n", "unit_height", "=", "unit_width", "\n", "", "else", ":", "\n", "# set grid using holes numbers", "\n", "            ", "if", "self", ".", "holes_number_x", "is", "None", ":", "\n", "                ", "unit_width", "=", "max", "(", "2", ",", "width", "//", "10", ")", "\n", "", "else", ":", "\n", "                ", "if", "not", "1", "<=", "self", ".", "holes_number_x", "<=", "width", "//", "2", ":", "\n", "                    ", "raise", "ValueError", "(", "\"The hole_number_x must be between 1 and image width//2.\"", ")", "\n", "", "unit_width", "=", "width", "//", "self", ".", "holes_number_x", "\n", "", "if", "self", ".", "holes_number_y", "is", "None", ":", "\n", "                ", "unit_height", "=", "max", "(", "min", "(", "unit_width", ",", "height", ")", ",", "2", ")", "\n", "", "else", ":", "\n", "                ", "if", "not", "1", "<=", "self", ".", "holes_number_y", "<=", "height", "//", "2", ":", "\n", "                    ", "raise", "ValueError", "(", "\"The hole_number_y must be between 1 and image height//2.\"", ")", "\n", "", "unit_height", "=", "height", "//", "self", ".", "holes_number_y", "\n", "\n", "", "", "hole_width", "=", "int", "(", "unit_width", "*", "self", ".", "ratio", ")", "\n", "hole_height", "=", "int", "(", "unit_height", "*", "self", ".", "ratio", ")", "\n", "# min 1 pixel and max unit length - 1", "\n", "hole_width", "=", "min", "(", "max", "(", "hole_width", ",", "1", ")", ",", "unit_width", "-", "1", ")", "\n", "hole_height", "=", "min", "(", "max", "(", "hole_height", ",", "1", ")", ",", "unit_height", "-", "1", ")", "\n", "# set offset of the grid", "\n", "if", "self", ".", "shift_x", "is", "None", ":", "\n", "            ", "shift_x", "=", "0", "\n", "", "else", ":", "\n", "            ", "shift_x", "=", "min", "(", "max", "(", "0", ",", "self", ".", "shift_x", ")", ",", "unit_width", "-", "hole_width", ")", "\n", "", "if", "self", ".", "shift_y", "is", "None", ":", "\n", "            ", "shift_y", "=", "0", "\n", "", "else", ":", "\n", "            ", "shift_y", "=", "min", "(", "max", "(", "0", ",", "self", ".", "shift_y", ")", ",", "unit_height", "-", "hole_height", ")", "\n", "", "if", "self", ".", "random_offset", ":", "\n", "            ", "shift_x", "=", "random", ".", "randint", "(", "0", ",", "unit_width", "-", "hole_width", ")", "\n", "shift_y", "=", "random", ".", "randint", "(", "0", ",", "unit_height", "-", "hole_height", ")", "\n", "", "holes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "width", "//", "unit_width", "+", "1", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "height", "//", "unit_height", "+", "1", ")", ":", "\n", "                ", "x1", "=", "min", "(", "shift_x", "+", "unit_width", "*", "i", ",", "width", ")", "\n", "y1", "=", "min", "(", "shift_y", "+", "unit_height", "*", "j", ",", "height", ")", "\n", "x2", "=", "min", "(", "x1", "+", "hole_width", ",", "width", ")", "\n", "y2", "=", "min", "(", "y1", "+", "hole_height", ",", "height", ")", "\n", "holes", ".", "append", "(", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ")", "\n", "\n", "", "", "return", "{", "\"holes\"", ":", "holes", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.grid_dropout.GridDropout.targets_as_params": [[139, 142], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets_as_params", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"image\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.grid_dropout.GridDropout.get_transform_init_args_names": [[143, 155], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "\"ratio\"", ",", "\n", "\"unit_size_min\"", ",", "\n", "\"unit_size_max\"", ",", "\n", "\"holes_number_x\"", ",", "\n", "\"holes_number_y\"", ",", "\n", "\"shift_x\"", ",", "\n", "\"shift_y\"", ",", "\n", "\"random_offset\"", ",", "\n", "\"fill_value\"", ",", "\n", "\"mask_fill_value\"", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.mask_dropout.MaskDropout.__init__": [[37, 49], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], ["def", "__init__", "(", "\n", "self", ",", "\n", "max_objects", ":", "int", "=", "1", ",", "\n", "image_fill_value", ":", "Union", "[", "int", ",", "float", ",", "str", "]", "=", "0", ",", "\n", "mask_fill_value", ":", "Union", "[", "int", ",", "float", "]", "=", "0", ",", "\n", "always_apply", ":", "bool", "=", "False", ",", "\n", "p", ":", "float", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", "MaskDropout", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "max_objects", "=", "to_tuple", "(", "max_objects", ",", "1", ")", "\n", "self", ".", "image_fill_value", "=", "image_fill_value", "\n", "self", ".", "mask_fill_value", "=", "mask_fill_value", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.mask_dropout.MaskDropout.targets_as_params": [[50, 53], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets_as_params", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"mask\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.mask_dropout.MaskDropout.get_params_dependent_on_targets": [[54, 75], ["skimage.measure.label", "params.update", "random.randint", "min", "random.sample", "numpy.zeros", "range"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "mask", "=", "params", "[", "\"mask\"", "]", "\n", "\n", "label_image", ",", "num_labels", "=", "label", "(", "mask", ",", "return_num", "=", "True", ")", "\n", "\n", "if", "num_labels", "==", "0", ":", "\n", "            ", "dropout_mask", "=", "None", "\n", "", "else", ":", "\n", "            ", "objects_to_drop", "=", "random", ".", "randint", "(", "self", ".", "max_objects", "[", "0", "]", ",", "self", ".", "max_objects", "[", "1", "]", ")", "\n", "objects_to_drop", "=", "min", "(", "num_labels", ",", "objects_to_drop", ")", "\n", "\n", "if", "objects_to_drop", "==", "num_labels", ":", "\n", "                ", "dropout_mask", "=", "mask", ">", "0", "\n", "", "else", ":", "\n", "                ", "labels_index", "=", "random", ".", "sample", "(", "range", "(", "1", ",", "num_labels", "+", "1", ")", ",", "objects_to_drop", ")", "\n", "dropout_mask", "=", "np", ".", "zeros", "(", "(", "mask", ".", "shape", "[", "0", "]", ",", "mask", ".", "shape", "[", "1", "]", ")", ",", "dtype", "=", "bool", ")", "\n", "for", "label_index", "in", "labels_index", ":", "\n", "                    ", "dropout_mask", "|=", "label_image", "==", "label_index", "\n", "\n", "", "", "", "params", ".", "update", "(", "{", "\"dropout_mask\"", ":", "dropout_mask", "}", ")", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.mask_dropout.MaskDropout.apply": [[76, 90], ["dropout_mask.astype.astype.astype", "cv2.boundingRect", "min", "cv2.inpaint", "img.copy.copy.copy", "max"], "methods", ["None"], ["", "def", "apply", "(", "self", ",", "img", ":", "np", ".", "ndarray", ",", "dropout_mask", ":", "np", ".", "ndarray", "=", "None", ",", "**", "params", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "if", "dropout_mask", "is", "None", ":", "\n", "            ", "return", "img", "\n", "\n", "", "if", "self", ".", "image_fill_value", "==", "\"inpaint\"", ":", "\n", "            ", "dropout_mask", "=", "dropout_mask", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "_", ",", "_", ",", "w", ",", "h", "=", "cv2", ".", "boundingRect", "(", "dropout_mask", ")", "\n", "radius", "=", "min", "(", "3", ",", "max", "(", "w", ",", "h", ")", "//", "2", ")", "\n", "img", "=", "cv2", ".", "inpaint", "(", "img", ",", "dropout_mask", ",", "radius", ",", "cv2", ".", "INPAINT_NS", ")", "\n", "", "else", ":", "\n", "            ", "img", "=", "img", ".", "copy", "(", ")", "\n", "img", "[", "dropout_mask", "]", "=", "self", ".", "image_fill_value", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.mask_dropout.MaskDropout.apply_to_mask": [[91, 98], ["img.copy.copy.copy"], "methods", ["None"], ["", "def", "apply_to_mask", "(", "self", ",", "img", ":", "np", ".", "ndarray", ",", "dropout_mask", ":", "np", ".", "ndarray", "=", "None", ",", "**", "params", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "if", "dropout_mask", "is", "None", ":", "\n", "            ", "return", "img", "\n", "\n", "", "img", "=", "img", ".", "copy", "(", ")", "\n", "img", "[", "dropout_mask", "]", "=", "self", ".", "mask_fill_value", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.mask_dropout.MaskDropout.get_transform_init_args_names": [[99, 101], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", "->", "Tuple", "[", "str", ",", "...", "]", ":", "\n", "        ", "return", "\"max_objects\"", ",", "\"image_fill_value\"", ",", "\"mask_fill_value\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.cutout.Cutout.__init__": [[36, 53], ["albumentations.core.transforms_interface.ImageOnlyTransform.__init__", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "num_holes", ":", "int", "=", "8", ",", "\n", "max_h_size", ":", "int", "=", "8", ",", "\n", "max_w_size", ":", "int", "=", "8", ",", "\n", "fill_value", ":", "Union", "[", "int", ",", "float", "]", "=", "0", ",", "\n", "always_apply", ":", "bool", "=", "False", ",", "\n", "p", ":", "float", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", "Cutout", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "num_holes", "=", "num_holes", "\n", "self", ".", "max_h_size", "=", "max_h_size", "\n", "self", ".", "max_w_size", "=", "max_w_size", "\n", "self", ".", "fill_value", "=", "fill_value", "\n", "warnings", ".", "warn", "(", "\n", "f\"{self.__class__.__name__} has been deprecated. Please use CoarseDropout\"", ",", "\n", "FutureWarning", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.cutout.Cutout.apply": [[55, 57], ["functional.cutout"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.dropout.functional.cutout"], ["", "def", "apply", "(", "self", ",", "img", ":", "np", ".", "ndarray", ",", "fill_value", ":", "Union", "[", "int", ",", "float", "]", "=", "0", ",", "holes", "=", "(", ")", ",", "**", "params", ")", ":", "\n", "        ", "return", "cutout", "(", "img", ",", "holes", ",", "fill_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.cutout.Cutout.get_params_dependent_on_targets": [[58, 74], ["range", "random.randint", "random.randint", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "holes.append"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "img", "=", "params", "[", "\"image\"", "]", "\n", "height", ",", "width", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "\n", "holes", "=", "[", "]", "\n", "for", "_n", "in", "range", "(", "self", ".", "num_holes", ")", ":", "\n", "            ", "y", "=", "random", ".", "randint", "(", "0", ",", "height", ")", "\n", "x", "=", "random", ".", "randint", "(", "0", ",", "width", ")", "\n", "\n", "y1", "=", "np", ".", "clip", "(", "y", "-", "self", ".", "max_h_size", "//", "2", ",", "0", ",", "height", ")", "\n", "y2", "=", "np", ".", "clip", "(", "y1", "+", "self", ".", "max_h_size", ",", "0", ",", "height", ")", "\n", "x1", "=", "np", ".", "clip", "(", "x", "-", "self", ".", "max_w_size", "//", "2", ",", "0", ",", "width", ")", "\n", "x2", "=", "np", ".", "clip", "(", "x1", "+", "self", ".", "max_w_size", ",", "0", ",", "width", ")", "\n", "holes", ".", "append", "(", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ")", "\n", "\n", "", "return", "{", "\"holes\"", ":", "holes", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.cutout.Cutout.targets_as_params": [[75, 78], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets_as_params", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"image\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.cutout.Cutout.get_transform_init_args_names": [[79, 81], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", "->", "Tuple", "[", "str", ",", "...", "]", ":", "\n", "        ", "return", "(", "\"num_holes\"", ",", "\"max_h_size\"", ",", "\"max_w_size\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.__init__": [[48, 84], ["core.transforms_interface.DualTransform.__init__", "coarse_dropout.CoarseDropout.check_range", "coarse_dropout.CoarseDropout.check_range", "coarse_dropout.CoarseDropout.check_range", "coarse_dropout.CoarseDropout.check_range", "ValueError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.check_range", "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.check_range", "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.check_range", "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.check_range"], ["def", "__init__", "(", "\n", "self", ",", "\n", "max_holes", ":", "int", "=", "8", ",", "\n", "max_height", ":", "int", "=", "8", ",", "\n", "max_width", ":", "int", "=", "8", ",", "\n", "min_holes", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "min_height", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "min_width", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "fill_value", ":", "int", "=", "0", ",", "\n", "mask_fill_value", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "always_apply", ":", "bool", "=", "False", ",", "\n", "p", ":", "float", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", "CoarseDropout", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "max_holes", "=", "max_holes", "\n", "self", ".", "max_height", "=", "max_height", "\n", "self", ".", "max_width", "=", "max_width", "\n", "self", ".", "min_holes", "=", "min_holes", "if", "min_holes", "is", "not", "None", "else", "max_holes", "\n", "self", ".", "min_height", "=", "min_height", "if", "min_height", "is", "not", "None", "else", "max_height", "\n", "self", ".", "min_width", "=", "min_width", "if", "min_width", "is", "not", "None", "else", "max_width", "\n", "self", ".", "fill_value", "=", "fill_value", "\n", "self", ".", "mask_fill_value", "=", "mask_fill_value", "\n", "if", "not", "0", "<", "self", ".", "min_holes", "<=", "self", ".", "max_holes", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid combination of min_holes and max_holes. Got: {}\"", ".", "format", "(", "[", "min_holes", ",", "max_holes", "]", ")", ")", "\n", "\n", "", "self", ".", "check_range", "(", "self", ".", "max_height", ")", "\n", "self", ".", "check_range", "(", "self", ".", "min_height", ")", "\n", "self", ".", "check_range", "(", "self", ".", "max_width", ")", "\n", "self", ".", "check_range", "(", "self", ".", "min_width", ")", "\n", "\n", "if", "not", "0", "<", "self", ".", "min_height", "<=", "self", ".", "max_height", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Invalid combination of min_height and max_height. Got: {}\"", ".", "format", "(", "[", "min_height", ",", "max_height", "]", ")", "\n", ")", "\n", "", "if", "not", "0", "<", "self", ".", "min_width", "<=", "self", ".", "max_width", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid combination of min_width and max_width. Got: {}\"", ".", "format", "(", "[", "min_width", ",", "max_width", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.check_range": [[85, 89], ["isinstance", "ValueError"], "methods", ["None"], ["", "", "def", "check_range", "(", "self", ",", "dimension", ")", ":", "\n", "        ", "if", "isinstance", "(", "dimension", ",", "float", ")", "and", "not", "0", "<=", "dimension", "<", "1.0", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Invalid value {}. If using floats, the value should be in the range [0.0, 1.0)\"", ".", "format", "(", "dimension", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.apply": [[91, 99], ["functional.cutout"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.dropout.functional.cutout"], ["", "", "def", "apply", "(", "\n", "self", ",", "\n", "img", ":", "np", ".", "ndarray", ",", "\n", "fill_value", ":", "Union", "[", "int", ",", "float", "]", "=", "0", ",", "\n", "holes", ":", "Iterable", "[", "Tuple", "[", "int", ",", "int", ",", "int", ",", "int", "]", "]", "=", "(", ")", ",", "\n", "**", "params", "\n", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "return", "cutout", "(", "img", ",", "holes", ",", "fill_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.apply_to_mask": [[100, 110], ["functional.cutout"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.dropout.functional.cutout"], ["", "def", "apply_to_mask", "(", "\n", "self", ",", "\n", "img", ":", "np", ".", "ndarray", ",", "\n", "mask_fill_value", ":", "Union", "[", "int", ",", "float", "]", "=", "0", ",", "\n", "holes", ":", "Iterable", "[", "Tuple", "[", "int", ",", "int", ",", "int", ",", "int", "]", "]", "=", "(", ")", ",", "\n", "**", "params", "\n", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "if", "mask_fill_value", "is", "None", ":", "\n", "            ", "return", "img", "\n", "", "return", "cutout", "(", "img", ",", "holes", ",", "mask_fill_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.get_params_dependent_on_targets": [[111, 159], ["range", "random.randint", "all", "random.randint", "random.randint", "holes.append", "random.randint", "random.randint", "all", "isinstance", "isinstance", "isinstance", "isinstance", "int", "int", "ValueError", "isinstance", "isinstance", "isinstance", "isinstance", "random.uniform", "random.uniform", "type", "type", "type", "type"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ")", ":", "\n", "        ", "img", "=", "params", "[", "\"image\"", "]", "\n", "height", ",", "width", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "\n", "holes", "=", "[", "]", "\n", "for", "_n", "in", "range", "(", "random", ".", "randint", "(", "self", ".", "min_holes", ",", "self", ".", "max_holes", ")", ")", ":", "\n", "            ", "if", "all", "(", "\n", "[", "\n", "isinstance", "(", "self", ".", "min_height", ",", "int", ")", ",", "\n", "isinstance", "(", "self", ".", "min_width", ",", "int", ")", ",", "\n", "isinstance", "(", "self", ".", "max_height", ",", "int", ")", ",", "\n", "isinstance", "(", "self", ".", "max_width", ",", "int", ")", ",", "\n", "]", "\n", ")", ":", "\n", "                ", "hole_height", "=", "random", ".", "randint", "(", "self", ".", "min_height", ",", "self", ".", "max_height", ")", "\n", "hole_width", "=", "random", ".", "randint", "(", "self", ".", "min_width", ",", "self", ".", "max_width", ")", "\n", "", "elif", "all", "(", "\n", "[", "\n", "isinstance", "(", "self", ".", "min_height", ",", "float", ")", ",", "\n", "isinstance", "(", "self", ".", "min_width", ",", "float", ")", ",", "\n", "isinstance", "(", "self", ".", "max_height", ",", "float", ")", ",", "\n", "isinstance", "(", "self", ".", "max_width", ",", "float", ")", ",", "\n", "]", "\n", ")", ":", "\n", "                ", "hole_height", "=", "int", "(", "height", "*", "random", ".", "uniform", "(", "self", ".", "min_height", ",", "self", ".", "max_height", ")", ")", "\n", "hole_width", "=", "int", "(", "width", "*", "random", ".", "uniform", "(", "self", ".", "min_width", ",", "self", ".", "max_width", ")", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "\"Min width, max width, \\\n                    min height and max height \\\n                    should all either be ints or floats. \\\n                    Got: {} respectively\"", ".", "format", "(", "\n", "[", "\n", "type", "(", "self", ".", "min_width", ")", ",", "\n", "type", "(", "self", ".", "max_width", ")", ",", "\n", "type", "(", "self", ".", "min_height", ")", ",", "\n", "type", "(", "self", ".", "max_height", ")", ",", "\n", "]", "\n", ")", "\n", ")", "\n", "\n", "", "y1", "=", "random", ".", "randint", "(", "0", ",", "height", "-", "hole_height", ")", "\n", "x1", "=", "random", ".", "randint", "(", "0", ",", "width", "-", "hole_width", ")", "\n", "y2", "=", "y1", "+", "hole_height", "\n", "x2", "=", "x1", "+", "hole_width", "\n", "holes", ".", "append", "(", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ")", "\n", "\n", "", "return", "{", "\"holes\"", ":", "holes", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.targets_as_params": [[160, 163], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets_as_params", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"image\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout._keypoint_in_hole": [[164, 168], ["None"], "methods", ["None"], ["", "def", "_keypoint_in_hole", "(", "self", ",", "keypoint", ":", "Tuple", "[", "float", ",", "...", "]", ",", "hole", ":", "Tuple", "[", "int", ",", "int", ",", "int", ",", "int", "]", ")", "->", "bool", ":", "\n", "        ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "hole", "\n", "x", ",", "y", "=", "keypoint", "[", ":", "2", "]", "\n", "return", "x1", "<=", "x", "<", "x2", "and", "y1", "<=", "y", "<", "y2", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.apply_to_keypoints": [[169, 177], ["coarse_dropout.CoarseDropout._keypoint_in_hole", "remaining_keypoints.append", "typing.cast"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout._keypoint_in_hole"], ["", "def", "apply_to_keypoints", "(", "self", ",", "keypoints", ":", "List", "[", "Tuple", "[", "float", ",", "...", "]", "]", ",", "holes", ":", "Iterable", "[", "Tuple", "]", "=", "(", ")", ",", "**", "params", ")", ":", "\n", "        ", "for", "hole", "in", "holes", ":", "\n", "            ", "remaining_keypoints", "=", "[", "]", "\n", "for", "kp", "in", "keypoints", ":", "\n", "                ", "if", "not", "self", ".", "_keypoint_in_hole", "(", "kp", ",", "typing", ".", "cast", "(", "Tuple", "[", "int", ",", "int", ",", "int", ",", "int", "]", ",", "hole", ")", ")", ":", "\n", "                    ", "remaining_keypoints", ".", "append", "(", "kp", ")", "\n", "", "", "keypoints", "=", "remaining_keypoints", "\n", "", "return", "keypoints", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.coarse_dropout.CoarseDropout.get_transform_init_args_names": [[178, 188], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "\"max_holes\"", ",", "\n", "\"max_height\"", ",", "\n", "\"max_width\"", ",", "\n", "\"min_holes\"", ",", "\n", "\"min_height\"", ",", "\n", "\"min_width\"", ",", "\n", "\"fill_value\"", ",", "\n", "\"mask_fill_value\"", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.functional.channel_dropout": [[9, 19], ["img.copy.copy", "NotImplementedError", "len"], "function", ["None"], ["    ", "tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "moveaxis", "(", "im", "/", "(", "255.0", "if", "im", ".", "dtype", "==", "np", ".", "uint8", "else", "1", ")", ",", "-", "1", ",", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "if", "normalize", "is", "not", "None", ":", "\n", "        ", "return", "F", ".", "normalize", "(", "tensor", ",", "**", "normalize", ")", "\n", "", "return", "tensor", "\n", "\n", "\n", "", "def", "mask_to_tensor", "(", "mask", ",", "num_classes", ",", "sigmoid", ")", ":", "\n", "    ", "if", "num_classes", ">", "1", ":", "\n", "        ", "if", "not", "sigmoid", ":", "\n", "# softmax", "\n", "            ", "long_mask", "=", "np", ".", "zeros", "(", "(", "mask", ".", "shape", "[", ":", "2", "]", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.dropout.functional.cutout": [[21, 29], ["img.copy.copy"], "function", ["None"], ["                ", "for", "c", "in", "range", "(", "mask", ".", "shape", "[", "2", "]", ")", ":", "\n", "                    ", "long_mask", "[", "mask", "[", "...", ",", "c", "]", ">", "0", "]", "=", "c", "\n", "", "", "else", ":", "\n", "                ", "long_mask", "[", "mask", ">", "127", "]", "=", "1", "\n", "long_mask", "[", "mask", "==", "0", "]", "=", "0", "\n", "", "mask", "=", "long_mask", "\n", "", "else", ":", "\n", "            ", "mask", "=", "np", ".", "moveaxis", "(", "mask", "/", "(", "255.0", "if", "mask", ".", "dtype", "==", "np", ".", "uint8", "else", "1", ")", ",", "-", "1", ",", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCrop.__init__": [[41, 45], ["core.transforms_interface.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["    "]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCrop.apply": [[46, 48], ["geometric.functional.random_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCrop.get_params": [[49, 51], ["random.random", "random.random"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["\n", "\n", "def", "__init__", "(", "self", ",", "num_classes", "=", "1", ",", "sigmoid", "=", "True", ",", "normalize", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCrop.apply_to_bbox": [[52, 54], ["geometric.functional.bbox_random_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_random_crop"], ["        ", "raise", "RuntimeError", "(", "\n", "\"`ToTensor` is obsolete and it was removed from Albumentations. Please use `ToTensorV2` instead - \"", "\n", "\"https://albumentations.ai/docs/api_reference/pytorch/transforms/\"", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCrop.apply_to_keypoint": [[55, 57], ["geometric.functional.keypoint_random_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.keypoint_random_crop"], ["\"#albumentations.pytorch.transforms.ToTensorV2. \"", "\n", "\"\\n\\nIf you need `ToTensor` downgrade Albumentations to version 0.5.2.\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCrop.get_transform_init_args_names": [[58, 60], ["None"], "methods", ["None"], ["\n", "\n", "", "", "class", "ToTensorV2", "(", "BasicTransform", ")", ":", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CenterCrop.__init__": [[82, 86], ["core.transforms_interface.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["        ", "if", "len", "(", "img", ".", "shape", ")", "not", "in", "[", "2", ",", "3", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\"Albumentations only supports images in HW or HWC format\"", ")", "\n", "\n", "", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "2", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CenterCrop.apply": [[87, 89], ["geometric.functional.center_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.center_crop"], ["\n", "", "return", "torch", ".", "from_numpy", "(", "img", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CenterCrop.apply_to_bbox": [[90, 92], ["geometric.functional.bbox_center_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_center_crop"], ["", "def", "apply_to_mask", "(", "self", ",", "mask", ",", "**", "params", ")", ":", "# skipcq: PYL-W0613", "\n", "        ", "if", "self", ".", "transpose_mask", "and", "mask", ".", "ndim", "==", "3", ":", "\n", "            ", "mask", "=", "mask", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CenterCrop.apply_to_keypoint": [[93, 95], ["geometric.functional.keypoint_center_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.keypoint_center_crop"], ["", "return", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "\n", "", "def", "apply_to_masks", "(", "self", ",", "masks", ",", "**", "params", ")", ":", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CenterCrop.get_transform_init_args_names": [[96, 98], ["None"], "methods", ["None"], ["        ", "return", "[", "self", ".", "apply_to_mask", "(", "mask", ",", "**", "params", ")", "for", "mask", "in", "masks", "]", "\n", "\n", "", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.Crop.__init__": [[116, 122], ["core.transforms_interface.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.Crop.apply": [[123, 125], ["geometric.functional.crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.Crop.apply_to_bbox": [[126, 128], ["geometric.functional.bbox_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_crop"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.Crop.apply_to_keypoint": [[129, 131], ["geometric.functional.crop_keypoint_by_coords"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_keypoint_by_coords"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.Crop.get_transform_init_args_names": [[132, 134], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropNonEmptyMaskIfExists.__init__": [[155, 167], ["core.transforms_interface.DualTransform.__init__", "ValueError", "ValueError", "isinstance", "isinstance", "type", "type"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropNonEmptyMaskIfExists.apply": [[168, 170], ["geometric.functional.crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropNonEmptyMaskIfExists.apply_to_bbox": [[171, 174], ["geometric.functional.bbox_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_crop"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropNonEmptyMaskIfExists.apply_to_keypoint": [[176, 178], ["geometric.functional.crop_keypoint_by_coords"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_keypoint_by_coords"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropNonEmptyMaskIfExists._preprocess_mask": [[179, 198], ["numpy.array", "numpy.where", "numpy.array", "numpy.take", "ValueError", "numpy.isin", "range"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropNonEmptyMaskIfExists.update_params": [[199, 230], ["super().update_params", "transforms.CropNonEmptyMaskIfExists.any", "params.update", "transforms.CropNonEmptyMaskIfExists._preprocess_mask", "numpy.argwhere", "random.choice", "numpy.clip", "numpy.clip", "random.randint", "random.randint", "len", "transforms.CropNonEmptyMaskIfExists._preprocess_mask", "RuntimeError", "transforms.CropNonEmptyMaskIfExists.sum", "random.randint", "random.randint", "numpy.copy", "transforms.CropNonEmptyMaskIfExists._preprocess_mask"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.update_params", "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropNonEmptyMaskIfExists._preprocess_mask", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropNonEmptyMaskIfExists._preprocess_mask", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropNonEmptyMaskIfExists._preprocess_mask"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropNonEmptyMaskIfExists.get_transform_init_args_names": [[231, 233], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms._BaseRandomSizedCrop.__init__": [[238, 243], ["core.transforms_interface.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms._BaseRandomSizedCrop.apply": [[244, 247], ["geometric.functional.random_crop", "geometric.functional.resize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms._BaseRandomSizedCrop.apply_to_bbox": [[248, 250], ["geometric.functional.bbox_random_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_random_crop"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms._BaseRandomSizedCrop.apply_to_keypoint": [[251, 257], ["geometric.functional.keypoint_random_crop", "geometric.functional.keypoint_scale"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.keypoint_random_crop", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_scale"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomSizedCrop.__init__": [[279, 287], ["transforms._BaseRandomSizedCrop.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomSizedCrop.get_params": [[288, 295], ["random.randint", "random.random", "random.random", "int"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomSizedCrop.get_transform_init_args_names": [[297, 299], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomResizedCrop.__init__": [[321, 337], ["transforms._BaseRandomSizedCrop.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomResizedCrop.get_params_dependent_on_targets": [[338, 378], ["range", "math.exp", "int", "int", "min", "int", "random.uniform", "math.log", "math.log", "random.uniform", "round", "round", "random.randint", "random.randint", "round", "max", "int", "math.sqrt", "math.sqrt", "round", "min", "max"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomResizedCrop.get_params": [[380, 382], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomResizedCrop.targets_as_params": [[383, 386], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomResizedCrop.get_transform_init_args_names": [[387, 389], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCropNearBBox.__init__": [[415, 428], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple", "ValueError", "min", "max"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCropNearBBox.apply": [[429, 433], ["geometric.functional.clamping_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.clamping_crop"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCropNearBBox.get_params_dependent_on_targets": [[434, 449], ["round", "round", "max", "max", "random.randint", "random.randint", "random.randint", "random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCropNearBBox.apply_to_bbox": [[450, 452], ["geometric.functional.bbox_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_crop"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCropNearBBox.apply_to_keypoint": [[453, 463], ["geometric.functional.crop_keypoint_by_coords"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_keypoint_by_coords"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCropNearBBox.targets_as_params": [[464, 467], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomCropNearBBox.get_transform_init_args_names": [[468, 470], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomSizedBBoxSafeCrop.__init__": [[491, 497], ["core.transforms_interface.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomSizedBBoxSafeCrop.apply": [[498, 501], ["geometric.functional.random_crop", "geometric.functional.resize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomSizedBBoxSafeCrop.get_params_dependent_on_targets": [[502, 526], ["bbox_utils.union_of_bboxes", "numpy.clip", "numpy.clip", "len", "int", "int", "int", "random.randint", "random.random", "random.random", "int", "random.random", "random.random", "random.random", "random.random"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.union_of_bboxes", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomSizedBBoxSafeCrop.apply_to_bbox": [[527, 529], ["geometric.functional.bbox_random_crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_random_crop"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomSizedBBoxSafeCrop.targets_as_params": [[530, 533], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.RandomSizedBBoxSafeCrop.get_transform_init_args_names": [[534, 536], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.__init__": [[625, 656], ["core.transforms_interface.DualTransform.__init__", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.apply": [[657, 670], ["geometric.functional.crop_and_pad"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_and_pad"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.apply_to_mask": [[672, 685], ["geometric.functional.crop_and_pad"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_and_pad"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.apply_to_bbox": [[687, 699], ["geometric.functional.crop_and_pad_bbox"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_and_pad_bbox"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.apply_to_keypoint": [[700, 713], ["geometric.functional.crop_and_pad_keypoint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_and_pad_keypoint"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.targets_as_params": [[715, 718], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.__prevent_zero": [[719, 740], ["abs"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad._prevent_zero": [[741, 754], ["transforms.CropAndPad.__prevent_zero", "transforms.CropAndPad.__prevent_zero", "max", "max", "max", "max"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.__prevent_zero", "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.__prevent_zero"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.get_params_dependent_on_targets": [[755, 793], ["transforms.CropAndPad._prevent_zero", "any", "transforms.CropAndPad._get_px_params", "transforms.CropAndPad._get_percent_params", "int", "int", "int", "int", "max", "transforms.CropAndPad._get_pad_value", "transforms.CropAndPad._get_pad_value", "min"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad._prevent_zero", "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad._get_px_params", "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad._get_percent_params", "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad._get_pad_value", "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad._get_pad_value"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad._get_px_params": [[795, 811], ["isinstance", "ValueError", "len", "random.randrange", "random.randrange", "isinstance", "random.randrange", "range"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad._get_percent_params": [[812, 828], ["isinstance", "ValueError", "len", "random.uniform", "random.uniform", "isinstance", "random.uniform", "range"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad._get_pad_value": [[829, 842], ["isinstance", "random.choice", "len", "random.uniform", "isinstance", "isinstance", "random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.transforms.CropAndPad.get_transform_init_args_names": [[843, 853], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.get_random_crop_coords": [[35, 44], ["int", "int"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop": [[46, 58], ["functional.get_random_crop_coords", "ValueError"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.get_random_crop_coords"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_bbox_by_coords": [[60, 83], ["bbox_utils.denormalize_bbox", "bbox_utils.normalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_random_crop": [[85, 90], ["functional.get_random_crop_coords", "functional.crop_bbox_by_coords"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.get_random_crop_coords", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_bbox_by_coords"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_keypoint_by_coords": [[92, 107], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.keypoint_random_crop": [[109, 129], ["functional.get_random_crop_coords", "functional.crop_keypoint_by_coords"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.get_random_crop_coords", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_keypoint_by_coords"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.get_center_crop_coords": [[131, 137], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.center_crop": [[139, 151], ["functional.get_center_crop_coords", "ValueError"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.get_center_crop_coords"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_center_crop": [[153, 156], ["functional.get_center_crop_coords", "functional.crop_bbox_by_coords"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.get_center_crop_coords", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_bbox_by_coords"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.keypoint_center_crop": [[158, 174], ["functional.get_center_crop_coords", "functional.crop_keypoint_by_coords"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.get_center_crop_coords", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_keypoint_by_coords"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop": [[176, 196], ["ValueError", "ValueError"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_crop": [[198, 218], ["functional.crop_bbox_by_coords"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_bbox_by_coords"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.clamping_crop": [[220, 231], ["int", "int", "int", "int"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_and_pad": [[233, 255], ["any", "functional.crop", "any", "functional.pad_with_params", "functional._maybe_process_in_chunks", "functional._maybe_process_in_chunks."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad_with_params", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_and_pad_bbox": [[257, 279], ["bbox_utils.denormalize_bbox", "bbox_utils.normalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox"], []], "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_and_pad_keypoint": [[281, 306], ["geometric.functional.keypoint_scale"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_scale"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ShiftScaleRotate.__init__": [[57, 85], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], [")", "\n", "\n", "\n", "", "", "class", "ToTensorV2", "(", "BasicTransform", ")", ":", "\n", "    ", "\"\"\"Convert image and mask to `torch.Tensor`. The numpy `HWC` image is converted to pytorch `CHW` tensor.\n    If the image is in `HW` format (grayscale image), it will be converted to pytorch `HW` tensor.\n    This is a simplified and improved version of the old `ToTensor`\n    transform (`ToTensor` was deprecated, and now it is not present in Albumentations. You should use `ToTensorV2`\n    instead).\n\n    Args:\n        transpose_mask (bool): if True and an input mask has three dimensions, this transform will transpose dimensions\n        so the shape `[height, width, num_channels]` becomes `[num_channels, height, width]`. The latter format is a\n        standard format for PyTorch Tensors. Default: False.\n    \"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "transpose_mask", "=", "False", ",", "always_apply", "=", "True", ",", "p", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "ToTensorV2", ",", "self", ")", ".", "__init__", "(", "always_apply", "=", "always_apply", ",", "p", "=", "p", ")", "\n", "self", ".", "transpose_mask", "=", "transpose_mask", "\n", "\n", "", "@", "property", "\n", "def", "targets", "(", "self", ")", ":", "\n", "        ", "return", "{", "\"image\"", ":", "self", ".", "apply", ",", "\"mask\"", ":", "self", ".", "apply_to_mask", ",", "\"masks\"", ":", "self", ".", "apply_to_masks", "}", "\n", "\n", "", "def", "apply", "(", "self", ",", "img", ",", "**", "params", ")", ":", "# skipcq: PYL-W0613", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "not", "in", "[", "2", ",", "3", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\"Albumentations only supports images in HW or HWC format\"", ")", "\n", "\n", "", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ShiftScaleRotate.apply": [[86, 88], ["functional.shift_scale_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["            ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "2", ")", "\n", "\n", "", "return", "torch", ".", "from_numpy", "(", "img", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ShiftScaleRotate.apply_to_mask": [[89, 91], ["functional.shift_scale_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["\n", "", "def", "apply_to_mask", "(", "self", ",", "mask", ",", "**", "params", ")", ":", "# skipcq: PYL-W0613", "\n", "        ", "if", "self", ".", "transpose_mask", "and", "mask", ".", "ndim", "==", "3", ":", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ShiftScaleRotate.apply_to_keypoint": [[92, 94], ["functional.keypoint_shift_scale_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_shift_scale_rotate"], ["            ", "mask", "=", "mask", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ShiftScaleRotate.get_params": [[95, 101], ["random.uniform", "random.uniform", "random.uniform", "random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "def", "apply_to_masks", "(", "self", ",", "masks", ",", "**", "params", ")", ":", "\n", "        ", "return", "[", "self", ".", "apply_to_mask", "(", "mask", ",", "**", "params", ")", "for", "mask", "in", "masks", "]", "\n", "\n", "", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\"transpose_mask\"", ",", ")", "\n", "\n", "", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ")", ":", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ShiftScaleRotate.apply_to_bbox": [[103, 105], ["functional.bbox_shift_scale_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_shift_scale_rotate"], ["", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ShiftScaleRotate.get_transform_init_args": [[106, 117], ["core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ElasticTransform.__init__": [[155, 179], ["core.transforms_interface.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ElasticTransform.apply": [[180, 192], ["functional.elastic_transform", "numpy.random.RandomState"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.elastic_transform"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ElasticTransform.apply_to_mask": [[194, 206], ["functional.elastic_transform", "numpy.random.RandomState"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.elastic_transform"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ElasticTransform.get_params": [[208, 210], ["random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.ElasticTransform.get_transform_init_args_names": [[211, 222], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective.__init__": [[254, 274], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective.apply": [[275, 278], ["functional.perspective"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.perspective"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective.apply_to_bbox": [[280, 282], ["functional.perspective_bbox"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.perspective_bbox"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective.apply_to_keypoint": [[283, 286], ["functional.perspective_keypoint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.perspective_keypoint"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective.targets_as_params": [[288, 291], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective.get_params_dependent_on_targets": [[292, 364], ["random_utils.uniform", "random_utils.normal", "numpy.mod", "transforms.Perspective._order_points", "numpy.array", "cv2.getPerspectiveTransform", "numpy.abs", "numpy.sqrt", "numpy.sqrt", "int", "int", "numpy.sqrt", "numpy.sqrt", "int", "int", "transforms.Perspective._expand_transform", "max", "min", "max", "min"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.normal", "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective._order_points", "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective._expand_transform"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective._expand_transform": [[365, 381], ["numpy.array", "numpy.around.min", "numpy.around", "cv2.getPerspectiveTransform", "numpy.around.max", "cv2.perspectiveTransform", "int", "int", "numpy.array"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective._order_points": [[382, 399], ["numpy.array", "numpy.array", "sorted"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective.get_transform_init_args_names": [[400, 402], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine.__init__": [[497, 542], ["core.transforms_interface.DualTransform.__init__", "all", "transforms.Affine._handle_dict_arg", "transforms.Affine._handle_translate_arg", "core.transforms_interface.to_tuple", "transforms.Affine._handle_dict_arg", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine._handle_dict_arg", "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine._handle_translate_arg", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine._handle_dict_arg"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine.get_transform_init_args_names": [[544, 558], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine._handle_dict_arg": [[560, 571], ["isinstance", "val.get", "val.get", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "ValueError", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine._handle_translate_arg": [[572, 594], ["ValueError", "ValueError", "cls._handle_dict_arg", "cls._handle_dict_arg"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine._handle_dict_arg", "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine._handle_dict_arg"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine.apply": [[595, 609], ["functional.warp_affine"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.warp_affine"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine.apply_to_mask": [[611, 625], ["functional.warp_affine"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.warp_affine"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine.apply_to_bbox": [[627, 637], ["functional.bbox_affine"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_affine"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine.apply_to_keypoint": [[638, 646], ["functional.keypoint_affine"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_affine"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine.targets_as_params": [[647, 650], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine.get_params_dependent_on_targets": [[651, 704], ["random.uniform", "skimage.transform.SimilarityTransform", "skimage.transform.AffineTransform", "skimage.transform.AffineTransform", "skimage.transform.AffineTransform", "skimage.transform.AffineTransform", "skimage.transform.SimilarityTransform", "random.uniform", "random.uniform", "transforms.Affine._compute_affine_warp_output_shape", "random.randint", "transforms.Affine.shear.items", "transforms.Affine.scale.items", "numpy.deg2rad", "numpy.deg2rad", "numpy.deg2rad", "transforms.Affine.translate_px.items", "random.uniform", "transforms.Affine.translate_percent.items"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine._compute_affine_warp_output_shape", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Affine._compute_affine_warp_output_shape": [[706, 734], ["numpy.array", "matrix", "corners[].min", "corners[].min", "corners[].max", "corners[].max", "tuple", "skimage.transform.SimilarityTransform", "len", "numpy.ceil", "numpy.ceil", "int", "numpy.ceil.tolist"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.PiecewiseAffine.__init__": [[796, 823], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.PiecewiseAffine.get_transform_init_args_names": [[824, 836], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.PiecewiseAffine.targets_as_params": [[838, 841], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.PiecewiseAffine.get_params_dependent_on_targets": [[842, 886], ["numpy.clip", "numpy.clip", "random.uniform", "random_utils.normal", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.copy", "numpy.clip", "numpy.clip", "skimage.transform.PiecewiseAffineTransform", "skimage.transform.PiecewiseAffineTransform.estimate", "random.randint", "random.randint", "numpy.any", "numpy.dstack"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.normal", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.PiecewiseAffine.apply": [[888, 892], ["functional.piecewise_affine"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.piecewise_affine"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.PiecewiseAffine.apply_to_mask": [[893, 897], ["functional.piecewise_affine"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.piecewise_affine"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.PiecewiseAffine.apply_to_bbox": [[898, 907], ["functional.bbox_piecewise_affine"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_piecewise_affine"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.PiecewiseAffine.apply_to_keypoint": [[908, 917], ["functional.keypoint_piecewise_affine"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_piecewise_affine"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.RandomRotate90.apply": [[27, 33], ["numpy.ascontiguousarray", "numpy.rot90"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.rot90"], ["def", "apply", "(", "self", ",", "img", ",", "factor", "=", "0", ",", "**", "params", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            factor (int): number of times the input will be rotated by 90 degrees.\n        \"\"\"", "\n", "return", "np", ".", "ascontiguousarray", "(", "np", ".", "rot90", "(", "img", ",", "factor", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.RandomRotate90.get_params": [[34, 37], ["random.randint"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "get_params", "(", "self", ")", ":", "\n", "# Random int in the range [0, 3]", "\n", "        ", "return", "{", "\"factor\"", ":", "random", ".", "randint", "(", "0", ",", "3", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.RandomRotate90.apply_to_bbox": [[38, 40], ["functional.bbox_rot90"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_rot90"], ["", "def", "apply_to_bbox", "(", "self", ",", "bbox", ",", "factor", "=", "0", ",", "**", "params", ")", ":", "\n", "        ", "return", "F", ".", "bbox_rot90", "(", "bbox", ",", "factor", ",", "**", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.RandomRotate90.apply_to_keypoint": [[41, 43], ["functional.keypoint_rot90"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_rot90"], ["", "def", "apply_to_keypoint", "(", "self", ",", "keypoint", ",", "factor", "=", "0", ",", "**", "params", ")", ":", "\n", "        ", "return", "F", ".", "keypoint_rot90", "(", "keypoint", ",", "factor", ",", "**", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.RandomRotate90.get_transform_init_args_names": [[44, 46], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.Rotate.__init__": [[75, 96], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], ["def", "__init__", "(", "\n", "self", ",", "\n", "limit", "=", "90", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", ",", "\n", "value", "=", "None", ",", "\n", "mask_value", "=", "None", ",", "\n", "method", "=", "\"largest_box\"", ",", "\n", "always_apply", "=", "False", ",", "\n", "p", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", "Rotate", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "limit", "=", "to_tuple", "(", "limit", ")", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "self", ".", "border_mode", "=", "border_mode", "\n", "self", ".", "value", "=", "value", "\n", "self", ".", "mask_value", "=", "mask_value", "\n", "self", ".", "method", "=", "method", "\n", "\n", "if", "method", "not", "in", "[", "\"largest_box\"", ",", "\"ellipse\"", "]", ":", "\n", "            ", "raise", "ValueError", "(", "f\"Rotation method {self.method} is not valid.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.Rotate.apply": [[97, 99], ["functional.rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate"], ["", "", "def", "apply", "(", "self", ",", "img", ",", "angle", "=", "0", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "**", "params", ")", ":", "\n", "        ", "return", "F", ".", "rotate", "(", "img", ",", "angle", ",", "interpolation", ",", "self", ".", "border_mode", ",", "self", ".", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.Rotate.apply_to_mask": [[100, 102], ["functional.rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate"], ["", "def", "apply_to_mask", "(", "self", ",", "img", ",", "angle", "=", "0", ",", "**", "params", ")", ":", "\n", "        ", "return", "F", ".", "rotate", "(", "img", ",", "angle", ",", "cv2", ".", "INTER_NEAREST", ",", "self", ".", "border_mode", ",", "self", ".", "mask_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.Rotate.get_params": [[103, 105], ["random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "def", "get_params", "(", "self", ")", ":", "\n", "        ", "return", "{", "\"angle\"", ":", "random", ".", "uniform", "(", "self", ".", "limit", "[", "0", "]", ",", "self", ".", "limit", "[", "1", "]", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.Rotate.apply_to_bbox": [[106, 108], ["functional.bbox_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_rotate"], ["", "def", "apply_to_bbox", "(", "self", ",", "bbox", ",", "angle", "=", "0", ",", "**", "params", ")", ":", "\n", "        ", "return", "F", ".", "bbox_rotate", "(", "bbox", ",", "angle", ",", "self", ".", "method", ",", "params", "[", "\"rows\"", "]", ",", "params", "[", "\"cols\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.Rotate.apply_to_keypoint": [[109, 111], ["functional.keypoint_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_rotate"], ["", "def", "apply_to_keypoint", "(", "self", ",", "keypoint", ",", "angle", "=", "0", ",", "**", "params", ")", ":", "\n", "        ", "return", "F", ".", "keypoint_rotate", "(", "keypoint", ",", "angle", ",", "**", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.Rotate.get_transform_init_args_names": [[112, 114], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\"limit\"", ",", "\"interpolation\"", ",", "\"border_mode\"", ",", "\"value\"", ",", "\"mask_value\"", ",", "\"method\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.SafeRotate.__init__": [[145, 161], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], ["def", "__init__", "(", "\n", "self", ",", "\n", "limit", ":", "Union", "[", "float", ",", "Tuple", "[", "float", ",", "float", "]", "]", "=", "90", ",", "\n", "interpolation", ":", "int", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", "border_mode", ":", "int", "=", "cv2", ".", "BORDER_REFLECT_101", ",", "\n", "value", ":", "Optional", "[", "Union", "[", "int", ",", "float", ",", "Sequence", "[", "int", "]", ",", "Sequence", "[", "float", "]", "]", "]", "=", "None", ",", "\n", "mask_value", ":", "Optional", "[", "Union", "[", "int", ",", "float", ",", "Sequence", "[", "int", "]", ",", "Sequence", "[", "float", "]", "]", "]", "=", "None", ",", "\n", "always_apply", ":", "bool", "=", "False", ",", "\n", "p", ":", "float", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "super", "(", "SafeRotate", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "limit", "=", "to_tuple", "(", "limit", ")", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "self", ".", "border_mode", "=", "border_mode", "\n", "self", ".", "value", "=", "value", "\n", "self", ".", "mask_value", "=", "mask_value", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.SafeRotate.apply": [[162, 164], ["functional.safe_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.safe_rotate"], ["", "def", "apply", "(", "self", ",", "img", ":", "np", ".", "ndarray", ",", "matrix", ":", "np", ".", "ndarray", "=", "None", ",", "**", "params", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "return", "F", ".", "safe_rotate", "(", "img", ",", "matrix", ",", "self", ".", "interpolation", ",", "self", ".", "value", ",", "self", ".", "border_mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.SafeRotate.apply_to_mask": [[165, 167], ["functional.safe_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.safe_rotate"], ["", "def", "apply_to_mask", "(", "self", ",", "img", ":", "np", ".", "ndarray", ",", "matrix", ":", "np", ".", "ndarray", "=", "None", ",", "**", "params", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "return", "F", ".", "safe_rotate", "(", "img", ",", "matrix", ",", "cv2", ".", "INTER_NEAREST", ",", "self", ".", "mask_value", ",", "self", ".", "border_mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.SafeRotate.apply_to_bbox": [[168, 172], ["functional.bbox_safe_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_safe_rotate"], ["", "def", "apply_to_bbox", "(", "\n", "self", ",", "bbox", ":", "Tuple", "[", "float", ",", "float", ",", "float", ",", "float", "]", ",", "cols", ":", "int", "=", "0", ",", "rows", ":", "int", "=", "0", ",", "**", "params", "\n", ")", "->", "Tuple", "[", "float", ",", "float", ",", "float", ",", "float", "]", ":", "\n", "        ", "return", "F", ".", "bbox_safe_rotate", "(", "bbox", ",", "params", "[", "\"matrix\"", "]", ",", "cols", ",", "rows", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.SafeRotate.apply_to_keypoint": [[173, 184], ["functional.keypoint_safe_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_safe_rotate"], ["", "def", "apply_to_keypoint", "(", "\n", "self", ",", "\n", "keypoint", ":", "Tuple", "[", "float", ",", "float", ",", "float", ",", "float", "]", ",", "\n", "angle", ":", "float", "=", "0", ",", "\n", "scale_x", ":", "float", "=", "0", ",", "\n", "scale_y", ":", "float", "=", "0", ",", "\n", "cols", ":", "int", "=", "0", ",", "\n", "rows", ":", "int", "=", "0", ",", "\n", "**", "params", "\n", ")", "->", "Tuple", "[", "float", ",", "float", ",", "float", ",", "float", "]", ":", "\n", "        ", "return", "F", ".", "keypoint_safe_rotate", "(", "keypoint", ",", "params", "[", "\"matrix\"", "]", ",", "angle", ",", "scale_x", ",", "scale_y", ",", "cols", ",", "rows", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.SafeRotate.targets_as_params": [[185, 188], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets_as_params", "(", "self", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "return", "[", "\"image\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.SafeRotate.get_params_dependent_on_targets": [[189, 226], ["random.uniform", "cv2.getRotationMatrix2D", "abs", "abs", "math.ceil", "math.ceil", "numpy.diag", "numpy.diag", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "angle", "=", "random", ".", "uniform", "(", "self", ".", "limit", "[", "0", "]", ",", "self", ".", "limit", "[", "1", "]", ")", "\n", "\n", "image", "=", "params", "[", "\"image\"", "]", "\n", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "\n", "# https://stackoverflow.com/questions/43892506/opencv-python-rotate-image-without-cropping-sides", "\n", "image_center", "=", "(", "w", "/", "2", ",", "h", "/", "2", ")", "\n", "\n", "# Rotation Matrix", "\n", "rotation_mat", "=", "cv2", ".", "getRotationMatrix2D", "(", "image_center", ",", "angle", ",", "1.0", ")", "\n", "\n", "# rotation calculates the cos and sin, taking absolutes of those.", "\n", "abs_cos", "=", "abs", "(", "rotation_mat", "[", "0", ",", "0", "]", ")", "\n", "abs_sin", "=", "abs", "(", "rotation_mat", "[", "0", ",", "1", "]", ")", "\n", "\n", "# find the new width and height bounds", "\n", "new_w", "=", "math", ".", "ceil", "(", "h", "*", "abs_sin", "+", "w", "*", "abs_cos", ")", "\n", "new_h", "=", "math", ".", "ceil", "(", "h", "*", "abs_cos", "+", "w", "*", "abs_sin", ")", "\n", "\n", "scale_x", "=", "w", "/", "new_w", "\n", "scale_y", "=", "h", "/", "new_h", "\n", "\n", "# Shift the image to create padding", "\n", "rotation_mat", "[", "0", ",", "2", "]", "+=", "new_w", "/", "2", "-", "image_center", "[", "0", "]", "\n", "rotation_mat", "[", "1", ",", "2", "]", "+=", "new_h", "/", "2", "-", "image_center", "[", "1", "]", "\n", "\n", "# Rescale to original size", "\n", "scale_mat", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "3", ")", ")", "\n", "scale_mat", "[", "0", ",", "0", "]", "*=", "scale_x", "\n", "scale_mat", "[", "1", ",", "1", "]", "*=", "scale_y", "\n", "_tmp", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "3", ")", ")", "\n", "_tmp", "[", ":", "2", "]", "=", "rotation_mat", "\n", "_tmp", "=", "scale_mat", "@", "_tmp", "\n", "rotation_mat", "=", "_tmp", "[", ":", "2", "]", "\n", "\n", "return", "{", "\"matrix\"", ":", "rotation_mat", ",", "\"angle\"", ":", "angle", ",", "\"scale_x\"", ":", "scale_x", ",", "\"scale_y\"", ":", "scale_y", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.rotate.SafeRotate.get_transform_init_args_names": [[227, 229], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", "->", "Tuple", "[", "str", ",", "str", ",", "str", ",", "str", ",", "str", "]", ":", "\n", "        ", "return", "(", "\"limit\"", ",", "\"interpolation\"", ",", "\"border_mode\"", ",", "\"value\"", ",", "\"mask_value\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_rot90": [[55, 78], ["ValueError"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_rot90": [[80, 110], ["ValueError"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate": [[112, 121], ["cv2.getRotationMatrix2D", "functional._maybe_process_in_chunks", "functional._maybe_process_in_chunks."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_rotate": [[123, 163], ["numpy.deg2rad", "float", "min", "max", "min", "max", "numpy.array", "numpy.array", "numpy.arange", "ValueError", "numpy.cos", "numpy.sin", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.radians", "numpy.radians"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_rotate": [[165, 183], ["cv2.getRotationMatrix2D", "cv2.transform().squeeze", "cv2.transform", "math.radians", "numpy.array"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate": [[185, 199], ["cv2.getRotationMatrix2D", "functional._maybe_process_in_chunks", "functional._maybe_process_in_chunks."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_shift_scale_rotate": [[201, 220], ["cv2.getRotationMatrix2D", "cv2.transform().squeeze", "math.radians", "cv2.transform", "numpy.array"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_shift_scale_rotate": [[222, 266], ["numpy.array", "numpy.array", "numpy.ones", "numpy.vstack().transpose", "functional.bbox_rotate", "cv2.getRotationMatrix2D", "cv2.getRotationMatrix2D", "cv2.getRotationMatrix2D.dot", "min", "max", "min", "max", "len", "numpy.vstack"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_rotate"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.elastic_transform": [[268, 349], ["float", "float", "float", "numpy.float32", "cv2.getAffineTransform", "functional._maybe_process_in_chunks", "functional._maybe_process_in_chunks.", "numpy.meshgrid", "numpy.float32", "numpy.float32", "functional._maybe_process_in_chunks", "functional._maybe_process_in_chunks.", "numpy.float32", "min", "random_utils.uniform().astype", "cv2.GaussianBlur", "numpy.float32", "numpy.arange", "numpy.arange", "cv2.GaussianBlur", "numpy.float32", "random_utils.uniform", "random_utils.rand().astype", "scipy.ndimage.filters.gaussian_filter", "random_utils.rand().astype", "scipy.ndimage.filters.gaussian_filter", "random_utils.rand", "random_utils.rand", "random_utils.rand", "random_utils.rand"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize": [[351, 358], ["functional._maybe_process_in_chunks", "functional._maybe_process_in_chunks."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.scale": [[360, 365], ["functional.resize", "int", "int"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_scale": [[367, 381], ["max"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.py3round": [[383, 389], ["int", "abs", "int", "round", "round", "round"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional._func_max_size": [[391, 400], ["float", "tuple", "functional.resize", "func", "functional.py3round"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.py3round"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.longest_max_size": [[402, 405], ["functional._func_max_size"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional._func_max_size"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.smallest_max_size": [[407, 410], ["functional._func_max_size"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional._func_max_size"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.perspective": [[412, 438], ["functional._maybe_process_in_chunks", "functional._maybe_process_in_chunks.", "functional.resize"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.perspective_bbox": [[440, 468], ["bbox_utils.denormalize_bbox", "numpy.array", "numpy.clip", "numpy.clip", "bbox_utils.normalize_bbox", "float", "float", "functional.perspective_keypoint", "numpy.clip", "numpy.clip", "min", "max", "min", "max", "perspective_keypoint.tolist"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.perspective_keypoint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotation2DMatrixToEulerAngles": [[471, 473], ["numpy.arctan2"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.perspective_keypoint": [[475, 502], ["numpy.array().reshape", "functional.rotation2DMatrixToEulerAngles", "max", "cv2.perspectiveTransform", "numpy.sign", "numpy.sqrt", "numpy.sign", "numpy.sqrt", "functional.keypoint_scale", "numpy.array"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotation2DMatrixToEulerAngles", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_scale"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional._is_identity_matrix": [[504, 506], ["numpy.allclose", "numpy.eye"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.warp_affine": [[508, 526], ["functional._is_identity_matrix", "functional._maybe_process_in_chunks", "functional._maybe_process_in_chunks.", "int", "int", "numpy.round", "numpy.round"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional._is_identity_matrix", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_affine": [[528, 542], ["functional._is_identity_matrix", "skimage.transform.matrix_transform().ravel", "functional.rotation2DMatrixToEulerAngles", "numpy.max", "skimage.transform.matrix_transform", "numpy.array"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional._is_identity_matrix", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotation2DMatrixToEulerAngles"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_affine": [[544, 572], ["functional._is_identity_matrix", "bbox_utils.denormalize_bbox", "numpy.array", "skimage.transform.matrix_transform", "numpy.clip", "numpy.clip", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "bbox_utils.normalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional._is_identity_matrix", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.safe_rotate": [[574, 592], ["functional._maybe_process_in_chunks", "functional._maybe_process_in_chunks."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._maybe_process_in_chunks"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_safe_rotate": [[594, 624], ["bbox_utils.denormalize_bbox", "numpy.array", "points[].min", "points[].max", "points[].min", "points[].max", "functional.bbox_safe_rotate.fix_point"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_safe_rotate": [[626, 646], ["numpy.array", "numpy.clip", "numpy.clip", "max"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.piecewise_affine": [[648, 658], ["skimage.transform.warp"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.to_distance_maps": [[661, 703], ["numpy.zeros", "numpy.arange", "numpy.arange", "numpy.meshgrid", "enumerate", "numpy.sqrt", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.from_distance_maps": [[705, 780], ["range", "ValueError", "isinstance", "numpy.unravel_index", "isinstance", "numpy.argmax", "numpy.argmin", "keypoints.append", "len", "ValueError", "ValueError", "keypoints.append", "float", "float", "len", "type"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_piecewise_affine": [[782, 794], ["functional.to_distance_maps", "functional.piecewise_affine", "functional.from_distance_maps"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.to_distance_maps", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.piecewise_affine", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.from_distance_maps"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_piecewise_affine": [[796, 820], ["bbox_utils.denormalize_bbox", "functional.to_distance_maps", "functional.piecewise_affine", "functional.from_distance_maps", "numpy.array", "keypoints_arr[].min", "keypoints_arr[].min", "keypoints_arr[].max", "keypoints_arr[].max", "bbox_utils.normalize_bbox", "tuple"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.to_distance_maps", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.piecewise_affine", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.from_distance_maps", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox"], []], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.RandomScale.__init__": [[33, 37], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], ["def", "__init__", "(", "self", ",", "scale_limit", "=", "0.1", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "always_apply", "=", "False", ",", "p", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "RandomScale", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "scale_limit", "=", "to_tuple", "(", "scale_limit", ",", "bias", "=", "1.0", ")", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.RandomScale.get_params": [[38, 40], ["random.uniform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "def", "get_params", "(", "self", ")", ":", "\n", "        ", "return", "{", "\"scale\"", ":", "random", ".", "uniform", "(", "self", ".", "scale_limit", "[", "0", "]", ",", "self", ".", "scale_limit", "[", "1", "]", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.RandomScale.apply": [[41, 43], ["functional.scale"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.scale"], ["", "def", "apply", "(", "self", ",", "img", ",", "scale", "=", "0", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "**", "params", ")", ":", "\n", "        ", "return", "F", ".", "scale", "(", "img", ",", "scale", ",", "interpolation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.RandomScale.apply_to_bbox": [[44, 47], ["None"], "methods", ["None"], ["", "def", "apply_to_bbox", "(", "self", ",", "bbox", ",", "**", "params", ")", ":", "\n", "# Bounding box coordinates are scale invariant", "\n", "        ", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.RandomScale.apply_to_keypoint": [[48, 50], ["functional.keypoint_scale"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_scale"], ["", "def", "apply_to_keypoint", "(", "self", ",", "keypoint", ",", "scale", "=", "0", ",", "**", "params", ")", ":", "\n", "        ", "return", "F", ".", "keypoint_scale", "(", "keypoint", ",", "scale", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.RandomScale.get_transform_init_args": [[51, 53], ["core.transforms_interface.to_tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], ["", "def", "get_transform_init_args", "(", "self", ")", ":", "\n", "        ", "return", "{", "\"interpolation\"", ":", "self", ".", "interpolation", ",", "\"scale_limit\"", ":", "to_tuple", "(", "self", ".", "scale_limit", ",", "bias", "=", "-", "1.0", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.LongestMaxSize.__init__": [[71, 81], ["core.transforms_interface.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "max_size", ":", "Union", "[", "int", ",", "Sequence", "[", "int", "]", "]", "=", "1024", ",", "\n", "interpolation", ":", "int", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", "always_apply", ":", "bool", "=", "False", ",", "\n", "p", ":", "float", "=", "1", ",", "\n", ")", ":", "\n", "        ", "super", "(", "LongestMaxSize", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "self", ".", "max_size", "=", "max_size", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.LongestMaxSize.apply": [[82, 86], ["functional.longest_max_size"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.longest_max_size"], ["", "def", "apply", "(", "\n", "self", ",", "img", ":", "np", ".", "ndarray", ",", "max_size", ":", "int", "=", "1024", ",", "interpolation", ":", "int", "=", "cv2", ".", "INTER_LINEAR", ",", "**", "params", "\n", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "return", "F", ".", "longest_max_size", "(", "img", ",", "max_size", "=", "max_size", ",", "interpolation", "=", "interpolation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.LongestMaxSize.apply_to_bbox": [[87, 90], ["None"], "methods", ["None"], ["", "def", "apply_to_bbox", "(", "self", ",", "bbox", ":", "Sequence", "[", "float", "]", ",", "**", "params", ")", "->", "Sequence", "[", "float", "]", ":", "\n", "# Bounding box coordinates are scale invariant", "\n", "        ", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.LongestMaxSize.apply_to_keypoint": [[91, 97], ["functional.keypoint_scale", "max"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_scale"], ["", "def", "apply_to_keypoint", "(", "self", ",", "keypoint", ":", "Sequence", "[", "float", "]", ",", "max_size", ":", "int", "=", "1024", ",", "**", "params", ")", "->", "Sequence", "[", "float", "]", ":", "\n", "        ", "height", "=", "params", "[", "\"rows\"", "]", "\n", "width", "=", "params", "[", "\"cols\"", "]", "\n", "\n", "scale", "=", "max_size", "/", "max", "(", "[", "height", ",", "width", "]", ")", "\n", "return", "F", ".", "keypoint_scale", "(", "keypoint", ",", "scale", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.LongestMaxSize.get_params": [[98, 100], ["isinstance", "random.choice"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice"], ["", "def", "get_params", "(", "self", ")", "->", "Dict", "[", "str", ",", "int", "]", ":", "\n", "        ", "return", "{", "\"max_size\"", ":", "self", ".", "max_size", "if", "isinstance", "(", "self", ".", "max_size", ",", "int", ")", "else", "random", ".", "choice", "(", "self", ".", "max_size", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.LongestMaxSize.get_transform_init_args_names": [[101, 103], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", "->", "Tuple", "[", "str", ",", "...", "]", ":", "\n", "        ", "return", "(", "\"max_size\"", ",", "\"interpolation\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.SmallestMaxSize.__init__": [[121, 131], ["core.transforms_interface.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "max_size", ":", "Union", "[", "int", ",", "Sequence", "[", "int", "]", "]", "=", "1024", ",", "\n", "interpolation", ":", "int", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", "always_apply", ":", "bool", "=", "False", ",", "\n", "p", ":", "float", "=", "1", ",", "\n", ")", ":", "\n", "        ", "super", "(", "SmallestMaxSize", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "self", ".", "max_size", "=", "max_size", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.SmallestMaxSize.apply": [[132, 136], ["functional.smallest_max_size"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.smallest_max_size"], ["", "def", "apply", "(", "\n", "self", ",", "img", ":", "np", ".", "ndarray", ",", "max_size", ":", "int", "=", "1024", ",", "interpolation", ":", "int", "=", "cv2", ".", "INTER_LINEAR", ",", "**", "params", "\n", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "return", "F", ".", "smallest_max_size", "(", "img", ",", "max_size", "=", "max_size", ",", "interpolation", "=", "interpolation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.SmallestMaxSize.apply_to_bbox": [[137, 139], ["None"], "methods", ["None"], ["", "def", "apply_to_bbox", "(", "self", ",", "bbox", ":", "Sequence", "[", "float", "]", ",", "**", "params", ")", "->", "Sequence", "[", "float", "]", ":", "\n", "        ", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.SmallestMaxSize.apply_to_keypoint": [[140, 146], ["functional.keypoint_scale", "min"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_scale"], ["", "def", "apply_to_keypoint", "(", "self", ",", "keypoint", ":", "Sequence", "[", "float", "]", ",", "max_size", ":", "int", "=", "1024", ",", "**", "params", ")", "->", "Sequence", "[", "float", "]", ":", "\n", "        ", "height", "=", "params", "[", "\"rows\"", "]", "\n", "width", "=", "params", "[", "\"cols\"", "]", "\n", "\n", "scale", "=", "max_size", "/", "min", "(", "[", "height", ",", "width", "]", ")", "\n", "return", "F", ".", "keypoint_scale", "(", "keypoint", ",", "scale", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.SmallestMaxSize.get_params": [[147, 149], ["isinstance", "random.choice"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice"], ["", "def", "get_params", "(", "self", ")", "->", "Dict", "[", "str", ",", "int", "]", ":", "\n", "        ", "return", "{", "\"max_size\"", ":", "self", ".", "max_size", "if", "isinstance", "(", "self", ".", "max_size", ",", "int", ")", "else", "random", ".", "choice", "(", "self", ".", "max_size", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.SmallestMaxSize.get_transform_init_args_names": [[150, 152], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", "->", "Tuple", "[", "str", ",", "...", "]", ":", "\n", "        ", "return", "(", "\"max_size\"", ",", "\"interpolation\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.Resize.__init__": [[172, 177], ["core.transforms_interface.DualTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "self", ",", "height", ",", "width", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "always_apply", "=", "False", ",", "p", "=", "1", ")", ":", "\n", "        ", "super", "(", "Resize", ",", "self", ")", ".", "__init__", "(", "always_apply", ",", "p", ")", "\n", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.Resize.apply": [[178, 180], ["functional.resize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], ["", "def", "apply", "(", "self", ",", "img", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "**", "params", ")", ":", "\n", "        ", "return", "F", ".", "resize", "(", "img", ",", "height", "=", "self", ".", "height", ",", "width", "=", "self", ".", "width", ",", "interpolation", "=", "interpolation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.Resize.apply_to_bbox": [[181, 184], ["None"], "methods", ["None"], ["", "def", "apply_to_bbox", "(", "self", ",", "bbox", ",", "**", "params", ")", ":", "\n", "# Bounding box coordinates are scale invariant", "\n", "        ", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.Resize.apply_to_keypoint": [[185, 191], ["functional.keypoint_scale"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_scale"], ["", "def", "apply_to_keypoint", "(", "self", ",", "keypoint", ",", "**", "params", ")", ":", "\n", "        ", "height", "=", "params", "[", "\"rows\"", "]", "\n", "width", "=", "params", "[", "\"cols\"", "]", "\n", "scale_x", "=", "self", ".", "width", "/", "width", "\n", "scale_y", "=", "self", ".", "height", "/", "height", "\n", "return", "F", ".", "keypoint_scale", "(", "keypoint", ",", "scale_x", ",", "scale_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.geometric.resize.Resize.get_transform_init_args_names": [[192, 194], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\"height\"", ",", "\"width\"", ",", "\"interpolation\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.__init__": [[57, 68], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "always_apply", ":", "bool", "=", "False", ",", "p", ":", "float", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "p", "=", "p", "\n", "self", ".", "always_apply", "=", "always_apply", "\n", "self", ".", "_additional_targets", ":", "Dict", "[", "str", ",", "str", "]", "=", "{", "}", "\n", "\n", "# replay mode params", "\n", "self", ".", "deterministic", "=", "False", "\n", "self", ".", "save_key", "=", "\"replay\"", "\n", "self", ".", "params", ":", "Dict", "[", "Any", ",", "Any", "]", "=", "{", "}", "\n", "self", ".", "replay_mode", "=", "False", "\n", "self", ".", "applied_in_replay", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.__call__": [[69, 98], ["KeyError", "transforms_interface.BasicTransform.get_params", "transforms_interface.BasicTransform.apply_with_params", "transforms_interface.BasicTransform.apply_with_params", "random.random", "all", "transforms_interface.BasicTransform.get_params_dependent_on_targets", "transforms_interface.BasicTransform.update", "copy.deepcopy", "warnings.warn", "id", "transforms_interface.BasicTransform.get_class_fullname"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.apply_with_params", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.apply_with_params", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params_dependent_on_targets", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_class_fullname"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "force_apply", ":", "bool", "=", "False", ",", "**", "kwargs", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "if", "args", ":", "\n", "            ", "raise", "KeyError", "(", "\"You have to pass data to augmentations as named arguments, for example: aug(image=image)\"", ")", "\n", "", "if", "self", ".", "replay_mode", ":", "\n", "            ", "if", "self", ".", "applied_in_replay", ":", "\n", "                ", "return", "self", ".", "apply_with_params", "(", "self", ".", "params", ",", "**", "kwargs", ")", "\n", "\n", "", "return", "kwargs", "\n", "\n", "", "if", "(", "random", ".", "random", "(", ")", "<", "self", ".", "p", ")", "or", "self", ".", "always_apply", "or", "force_apply", ":", "\n", "            ", "params", "=", "self", ".", "get_params", "(", ")", "\n", "\n", "if", "self", ".", "targets_as_params", ":", "\n", "                ", "assert", "all", "(", "key", "in", "kwargs", "for", "key", "in", "self", ".", "targets_as_params", ")", ",", "\"{} requires {}\"", ".", "format", "(", "\n", "self", ".", "__class__", ".", "__name__", ",", "self", ".", "targets_as_params", "\n", ")", "\n", "targets_as_params", "=", "{", "k", ":", "kwargs", "[", "k", "]", "for", "k", "in", "self", ".", "targets_as_params", "}", "\n", "params_dependent_on_targets", "=", "self", ".", "get_params_dependent_on_targets", "(", "targets_as_params", ")", "\n", "params", ".", "update", "(", "params_dependent_on_targets", ")", "\n", "", "if", "self", ".", "deterministic", ":", "\n", "                ", "if", "self", ".", "targets_as_params", ":", "\n", "                    ", "warn", "(", "\n", "self", ".", "get_class_fullname", "(", ")", "+", "\" could work incorrectly in ReplayMode for other input data\"", "\n", "\" because its' params depend on targets.\"", "\n", ")", "\n", "", "kwargs", "[", "self", ".", "save_key", "]", "[", "id", "(", "self", ")", "]", "=", "deepcopy", "(", "params", ")", "\n", "", "return", "self", ".", "apply_with_params", "(", "params", ",", "**", "kwargs", ")", "\n", "\n", "", "return", "kwargs", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.apply_with_params": [[99, 114], ["transforms_interface.BasicTransform.update_params", "kwargs.items", "transforms_interface.BasicTransform._get_target_function", "transforms_interface.BasicTransform.", "transforms_interface.BasicTransform.target_dependence.get", "dict"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.update_params", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform._get_target_function"], ["", "def", "apply_with_params", "(", "\n", "self", ",", "params", ":", "Dict", "[", "str", ",", "Any", "]", ",", "force_apply", ":", "bool", "=", "False", ",", "**", "kwargs", "\n", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "# skipcq: PYL-W0613", "\n", "        ", "if", "params", "is", "None", ":", "\n", "            ", "return", "kwargs", "\n", "", "params", "=", "self", ".", "update_params", "(", "params", ",", "**", "kwargs", ")", "\n", "res", "=", "{", "}", "\n", "for", "key", ",", "arg", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "            ", "if", "arg", "is", "not", "None", ":", "\n", "                ", "target_function", "=", "self", ".", "_get_target_function", "(", "key", ")", "\n", "target_dependencies", "=", "{", "k", ":", "kwargs", "[", "k", "]", "for", "k", "in", "self", ".", "target_dependence", ".", "get", "(", "key", ",", "[", "]", ")", "}", "\n", "res", "[", "key", "]", "=", "target_function", "(", "arg", ",", "**", "dict", "(", "params", ",", "**", "target_dependencies", ")", ")", "\n", "", "else", ":", "\n", "                ", "res", "[", "key", "]", "=", "None", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.set_deterministic": [[115, 120], ["None"], "methods", ["None"], ["", "def", "set_deterministic", "(", "self", ",", "flag", ":", "bool", ",", "save_key", ":", "str", "=", "\"replay\"", ")", "->", "\"BasicTransform\"", ":", "\n", "        ", "assert", "save_key", "!=", "\"params\"", ",", "\"params save_key is reserved\"", "\n", "self", ".", "deterministic", "=", "flag", "\n", "self", ".", "save_key", "=", "save_key", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.__repr__": [[121, 125], ["transforms_interface.BasicTransform.get_base_init_args", "transforms_interface.BasicTransform.update", "transforms_interface.BasicTransform.get_transform_init_args", "albumentations.core.utils.format_args"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_base_init_args", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_transform_init_args", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.format_args"], ["", "def", "__repr__", "(", "self", ")", "->", "str", ":", "\n", "        ", "state", "=", "self", ".", "get_base_init_args", "(", ")", "\n", "state", ".", "update", "(", "self", ".", "get_transform_init_args", "(", ")", ")", "\n", "return", "\"{name}({args})\"", ".", "format", "(", "name", "=", "self", ".", "__class__", ".", "__name__", ",", "args", "=", "format_args", "(", "state", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform._get_target_function": [[126, 133], ["transforms_interface.BasicTransform.targets.get", "transforms_interface.BasicTransform._additional_targets.get"], "methods", ["None"], ["", "def", "_get_target_function", "(", "self", ",", "key", ":", "str", ")", "->", "Callable", ":", "\n", "        ", "transform_key", "=", "key", "\n", "if", "key", "in", "self", ".", "_additional_targets", ":", "\n", "            ", "transform_key", "=", "self", ".", "_additional_targets", ".", "get", "(", "key", ",", "key", ")", "\n", "\n", "", "target_function", "=", "self", ".", "targets", ".", "get", "(", "transform_key", ",", "lambda", "x", ",", "**", "p", ":", "x", ")", "\n", "return", "target_function", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.apply": [[134, 136], ["None"], "methods", ["None"], ["", "def", "apply", "(", "self", ",", "img", ":", "np", ".", "ndarray", ",", "**", "params", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params": [[137, 139], ["None"], "methods", ["None"], ["", "def", "get_params", "(", "self", ")", "->", "Dict", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.targets": [[140, 146], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets", "(", "self", ")", "->", "Dict", "[", "str", ",", "Callable", "]", ":", "\n", "# you must specify targets in subclass", "\n", "# for example: ('image', 'mask')", "\n", "#              ('image', 'boxes')", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.update_params": [[147, 156], ["hasattr", "hasattr", "hasattr", "params.update"], "methods", ["None"], ["", "def", "update_params", "(", "self", ",", "params", ":", "Dict", "[", "str", ",", "Any", "]", ",", "**", "kwargs", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "\"interpolation\"", ")", ":", "\n", "            ", "params", "[", "\"interpolation\"", "]", "=", "self", ".", "interpolation", "\n", "", "if", "hasattr", "(", "self", ",", "\"fill_value\"", ")", ":", "\n", "            ", "params", "[", "\"fill_value\"", "]", "=", "self", ".", "fill_value", "\n", "", "if", "hasattr", "(", "self", ",", "\"mask_fill_value\"", ")", ":", "\n", "            ", "params", "[", "\"mask_fill_value\"", "]", "=", "self", ".", "mask_fill_value", "\n", "", "params", ".", "update", "(", "{", "\"cols\"", ":", "kwargs", "[", "\"image\"", "]", ".", "shape", "[", "1", "]", ",", "\"rows\"", ":", "kwargs", "[", "\"image\"", "]", ".", "shape", "[", "0", "]", "}", ")", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.target_dependence": [[157, 160], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "target_dependence", "(", "self", ")", "->", "Dict", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.add_targets": [[161, 171], ["None"], "methods", ["None"], ["", "def", "add_targets", "(", "self", ",", "additional_targets", ":", "Dict", "[", "str", ",", "str", "]", ")", ":", "\n", "        ", "\"\"\"Add targets to transform them the same way as one of existing targets\n        ex: {'target_image': 'image'}\n        ex: {'obj1_mask': 'mask', 'obj2_mask': 'mask'}\n        by the way you must have at least one object with key 'image'\n\n        Args:\n            additional_targets (dict): keys - new target name, values - old target name. ex: {'image2': 'image'}\n        \"\"\"", "\n", "self", ".", "_additional_targets", "=", "additional_targets", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.targets_as_params": [[172, 175], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "targets_as_params", "(", "self", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params_dependent_on_targets": [[176, 179], ["NotImplementedError"], "methods", ["None"], ["", "def", "get_params_dependent_on_targets", "(", "self", ",", "params", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\n", "\"Method get_params_dependent_on_targets is not implemented in class \"", "+", "self", ".", "__class__", ".", "__name__", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_class_fullname": [[181, 184], ["albumentations.core.serialization.get_shortest_class_fullname"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.get_shortest_class_fullname"], ["", "@", "classmethod", "\n", "def", "get_class_fullname", "(", "cls", ")", "->", "str", ":", "\n", "        ", "return", "get_shortest_class_fullname", "(", "cls", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.is_serializable": [[185, 188], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "is_serializable", "(", "cls", ")", ":", "\n", "        ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_transform_init_args_names": [[189, 193], ["NotImplementedError", "transforms_interface.BasicTransform.get_class_fullname"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_class_fullname"], ["", "def", "get_transform_init_args_names", "(", "self", ")", "->", "Tuple", "[", "str", ",", "...", "]", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\n", "\"Class {name} is not serializable because the `get_transform_init_args_names` method is not \"", "\n", "\"implemented\"", ".", "format", "(", "name", "=", "self", ".", "get_class_fullname", "(", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_base_init_args": [[195, 197], ["None"], "methods", ["None"], ["", "def", "get_base_init_args", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "{", "\"always_apply\"", ":", "self", ".", "always_apply", ",", "\"p\"", ":", "self", ".", "p", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_transform_init_args": [[198, 200], ["getattr", "transforms_interface.BasicTransform.get_transform_init_args_names"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAPerspective.get_transform_init_args_names"], ["", "def", "get_transform_init_args", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "return", "{", "k", ":", "getattr", "(", "self", ",", "k", ")", "for", "k", "in", "self", ".", "get_transform_init_args_names", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform._to_dict": [[201, 206], ["state.update", "state.update", "transforms_interface.BasicTransform.get_class_fullname", "transforms_interface.BasicTransform.get_base_init_args", "transforms_interface.BasicTransform.get_transform_init_args"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_class_fullname", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_base_init_args", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_transform_init_args"], ["", "def", "_to_dict", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "state", "=", "{", "\"__class_fullname__\"", ":", "self", ".", "get_class_fullname", "(", ")", "}", "\n", "state", ".", "update", "(", "self", ".", "get_base_init_args", "(", ")", ")", "\n", "state", ".", "update", "(", "self", ".", "get_transform_init_args", "(", ")", ")", "\n", "return", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_dict_with_id": [[207, 211], ["transforms_interface.BasicTransform._to_dict", "id"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict"], ["", "def", "get_dict_with_id", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "d", "=", "self", ".", "_to_dict", "(", ")", "\n", "d", "[", "\"id\"", "]", "=", "id", "(", "self", ")", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.DualTransform.targets": [[216, 224], ["None"], "methods", ["None"], ["@", "property", "\n", "def", "targets", "(", "self", ")", "->", "Dict", "[", "str", ",", "Callable", "]", ":", "\n", "        ", "return", "{", "\n", "\"image\"", ":", "self", ".", "apply", ",", "\n", "\"mask\"", ":", "self", ".", "apply_to_mask", ",", "\n", "\"masks\"", ":", "self", ".", "apply_to_masks", ",", "\n", "\"bboxes\"", ":", "self", ".", "apply_to_bboxes", ",", "\n", "\"keypoints\"", ":", "self", ".", "apply_to_keypoints", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.DualTransform.apply_to_bbox": [[226, 228], ["NotImplementedError"], "methods", ["None"], ["", "def", "apply_to_bbox", "(", "self", ",", "bbox", ",", "**", "params", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"Method apply_to_bbox is not implemented in class \"", "+", "self", ".", "__class__", ".", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.DualTransform.apply_to_keypoint": [[229, 231], ["NotImplementedError"], "methods", ["None"], ["", "def", "apply_to_keypoint", "(", "self", ",", "keypoint", ",", "**", "params", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"Method apply_to_keypoint is not implemented in class \"", "+", "self", ".", "__class__", ".", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.DualTransform.apply_to_bboxes": [[232, 234], ["transforms_interface.DualTransform.apply_to_bbox", "tuple", "tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.NoOp.apply_to_bbox"], ["", "def", "apply_to_bboxes", "(", "self", ",", "bboxes", ",", "**", "params", ")", ":", "\n", "        ", "return", "[", "self", ".", "apply_to_bbox", "(", "tuple", "(", "bbox", "[", ":", "4", "]", ")", ",", "**", "params", ")", "+", "tuple", "(", "bbox", "[", "4", ":", "]", ")", "for", "bbox", "in", "bboxes", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.DualTransform.apply_to_keypoints": [[235, 237], ["transforms_interface.DualTransform.apply_to_keypoint", "tuple", "tuple"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.NoOp.apply_to_keypoint"], ["", "def", "apply_to_keypoints", "(", "self", ",", "keypoints", ",", "**", "params", ")", ":", "\n", "        ", "return", "[", "self", ".", "apply_to_keypoint", "(", "tuple", "(", "keypoint", "[", ":", "4", "]", ")", ",", "**", "params", ")", "+", "tuple", "(", "keypoint", "[", "4", ":", "]", ")", "for", "keypoint", "in", "keypoints", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.DualTransform.apply_to_mask": [[238, 240], ["transforms_interface.DualTransform.apply", "params.items"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.apply"], ["", "def", "apply_to_mask", "(", "self", ",", "img", ":", "np", ".", "ndarray", ",", "**", "params", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "return", "self", ".", "apply", "(", "img", ",", "**", "{", "k", ":", "cv2", ".", "INTER_NEAREST", "if", "k", "==", "\"interpolation\"", "else", "v", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.DualTransform.apply_to_masks": [[241, 243], ["transforms_interface.DualTransform.apply_to_mask"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.NoOp.apply_to_mask"], ["", "def", "apply_to_masks", "(", "self", ",", "masks", ",", "**", "params", ")", ":", "\n", "        ", "return", "[", "self", ".", "apply_to_mask", "(", "mask", ",", "**", "params", ")", "for", "mask", "in", "masks", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.ImageOnlyTransform.targets": [[248, 251], ["None"], "methods", ["None"], ["@", "property", "\n", "def", "targets", "(", "self", ")", ":", "\n", "        ", "return", "{", "\"image\"", ":", "self", ".", "apply", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.NoOp.apply_to_keypoint": [[256, 258], ["None"], "methods", ["None"], ["def", "apply_to_keypoint", "(", "self", ",", "keypoint", ",", "**", "params", ")", ":", "\n", "        ", "return", "keypoint", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.NoOp.apply_to_bbox": [[259, 261], ["None"], "methods", ["None"], ["", "def", "apply_to_bbox", "(", "self", ",", "bbox", ",", "**", "params", ")", ":", "\n", "        ", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.NoOp.apply": [[262, 264], ["None"], "methods", ["None"], ["", "def", "apply", "(", "self", ",", "img", ",", "**", "params", ")", ":", "\n", "        ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.NoOp.apply_to_mask": [[265, 267], ["None"], "methods", ["None"], ["", "def", "apply_to_mask", "(", "self", ",", "img", ",", "**", "params", ")", ":", "\n", "        ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.NoOp.get_transform_init_args_names": [[268, 270], ["None"], "methods", ["None"], ["", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple": [[20, 49], ["isinstance", "tuple", "ValueError", "isinstance", "tuple", "tuple", "ValueError"], "function", ["None"], ["def", "to_tuple", "(", "param", ",", "low", "=", "None", ",", "bias", "=", "None", ")", ":", "\n", "    ", "\"\"\"Convert input argument to min-max tuple\n    Args:\n        param (scalar, tuple or list of 2+ elements): Input value.\n            If value is scalar, return value would be (offset - value, offset + value).\n            If value is tuple, return value would be value + offset (broadcasted).\n        low:  Second element of tuple can be passed as optional argument\n        bias: An offset factor added to each element\n    \"\"\"", "\n", "if", "low", "is", "not", "None", "and", "bias", "is", "not", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Arguments low and bias are mutually exclusive\"", ")", "\n", "\n", "", "if", "param", "is", "None", ":", "\n", "        ", "return", "param", "\n", "\n", "", "if", "isinstance", "(", "param", ",", "(", "int", ",", "float", ")", ")", ":", "\n", "        ", "if", "low", "is", "None", ":", "\n", "            ", "param", "=", "-", "param", ",", "+", "param", "\n", "", "else", ":", "\n", "            ", "param", "=", "(", "low", ",", "param", ")", "if", "low", "<", "param", "else", "(", "param", ",", "low", ")", "\n", "", "", "elif", "isinstance", "(", "param", ",", "Sequence", ")", ":", "\n", "        ", "param", "=", "tuple", "(", "param", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Argument param must be either scalar (int, float) or tuple\"", ")", "\n", "\n", "", "if", "bias", "is", "not", "None", ":", "\n", "        ", "return", "tuple", "(", "bias", "+", "x", "for", "x", "in", "param", ")", "\n", "\n", "", "return", "tuple", "(", "param", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.__init__": [[51, 63], ["isinstance", "warnings.warn"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "transforms", ":", "TransformsSeqType", ",", "p", ":", "float", ")", ":", "\n", "        ", "if", "isinstance", "(", "transforms", ",", "(", "BaseCompose", ",", "BasicTransform", ")", ")", ":", "\n", "            ", "warnings", ".", "warn", "(", "\n", "\"transforms is single transform, but a sequence is expected! Transform will be wrapped into list.\"", "\n", ")", "\n", "transforms", "=", "[", "transforms", "]", "\n", "\n", "", "self", ".", "transforms", "=", "transforms", "\n", "self", ".", "p", "=", "p", "\n", "\n", "self", ".", "replay_mode", "=", "False", "\n", "self", ".", "applied_in_replay", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.__len__": [[64, 66], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.__call__": [[67, 69], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "**", "data", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.__getitem__": [[70, 72], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ":", "int", ")", "->", "TransformType", ":", "# type: ignore", "\n", "        ", "return", "self", ".", "transforms", "[", "item", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.__repr__": [[73, 75], ["composition.BaseCompose.indented_repr"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.indented_repr"], ["", "def", "__repr__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "self", ".", "indented_repr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.indented_repr": [[76, 88], ["hasattr", "composition.BaseCompose._to_dict().items", "t.indented_repr", "repr", "albumentations.core.utils.format_args", "composition.BaseCompose._to_dict", "k.startswith"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.indented_repr", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.format_args", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict"], ["", "def", "indented_repr", "(", "self", ",", "indent", ":", "int", "=", "REPR_INDENT_STEP", ")", "->", "str", ":", "\n", "        ", "args", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "self", ".", "_to_dict", "(", ")", ".", "items", "(", ")", "if", "not", "(", "k", ".", "startswith", "(", "\"__\"", ")", "or", "k", "==", "\"transforms\"", ")", "}", "\n", "repr_string", "=", "self", ".", "__class__", ".", "__name__", "+", "\"([\"", "\n", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "repr_string", "+=", "\"\\n\"", "\n", "if", "hasattr", "(", "t", ",", "\"indented_repr\"", ")", ":", "\n", "                ", "t_repr", "=", "t", ".", "indented_repr", "(", "indent", "+", "REPR_INDENT_STEP", ")", "# type: ignore", "\n", "", "else", ":", "\n", "                ", "t_repr", "=", "repr", "(", "t", ")", "\n", "", "repr_string", "+=", "\" \"", "*", "indent", "+", "t_repr", "+", "\",\"", "\n", "", "repr_string", "+=", "\"\\n\"", "+", "\" \"", "*", "(", "indent", "-", "REPR_INDENT_STEP", ")", "+", "\"], {args})\"", ".", "format", "(", "args", "=", "format_args", "(", "args", ")", ")", "\n", "return", "repr_string", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_class_fullname": [[89, 92], ["albumentations.core.serialization.get_shortest_class_fullname"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.get_shortest_class_fullname"], ["", "@", "classmethod", "\n", "def", "get_class_fullname", "(", "cls", ")", "->", "str", ":", "\n", "        ", "return", "get_shortest_class_fullname", "(", "cls", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.is_serializable": [[93, 96], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "is_serializable", "(", "cls", ")", "->", "bool", ":", "\n", "        ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose._to_dict": [[97, 102], ["composition.BaseCompose.get_class_fullname", "t._to_dict"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_class_fullname", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict"], ["", "def", "_to_dict", "(", "self", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "return", "{", "\n", "\"__class_fullname__\"", ":", "self", ".", "get_class_fullname", "(", ")", ",", "\n", "\"p\"", ":", "self", ".", "p", ",", "\n", "\"transforms\"", ":", "[", "t", ".", "_to_dict", "(", ")", "for", "t", "in", "self", ".", "transforms", "]", ",", "# skipcq: PYL-W0212", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_dict_with_id": [[104, 110], ["composition.BaseCompose.get_class_fullname", "id", "t.get_dict_with_id"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_class_fullname", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose.get_dict_with_id"], ["", "def", "get_dict_with_id", "(", "self", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "return", "{", "\n", "\"__class_fullname__\"", ":", "self", ".", "get_class_fullname", "(", ")", ",", "\n", "\"id\"", ":", "id", "(", "self", ")", ",", "\n", "\"params\"", ":", "None", ",", "\n", "\"transforms\"", ":", "[", "t", ".", "get_dict_with_id", "(", ")", "for", "t", "in", "self", ".", "transforms", "]", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.add_targets": [[112, 116], ["t.add_targets"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.add_targets"], ["", "def", "add_targets", "(", "self", ",", "additional_targets", ":", "typing", ".", "Optional", "[", "typing", ".", "Dict", "[", "str", ",", "str", "]", "]", ")", "->", "None", ":", "\n", "        ", "if", "additional_targets", ":", "\n", "            ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "                ", "t", ".", "add_targets", "(", "additional_targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.set_deterministic": [[117, 120], ["t.set_deterministic"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.set_deterministic"], ["", "", "", "def", "set_deterministic", "(", "self", ",", "flag", ":", "bool", ",", "save_key", ":", "str", "=", "\"replay\"", ")", "->", "None", ":", "\n", "        ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "t", ".", "set_deterministic", "(", "flag", ",", "save_key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose.__init__": [[133, 174], ["composition.BaseCompose.__init__", "composition.Compose.processors.values", "composition.Compose.add_targets", "composition.Compose._disable_check_args_for_transforms", "isinstance", "albumentations.augmentations.bbox_utils.BboxProcessor", "isinstance", "albumentations.augmentations.keypoints_utils.KeypointsProcessor", "proc.ensure_transforms_valid", "composition.BboxParams", "isinstance", "composition.KeypointParams", "isinstance", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.add_targets", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._disable_check_args_for_transforms", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.ensure_transforms_valid"], ["def", "__init__", "(", "\n", "self", ",", "\n", "transforms", ":", "TransformsSeqType", ",", "\n", "bbox_params", ":", "typing", ".", "Optional", "[", "typing", ".", "Union", "[", "dict", ",", "\"BboxParams\"", "]", "]", "=", "None", ",", "\n", "keypoint_params", ":", "typing", ".", "Optional", "[", "typing", ".", "Union", "[", "dict", ",", "\"KeypointParams\"", "]", "]", "=", "None", ",", "\n", "additional_targets", ":", "typing", ".", "Optional", "[", "typing", ".", "Dict", "[", "str", ",", "str", "]", "]", "=", "None", ",", "\n", "p", ":", "float", "=", "1.0", ",", "\n", ")", ":", "\n", "        ", "super", "(", "Compose", ",", "self", ")", ".", "__init__", "(", "transforms", ",", "p", ")", "\n", "\n", "self", ".", "processors", ":", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Union", "[", "BboxProcessor", ",", "KeypointsProcessor", "]", "]", "=", "{", "}", "\n", "if", "bbox_params", ":", "\n", "            ", "if", "isinstance", "(", "bbox_params", ",", "dict", ")", ":", "\n", "                ", "b_params", "=", "BboxParams", "(", "**", "bbox_params", ")", "\n", "", "elif", "isinstance", "(", "bbox_params", ",", "BboxParams", ")", ":", "\n", "                ", "b_params", "=", "bbox_params", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"unknown format of bbox_params, please use `dict` or `BboxParams`\"", ")", "\n", "", "self", ".", "processors", "[", "\"bboxes\"", "]", "=", "BboxProcessor", "(", "b_params", ",", "additional_targets", ")", "\n", "\n", "", "if", "keypoint_params", ":", "\n", "            ", "if", "isinstance", "(", "keypoint_params", ",", "dict", ")", ":", "\n", "                ", "k_params", "=", "KeypointParams", "(", "**", "keypoint_params", ")", "\n", "", "elif", "isinstance", "(", "keypoint_params", ",", "KeypointParams", ")", ":", "\n", "                ", "k_params", "=", "keypoint_params", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"unknown format of keypoint_params, please use `dict` or `KeypointParams`\"", ")", "\n", "", "self", ".", "processors", "[", "\"keypoints\"", "]", "=", "KeypointsProcessor", "(", "k_params", ",", "additional_targets", ")", "\n", "\n", "", "if", "additional_targets", "is", "None", ":", "\n", "            ", "additional_targets", "=", "{", "}", "\n", "\n", "", "self", ".", "additional_targets", "=", "additional_targets", "\n", "\n", "for", "proc", "in", "self", ".", "processors", ".", "values", "(", ")", ":", "\n", "            ", "proc", ".", "ensure_transforms_valid", "(", "self", ".", "transforms", ")", "\n", "\n", "", "self", ".", "add_targets", "(", "additional_targets", ")", "\n", "\n", "self", ".", "is_check_args", "=", "True", "\n", "self", ".", "_disable_check_args_for_transforms", "(", "self", ".", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._disable_check_args_for_transforms": [[175, 182], ["isinstance", "isinstance", "composition.Compose._disable_check_args_for_transforms", "transform._disable_check_args"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._disable_check_args_for_transforms", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._disable_check_args"], ["", "@", "staticmethod", "\n", "def", "_disable_check_args_for_transforms", "(", "transforms", ":", "TransformsSeqType", ")", "->", "None", ":", "\n", "        ", "for", "transform", "in", "transforms", ":", "\n", "            ", "if", "isinstance", "(", "transform", ",", "BaseCompose", ")", ":", "\n", "                ", "Compose", ".", "_disable_check_args_for_transforms", "(", "transform", ".", "transforms", ")", "\n", "", "if", "isinstance", "(", "transform", ",", "Compose", ")", ":", "\n", "                ", "transform", ".", "_disable_check_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._disable_check_args": [[183, 185], ["None"], "methods", ["None"], ["", "", "", "def", "_disable_check_args", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "is_check_args", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose.__call__": [[186, 215], ["isinstance", "composition.Compose.processors.values", "any", "composition.Compose.processors.values", "enumerate", "composition.Compose._make_targets_contiguous", "composition.Compose.processors.values", "KeyError", "composition.Compose._check_args", "p.ensure_data_valid", "composition.get_always_apply", "p.preprocess", "t", "p.postprocess", "random.random", "getattr", "composition.Compose._check_data_post_transform", "composition.Compose.processors.values"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._make_targets_contiguous", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._check_args", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.ensure_data_valid", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.get_always_apply", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.preprocess", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.postprocess", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._check_data_post_transform"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "force_apply", ":", "bool", "=", "False", ",", "**", "data", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "if", "args", ":", "\n", "            ", "raise", "KeyError", "(", "\"You have to pass data to augmentations as named arguments, for example: aug(image=image)\"", ")", "\n", "", "if", "self", ".", "is_check_args", ":", "\n", "            ", "self", ".", "_check_args", "(", "**", "data", ")", "\n", "", "assert", "isinstance", "(", "force_apply", ",", "(", "bool", ",", "int", ")", ")", ",", "\"force_apply must have bool or int type\"", "\n", "need_to_run", "=", "force_apply", "or", "random", ".", "random", "(", ")", "<", "self", ".", "p", "\n", "for", "p", "in", "self", ".", "processors", ".", "values", "(", ")", ":", "\n", "            ", "p", ".", "ensure_data_valid", "(", "data", ")", "\n", "", "transforms", "=", "self", ".", "transforms", "if", "need_to_run", "else", "get_always_apply", "(", "self", ".", "transforms", ")", "\n", "\n", "check_each_transform", "=", "any", "(", "\n", "getattr", "(", "item", ".", "params", ",", "\"check_each_transform\"", ",", "False", ")", "for", "item", "in", "self", ".", "processors", ".", "values", "(", ")", "\n", ")", "\n", "\n", "for", "p", "in", "self", ".", "processors", ".", "values", "(", ")", ":", "\n", "            ", "p", ".", "preprocess", "(", "data", ")", "\n", "\n", "", "for", "idx", ",", "t", "in", "enumerate", "(", "transforms", ")", ":", "\n", "            ", "data", "=", "t", "(", "force_apply", "=", "force_apply", ",", "**", "data", ")", "\n", "\n", "if", "check_each_transform", ":", "\n", "                ", "data", "=", "self", ".", "_check_data_post_transform", "(", "data", ")", "\n", "", "", "data", "=", "Compose", ".", "_make_targets_contiguous", "(", "data", ")", "# ensure output targets are contiguous", "\n", "\n", "for", "p", "in", "self", ".", "processors", ".", "values", "(", ")", ":", "\n", "            ", "p", ".", "postprocess", "(", "data", ")", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._check_data_post_transform": [[216, 226], ["albumentations.core.utils.get_shape", "composition.Compose.processors.values", "getattr", "p.filter"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.get_shape", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.filter"], ["", "def", "_check_data_post_transform", "(", "self", ",", "data", ":", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "rows", ",", "cols", "=", "get_shape", "(", "data", "[", "\"image\"", "]", ")", "\n", "\n", "for", "p", "in", "self", ".", "processors", ".", "values", "(", ")", ":", "\n", "            ", "if", "not", "getattr", "(", "p", ".", "params", ",", "\"check_each_transform\"", ",", "False", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "for", "data_name", "in", "p", ".", "data_fields", ":", "\n", "                ", "data", "[", "data_name", "]", "=", "p", ".", "filter", "(", "data", "[", "data_name", "]", ",", "rows", ",", "cols", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._to_dict": [[227, 241], ["composition.BaseCompose._to_dict", "composition.Compose.processors.get", "composition.Compose.processors.get", "super()._to_dict.update", "composition.Compose.params._to_dict", "composition.Compose.params._to_dict"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict"], ["", "def", "_to_dict", "(", "self", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "dictionary", "=", "super", "(", "Compose", ",", "self", ")", ".", "_to_dict", "(", ")", "\n", "bbox_processor", "=", "self", ".", "processors", ".", "get", "(", "\"bboxes\"", ")", "\n", "keypoints_processor", "=", "self", ".", "processors", ".", "get", "(", "\"keypoints\"", ")", "\n", "dictionary", ".", "update", "(", "\n", "{", "\n", "\"bbox_params\"", ":", "bbox_processor", ".", "params", ".", "_to_dict", "(", ")", "if", "bbox_processor", "else", "None", ",", "# skipcq: PYL-W0212", "\n", "\"keypoint_params\"", ":", "keypoints_processor", ".", "params", ".", "_to_dict", "(", ")", "# skipcq: PYL-W0212", "\n", "if", "keypoints_processor", "\n", "else", "None", ",", "\n", "\"additional_targets\"", ":", "self", ".", "additional_targets", ",", "\n", "}", "\n", ")", "\n", "return", "dictionary", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose.get_dict_with_id": [[242, 257], ["composition.BaseCompose.get_dict_with_id", "composition.Compose.processors.get", "composition.Compose.processors.get", "super().get_dict_with_id.update", "composition.Compose.params._to_dict", "composition.Compose.params._to_dict"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose.get_dict_with_id", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict"], ["", "def", "get_dict_with_id", "(", "self", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "dictionary", "=", "super", "(", ")", ".", "get_dict_with_id", "(", ")", "\n", "bbox_processor", "=", "self", ".", "processors", ".", "get", "(", "\"bboxes\"", ")", "\n", "keypoints_processor", "=", "self", ".", "processors", ".", "get", "(", "\"keypoints\"", ")", "\n", "dictionary", ".", "update", "(", "\n", "{", "\n", "\"bbox_params\"", ":", "bbox_processor", ".", "params", ".", "_to_dict", "(", ")", "if", "bbox_processor", "else", "None", ",", "# skipcq: PYL-W0212", "\n", "\"keypoint_params\"", ":", "keypoints_processor", ".", "params", ".", "_to_dict", "(", ")", "# skipcq: PYL-W0212", "\n", "if", "keypoints_processor", "\n", "else", "None", ",", "\n", "\"additional_targets\"", ":", "self", ".", "additional_targets", ",", "\n", "\"params\"", ":", "None", ",", "\n", "}", "\n", ")", "\n", "return", "dictionary", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._check_args": [[258, 274], ["kwargs.items", "composition.Compose.additional_targets.get", "ValueError", "isinstance", "TypeError", "composition.Compose.processors.get", "isinstance", "TypeError"], "methods", ["None"], ["", "def", "_check_args", "(", "self", ",", "**", "kwargs", ")", "->", "None", ":", "\n", "        ", "checked_single", "=", "[", "\"image\"", ",", "\"mask\"", "]", "\n", "checked_multi", "=", "[", "\"masks\"", "]", "\n", "check_bbox_param", "=", "[", "\"bboxes\"", "]", "\n", "# [\"bboxes\", \"keypoints\"] could be almost any type, no need to check them", "\n", "for", "data_name", ",", "data", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "            ", "internal_data_name", "=", "self", ".", "additional_targets", ".", "get", "(", "data_name", ",", "data_name", ")", "\n", "if", "internal_data_name", "in", "checked_single", ":", "\n", "                ", "if", "not", "isinstance", "(", "data", ",", "np", ".", "ndarray", ")", ":", "\n", "                    ", "raise", "TypeError", "(", "\"{} must be numpy array type\"", ".", "format", "(", "data_name", ")", ")", "\n", "", "", "if", "internal_data_name", "in", "checked_multi", ":", "\n", "                ", "if", "data", ":", "\n", "                    ", "if", "not", "isinstance", "(", "data", "[", "0", "]", ",", "np", ".", "ndarray", ")", ":", "\n", "                        ", "raise", "TypeError", "(", "\"{} must be list of numpy arrays\"", ".", "format", "(", "data_name", ")", ")", "\n", "", "", "", "if", "internal_data_name", "in", "check_bbox_param", "and", "self", ".", "processors", ".", "get", "(", "\"bboxes\"", ")", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\"bbox_params must be specified for bbox transformations\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose._make_targets_contiguous": [[275, 283], ["data.items", "isinstance", "numpy.ascontiguousarray"], "methods", ["None"], ["", "", "", "@", "staticmethod", "\n", "def", "_make_targets_contiguous", "(", "data", ":", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "result", "=", "{", "}", "\n", "for", "key", ",", "value", "in", "data", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "value", ",", "np", ".", "ndarray", ")", ":", "\n", "                ", "value", "=", "np", ".", "ascontiguousarray", "(", "value", ")", "\n", "", "result", "[", "key", "]", "=", "value", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.OneOf.__init__": [[294, 299], ["composition.BaseCompose.__init__", "sum"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "self", ",", "transforms", ":", "TransformsSeqType", ",", "p", ":", "float", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "OneOf", ",", "self", ")", ".", "__init__", "(", "transforms", ",", "p", ")", "\n", "transforms_ps", "=", "[", "t", ".", "p", "for", "t", "in", "self", ".", "transforms", "]", "\n", "s", "=", "sum", "(", "transforms_ps", ")", "\n", "self", ".", "transforms_ps", "=", "[", "t", "/", "s", "for", "t", "in", "transforms_ps", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.OneOf.__call__": [[300, 311], ["albumentations.random_utils.choice", "t", "t", "len", "random.random"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "force_apply", ":", "bool", "=", "False", ",", "**", "data", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "if", "self", ".", "replay_mode", ":", "\n", "            ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "                ", "data", "=", "t", "(", "**", "data", ")", "\n", "", "return", "data", "\n", "\n", "", "if", "self", ".", "transforms_ps", "and", "(", "force_apply", "or", "random", ".", "random", "(", ")", "<", "self", ".", "p", ")", ":", "\n", "            ", "idx", ":", "int", "=", "random_utils", ".", "choice", "(", "len", "(", "self", ".", "transforms", ")", ",", "p", "=", "self", ".", "transforms_ps", ")", "\n", "t", "=", "self", ".", "transforms", "[", "idx", "]", "\n", "data", "=", "t", "(", "force_apply", "=", "True", ",", "**", "data", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.SomeOf.__init__": [[324, 331], ["composition.BaseCompose.__init__", "sum"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "self", ",", "transforms", ":", "TransformsSeqType", ",", "n", ":", "int", ",", "replace", ":", "bool", "=", "True", ",", "p", ":", "float", "=", "1", ")", ":", "\n", "        ", "super", "(", "SomeOf", ",", "self", ")", ".", "__init__", "(", "transforms", ",", "p", ")", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "replace", "=", "replace", "\n", "transforms_ps", "=", "[", "t", ".", "p", "for", "t", "in", "self", ".", "transforms", "]", "\n", "s", "=", "sum", "(", "transforms_ps", ")", "\n", "self", ".", "transforms_ps", "=", "[", "t", "/", "s", "for", "t", "in", "transforms_ps", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.SomeOf.__call__": [[332, 344], ["albumentations.random_utils.choice", "t", "len", "t", "random.random"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.choice", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "force_apply", ":", "bool", "=", "False", ",", "**", "data", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "if", "self", ".", "replay_mode", ":", "\n", "            ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "                ", "data", "=", "t", "(", "**", "data", ")", "\n", "", "return", "data", "\n", "\n", "", "if", "self", ".", "transforms_ps", "and", "(", "force_apply", "or", "random", ".", "random", "(", ")", "<", "self", ".", "p", ")", ":", "\n", "            ", "idx", "=", "random_utils", ".", "choice", "(", "len", "(", "self", ".", "transforms", ")", ",", "size", "=", "self", ".", "n", ",", "replace", "=", "self", ".", "replace", ",", "p", "=", "self", ".", "transforms_ps", ")", "\n", "for", "i", "in", "idx", ":", "# type: ignore", "\n", "                ", "t", "=", "self", ".", "transforms", "[", "i", "]", "\n", "data", "=", "t", "(", "force_apply", "=", "True", ",", "**", "data", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.SomeOf._to_dict": [[345, 349], ["composition.BaseCompose._to_dict", "super()._to_dict.update"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict"], ["", "def", "_to_dict", "(", "self", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "dictionary", "=", "super", "(", "SomeOf", ",", "self", ")", ".", "_to_dict", "(", ")", "\n", "dictionary", ".", "update", "(", "{", "\"n\"", ":", "self", ".", "n", ",", "\"replace\"", ":", "self", ".", "replace", "}", ")", "\n", "return", "dictionary", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.OneOrOther.__init__": [[354, 368], ["composition.BaseCompose.__init__", "len", "warnings.warn", "ValueError"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "first", ":", "typing", ".", "Optional", "[", "TransformType", "]", "=", "None", ",", "\n", "second", ":", "typing", ".", "Optional", "[", "TransformType", "]", "=", "None", ",", "\n", "transforms", ":", "typing", ".", "Optional", "[", "TransformsSeqType", "]", "=", "None", ",", "\n", "p", ":", "float", "=", "0.5", ",", "\n", ")", ":", "\n", "        ", "if", "transforms", "is", "None", ":", "\n", "            ", "if", "first", "is", "None", "or", "second", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\"You must set both first and second or set transforms argument.\"", ")", "\n", "", "transforms", "=", "[", "first", ",", "second", "]", "\n", "", "super", "(", "OneOrOther", ",", "self", ")", ".", "__init__", "(", "transforms", ",", "p", ")", "\n", "if", "len", "(", "self", ".", "transforms", ")", "!=", "2", ":", "\n", "            ", "warnings", ".", "warn", "(", "\"Length of transforms is not equal to 2.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.OneOrOther.__call__": [[369, 379], ["random.random", "t"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "", "def", "__call__", "(", "self", ",", "*", "args", ",", "force_apply", ":", "bool", "=", "False", ",", "**", "data", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "if", "self", ".", "replay_mode", ":", "\n", "            ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "                ", "data", "=", "t", "(", "**", "data", ")", "\n", "", "return", "data", "\n", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p", ":", "\n", "            ", "return", "self", ".", "transforms", "[", "0", "]", "(", "force_apply", "=", "True", ",", "**", "data", ")", "\n", "\n", "", "return", "self", ".", "transforms", "[", "-", "1", "]", "(", "force_apply", "=", "True", ",", "**", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.PerChannel.__init__": [[391, 396], ["composition.BaseCompose.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "transforms", ":", "TransformsSeqType", ",", "channels", ":", "typing", ".", "Optional", "[", "typing", ".", "Sequence", "[", "int", "]", "]", "=", "None", ",", "p", ":", "float", "=", "0.5", "\n", ")", ":", "\n", "        ", "super", "(", "PerChannel", ",", "self", ")", ".", "__init__", "(", "transforms", ",", "p", ")", "\n", "self", ".", "channels", "=", "channels", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.PerChannel.__call__": [[397, 416], ["random.random", "len", "numpy.expand_dims", "range", "t"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "force_apply", ":", "bool", "=", "False", ",", "**", "data", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "if", "force_apply", "or", "random", ".", "random", "(", ")", "<", "self", ".", "p", ":", "\n", "\n", "            ", "image", "=", "data", "[", "\"image\"", "]", "\n", "\n", "# Expand mono images to have a single channel", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "2", ":", "\n", "                ", "image", "=", "np", ".", "expand_dims", "(", "image", ",", "-", "1", ")", "\n", "\n", "", "if", "self", ".", "channels", "is", "None", ":", "\n", "                ", "self", ".", "channels", "=", "range", "(", "image", ".", "shape", "[", "2", "]", ")", "\n", "\n", "", "for", "c", "in", "self", ".", "channels", ":", "\n", "                ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "                    ", "image", "[", ":", ",", ":", ",", "c", "]", "=", "t", "(", "image", "=", "image", "[", ":", ",", ":", ",", "c", "]", ")", "[", "\"image\"", "]", "\n", "\n", "", "", "data", "[", "\"image\"", "]", "=", "image", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.__init__": [[419, 431], ["composition.Compose.__init__", "composition.ReplayCompose.set_deterministic"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.set_deterministic"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "transforms", ":", "TransformsSeqType", ",", "\n", "bbox_params", ":", "typing", ".", "Optional", "[", "typing", ".", "Union", "[", "dict", ",", "\"BboxParams\"", "]", "]", "=", "None", ",", "\n", "keypoint_params", ":", "typing", ".", "Optional", "[", "typing", ".", "Union", "[", "dict", ",", "\"KeypointParams\"", "]", "]", "=", "None", ",", "\n", "additional_targets", ":", "typing", ".", "Optional", "[", "typing", ".", "Dict", "[", "str", ",", "str", "]", "]", "=", "None", ",", "\n", "p", ":", "float", "=", "1.0", ",", "\n", "save_key", ":", "str", "=", "\"replay\"", ",", "\n", ")", ":", "\n", "        ", "super", "(", "ReplayCompose", ",", "self", ")", ".", "__init__", "(", "transforms", ",", "bbox_params", ",", "keypoint_params", ",", "additional_targets", ",", "p", ")", "\n", "self", ".", "set_deterministic", "(", "True", ",", "save_key", "=", "save_key", ")", "\n", "self", ".", "save_key", "=", "save_key", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.__call__": [[432, 440], ["collections.defaultdict", "composition.Compose.__call__", "composition.ReplayCompose.get_dict_with_id", "composition.ReplayCompose.fill_with_params", "composition.ReplayCompose.fill_applied"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.OpenMock.__call__", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Compose.get_dict_with_id", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.fill_with_params", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.fill_applied"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "force_apply", ":", "bool", "=", "False", ",", "**", "kwargs", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "kwargs", "[", "self", ".", "save_key", "]", "=", "defaultdict", "(", "dict", ")", "\n", "result", "=", "super", "(", "ReplayCompose", ",", "self", ")", ".", "__call__", "(", "force_apply", "=", "force_apply", ",", "**", "kwargs", ")", "\n", "serialized", "=", "self", ".", "get_dict_with_id", "(", ")", "\n", "self", ".", "fill_with_params", "(", "serialized", ",", "result", "[", "self", ".", "save_key", "]", ")", "\n", "self", ".", "fill_applied", "(", "serialized", ")", "\n", "result", "[", "self", ".", "save_key", "]", "=", "serialized", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.replay": [[441, 445], ["composition.ReplayCompose._restore_for_replay", "composition.ReplayCompose._restore_for_replay"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose._restore_for_replay", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose._restore_for_replay"], ["", "@", "staticmethod", "\n", "def", "replay", "(", "saved_augmentations", ":", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ",", "**", "kwargs", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "augs", "=", "ReplayCompose", ".", "_restore_for_replay", "(", "saved_augmentations", ")", "\n", "return", "augs", "(", "force_apply", "=", "True", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose._restore_for_replay": [[446, 478], ["albumentations.core.serialization.instantiate_nonserializable", "cls", "transform_dict.items", "composition.ReplayCompose._restore_for_replay"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.instantiate_nonserializable", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose._restore_for_replay"], ["", "@", "staticmethod", "\n", "def", "_restore_for_replay", "(", "\n", "transform_dict", ":", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ",", "lambda_transforms", ":", "typing", ".", "Optional", "[", "dict", "]", "=", "None", "\n", ")", "->", "TransformType", ":", "\n", "        ", "\"\"\"\n        Args:\n            lambda_transforms (dict): A dictionary that contains lambda transforms, that\n            is instances of the Lambda class.\n                This dictionary is required when you are restoring a pipeline that contains lambda transforms. Keys\n                in that dictionary should be named same as `name` arguments in respective lambda transforms from\n                a serialized pipeline.\n        \"\"\"", "\n", "applied", "=", "transform_dict", "[", "\"applied\"", "]", "\n", "params", "=", "transform_dict", "[", "\"params\"", "]", "\n", "lmbd", "=", "instantiate_nonserializable", "(", "transform_dict", ",", "lambda_transforms", ")", "\n", "if", "lmbd", ":", "\n", "            ", "transform", "=", "lmbd", "\n", "", "else", ":", "\n", "            ", "name", "=", "transform_dict", "[", "\"__class_fullname__\"", "]", "\n", "args", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "transform_dict", ".", "items", "(", ")", "if", "k", "not", "in", "[", "\"__class_fullname__\"", ",", "\"applied\"", ",", "\"params\"", "]", "}", "\n", "cls", "=", "SERIALIZABLE_REGISTRY", "[", "name", "]", "\n", "if", "\"transforms\"", "in", "args", ":", "\n", "                ", "args", "[", "\"transforms\"", "]", "=", "[", "\n", "ReplayCompose", ".", "_restore_for_replay", "(", "t", ",", "lambda_transforms", "=", "lambda_transforms", ")", "\n", "for", "t", "in", "args", "[", "\"transforms\"", "]", "\n", "]", "\n", "", "transform", "=", "cls", "(", "**", "args", ")", "\n", "\n", "", "transform", ".", "params", "=", "params", "\n", "transform", ".", "replay_mode", "=", "True", "\n", "transform", ".", "applied_in_replay", "=", "applied", "\n", "return", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.fill_with_params": [[479, 485], ["all_params.get", "serialized.get", "serialized.get", "composition.ReplayCompose.fill_with_params"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.fill_with_params"], ["", "def", "fill_with_params", "(", "self", ",", "serialized", ":", "dict", ",", "all_params", ":", "dict", ")", "->", "None", ":", "\n", "        ", "params", "=", "all_params", ".", "get", "(", "serialized", ".", "get", "(", "\"id\"", ")", ")", "\n", "serialized", "[", "\"params\"", "]", "=", "params", "\n", "del", "serialized", "[", "\"id\"", "]", "\n", "for", "transform", "in", "serialized", ".", "get", "(", "\"transforms\"", ",", "[", "]", ")", ":", "\n", "            ", "self", ".", "fill_with_params", "(", "transform", ",", "all_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.fill_applied": [[486, 493], ["any", "composition.ReplayCompose.fill_applied", "serialized.get"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.fill_applied"], ["", "", "def", "fill_applied", "(", "self", ",", "serialized", ":", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ")", "->", "bool", ":", "\n", "        ", "if", "\"transforms\"", "in", "serialized", ":", "\n", "            ", "applied", "=", "[", "self", ".", "fill_applied", "(", "t", ")", "for", "t", "in", "serialized", "[", "\"transforms\"", "]", "]", "\n", "serialized", "[", "\"applied\"", "]", "=", "any", "(", "applied", ")", "\n", "", "else", ":", "\n", "            ", "serialized", "[", "\"applied\"", "]", "=", "serialized", ".", "get", "(", "\"params\"", ")", "is", "not", "None", "\n", "", "return", "serialized", "[", "\"applied\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose._to_dict": [[494, 498], ["composition.Compose._to_dict", "super()._to_dict.update"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict"], ["", "def", "_to_dict", "(", "self", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "dictionary", "=", "super", "(", "ReplayCompose", ",", "self", ")", ".", "_to_dict", "(", ")", "\n", "dictionary", ".", "update", "(", "{", "\"save_key\"", ":", "self", ".", "save_key", "}", ")", "\n", "return", "dictionary", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BboxParams.__init__": [[527, 539], ["albumentations.core.utils.Params.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "format", ":", "str", ",", "\n", "label_fields", ":", "typing", ".", "Optional", "[", "typing", ".", "Sequence", "[", "str", "]", "]", "=", "None", ",", "\n", "min_area", ":", "float", "=", "0.0", ",", "\n", "min_visibility", ":", "float", "=", "0.0", ",", "\n", "check_each_transform", ":", "bool", "=", "True", ",", "\n", ")", ":", "\n", "        ", "super", "(", "BboxParams", ",", "self", ")", ".", "__init__", "(", "format", ",", "label_fields", ")", "\n", "self", ".", "min_area", "=", "min_area", "\n", "self", ".", "min_visibility", "=", "min_visibility", "\n", "self", ".", "check_each_transform", "=", "check_each_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BboxParams._to_dict": [[540, 550], ["super()._to_dict", "super()._to_dict.update"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict"], ["", "def", "_to_dict", "(", "self", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "data", "=", "super", "(", "BboxParams", ",", "self", ")", ".", "_to_dict", "(", ")", "\n", "data", ".", "update", "(", "\n", "{", "\n", "\"min_area\"", ":", "self", ".", "min_area", ",", "\n", "\"min_visibility\"", ":", "self", ".", "min_visibility", ",", "\n", "\"check_each_transform\"", ":", "self", ".", "check_each_transform", ",", "\n", "}", "\n", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.KeypointParams.__init__": [[574, 586], ["albumentations.core.utils.Params.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "format", ":", "str", ",", "# skipcq: PYL-W0622", "\n", "label_fields", ":", "typing", ".", "Optional", "[", "typing", ".", "Sequence", "[", "str", "]", "]", "=", "None", ",", "\n", "remove_invisible", ":", "bool", "=", "True", ",", "\n", "angle_in_degrees", ":", "bool", "=", "True", ",", "\n", "check_each_transform", ":", "bool", "=", "True", ",", "\n", ")", ":", "\n", "        ", "super", "(", "KeypointParams", ",", "self", ")", ".", "__init__", "(", "format", ",", "label_fields", ")", "\n", "self", ".", "remove_invisible", "=", "remove_invisible", "\n", "self", ".", "angle_in_degrees", "=", "angle_in_degrees", "\n", "self", ".", "check_each_transform", "=", "check_each_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.KeypointParams._to_dict": [[587, 597], ["super()._to_dict", "super()._to_dict.update"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict"], ["", "def", "_to_dict", "(", "self", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "data", "=", "super", "(", "KeypointParams", ",", "self", ")", ".", "_to_dict", "(", ")", "\n", "data", ".", "update", "(", "\n", "{", "\n", "\"remove_invisible\"", ":", "self", ".", "remove_invisible", ",", "\n", "\"angle_in_degrees\"", ":", "self", ".", "angle_in_degrees", ",", "\n", "\"check_each_transform\"", ":", "self", ".", "check_each_transform", ",", "\n", "}", "\n", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Sequential.__init__": [[624, 626], ["composition.BaseCompose.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["def", "__init__", "(", "self", ",", "transforms", ":", "TransformsSeqType", ",", "p", ":", "float", "=", "0.5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "transforms", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.Sequential.__call__": [[627, 631], ["t"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "**", "data", ")", "->", "typing", ".", "Dict", "[", "str", ",", "typing", ".", "Any", "]", ":", "\n", "        ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "data", "=", "t", "(", "**", "data", ")", "\n", "", "return", "data", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.core.composition.get_always_apply": [[40, 48], ["isinstance", "new_transforms.extend", "composition.get_always_apply", "new_transforms.append"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.get_always_apply"], ["def", "get_always_apply", "(", "transforms", ":", "typing", ".", "Union", "[", "\"BaseCompose\"", ",", "TransformsSeqType", "]", ")", "->", "TransformsSeqType", ":", "\n", "    ", "new_transforms", ":", "typing", ".", "List", "[", "TransformType", "]", "=", "[", "]", "\n", "for", "transform", "in", "transforms", ":", "# type: ignore", "\n", "        ", "if", "isinstance", "(", "transform", ",", "BaseCompose", ")", ":", "\n", "            ", "new_transforms", ".", "extend", "(", "get_always_apply", "(", "transform", ")", ")", "\n", "", "elif", "transform", ".", "always_apply", ":", "\n", "            ", "new_transforms", ".", "append", "(", "transform", ")", "\n", "", "", "return", "new_transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.SerializableMeta.__new__": [[45, 52], ["type.__new__", "super().__new__.is_serializable", "super().__new__.get_class_fullname", "super().__new__.get_class_fullname"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.SerializableMeta.__new__", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.is_serializable", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_class_fullname", "home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.get_class_fullname"], ["def", "__new__", "(", "cls", ",", "name", ",", "bases", ",", "class_dict", ")", ":", "\n", "        ", "cls_obj", "=", "super", "(", ")", ".", "__new__", "(", "cls", ",", "name", ",", "bases", ",", "class_dict", ")", "\n", "if", "cls_obj", ".", "is_serializable", "(", ")", ":", "\n", "            ", "SERIALIZABLE_REGISTRY", "[", "cls_obj", ".", "get_class_fullname", "(", ")", "]", "=", "cls_obj", "\n", "", "else", ":", "\n", "            ", "NON_SERIALIZABLE_REGISTRY", "[", "cls_obj", ".", "get_class_fullname", "(", ")", "]", "=", "cls_obj", "\n", "", "return", "cls_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.shorten_class_name": [[24, 32], ["class_fullname.split", "len"], "function", ["None"], ["def", "shorten_class_name", "(", "class_fullname", ")", ":", "\n", "    ", "splitted", "=", "class_fullname", ".", "split", "(", "\".\"", ")", "\n", "if", "len", "(", "splitted", ")", "==", "1", ":", "\n", "        ", "return", "class_fullname", "\n", "", "top_module", ",", "*", "_", ",", "class_name", "=", "splitted", "\n", "if", "top_module", "==", "\"albumentations\"", ":", "\n", "        ", "return", "class_name", "\n", "", "return", "class_fullname", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.get_shortest_class_fullname": [[34, 37], ["serialization.shorten_class_name"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.shorten_class_name"], ["", "def", "get_shortest_class_fullname", "(", "cls", ")", ":", "\n", "    ", "class_fullname", "=", "\"{cls.__module__}.{cls.__name__}\"", ".", "format", "(", "cls", "=", "cls", ")", "\n", "return", "shorten_class_name", "(", "class_fullname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict": [[54, 84], ["ValueError", "transform._to_dict", "warnings.warn"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict"], ["", "", "def", "to_dict", "(", "transform", ",", "on_not_implemented_error", "=", "\"raise\"", ")", ":", "\n", "    ", "\"\"\"\n    Take a transform pipeline and convert it to a serializable representation that uses only standard\n    python data types: dictionaries, lists, strings, integers, and floats.\n\n    Args:\n        transform (object): A transform that should be serialized. If the transform doesn't implement the `to_dict`\n            method and `on_not_implemented_error` equals to 'raise' then `NotImplementedError` is raised.\n            If `on_not_implemented_error` equals to 'warn' then `NotImplementedError` will be ignored\n            but no transform parameters will be serialized.\n    \"\"\"", "\n", "if", "on_not_implemented_error", "not", "in", "{", "\"raise\"", ",", "\"warn\"", "}", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Unknown on_not_implemented_error value: {}. Supported values are: 'raise' and 'warn'\"", ".", "format", "(", "\n", "on_not_implemented_error", "\n", ")", "\n", ")", "\n", "", "try", ":", "\n", "        ", "transform_dict", "=", "transform", ".", "_to_dict", "(", ")", "# skipcq: PYL-W0212", "\n", "", "except", "NotImplementedError", "as", "e", ":", "\n", "        ", "if", "on_not_implemented_error", "==", "\"raise\"", ":", "\n", "            ", "raise", "e", "\n", "\n", "", "transform_dict", "=", "{", "}", "\n", "warnings", ".", "warn", "(", "\n", "\"Got NotImplementedError while trying to serialize {obj}. Object arguments are not preserved. \"", "\n", "\"Implement either '{cls_name}.get_transform_init_args_names' or '{cls_name}.get_transform_init_args' \"", "\n", "\"method to make the transform serializable\"", ".", "format", "(", "obj", "=", "transform", ",", "cls_name", "=", "transform", ".", "__class__", ".", "__name__", ")", "\n", ")", "\n", "", "return", "{", "\"__version__\"", ":", "__version__", ",", "\"transform\"", ":", "transform_dict", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.instantiate_nonserializable": [[86, 101], ["nonserializable.get.get", "nonserializable.get", "ValueError", "ValueError"], "function", ["None"], ["", "def", "instantiate_nonserializable", "(", "transform", ",", "nonserializable", "=", "None", ")", ":", "\n", "    ", "if", "transform", ".", "get", "(", "\"__class_fullname__\"", ")", "in", "NON_SERIALIZABLE_REGISTRY", ":", "\n", "        ", "name", "=", "transform", "[", "\"__name__\"", "]", "\n", "if", "nonserializable", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"To deserialize a non-serializable transform with name {name} you need to pass a dict with\"", "\n", "\"this transform as the `lambda_transforms` argument\"", ".", "format", "(", "name", "=", "name", ")", "\n", ")", "\n", "", "transform", "=", "nonserializable", ".", "get", "(", "name", ")", "\n", "if", "transform", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Non-serializable transform with {name} was not found in `nonserializable`\"", ".", "format", "(", "name", "=", "name", ")", "\n", ")", "\n", "", "return", "transform", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict": [[103, 128], ["serialization.register_additional_transforms", "serialization.instantiate_nonserializable", "cls", "warnings.warn", "transform.items", "serialization.shorten_class_name", "serialization.from_dict"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.register_additional_transforms", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.instantiate_nonserializable", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.shorten_class_name", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict"], ["", "def", "from_dict", "(", "transform_dict", ",", "nonserializable", "=", "None", ",", "lambda_transforms", "=", "\"deprecated\"", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        transform_dict (dict): A dictionary with serialized transform pipeline.\n        nonserializable (dict): A dictionary that contains non-serializable transforms.\n            This dictionary is required when you are restoring a pipeline that contains non-serializable transforms.\n            Keys in that dictionary should be named same as `name` arguments in respective transforms from\n            a serialized pipeline.\n        lambda_transforms (dict): Deprecated. Use 'nonserizalizable' instead.\n    \"\"\"", "\n", "if", "lambda_transforms", "!=", "\"deprecated\"", ":", "\n", "        ", "warnings", ".", "warn", "(", "\"lambda_transforms argument is deprecated, please use 'nonserializable'\"", ",", "DeprecationWarning", ")", "\n", "nonserializable", "=", "lambda_transforms", "\n", "\n", "", "register_additional_transforms", "(", ")", "\n", "transform", "=", "transform_dict", "[", "\"transform\"", "]", "\n", "lmbd", "=", "instantiate_nonserializable", "(", "transform", ",", "nonserializable", ")", "\n", "if", "lmbd", ":", "\n", "        ", "return", "lmbd", "\n", "", "name", "=", "transform", "[", "\"__class_fullname__\"", "]", "\n", "args", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "transform", ".", "items", "(", ")", "if", "k", "!=", "\"__class_fullname__\"", "}", "\n", "cls", "=", "SERIALIZABLE_REGISTRY", "[", "shorten_class_name", "(", "name", ")", "]", "\n", "if", "\"transforms\"", "in", "args", ":", "\n", "        ", "args", "[", "\"transforms\"", "]", "=", "[", "from_dict", "(", "{", "\"transform\"", ":", "t", "}", ",", "nonserializable", "=", "nonserializable", ")", "for", "t", "in", "args", "[", "\"transforms\"", "]", "]", "\n", "", "return", "cls", "(", "**", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.check_data_format": [[130, 133], ["ValueError"], "function", ["None"], ["", "def", "check_data_format", "(", "data_format", ")", ":", "\n", "    ", "if", "data_format", "not", "in", "{", "\"json\"", ",", "\"yaml\"", "}", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown data_format {}. Supported formats are: 'json' and 'yaml'\"", ".", "format", "(", "data_format", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.save": [[135, 153], ["serialization.check_data_format", "serialization.to_dict", "open", "dump_fn"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.check_data_format", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict"], ["", "", "def", "save", "(", "transform", ",", "filepath", ",", "data_format", "=", "\"json\"", ",", "on_not_implemented_error", "=", "\"raise\"", ")", ":", "\n", "    ", "\"\"\"\n    Take a transform pipeline, serialize it and save a serialized version to a file\n    using either json or yaml format.\n\n    Args:\n        transform (obj): Transform to serialize.\n        filepath (str): Filepath to write to.\n        data_format (str): Serialization format. Should be either `json` or 'yaml'.\n        on_not_implemented_error (str): Parameter that describes what to do if a transform doesn't implement\n            the `to_dict` method. If 'raise' then `NotImplementedError` is raised, if `warn` then the exception will be\n            ignored and no transform arguments will be saved.\n    \"\"\"", "\n", "check_data_format", "(", "data_format", ")", "\n", "transform_dict", "=", "to_dict", "(", "transform", ",", "on_not_implemented_error", "=", "on_not_implemented_error", ")", "\n", "dump_fn", "=", "json", ".", "dump", "if", "data_format", "==", "\"json\"", "else", "yaml", ".", "safe_dump", "\n", "with", "open", "(", "filepath", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "dump_fn", "(", "transform_dict", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.load": [[155, 178], ["serialization.check_data_format", "serialization.from_dict", "warnings.warn", "open", "load_fn"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.check_data_format", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict"], ["", "", "def", "load", "(", "filepath", ",", "data_format", "=", "\"json\"", ",", "nonserializable", "=", "None", ",", "lambda_transforms", "=", "\"deprecated\"", ")", ":", "\n", "    ", "\"\"\"\n    Load a serialized pipeline from a json or yaml file and construct a transform pipeline.\n\n    Args:\n        filepath (str): Filepath to read from.\n        data_format (str): Serialization format. Should be either `json` or 'yaml'.\n        nonserializable (dict): A dictionary that contains non-serializable transforms.\n            This dictionary is required when you are restoring a pipeline that contains non-serializable transforms.\n            Keys in that dictionary should be named same as `name` arguments in respective transforms from\n            a serialized pipeline.\n        lambda_transforms (dict): Deprecated. Use 'nonserizalizable' instead.\n    \"\"\"", "\n", "if", "lambda_transforms", "!=", "\"deprecated\"", ":", "\n", "        ", "warnings", ".", "warn", "(", "\"lambda_transforms argument is deprecated, please use 'nonserializable'\"", ",", "DeprecationWarning", ")", "\n", "nonserializable", "=", "lambda_transforms", "\n", "\n", "", "check_data_format", "(", "data_format", ")", "\n", "load_fn", "=", "json", ".", "load", "if", "data_format", "==", "\"json\"", "else", "yaml", ".", "safe_load", "\n", "with", "open", "(", "filepath", ")", "as", "f", ":", "\n", "        ", "transform_dict", "=", "load_fn", "(", "f", ")", "\n", "\n", "", "return", "from_dict", "(", "transform_dict", ",", "nonserializable", "=", "nonserializable", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.register_additional_transforms": [[180, 189], ["None"], "function", ["None"], ["", "def", "register_additional_transforms", "(", ")", ":", "\n", "    ", "\"\"\"\n    Register transforms that are not imported directly into the `albumentations` module.\n    \"\"\"", "\n", "try", ":", "\n", "# This import will result in ImportError if `torch` is not installed", "\n", "        ", "import", "albumentations", ".", "pytorch", "\n", "", "except", "ImportError", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params.__init__": [[38, 41], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.Params._to_dict": [[42, 44], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.__init__": [[47, 54], ["additional_targets.items", "utils.DataProcessor.data_fields.append"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.default_data_name": [[55, 59], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.ensure_data_valid": [[60, 62], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.ensure_transforms_valid": [[63, 65], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.postprocess": [[66, 75], ["utils.get_shape", "utils.DataProcessor.remove_label_fields_from_data", "utils.DataProcessor.filter", "utils.DataProcessor.check_and_convert"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.get_shape", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.remove_label_fields_from_data", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.filter", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.check_and_convert"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.preprocess": [[76, 82], ["utils.DataProcessor.add_label_fields_to_data", "utils.DataProcessor.check_and_convert"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.add_label_fields_to_data", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.check_and_convert"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.check_and_convert": [[83, 92], ["utils.DataProcessor.convert_from_albumentations", "utils.DataProcessor.check", "utils.DataProcessor.convert_to_albumentations"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.convert_from_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.check", "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.convert_to_albumentations"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.filter": [[93, 96], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.check": [[97, 100], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.convert_to_albumentations": [[101, 104], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.convert_from_albumentations": [[105, 108], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.add_label_fields_to_data": [[109, 120], ["zip", "len", "len", "data_with_added_field.append", "list"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.DataProcessor.remove_label_fields_from_data": [[121, 134], ["len", "enumerate", "field_values.append"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.get_shape": [[9, 25], ["isinstance", "RuntimeError", "torch.is_tensor", "type"], "function", ["None"], ["\n", "", "def", "read_rgb_image", "(", "path", ")", ":", "\n", "    ", "image", "=", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "return", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.core.utils.format_args": [[28, 35], ["args_dict.items", "isinstance", "formatted_args.append"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.__init__": [[50, 52], ["core.transforms_interface.BasicTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], ["\n", "def", "__init__", "(", "self", ",", "num_classes", "=", "1", ",", "sigmoid", "=", "True", ",", "normalize", "=", "None", ")", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.processor": [[53, 56], ["iaa.Noop"], "methods", ["None"], ["\"`ToTensor` is obsolete and it was removed from Albumentations. Please use `ToTensorV2` instead - \"", "\n", "\"https://albumentations.ai/docs/api_reference/pytorch/transforms/\"", "\n", "\"#albumentations.pytorch.transforms.ToTensorV2. \"", "\n", "\"\\n\\nIf you need `ToTensor` downgrade Albumentations to version 0.5.2.\"", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.update_params": [[57, 61], ["super().update_params", "transforms.BasicIAATransform.processor.to_deterministic"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.update_params"], [")", "\n", "\n", "\n", "", "", "class", "ToTensorV2", "(", "BasicTransform", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.apply": [[62, 64], ["deterministic_processor.augment_image"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.DualIAATransform.apply_to_bboxes": [[67, 80], ["len", "augmentations.bbox_utils.convert_bboxes_from_albumentations", "ia.BoundingBoxesOnImage", "augmentations.bbox_utils.convert_bboxes_to_albumentations", "ia.BoundingBox", "deterministic_processor.augment_bounding_boxes", "list", "zip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations"], ["\n", "\n", "def", "__init__", "(", "self", ",", "transpose_mask", "=", "False", ",", "always_apply", "=", "True", ",", "p", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "ToTensorV2", ",", "self", ")", ".", "__init__", "(", "always_apply", "=", "always_apply", ",", "p", "=", "p", ")", "\n", "self", ".", "transpose_mask", "=", "transpose_mask", "\n", "\n", "", "@", "property", "\n", "def", "targets", "(", "self", ")", ":", "\n", "        ", "return", "{", "\"image\"", ":", "self", ".", "apply", ",", "\"mask\"", ":", "self", ".", "apply_to_mask", ",", "\"masks\"", ":", "self", ".", "apply_to_masks", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.DualIAATransform.apply_to_keypoints": [[89, 99], ["len", "augmentations.keypoints_utils.convert_keypoints_from_albumentations", "ia.KeypointsOnImage", "augmentations.keypoints_utils.convert_keypoints_to_albumentations", "ia.Keypoint", "deterministic_processor.augment_keypoints", "list", "zip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoints_from_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoints_to_albumentations"], ["\n", "", "def", "apply_to_mask", "(", "self", ",", "mask", ",", "**", "params", ")", ":", "# skipcq: PYL-W0613", "\n", "        ", "if", "self", ".", "transpose_mask", "and", "mask", ".", "ndim", "==", "3", ":", "\n", "            ", "mask", "=", "mask", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "\n", "", "def", "apply_to_masks", "(", "self", ",", "masks", ",", "**", "params", ")", ":", "\n", "        ", "return", "[", "self", ".", "apply_to_mask", "(", "mask", ",", "**", "params", ")", "for", "mask", "in", "masks", "]", "\n", "\n", "", "def", "get_transform_init_args_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "\"transpose_mask\"", ",", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAACropAndPad.__init__": [[108, 118], ["core.transforms_interface.DualTransform.__init__", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAACropAndPad.processor": [[119, 122], ["iaa.CropAndPad"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAACropAndPad.get_transform_init_args_names": [[123, 125], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAFliplr.__init__": [[130, 133], ["core.transforms_interface.DualTransform.__init__", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAFliplr.processor": [[134, 137], ["iaa.Fliplr"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAFliplr.get_transform_init_args_names": [[138, 140], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAFlipud.__init__": [[145, 148], ["core.transforms_interface.DualTransform.__init__", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAFlipud.processor": [[149, 152], ["iaa.Flipud"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAFlipud.get_transform_init_args_names": [[153, 155], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAEmboss.__init__": [[171, 176], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAEmboss.processor": [[177, 180], ["iaa.Emboss"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAEmboss.get_transform_init_args_names": [[181, 183], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAASuperpixels.__init__": [[201, 206], ["core.transforms_interface.ImageOnlyTransform.__init__", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAASuperpixels.processor": [[207, 210], ["iaa.Superpixels"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAASuperpixels.get_transform_init_args_names": [[211, 213], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAASharpen.__init__": [[228, 233], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAASharpen.processor": [[234, 237], ["iaa.Sharpen"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAASharpen.get_transform_init_args_names": [[238, 240], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAAdditiveGaussianNoise.__init__": [[257, 263], ["core.transforms_interface.ImageOnlyTransform.__init__", "core.transforms_interface.to_tuple", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAAdditiveGaussianNoise.processor": [[264, 267], ["iaa.AdditiveGaussianNoise"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAAdditiveGaussianNoise.get_transform_init_args_names": [[268, 270], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAPiecewiseAffine.__init__": [[290, 301], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAPiecewiseAffine.processor": [[302, 305], ["iaa.PiecewiseAffine"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAPiecewiseAffine.get_transform_init_args_names": [[306, 308], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAAffine.__init__": [[325, 348], ["core.transforms_interface.DualTransform.__init__", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "core.transforms_interface.to_tuple", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAAffine.processor": [[349, 360], ["iaa.Affine"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAAffine.get_transform_init_args_names": [[362, 364], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAPerspective.__init__": [[381, 386], ["augmentations.Perspective.__init__", "core.transforms_interface.to_tuple", "warnings.warn"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAPerspective.processor": [[387, 390], ["iaa.PerspectiveTransform"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.IAAPerspective.get_transform_init_args_names": [[391, 393], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.imgaug.stubs.IAAStub.__init__": [[16, 21], ["RuntimeError"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "cls_name", "=", "self", ".", "__class__", ".", "__name__", "\n", "doc_link", "=", "\"https://albumentations.ai/docs/api_reference/augmentations\"", "+", "self", ".", "doc_link", "\n", "raise", "RuntimeError", "(", "\n", "f\"You are trying to use a deprecated augmentation '{cls_name}' which depends on the imgaug library, \"", "\n", "f\"but imgaug is not installed.\\n\\n\"", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.make_augmentation_docs_link": [[21, 27], ["cls.__module__.split"], "function", ["None"], ["def", "make_augmentation_docs_link", "(", "cls", ")", ":", "\n", "    ", "module_parts", "=", "cls", ".", "__module__", ".", "split", "(", "\".\"", ")", "\n", "module_page", "=", "\"/\"", ".", "join", "(", "module_parts", "[", "1", ":", "]", ")", "\n", "return", "(", "\n", "\"[{cls.__name__}](https://albumentations.ai/docs/api_reference/{module_page}/#{cls.__module__}.{cls.__name__})\"", "\n", ")", ".", "format", "(", "module_page", "=", "module_page", ",", "cls", "=", "cls", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.parse_args": [[36, 43], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_subparsers", "parser.add_subparsers.add_parser", "parser.add_subparsers.add_parser", "subparsers.add_parser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "subparsers", "=", "parser", ".", "add_subparsers", "(", "help", "=", "\"Commands\"", ",", "dest", "=", "\"command\"", ")", "\n", "subparsers", ".", "add_parser", "(", "\"make\"", ")", "\n", "check_parser", "=", "subparsers", ".", "add_parser", "(", "\"check\"", ")", "\n", "check_parser", ".", "add_argument", "(", "\"filepath\"", ",", "type", "=", "str", ",", "help", "=", "\"Path to a file that should be checked\"", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.make_separator": [[45, 49], ["None"], "function", ["None"], ["", "def", "make_separator", "(", "width", ",", "align_center", ")", ":", "\n", "    ", "if", "align_center", ":", "\n", "        ", "return", "\":\"", "+", "\"-\"", "*", "(", "width", "-", "2", ")", "+", "\":\"", "\n", "", "return", "\"-\"", "*", "width", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.get_transforms_info": [[51, 94], ["inspect.getmembers", "inspect.isclass", "issubclass", "issubclass", "issubclass", "issubclass", "targets.add", "targets.add", "targets.add", "targets.update", "targets.add", "targets.add", "targets.add", "make_transforms_docs.make_augmentation_docs_link", "issubclass", "inspect.getsource", "inspect.getsource", "hasattr", "hasattr", "hasattr", "hasattr"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.make_augmentation_docs_link"], ["", "def", "get_transforms_info", "(", ")", ":", "\n", "    ", "transforms_info", "=", "{", "}", "\n", "members", "=", "inspect", ".", "getmembers", "(", "albumentations", ")", "\n", "for", "name", ",", "cls", "in", "members", ":", "\n", "        ", "if", "inspect", ".", "isclass", "(", "cls", ")", "and", "issubclass", "(", "cls", ",", "albumentations", ".", "BasicTransform", ")", "and", "name", "not", "in", "IGNORED_CLASSES", ":", "\n", "            ", "if", "\"DeprecationWarning\"", "in", "inspect", ".", "getsource", "(", "cls", ")", "or", "\"FutureWarning\"", "in", "inspect", ".", "getsource", "(", "cls", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "targets", "=", "{", "Targets", ".", "IMAGE", "}", "\n", "if", "issubclass", "(", "cls", ",", "albumentations", ".", "DualTransform", ")", ":", "\n", "                ", "targets", ".", "add", "(", "Targets", ".", "MASKS", ")", "\n", "\n", "", "if", "(", "\n", "hasattr", "(", "cls", ",", "\"apply_to_bbox\"", ")", "and", "cls", ".", "apply_to_bbox", "is", "not", "albumentations", ".", "DualTransform", ".", "apply_to_bbox", "\n", ")", "or", "(", "\n", "hasattr", "(", "cls", ",", "\"apply_to_bboxes\"", ")", "\n", "and", "cls", ".", "apply_to_bboxes", "is", "not", "albumentations", ".", "DualTransform", ".", "apply_to_bboxes", "\n", ")", ":", "\n", "                ", "targets", ".", "add", "(", "Targets", ".", "BBOXES", ")", "\n", "\n", "", "if", "(", "\n", "hasattr", "(", "cls", ",", "\"apply_to_keypoint\"", ")", "\n", "and", "cls", ".", "apply_to_keypoint", "is", "not", "albumentations", ".", "DualTransform", ".", "apply_to_keypoint", "\n", ")", "or", "(", "\n", "hasattr", "(", "cls", ",", "\"apply_to_keypoints\"", ")", "\n", "and", "cls", ".", "apply_to_keypoints", "is", "not", "albumentations", ".", "DualTransform", ".", "apply_to_keypoints", "\n", ")", ":", "\n", "                ", "targets", ".", "add", "(", "Targets", ".", "KEYPOINTS", ")", "\n", "\n", "", "if", "issubclass", "(", "cls", ",", "albumentations", ".", "DualIAATransform", ")", ":", "\n", "                ", "targets", ".", "update", "(", "{", "Targets", ".", "BBOXES", ",", "Targets", ".", "KEYPOINTS", "}", ")", "\n", "\n", "", "if", "issubclass", "(", "cls", ",", "albumentations", ".", "Lambda", ")", ":", "\n", "                ", "targets", ".", "add", "(", "Targets", ".", "MASKS", ")", "\n", "targets", ".", "add", "(", "Targets", ".", "BBOXES", ")", "\n", "targets", ".", "add", "(", "Targets", ".", "KEYPOINTS", ")", "\n", "\n", "", "transforms_info", "[", "name", "]", "=", "{", "\n", "\"targets\"", ":", "targets", ",", "\n", "\"docs_link\"", ":", "make_augmentation_docs_link", "(", "cls", ")", ",", "\n", "\"image_only\"", ":", "issubclass", "(", "cls", ",", "albumentations", ".", "ImageOnlyTransform", ")", ",", "\n", "}", "\n", "", "", "return", "transforms_info", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.make_transforms_targets_table": [[96, 122], ["sorted", "transforms_info.items", "rows.append", "max", "lines.append", "transform_targets.append", "zip", "len", "make_transforms_docs.make_separator", "zip", "enumerate", "zip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.make_separator"], ["", "def", "make_transforms_targets_table", "(", "transforms_info", ",", "header", ")", ":", "\n", "    ", "rows", "=", "[", "header", "]", "\n", "for", "transform", ",", "info", "in", "sorted", "(", "transforms_info", ".", "items", "(", ")", ",", "key", "=", "lambda", "kv", ":", "kv", "[", "0", "]", ")", ":", "\n", "        ", "transform_targets", "=", "[", "]", "\n", "for", "target", "in", "Targets", ":", "\n", "            ", "mark", "=", "\"\u2713\"", "if", "target", "in", "info", "[", "\"targets\"", "]", "else", "\"\"", "\n", "transform_targets", ".", "append", "(", "mark", ")", "\n", "", "row", "=", "[", "info", "[", "\"docs_link\"", "]", "or", "transform", "]", "+", "transform_targets", "\n", "rows", ".", "append", "(", "row", ")", "\n", "\n", "", "column_widths", "=", "[", "max", "(", "len", "(", "r", ")", "for", "r", "in", "column", ")", "for", "column", "in", "zip", "(", "*", "rows", ")", "]", "\n", "lines", "=", "[", "\n", "\" | \"", ".", "join", "(", "\n", "\"{title: <{width}}\"", ".", "format", "(", "width", "=", "width", ",", "title", "=", "title", ")", "for", "width", ",", "title", "in", "zip", "(", "column_widths", ",", "rows", "[", "0", "]", ")", "\n", ")", ",", "\n", "\" | \"", ".", "join", "(", "\n", "make_separator", "(", "width", ",", "align_center", "=", "column_index", ">", "0", ")", "for", "column_index", ",", "width", "in", "enumerate", "(", "column_widths", ")", "\n", ")", ",", "\n", "]", "\n", "for", "row", "in", "rows", "[", "1", ":", "]", ":", "\n", "        ", "lines", ".", "append", "(", "\n", "\" | \"", ".", "join", "(", "\n", "\"{column: <{width}}\"", ".", "format", "(", "width", "=", "width", ",", "column", "=", "column", ")", "for", "width", ",", "column", "in", "zip", "(", "column_widths", ",", "row", ")", "\n", ")", "\n", ")", "\n", "", "return", "\"\\n\"", ".", "join", "(", "\"| {line} |\"", ".", "format", "(", "line", "=", "line", ")", "for", "line", "in", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.make_transforms_targets_links": [[124, 127], ["sorted", "transforms_info.items"], "function", ["None"], ["", "def", "make_transforms_targets_links", "(", "transforms_info", ")", ":", "\n", "    ", "return", "\"\\n\"", ".", "join", "(", "\n", "\"- \"", "+", "info", "[", "\"docs_link\"", "]", "for", "transform", ",", "info", "in", "sorted", "(", "transforms_info", ".", "items", "(", ")", ",", "key", "=", "lambda", "kv", ":", "kv", "[", "0", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.check_docs": [[130, 165], ["set", "image_only_transforms_links.split", "dual_transforms_table.split", "open", "f.read", "ValueError", "ValueError", "ValueError", "set.update", "image_only_lines_not_in_text.append", "dual_lines_not_in_text.append", "set.update", "os.path.basename", "os.path.basename", "os.path.realpath"], "function", ["None"], ["", "def", "check_docs", "(", "filepath", ",", "image_only_transforms_links", ",", "dual_transforms_table", ")", ":", "\n", "    ", "with", "open", "(", "filepath", ",", "\"r\"", ",", "encoding", "=", "\"utf8\"", ")", "as", "f", ":", "\n", "        ", "text", "=", "f", ".", "read", "(", ")", "\n", "", "outdated_docs", "=", "set", "(", ")", "\n", "image_only_lines_not_in_text", "=", "[", "]", "\n", "dual_lines_not_in_text", "=", "[", "]", "\n", "for", "line", "in", "image_only_transforms_links", ".", "split", "(", "\"\\n\"", ")", ":", "\n", "        ", "if", "line", "not", "in", "text", ":", "\n", "            ", "outdated_docs", ".", "update", "(", "[", "\"Pixel-level\"", "]", ")", "\n", "image_only_lines_not_in_text", ".", "append", "(", "line", ")", "\n", "", "", "for", "line", "in", "dual_transforms_table", ".", "split", "(", "\"\\n\"", ")", ":", "\n", "        ", "if", "line", "not", "in", "text", ":", "\n", "            ", "dual_lines_not_in_text", ".", "append", "(", "line", ")", "\n", "outdated_docs", ".", "update", "(", "[", "\"Spatial-level\"", "]", ")", "\n", "", "", "if", "outdated_docs", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"Docs for the following transform types are outdated: {outdated_docs_headers}. \"", "\n", "\"Generate new docs by executing the `python tools/{py_file} make` command \"", "\n", "\"and paste them to {filename}.\\n\"", "\n", "\"# Pixel-level transforms lines not in file:\\n\"", "\n", "\"{image_only_lines}\\n\"", "\n", "\"# Spatial-level transforms lines not in file:\\n\"", "\n", "\"{dual_lines}\"", ".", "format", "(", "\n", "outdated_docs_headers", "=", "\", \"", ".", "join", "(", "outdated_docs", ")", ",", "\n", "py_file", "=", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", ",", "\n", "filename", "=", "os", ".", "path", ".", "basename", "(", "filepath", ")", ",", "\n", "image_only_lines", "=", "\"\\n\"", ".", "join", "(", "image_only_lines_not_in_text", ")", ",", "\n", "dual_lines", "=", "\"\\n\"", ".", "join", "(", "dual_lines_not_in_text", ")", ",", "\n", ")", "\n", ")", "\n", "\n", "", "if", "image_only_transforms_links", "not", "in", "text", ":", "\n", "        ", "raise", "ValueError", "(", "\"Image only transforms links are outdated.\"", ")", "\n", "", "if", "dual_transforms_table", "not", "in", "text", ":", "\n", "        ", "raise", "ValueError", "(", "\"Dual transforms table are outdated.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.main": [[167, 191], ["make_transforms_docs.parse_args", "make_transforms_docs.get_transforms_info", "make_transforms_docs.make_transforms_targets_links", "make_transforms_docs.make_transforms_targets_table", "ValueError", "print", "print", "print", "print", "print", "print", "print", "make_transforms_docs.check_docs", "get_transforms_info.items", "get_transforms_info.items"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.parse_args", "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.get_transforms_info", "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.make_transforms_targets_links", "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.make_transforms_targets_table", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print", "home.repos.pwc.inspect_result.albu_albumentations.tools.make_transforms_docs.check_docs"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "command", "=", "args", ".", "command", "\n", "if", "command", "not", "in", "{", "\"make\"", ",", "\"check\"", "}", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"You should provide a valid command: {{make|check}}. Got {command} instead.\"", ".", "format", "(", "command", "=", "command", ")", "\n", ")", "\n", "", "transforms_info", "=", "get_transforms_info", "(", ")", "\n", "image_only_transforms", "=", "{", "transform", ":", "info", "for", "transform", ",", "info", "in", "transforms_info", ".", "items", "(", ")", "if", "info", "[", "\"image_only\"", "]", "}", "\n", "dual_transforms", "=", "{", "transform", ":", "info", "for", "transform", ",", "info", "in", "transforms_info", ".", "items", "(", ")", "if", "not", "info", "[", "\"image_only\"", "]", "}", "\n", "image_only_transforms_links", "=", "make_transforms_targets_links", "(", "image_only_transforms", ")", "\n", "dual_transforms_table", "=", "make_transforms_targets_table", "(", "\n", "dual_transforms", ",", "header", "=", "[", "\"Transform\"", "]", "+", "[", "target", ".", "value", "for", "target", "in", "Targets", "]", "\n", ")", "\n", "if", "command", "==", "\"make\"", ":", "\n", "        ", "print", "(", "\"===== COPY THIS TABLE TO README.MD BELOW ### Pixel-level transforms =====\"", ")", "\n", "print", "(", "image_only_transforms_links", ")", "\n", "print", "(", "\"===== END OF COPY =====\"", ")", "\n", "print", "(", ")", "\n", "print", "(", "\"===== COPY THIS TABLE TO README.MD BELOW ### Spatial-level transforms =====\"", ")", "\n", "print", "(", "dual_transforms_table", ")", "\n", "print", "(", "\"===== END OF COPY =====\"", ")", "\n", "", "else", ":", "\n", "        ", "check_docs", "(", "args", ".", "filepath", ",", "image_only_transforms_links", ",", "dual_transforms_table", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.set_seed": [[15, 18], ["random.seed", "numpy.random.seed"], "function", ["None"], ["def", "set_seed", "(", "seed", "=", "0", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_transpose_both_image_and_mask": [[20, 27], ["numpy.ones", "numpy.ones", "albumentations.Transpose", "A.Transpose."], "function", ["None"], ["", "def", "test_transpose_both_image_and_mask", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "8", ",", "6", ",", "3", ")", ")", "\n", "mask", "=", "np", ".", "ones", "(", "(", "8", ",", "6", ")", ")", "\n", "augmentation", "=", "A", ".", "Transpose", "(", "p", "=", "1", ")", "\n", "augmented", "=", "augmentation", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "augmented", "[", "\"image\"", "]", ".", "shape", "==", "(", "6", ",", "8", ",", "3", ")", "\n", "assert", "augmented", "[", "\"mask\"", "]", ".", "shape", "==", "(", "6", ",", "8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_rotate_interpolation": [[29, 39], ["pytest.mark.parametrize", "numpy.random.randint", "numpy.random.randint", "albumentations.Rotate", "A.Rotate.", "albumentations.rotate", "albumentations.rotate", "numpy.array_equal", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"interpolation\"", ",", "[", "cv2", ".", "INTER_NEAREST", ",", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_CUBIC", "]", ")", "\n", "def", "test_rotate_interpolation", "(", "interpolation", ")", ":", "\n", "    ", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "2", ",", "size", "=", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "aug", "=", "A", ".", "Rotate", "(", "limit", "=", "(", "45", ",", "45", ")", ",", "interpolation", "=", "interpolation", ",", "p", "=", "1", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "expected_image", "=", "FGeometric", ".", "rotate", "(", "image", ",", "45", ",", "interpolation", "=", "interpolation", ",", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", ")", "\n", "expected_mask", "=", "FGeometric", ".", "rotate", "(", "mask", ",", "45", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "expected_image", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"mask\"", "]", ",", "expected_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_shift_scale_rotate_interpolation": [[41, 57], ["pytest.mark.parametrize", "numpy.random.randint", "numpy.random.randint", "albumentations.ShiftScaleRotate", "A.ShiftScaleRotate.", "albumentations.shift_scale_rotate", "albumentations.shift_scale_rotate", "numpy.array_equal", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"interpolation\"", ",", "[", "cv2", ".", "INTER_NEAREST", ",", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_CUBIC", "]", ")", "\n", "def", "test_shift_scale_rotate_interpolation", "(", "interpolation", ")", ":", "\n", "    ", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "2", ",", "size", "=", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "aug", "=", "A", ".", "ShiftScaleRotate", "(", "\n", "shift_limit", "=", "(", "0.2", ",", "0.2", ")", ",", "scale_limit", "=", "(", "1.1", ",", "1.1", ")", ",", "rotate_limit", "=", "(", "45", ",", "45", ")", ",", "interpolation", "=", "interpolation", ",", "p", "=", "1", "\n", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "expected_image", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "image", ",", "angle", "=", "45", ",", "scale", "=", "2.1", ",", "dx", "=", "0.2", ",", "dy", "=", "0.2", ",", "interpolation", "=", "interpolation", ",", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", "\n", ")", "\n", "expected_mask", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "mask", ",", "angle", "=", "45", ",", "scale", "=", "2.1", ",", "dx", "=", "0.2", ",", "dy", "=", "0.2", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", "\n", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "expected_image", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"mask\"", "]", ",", "expected_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_optical_distortion_interpolation": [[59, 73], ["pytest.mark.parametrize", "numpy.random.randint", "numpy.random.randint", "albumentations.OpticalDistortion", "A.OpticalDistortion.", "albumentations.optical_distortion", "albumentations.optical_distortion", "numpy.array_equal", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.optical_distortion", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.optical_distortion"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"interpolation\"", ",", "[", "cv2", ".", "INTER_NEAREST", ",", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_CUBIC", "]", ")", "\n", "def", "test_optical_distortion_interpolation", "(", "interpolation", ")", ":", "\n", "    ", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "2", ",", "size", "=", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "aug", "=", "A", ".", "OpticalDistortion", "(", "distort_limit", "=", "(", "0.05", ",", "0.05", ")", ",", "shift_limit", "=", "(", "0", ",", "0", ")", ",", "interpolation", "=", "interpolation", ",", "p", "=", "1", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "expected_image", "=", "F", ".", "optical_distortion", "(", "\n", "image", ",", "k", "=", "0.05", ",", "dx", "=", "0", ",", "dy", "=", "0", ",", "interpolation", "=", "interpolation", ",", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", "\n", ")", "\n", "expected_mask", "=", "F", ".", "optical_distortion", "(", "\n", "mask", ",", "k", "=", "0.05", ",", "dx", "=", "0", ",", "dy", "=", "0", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", "\n", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "expected_image", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"mask\"", "]", ",", "expected_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_grid_distortion_interpolation": [[75, 94], ["pytest.mark.parametrize", "numpy.random.randint", "numpy.random.randint", "albumentations.GridDistortion", "A.GridDistortion.", "albumentations.grid_distortion", "albumentations.grid_distortion", "numpy.array_equal", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.grid_distortion", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.grid_distortion"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"interpolation\"", ",", "[", "cv2", ".", "INTER_NEAREST", ",", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_CUBIC", "]", ")", "\n", "def", "test_grid_distortion_interpolation", "(", "interpolation", ")", ":", "\n", "    ", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "2", ",", "size", "=", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "aug", "=", "A", ".", "GridDistortion", "(", "num_steps", "=", "1", ",", "distort_limit", "=", "(", "0.3", ",", "0.3", ")", ",", "interpolation", "=", "interpolation", ",", "p", "=", "1", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "expected_image", "=", "F", ".", "grid_distortion", "(", "\n", "image", ",", "num_steps", "=", "1", ",", "xsteps", "=", "[", "1.3", "]", ",", "ysteps", "=", "[", "1.3", "]", ",", "interpolation", "=", "interpolation", ",", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", "\n", ")", "\n", "expected_mask", "=", "F", ".", "grid_distortion", "(", "\n", "mask", ",", "\n", "num_steps", "=", "1", ",", "\n", "xsteps", "=", "[", "1.3", "]", ",", "\n", "ysteps", "=", "[", "1.3", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "\n", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", ",", "\n", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "expected_image", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"mask\"", "]", ",", "expected_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_grid_distortion_steps": [[96, 102], ["pytest.mark.parametrize", "numpy.random.rand", "albumentations.GridDistortion", "A.GridDistortion.", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"size\"", ",", "[", "17", ",", "21", ",", "33", "]", ")", "\n", "def", "test_grid_distortion_steps", "(", "size", ")", ":", "\n", "    ", "image", "=", "np", ".", "random", ".", "rand", "(", "size", ",", "size", ",", "3", ")", "\n", "aug", "=", "A", ".", "GridDistortion", "(", "num_steps", "=", "size", "-", "2", ",", "p", "=", "1", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ".", "shape", ",", "(", "size", ",", "size", ",", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_elastic_transform_interpolation": [[104, 133], ["pytest.mark.parametrize", "numpy.random.randint", "numpy.random.randint", "monkeypatch.setattr", "albumentations.ElasticTransform", "A.ElasticTransform.", "albumentations.elastic_transform", "albumentations.elastic_transform", "numpy.array_equal", "numpy.array_equal", "numpy.random.RandomState", "numpy.random.RandomState"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.elastic_transform", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.elastic_transform"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"interpolation\"", ",", "[", "cv2", ".", "INTER_NEAREST", ",", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_CUBIC", "]", ")", "\n", "def", "test_elastic_transform_interpolation", "(", "monkeypatch", ",", "interpolation", ")", ":", "\n", "    ", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "2", ",", "size", "=", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "monkeypatch", ".", "setattr", "(", "\n", "\"albumentations.augmentations.geometric.ElasticTransform.get_params\"", ",", "lambda", "*", "_", ":", "{", "\"random_state\"", ":", "1111", "}", "\n", ")", "\n", "aug", "=", "A", ".", "ElasticTransform", "(", "alpha", "=", "1", ",", "sigma", "=", "50", ",", "alpha_affine", "=", "50", ",", "interpolation", "=", "interpolation", ",", "p", "=", "1", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "expected_image", "=", "FGeometric", ".", "elastic_transform", "(", "\n", "image", ",", "\n", "alpha", "=", "1", ",", "\n", "sigma", "=", "50", ",", "\n", "alpha_affine", "=", "50", ",", "\n", "interpolation", "=", "interpolation", ",", "\n", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", ",", "\n", "random_state", "=", "np", ".", "random", ".", "RandomState", "(", "1111", ")", ",", "\n", ")", "\n", "expected_mask", "=", "FGeometric", ".", "elastic_transform", "(", "\n", "mask", ",", "\n", "alpha", "=", "1", ",", "\n", "sigma", "=", "50", ",", "\n", "alpha_affine", "=", "50", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "\n", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", ",", "\n", "random_state", "=", "np", ".", "random", ".", "RandomState", "(", "1111", ")", ",", "\n", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "expected_image", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"mask\"", "]", ",", "expected_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_binary_mask_interpolation": [[135, 159], ["pytest.mark.parametrize", "augmentation_cls", "numpy.random.randint", "numpy.random.randint", "augmentation_cls.", "numpy.array_equal", "utils.get_dual_transforms", "numpy.unique", "numpy.array"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_dual_transforms"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_dual_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "PixelDropout", ":", "{", "\"dropout_prob\"", ":", "0.5", ",", "\"mask_drop_value\"", ":", "10", ",", "\"drop_value\"", ":", "20", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "A", ".", "RandomCropNearBBox", ",", "A", ".", "RandomSizedBBoxSafeCrop", ",", "A", ".", "PixelDropout", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_binary_mask_interpolation", "(", "augmentation_cls", ",", "params", ")", ":", "\n", "    ", "\"\"\"Checks whether transformations based on DualTransform does not introduce a mask interpolation artifacts\"\"\"", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "2", ",", "size", "=", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "np", ".", "unique", "(", "data", "[", "\"mask\"", "]", ")", ",", "np", ".", "array", "(", "[", "0", ",", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_semantic_mask_interpolation": [[161, 187], ["pytest.mark.parametrize", "augmentation_cls", "numpy.random.randint", "augmentation_cls.", "numpy.array_equal", "utils.get_dual_transforms", "numpy.random.randint", "numpy.unique", "numpy.array"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_dual_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_dual_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "PixelDropout", ":", "{", "\"dropout_prob\"", ":", "0.5", ",", "\"mask_drop_value\"", ":", "10", ",", "\"drop_value\"", ":", "20", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "A", ".", "RandomCropNearBBox", ",", "A", ".", "RandomSizedBBoxSafeCrop", ",", "A", ".", "CropAndPad", ",", "A", ".", "PixelDropout", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_semantic_mask_interpolation", "(", "augmentation_cls", ",", "params", ")", ":", "\n", "    ", "\"\"\"Checks whether transformations based on DualTransform does not introduce a mask interpolation artifacts.\n    Note: IAAAffine, IAAPiecewiseAffine, IAAPerspective does not properly operate if mask has values other than {0;1}\n    \"\"\"", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "4", ",", "size", "=", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "*", "64", "\n", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "np", ".", "unique", "(", "data", "[", "\"mask\"", "]", ")", ",", "np", ".", "array", "(", "[", "0", ",", "64", ",", "128", ",", "192", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.__test_multiprocessing_support_proc": [[189, 192], ["transform"], "function", ["None"], ["", "def", "__test_multiprocessing_support_proc", "(", "args", ")", ":", "\n", "    ", "x", ",", "transform", "=", "args", "\n", "return", "transform", "(", "image", "=", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_multiprocessing_support": [[194, 230], ["pytest.mark.parametrize", "augmentation_cls", "numpy.random.randint", "multiprocessing_context.Pool", "multiprocessing_context.Pool.map", "multiprocessing_context.Pool.close", "multiprocessing_context.Pool.join", "utils.get_transforms", "map", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.InMemoryFile.close", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ",", "\n", "A", ".", "FDA", ",", "\n", "A", ".", "HistogramMatching", ",", "\n", "A", ".", "PixelDistributionAdaptation", ",", "\n", "A", ".", "MaskDropout", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_multiprocessing_support", "(", "augmentation_cls", ",", "params", ",", "multiprocessing_context", ")", ":", "\n", "    ", "\"\"\"Checks whether we can use augmentations in multiprocessing environments\"\"\"", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "pool", "=", "multiprocessing_context", ".", "Pool", "(", "8", ")", "\n", "pool", ".", "map", "(", "__test_multiprocessing_support_proc", ",", "map", "(", "lambda", "x", ":", "(", "x", ",", "aug", ")", ",", "[", "image", "]", "*", "100", ")", ")", "\n", "pool", ".", "close", "(", ")", "\n", "pool", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_force_apply": [[232, 265], ["albumentations.Compose", "A.Compose.", "albumentations.OneOrOther", "albumentations.HorizontalFlip", "albumentations.RandomBrightnessContrast", "numpy.zeros", "albumentations.Compose", "albumentations.Compose", "albumentations.RandomSizedCrop", "albumentations.OneOf", "albumentations.RandomSizedCrop", "albumentations.OneOf", "albumentations.RandomSizedCrop", "albumentations.RandomSizedCrop", "albumentations.HueSaturationValue", "albumentations.RGBShift"], "function", ["None"], ["", "def", "test_force_apply", "(", ")", ":", "\n", "    ", "\"\"\"\n    Unit test for https://github.com/albumentations-team/albumentations/issues/189\n    \"\"\"", "\n", "aug", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "OneOrOther", "(", "\n", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "RandomSizedCrop", "(", "min_max_height", "=", "(", "256", ",", "1025", ")", ",", "height", "=", "512", ",", "width", "=", "512", ",", "p", "=", "1", ")", ",", "\n", "A", ".", "OneOf", "(", "\n", "[", "\n", "A", ".", "RandomSizedCrop", "(", "min_max_height", "=", "(", "256", ",", "512", ")", ",", "height", "=", "384", ",", "width", "=", "384", ",", "p", "=", "0.5", ")", ",", "\n", "A", ".", "RandomSizedCrop", "(", "min_max_height", "=", "(", "256", ",", "512", ")", ",", "height", "=", "512", ",", "width", "=", "512", ",", "p", "=", "0.5", ")", ",", "\n", "]", "\n", ")", ",", "\n", "]", "\n", ")", ",", "\n", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "RandomSizedCrop", "(", "min_max_height", "=", "(", "256", ",", "1025", ")", ",", "height", "=", "256", ",", "width", "=", "256", ",", "p", "=", "1", ")", ",", "\n", "A", ".", "OneOf", "(", "[", "A", ".", "HueSaturationValue", "(", "p", "=", "0.5", ")", ",", "A", ".", "RGBShift", "(", "p", "=", "0.7", ")", "]", ",", "p", "=", "1", ")", ",", "\n", "]", "\n", ")", ",", "\n", ")", ",", "\n", "A", ".", "HorizontalFlip", "(", "p", "=", "1", ")", ",", "\n", "A", ".", "RandomBrightnessContrast", "(", "p", "=", "0.5", ")", ",", "\n", "]", "\n", ")", "\n", "\n", "res", "=", "aug", "(", "image", "=", "np", ".", "zeros", "(", "(", "1248", ",", "1248", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ")", "\n", "assert", "res", "[", "\"image\"", "]", ".", "shape", "[", "0", "]", "in", "(", "256", ",", "384", ",", "512", ")", "\n", "assert", "res", "[", "\"image\"", "]", ".", "shape", "[", "1", "]", "in", "(", "256", ",", "384", ",", "512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_additional_targets_for_image_only": [[267, 299], ["pytest.mark.parametrize", "albumentations.Compose", "range", "utils.get_image_only_transforms", "numpy.random.randint", "np.random.randint.copy", "A.Compose.", "numpy.array_equal", "augmentation_cls", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_image_only_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_image_only_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "HistogramMatching", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "FDA", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "PixelDistributionAdaptation", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "\"transform_type\"", ":", "\"standard\"", ",", "\n", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_additional_targets_for_image_only", "(", "augmentation_cls", ",", "params", ")", ":", "\n", "    ", "aug", "=", "A", ".", "Compose", "(", "[", "augmentation_cls", "(", "always_apply", "=", "True", ",", "**", "params", ")", "]", ",", "additional_targets", "=", "{", "\"image2\"", ":", "\"image\"", "}", ")", "\n", "for", "_i", "in", "range", "(", "10", ")", ":", "\n", "        ", "image1", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "image2", "=", "image1", ".", "copy", "(", ")", "\n", "res", "=", "aug", "(", "image", "=", "image1", ",", "image2", "=", "image2", ")", "\n", "aug1", "=", "res", "[", "\"image\"", "]", "\n", "aug2", "=", "res", "[", "\"image2\"", "]", "\n", "assert", "np", ".", "array_equal", "(", "aug1", ",", "aug2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_lambda_transform": [[301, 329], ["albumentations.Lambda", "A.Lambda.", "albumentations.bbox_vflip", "albumentations.keypoint_vflip", "numpy.eye", "functools.partial", "numpy.ones", "numpy.tile", "albumentations.bbox_vflip", "albumentations.keypoint_vflip", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_vflip"], ["", "", "def", "test_lambda_transform", "(", ")", ":", "\n", "    ", "def", "negate_image", "(", "image", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "-", "image", "\n", "\n", "", "def", "one_hot_mask", "(", "mask", ",", "num_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "new_mask", "=", "np", ".", "eye", "(", "num_channels", ",", "dtype", "=", "np", ".", "uint8", ")", "[", "mask", "]", "\n", "return", "new_mask", "\n", "\n", "", "def", "vflip_bbox", "(", "bbox", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "F", ".", "bbox_vflip", "(", "bbox", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "vflip_keypoint", "(", "keypoint", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "F", ".", "keypoint_vflip", "(", "keypoint", ",", "**", "kwargs", ")", "\n", "\n", "", "aug", "=", "A", ".", "Lambda", "(", "\n", "image", "=", "negate_image", ",", "mask", "=", "partial", "(", "one_hot_mask", ",", "num_channels", "=", "16", ")", ",", "bbox", "=", "vflip_bbox", ",", "keypoint", "=", "vflip_keypoint", ",", "p", "=", "1", "\n", ")", "\n", "\n", "output", "=", "aug", "(", "\n", "image", "=", "np", ".", "ones", "(", "(", "10", ",", "10", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", ",", "\n", "mask", "=", "np", ".", "tile", "(", "np", ".", "arange", "(", "0", ",", "10", ")", ",", "(", "10", ",", "1", ")", ")", ",", "\n", "bboxes", "=", "[", "(", "10", ",", "15", ",", "25", ",", "35", ")", "]", ",", "\n", "keypoints", "=", "[", "(", "20", ",", "30", ",", "40", ",", "50", ")", "]", ",", "\n", ")", "\n", "assert", "(", "output", "[", "\"image\"", "]", "<", "0", ")", ".", "all", "(", ")", "\n", "assert", "output", "[", "\"mask\"", "]", ".", "shape", "[", "2", "]", "==", "16", "# num_channels", "\n", "assert", "output", "[", "\"bboxes\"", "]", "==", "[", "F", ".", "bbox_vflip", "(", "(", "10", ",", "15", ",", "25", ",", "35", ")", ",", "10", ",", "10", ")", "]", "\n", "assert", "output", "[", "\"keypoints\"", "]", "==", "[", "F", ".", "keypoint_vflip", "(", "(", "20", ",", "30", ",", "40", ",", "50", ")", ",", "10", ",", "10", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_channel_droput": [[331, 344], ["numpy.ones", "albumentations.ChannelDropout", "albumentations.ChannelDropout", "A.ChannelDropout.", "sum", "A.ChannelDropout.", "sum", "transformed[].max", "transformed[].max", "range", "range"], "function", ["None"], ["", "def", "test_channel_droput", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "10", ",", "10", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "aug", "=", "A", ".", "ChannelDropout", "(", "channel_drop_range", "=", "(", "1", ",", "1", ")", ",", "always_apply", "=", "True", ")", "# Drop one channel", "\n", "\n", "transformed", "=", "aug", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "\n", "assert", "sum", "(", "transformed", "[", ":", ",", ":", ",", "c", "]", ".", "max", "(", ")", "for", "c", "in", "range", "(", "img", ".", "shape", "[", "2", "]", ")", ")", "==", "2", "\n", "\n", "aug", "=", "A", ".", "ChannelDropout", "(", "channel_drop_range", "=", "(", "2", ",", "2", ")", ",", "always_apply", "=", "True", ")", "# Drop two channels", "\n", "transformed", "=", "aug", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "\n", "assert", "sum", "(", "transformed", "[", ":", ",", ":", ",", "c", "]", ".", "max", "(", ")", "for", "c", "in", "range", "(", "img", ".", "shape", "[", "2", "]", ")", ")", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_equalize": [[346, 365], ["albumentations.Equalize", "numpy.random.randint().reshape", "albumentations.equalize", "numpy.all", "numpy.random.randint().reshape", "albumentations.Equalize", "albumentations.equalize", "numpy.all", "albumentations.Equalize", "numpy.all", "A.Equalize.", "A.Equalize.", "numpy.random.randint", "numpy.random.randint", "albumentations.equalize", "A.Equalize."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize"], ["", "def", "test_equalize", "(", ")", ":", "\n", "    ", "aug", "=", "A", ".", "Equalize", "(", "p", "=", "1", ")", "\n", "\n", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "256", "*", "256", "*", "3", ",", "np", ".", "uint8", ")", ".", "reshape", "(", "(", "256", ",", "256", ",", "3", ")", ")", "\n", "a", "=", "aug", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "b", "=", "F", ".", "equalize", "(", "img", ")", "\n", "assert", "np", ".", "all", "(", "a", "==", "b", ")", "\n", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ",", "256", "*", "256", ",", "np", ".", "uint8", ")", ".", "reshape", "(", "(", "256", ",", "256", ")", ")", "\n", "aug", "=", "A", ".", "Equalize", "(", "mask", "=", "mask", ",", "p", "=", "1", ")", "\n", "a", "=", "aug", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "b", "=", "F", ".", "equalize", "(", "img", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "all", "(", "a", "==", "b", ")", "\n", "\n", "def", "mask_func", "(", "image", ",", "test", ")", ":", "# skipcq: PYL-W0613", "\n", "        ", "return", "mask", "\n", "\n", "", "aug", "=", "A", ".", "Equalize", "(", "mask", "=", "mask_func", ",", "mask_params", "=", "[", "\"test\"", "]", ",", "p", "=", "1", ")", "\n", "assert", "np", ".", "all", "(", "aug", "(", "image", "=", "img", ",", "test", "=", "mask", ")", "[", "\"image\"", "]", "==", "F", ".", "equalize", "(", "img", ",", "mask", "=", "mask", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_crop_non_empty_mask": [[367, 421], ["numpy.zeros", "numpy.array", "albumentations.CropNonEmptyMaskIfExists", "numpy.zeros", "numpy.array", "albumentations.CropNonEmptyMaskIfExists", "numpy.ones", "numpy.array", "albumentations.CropNonEmptyMaskIfExists", "numpy.zeros", "numpy.array", "albumentations.CropNonEmptyMaskIfExists", "numpy.random.random", "albumentations.CropNonEmptyMaskIfExists", "numpy.zeros", "albumentations.CropNonEmptyMaskIfExists", "test_transforms.test_crop_non_empty_mask._test_crop"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "def", "test_crop_non_empty_mask", "(", ")", ":", "\n", "    ", "def", "_test_crop", "(", "mask", ",", "crop", ",", "aug", ",", "n", "=", "1", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "n", ")", ":", "\n", "            ", "augmented", "=", "aug", "(", "image", "=", "mask", ",", "mask", "=", "mask", ")", "\n", "np", ".", "testing", ".", "assert_array_equal", "(", "augmented", "[", "\"image\"", "]", ",", "crop", ")", "\n", "np", ".", "testing", ".", "assert_array_equal", "(", "augmented", "[", "\"mask\"", "]", ",", "crop", ")", "\n", "\n", "", "", "def", "_test_crops", "(", "masks", ",", "crops", ",", "aug", ",", "n", "=", "1", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "n", ")", ":", "\n", "            ", "augmented", "=", "aug", "(", "image", "=", "masks", "[", "0", "]", ",", "masks", "=", "masks", ")", "\n", "for", "crop", ",", "augment", "in", "zip", "(", "crops", ",", "augmented", "[", "\"masks\"", "]", ")", ":", "\n", "                ", "np", ".", "testing", ".", "assert_array_equal", "(", "augment", ",", "crop", ")", "\n", "\n", "# test general case", "\n", "", "", "", "mask_1", "=", "np", ".", "zeros", "(", "[", "10", ",", "10", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "# uint8 required for passing mask_1 as `masks` (which uses bitwise or)", "\n", "mask_1", "[", "0", ",", "0", "]", "=", "1", "\n", "crop_1", "=", "np", ".", "array", "(", "[", "[", "1", "]", "]", ")", "\n", "aug_1", "=", "A", ".", "CropNonEmptyMaskIfExists", "(", "1", ",", "1", ")", "\n", "\n", "# test empty mask", "\n", "mask_2", "=", "np", ".", "zeros", "(", "[", "10", ",", "10", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "# uint8 required for passing mask_2 as `masks` (which uses bitwise or)", "\n", "crop_2", "=", "np", ".", "array", "(", "[", "[", "0", "]", "]", ")", "\n", "aug_2", "=", "A", ".", "CropNonEmptyMaskIfExists", "(", "1", ",", "1", ")", "\n", "\n", "# test ignore values", "\n", "mask_3", "=", "np", ".", "ones", "(", "[", "2", ",", "2", "]", ")", "\n", "mask_3", "[", "0", ",", "0", "]", "=", "2", "\n", "crop_3", "=", "np", ".", "array", "(", "[", "[", "2", "]", "]", ")", "\n", "aug_3", "=", "A", ".", "CropNonEmptyMaskIfExists", "(", "1", ",", "1", ",", "ignore_values", "=", "[", "1", "]", ")", "\n", "\n", "# test ignore channels", "\n", "mask_4", "=", "np", ".", "zeros", "(", "[", "2", ",", "2", ",", "2", "]", ")", "\n", "mask_4", "[", "0", ",", "0", ",", "0", "]", "=", "1", "\n", "mask_4", "[", "1", ",", "1", ",", "1", "]", "=", "2", "\n", "crop_4", "=", "np", ".", "array", "(", "[", "[", "[", "1", ",", "0", "]", "]", "]", ")", "\n", "aug_4", "=", "A", ".", "CropNonEmptyMaskIfExists", "(", "1", ",", "1", ",", "ignore_channels", "=", "[", "1", "]", ")", "\n", "\n", "# test full size crop", "\n", "mask_5", "=", "np", ".", "random", ".", "random", "(", "[", "10", ",", "10", ",", "3", "]", ")", "\n", "crop_5", "=", "mask_5", "\n", "aug_5", "=", "A", ".", "CropNonEmptyMaskIfExists", "(", "10", ",", "10", ")", "\n", "\n", "mask_6", "=", "np", ".", "zeros", "(", "[", "10", ",", "10", ",", "3", "]", ")", "\n", "mask_6", "[", "0", ",", "0", ",", "0", "]", "=", "0", "\n", "crop_6", "=", "mask_6", "\n", "aug_6", "=", "A", ".", "CropNonEmptyMaskIfExists", "(", "10", ",", "10", ",", "ignore_values", "=", "[", "1", "]", ")", "\n", "\n", "_test_crop", "(", "mask_1", ",", "crop_1", ",", "aug_1", ",", "n", "=", "1", ")", "\n", "_test_crop", "(", "mask_2", ",", "crop_2", ",", "aug_2", ",", "n", "=", "1", ")", "\n", "_test_crop", "(", "mask_3", ",", "crop_3", ",", "aug_3", ",", "n", "=", "5", ")", "\n", "_test_crop", "(", "mask_4", ",", "crop_4", ",", "aug_4", ",", "n", "=", "5", ")", "\n", "_test_crop", "(", "mask_5", ",", "crop_5", ",", "aug_5", ",", "n", "=", "1", ")", "\n", "_test_crop", "(", "mask_6", ",", "crop_6", ",", "aug_6", ",", "n", "=", "10", ")", "\n", "_test_crops", "(", "[", "mask_2", ",", "mask_1", "]", ",", "[", "crop_2", ",", "crop_1", "]", ",", "aug_1", ",", "n", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_downscale": [[423, 434], ["pytest.mark.parametrize", "numpy.random.rand", "albumentations.Downscale", "albumentations.downscale", "numpy.testing.assert_almost_equal", "A.Downscale."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.downscale"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"interpolation\"", ",", "[", "cv2", ".", "INTER_NEAREST", ",", "cv2", ".", "INTER_LINEAR", ",", "cv2", ".", "INTER_CUBIC", "]", ")", "\n", "def", "test_downscale", "(", "interpolation", ")", ":", "\n", "    ", "img_float", "=", "np", ".", "random", ".", "rand", "(", "100", ",", "100", ",", "3", ")", "\n", "img_uint", "=", "(", "img_float", "*", "255", ")", ".", "astype", "(", "\"uint8\"", ")", "\n", "\n", "aug", "=", "A", ".", "Downscale", "(", "scale_min", "=", "0.5", ",", "scale_max", "=", "0.5", ",", "interpolation", "=", "interpolation", ",", "always_apply", "=", "True", ")", "\n", "\n", "for", "img", "in", "(", "img_float", ",", "img_uint", ")", ":", "\n", "        ", "transformed", "=", "aug", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "func_applied", "=", "F", ".", "downscale", "(", "img", ",", "scale", "=", "0.5", ",", "interpolation", "=", "interpolation", ")", "\n", "np", ".", "testing", ".", "assert_almost_equal", "(", "transformed", ",", "func_applied", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_crop_keypoints": [[436, 447], ["numpy.random.randint", "albumentations.Crop", "A.Crop.", "albumentations.Crop", "A.Crop."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "", "def", "test_crop_keypoints", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "(", "100", ",", "100", ")", ",", "np", ".", "uint8", ")", "\n", "keypoints", "=", "[", "(", "50", ",", "50", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "Crop", "(", "0", ",", "0", ",", "80", ",", "80", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"keypoints\"", "]", "==", "keypoints", "\n", "\n", "aug", "=", "A", ".", "Crop", "(", "50", ",", "50", ",", "100", ",", "100", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"keypoints\"", "]", "==", "[", "(", "0", ",", "0", ",", "0", ",", "0", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_longest_max_size_keypoints": [[449, 464], ["numpy.random.randint", "albumentations.LongestMaxSize", "A.LongestMaxSize.", "albumentations.LongestMaxSize", "A.LongestMaxSize.", "albumentations.LongestMaxSize", "A.LongestMaxSize."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "test_longest_max_size_keypoints", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "50", ",", "10", "]", ",", "np", ".", "uint8", ")", "\n", "keypoints", "=", "[", "(", "9", ",", "5", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "LongestMaxSize", "(", "max_size", "=", "100", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"keypoints\"", "]", "==", "[", "(", "18", ",", "10", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "LongestMaxSize", "(", "max_size", "=", "5", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"keypoints\"", "]", "==", "[", "(", "0.9", ",", "0.5", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "LongestMaxSize", "(", "max_size", "=", "50", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"keypoints\"", "]", "==", "[", "(", "9", ",", "5", ",", "0", ",", "0", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_smallest_max_size_keypoints": [[466, 481], ["numpy.random.randint", "albumentations.SmallestMaxSize", "A.SmallestMaxSize.", "albumentations.SmallestMaxSize", "A.SmallestMaxSize.", "albumentations.SmallestMaxSize", "A.SmallestMaxSize."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "test_smallest_max_size_keypoints", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "50", ",", "10", "]", ",", "np", ".", "uint8", ")", "\n", "keypoints", "=", "[", "(", "9", ",", "5", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "SmallestMaxSize", "(", "max_size", "=", "100", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"keypoints\"", "]", "==", "[", "(", "90", ",", "50", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "SmallestMaxSize", "(", "max_size", "=", "5", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"keypoints\"", "]", "==", "[", "(", "4.5", ",", "2.5", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "SmallestMaxSize", "(", "max_size", "=", "10", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"keypoints\"", "]", "==", "[", "(", "9", ",", "5", ",", "0", ",", "0", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_resize_keypoints": [[483, 494], ["numpy.random.randint", "albumentations.Resize", "A.Resize.", "albumentations.Resize", "A.Resize."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "test_resize_keypoints", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "50", ",", "10", "]", ",", "np", ".", "uint8", ")", "\n", "keypoints", "=", "[", "(", "9", ",", "5", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "Resize", "(", "height", "=", "100", ",", "width", "=", "5", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"keypoints\"", "]", "==", "[", "(", "4.5", ",", "10", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "Resize", "(", "height", "=", "50", ",", "width", "=", "10", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"keypoints\"", "]", "==", "[", "(", "9", ",", "5", ",", "0", ",", "0", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_multiplicative_noise_grayscale": [[496, 521], ["pytest.mark.parametrize", "albumentations.MultiplicativeNoise", "albumentations.clip", "numpy.allclose", "albumentations.MultiplicativeNoise", "A.MultiplicativeNoise.get_params_dependent_on_targets", "A.MultiplicativeNoise.apply", "albumentations.clip", "numpy.allclose", "A.MultiplicativeNoise.", "F.clip.astype", "numpy.random.randint", "numpy.random.random().astype", "numpy.random.randint", "numpy.random.random().astype", "numpy.random.random", "numpy.random.random"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params_dependent_on_targets", "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.apply", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"image\"", ",", "\n", "[", "\n", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "256", ",", "320", "]", ",", "np", ".", "uint8", ")", ",", "\n", "np", ".", "random", ".", "random", "(", "[", "256", ",", "320", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "256", ",", "320", ",", "1", "]", ",", "np", ".", "uint8", ")", ",", "\n", "np", ".", "random", ".", "random", "(", "[", "256", ",", "320", ",", "1", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_multiplicative_noise_grayscale", "(", "image", ")", ":", "\n", "    ", "m", "=", "0.5", "\n", "aug", "=", "A", ".", "MultiplicativeNoise", "(", "m", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "image", ")", "[", "\"image\"", "]", "\n", "image", "=", "F", ".", "clip", "(", "image", "*", "m", ",", "image", ".", "dtype", ",", "F", ".", "MAX_VALUES_BY_DTYPE", "[", "image", ".", "dtype", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "image", ",", "result", ")", "\n", "\n", "aug", "=", "A", ".", "MultiplicativeNoise", "(", "elementwise", "=", "True", ",", "p", "=", "1", ")", "\n", "params", "=", "aug", ".", "get_params_dependent_on_targets", "(", "{", "\"image\"", ":", "image", "}", ")", "\n", "mul", "=", "params", "[", "\"multiplier\"", "]", "\n", "assert", "mul", ".", "shape", "==", "image", ".", "shape", "\n", "result", "=", "aug", ".", "apply", "(", "image", ",", "mul", ")", "\n", "dtype", "=", "image", ".", "dtype", "\n", "image", "=", "image", ".", "astype", "(", "np", ".", "float32", ")", "*", "mul", "\n", "image", "=", "F", ".", "clip", "(", "image", ",", "dtype", ",", "F", ".", "MAX_VALUES_BY_DTYPE", "[", "dtype", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "image", ",", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_multiplicative_noise_rgb": [[523, 558], ["pytest.mark.parametrize", "albumentations.MultiplicativeNoise", "albumentations.clip", "numpy.allclose", "albumentations.MultiplicativeNoise", "A.MultiplicativeNoise.get_params_dependent_on_targets", "A.MultiplicativeNoise.apply", "albumentations.clip", "numpy.allclose", "albumentations.MultiplicativeNoise", "A.MultiplicativeNoise.get_params_dependent_on_targets", "A.MultiplicativeNoise.apply", "albumentations.clip", "numpy.allclose", "albumentations.MultiplicativeNoise", "A.MultiplicativeNoise.get_params_dependent_on_targets", "A.MultiplicativeNoise.apply", "albumentations.clip", "numpy.allclose", "A.MultiplicativeNoise.", "numpy.random.randint", "numpy.random.random().astype", "F.clip.astype", "F.clip.astype", "F.clip.astype", "numpy.random.random"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params_dependent_on_targets", "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.apply", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params_dependent_on_targets", "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.apply", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params_dependent_on_targets", "home.repos.pwc.inspect_result.albu_albumentations.imgaug.transforms.BasicIAATransform.apply", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"image\"", ",", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "256", ",", "320", ",", "3", "]", ",", "np", ".", "uint8", ")", ",", "np", ".", "random", ".", "random", "(", "[", "256", ",", "320", ",", "3", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "]", "\n", ")", "\n", "def", "test_multiplicative_noise_rgb", "(", "image", ")", ":", "\n", "    ", "dtype", "=", "image", ".", "dtype", "\n", "\n", "m", "=", "0.5", "\n", "aug", "=", "A", ".", "MultiplicativeNoise", "(", "m", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "image", ")", "[", "\"image\"", "]", "\n", "image", "=", "F", ".", "clip", "(", "image", "*", "m", ",", "dtype", ",", "F", ".", "MAX_VALUES_BY_DTYPE", "[", "dtype", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "image", ",", "result", ")", "\n", "\n", "aug", "=", "A", ".", "MultiplicativeNoise", "(", "elementwise", "=", "True", ",", "p", "=", "1", ")", "\n", "params", "=", "aug", ".", "get_params_dependent_on_targets", "(", "{", "\"image\"", ":", "image", "}", ")", "\n", "mul", "=", "params", "[", "\"multiplier\"", "]", "\n", "assert", "mul", ".", "shape", "==", "image", ".", "shape", "[", ":", "2", "]", "+", "(", "1", ",", ")", "\n", "result", "=", "aug", ".", "apply", "(", "image", ",", "mul", ")", "\n", "image", "=", "F", ".", "clip", "(", "image", ".", "astype", "(", "np", ".", "float32", ")", "*", "mul", ",", "dtype", ",", "F", ".", "MAX_VALUES_BY_DTYPE", "[", "dtype", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "image", ",", "result", ")", "\n", "\n", "aug", "=", "A", ".", "MultiplicativeNoise", "(", "per_channel", "=", "True", ",", "p", "=", "1", ")", "\n", "params", "=", "aug", ".", "get_params_dependent_on_targets", "(", "{", "\"image\"", ":", "image", "}", ")", "\n", "mul", "=", "params", "[", "\"multiplier\"", "]", "\n", "assert", "mul", ".", "shape", "==", "(", "3", ",", ")", "\n", "result", "=", "aug", ".", "apply", "(", "image", ",", "mul", ")", "\n", "image", "=", "F", ".", "clip", "(", "image", ".", "astype", "(", "np", ".", "float32", ")", "*", "mul", ",", "dtype", ",", "F", ".", "MAX_VALUES_BY_DTYPE", "[", "dtype", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "image", ",", "result", ")", "\n", "\n", "aug", "=", "A", ".", "MultiplicativeNoise", "(", "elementwise", "=", "True", ",", "per_channel", "=", "True", ",", "p", "=", "1", ")", "\n", "params", "=", "aug", ".", "get_params_dependent_on_targets", "(", "{", "\"image\"", ":", "image", "}", ")", "\n", "mul", "=", "params", "[", "\"multiplier\"", "]", "\n", "assert", "mul", ".", "shape", "==", "image", ".", "shape", "\n", "result", "=", "aug", ".", "apply", "(", "image", ",", "mul", ")", "\n", "image", "=", "F", ".", "clip", "(", "image", ".", "astype", "(", "np", ".", "float32", ")", "*", "mul", ",", "image", ".", "dtype", ",", "F", ".", "MAX_VALUES_BY_DTYPE", "[", "image", ".", "dtype", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "image", ",", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_mask_dropout": [[560, 578], ["numpy.random.randint", "numpy.ones", "albumentations.MaskDropout", "A.MaskDropout.", "numpy.all", "numpy.all", "numpy.random.randint", "numpy.zeros", "albumentations.MaskDropout", "A.MaskDropout.", "numpy.all", "numpy.all"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "test_mask_dropout", "(", ")", ":", "\n", "# In this case we have mask with all ones, so MaskDropout wipe entire mask and image", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "50", ",", "10", "]", ",", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "ones", "(", "[", "50", ",", "10", "]", ",", "dtype", "=", "np", ".", "long", ")", "\n", "\n", "aug", "=", "A", ".", "MaskDropout", "(", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "all", "(", "result", "[", "\"image\"", "]", "==", "0", ")", "\n", "assert", "np", ".", "all", "(", "result", "[", "\"mask\"", "]", "==", "0", ")", "\n", "\n", "# In this case we have mask with zeros , so MaskDropout will make no changes", "\n", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "50", ",", "10", "]", ",", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "zeros", "(", "[", "50", ",", "10", "]", ",", "dtype", "=", "np", ".", "long", ")", "\n", "\n", "aug", "=", "A", ".", "MaskDropout", "(", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "all", "(", "result", "[", "\"image\"", "]", "==", "img", ")", "\n", "assert", "np", ".", "all", "(", "result", "[", "\"mask\"", "]", "==", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_grid_dropout_mask": [[580, 613], ["pytest.mark.parametrize", "numpy.ones", "albumentations.GridDropout", "A.GridDropout.", "numpy.zeros", "albumentations.GridDropout", "A.GridDropout.", "numpy.all", "numpy.random.randint", "albumentations.GridDropout", "A.GridDropout.", "numpy.ones", "albumentations.GridDropout", "A.GridDropout.", "result[].sum", "image.sum", "result[].sum", "np.ones.sum", "result[].sum", "image.sum", "result[].sum", "image.sum", "result[].sum", "np.ones.sum", "result[].sum", "image.sum", "result[].sum", "np.ones.sum", "numpy.random.randint", "numpy.random.random().astype", "numpy.random.random"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"image\"", ",", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "256", ",", "320", ",", "3", "]", ",", "np", ".", "uint8", ")", ",", "np", ".", "random", ".", "random", "(", "[", "256", ",", "320", ",", "3", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "]", "\n", ")", "\n", "def", "test_grid_dropout_mask", "(", "image", ")", ":", "\n", "    ", "mask", "=", "np", ".", "ones", "(", "[", "256", ",", "320", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "aug", "=", "A", ".", "GridDropout", "(", "p", "=", "1", ",", "mask_fill_value", "=", "0", ")", "\n", "result", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "# with mask on ones and fill_value = 0 the sum of pixels is smaller", "\n", "assert", "result", "[", "\"image\"", "]", ".", "sum", "(", ")", "<", "image", ".", "sum", "(", ")", "\n", "assert", "result", "[", "\"image\"", "]", ".", "shape", "==", "image", ".", "shape", "\n", "assert", "result", "[", "\"mask\"", "]", ".", "sum", "(", ")", "<", "mask", ".", "sum", "(", ")", "\n", "assert", "result", "[", "\"mask\"", "]", ".", "shape", "==", "mask", ".", "shape", "\n", "\n", "# with mask of zeros and fill_value = 0 mask should not change", "\n", "mask", "=", "np", ".", "zeros", "(", "[", "256", ",", "320", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "aug", "=", "A", ".", "GridDropout", "(", "p", "=", "1", ",", "mask_fill_value", "=", "0", ")", "\n", "result", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "result", "[", "\"image\"", "]", ".", "sum", "(", ")", "<", "image", ".", "sum", "(", ")", "\n", "assert", "np", ".", "all", "(", "result", "[", "\"mask\"", "]", "==", "0", ")", "\n", "\n", "# with mask mask_fill_value=100, mask sum is larger", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "10", ",", "[", "256", ",", "320", "]", ",", "np", ".", "uint8", ")", "\n", "aug", "=", "A", ".", "GridDropout", "(", "p", "=", "1", ",", "mask_fill_value", "=", "100", ")", "\n", "result", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "result", "[", "\"image\"", "]", ".", "sum", "(", ")", "<", "image", ".", "sum", "(", ")", "\n", "assert", "result", "[", "\"mask\"", "]", ".", "sum", "(", ")", ">", "mask", ".", "sum", "(", ")", "\n", "\n", "# with mask mask_fill_value=None, mask is not changed", "\n", "mask", "=", "np", ".", "ones", "(", "[", "256", ",", "320", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "aug", "=", "A", ".", "GridDropout", "(", "p", "=", "1", ",", "mask_fill_value", "=", "None", ")", "\n", "result", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "result", "[", "\"image\"", "]", ".", "sum", "(", ")", "<", "image", ".", "sum", "(", ")", "\n", "assert", "result", "[", "\"mask\"", "]", ".", "sum", "(", ")", "==", "mask", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_grid_dropout_params": [[615, 661], ["pytest.mark.parametrize", "numpy.random.randint", "albumentations.GridDropout", "A.GridDropout.get_params_dependent_on_targets", "A.GridDropout.", "result.sum", "np.random.randint.sum", "len", "max", "min", "max", "max", "max", "int", "int"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params_dependent_on_targets"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"ratio\"", ",", "\"holes_number_x\"", ",", "\"holes_number_y\"", ",", "\"unit_size_min\"", ",", "\"unit_size_max\"", ",", "\"shift_x\"", ",", "\"shift_y\"", "]", ",", "\n", "[", "\n", "(", "0.00001", ",", "10", ",", "10", ",", "100", ",", "100", ",", "50", ",", "50", ")", ",", "\n", "(", "0.9", ",", "100", ",", "None", ",", "200", ",", "None", ",", "0", ",", "0", ")", ",", "\n", "(", "0.4556", ",", "10", ",", "20", ",", "None", ",", "200", ",", "0", ",", "0", ")", ",", "\n", "(", "0.00004", ",", "None", ",", "None", ",", "2", ",", "100", ",", "None", ",", "None", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_grid_dropout_params", "(", "ratio", ",", "holes_number_x", ",", "holes_number_y", ",", "unit_size_min", ",", "unit_size_max", ",", "shift_x", ",", "shift_y", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "256", ",", "320", "]", ",", "np", ".", "uint8", ")", "\n", "\n", "aug", "=", "A", ".", "GridDropout", "(", "\n", "ratio", "=", "ratio", ",", "\n", "unit_size_min", "=", "unit_size_min", ",", "\n", "unit_size_max", "=", "unit_size_max", ",", "\n", "holes_number_x", "=", "holes_number_x", ",", "\n", "holes_number_y", "=", "holes_number_y", ",", "\n", "shift_x", "=", "shift_x", ",", "\n", "shift_y", "=", "shift_y", ",", "\n", "random_offset", "=", "False", ",", "\n", "fill_value", "=", "0", ",", "\n", "p", "=", "1", ",", "\n", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "# with fill_value = 0 the sum of pixels is smaller", "\n", "assert", "result", ".", "sum", "(", ")", "<", "img", ".", "sum", "(", ")", "\n", "assert", "result", ".", "shape", "==", "img", ".", "shape", "\n", "params", "=", "aug", ".", "get_params_dependent_on_targets", "(", "{", "\"image\"", ":", "img", "}", ")", "\n", "holes", "=", "params", "[", "\"holes\"", "]", "\n", "assert", "len", "(", "holes", "[", "0", "]", ")", "==", "4", "\n", "# check grid offsets", "\n", "if", "shift_x", ":", "\n", "        ", "assert", "holes", "[", "0", "]", "[", "0", "]", "==", "shift_x", "\n", "", "else", ":", "\n", "        ", "assert", "holes", "[", "0", "]", "[", "0", "]", "==", "0", "\n", "", "if", "shift_y", ":", "\n", "        ", "assert", "holes", "[", "0", "]", "[", "1", "]", "==", "shift_y", "\n", "", "else", ":", "\n", "        ", "assert", "holes", "[", "0", "]", "[", "1", "]", "==", "0", "\n", "# for grid set with limits", "\n", "", "if", "unit_size_min", "and", "unit_size_max", ":", "\n", "        ", "assert", "max", "(", "1", ",", "unit_size_min", "*", "ratio", ")", "<=", "(", "holes", "[", "0", "]", "[", "2", "]", "-", "holes", "[", "0", "]", "[", "0", "]", ")", "<=", "min", "(", "max", "(", "1", ",", "unit_size_max", "*", "ratio", ")", ",", "256", ")", "\n", "", "elif", "holes_number_x", "and", "holes_number_y", ":", "\n", "        ", "assert", "(", "holes", "[", "0", "]", "[", "2", "]", "-", "holes", "[", "0", "]", "[", "0", "]", ")", "==", "max", "(", "1", ",", "int", "(", "ratio", "*", "320", "//", "holes_number_x", ")", ")", "\n", "assert", "(", "holes", "[", "0", "]", "[", "3", "]", "-", "holes", "[", "0", "]", "[", "1", "]", ")", "==", "max", "(", "1", ",", "int", "(", "ratio", "*", "256", "//", "holes_number_y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_gauss_noise_incorrect_var_limit_type": [[663, 668], ["pytest.raises", "albumentations.GaussNoise", "str"], "function", ["None"], ["", "", "def", "test_gauss_noise_incorrect_var_limit_type", "(", ")", ":", "\n", "    ", "with", "pytest", ".", "raises", "(", "TypeError", ")", "as", "exc_info", ":", "\n", "        ", "A", ".", "GaussNoise", "(", "var_limit", "=", "{", "\"low\"", ":", "70", ",", "\"high\"", ":", "90", "}", ")", "\n", "", "message", "=", "\"Expected var_limit type to be one of (int, float, tuple, list), got <class 'dict'>\"", "\n", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "message", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_gaus_blur_limits": [[670, 688], ["pytest.mark.parametrize", "numpy.zeros", "albumentations.Compose", "numpy.allclose", "A.Compose.", "albumentations.gaussian_blur", "albumentations.GaussianBlur"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gaussian_blur"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"blur_limit\"", ",", "\"sigma\"", ",", "\"result_blur\"", ",", "\"result_sigma\"", "]", ",", "\n", "[", "\n", "[", "[", "0", ",", "0", "]", ",", "[", "1", ",", "1", "]", ",", "0", ",", "1", "]", ",", "\n", "[", "[", "1", ",", "1", "]", ",", "[", "0", ",", "0", "]", ",", "1", ",", "0", "]", ",", "\n", "[", "[", "1", ",", "1", "]", ",", "[", "1", ",", "1", "]", ",", "1", ",", "1", "]", ",", "\n", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "3", ",", "0", "]", ",", "\n", "[", "[", "0", ",", "3", "]", ",", "[", "0", ",", "0", "]", ",", "3", ",", "0", "]", ",", "\n", "[", "[", "0", ",", "3", "]", ",", "[", "0.1", ",", "0.1", "]", ",", "3", ",", "0.1", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_gaus_blur_limits", "(", "blur_limit", ",", "sigma", ",", "result_blur", ",", "result_sigma", ")", ":", "\n", "    ", "img", "=", "np", ".", "zeros", "(", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "aug", "=", "A", ".", "Compose", "(", "[", "A", ".", "GaussianBlur", "(", "blur_limit", "=", "blur_limit", ",", "sigma_limit", "=", "sigma", ",", "p", "=", "1", ")", "]", ")", "\n", "\n", "res", "=", "aug", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "assert", "np", ".", "allclose", "(", "res", ",", "F", ".", "gaussian_blur", "(", "img", ",", "result_blur", ",", "result_sigma", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_unsharp_mask_limits": [[690, 705], ["pytest.mark.parametrize", "numpy.zeros", "albumentations.Compose", "numpy.allclose", "A.Compose.", "albumentations.unsharp_mask", "albumentations.UnsharpMask"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.unsharp_mask"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"blur_limit\"", ",", "\"sigma\"", ",", "\"result_blur\"", ",", "\"result_sigma\"", "]", ",", "\n", "[", "\n", "[", "[", "0", ",", "0", "]", ",", "[", "1", ",", "1", "]", ",", "0", ",", "1", "]", ",", "\n", "[", "[", "1", ",", "1", "]", ",", "[", "0", ",", "0", "]", ",", "1", ",", "0", "]", ",", "\n", "[", "[", "1", ",", "1", "]", ",", "[", "1", ",", "1", "]", ",", "1", ",", "1", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_unsharp_mask_limits", "(", "blur_limit", ",", "sigma", ",", "result_blur", ",", "result_sigma", ")", ":", "\n", "    ", "img", "=", "np", ".", "zeros", "(", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "aug", "=", "A", ".", "Compose", "(", "[", "A", ".", "UnsharpMask", "(", "blur_limit", "=", "blur_limit", ",", "sigma_limit", "=", "sigma", ",", "p", "=", "1", ")", "]", ")", "\n", "\n", "res", "=", "aug", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "assert", "np", ".", "allclose", "(", "res", ",", "F", ".", "unsharp_mask", "(", "img", ",", "result_blur", ",", "result_sigma", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_unsharp_mask_float_uint8_diff_less_than_two": [[707, 729], ["pytest.mark.parametrize", "numpy.zeros().astype", "numpy.zeros().astype", "albumentations.UnsharpMask", "random.seed", "random.seed", "numpy.abs", "numpy.all", "A.UnsharpMask.", "A.UnsharpMask.", "numpy.zeros", "numpy.zeros"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"val_uint8\"", "]", ",", "[", "[", "0", "]", ",", "[", "1", "]", ",", "[", "128", "]", ",", "[", "255", "]", "]", ")", "\n", "def", "test_unsharp_mask_float_uint8_diff_less_than_two", "(", "val_uint8", ")", ":", "\n", "\n", "    ", "x_uint8", "=", "np", ".", "zeros", "(", "(", "5", ",", "5", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "x_uint8", "[", "2", ",", "2", "]", "=", "val_uint8", "\n", "\n", "x_float32", "=", "np", ".", "zeros", "(", "(", "5", ",", "5", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "x_float32", "[", "2", ",", "2", "]", "=", "val_uint8", "/", "255.0", "\n", "\n", "unsharpmask", "=", "A", ".", "UnsharpMask", "(", "blur_limit", "=", "3", ",", "always_apply", "=", "True", ",", "p", "=", "1", ")", "\n", "\n", "random", ".", "seed", "(", "0", ")", "\n", "usm_uint8", "=", "unsharpmask", "(", "image", "=", "x_uint8", ")", "[", "\"image\"", "]", "\n", "\n", "random", ".", "seed", "(", "0", ")", "\n", "usm_float32", "=", "unsharpmask", "(", "image", "=", "x_float32", ")", "[", "\"image\"", "]", "\n", "\n", "# Before comparison, rescale the usm_float32 to [0, 255]", "\n", "diff", "=", "np", ".", "abs", "(", "usm_uint8", "-", "usm_float32", "*", "255", ")", "\n", "\n", "# The difference between the results of float32 and uint8 will be at most 2.", "\n", "assert", "np", ".", "all", "(", "diff", "<=", "2.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_color_jitter_float_uint8_equal": [[731, 769], ["pytest.mark.parametrize", "numpy.random.randint", "albumentations.Compose", "numpy.abs().max", "A.Compose.", "albumentations.ColorJitter", "numpy.abs", "A.Compose.", "res1.astype", "res2.astype", "np.random.randint.astype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"brightness\"", ",", "\"contrast\"", ",", "\"saturation\"", ",", "\"hue\"", "]", ",", "\n", "[", "\n", "[", "1", ",", "1", ",", "1", ",", "0", "]", ",", "\n", "[", "0.123", ",", "1", ",", "1", ",", "0", "]", ",", "\n", "[", "1.321", ",", "1", ",", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "0.234", ",", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "1.432", ",", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "1", ",", "0.345", ",", "0", "]", ",", "\n", "[", "1", ",", "1", ",", "1.543", ",", "0", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "0.456", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "-", "0.432", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_color_jitter_float_uint8_equal", "(", "brightness", ",", "contrast", ",", "saturation", ",", "hue", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "transform", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "ColorJitter", "(", "\n", "brightness", "=", "[", "brightness", ",", "brightness", "]", ",", "\n", "contrast", "=", "[", "contrast", ",", "contrast", "]", ",", "\n", "saturation", "=", "[", "saturation", ",", "saturation", "]", ",", "\n", "hue", "=", "[", "hue", ",", "hue", "]", ",", "\n", "p", "=", "1", ",", "\n", ")", "\n", "]", "\n", ")", "\n", "\n", "res1", "=", "transform", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "res2", "=", "(", "transform", "(", "image", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", ")", "[", "\"image\"", "]", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "_max", "=", "np", ".", "abs", "(", "res1", ".", "astype", "(", "np", ".", "int16", ")", "-", "res2", ".", "astype", "(", "np", ".", "int16", ")", ")", ".", "max", "(", ")", "\n", "\n", "if", "hue", "!=", "0", ":", "\n", "        ", "assert", "_max", "<=", "10", ",", "\"Max: {}\"", ".", "format", "(", "_max", ")", "\n", "", "else", ":", "\n", "        ", "assert", "_max", "<=", "2", ",", "\"Max: {}\"", ".", "format", "(", "_max", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_hue_saturation_value_float_uint8_equal": [[771, 818], ["pytest.mark.parametrize", "numpy.random.randint", "range", "range", "albumentations.Compose", "albumentations.Compose", "numpy.abs().max", "A.Compose.", "albumentations.HueSaturationValue", "albumentations.HueSaturationValue", "numpy.abs", "A.Compose.", "res1.astype", "np.random.randint.astype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"hue\"", ",", "\"sat\"", ",", "\"val\"", "]", ",", "[", "[", "13", ",", "17", ",", "23", "]", ",", "[", "14", ",", "18", ",", "24", "]", ",", "[", "131", ",", "143", ",", "151", "]", ",", "[", "132", ",", "144", ",", "152", "]", "]", ")", "\n", "def", "test_hue_saturation_value_float_uint8_equal", "(", "hue", ",", "sat", ",", "val", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "        ", "sign", "=", "1", "if", "i", "==", "0", "else", "-", "1", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "_hue", "=", "hue", "*", "sign", "\n", "_sat", "=", "0", "\n", "_val", "=", "0", "\n", "", "elif", "i", "==", "1", ":", "\n", "                ", "_hue", "=", "0", "\n", "_sat", "=", "sat", "*", "sign", "\n", "_val", "=", "0", "\n", "", "elif", "i", "==", "2", ":", "\n", "                ", "_hue", "=", "0", "\n", "_sat", "=", "0", "\n", "_val", "=", "val", "*", "sign", "\n", "", "else", ":", "\n", "                ", "_hue", "=", "hue", "*", "sign", "\n", "_sat", "=", "sat", "*", "sign", "\n", "_val", "=", "val", "*", "sign", "\n", "\n", "", "t1", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "HueSaturationValue", "(", "\n", "hue_shift_limit", "=", "[", "_hue", ",", "_hue", "]", ",", "sat_shift_limit", "=", "[", "_sat", ",", "_sat", "]", ",", "val_shift_limit", "=", "[", "_val", ",", "_val", "]", ",", "p", "=", "1", "\n", ")", "\n", "]", "\n", ")", "\n", "t2", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "HueSaturationValue", "(", "\n", "hue_shift_limit", "=", "[", "_hue", "/", "180", "*", "360", ",", "_hue", "/", "180", "*", "360", "]", ",", "\n", "sat_shift_limit", "=", "[", "_sat", "/", "255", ",", "_sat", "/", "255", "]", ",", "\n", "val_shift_limit", "=", "[", "_val", "/", "255", ",", "_val", "/", "255", "]", ",", "\n", "p", "=", "1", ",", "\n", ")", "\n", "]", "\n", ")", "\n", "\n", "res1", "=", "t1", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "res2", "=", "(", "t2", "(", "image", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", ")", "[", "\"image\"", "]", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "_max", "=", "np", ".", "abs", "(", "res1", ".", "astype", "(", "np", ".", "int", ")", "-", "res2", ")", ".", "max", "(", ")", "\n", "assert", "_max", "<=", "10", ",", "\"Max value: {}\"", ".", "format", "(", "_max", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_shift_scale_separate_shift_x_shift_y": [[820, 831], ["albumentations.ShiftScaleRotate", "A.ShiftScaleRotate.", "albumentations.shift_scale_rotate", "albumentations.shift_scale_rotate", "numpy.array_equal", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "", "", "def", "test_shift_scale_separate_shift_x_shift_y", "(", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "A", ".", "ShiftScaleRotate", "(", "shift_limit", "=", "(", "0.3", ",", "0.3", ")", ",", "shift_limit_y", "=", "(", "0.4", ",", "0.4", ")", ",", "scale_limit", "=", "0", ",", "rotate_limit", "=", "0", ",", "p", "=", "1", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "expected_image", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "image", ",", "angle", "=", "0", ",", "scale", "=", "1", ",", "dx", "=", "0.3", ",", "dy", "=", "0.4", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", "\n", ")", "\n", "expected_mask", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "mask", ",", "angle", "=", "0", ",", "scale", "=", "1", ",", "dx", "=", "0.3", ",", "dy", "=", "0.4", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_REFLECT_101", "\n", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "expected_image", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"mask\"", "]", ",", "expected_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_glass_blur_float_uint8_diff_less_than_two": [[833, 855], ["pytest.mark.parametrize", "numpy.zeros().astype", "numpy.zeros().astype", "albumentations.GlassBlur", "random.seed", "random.seed", "numpy.abs", "numpy.all", "A.GlassBlur.", "A.GlassBlur.", "numpy.zeros", "numpy.zeros"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"val_uint8\"", "]", ",", "[", "[", "0", "]", ",", "[", "1", "]", ",", "[", "128", "]", ",", "[", "255", "]", "]", ")", "\n", "def", "test_glass_blur_float_uint8_diff_less_than_two", "(", "val_uint8", ")", ":", "\n", "\n", "    ", "x_uint8", "=", "np", ".", "zeros", "(", "(", "5", ",", "5", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "x_uint8", "[", "2", ",", "2", "]", "=", "val_uint8", "\n", "\n", "x_float32", "=", "np", ".", "zeros", "(", "(", "5", ",", "5", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "x_float32", "[", "2", ",", "2", "]", "=", "val_uint8", "/", "255.0", "\n", "\n", "glassblur", "=", "A", ".", "GlassBlur", "(", "always_apply", "=", "True", ",", "max_delta", "=", "1", ")", "\n", "\n", "random", ".", "seed", "(", "0", ")", "\n", "blur_uint8", "=", "glassblur", "(", "image", "=", "x_uint8", ")", "[", "\"image\"", "]", "\n", "\n", "random", ".", "seed", "(", "0", ")", "\n", "blur_float32", "=", "glassblur", "(", "image", "=", "x_float32", ")", "[", "\"image\"", "]", "\n", "\n", "# Before comparison, rescale the blur_float32 to [0, 255]", "\n", "diff", "=", "np", ".", "abs", "(", "blur_uint8", "-", "blur_float32", "*", "255", ")", "\n", "\n", "# The difference between the results of float32 and uint8 will be at most 2.", "\n", "assert", "np", ".", "all", "(", "diff", "<=", "2.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_perspective_keep_size": [[857, 888], ["numpy.zeros", "range", "albumentations.Compose", "albumentations.Compose", "test_transforms.set_seed", "A.Compose.", "test_transforms.set_seed", "A.Compose.", "numpy.allclose", "numpy.allclose", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "bboxes.append", "numpy.random.randint", "numpy.random.randint", "numpy.random.random", "range", "albumentations.Perspective", "albumentations.KeypointParams", "albumentations.BboxParams", "albumentations.Perspective", "albumentations.Resize", "albumentations.KeypointParams", "albumentations.BboxParams", "len", "len"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "def", "test_perspective_keep_size", "(", ")", ":", "\n", "    ", "h", ",", "w", "=", "100", ",", "100", "\n", "img", "=", "np", ".", "zeros", "(", "[", "h", ",", "w", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "bboxes", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "10", ")", ":", "\n", "        ", "x1", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "w", "-", "1", ")", "\n", "y1", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "h", "-", "1", ")", "\n", "x2", "=", "np", ".", "random", ".", "randint", "(", "x1", "+", "1", ",", "w", ")", "\n", "y2", "=", "np", ".", "random", ".", "randint", "(", "y1", "+", "1", ",", "h", ")", "\n", "bboxes", ".", "append", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "", "keypoints", "=", "[", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "w", ")", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "h", ")", ",", "np", ".", "random", ".", "random", "(", ")", ")", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "\n", "transform_1", "=", "A", ".", "Compose", "(", "\n", "[", "A", ".", "Perspective", "(", "keep_size", "=", "True", ",", "p", "=", "1", ")", "]", ",", "\n", "keypoint_params", "=", "A", ".", "KeypointParams", "(", "\"xys\"", ")", ",", "\n", "bbox_params", "=", "A", ".", "BboxParams", "(", "\"pascal_voc\"", ",", "label_fields", "=", "[", "\"labels\"", "]", ")", ",", "\n", ")", "\n", "transform_2", "=", "A", ".", "Compose", "(", "\n", "[", "A", ".", "Perspective", "(", "keep_size", "=", "False", ",", "p", "=", "1", ")", ",", "A", ".", "Resize", "(", "h", ",", "w", ")", "]", ",", "\n", "keypoint_params", "=", "A", ".", "KeypointParams", "(", "\"xys\"", ")", ",", "\n", "bbox_params", "=", "A", ".", "BboxParams", "(", "\"pascal_voc\"", ",", "label_fields", "=", "[", "\"labels\"", "]", ")", ",", "\n", ")", "\n", "\n", "set_seed", "(", ")", "\n", "res_1", "=", "transform_1", "(", "image", "=", "img", ",", "bboxes", "=", "bboxes", ",", "keypoints", "=", "keypoints", ",", "labels", "=", "[", "0", "]", "*", "len", "(", "bboxes", ")", ")", "\n", "set_seed", "(", ")", "\n", "res_2", "=", "transform_2", "(", "image", "=", "img", ",", "bboxes", "=", "bboxes", ",", "keypoints", "=", "keypoints", ",", "labels", "=", "[", "0", "]", "*", "len", "(", "bboxes", ")", ")", "\n", "\n", "assert", "np", ".", "allclose", "(", "res_1", "[", "\"bboxes\"", "]", ",", "res_2", "[", "\"bboxes\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "res_1", "[", "\"keypoints\"", "]", ",", "res_2", "[", "\"keypoints\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_longest_max_size_list": [[890, 898], ["numpy.random.randint", "albumentations.LongestMaxSize", "A.LongestMaxSize."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "test_longest_max_size_list", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "50", ",", "10", "]", ",", "np", ".", "uint8", ")", "\n", "keypoints", "=", "[", "(", "9", ",", "5", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "LongestMaxSize", "(", "max_size", "=", "[", "5", ",", "10", "]", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"image\"", "]", ".", "shape", "in", "[", "(", "10", ",", "2", ")", ",", "(", "5", ",", "1", ")", "]", "\n", "assert", "result", "[", "\"keypoints\"", "]", "in", "[", "[", "(", "0.9", ",", "0.5", ",", "0", ",", "0", ")", "]", ",", "[", "(", "1.8", ",", "1", ",", "0", ",", "0", ")", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_smallest_max_size_list": [[900, 908], ["numpy.random.randint", "albumentations.SmallestMaxSize", "A.SmallestMaxSize."], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "test_smallest_max_size_list", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "50", ",", "10", "]", ",", "np", ".", "uint8", ")", "\n", "keypoints", "=", "[", "(", "9", ",", "5", ",", "0", ",", "0", ")", "]", "\n", "\n", "aug", "=", "A", ".", "SmallestMaxSize", "(", "max_size", "=", "[", "50", ",", "100", "]", ",", "p", "=", "1", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "result", "[", "\"image\"", "]", ".", "shape", "in", "[", "(", "250", ",", "50", ")", ",", "(", "500", ",", "100", ")", "]", "\n", "assert", "result", "[", "\"keypoints\"", "]", "in", "[", "[", "(", "45", ",", "25", ",", "0", ",", "0", ")", "]", ",", "[", "(", "90", ",", "50", ",", "0", ",", "0", ")", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_template_transform": [[910, 943], ["pytest.mark.parametrize", "numpy.random.randint", "numpy.random.randint", "albumentations.TemplateTransform", "A.TemplateTransform.get_params_dependent_on_targets", "A.TemplateTransform.", "albumentations.RandomSizedCrop", "albumentations.RandomResizedCrop", "albumentations.CenterCrop", "albumentations.Resize", "albumentations.NoOp", "albumentations.NoOp", "albumentations.Compose", "albumentations.Blur", "albumentations.RandomSizedCrop", "albumentations.HorizontalFlip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params_dependent_on_targets"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"img_weight\"", ",", "\"template_weight\"", ",", "\"template_transform\"", ",", "\"image_size\"", ",", "\"template_size\"", "]", ",", "\n", "[", "\n", "(", "0.5", ",", "0.5", ",", "A", ".", "RandomSizedCrop", "(", "(", "50", ",", "200", ")", ",", "513", ",", "450", ",", "always_apply", "=", "True", ")", ",", "(", "513", ",", "450", ")", ",", "(", "224", ",", "224", ")", ")", ",", "\n", "(", "0.3", ",", "0.5", ",", "A", ".", "RandomResizedCrop", "(", "513", ",", "450", ",", "always_apply", "=", "True", ")", ",", "(", "513", ",", "450", ")", ",", "(", "224", ",", "224", ")", ")", ",", "\n", "(", "1.0", ",", "0.5", ",", "A", ".", "CenterCrop", "(", "500", ",", "450", ",", "always_apply", "=", "True", ")", ",", "(", "500", ",", "450", ",", "3", ")", ",", "(", "512", ",", "512", ",", "3", ")", ")", ",", "\n", "(", "0.5", ",", "0.8", ",", "A", ".", "Resize", "(", "513", ",", "450", ",", "always_apply", "=", "True", ")", ",", "(", "513", ",", "450", ")", ",", "(", "512", ",", "512", ")", ")", ",", "\n", "(", "0.5", ",", "0.2", ",", "A", ".", "NoOp", "(", ")", ",", "(", "224", ",", "224", ")", ",", "(", "224", ",", "224", ")", ")", ",", "\n", "(", "0.5", ",", "0.9", ",", "A", ".", "NoOp", "(", ")", ",", "(", "512", ",", "512", ",", "3", ")", ",", "(", "512", ",", "512", ",", "3", ")", ")", ",", "\n", "(", "0.5", ",", "0.5", ",", "None", ",", "(", "512", ",", "512", ")", ",", "(", "512", ",", "512", ")", ")", ",", "\n", "(", "0.8", ",", "0.7", ",", "None", ",", "(", "512", ",", "512", ",", "3", ")", ",", "(", "512", ",", "512", ",", "3", ")", ")", ",", "\n", "(", "\n", "0.5", ",", "\n", "0.5", ",", "\n", "A", ".", "Compose", "(", "[", "A", ".", "Blur", "(", ")", ",", "A", ".", "RandomSizedCrop", "(", "(", "50", ",", "200", ")", ",", "512", ",", "512", ",", "always_apply", "=", "True", ")", ",", "A", ".", "HorizontalFlip", "(", ")", "]", ")", ",", "\n", "(", "512", ",", "512", ")", ",", "\n", "(", "512", ",", "512", ")", ",", "\n", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_template_transform", "(", "image", ",", "img_weight", ",", "template_weight", ",", "template_transform", ",", "image_size", ",", "template_size", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "image_size", ",", "np", ".", "uint8", ")", "\n", "template", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "template_size", ",", "np", ".", "uint8", ")", "\n", "\n", "aug", "=", "A", ".", "TemplateTransform", "(", "template", ",", "img_weight", ",", "template_weight", ",", "template_transform", ")", "\n", "result", "=", "aug", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "\n", "assert", "result", ".", "shape", "==", "img", ".", "shape", "\n", "\n", "params", "=", "aug", ".", "get_params_dependent_on_targets", "(", "{", "\"image\"", ":", "img", "}", ")", "\n", "template", "=", "params", "[", "\"template\"", "]", "\n", "assert", "template", ".", "shape", "==", "img", ".", "shape", "\n", "assert", "template", ".", "dtype", "==", "img", ".", "dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_template_transform_incorrect_size": [[945, 953], ["numpy.random.randint", "pytest.raises", "albumentations.TemplateTransform", "A.TemplateTransform.", "str"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "test_template_transform_incorrect_size", "(", "template", ")", ":", "\n", "    ", "image", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "(", "512", ",", "512", ",", "3", ")", ",", "np", ".", "uint8", ")", "\n", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "transform", "=", "A", ".", "TemplateTransform", "(", "template", ",", "always_apply", "=", "True", ")", "\n", "transform", "(", "image", "=", "image", ")", "\n", "\n", "", "message", "=", "\"Image and template must be the same size, got {} and {}\"", ".", "format", "(", "image", ".", "shape", "[", ":", "2", "]", ",", "template", ".", "shape", "[", ":", "2", "]", ")", "\n", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "message", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_template_transform_incorrect_channels": [[955, 969], ["pytest.mark.parametrize", "numpy.random.randint", "numpy.random.randint", "pytest.raises", "albumentations.TemplateTransform", "A.TemplateTransform.", "str"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"img_channels\"", ",", "\"template_channels\"", "]", ",", "[", "(", "1", ",", "3", ")", ",", "(", "6", ",", "3", ")", "]", ")", "\n", "def", "test_template_transform_incorrect_channels", "(", "img_channels", ",", "template_channels", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "512", ",", "512", ",", "img_channels", "]", ",", "np", ".", "uint8", ")", "\n", "template", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "512", ",", "512", ",", "template_channels", "]", ",", "np", ".", "uint8", ")", "\n", "\n", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "transform", "=", "A", ".", "TemplateTransform", "(", "template", ",", "always_apply", "=", "True", ")", "\n", "transform", "(", "image", "=", "img", ")", "\n", "\n", "", "message", "=", "(", "\n", "\"Template must be a single channel or has the same number of channels \"", "\n", "\"as input image ({}), got {}\"", ".", "format", "(", "img_channels", ",", "template", ".", "shape", "[", "-", "1", "]", ")", "\n", ")", "\n", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "message", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_advanced_blur_float_uint8_diff_less_than_two": [[971, 993], ["pytest.mark.parametrize", "numpy.zeros().astype", "numpy.zeros().astype", "albumentations.AdvancedBlur", "test_transforms.set_seed", "test_transforms.set_seed", "numpy.abs", "numpy.all", "A.AdvancedBlur.", "A.AdvancedBlur.", "numpy.zeros", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"val_uint8\"", "]", ",", "[", "[", "0", "]", ",", "[", "1", "]", ",", "[", "128", "]", ",", "[", "255", "]", "]", ")", "\n", "def", "test_advanced_blur_float_uint8_diff_less_than_two", "(", "val_uint8", ")", ":", "\n", "\n", "    ", "x_uint8", "=", "np", ".", "zeros", "(", "(", "5", ",", "5", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "x_uint8", "[", "2", ",", "2", "]", "=", "val_uint8", "\n", "\n", "x_float32", "=", "np", ".", "zeros", "(", "(", "5", ",", "5", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "x_float32", "[", "2", ",", "2", "]", "=", "val_uint8", "/", "255.0", "\n", "\n", "adv_blur", "=", "A", ".", "AdvancedBlur", "(", "blur_limit", "=", "(", "3", ",", "5", ")", ",", "always_apply", "=", "True", ")", "\n", "\n", "set_seed", "(", "0", ")", "\n", "adv_blur_uint8", "=", "adv_blur", "(", "image", "=", "x_uint8", ")", "[", "\"image\"", "]", "\n", "\n", "set_seed", "(", "0", ")", "\n", "adv_blur_float32", "=", "adv_blur", "(", "image", "=", "x_float32", ")", "[", "\"image\"", "]", "\n", "\n", "# Before comparison, rescale the adv_blur_float32 to [0, 255]", "\n", "diff", "=", "np", ".", "abs", "(", "adv_blur_uint8", "-", "adv_blur_float32", "*", "255", ")", "\n", "\n", "# The difference between the results of float32 and uint8 will be at most 2.", "\n", "assert", "np", ".", "all", "(", "diff", "<=", "2.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_advanced_blur_raises_on_incorrect_params": [[995, 1008], ["pytest.mark.parametrize", "pytest.raises", "albumentations.AdvancedBlur"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"params\"", "]", ",", "\n", "[", "\n", "[", "{", "\"blur_limit\"", ":", "(", "2", ",", "5", ")", "}", "]", ",", "\n", "[", "{", "\"blur_limit\"", ":", "(", "3", ",", "6", ")", "}", "]", ",", "\n", "[", "{", "\"sigmaX_limit\"", ":", "(", "0.0", ",", "1.0", ")", ",", "\"sigmaY_limit\"", ":", "(", "0.0", ",", "1.0", ")", "}", "]", ",", "\n", "[", "{", "\"beta_limit\"", ":", "(", "0.1", ",", "0.9", ")", "}", "]", ",", "\n", "[", "{", "\"beta_limit\"", ":", "(", "1.1", ",", "8.0", ")", "}", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_advanced_blur_raises_on_incorrect_params", "(", "params", ")", ":", "\n", "    ", "with", "pytest", ".", "raises", "(", "ValueError", ")", ":", "\n", "        ", "A", ".", "AdvancedBlur", "(", "**", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_affine_scale_ratio": [[1010, 1034], ["pytest.mark.parametrize", "test_transforms.set_seed", "albumentations.Affine", "numpy.random.randint", "A.Affine.get_params_dependent_on_targets"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.BasicTransform.get_params_dependent_on_targets"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"params\"", "]", ",", "\n", "[", "\n", "[", "{", "\"scale\"", ":", "(", "0.5", ",", "1.0", ")", "}", "]", ",", "\n", "[", "{", "\"scale\"", ":", "(", "0.5", ",", "1.0", ")", ",", "\"keep_ratio\"", ":", "False", "}", "]", ",", "\n", "[", "{", "\"scale\"", ":", "(", "0.5", ",", "1.0", ")", ",", "\"keep_ratio\"", ":", "True", "}", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_affine_scale_ratio", "(", "params", ")", ":", "\n", "    ", "set_seed", "(", "0", ")", "\n", "aug", "=", "A", ".", "Affine", "(", "**", "params", ",", "p", "=", "1.0", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "target", "=", "{", "\"image\"", ":", "image", "}", "\n", "apply_params", "=", "aug", ".", "get_params_dependent_on_targets", "(", "target", ")", "\n", "\n", "if", "\"keep_ratio\"", "not", "in", "params", ":", "\n", "# default(keep_ratio=False)", "\n", "        ", "assert", "apply_params", "[", "\"scale\"", "]", "[", "\"x\"", "]", "!=", "apply_params", "[", "\"scale\"", "]", "[", "\"y\"", "]", "\n", "", "elif", "not", "params", "[", "\"keep_ratio\"", "]", ":", "\n", "# keep_ratio=False", "\n", "        ", "assert", "apply_params", "[", "\"scale\"", "]", "[", "\"x\"", "]", "!=", "apply_params", "[", "\"scale\"", "]", "[", "\"y\"", "]", "\n", "", "else", ":", "\n", "# keep_ratio=True", "\n", "        ", "assert", "apply_params", "[", "\"scale\"", "]", "[", "\"x\"", "]", "==", "apply_params", "[", "\"scale\"", "]", "[", "\"y\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_affine_incorrect_scale_range": [[1036, 1046], ["pytest.mark.parametrize", "pytest.raises", "albumentations.Affine"], "function", ["None"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"params\"", "]", ",", "\n", "[", "\n", "[", "{", "\"scale\"", ":", "{", "\"x\"", ":", "(", "0.5", ",", "1.0", ")", ",", "\"y\"", ":", "(", "1.0", ",", "1.5", ")", "}", ",", "\"keep_ratio\"", ":", "True", "}", "]", ",", "\n", "[", "{", "\"scale\"", ":", "{", "\"x\"", ":", "0.5", ",", "\"y\"", ":", "1.0", "}", ",", "\"keep_ratio\"", ":", "True", "}", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_affine_incorrect_scale_range", "(", "params", ")", ":", "\n", "    ", "with", "pytest", ".", "raises", "(", "ValueError", ")", ":", "\n", "        ", "A", ".", "Affine", "(", "**", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_transforms.test_safe_rotate": [[1048, 1129], ["pytest.mark.parametrize", "numpy.empty", "albumentations.Compose", "A.Compose.", "expected.items", "numpy.allclose", "albumentations.SafeRotate", "albumentations.BboxParams", "albumentations.KeypointParams", "numpy.array", "numpy.array"], "function", ["None"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"angle\"", ",", "\"targets\"", ",", "\"expected\"", "]", ",", "\n", "[", "\n", "[", "\n", "-", "10", ",", "\n", "{", "\n", "\"bboxes\"", ":", "[", "\n", "[", "0", ",", "0", ",", "5", ",", "5", ",", "0", "]", ",", "\n", "[", "195", ",", "0", ",", "200", ",", "5", ",", "0", "]", ",", "\n", "[", "195", ",", "95", ",", "200", ",", "100", ",", "0", "]", ",", "\n", "[", "0", ",", "95", ",", "5", ",", "99", ",", "0", "]", ",", "\n", "]", ",", "\n", "\"keypoints\"", ":", "[", "\n", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "199", ",", "0", ",", "10", ",", "10", "]", ",", "\n", "[", "199", ",", "99", ",", "20", ",", "20", "]", ",", "\n", "[", "0", ",", "99", ",", "30", ",", "30", "]", ",", "\n", "]", ",", "\n", "}", ",", "\n", "{", "\n", "\"bboxes\"", ":", "[", "\n", "[", "15.65896994771262", ",", "0.2946228229078849", ",", "21.047137067150473", ",", "4.617219579173327", ",", "0", "]", ",", "\n", "[", "194.29851584295034", ",", "25.564320319214918", ",", "199.68668296238818", ",", "29.88691707548036", ",", "0", "]", ",", "\n", "[", "178.9528629328495", ",", "95.38278042082668", ",", "184.34103005228735", ",", "99.70537717709212", ",", "0", "]", ",", "\n", "[", "0.47485022613917677", ",", "70.11308292451965", ",", "5.701484157049652", ",", "73.70074852182076", ",", "0", "]", ",", "\n", "]", ",", "\n", "\"keypoints\"", ":", "[", "\n", "[", "16.466635890349504", ",", "0.2946228229078849", ",", "147.04220486917677", ",", "0.0", "]", ",", "\n", "[", "198.770582727028", ",", "26.08267308836993", ",", "157.04220486917674", ",", "9.30232558139535", "]", ",", "\n", "[", "182.77879706281766", ",", "98.84085782583904", ",", "167.04220486917674", ",", "18.6046511627907", "]", ",", "\n", "[", "0.4748502261391767", ",", "73.05280756037699", ",", "177.04220486917674", ",", "27.90697674418604", "]", ",", "\n", "]", ",", "\n", "}", ",", "\n", "]", ",", "\n", "[", "\n", "10", ",", "\n", "{", "\n", "\"bboxes\"", ":", "[", "\n", "[", "0", ",", "0", ",", "5", ",", "5", ",", "0", "]", ",", "\n", "[", "195", ",", "0", ",", "200", ",", "5", ",", "0", "]", ",", "\n", "[", "195", ",", "95", ",", "200", ",", "100", ",", "0", "]", ",", "\n", "[", "0", ",", "95", ",", "5", ",", "99", ",", "0", "]", ",", "\n", "]", ",", "\n", "\"keypoints\"", ":", "[", "\n", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "199", ",", "0", ",", "10", ",", "10", "]", ",", "\n", "[", "199", ",", "99", ",", "20", ",", "20", "]", ",", "\n", "[", "0", ",", "99", ",", "30", ",", "30", "]", ",", "\n", "]", ",", "\n", "}", ",", "\n", "{", "\n", "\"bboxes\"", ":", "[", "\n", "[", "0.3133170376117963", ",", "25.564320319214918", ",", "5.701484157049649", ",", "29.88691707548036", ",", "0", "]", ",", "\n", "[", "178.9528629328495", ",", "0.2946228229078862", ",", "184.34103005228735", ",", "4.617219579173327", ",", "0", "]", ",", "\n", "[", "194.29851584295034", ",", "70.11308292451965", ",", "199.68668296238818", ",", "74.43567968078509", ",", "0", "]", ",", "\n", "[", "15.658969947712617", ",", "95.38278042082668", ",", "20.88560387862309", ",", "98.97044601812779", ",", "0", "]", ",", "\n", "]", ",", "\n", "\"keypoints\"", ":", "[", "\n", "[", "0.3133170376117963", ",", "26.212261280658684", ",", "212.95779513082323", ",", "0.0", "]", ",", "\n", "[", "182.6172638742903", ",", "0.42421101519664006", ",", "222.95779513082323", ",", "9.30232558139535", "]", ",", "\n", "[", "198.60904953850064", ",", "73.18239575266574", ",", "232.9577951308232", ",", "18.6046511627907", "]", ",", "\n", "[", "16.305102701822126", ",", "98.97044601812779", ",", "242.9577951308232", ",", "27.906976744186046", "]", ",", "\n", "]", ",", "\n", "}", ",", "\n", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_safe_rotate", "(", "angle", ":", "float", ",", "targets", ":", "dict", ",", "expected", ":", "dict", ")", ":", "\n", "    ", "image", "=", "np", ".", "empty", "(", "[", "100", ",", "200", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "t", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "SafeRotate", "(", "limit", "=", "(", "angle", ",", "angle", ")", ",", "border_mode", "=", "0", ",", "value", "=", "0", ",", "p", "=", "1", ")", ",", "\n", "]", ",", "\n", "bbox_params", "=", "A", ".", "BboxParams", "(", "format", "=", "\"pascal_voc\"", ",", "min_visibility", "=", "0.0", ")", ",", "\n", "keypoint_params", "=", "A", ".", "KeypointParams", "(", "\"xyas\"", ")", ",", "\n", "p", "=", "1", ",", "\n", ")", "\n", "res", "=", "t", "(", "image", "=", "image", ",", "**", "targets", ")", "\n", "\n", "for", "key", ",", "value", "in", "expected", ".", "items", "(", ")", ":", "\n", "        ", "assert", "np", ".", "allclose", "(", "np", ".", "array", "(", "value", ")", ",", "np", ".", "array", "(", "res", "[", "key", "]", ")", ")", ",", "key", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_vflip": [[15, 22], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.vflip", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip"], ["@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_vflip", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", "]", ",", "[", "0", ",", "1", ",", "1", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "1", "]", ",", "[", "0", ",", "1", ",", "1", "]", ",", "[", "1", ",", "1", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "flipped_img", "=", "F", ".", "vflip", "(", "img", ")", "\n", "assert", "np", ".", "array_equal", "(", "flipped_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_vflip_float": [[24, 31], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.vflip", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "def", "test_vflip_float", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "0.4", ",", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.0", ",", "0.4", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0.0", ",", "0.0", ",", "0.4", "]", ",", "[", "0.0", ",", "0.4", ",", "0.4", "]", ",", "[", "0.4", ",", "0.4", ",", "0.4", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "flipped_img", "=", "F", ".", "vflip", "(", "img", ")", "\n", "assert_array_almost_equal_nulp", "(", "flipped_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_hflip": [[33, 40], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.hflip", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_hflip", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", "]", ",", "[", "0", ",", "1", ",", "1", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", "]", ",", "[", "1", ",", "1", ",", "0", "]", ",", "[", "1", ",", "0", ",", "0", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "flipped_img", "=", "F", ".", "hflip", "(", "img", ")", "\n", "assert", "np", ".", "array_equal", "(", "flipped_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_hflip_float": [[42, 49], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.hflip", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "def", "test_hflip_float", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "0.4", ",", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.0", ",", "0.4", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0.4", ",", "0.4", ",", "0.4", "]", ",", "[", "0.4", ",", "0.4", ",", "0.0", "]", ",", "[", "0.4", ",", "0.0", ",", "0.0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "flipped_img", "=", "F", ".", "hflip", "(", "img", ")", "\n", "assert_array_almost_equal_nulp", "(", "flipped_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_random_flip": [[51, 57], ["pytest.mark.parametrize", "pytest.mark.parametrize", "numpy.array", "tests.utils.convert_2d_to_target_format", "numpy.array_equal", "albumentations.random_flip", "func", "albumentations.vflip", "albumentations.hflip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.random_flip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"code\"", ",", "\"func\"", "]", ",", "[", "[", "0", ",", "F", ".", "vflip", "]", ",", "[", "1", ",", "F", ".", "hflip", "]", ",", "[", "-", "1", ",", "lambda", "img", ":", "F", ".", "vflip", "(", "F", ".", "hflip", "(", "img", ")", ")", "]", "]", ")", "\n", "def", "test_random_flip", "(", "code", ",", "func", ",", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", "]", ",", "[", "0", ",", "1", ",", "1", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", "=", "convert_2d_to_target_format", "(", "[", "img", "]", ",", "target", "=", "target", ")", "\n", "assert", "np", ".", "array_equal", "(", "F", ".", "random_flip", "(", "img", ",", "code", ")", ",", "func", "(", "img", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_random_flip_float": [[59, 65], ["pytest.mark.parametrize", "pytest.mark.parametrize", "numpy.array", "tests.utils.convert_2d_to_target_format", "numpy.testing.assert_array_almost_equal_nulp", "albumentations.random_flip", "func", "albumentations.vflip", "albumentations.hflip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.random_flip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"code\"", ",", "\"func\"", "]", ",", "[", "[", "0", ",", "F", ".", "vflip", "]", ",", "[", "1", ",", "F", ".", "hflip", "]", ",", "[", "-", "1", ",", "lambda", "img", ":", "F", ".", "vflip", "(", "F", ".", "hflip", "(", "img", ")", ")", "]", "]", ")", "\n", "def", "test_random_flip_float", "(", "code", ",", "func", ",", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "0.4", ",", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.0", ",", "0.4", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "img", "=", "convert_2d_to_target_format", "(", "[", "img", "]", ",", "target", "=", "target", ")", "\n", "assert_array_almost_equal_nulp", "(", "F", ".", "random_flip", "(", "img", ",", "code", ")", ",", "func", "(", "img", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_transpose": [[67, 72], ["pytest.mark.parametrize", "numpy.random.randint", "albumentations.transpose"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"input_shape\"", ",", "\"expected_shape\"", "]", ",", "[", "[", "(", "128", ",", "64", ")", ",", "(", "64", ",", "128", ")", "]", ",", "[", "(", "128", ",", "64", ",", "3", ")", ",", "(", "64", ",", "128", ",", "3", ")", "]", "]", ")", "\n", "def", "test_transpose", "(", "input_shape", ",", "expected_shape", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "input_shape", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "transposed", "=", "F", ".", "transpose", "(", "img", ")", "\n", "assert", "transposed", ".", "shape", "==", "expected_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_transpose_float": [[74, 79], ["pytest.mark.parametrize", "numpy.random.uniform().astype", "albumentations.transpose", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"input_shape\"", ",", "\"expected_shape\"", "]", ",", "[", "[", "(", "128", ",", "64", ")", ",", "(", "64", ",", "128", ")", "]", ",", "[", "(", "128", ",", "64", ",", "3", ")", ",", "(", "64", ",", "128", ",", "3", ")", "]", "]", ")", "\n", "def", "test_transpose_float", "(", "input_shape", ",", "expected_shape", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "input_shape", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "transposed", "=", "F", ".", "transpose", "(", "img", ")", "\n", "assert", "transposed", ".", "shape", "==", "expected_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_rot90": [[81, 88], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.rot90", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.rot90"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_rot90", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "1", "]", ",", "[", "0", ",", "0", ",", "1", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", "]", ",", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "rotated", "=", "F", ".", "rot90", "(", "img", ",", "factor", "=", "1", ")", "\n", "assert", "np", ".", "array_equal", "(", "rotated", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_rot90_float": [[90, 97], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.rot90", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.rot90"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "def", "test_rot90_float", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "0.0", ",", "0.0", ",", "0.4", "]", ",", "[", "0.0", ",", "0.0", ",", "0.4", "]", ",", "[", "0.0", ",", "0.0", ",", "0.4", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0.4", ",", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "rotated", "=", "F", ".", "rot90", "(", "img", ",", "factor", "=", "1", ")", "\n", "assert_array_almost_equal_nulp", "(", "rotated", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_normalize": [[99, 104], ["albumentations.normalize", "numpy.testing.assert_array_almost_equal_nulp", "numpy.ones", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.normalize"], ["", "def", "test_normalize", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "*", "127", "\n", "normalized", "=", "F", ".", "normalize", "(", "img", ",", "mean", "=", "50", ",", "std", "=", "3", ")", "\n", "expected", "=", "(", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "127", "/", "255", "-", "50", ")", "/", "3", "\n", "assert_array_almost_equal_nulp", "(", "normalized", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_normalize_float": [[106, 111], ["albumentations.normalize", "numpy.testing.assert_array_almost_equal_nulp", "numpy.ones", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.normalize"], ["", "def", "test_normalize_float", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "0.4", "\n", "normalized", "=", "F", ".", "normalize", "(", "img", ",", "mean", "=", "50", ",", "std", "=", "3", ",", "max_pixel_value", "=", "1.0", ")", "\n", "expected", "=", "(", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "0.4", "-", "50", ")", "/", "3", "\n", "assert_array_almost_equal_nulp", "(", "normalized", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_compare_rotate_and_shift_scale_rotate": [[113, 117], ["albumentations.rotate", "albumentations.shift_scale_rotate", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "def", "test_compare_rotate_and_shift_scale_rotate", "(", "image", ")", ":", "\n", "    ", "rotated_img_1", "=", "FGeometric", ".", "rotate", "(", "image", ",", "angle", "=", "60", ")", "\n", "rotated_img_2", "=", "FGeometric", ".", "shift_scale_rotate", "(", "image", ",", "angle", "=", "60", ",", "scale", "=", "1", ",", "dx", "=", "0", ",", "dy", "=", "0", ")", "\n", "assert", "np", ".", "array_equal", "(", "rotated_img_1", ",", "rotated_img_2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_compare_rotate_float_and_shift_scale_rotate_float": [[119, 123], ["albumentations.rotate", "albumentations.shift_scale_rotate", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "def", "test_compare_rotate_float_and_shift_scale_rotate_float", "(", "float_image", ")", ":", "\n", "    ", "rotated_img_1", "=", "FGeometric", ".", "rotate", "(", "float_image", ",", "angle", "=", "60", ")", "\n", "rotated_img_2", "=", "FGeometric", ".", "shift_scale_rotate", "(", "float_image", ",", "angle", "=", "60", ",", "scale", "=", "1", ",", "dx", "=", "0", ",", "dy", "=", "0", ")", "\n", "assert", "np", ".", "array_equal", "(", "rotated_img_1", ",", "rotated_img_2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_center_crop": [[125, 132], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.center_crop", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.center_crop"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_center_crop", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "[", "0", ",", "1", ",", "1", ",", "1", "]", ",", "[", "0", ",", "0", ",", "1", ",", "1", "]", ",", "[", "0", ",", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", "]", ",", "[", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "cropped_img", "=", "A", ".", "center_crop", "(", "img", ",", "2", ",", "2", ")", "\n", "assert", "np", ".", "array_equal", "(", "cropped_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_center_crop_float": [[134, 143], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.center_crop", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.center_crop"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "def", "test_center_crop_float", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "\n", "[", "[", "0.4", ",", "0.4", ",", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.4", ",", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.0", ",", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.4", "]", "]", ",", "dtype", "=", "np", ".", "float32", "\n", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0.4", ",", "0.4", "]", ",", "[", "0.0", ",", "0.4", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "cropped_img", "=", "A", ".", "center_crop", "(", "img", ",", "2", ",", "2", ")", "\n", "assert_array_almost_equal_nulp", "(", "cropped_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_center_crop_with_incorrectly_large_crop_size": [[145, 150], ["numpy.ones", "pytest.raises", "albumentations.center_crop", "str"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.center_crop"], ["", "def", "test_center_crop_with_incorrectly_large_crop_size", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "4", ",", "4", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "A", ".", "center_crop", "(", "img", ",", "8", ",", "8", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "\"Requested crop size (8, 8) is larger than the image size (4, 4)\"", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_random_crop": [[152, 159], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.random_crop", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_random_crop", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "2", ",", "3", ",", "4", "]", ",", "[", "5", ",", "6", ",", "7", ",", "8", "]", ",", "[", "9", ",", "10", ",", "11", ",", "12", "]", ",", "[", "13", ",", "14", ",", "15", ",", "16", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "5", ",", "6", "]", ",", "[", "9", ",", "10", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "cropped_img", "=", "A", ".", "random_crop", "(", "img", ",", "crop_height", "=", "2", ",", "crop_width", "=", "2", ",", "h_start", "=", "0.5", ",", "w_start", "=", "0", ")", "\n", "assert", "np", ".", "array_equal", "(", "cropped_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_random_crop_float": [[161, 171], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.random_crop", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "def", "test_random_crop_float", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "\n", "[", "[", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", "]", ",", "[", "0.05", ",", "0.06", ",", "0.07", ",", "0.08", "]", ",", "[", "0.09", ",", "0.10", ",", "0.11", ",", "0.12", "]", ",", "[", "0.13", ",", "0.14", ",", "0.15", ",", "0.16", "]", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0.05", ",", "0.06", "]", ",", "[", "0.09", ",", "0.10", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "cropped_img", "=", "A", ".", "random_crop", "(", "img", ",", "crop_height", "=", "2", ",", "crop_width", "=", "2", ",", "h_start", "=", "0.5", ",", "w_start", "=", "0", ")", "\n", "assert_array_almost_equal_nulp", "(", "cropped_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_random_crop_with_incorrectly_large_crop_size": [[173, 178], ["numpy.ones", "pytest.raises", "albumentations.random_crop", "str"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop"], ["", "def", "test_random_crop_with_incorrectly_large_crop_size", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "4", ",", "4", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "A", ".", "random_crop", "(", "img", ",", "crop_height", "=", "8", ",", "crop_width", "=", "8", ",", "h_start", "=", "0", ",", "w_start", "=", "0", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "\"Requested crop size (8, 8) is larger than the image size (4, 4)\"", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_random_crop_extrema": [[180, 188], ["numpy.indices().transpose", "numpy.indices().transpose", "albumentations.random_crop", "albumentations.random_crop", "numpy.array_equal", "numpy.array_equal", "numpy.indices", "numpy.indices"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop"], ["", "def", "test_random_crop_extrema", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "indices", "(", "(", "4", ",", "4", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "transpose", "(", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "expected1", "=", "np", ".", "indices", "(", "(", "2", ",", "2", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "transpose", "(", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "expected2", "=", "expected1", "+", "2", "\n", "cropped_img1", "=", "A", ".", "random_crop", "(", "img", ",", "crop_height", "=", "2", ",", "crop_width", "=", "2", ",", "h_start", "=", "0.0", ",", "w_start", "=", "0.0", ")", "\n", "cropped_img2", "=", "A", ".", "random_crop", "(", "img", ",", "crop_height", "=", "2", ",", "crop_width", "=", "2", ",", "h_start", "=", "0.9999", ",", "w_start", "=", "0.9999", ")", "\n", "assert", "np", ".", "array_equal", "(", "cropped_img1", ",", "expected1", ")", "\n", "assert", "np", ".", "array_equal", "(", "cropped_img2", ",", "expected2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_clip": [[190, 195], ["numpy.array", "numpy.array", "albumentations.clip", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], ["", "def", "test_clip", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "-", "300", ",", "0", "]", ",", "[", "100", ",", "400", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", "]", ",", "[", "100", ",", "255", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "clipped", "=", "F", ".", "clip", "(", "img", ",", "dtype", "=", "np", ".", "uint8", ",", "maxval", "=", "255", ")", "\n", "assert", "np", ".", "array_equal", "(", "clipped", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_clip_float": [[197, 202], ["numpy.array", "numpy.array", "albumentations.clip", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], ["", "def", "test_clip_float", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "-", "0.02", ",", "0", "]", ",", "[", "0.5", ",", "2.2", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", "]", ",", "[", "0.5", ",", "1.0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "clipped", "=", "F", ".", "clip", "(", "img", ",", "dtype", "=", "np", ".", "float32", ",", "maxval", "=", "1.0", ")", "\n", "assert_array_almost_equal_nulp", "(", "clipped", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_pad": [[204, 211], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.pad", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_pad", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "2", "]", ",", "[", "3", ",", "4", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "4", ",", "3", ",", "4", ",", "3", "]", ",", "[", "2", ",", "1", ",", "2", ",", "1", "]", ",", "[", "4", ",", "3", ",", "4", ",", "3", "]", ",", "[", "2", ",", "1", ",", "2", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "padded", "=", "F", ".", "pad", "(", "img", ",", "min_height", "=", "4", ",", "min_width", "=", "4", ")", "\n", "assert", "np", ".", "array_equal", "(", "padded", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_pad_float": [[213, 222], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.pad", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "def", "test_pad_float", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "0.1", ",", "0.2", "]", ",", "[", "0.3", ",", "0.4", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "expected", "=", "np", ".", "array", "(", "\n", "[", "[", "0.4", ",", "0.3", ",", "0.4", ",", "0.3", "]", ",", "[", "0.2", ",", "0.1", ",", "0.2", ",", "0.1", "]", ",", "[", "0.4", ",", "0.3", ",", "0.4", ",", "0.3", "]", ",", "[", "0.2", ",", "0.1", ",", "0.2", ",", "0.1", "]", "]", ",", "dtype", "=", "np", ".", "float32", "\n", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "padded_img", "=", "F", ".", "pad", "(", "img", ",", "min_height", "=", "4", ",", "min_width", "=", "4", ")", "\n", "assert_array_almost_equal_nulp", "(", "padded_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_rotate_from_shift_scale_rotate": [[224, 233], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.shift_scale_rotate", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_rotate_from_shift_scale_rotate", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "2", ",", "3", ",", "4", "]", ",", "[", "5", ",", "6", ",", "7", ",", "8", "]", ",", "[", "9", ",", "10", ",", "11", ",", "12", "]", ",", "[", "13", ",", "14", ",", "15", ",", "16", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "4", ",", "8", ",", "12", ",", "16", "]", ",", "[", "3", ",", "7", ",", "11", ",", "15", "]", ",", "[", "2", ",", "6", ",", "10", ",", "14", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "rotated_img", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "img", ",", "angle", "=", "90", ",", "scale", "=", "1", ",", "dx", "=", "0", ",", "dy", "=", "0", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_CONSTANT", "\n", ")", "\n", "assert", "np", ".", "array_equal", "(", "rotated_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_rotate_float_from_shift_scale_rotate": [[235, 250], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.shift_scale_rotate", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "def", "test_rotate_float_from_shift_scale_rotate", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "\n", "[", "[", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", "]", ",", "[", "0.05", ",", "0.06", ",", "0.07", ",", "0.08", "]", ",", "[", "0.09", ",", "0.10", ",", "0.11", ",", "0.12", "]", ",", "[", "0.13", ",", "0.14", ",", "0.15", ",", "0.16", "]", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "expected", "=", "np", ".", "array", "(", "\n", "[", "[", "0.00", ",", "0.00", ",", "0.00", ",", "0.00", "]", ",", "[", "0.04", ",", "0.08", ",", "0.12", ",", "0.16", "]", ",", "[", "0.03", ",", "0.07", ",", "0.11", ",", "0.15", "]", ",", "[", "0.02", ",", "0.06", ",", "0.10", ",", "0.14", "]", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "rotated_img", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "img", ",", "angle", "=", "90", ",", "scale", "=", "1", ",", "dx", "=", "0", ",", "dy", "=", "0", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_CONSTANT", "\n", ")", "\n", "assert_array_almost_equal_nulp", "(", "rotated_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_scale_from_shift_scale_rotate": [[252, 261], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.shift_scale_rotate", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_scale_from_shift_scale_rotate", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "2", ",", "3", ",", "4", "]", ",", "[", "5", ",", "6", ",", "7", ",", "8", "]", ",", "[", "9", ",", "10", ",", "11", ",", "12", "]", ",", "[", "13", ",", "14", ",", "15", ",", "16", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "6", ",", "7", ",", "7", ",", "8", "]", ",", "[", "10", ",", "11", ",", "11", ",", "12", "]", ",", "[", "10", ",", "11", ",", "11", ",", "12", "]", ",", "[", "14", ",", "15", ",", "15", ",", "16", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "scaled_img", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "img", ",", "angle", "=", "0", ",", "scale", "=", "2", ",", "dx", "=", "0", ",", "dy", "=", "0", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_CONSTANT", "\n", ")", "\n", "assert", "np", ".", "array_equal", "(", "scaled_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_scale_float_from_shift_scale_rotate": [[263, 278], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.shift_scale_rotate", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "def", "test_scale_float_from_shift_scale_rotate", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "\n", "[", "[", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", "]", ",", "[", "0.05", ",", "0.06", ",", "0.07", ",", "0.08", "]", ",", "[", "0.09", ",", "0.10", ",", "0.11", ",", "0.12", "]", ",", "[", "0.13", ",", "0.14", ",", "0.15", ",", "0.16", "]", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "expected", "=", "np", ".", "array", "(", "\n", "[", "[", "0.06", ",", "0.07", ",", "0.07", ",", "0.08", "]", ",", "[", "0.10", ",", "0.11", ",", "0.11", ",", "0.12", "]", ",", "[", "0.10", ",", "0.11", ",", "0.11", ",", "0.12", "]", ",", "[", "0.14", ",", "0.15", ",", "0.15", ",", "0.16", "]", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "scaled_img", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "img", ",", "angle", "=", "0", ",", "scale", "=", "2", ",", "dx", "=", "0", ",", "dy", "=", "0", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_CONSTANT", "\n", ")", "\n", "assert_array_almost_equal_nulp", "(", "scaled_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_shift_x_from_shift_scale_rotate": [[280, 289], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.shift_scale_rotate", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_shift_x_from_shift_scale_rotate", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "2", ",", "3", ",", "4", "]", ",", "[", "5", ",", "6", ",", "7", ",", "8", "]", ",", "[", "9", ",", "10", ",", "11", ",", "12", "]", ",", "[", "13", ",", "14", ",", "15", ",", "16", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "1", ",", "2", "]", ",", "[", "0", ",", "0", ",", "5", ",", "6", "]", ",", "[", "0", ",", "0", ",", "9", ",", "10", "]", ",", "[", "0", ",", "0", ",", "13", ",", "14", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "shifted_along_x_img", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "img", ",", "angle", "=", "0", ",", "scale", "=", "1", ",", "dx", "=", "0.5", ",", "dy", "=", "0", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_CONSTANT", "\n", ")", "\n", "assert", "np", ".", "array_equal", "(", "shifted_along_x_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_shift_x_float_from_shift_scale_rotate": [[291, 306], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.shift_scale_rotate", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "def", "test_shift_x_float_from_shift_scale_rotate", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "\n", "[", "[", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", "]", ",", "[", "0.05", ",", "0.06", ",", "0.07", ",", "0.08", "]", ",", "[", "0.09", ",", "0.10", ",", "0.11", ",", "0.12", "]", ",", "[", "0.13", ",", "0.14", ",", "0.15", ",", "0.16", "]", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "expected", "=", "np", ".", "array", "(", "\n", "[", "[", "0.00", ",", "0.00", ",", "0.01", ",", "0.02", "]", ",", "[", "0.00", ",", "0.00", ",", "0.05", ",", "0.06", "]", ",", "[", "0.00", ",", "0.00", ",", "0.09", ",", "0.10", "]", ",", "[", "0.00", ",", "0.00", ",", "0.13", ",", "0.14", "]", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "shifted_along_x_img", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "img", ",", "angle", "=", "0", ",", "scale", "=", "1", ",", "dx", "=", "0.5", ",", "dy", "=", "0", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_CONSTANT", "\n", ")", "\n", "assert_array_almost_equal_nulp", "(", "shifted_along_x_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_shift_y_from_shift_scale_rotate": [[308, 317], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.shift_scale_rotate", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_shift_y_from_shift_scale_rotate", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "2", ",", "3", ",", "4", "]", ",", "[", "5", ",", "6", ",", "7", ",", "8", "]", ",", "[", "9", ",", "10", ",", "11", ",", "12", "]", ",", "[", "13", ",", "14", ",", "15", ",", "16", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "1", ",", "2", ",", "3", ",", "4", "]", ",", "[", "5", ",", "6", ",", "7", ",", "8", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "shifted_along_y_img", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "img", ",", "angle", "=", "0", ",", "scale", "=", "1", ",", "dx", "=", "0", ",", "dy", "=", "0.5", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_CONSTANT", "\n", ")", "\n", "assert", "np", ".", "array_equal", "(", "shifted_along_y_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_shift_y_float_from_shift_scale_rotate": [[319, 334], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.shift_scale_rotate", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"image_4_channels\"", "]", ")", "\n", "def", "test_shift_y_float_from_shift_scale_rotate", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "\n", "[", "[", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", "]", ",", "[", "0.05", ",", "0.06", ",", "0.07", ",", "0.08", "]", ",", "[", "0.09", ",", "0.10", ",", "0.11", ",", "0.12", "]", ",", "[", "0.13", ",", "0.14", ",", "0.15", ",", "0.16", "]", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "expected", "=", "np", ".", "array", "(", "\n", "[", "[", "0.00", ",", "0.00", ",", "0.00", ",", "0.00", "]", ",", "[", "0.00", ",", "0.00", ",", "0.00", ",", "0.00", "]", ",", "[", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", "]", ",", "[", "0.05", ",", "0.06", ",", "0.07", ",", "0.08", "]", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "shifted_along_y_img", "=", "FGeometric", ".", "shift_scale_rotate", "(", "\n", "img", ",", "angle", "=", "0", ",", "scale", "=", "1", ",", "dx", "=", "0", ",", "dy", "=", "0.5", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "border_mode", "=", "cv2", ".", "BORDER_CONSTANT", "\n", ")", "\n", "assert_array_almost_equal_nulp", "(", "shifted_along_y_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_shift_rgb": [[336, 348], ["pytest.mark.parametrize", "albumentations.shift_rgb", "numpy.ones", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_rgb"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"shift_params\"", ",", "\"expected\"", "]", ",", "[", "[", "(", "-", "10", ",", "0", ",", "10", ")", ",", "(", "117", ",", "127", ",", "137", ")", "]", ",", "[", "(", "-", "200", ",", "0", ",", "200", ")", ",", "(", "0", ",", "127", ",", "255", ")", "]", "]", "\n", ")", "\n", "def", "test_shift_rgb", "(", "shift_params", ",", "expected", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "*", "127", "\n", "r_shift", ",", "g_shift", ",", "b_shift", "=", "shift_params", "\n", "img", "=", "F", ".", "shift_rgb", "(", "img", ",", "r_shift", "=", "r_shift", ",", "g_shift", "=", "g_shift", ",", "b_shift", "=", "b_shift", ")", "\n", "expected_r", ",", "expected_g", ",", "expected_b", "=", "expected", "\n", "assert", "img", ".", "dtype", "==", "np", ".", "dtype", "(", "\"uint8\"", ")", "\n", "assert", "(", "img", "[", ":", ",", ":", ",", "0", "]", "==", "expected_r", ")", ".", "all", "(", ")", "\n", "assert", "(", "img", "[", ":", ",", ":", ",", "1", "]", "==", "expected_g", ")", ".", "all", "(", ")", "\n", "assert", "(", "img", "[", ":", ",", ":", ",", "2", "]", "==", "expected_b", ")", ".", "all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_shift_rgb_float": [[350, 364], ["pytest.mark.parametrize", "albumentations.shift_rgb", "numpy.testing.assert_array_almost_equal_nulp", "numpy.testing.assert_array_almost_equal_nulp", "numpy.testing.assert_array_almost_equal_nulp", "numpy.ones", "numpy.dtype", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_rgb"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"shift_params\"", ",", "\"expected\"", "]", ",", "[", "[", "(", "-", "0.1", ",", "0", ",", "0.1", ")", ",", "(", "0.3", ",", "0.4", ",", "0.5", ")", "]", ",", "[", "(", "-", "0.6", ",", "0", ",", "0.6", ")", ",", "(", "0", ",", "0.4", ",", "1.0", ")", "]", "]", "\n", ")", "\n", "def", "test_shift_rgb_float", "(", "shift_params", ",", "expected", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "0.4", "\n", "r_shift", ",", "g_shift", ",", "b_shift", "=", "shift_params", "\n", "img", "=", "F", ".", "shift_rgb", "(", "img", ",", "r_shift", "=", "r_shift", ",", "g_shift", "=", "g_shift", ",", "b_shift", "=", "b_shift", ")", "\n", "expected_r", ",", "expected_g", ",", "expected_b", "=", "[", "\n", "np", ".", "ones", "(", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "channel_value", "for", "channel_value", "in", "expected", "\n", "]", "\n", "assert", "img", ".", "dtype", "==", "np", ".", "dtype", "(", "\"float32\"", ")", "\n", "assert_array_almost_equal_nulp", "(", "img", "[", ":", ",", ":", ",", "0", "]", ",", "expected_r", ")", "\n", "assert_array_almost_equal_nulp", "(", "img", "[", ":", ",", ":", ",", "1", "]", ",", "expected_g", ")", "\n", "assert_array_almost_equal_nulp", "(", "img", "[", ":", ",", ":", ",", "2", "]", ",", "expected_b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_random_contrast": [[366, 372], ["pytest.mark.parametrize", "albumentations.brightness_contrast_adjust", "numpy.ones", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"alpha\"", ",", "\"expected\"", "]", ",", "[", "(", "1.5", ",", "190", ")", ",", "(", "3", ",", "255", ")", "]", ")", "\n", "def", "test_random_contrast", "(", "alpha", ",", "expected", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "*", "127", "\n", "img", "=", "F", ".", "brightness_contrast_adjust", "(", "img", ",", "alpha", "=", "alpha", ")", "\n", "assert", "img", ".", "dtype", "==", "np", ".", "dtype", "(", "\"uint8\"", ")", "\n", "assert", "(", "img", "==", "expected", ")", ".", "all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_random_contrast_float": [[374, 381], ["pytest.mark.parametrize", "albumentations.brightness_contrast_adjust", "numpy.testing.assert_array_almost_equal_nulp", "numpy.ones", "numpy.ones", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"alpha\"", ",", "\"expected\"", "]", ",", "[", "(", "1.5", ",", "0.6", ")", ",", "(", "3", ",", "1.0", ")", "]", ")", "\n", "def", "test_random_contrast_float", "(", "alpha", ",", "expected", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "0.4", "\n", "expected", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "expected", "\n", "img", "=", "F", ".", "brightness_contrast_adjust", "(", "img", ",", "alpha", "=", "alpha", ")", "\n", "assert", "img", ".", "dtype", "==", "np", ".", "dtype", "(", "\"float32\"", ")", "\n", "assert_array_almost_equal_nulp", "(", "img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_random_brightness": [[383, 389], ["pytest.mark.parametrize", "albumentations.brightness_contrast_adjust", "numpy.ones", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"beta\"", ",", "\"expected\"", "]", ",", "[", "(", "-", "0.5", ",", "50", ")", ",", "(", "0.25", ",", "125", ")", "]", ")", "\n", "def", "test_random_brightness", "(", "beta", ",", "expected", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "*", "100", "\n", "img", "=", "F", ".", "brightness_contrast_adjust", "(", "img", ",", "beta", "=", "beta", ")", "\n", "assert", "img", ".", "dtype", "==", "np", ".", "dtype", "(", "\"uint8\"", ")", "\n", "assert", "(", "img", "==", "expected", ")", ".", "all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_random_brightness_float": [[391, 398], ["pytest.mark.parametrize", "albumentations.brightness_contrast_adjust", "numpy.testing.assert_array_almost_equal_nulp", "numpy.ones", "numpy.ones_like", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"beta\"", ",", "\"expected\"", "]", ",", "[", "(", "0.2", ",", "0.48", ")", ",", "(", "-", "0.1", ",", "0.36", ")", "]", ")", "\n", "def", "test_random_brightness_float", "(", "beta", ",", "expected", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "0.4", "\n", "expected", "=", "np", ".", "ones_like", "(", "img", ")", "*", "expected", "\n", "img", "=", "F", ".", "brightness_contrast_adjust", "(", "img", ",", "beta", "=", "beta", ")", "\n", "assert", "img", ".", "dtype", "==", "np", ".", "dtype", "(", "\"float32\"", ")", "\n", "assert_array_almost_equal_nulp", "(", "img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_gamma_transform": [[400, 406], ["pytest.mark.parametrize", "numpy.ones", "albumentations.gamma_transform", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gamma_transform"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"gamma\"", ",", "\"expected\"", "]", ",", "[", "(", "1", ",", "1", ")", ",", "(", "0.8", ",", "3", ")", "]", ")", "\n", "def", "test_gamma_transform", "(", "gamma", ",", "expected", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", "=", "F", ".", "gamma_transform", "(", "img", ",", "gamma", "=", "gamma", ")", "\n", "assert", "img", ".", "dtype", "==", "np", ".", "dtype", "(", "\"uint8\"", ")", "\n", "assert", "(", "img", "==", "expected", ")", ".", "all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_gamma_transform_float": [[408, 415], ["pytest.mark.parametrize", "albumentations.gamma_transform", "numpy.allclose", "numpy.ones", "numpy.ones", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gamma_transform"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"gamma\"", ",", "\"expected\"", "]", ",", "[", "(", "1", ",", "0.4", ")", ",", "(", "10", ",", "0.00010486", ")", "]", ")", "\n", "def", "test_gamma_transform_float", "(", "gamma", ",", "expected", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "0.4", "\n", "expected", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "expected", "\n", "img", "=", "F", ".", "gamma_transform", "(", "img", ",", "gamma", "=", "gamma", ")", "\n", "assert", "img", ".", "dtype", "==", "np", ".", "dtype", "(", "\"float32\"", ")", "\n", "assert", "np", ".", "allclose", "(", "img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_gamma_float_equal_uint8": [[417, 429], ["numpy.random.randint", "albumentations.gamma_transform", "albumentations.gamma_transform", "img.astype.astype", "img.astype.astype", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gamma_transform", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gamma_transform"], ["", "def", "test_gamma_float_equal_uint8", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img_f", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", "\n", "gamma", "=", "0.5", "\n", "\n", "img", "=", "F", ".", "gamma_transform", "(", "img", ",", "gamma", ")", "\n", "img_f", "=", "F", ".", "gamma_transform", "(", "img_f", ",", "gamma", ")", "\n", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_f", "*=", "255.0", "\n", "\n", "assert", "(", "np", ".", "abs", "(", "img", "-", "img_f", ")", "<=", "1", ")", ".", "all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_to_float_without_max_value_specified": [[431, 436], ["pytest.mark.parametrize", "numpy.ones", "numpy.testing.assert_array_almost_equal_nulp", "np.ones.astype", "albumentations.to_float"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"dtype\"", ",", "\"divider\"", "]", ",", "[", "(", "np", ".", "uint8", ",", "255", ")", ",", "(", "np", ".", "uint16", ",", "65535", ")", ",", "(", "np", ".", "uint32", ",", "4294967295", ")", "]", ")", "\n", "def", "test_to_float_without_max_value_specified", "(", "dtype", ",", "divider", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "expected", "=", "img", ".", "astype", "(", "\"float32\"", ")", "/", "divider", "\n", "assert_array_almost_equal_nulp", "(", "F", ".", "to_float", "(", "img", ")", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_to_float_with_max_value_specified": [[438, 443], ["pytest.mark.parametrize", "numpy.ones", "numpy.testing.assert_array_almost_equal_nulp", "np.ones.astype", "albumentations.to_float"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"max_value\"", ",", "[", "255.0", ",", "65535.0", ",", "4294967295.0", "]", ")", "\n", "def", "test_to_float_with_max_value_specified", "(", "max_value", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint16", ")", "\n", "expected", "=", "img", ".", "astype", "(", "\"float32\"", ")", "/", "max_value", "\n", "assert_array_almost_equal_nulp", "(", "F", ".", "to_float", "(", "img", ",", "max_value", "=", "max_value", ")", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_to_float_unknown_dtype": [[445, 451], ["numpy.ones", "pytest.raises", "albumentations.to_float", "str"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], ["", "def", "test_to_float_unknown_dtype", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "int16", ")", "\n", "with", "pytest", ".", "raises", "(", "RuntimeError", ")", "as", "exc_info", ":", "\n", "        ", "F", ".", "to_float", "(", "img", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "(", "\n", "\"Can't infer the maximum value for dtype int16. You need to specify the maximum value manually by passing \"", "\n", "\"the max_value argument\"", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_to_float_unknown_dtype_with_max_value": [[455, 460], ["pytest.mark.parametrize", "numpy.ones", "numpy.testing.assert_array_almost_equal_nulp", "np.ones.astype", "albumentations.to_float"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_float"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"max_value\"", ",", "[", "255.0", ",", "65535.0", ",", "4294967295.0", "]", ")", "\n", "def", "test_to_float_unknown_dtype_with_max_value", "(", "max_value", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "int16", ")", "\n", "expected", "=", "img", ".", "astype", "(", "\"float32\"", ")", "/", "max_value", "\n", "assert_array_almost_equal_nulp", "(", "F", ".", "to_float", "(", "img", ",", "max_value", "=", "max_value", ")", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_from_float_without_max_value_specified": [[462, 467], ["pytest.mark.parametrize", "numpy.ones", "numpy.testing.assert_array_almost_equal_nulp", "albumentations.from_float", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"dtype\"", ",", "\"multiplier\"", "]", ",", "[", "(", "np", ".", "uint8", ",", "255", ")", ",", "(", "np", ".", "uint16", ",", "65535", ")", ",", "(", "np", ".", "uint32", ",", "4294967295", ")", "]", ")", "\n", "def", "test_from_float_without_max_value_specified", "(", "dtype", ",", "multiplier", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "expected", "=", "(", "img", "*", "multiplier", ")", ".", "astype", "(", "dtype", ")", "\n", "assert_array_almost_equal_nulp", "(", "F", ".", "from_float", "(", "img", ",", "np", ".", "dtype", "(", "dtype", ")", ")", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_from_float_with_max_value_specified": [[469, 474], ["pytest.mark.parametrize", "numpy.ones", "numpy.testing.assert_array_almost_equal_nulp", "albumentations.from_float"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"max_value\"", ",", "[", "255.0", ",", "65535.0", ",", "4294967295.0", "]", ")", "\n", "def", "test_from_float_with_max_value_specified", "(", "max_value", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "expected", "=", "(", "img", "*", "max_value", ")", ".", "astype", "(", "np", ".", "uint32", ")", "\n", "assert_array_almost_equal_nulp", "(", "F", ".", "from_float", "(", "img", ",", "dtype", "=", "np", ".", "uint32", ",", "max_value", "=", "max_value", ")", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_scale": [[476, 496], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.scale", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.scale"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_scale", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "2", ",", "3", "]", ",", "[", "4", ",", "5", ",", "6", "]", ",", "[", "7", ",", "8", ",", "9", "]", ",", "[", "10", ",", "11", ",", "12", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "\n", "[", "\n", "[", "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", "]", ",", "\n", "[", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", "]", ",", "\n", "[", "3", ",", "3", ",", "4", ",", "4", ",", "5", ",", "5", "]", ",", "\n", "[", "5", ",", "5", ",", "5", ",", "6", ",", "6", ",", "7", "]", ",", "\n", "[", "6", ",", "6", ",", "7", ",", "7", ",", "8", ",", "8", "]", ",", "\n", "[", "8", ",", "8", ",", "8", ",", "9", ",", "9", ",", "10", "]", ",", "\n", "[", "9", ",", "9", ",", "10", ",", "10", ",", "11", ",", "11", "]", ",", "\n", "[", "10", ",", "10", ",", "11", ",", "11", ",", "12", ",", "12", "]", ",", "\n", "]", ",", "\n", "dtype", "=", "np", ".", "uint8", ",", "\n", ")", "\n", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "scaled", "=", "FGeometric", ".", "scale", "(", "img", ",", "scale", "=", "2", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "assert", "np", ".", "array_equal", "(", "scaled", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_longest_max_size": [[498, 506], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.longest_max_size", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.longest_max_size"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_longest_max_size", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "2", ",", "3", "]", ",", "[", "4", ",", "5", ",", "6", "]", ",", "[", "7", ",", "8", ",", "9", "]", ",", "[", "10", ",", "11", ",", "12", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "2", ",", "3", "]", ",", "[", "6", ",", "7", "]", ",", "[", "10", ",", "11", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "scaled", "=", "FGeometric", ".", "longest_max_size", "(", "img", ",", "max_size", "=", "3", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "assert", "np", ".", "array_equal", "(", "scaled", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_smallest_max_size": [[508, 518], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.smallest_max_size", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.smallest_max_size"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_smallest_max_size", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "\n", "[", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", "]", ",", "[", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", "]", ",", "[", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", "]", ",", "[", "18", ",", "19", ",", "20", ",", "21", ",", "22", ",", "23", "]", "]", ",", "dtype", "=", "np", ".", "uint8", "\n", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "2", ",", "4", ",", "5", ",", "7", "]", ",", "[", "10", ",", "11", ",", "13", ",", "14", "]", ",", "[", "17", ",", "19", ",", "20", ",", "22", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "scaled", "=", "FGeometric", ".", "smallest_max_size", "(", "img", ",", "max_size", "=", "3", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "assert", "np", ".", "array_equal", "(", "scaled", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_from_float_unknown_dtype": [[520, 526], ["numpy.ones", "pytest.raises", "albumentations.from_float", "str", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.from_float"], ["", "def", "test_from_float_unknown_dtype", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "with", "pytest", ".", "raises", "(", "RuntimeError", ")", "as", "exc_info", ":", "\n", "        ", "F", ".", "from_float", "(", "img", ",", "np", ".", "dtype", "(", "np", ".", "int16", ")", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "(", "\n", "\"Can't infer the maximum value for dtype int16. You need to specify the maximum value manually by passing \"", "\n", "\"the max_value argument\"", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_resize_default_interpolation": [[530, 540], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.resize", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_resize_default_interpolation", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "[", "4", ",", "4", ",", "4", ",", "4", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "2", ",", "2", "]", ",", "[", "4", ",", "4", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "resized_img", "=", "FGeometric", ".", "resize", "(", "img", ",", "2", ",", "2", ")", "\n", "height", ",", "width", "=", "resized_img", ".", "shape", "[", ":", "2", "]", "\n", "assert", "height", "==", "2", "\n", "assert", "width", "==", "2", "\n", "assert", "np", ".", "array_equal", "(", "resized_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_resize_nearest_interpolation": [[542, 552], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.resize", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_resize_nearest_interpolation", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "[", "4", ",", "4", ",", "4", ",", "4", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", "]", ",", "[", "3", ",", "3", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "resized_img", "=", "FGeometric", ".", "resize", "(", "img", ",", "2", ",", "2", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "height", ",", "width", "=", "resized_img", ".", "shape", "[", ":", "2", "]", "\n", "assert", "height", "==", "2", "\n", "assert", "width", "==", "2", "\n", "assert", "np", ".", "array_equal", "(", "resized_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_resize_different_height_and_width": [[554, 565], ["pytest.mark.parametrize", "numpy.ones", "tests.utils.convert_2d_to_target_format", "albumentations.resize"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_resize_different_height_and_width", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img", "=", "convert_2d_to_target_format", "(", "[", "img", "]", ",", "target", "=", "target", ")", "\n", "resized_img", "=", "FGeometric", ".", "resize", "(", "img", ",", "height", "=", "20", ",", "width", "=", "30", ")", "\n", "height", ",", "width", "=", "resized_img", ".", "shape", "[", ":", "2", "]", "\n", "assert", "height", "==", "20", "\n", "assert", "width", "==", "30", "\n", "if", "target", "==", "\"image\"", ":", "\n", "        ", "num_channels", "=", "resized_img", ".", "shape", "[", "2", "]", "\n", "assert", "num_channels", "==", "3", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_resize_default_interpolation_float": [[567, 579], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.resize", "numpy.testing.assert_array_almost_equal_nulp"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_resize_default_interpolation_float", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "\n", "[", "[", "0.1", ",", "0.1", ",", "0.1", ",", "0.1", "]", ",", "[", "0.2", ",", "0.2", ",", "0.2", ",", "0.2", "]", ",", "[", "0.3", ",", "0.3", ",", "0.3", ",", "0.3", "]", ",", "[", "0.4", ",", "0.4", ",", "0.4", ",", "0.4", "]", "]", ",", "dtype", "=", "np", ".", "float32", "\n", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0.15", ",", "0.15", "]", ",", "[", "0.35", ",", "0.35", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "resized_img", "=", "FGeometric", ".", "resize", "(", "img", ",", "2", ",", "2", ")", "\n", "height", ",", "width", "=", "resized_img", ".", "shape", "[", ":", "2", "]", "\n", "assert", "height", "==", "2", "\n", "assert", "width", "==", "2", "\n", "assert_array_almost_equal_nulp", "(", "resized_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_resize_nearest_interpolation_float": [[581, 593], ["pytest.mark.parametrize", "numpy.array", "numpy.array", "tests.utils.convert_2d_to_target_format", "albumentations.resize", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"target\"", ",", "[", "\"image\"", ",", "\"mask\"", "]", ")", "\n", "def", "test_resize_nearest_interpolation_float", "(", "target", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "\n", "[", "[", "0.1", ",", "0.1", ",", "0.1", ",", "0.1", "]", ",", "[", "0.2", ",", "0.2", ",", "0.2", ",", "0.2", "]", ",", "[", "0.3", ",", "0.3", ",", "0.3", ",", "0.3", "]", ",", "[", "0.4", ",", "0.4", ",", "0.4", ",", "0.4", "]", "]", ",", "dtype", "=", "np", ".", "float32", "\n", ")", "\n", "expected", "=", "np", ".", "array", "(", "[", "[", "0.1", ",", "0.1", "]", ",", "[", "0.3", ",", "0.3", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "img", ",", "expected", "=", "convert_2d_to_target_format", "(", "[", "img", ",", "expected", "]", ",", "target", "=", "target", ")", "\n", "resized_img", "=", "FGeometric", ".", "resize", "(", "img", ",", "2", ",", "2", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "height", ",", "width", "=", "resized_img", ".", "shape", "[", ":", "2", "]", "\n", "assert", "height", "==", "2", "\n", "assert", "width", "==", "2", "\n", "assert", "np", ".", "array_equal", "(", "resized_img", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_bbox_vflip": [[595, 597], ["albumentations.bbox_vflip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_vflip"], ["", "def", "test_bbox_vflip", "(", ")", ":", "\n", "    ", "assert", "F", ".", "bbox_vflip", "(", "(", "0.1", ",", "0.2", ",", "0.6", ",", "0.5", ")", ",", "100", ",", "200", ")", "==", "(", "0.1", ",", "0.5", ",", "0.6", ",", "0.8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_bbox_hflip": [[599, 601], ["albumentations.bbox_hflip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_hflip"], ["", "def", "test_bbox_hflip", "(", ")", ":", "\n", "    ", "assert", "F", ".", "bbox_hflip", "(", "(", "0.1", ",", "0.2", ",", "0.6", ",", "0.5", ")", ",", "100", ",", "200", ")", "==", "(", "0.4", ",", "0.2", ",", "0.9", ",", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_bbox_flip": [[603, 615], ["pytest.mark.parametrize", "albumentations.bbox_flip", "func", "albumentations.bbox_vflip", "albumentations.bbox_hflip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_flip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_hflip"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"code\"", ",", "\"func\"", "]", ",", "\n", "[", "\n", "[", "0", ",", "F", ".", "bbox_vflip", "]", ",", "\n", "[", "1", ",", "F", ".", "bbox_hflip", "]", ",", "\n", "[", "-", "1", ",", "lambda", "bbox", ",", "rows", ",", "cols", ":", "F", ".", "bbox_vflip", "(", "F", ".", "bbox_hflip", "(", "bbox", ",", "rows", ",", "cols", ")", ",", "rows", ",", "cols", ")", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_bbox_flip", "(", "code", ",", "func", ")", ":", "\n", "    ", "rows", ",", "cols", "=", "100", ",", "200", "\n", "bbox", "=", "[", "0.1", ",", "0.2", ",", "0.6", ",", "0.5", "]", "\n", "assert", "F", ".", "bbox_flip", "(", "bbox", ",", "code", ",", "rows", ",", "cols", ")", "==", "func", "(", "bbox", ",", "rows", ",", "cols", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_crop_bbox_by_coords": [[617, 620], ["albumentations.crop_bbox_by_coords"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop_bbox_by_coords"], ["", "def", "test_crop_bbox_by_coords", "(", ")", ":", "\n", "    ", "cropped_bbox", "=", "A", ".", "crop_bbox_by_coords", "(", "(", "0.5", ",", "0.2", ",", "0.9", ",", "0.7", ")", ",", "(", "18", ",", "18", ",", "82", ",", "82", ")", ",", "64", ",", "64", ",", "100", ",", "100", ")", "\n", "assert", "cropped_bbox", "==", "(", "0.5", ",", "0.03125", ",", "1.125", ",", "0.8125", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_bbox_center_crop": [[622, 625], ["albumentations.bbox_center_crop"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_center_crop"], ["", "def", "test_bbox_center_crop", "(", ")", ":", "\n", "    ", "cropped_bbox", "=", "A", ".", "bbox_center_crop", "(", "(", "0.5", ",", "0.2", ",", "0.9", ",", "0.7", ")", ",", "64", ",", "64", ",", "100", ",", "100", ")", "\n", "assert", "cropped_bbox", "==", "(", "0.5", ",", "0.03125", ",", "1.125", ",", "0.8125", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_bbox_crop": [[627, 630], ["albumentations.bbox_crop"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_crop"], ["", "def", "test_bbox_crop", "(", ")", ":", "\n", "    ", "cropped_bbox", "=", "A", ".", "bbox_crop", "(", "[", "0.5", ",", "0.2", ",", "0.9", ",", "0.7", "]", ",", "24", ",", "24", ",", "64", ",", "64", ",", "100", ",", "100", ")", "\n", "assert", "cropped_bbox", "==", "(", "0.65", ",", "-", "0.1", ",", "1.65", ",", "1.15", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_bbox_random_crop": [[632, 635], ["albumentations.bbox_random_crop"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.bbox_random_crop"], ["", "def", "test_bbox_random_crop", "(", ")", ":", "\n", "    ", "cropped_bbox", "=", "A", ".", "bbox_random_crop", "(", "[", "0.5", ",", "0.2", ",", "0.9", ",", "0.7", "]", ",", "80", ",", "80", ",", "0.2", ",", "0.1", ",", "100", ",", "100", ")", "\n", "assert", "cropped_bbox", "==", "(", "0.6", ",", "0.2", ",", "1.1", ",", "0.825", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_bbox_rot90": [[637, 642], ["albumentations.bbox_rot90", "albumentations.bbox_rot90", "albumentations.bbox_rot90", "albumentations.bbox_rot90"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_rot90", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_rot90", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_rot90", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.bbox_rot90"], ["", "def", "test_bbox_rot90", "(", ")", ":", "\n", "    ", "assert", "FGeometric", ".", "bbox_rot90", "(", "(", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ")", ",", "0", ",", "100", ",", "200", ")", "==", "(", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ")", "\n", "assert", "FGeometric", ".", "bbox_rot90", "(", "(", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ")", ",", "1", ",", "100", ",", "200", ")", "==", "(", "0.2", ",", "0.7", ",", "0.4", ",", "0.9", ")", "\n", "assert", "FGeometric", ".", "bbox_rot90", "(", "(", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ")", ",", "2", ",", "100", ",", "200", ")", "==", "(", "0.7", ",", "0.6", ",", "0.9", ",", "0.8", ")", "\n", "assert", "FGeometric", ".", "bbox_rot90", "(", "(", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ")", ",", "3", ",", "100", ",", "200", ")", "==", "(", "0.6", ",", "0.1", ",", "0.8", ",", "0.3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_bbox_transpose": [[644, 647], ["numpy.allclose", "numpy.allclose", "albumentations.bbox_transpose", "albumentations.bbox_transpose"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_transpose", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_transpose"], ["", "def", "test_bbox_transpose", "(", ")", ":", "\n", "    ", "assert", "np", ".", "allclose", "(", "F", ".", "bbox_transpose", "(", "(", "0.7", ",", "0.1", ",", "0.8", ",", "0.4", ")", ",", "0", ",", "100", ",", "200", ")", ",", "(", "0.1", ",", "0.7", ",", "0.4", ",", "0.8", ")", ")", "\n", "assert", "np", ".", "allclose", "(", "F", ".", "bbox_transpose", "(", "(", "0.7", ",", "0.1", ",", "0.8", ",", "0.4", ")", ",", "1", ",", "100", ",", "200", ")", ",", "(", "0.6", ",", "0.2", ",", "0.9", ",", "0.3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_filter_bboxes": [[649, 666], ["pytest.mark.parametrize", "albumentations.augmentations.bbox_utils.filter_bboxes"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.filter_bboxes"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"bboxes\"", ",", "\"min_area\"", ",", "\"min_visibility\"", ",", "\"target\"", "]", ",", "\n", "[", "\n", "(", "\n", "[", "(", "0.1", ",", "0.5", ",", "1.1", ",", "0.9", ")", ",", "(", "-", "0.1", ",", "0.5", ",", "0.8", ",", "0.9", ")", ",", "(", "0.1", ",", "0.5", ",", "0.8", ",", "0.9", ")", "]", ",", "\n", "0", ",", "\n", "0", ",", "\n", "[", "(", "0.1", ",", "0.5", ",", "1.0", ",", "0.9", ")", ",", "(", "0.0", ",", "0.5", ",", "0.8", ",", "0.9", ")", ",", "(", "0.1", ",", "0.5", ",", "0.8", ",", "0.9", ")", "]", ",", "\n", ")", ",", "\n", "(", "[", "(", "0.1", ",", "0.5", ",", "0.8", ",", "0.9", ")", ",", "(", "0.4", ",", "0.5", ",", "0.5", ",", "0.6", ")", "]", ",", "150", ",", "0", ",", "[", "(", "0.1", ",", "0.5", ",", "0.8", ",", "0.9", ")", "]", ")", ",", "\n", "(", "[", "(", "0.1", ",", "0.5", ",", "0.8", ",", "0.9", ")", ",", "(", "0.4", ",", "0.9", ",", "0.5", ",", "1.6", ")", "]", ",", "0", ",", "0.75", ",", "[", "(", "0.1", ",", "0.5", ",", "0.8", ",", "0.9", ")", "]", ")", ",", "\n", "(", "[", "(", "0.1", ",", "0.5", ",", "0.8", ",", "0.9", ")", ",", "(", "0.4", ",", "0.7", ",", "0.5", ",", "1.1", ")", "]", ",", "0", ",", "0.7", ",", "[", "(", "0.1", ",", "0.5", ",", "0.8", ",", "0.9", ")", ",", "(", "0.4", ",", "0.7", ",", "0.5", ",", "1.0", ")", "]", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_filter_bboxes", "(", "bboxes", ",", "min_area", ",", "min_visibility", ",", "target", ")", ":", "\n", "    ", "filtered_bboxes", "=", "filter_bboxes", "(", "bboxes", ",", "min_area", "=", "min_area", ",", "min_visibility", "=", "min_visibility", ",", "rows", "=", "100", ",", "cols", "=", "100", ")", "\n", "assert", "filtered_bboxes", "==", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_fun_max_size": [[668, 675], ["numpy.empty", "albumentations.smallest_max_size"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.smallest_max_size"], ["", "def", "test_fun_max_size", "(", ")", ":", "\n", "    ", "target_width", "=", "256", "\n", "\n", "img", "=", "np", ".", "empty", "(", "(", "330", ",", "49", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "out", "=", "FGeometric", ".", "smallest_max_size", "(", "img", ",", "target_width", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "assert", "out", ".", "shape", "==", "(", "1724", ",", "target_width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_is_rgb_image": [[677, 689], ["numpy.ones", "albumentations.is_rgb_image", "numpy.ones", "numpy.ones", "numpy.ones", "albumentations.is_rgb_image", "albumentations.is_rgb_image", "albumentations.is_rgb_image"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_rgb_image"], ["", "def", "test_is_rgb_image", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "F", ".", "is_rgb_image", "(", "image", ")", "\n", "\n", "multispectral_image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ",", "4", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "not", "F", ".", "is_rgb_image", "(", "multispectral_image", ")", "\n", "\n", "gray_image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "not", "F", ".", "is_rgb_image", "(", "gray_image", ")", "\n", "\n", "gray_image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ",", "1", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "not", "F", ".", "is_rgb_image", "(", "gray_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_is_grayscale_image": [[691, 703], ["numpy.ones", "numpy.ones", "numpy.ones", "albumentations.is_grayscale_image", "numpy.ones", "albumentations.is_grayscale_image", "albumentations.is_grayscale_image", "albumentations.is_grayscale_image"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_grayscale_image"], ["", "def", "test_is_grayscale_image", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "not", "F", ".", "is_grayscale_image", "(", "image", ")", "\n", "\n", "multispectral_image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ",", "4", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "not", "F", ".", "is_grayscale_image", "(", "multispectral_image", ")", "\n", "\n", "gray_image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "F", ".", "is_grayscale_image", "(", "gray_image", ")", "\n", "\n", "gray_image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ",", "1", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "F", ".", "is_grayscale_image", "(", "gray_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_is_multispectral_image": [[705, 717], ["numpy.ones", "numpy.ones", "albumentations.is_multispectral_image", "numpy.ones", "numpy.ones", "albumentations.is_multispectral_image", "albumentations.is_multispectral_image", "albumentations.is_multispectral_image"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_multispectral_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_multispectral_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_multispectral_image", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.is_multispectral_image"], ["", "def", "test_is_multispectral_image", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "not", "F", ".", "is_multispectral_image", "(", "image", ")", "\n", "\n", "multispectral_image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ",", "4", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "F", ".", "is_multispectral_image", "(", "multispectral_image", ")", "\n", "\n", "gray_image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "not", "F", ".", "is_multispectral_image", "(", "gray_image", ")", "\n", "\n", "gray_image", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ",", "1", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "not", "F", ".", "is_multispectral_image", "(", "gray_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_brightness_contrast": [[719, 758], ["numpy.random.randint", "numpy.array_equal", "numpy.array_equal", "numpy.random.randint", "numpy.array_equal", "albumentations.brightness_contrast_adjust", "numpy.random.randint", "numpy.array_equal", "numpy.random.random", "numpy.array_equal", "numpy.iinfo", "numpy.iinfo", "albumentations.brightness_contrast_adjust", "albumentations._brightness_contrast_adjust_uint", "albumentations._brightness_contrast_adjust_non_uint", "albumentations._brightness_contrast_adjust_uint", "numpy.iinfo", "numpy.iinfo", "albumentations.brightness_contrast_adjust", "albumentations._brightness_contrast_adjust_non_uint", "numpy.iinfo", "numpy.iinfo", "albumentations.brightness_contrast_adjust", "albumentations._brightness_contrast_adjust_non_uint", "albumentations.brightness_contrast_adjust", "albumentations._brightness_contrast_adjust_non_uint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._brightness_contrast_adjust_uint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._brightness_contrast_adjust_non_uint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._brightness_contrast_adjust_uint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._brightness_contrast_adjust_non_uint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._brightness_contrast_adjust_non_uint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._brightness_contrast_adjust_non_uint"], ["", "def", "test_brightness_contrast", "(", ")", ":", "\n", "    ", "dtype", "=", "np", ".", "uint8", "\n", "min_value", "=", "np", ".", "iinfo", "(", "dtype", ")", ".", "min", "\n", "max_value", "=", "np", ".", "iinfo", "(", "dtype", ")", ".", "max", "\n", "\n", "image_uint8", "=", "np", ".", "random", ".", "randint", "(", "min_value", ",", "max_value", ",", "size", "=", "(", "5", ",", "5", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "assert", "np", ".", "array_equal", "(", "F", ".", "brightness_contrast_adjust", "(", "image_uint8", ")", ",", "F", ".", "_brightness_contrast_adjust_uint", "(", "image_uint8", ")", ")", "\n", "\n", "assert", "np", ".", "array_equal", "(", "\n", "F", ".", "_brightness_contrast_adjust_non_uint", "(", "image_uint8", ")", ",", "F", ".", "_brightness_contrast_adjust_uint", "(", "image_uint8", ")", "\n", ")", "\n", "\n", "dtype", "=", "np", ".", "uint16", "\n", "min_value", "=", "np", ".", "iinfo", "(", "dtype", ")", ".", "min", "\n", "max_value", "=", "np", ".", "iinfo", "(", "dtype", ")", ".", "max", "\n", "\n", "image_uint16", "=", "np", ".", "random", ".", "randint", "(", "min_value", ",", "max_value", ",", "size", "=", "(", "5", ",", "5", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "assert", "np", ".", "array_equal", "(", "\n", "F", ".", "brightness_contrast_adjust", "(", "image_uint16", ")", ",", "F", ".", "_brightness_contrast_adjust_non_uint", "(", "image_uint16", ")", "\n", ")", "\n", "\n", "F", ".", "brightness_contrast_adjust", "(", "image_uint16", ")", "\n", "\n", "dtype", "=", "np", ".", "uint32", "\n", "min_value", "=", "np", ".", "iinfo", "(", "dtype", ")", ".", "min", "\n", "max_value", "=", "np", ".", "iinfo", "(", "dtype", ")", ".", "max", "\n", "\n", "image_uint32", "=", "np", ".", "random", ".", "randint", "(", "min_value", ",", "max_value", ",", "size", "=", "(", "5", ",", "5", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "assert", "np", ".", "array_equal", "(", "\n", "F", ".", "brightness_contrast_adjust", "(", "image_uint32", ")", ",", "F", ".", "_brightness_contrast_adjust_non_uint", "(", "image_uint32", ")", "\n", ")", "\n", "\n", "image_float", "=", "np", ".", "random", ".", "random", "(", "(", "5", ",", "5", ",", "3", ")", ")", "\n", "\n", "assert", "np", ".", "array_equal", "(", "\n", "F", ".", "brightness_contrast_adjust", "(", "image_float", ")", ",", "F", ".", "_brightness_contrast_adjust_non_uint", "(", "image_float", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_swap_tiles_on_image_with_empty_tiles": [[761, 767], ["numpy.array", "albumentations.swap_tiles_on_image", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.swap_tiles_on_image"], ["", "def", "test_swap_tiles_on_image_with_empty_tiles", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "[", "4", ",", "4", ",", "4", ",", "4", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "result_img", "=", "F", ".", "swap_tiles_on_image", "(", "img", ",", "[", "]", ")", "\n", "\n", "assert", "np", ".", "array_equal", "(", "img", ",", "result_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_swap_tiles_on_image_with_non_empty_tiles": [[769, 779], ["numpy.array", "numpy.array", "numpy.array", "albumentations.swap_tiles_on_image", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.swap_tiles_on_image"], ["", "def", "test_swap_tiles_on_image_with_non_empty_tiles", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "[", "4", ",", "4", ",", "4", ",", "4", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "tiles", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", ",", "2", ",", "2", ",", "2", ",", "2", "]", ",", "[", "2", ",", "2", ",", "0", ",", "0", ",", "2", ",", "2", "]", "]", ")", "\n", "\n", "target", "=", "np", ".", "array", "(", "[", "[", "3", ",", "3", ",", "1", ",", "1", "]", ",", "[", "4", ",", "4", ",", "2", ",", "2", "]", ",", "[", "3", ",", "3", ",", "1", ",", "1", "]", ",", "[", "4", ",", "4", ",", "2", ",", "2", "]", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "result_img", "=", "F", ".", "swap_tiles_on_image", "(", "img", ",", "tiles", ")", "\n", "\n", "assert", "np", ".", "array_equal", "(", "result_img", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_solarize": [[781, 805], ["pytest.mark.parametrize", "list", "numpy.dtype", "np.arange().reshape.reshape", "min", "max", "numpy.arange().reshape", "np.arange().reshape.copy", "albumentations.solarize", "numpy.all", "albumentations.MAX_VALUES_BY_DTYPE.keys", "numpy.arange", "numpy.isclose", "numpy.min", "numpy.max", "int", "numpy.arange", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.solarize"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"dtype\"", ",", "list", "(", "F", ".", "MAX_VALUES_BY_DTYPE", ".", "keys", "(", ")", ")", ")", "\n", "def", "test_solarize", "(", "dtype", ")", ":", "\n", "    ", "max_value", "=", "F", ".", "MAX_VALUES_BY_DTYPE", "[", "dtype", "]", "\n", "\n", "if", "dtype", "==", "np", ".", "dtype", "(", "\"float32\"", ")", ":", "\n", "        ", "img", "=", "np", ".", "arange", "(", "2", "**", "10", ",", "dtype", "=", "np", ".", "float32", ")", "/", "(", "2", "**", "10", ")", "\n", "img", "=", "img", ".", "reshape", "(", "[", "2", "**", "5", ",", "2", "**", "5", "]", ")", "\n", "", "else", ":", "\n", "        ", "max_count", "=", "1024", "\n", "count", "=", "min", "(", "max_value", "+", "1", ",", "1024", ")", "\n", "step", "=", "max", "(", "1", ",", "(", "max_value", "+", "1", ")", "//", "max_count", ")", "\n", "shape", "=", "[", "int", "(", "np", ".", "sqrt", "(", "count", ")", ")", "]", "*", "2", "\n", "img", "=", "np", ".", "arange", "(", "0", ",", "max_value", "+", "1", ",", "step", ",", "dtype", "=", "dtype", ")", ".", "reshape", "(", "shape", ")", "\n", "\n", "", "for", "threshold", "in", "[", "0", ",", "max_value", "//", "3", ",", "max_value", "//", "3", "*", "2", ",", "max_value", ",", "max_value", "+", "1", "]", ":", "\n", "        ", "check_img", "=", "img", ".", "copy", "(", ")", "\n", "cond", "=", "check_img", ">=", "threshold", "\n", "check_img", "[", "cond", "]", "=", "max_value", "-", "check_img", "[", "cond", "]", "\n", "\n", "result_img", "=", "F", ".", "solarize", "(", "img", ",", "threshold", "=", "threshold", ")", "\n", "\n", "assert", "np", ".", "all", "(", "np", ".", "isclose", "(", "result_img", ",", "check_img", ")", ")", "\n", "assert", "np", ".", "min", "(", "result_img", ")", ">=", "0", "\n", "assert", "np", ".", "max", "(", "result_img", ")", "<=", "max_value", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_posterize_checks": [[807, 817], ["numpy.random.random", "numpy.random.randint", "pytest.raises", "albumentations.posterize", "str", "pytest.raises", "albumentations.posterize", "str"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.posterize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.posterize"], ["", "", "def", "test_posterize_checks", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "random", "(", "[", "256", ",", "256", ",", "3", "]", ")", "\n", "with", "pytest", ".", "raises", "(", "TypeError", ")", "as", "exc_info", ":", "\n", "        ", "F", ".", "posterize", "(", "img", ",", "4", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "\"Image must have uint8 channel type\"", "\n", "\n", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "256", ",", "256", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "with", "pytest", ".", "raises", "(", "TypeError", ")", "as", "exc_info", ":", "\n", "        ", "F", ".", "posterize", "(", "img", ",", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "\"If bits is iterable image must be RGB\"", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_equalize_checks": [[819, 842], ["numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.random", "pytest.raises", "albumentations.equalize", "str", "pytest.raises", "albumentations.equalize", "str", "pytest.raises", "albumentations.equalize", "str", "pytest.raises", "albumentations.equalize", "str"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize"], ["", "def", "test_equalize_checks", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "255", ",", "[", "256", ",", "256", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "F", ".", "equalize", "(", "img", ",", "mode", "=", "\"other\"", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "\"Unsupported equalization mode. Supports: ['cv', 'pil']. Got: other\"", "\n", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "1", ",", "[", "256", ",", "256", ",", "3", "]", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "F", ".", "equalize", "(", "img", ",", "mask", "=", "mask", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "\"Wrong mask shape. Image shape: {}. Mask shape: {}\"", ".", "format", "(", "img", ".", "shape", ",", "mask", ".", "shape", ")", "\n", "\n", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "255", ",", "[", "256", ",", "256", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "F", ".", "equalize", "(", "img", ",", "mask", "=", "mask", ",", "by_channels", "=", "False", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "\"When by_channels=False only 1-channel mask supports. \"", "\"Mask shape: {}\"", ".", "format", "(", "\n", "mask", ".", "shape", "\n", ")", "\n", "\n", "img", "=", "np", ".", "random", ".", "random", "(", "[", "256", ",", "256", ",", "3", "]", ")", "\n", "with", "pytest", ".", "raises", "(", "TypeError", ")", "as", "exc_info", ":", "\n", "        ", "F", ".", "equalize", "(", "img", ",", "mask", "=", "mask", ",", "by_channels", "=", "False", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "\"Image must have uint8 channel type\"", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_equalize_grayscale": [[844, 847], ["numpy.random.randint", "numpy.all", "cv2.equalizeHist", "albumentations.equalize"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize"], ["", "def", "test_equalize_grayscale", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "255", ",", "[", "256", ",", "256", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "assert", "np", ".", "all", "(", "cv2", ".", "equalizeHist", "(", "img", ")", "==", "F", ".", "equalize", "(", "img", ",", "mode", "=", "\"cv\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_equalize_rgb": [[849, 862], ["numpy.random.randint", "np.random.randint.copy", "range", "numpy.all", "cv2.cvtColor", "cv2.cvtColor.copy", "cv2.equalizeHist", "cv2.cvtColor", "numpy.all", "cv2.equalizeHist", "albumentations.equalize", "albumentations.equalize"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize"], ["", "def", "test_equalize_rgb", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "255", ",", "[", "256", ",", "256", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "_img", "=", "img", ".", "copy", "(", ")", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "        ", "_img", "[", "...", ",", "i", "]", "=", "cv2", ".", "equalizeHist", "(", "_img", "[", "...", ",", "i", "]", ")", "\n", "", "assert", "np", ".", "all", "(", "_img", "==", "F", ".", "equalize", "(", "img", ",", "mode", "=", "\"cv\"", ")", ")", "\n", "\n", "_img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_RGB2YCrCb", ")", "\n", "img_cv", "=", "_img", ".", "copy", "(", ")", "\n", "img_cv", "[", "...", ",", "0", "]", "=", "cv2", ".", "equalizeHist", "(", "_img", "[", "...", ",", "0", "]", ")", "\n", "img_cv", "=", "cv2", ".", "cvtColor", "(", "img_cv", ",", "cv2", ".", "COLOR_YCrCb2RGB", ")", "\n", "assert", "np", ".", "all", "(", "img_cv", "==", "F", ".", "equalize", "(", "img", ",", "mode", "=", "\"cv\"", ",", "by_channels", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_equalize_grayscale_mask": [[864, 871], ["numpy.random.randint", "numpy.zeros", "numpy.all", "cv2.equalizeHist", "albumentations.equalize"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize"], ["", "def", "test_equalize_grayscale_mask", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "255", ",", "[", "256", ",", "256", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "mask", "=", "np", ".", "zeros", "(", "[", "256", ",", "256", "]", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "mask", "[", ":", "10", ",", ":", "10", "]", "=", "True", "\n", "\n", "assert", "np", ".", "all", "(", "cv2", ".", "equalizeHist", "(", "img", "[", ":", "10", ",", ":", "10", "]", ")", "==", "F", ".", "equalize", "(", "img", ",", "mask", "=", "mask", ",", "mode", "=", "\"cv\"", ")", "[", ":", "10", ",", ":", "10", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_equalize_rgb_mask": [[873, 906], ["numpy.random.randint", "numpy.zeros", "range", "numpy.all", "cv2.cvtColor", "cv2.equalizeHist", "cv2.cvtColor", "numpy.all", "numpy.zeros", "cv2.equalizeHist", "cv2.equalizeHist", "cv2.equalizeHist", "albumentations.equalize", "numpy.all", "numpy.all", "numpy.all", "np.random.randint.copy", "cv2.equalizeHist", "cv2.cvtColor.copy", "np.random.randint.copy", "np.random.randint.copy", "np.random.randint.copy", "albumentations.equalize", "albumentations.equalize"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize"], ["", "def", "test_equalize_rgb_mask", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "255", ",", "[", "256", ",", "256", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "mask", "=", "np", ".", "zeros", "(", "[", "256", ",", "256", "]", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "mask", "[", ":", "10", ",", ":", "10", "]", "=", "True", "\n", "\n", "_img", "=", "img", ".", "copy", "(", ")", "[", ":", "10", ",", ":", "10", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "        ", "_img", "[", "...", ",", "i", "]", "=", "cv2", ".", "equalizeHist", "(", "_img", "[", "...", ",", "i", "]", ")", "\n", "", "assert", "np", ".", "all", "(", "_img", "==", "F", ".", "equalize", "(", "img", ",", "mask", ",", "mode", "=", "\"cv\"", ")", "[", ":", "10", ",", ":", "10", "]", ")", "\n", "\n", "_img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_RGB2YCrCb", ")", "\n", "img_cv", "=", "_img", ".", "copy", "(", ")", "[", ":", "10", ",", ":", "10", "]", "\n", "img_cv", "[", "...", ",", "0", "]", "=", "cv2", ".", "equalizeHist", "(", "img_cv", "[", "...", ",", "0", "]", ")", "\n", "img_cv", "=", "cv2", ".", "cvtColor", "(", "img_cv", ",", "cv2", ".", "COLOR_YCrCb2RGB", ")", "\n", "assert", "np", ".", "all", "(", "img_cv", "==", "F", ".", "equalize", "(", "img", ",", "mask", "=", "mask", ",", "mode", "=", "\"cv\"", ",", "by_channels", "=", "False", ")", "[", ":", "10", ",", ":", "10", "]", ")", "\n", "\n", "mask", "=", "np", ".", "zeros", "(", "[", "256", ",", "256", ",", "3", "]", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "mask", "[", ":", "10", ",", ":", "10", ",", "0", "]", "=", "True", "\n", "mask", "[", "10", ":", "20", ",", "10", ":", "20", ",", "1", "]", "=", "True", "\n", "mask", "[", "20", ":", "30", ",", "20", ":", "30", ",", "2", "]", "=", "True", "\n", "img_r", "=", "img", ".", "copy", "(", ")", "[", ":", "10", ",", ":", "10", ",", "0", "]", "\n", "img_g", "=", "img", ".", "copy", "(", ")", "[", "10", ":", "20", ",", "10", ":", "20", ",", "1", "]", "\n", "img_b", "=", "img", ".", "copy", "(", ")", "[", "20", ":", "30", ",", "20", ":", "30", ",", "2", "]", "\n", "\n", "img_r", "=", "cv2", ".", "equalizeHist", "(", "img_r", ")", "\n", "img_g", "=", "cv2", ".", "equalizeHist", "(", "img_g", ")", "\n", "img_b", "=", "cv2", ".", "equalizeHist", "(", "img_b", ")", "\n", "\n", "result_img", "=", "F", ".", "equalize", "(", "img", ",", "mask", "=", "mask", ",", "mode", "=", "\"cv\"", ")", "\n", "assert", "np", ".", "all", "(", "img_r", "==", "result_img", "[", ":", "10", ",", ":", "10", ",", "0", "]", ")", "\n", "assert", "np", ".", "all", "(", "img_g", "==", "result_img", "[", "10", ":", "20", ",", "10", ":", "20", ",", "1", "]", ")", "\n", "assert", "np", ".", "all", "(", "img_b", "==", "result_img", "[", "20", ":", "30", ",", "20", ":", "30", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_downscale_ones": [[908, 913], ["pytest.mark.parametrize", "numpy.ones", "albumentations.downscale", "numpy.all"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.downscale"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"dtype\"", ",", "[", "\"float32\"", ",", "\"uint8\"", "]", ")", "\n", "def", "test_downscale_ones", "(", "dtype", ")", ":", "\n", "    ", "img", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "downscaled", "=", "F", ".", "downscale", "(", "img", ",", "scale", "=", "0.5", ")", "\n", "assert", "np", ".", "all", "(", "downscaled", "==", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_downscale_random": [[915, 921], ["numpy.random.rand", "albumentations.downscale", "albumentations.downscale", "numpy.all"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.rand", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.downscale", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.downscale"], ["", "def", "test_downscale_random", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "random", ".", "rand", "(", "100", ",", "100", ",", "3", ")", "\n", "downscaled", "=", "F", ".", "downscale", "(", "img", ",", "scale", "=", "0.5", ")", "\n", "assert", "downscaled", ".", "shape", "==", "img", ".", "shape", "\n", "downscaled", "=", "F", ".", "downscale", "(", "img", ",", "scale", "=", "1", ")", "\n", "assert", "np", ".", "all", "(", "img", "==", "downscaled", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_maybe_process_in_chunks": [[923, 930], ["numpy.random.randint", "range", "albumentations.rotate"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate"], ["", "def", "test_maybe_process_in_chunks", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "(", "100", ",", "100", ",", "6", ")", ",", "np", ".", "uint8", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "image", ".", "shape", "[", "-", "1", "]", "+", "1", ")", ":", "\n", "        ", "before", "=", "image", "[", ":", ",", ":", ",", ":", "i", "]", "\n", "after", "=", "FGeometric", ".", "rotate", "(", "before", ",", "angle", "=", "1", ")", "\n", "assert", "before", ".", "shape", "==", "after", ".", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_multiply_uint8_optimized": [[932, 950], ["numpy.random.randint", "albumentations._multiply_uint8_optimized", "albumentations.clip", "numpy.all", "numpy.random.randint", "albumentations._multiply_uint8_optimized", "albumentations.clip", "numpy.all", "numpy.array", "numpy.random.randint", "albumentations._multiply_uint8_optimized", "albumentations.clip", "numpy.all"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._multiply_uint8_optimized", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._multiply_uint8_optimized", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional._multiply_uint8_optimized", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.clip"], ["", "", "def", "test_multiply_uint8_optimized", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "256", ",", "320", "]", ",", "np", ".", "uint8", ")", "\n", "m", "=", "1.5", "\n", "\n", "result", "=", "F", ".", "_multiply_uint8_optimized", "(", "image", ",", "[", "m", "]", ")", "\n", "tmp", "=", "F", ".", "clip", "(", "image", "*", "m", ",", "image", ".", "dtype", ",", "F", ".", "MAX_VALUES_BY_DTYPE", "[", "image", ".", "dtype", "]", ")", "\n", "assert", "np", ".", "all", "(", "tmp", "==", "result", ")", "\n", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "256", ",", "320", ",", "3", "]", ",", "np", ".", "uint8", ")", "\n", "result", "=", "F", ".", "_multiply_uint8_optimized", "(", "image", ",", "[", "m", "]", ")", "\n", "tmp", "=", "F", ".", "clip", "(", "image", "*", "m", ",", "image", ".", "dtype", ",", "F", ".", "MAX_VALUES_BY_DTYPE", "[", "image", ".", "dtype", "]", ")", "\n", "assert", "np", ".", "all", "(", "tmp", "==", "result", ")", "\n", "\n", "m", "=", "np", ".", "array", "(", "[", "1.5", ",", "0.75", ",", "1.1", "]", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "256", ",", "320", ",", "3", "]", ",", "np", ".", "uint8", ")", "\n", "result", "=", "F", ".", "_multiply_uint8_optimized", "(", "image", ",", "m", ")", "\n", "tmp", "=", "F", ".", "clip", "(", "image", "*", "m", ",", "image", ".", "dtype", ",", "F", ".", "MAX_VALUES_BY_DTYPE", "[", "image", ".", "dtype", "]", ")", "\n", "assert", "np", ".", "all", "(", "tmp", "==", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_shift_hsv_gray": [[952, 957], ["pytest.mark.parametrize", "albumentations.shift_hsv", "numpy.random.randint", "numpy.random.random().astype", "numpy.random.random"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_hsv", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"img\"", ",", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", "]", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "np", ".", "random", ".", "random", "(", "[", "100", ",", "100", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "]", "\n", ")", "\n", "def", "test_shift_hsv_gray", "(", "img", ")", ":", "\n", "    ", "F", ".", "shift_hsv", "(", "img", ",", "0.5", ",", "0.5", ",", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_functional.test_cv_dtype_from_np": [[959, 971], ["albumentations.get_opencv_dtype_from_numpy", "albumentations.get_opencv_dtype_from_numpy", "albumentations.get_opencv_dtype_from_numpy", "albumentations.get_opencv_dtype_from_numpy", "albumentations.get_opencv_dtype_from_numpy", "albumentations.get_opencv_dtype_from_numpy", "albumentations.get_opencv_dtype_from_numpy", "albumentations.get_opencv_dtype_from_numpy", "albumentations.get_opencv_dtype_from_numpy", "albumentations.get_opencv_dtype_from_numpy", "numpy.dtype", "numpy.dtype", "numpy.dtype", "numpy.dtype", "numpy.dtype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.get_opencv_dtype_from_numpy"], ["", "def", "test_cv_dtype_from_np", "(", ")", ":", "\n", "    ", "assert", "F", ".", "get_opencv_dtype_from_numpy", "(", "np", ".", "uint8", ")", "==", "cv2", ".", "CV_8U", "\n", "assert", "F", ".", "get_opencv_dtype_from_numpy", "(", "np", ".", "uint16", ")", "==", "cv2", ".", "CV_16U", "\n", "assert", "F", ".", "get_opencv_dtype_from_numpy", "(", "np", ".", "float32", ")", "==", "cv2", ".", "CV_32F", "\n", "assert", "F", ".", "get_opencv_dtype_from_numpy", "(", "np", ".", "float64", ")", "==", "cv2", ".", "CV_64F", "\n", "assert", "F", ".", "get_opencv_dtype_from_numpy", "(", "np", ".", "int32", ")", "==", "cv2", ".", "CV_32S", "\n", "\n", "assert", "F", ".", "get_opencv_dtype_from_numpy", "(", "np", ".", "dtype", "(", "\"uint8\"", ")", ")", "==", "cv2", ".", "CV_8U", "\n", "assert", "F", ".", "get_opencv_dtype_from_numpy", "(", "np", ".", "dtype", "(", "\"uint16\"", ")", ")", "==", "cv2", ".", "CV_16U", "\n", "assert", "F", ".", "get_opencv_dtype_from_numpy", "(", "np", ".", "dtype", "(", "\"float32\"", ")", ")", "==", "cv2", ".", "CV_32F", "\n", "assert", "F", ".", "get_opencv_dtype_from_numpy", "(", "np", ".", "dtype", "(", "\"float64\"", ")", ")", "==", "cv2", ".", "CV_64F", "\n", "assert", "F", ".", "get_opencv_dtype_from_numpy", "(", "np", ".", "dtype", "(", "\"int32\"", ")", ")", "==", "cv2", ".", "CV_32S", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_one_or_other": [[45, 52], ["unittest.mock.MagicMock", "unittest.mock.MagicMock", "albumentations.core.composition.OneOrOther", "numpy.ones", "albumentations.core.composition.OneOrOther."], "function", ["None"], ["def", "test_one_or_other", "(", ")", ":", "\n", "    ", "first", "=", "MagicMock", "(", ")", "\n", "second", "=", "MagicMock", "(", ")", "\n", "augmentation", "=", "OneOrOther", "(", "first", ",", "second", ",", "p", "=", "1", ")", "\n", "image", "=", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", "\n", "augmentation", "(", "image", "=", "image", ")", "\n", "assert", "first", ".", "called", "!=", "second", ".", "called", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_compose": [[54, 62], ["unittest.mock.MagicMock", "unittest.mock.MagicMock", "albumentations.core.composition.Compose", "numpy.ones", "albumentations.core.composition.Compose."], "function", ["None"], ["", "def", "test_compose", "(", ")", ":", "\n", "    ", "first", "=", "MagicMock", "(", ")", "\n", "second", "=", "MagicMock", "(", ")", "\n", "augmentation", "=", "Compose", "(", "[", "first", ",", "second", "]", ",", "p", "=", "1", ")", "\n", "image", "=", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", "\n", "augmentation", "(", "image", "=", "image", ")", "\n", "assert", "first", ".", "called", "\n", "assert", "second", ".", "called", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.oneof_always_apply_crash": [[64, 69], ["albumentations.core.composition.Compose", "numpy.ones", "albumentations.core.composition.Compose.", "albumentations.HorizontalFlip", "albumentations.Rotate", "albumentations.core.composition.OneOf", "albumentations.Blur", "albumentations.MedianBlur"], "function", ["None"], ["", "def", "oneof_always_apply_crash", "(", ")", ":", "\n", "    ", "aug", "=", "Compose", "(", "[", "HorizontalFlip", "(", ")", ",", "Rotate", "(", ")", ",", "OneOf", "(", "[", "Blur", "(", ")", ",", "MedianBlur", "(", ")", "]", ",", "p", "=", "1", ")", "]", ",", "p", "=", "1", ")", "\n", "image", "=", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ")", "\n", "assert", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_always_apply": [[71, 79], ["unittest.mock.MagicMock", "unittest.mock.MagicMock", "albumentations.core.composition.Compose", "numpy.ones", "albumentations.core.composition.Compose."], "function", ["None"], ["", "def", "test_always_apply", "(", ")", ":", "\n", "    ", "first", "=", "MagicMock", "(", "always_apply", "=", "True", ")", "\n", "second", "=", "MagicMock", "(", "always_apply", "=", "False", ")", "\n", "augmentation", "=", "Compose", "(", "[", "first", ",", "second", "]", ",", "p", "=", "0", ")", "\n", "image", "=", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", "\n", "augmentation", "(", "image", "=", "image", ")", "\n", "assert", "first", ".", "called", "\n", "assert", "not", "second", ".", "called", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_one_of": [[81, 87], ["albumentations.core.composition.OneOf", "numpy.ones", "albumentations.core.composition.OneOf.", "unittest.mock.Mock", "len", "range"], "function", ["None"], ["", "def", "test_one_of", "(", ")", ":", "\n", "    ", "transforms", "=", "[", "Mock", "(", "p", "=", "1", ")", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "augmentation", "=", "OneOf", "(", "transforms", ",", "p", "=", "1", ")", "\n", "image", "=", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", "\n", "augmentation", "(", "image", "=", "image", ")", "\n", "assert", "len", "(", "[", "transform", "for", "transform", "in", "transforms", "if", "transform", ".", "called", "]", ")", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_n_of": [[89, 100], ["pytest.mark.parametrize", "pytest.mark.parametrize", "albumentations.core.composition.SomeOf", "print", "numpy.ones", "albumentations.core.composition.SomeOf.", "unittest.mock.Mock", "sum", "range", "len"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"N\"", ",", "[", "1", ",", "2", ",", "5", ",", "10", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"replace\"", ",", "[", "True", ",", "False", "]", ")", "\n", "def", "test_n_of", "(", "N", ",", "replace", ")", ":", "\n", "    ", "transforms", "=", "[", "Mock", "(", "p", "=", "1", ",", "side_effect", "=", "lambda", "**", "kw", ":", "{", "\"image\"", ":", "kw", "[", "\"image\"", "]", "}", ")", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "augmentation", "=", "SomeOf", "(", "transforms", ",", "N", ",", "p", "=", "1", ",", "replace", "=", "replace", ")", "\n", "print", "(", "augmentation", ".", "n", ")", "\n", "image", "=", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", "\n", "augmentation", "(", "image", "=", "image", ")", "\n", "if", "not", "replace", ":", "\n", "        ", "assert", "len", "(", "[", "transform", "for", "transform", "in", "transforms", "if", "transform", ".", "called", "]", ")", "==", "N", "\n", "", "assert", "sum", "(", "[", "transform", ".", "call_count", "for", "transform", "in", "transforms", "]", ")", "==", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_sequential": [[102, 108], ["albumentations.core.composition.Sequential", "numpy.ones", "albumentations.core.composition.Sequential.", "unittest.mock.Mock", "len", "len", "range"], "function", ["None"], ["", "def", "test_sequential", "(", ")", ":", "\n", "    ", "transforms", "=", "[", "Mock", "(", "side_effect", "=", "lambda", "**", "kw", ":", "kw", ")", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "augmentation", "=", "Sequential", "(", "transforms", ",", "p", "=", "1", ")", "\n", "image", "=", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", "\n", "augmentation", "(", "image", "=", "image", ")", "\n", "assert", "len", "(", "[", "transform", "for", "transform", "in", "transforms", "if", "transform", ".", "called", "]", ")", "==", "len", "(", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_to_tuple": [[110, 118], ["albumentations.core.transforms_interface.to_tuple", "albumentations.core.transforms_interface.to_tuple", "albumentations.core.transforms_interface.to_tuple", "albumentations.core.transforms_interface.to_tuple", "albumentations.core.transforms_interface.to_tuple", "albumentations.core.transforms_interface.to_tuple", "albumentations.core.transforms_interface.to_tuple"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple", "home.repos.pwc.inspect_result.albu_albumentations.core.transforms_interface.to_tuple"], ["", "def", "test_to_tuple", "(", ")", ":", "\n", "    ", "assert", "to_tuple", "(", "10", ")", "==", "(", "-", "10", ",", "10", ")", "\n", "assert", "to_tuple", "(", "0.5", ")", "==", "(", "-", "0.5", ",", "0.5", ")", "\n", "assert", "to_tuple", "(", "(", "-", "20", ",", "20", ")", ")", "==", "(", "-", "20", ",", "20", ")", "\n", "assert", "to_tuple", "(", "[", "-", "20", ",", "20", "]", ")", "==", "(", "-", "20", ",", "20", ")", "\n", "assert", "to_tuple", "(", "100", ",", "low", "=", "30", ")", "==", "(", "30", ",", "100", ")", "\n", "assert", "to_tuple", "(", "10", ",", "bias", "=", "1", ")", "==", "(", "-", "9", ",", "11", ")", "\n", "assert", "to_tuple", "(", "100", ",", "bias", "=", "2", ")", "==", "(", "-", "98", ",", "102", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_image_only_transform": [[120, 128], ["unittest.mock.patch.object", "unittest.mock.patch.object", "albumentations.core.transforms_interface.ImageOnlyTransform", "albumentations.core.transforms_interface.ImageOnlyTransform.", "mocked_apply.assert_called_once_with", "numpy.array_equal"], "function", ["None"], ["", "def", "test_image_only_transform", "(", "image", ",", "mask", ")", ":", "\n", "    ", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "with", "mock", ".", "patch", ".", "object", "(", "ImageOnlyTransform", ",", "\"apply\"", ")", "as", "mocked_apply", ":", "\n", "        ", "with", "mock", ".", "patch", ".", "object", "(", "ImageOnlyTransform", ",", "\"get_params\"", ",", "return_value", "=", "{", "\"interpolation\"", ":", "cv2", ".", "INTER_LINEAR", "}", ")", ":", "\n", "            ", "aug", "=", "ImageOnlyTransform", "(", "p", "=", "1", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "mocked_apply", ".", "assert_called_once_with", "(", "image", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "cols", "=", "width", ",", "rows", "=", "height", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"mask\"", "]", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_dual_transform": [[130, 138], ["unittest.mock.call", "unittest.mock.call", "unittest.mock.patch.object", "unittest.mock.patch.object", "albumentations.core.transforms_interface.DualTransform", "albumentations.core.transforms_interface.DualTransform.", "mocked_apply.assert_has_calls"], "function", ["None"], ["", "", "", "def", "test_dual_transform", "(", "image", ",", "mask", ")", ":", "\n", "    ", "image_call", "=", "call", "(", "image", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ")", "\n", "mask_call", "=", "call", "(", "mask", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ",", "cols", "=", "mask", ".", "shape", "[", "1", "]", ",", "rows", "=", "mask", ".", "shape", "[", "0", "]", ")", "\n", "with", "mock", ".", "patch", ".", "object", "(", "DualTransform", ",", "\"apply\"", ")", "as", "mocked_apply", ":", "\n", "        ", "with", "mock", ".", "patch", ".", "object", "(", "DualTransform", ",", "\"get_params\"", ",", "return_value", "=", "{", "\"interpolation\"", ":", "cv2", ".", "INTER_LINEAR", "}", ")", ":", "\n", "            ", "aug", "=", "DualTransform", "(", "p", "=", "1", ")", "\n", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "mocked_apply", ".", "assert_has_calls", "(", "[", "image_call", ",", "mask_call", "]", ",", "any_order", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_additional_targets": [[140, 149], ["unittest.mock.call", "unittest.mock.call", "unittest.mock.patch.object", "unittest.mock.patch.object", "albumentations.core.transforms_interface.DualTransform", "albumentations.core.transforms_interface.DualTransform.add_targets", "albumentations.core.transforms_interface.DualTransform.", "mocked_apply.assert_has_calls"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.BaseCompose.add_targets"], ["", "", "", "def", "test_additional_targets", "(", "image", ",", "mask", ")", ":", "\n", "    ", "image_call", "=", "call", "(", "image", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ")", "\n", "image2_call", "=", "call", "(", "mask", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "cols", "=", "mask", ".", "shape", "[", "1", "]", ",", "rows", "=", "mask", ".", "shape", "[", "0", "]", ")", "\n", "with", "mock", ".", "patch", ".", "object", "(", "DualTransform", ",", "\"apply\"", ")", "as", "mocked_apply", ":", "\n", "        ", "with", "mock", ".", "patch", ".", "object", "(", "DualTransform", ",", "\"get_params\"", ",", "return_value", "=", "{", "\"interpolation\"", ":", "cv2", ".", "INTER_LINEAR", "}", ")", ":", "\n", "            ", "aug", "=", "DualTransform", "(", "p", "=", "1", ")", "\n", "aug", ".", "add_targets", "(", "{", "\"image2\"", ":", "\"image\"", "}", ")", "\n", "aug", "(", "image", "=", "image", ",", "image2", "=", "mask", ")", "\n", "mocked_apply", ".", "assert_has_calls", "(", "[", "image_call", ",", "image2_call", "]", ",", "any_order", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_check_bboxes_with_correct_values": [[151, 156], ["albumentations.augmentations.bbox_utils.check_bboxes", "pytest.fail"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.check_bboxes"], ["", "", "", "def", "test_check_bboxes_with_correct_values", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "check_bboxes", "(", "[", "[", "0.1", ",", "0.5", ",", "0.8", ",", "1.0", "]", ",", "[", "0.2", ",", "0.5", ",", "0.5", ",", "0.6", ",", "99", "]", "]", ")", "\n", "", "except", "Exception", "as", "e", ":", "# skipcq: PYL-W0703", "\n", "        ", "pytest", ".", "fail", "(", "\"Unexpected Exception {!r}\"", ".", "format", "(", "e", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_check_bboxes_with_values_less_than_zero": [[158, 163], ["pytest.raises", "albumentations.augmentations.bbox_utils.check_bboxes", "str"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.check_bboxes"], ["", "", "def", "test_check_bboxes_with_values_less_than_zero", "(", ")", ":", "\n", "    ", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "check_bboxes", "(", "[", "[", "0.2", ",", "0.5", ",", "0.5", ",", "0.6", ",", "99", "]", ",", "[", "-", "0.1", ",", "0.5", ",", "0.8", ",", "1.0", "]", "]", ")", "\n", "", "message", "=", "\"Expected x_min for bbox [-0.1, 0.5, 0.8, 1.0] to be in the range [0.0, 1.0], got -0.1.\"", "\n", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "message", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_check_bboxes_with_values_greater_than_one": [[165, 170], ["pytest.raises", "albumentations.augmentations.bbox_utils.check_bboxes", "str"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.check_bboxes"], ["", "def", "test_check_bboxes_with_values_greater_than_one", "(", ")", ":", "\n", "    ", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "check_bboxes", "(", "[", "[", "0.2", ",", "0.5", ",", "1.5", ",", "0.6", ",", "99", "]", ",", "[", "0.1", ",", "0.5", ",", "0.8", ",", "1.0", "]", "]", ")", "\n", "", "message", "=", "\"Expected x_max for bbox [0.2, 0.5, 1.5, 0.6, 99] to be in the range [0.0, 1.0], got 1.5.\"", "\n", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "message", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_check_bboxes_with_end_greater_that_start": [[172, 177], ["pytest.raises", "albumentations.augmentations.bbox_utils.check_bboxes", "str"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.check_bboxes"], ["", "def", "test_check_bboxes_with_end_greater_that_start", "(", ")", ":", "\n", "    ", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "check_bboxes", "(", "[", "[", "0.8", ",", "0.5", ",", "0.7", ",", "0.6", ",", "99", "]", ",", "[", "0.1", ",", "0.5", ",", "0.8", ",", "1.0", "]", "]", ")", "\n", "", "message", "=", "\"x_max is less than or equal to x_min for bbox [0.8, 0.5, 0.7, 0.6, 99].\"", "\n", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "message", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_per_channel_mono": [[179, 185], ["albumentations.core.composition.PerChannel", "numpy.ones", "albumentations.core.composition.PerChannel.", "albumentations.Blur", "albumentations.Rotate"], "function", ["None"], ["", "def", "test_per_channel_mono", "(", ")", ":", "\n", "    ", "transforms", "=", "[", "Blur", "(", ")", ",", "Rotate", "(", ")", "]", "\n", "augmentation", "=", "PerChannel", "(", "transforms", ",", "p", "=", "1", ")", "\n", "image", "=", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", "\n", "data", "=", "augmentation", "(", "image", "=", "image", ")", "\n", "assert", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_per_channel_multi": [[187, 193], ["albumentations.core.composition.PerChannel", "numpy.ones", "albumentations.core.composition.PerChannel.", "albumentations.Blur", "albumentations.Rotate"], "function", ["None"], ["", "def", "test_per_channel_multi", "(", ")", ":", "\n", "    ", "transforms", "=", "[", "Blur", "(", ")", ",", "Rotate", "(", ")", "]", "\n", "augmentation", "=", "PerChannel", "(", "transforms", ",", "p", "=", "1", ")", "\n", "image", "=", "np", ".", "ones", "(", "(", "8", ",", "8", ",", "5", ")", ")", "\n", "data", "=", "augmentation", "(", "image", "=", "image", ")", "\n", "assert", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_deterministic_oneof": [[195, 204], ["albumentations.core.composition.ReplayCompose", "range", "numpy.copy", "albumentations.core.composition.ReplayCompose.", "albumentations.core.composition.ReplayCompose.replay", "numpy.array_equal", "albumentations.core.composition.OneOf", "albumentations.HorizontalFlip", "albumentations.Blur", "numpy.random.random"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.replay", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "def", "test_deterministic_oneof", "(", ")", ":", "\n", "    ", "aug", "=", "ReplayCompose", "(", "[", "OneOf", "(", "[", "HorizontalFlip", "(", ")", ",", "Blur", "(", ")", "]", ")", "]", ",", "p", "=", "1", ")", "\n", "for", "_", "in", "range", "(", "10", ")", ":", "\n", "        ", "image", "=", "(", "np", ".", "random", ".", "random", "(", "(", "8", ",", "8", ")", ")", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "image2", "=", "np", ".", "copy", "(", "image", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ")", "\n", "assert", "\"replay\"", "in", "data", "\n", "data2", "=", "ReplayCompose", ".", "replay", "(", "data", "[", "\"replay\"", "]", ",", "image", "=", "image2", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "data2", "[", "\"image\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_deterministic_one_or_other": [[206, 215], ["albumentations.core.composition.ReplayCompose", "range", "numpy.copy", "albumentations.core.composition.ReplayCompose.", "albumentations.core.composition.ReplayCompose.replay", "numpy.array_equal", "albumentations.core.composition.OneOrOther", "albumentations.HorizontalFlip", "albumentations.Blur", "numpy.random.random"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.replay", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "", "def", "test_deterministic_one_or_other", "(", ")", ":", "\n", "    ", "aug", "=", "ReplayCompose", "(", "[", "OneOrOther", "(", "HorizontalFlip", "(", ")", ",", "Blur", "(", ")", ")", "]", ",", "p", "=", "1", ")", "\n", "for", "_", "in", "range", "(", "10", ")", ":", "\n", "        ", "image", "=", "(", "np", ".", "random", ".", "random", "(", "(", "8", ",", "8", ")", ")", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "image2", "=", "np", ".", "copy", "(", "image", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ")", "\n", "assert", "\"replay\"", "in", "data", "\n", "data2", "=", "ReplayCompose", ".", "replay", "(", "data", "[", "\"replay\"", "]", ",", "image", "=", "image2", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "data2", "[", "\"image\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_deterministic_sequential": [[217, 226], ["albumentations.core.composition.ReplayCompose", "range", "numpy.copy", "albumentations.core.composition.ReplayCompose.", "albumentations.core.composition.ReplayCompose.replay", "numpy.array_equal", "albumentations.core.composition.Sequential", "albumentations.HorizontalFlip", "albumentations.Blur", "numpy.random.random"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.replay", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "", "def", "test_deterministic_sequential", "(", ")", ":", "\n", "    ", "aug", "=", "ReplayCompose", "(", "[", "Sequential", "(", "[", "HorizontalFlip", "(", ")", ",", "Blur", "(", ")", "]", ")", "]", ",", "p", "=", "1", ")", "\n", "for", "_", "in", "range", "(", "10", ")", ":", "\n", "        ", "image", "=", "(", "np", ".", "random", ".", "random", "(", "(", "8", ",", "8", ")", ")", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "image2", "=", "np", ".", "copy", "(", "image", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ")", "\n", "assert", "\"replay\"", "in", "data", "\n", "data2", "=", "ReplayCompose", ".", "replay", "(", "data", "[", "\"replay\"", "]", ",", "image", "=", "image2", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "data2", "[", "\"image\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_named_args": [[228, 236], ["numpy.empty", "albumentations.HorizontalFlip", "pytest.raises", "albumentations.HorizontalFlip.", "str"], "function", ["None"], ["", "", "def", "test_named_args", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "empty", "(", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "aug", "=", "HorizontalFlip", "(", "p", "=", "1", ")", "\n", "\n", "with", "pytest", ".", "raises", "(", "KeyError", ")", "as", "exc_info", ":", "\n", "        ", "aug", "(", "image", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "(", "\n", "\"'You have to pass data to augmentations as named arguments, for example: aug(image=image)'\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_targets_type_check": [[239, 262], ["pytest.mark.parametrize", "albumentations.core.composition.Compose", "pytest.raises", "albumentations.core.composition.Compose.", "str", "numpy.empty", "numpy.empty", "numpy.empty"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"targets\"", ",", "\"additional_targets\"", ",", "\"err_message\"", "]", ",", "\n", "[", "\n", "[", "{", "\"image\"", ":", "None", "}", ",", "None", ",", "\"image must be numpy array type\"", "]", ",", "\n", "[", "{", "\"image\"", ":", "np", ".", "empty", "(", "[", "100", ",", "100", ",", "3", "]", ",", "np", ".", "uint8", ")", ",", "\"mask\"", ":", "None", "}", ",", "None", ",", "\"mask must be numpy array type\"", "]", ",", "\n", "[", "\n", "{", "\"image\"", ":", "np", ".", "empty", "(", "[", "100", ",", "100", ",", "3", "]", ",", "np", ".", "uint8", ")", ",", "\"image1\"", ":", "None", "}", ",", "\n", "{", "\"image1\"", ":", "\"image\"", "}", ",", "\n", "\"image1 must be numpy array type\"", ",", "\n", "]", ",", "\n", "[", "\n", "{", "\"image\"", ":", "np", ".", "empty", "(", "[", "100", ",", "100", ",", "3", "]", ",", "np", ".", "uint8", ")", ",", "\"mask1\"", ":", "None", "}", ",", "\n", "{", "\"mask1\"", ":", "\"mask\"", "}", ",", "\n", "\"mask1 must be numpy array type\"", ",", "\n", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_targets_type_check", "(", "targets", ",", "additional_targets", ",", "err_message", ")", ":", "\n", "    ", "aug", "=", "Compose", "(", "[", "]", ",", "additional_targets", "=", "additional_targets", ")", "\n", "\n", "with", "pytest", ".", "raises", "(", "TypeError", ")", "as", "exc_info", ":", "\n", "        ", "aug", "(", "**", "targets", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "err_message", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_check_each_transform": [[264, 347], ["pytest.mark.parametrize", "numpy.empty", "albumentations.core.composition.Compose", "albumentations.core.composition.Compose.", "expected.items", "numpy.all", "albumentations.Crop", "albumentations.PadIfNeeded", "albumentations.core.composition.KeypointParams", "albumentations.core.composition.KeypointParams", "albumentations.core.composition.BboxParams", "albumentations.core.composition.BboxParams", "albumentations.core.composition.BboxParams", "albumentations.core.composition.KeypointParams", "albumentations.core.composition.BboxParams", "albumentations.core.composition.KeypointParams", "albumentations.core.composition.BboxParams", "albumentations.core.composition.KeypointParams", "albumentations.core.composition.BboxParams", "albumentations.core.composition.KeypointParams", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"targets\"", ",", "\"bbox_params\"", ",", "\"keypoint_params\"", ",", "\"expected\"", "]", ",", "\n", "[", "\n", "[", "\n", "{", "\"keypoints\"", ":", "[", "[", "10", ",", "10", "]", ",", "[", "70", ",", "70", "]", ",", "[", "10", ",", "70", "]", ",", "[", "70", ",", "10", "]", "]", "}", ",", "\n", "None", ",", "\n", "KeypointParams", "(", "\"xy\"", ",", "check_each_transform", "=", "False", ")", ",", "\n", "{", "\"keypoints\"", ":", "np", ".", "array", "(", "[", "[", "10", ",", "10", "]", ",", "[", "70", ",", "70", "]", ",", "[", "10", ",", "70", "]", ",", "[", "70", ",", "10", "]", "]", ")", "+", "25", "}", ",", "\n", "]", ",", "\n", "[", "\n", "{", "\"keypoints\"", ":", "[", "[", "10", ",", "10", "]", ",", "[", "70", ",", "70", "]", ",", "[", "10", ",", "70", "]", ",", "[", "70", ",", "10", "]", "]", "}", ",", "\n", "None", ",", "\n", "KeypointParams", "(", "\"xy\"", ",", "check_each_transform", "=", "True", ")", ",", "\n", "{", "\"keypoints\"", ":", "np", ".", "array", "(", "[", "[", "10", ",", "10", "]", "]", ")", "+", "25", "}", ",", "\n", "]", ",", "\n", "[", "\n", "{", "\"bboxes\"", ":", "[", "[", "0", ",", "0", ",", "10", ",", "10", ",", "0", "]", ",", "[", "5", ",", "5", ",", "70", ",", "70", ",", "0", "]", ",", "[", "60", ",", "60", ",", "70", ",", "70", ",", "0", "]", "]", "}", ",", "\n", "BboxParams", "(", "\"pascal_voc\"", ",", "check_each_transform", "=", "False", ")", ",", "\n", "None", ",", "\n", "{", "\"bboxes\"", ":", "[", "[", "25", ",", "25", ",", "35", ",", "35", ",", "0", "]", ",", "[", "30", ",", "30", ",", "95", ",", "95", ",", "0", "]", ",", "[", "85", ",", "85", ",", "95", ",", "95", ",", "0", "]", "]", "}", ",", "\n", "]", ",", "\n", "[", "\n", "{", "\"bboxes\"", ":", "[", "[", "0", ",", "0", ",", "10", ",", "10", ",", "0", "]", ",", "[", "5", ",", "5", ",", "70", ",", "70", ",", "0", "]", ",", "[", "60", ",", "60", ",", "70", ",", "70", ",", "0", "]", "]", "}", ",", "\n", "BboxParams", "(", "\"pascal_voc\"", ",", "check_each_transform", "=", "True", ")", ",", "\n", "None", ",", "\n", "{", "\"bboxes\"", ":", "[", "[", "25", ",", "25", ",", "35", ",", "35", ",", "0", "]", ",", "[", "30", ",", "30", ",", "75", ",", "75", ",", "0", "]", "]", "}", ",", "\n", "]", ",", "\n", "[", "\n", "{", "\n", "\"bboxes\"", ":", "[", "[", "0", ",", "0", ",", "10", ",", "10", ",", "0", "]", ",", "[", "5", ",", "5", ",", "70", ",", "70", ",", "0", "]", ",", "[", "60", ",", "60", ",", "70", ",", "70", ",", "0", "]", "]", ",", "\n", "\"keypoints\"", ":", "[", "[", "10", ",", "10", "]", ",", "[", "70", ",", "70", "]", ",", "[", "10", ",", "70", "]", ",", "[", "70", ",", "10", "]", "]", ",", "\n", "}", ",", "\n", "BboxParams", "(", "\"pascal_voc\"", ",", "check_each_transform", "=", "True", ")", ",", "\n", "KeypointParams", "(", "\"xy\"", ",", "check_each_transform", "=", "True", ")", ",", "\n", "{", "\"bboxes\"", ":", "[", "[", "25", ",", "25", ",", "35", ",", "35", ",", "0", "]", ",", "[", "30", ",", "30", ",", "75", ",", "75", ",", "0", "]", "]", ",", "\"keypoints\"", ":", "np", ".", "array", "(", "[", "[", "10", ",", "10", "]", "]", ")", "+", "25", "}", ",", "\n", "]", ",", "\n", "[", "\n", "{", "\n", "\"bboxes\"", ":", "[", "[", "0", ",", "0", ",", "10", ",", "10", ",", "0", "]", ",", "[", "5", ",", "5", ",", "70", ",", "70", ",", "0", "]", ",", "[", "60", ",", "60", ",", "70", ",", "70", ",", "0", "]", "]", ",", "\n", "\"keypoints\"", ":", "[", "[", "10", ",", "10", "]", ",", "[", "70", ",", "70", "]", ",", "[", "10", ",", "70", "]", ",", "[", "70", ",", "10", "]", "]", ",", "\n", "}", ",", "\n", "BboxParams", "(", "\"pascal_voc\"", ",", "check_each_transform", "=", "False", ")", ",", "\n", "KeypointParams", "(", "\"xy\"", ",", "check_each_transform", "=", "True", ")", ",", "\n", "{", "\n", "\"bboxes\"", ":", "[", "[", "25", ",", "25", ",", "35", ",", "35", ",", "0", "]", ",", "[", "30", ",", "30", ",", "95", ",", "95", ",", "0", "]", ",", "[", "85", ",", "85", ",", "95", ",", "95", ",", "0", "]", "]", ",", "\n", "\"keypoints\"", ":", "np", ".", "array", "(", "[", "[", "10", ",", "10", "]", "]", ")", "+", "25", ",", "\n", "}", ",", "\n", "]", ",", "\n", "[", "\n", "{", "\n", "\"bboxes\"", ":", "[", "[", "0", ",", "0", ",", "10", ",", "10", ",", "0", "]", ",", "[", "5", ",", "5", ",", "70", ",", "70", ",", "0", "]", ",", "[", "60", ",", "60", ",", "70", ",", "70", ",", "0", "]", "]", ",", "\n", "\"keypoints\"", ":", "[", "[", "10", ",", "10", "]", ",", "[", "70", ",", "70", "]", ",", "[", "10", ",", "70", "]", ",", "[", "70", ",", "10", "]", "]", ",", "\n", "}", ",", "\n", "BboxParams", "(", "\"pascal_voc\"", ",", "check_each_transform", "=", "True", ")", ",", "\n", "KeypointParams", "(", "\"xy\"", ",", "check_each_transform", "=", "False", ")", ",", "\n", "{", "\n", "\"bboxes\"", ":", "[", "[", "25", ",", "25", ",", "35", ",", "35", ",", "0", "]", ",", "[", "30", ",", "30", ",", "75", ",", "75", ",", "0", "]", "]", ",", "\n", "\"keypoints\"", ":", "np", ".", "array", "(", "[", "[", "10", ",", "10", "]", ",", "[", "70", ",", "70", "]", ",", "[", "10", ",", "70", "]", ",", "[", "70", ",", "10", "]", "]", ")", "+", "25", ",", "\n", "}", ",", "\n", "]", ",", "\n", "[", "\n", "{", "\n", "\"bboxes\"", ":", "[", "[", "0", ",", "0", ",", "10", ",", "10", ",", "0", "]", ",", "[", "5", ",", "5", ",", "70", ",", "70", ",", "0", "]", ",", "[", "60", ",", "60", ",", "70", ",", "70", ",", "0", "]", "]", ",", "\n", "\"keypoints\"", ":", "[", "[", "10", ",", "10", "]", ",", "[", "70", ",", "70", "]", ",", "[", "10", ",", "70", "]", ",", "[", "70", ",", "10", "]", "]", ",", "\n", "}", ",", "\n", "BboxParams", "(", "\"pascal_voc\"", ",", "check_each_transform", "=", "False", ")", ",", "\n", "KeypointParams", "(", "\"xy\"", ",", "check_each_transform", "=", "False", ")", ",", "\n", "{", "\n", "\"bboxes\"", ":", "[", "[", "25", ",", "25", ",", "35", ",", "35", ",", "0", "]", ",", "[", "30", ",", "30", ",", "95", ",", "95", ",", "0", "]", ",", "[", "85", ",", "85", ",", "95", ",", "95", ",", "0", "]", "]", ",", "\n", "\"keypoints\"", ":", "np", ".", "array", "(", "[", "[", "10", ",", "10", "]", ",", "[", "70", ",", "70", "]", ",", "[", "10", ",", "70", "]", ",", "[", "70", ",", "10", "]", "]", ")", "+", "25", ",", "\n", "}", ",", "\n", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_check_each_transform", "(", "targets", ",", "bbox_params", ",", "keypoint_params", ",", "expected", ")", ":", "\n", "    ", "image", "=", "np", ".", "empty", "(", "[", "100", ",", "100", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "augs", "=", "Compose", "(", "\n", "[", "Crop", "(", "0", ",", "0", ",", "50", ",", "50", ")", ",", "PadIfNeeded", "(", "100", ",", "100", ")", "]", ",", "bbox_params", "=", "bbox_params", ",", "keypoint_params", "=", "keypoint_params", "\n", ")", "\n", "res", "=", "augs", "(", "image", "=", "image", ",", "**", "targets", ")", "\n", "\n", "for", "key", ",", "item", "in", "expected", ".", "items", "(", ")", ":", "\n", "        ", "assert", "np", ".", "all", "(", "np", ".", "array", "(", "item", ")", "==", "np", ".", "array", "(", "res", "[", "key", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_bbox_params_is_not_set": [[349, 354], ["albumentations.core.composition.Compose", "pytest.raises", "albumentations.core.composition.Compose.", "str"], "function", ["None"], ["", "", "def", "test_bbox_params_is_not_set", "(", "image", ",", "bboxes", ")", ":", "\n", "    ", "t", "=", "Compose", "(", "[", "]", ")", "\n", "with", "pytest", ".", "raises", "(", "ValueError", ")", "as", "exc_info", ":", "\n", "        ", "t", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ")", "\n", "", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "\"bbox_params must be specified for bbox transformations\"", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_single_transform_compose": [[356, 375], ["pytest.mark.parametrize", "pytest.mark.parametrize", "isinstance", "utils.get_filtered_transforms", "issubclass", "cls", "cls", "pytest.warns", "compose_cls", "utils.get_filtered_transforms"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_filtered_transforms", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_filtered_transforms"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"compose_transform\"", ",", "get_filtered_transforms", "(", "(", "BaseCompose", ",", ")", ",", "custom_arguments", "=", "{", "SomeOf", ":", "{", "\"n\"", ":", "1", "}", "}", ")", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"inner_transform\"", ",", "\n", "[", "(", "Normalize", ",", "{", "}", ")", ",", "(", "Resize", ",", "{", "\"height\"", ":", "100", ",", "\"width\"", ":", "100", "}", ")", "]", "\n", "+", "get_filtered_transforms", "(", "(", "BaseCompose", ",", ")", ",", "custom_arguments", "=", "{", "SomeOf", ":", "{", "\"n\"", ":", "1", "}", "}", ")", ",", "# type: ignore", "\n", ")", "\n", "def", "test_single_transform_compose", "(", "\n", "compose_transform", ":", "typing", ".", "Tuple", "[", "typing", ".", "Type", "[", "BaseCompose", "]", ",", "dict", "]", ",", "\n", "inner_transform", ":", "typing", ".", "Tuple", "[", "typing", ".", "Union", "[", "typing", ".", "Type", "[", "BaseCompose", "]", ",", "typing", ".", "Type", "[", "BasicTransform", "]", "]", ",", "dict", "]", ",", "\n", ")", ":", "\n", "    ", "compose_cls", ",", "compose_kwargs", "=", "compose_transform", "\n", "cls", ",", "kwargs", "=", "inner_transform", "\n", "transform", "=", "cls", "(", "transforms", "=", "[", "]", ",", "**", "kwargs", ")", "if", "issubclass", "(", "cls", ",", "BaseCompose", ")", "else", "cls", "(", "**", "kwargs", ")", "\n", "\n", "with", "pytest", ".", "warns", "(", "UserWarning", ")", ":", "\n", "        ", "res_transform", "=", "compose_cls", "(", "transforms", "=", "transform", ",", "**", "compose_kwargs", ")", "# type: ignore", "\n", "", "assert", "isinstance", "(", "res_transform", ".", "transforms", ",", "list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_choice_inner_compositions": [[377, 385], ["pytest.mark.parametrize", "numpy.empty", "transforms", "albumentations.core.composition.OneOf", "albumentations.core.composition.SomeOf", "albumentations.core.composition.Sequential", "albumentations.core.composition.Sequential", "albumentations.HorizontalFlip", "albumentations.HorizontalFlip"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"transforms\"", ",", "\n", "[", "OneOf", "(", "[", "Sequential", "(", "[", "HorizontalFlip", "(", "p", "=", "1", ")", "]", ")", "]", ",", "p", "=", "1", ")", ",", "SomeOf", "(", "[", "Sequential", "(", "[", "HorizontalFlip", "(", "p", "=", "1", ")", "]", ")", "]", ",", "n", "=", "1", ",", "p", "=", "1", ")", "]", ",", "\n", ")", "\n", "def", "test_choice_inner_compositions", "(", "transforms", ")", ":", "\n", "    ", "\"\"\"Check that the inner composition is selected without errors.\"\"\"", "\n", "image", "=", "np", ".", "empty", "(", "[", "10", ",", "10", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "transforms", "(", "image", "=", "image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_core.test_contiguous_output": [[387, 408], ["pytest.mark.parametrize", "numpy.empty().transpose", "numpy.empty().transpose", "transforms", "albumentations.core.composition.Compose", "albumentations.core.composition.Compose", "numpy.empty", "numpy.empty", "albumentations.ChannelShuffle", "albumentations.ChannelShuffle"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"transforms\"", ",", "\n", "[", "\n", "Compose", "(", "[", "ChannelShuffle", "(", "p", "=", "1", ")", "]", ",", "p", "=", "1", ")", ",", "\n", "Compose", "(", "[", "ChannelShuffle", "(", "p", "=", "0", ")", "]", ",", "p", "=", "0", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_contiguous_output", "(", "transforms", ")", ":", "\n", "    ", "image", "=", "np", ".", "empty", "(", "[", "3", ",", "24", ",", "24", "]", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "mask", "=", "np", ".", "empty", "(", "[", "3", ",", "24", ",", "24", "]", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "# check preconditions", "\n", "assert", "not", "image", ".", "flags", "[", "\"C_CONTIGUOUS\"", "]", "\n", "assert", "not", "mask", ".", "flags", "[", "\"C_CONTIGUOUS\"", "]", "\n", "\n", "# pipeline always outputs contiguous results", "\n", "data", "=", "transforms", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "\n", "# confirm output contiguous", "\n", "assert", "data", "[", "\"image\"", "]", ".", "flags", "[", "\"C_CONTIGUOUS\"", "]", "\n", "assert", "data", "[", "\"mask\"", "]", ".", "flags", "[", "\"C_CONTIGUOUS\"", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_imgaug_image_only_augmentations": [[29, 36], ["pytest.mark.parametrize", "augmentation_cls", "augmentation_cls.", "numpy.array_equal"], "function", ["None"], ["@", "pytest", ".", "mark", ".", "parametrize", "(", "\"augmentation_cls\"", ",", "[", "IAASuperpixels", ",", "IAASharpen", ",", "IAAAdditiveGaussianNoise", "]", ")", "\n", "def", "test_imgaug_image_only_augmentations", "(", "augmentation_cls", ",", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "data", "[", "\"mask\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"mask\"", "]", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_imgaug_dual_augmentations": [[38, 44], ["pytest.mark.parametrize", "augmentation_cls", "augmentation_cls."], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"augmentation_cls\"", ",", "[", "IAAPiecewiseAffine", ",", "IAAPerspective", "]", ")", "\n", "def", "test_imgaug_dual_augmentations", "(", "augmentation_cls", ",", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "data", "[", "\"mask\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_imagaug_dual_augmentations_are_deterministic": [[46, 53], ["pytest.mark.parametrize", "augmentation_cls", "numpy.copy", "range", "augmentation_cls.", "numpy.array_equal"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"augmentation_cls\"", ",", "[", "IAAPiecewiseAffine", ",", "IAAFliplr", "]", ")", "\n", "def", "test_imagaug_dual_augmentations_are_deterministic", "(", "augmentation_cls", ",", "image", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ")", "\n", "mask", "=", "np", ".", "copy", "(", "image", ")", "\n", "for", "_i", "in", "range", "(", "10", ")", ":", "\n", "        ", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "data", "[", "\"mask\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_imagaug_fliplr_transform_bboxes": [[55, 65], ["albumentations.imgaug.transforms.IAAFliplr", "numpy.copy", "albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations", "albumentations.imgaug.transforms.IAAFliplr.", "albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations", "numpy.array_equal", "numpy.allclose"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations"], ["", "", "def", "test_imagaug_fliplr_transform_bboxes", "(", "image", ")", ":", "\n", "    ", "aug", "=", "IAAFliplr", "(", "p", "=", "1", ")", "\n", "mask", "=", "np", ".", "copy", "(", "image", ")", "\n", "bboxes", "=", "[", "(", "10", ",", "10", ",", "20", ",", "20", ")", ",", "(", "20", ",", "10", ",", "30", ",", "40", ")", "]", "\n", "expect", "=", "[", "(", "80", ",", "10", ",", "90", ",", "20", ")", ",", "(", "70", ",", "10", ",", "80", ",", "40", ")", "]", "\n", "bboxes", "=", "convert_bboxes_to_albumentations", "(", "bboxes", ",", "\"pascal_voc\"", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ",", "bboxes", "=", "bboxes", ")", "\n", "actual", "=", "convert_bboxes_from_albumentations", "(", "data", "[", "\"bboxes\"", "]", ",", "\"pascal_voc\"", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "data", "[", "\"mask\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "actual", ",", "expect", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_imagaug_flipud_transform_bboxes": [[67, 78], ["albumentations.imgaug.transforms.IAAFlipud", "numpy.copy", "albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations", "albumentations.imgaug.transforms.IAAFlipud.", "albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations", "numpy.array_equal", "numpy.allclose"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations"], ["", "def", "test_imagaug_flipud_transform_bboxes", "(", "image", ")", ":", "\n", "    ", "aug", "=", "IAAFlipud", "(", "p", "=", "1", ")", "\n", "mask", "=", "np", ".", "copy", "(", "image", ")", "\n", "dummy_class", "=", "1234", "\n", "bboxes", "=", "[", "(", "10", ",", "10", ",", "20", ",", "20", ",", "dummy_class", ")", ",", "(", "20", ",", "10", ",", "30", ",", "40", ",", "dummy_class", ")", "]", "\n", "expect", "=", "[", "(", "10", ",", "80", ",", "20", ",", "90", ",", "dummy_class", ")", ",", "(", "20", ",", "60", ",", "30", ",", "90", ",", "dummy_class", ")", "]", "\n", "bboxes", "=", "convert_bboxes_to_albumentations", "(", "bboxes", ",", "\"pascal_voc\"", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ",", "bboxes", "=", "bboxes", ")", "\n", "actual", "=", "convert_bboxes_from_albumentations", "(", "data", "[", "\"bboxes\"", "]", ",", "\"pascal_voc\"", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"image\"", "]", ",", "data", "[", "\"mask\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "actual", ",", "expect", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_keypoint_transform_format_xy": [[80, 98], ["pytest.mark.parametrize", "albumentations.Compose", "numpy.ones", "albumentations.Compose.", "numpy.allclose", "aug", "numpy.ones", "len"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"aug\"", ",", "\"keypoints\"", ",", "\"expected\"", "]", ",", "\n", "[", "\n", "[", "IAAFliplr", ",", "[", "(", "20", ",", "30", ",", "0", ",", "0", ")", "]", ",", "[", "(", "80", ",", "30", ",", "0", ",", "0", ")", "]", "]", ",", "\n", "[", "IAAFliplr", ",", "[", "(", "20", ",", "30", ",", "45", ",", "0", ")", "]", ",", "[", "(", "80", ",", "30", ",", "45", ",", "0", ")", "]", "]", ",", "\n", "[", "IAAFliplr", ",", "[", "(", "20", ",", "30", ",", "90", ",", "0", ")", "]", ",", "[", "(", "80", ",", "30", ",", "90", ",", "0", ")", "]", "]", ",", "\n", "#", "\n", "[", "IAAFlipud", ",", "[", "(", "20", ",", "30", ",", "0", ",", "0", ")", "]", ",", "[", "(", "20", ",", "70", ",", "0", ",", "0", ")", "]", "]", ",", "\n", "[", "IAAFlipud", ",", "[", "(", "20", ",", "30", ",", "45", ",", "0", ")", "]", ",", "[", "(", "20", ",", "70", ",", "45", ",", "0", ")", "]", "]", ",", "\n", "[", "IAAFlipud", ",", "[", "(", "20", ",", "30", ",", "90", ",", "0", ")", "]", ",", "[", "(", "20", ",", "70", ",", "90", ",", "0", ")", "]", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_keypoint_transform_format_xy", "(", "aug", ",", "keypoints", ",", "expected", ")", ":", "\n", "    ", "transform", "=", "Compose", "(", "[", "aug", "(", "p", "=", "1", ")", "]", ",", "keypoint_params", "=", "{", "\"format\"", ":", "\"xy\"", ",", "\"label_fields\"", ":", "[", "\"labels\"", "]", "}", ")", "\n", "\n", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "transformed", "=", "transform", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ",", "labels", "=", "np", ".", "ones", "(", "len", "(", "keypoints", ")", ")", ")", "\n", "assert", "np", ".", "allclose", "(", "expected", ",", "transformed", "[", "\"keypoints\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_iaa_transforms_emit_warning": [[100, 104], ["pytest.mark.parametrize", "pytest.warns", "albumentations.Compose", "aug"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"aug\"", ",", "\"keypoints\"", ",", "\"expected\"", "]", ",", "[", "[", "IAAFliplr", ",", "[", "[", "20", ",", "30", ",", "0", ",", "0", "]", "]", ",", "[", "[", "79", ",", "30", ",", "0", ",", "0", "]", "]", "]", "]", ")", "\n", "def", "test_iaa_transforms_emit_warning", "(", "aug", ",", "keypoints", ",", "expected", ")", ":", "\n", "    ", "with", "pytest", ".", "warns", "(", "UserWarning", ",", "match", "=", "\"IAAFliplr transformation supports only 'xy' keypoints augmentation\"", ")", ":", "\n", "        ", "Compose", "(", "[", "aug", "(", "p", "=", "1", ")", "]", ",", "keypoint_params", "=", "{", "\"format\"", ":", "\"xyas\"", ",", "\"label_fields\"", ":", "[", "\"labels\"", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_imgaug_augmentations_serialization": [[106, 134], ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "augmentation_cls", "albumentations.to_dict", "albumentations.from_dict", "tests.utils.set_seed", "imgaug.seed", "augmentation_cls.", "tests.utils.set_seed", "imgaug.seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "[", "\n", "[", "A", ".", "IAASuperpixels", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAAdditiveGaussianNoise", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAACropAndPad", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAFliplr", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAFlipud", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAAffine", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAPiecewiseAffine", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAPerspective", ",", "{", "}", "]", ",", "\n", "]", ",", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "0.5", ",", "1", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"always_apply\"", ",", "(", "False", ",", "True", ")", ")", "\n", "def", "test_imgaug_augmentations_serialization", "(", "augmentation_cls", ",", "params", ",", "p", ",", "seed", ",", "image", ",", "mask", ",", "always_apply", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "p", ",", "always_apply", "=", "always_apply", ",", "**", "params", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "ia", ".", "seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "set_seed", "(", "seed", ")", "\n", "ia", ".", "seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"mask\"", "]", ",", "deserialized_aug_data", "[", "\"mask\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_imgaug_augmentations_for_bboxes_serialization": [[136, 166], ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "augmentation_cls", "albumentations.to_dict", "albumentations.from_dict", "tests.utils.set_seed", "imgaug.seed", "augmentation_cls.", "tests.utils.set_seed", "imgaug.seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "[", "\n", "[", "A", ".", "IAASuperpixels", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAAdditiveGaussianNoise", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAACropAndPad", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAFliplr", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAFlipud", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAAffine", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAPiecewiseAffine", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAPerspective", ",", "{", "}", "]", ",", "\n", "]", ",", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "0.5", ",", "1", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"always_apply\"", ",", "(", "False", ",", "True", ")", ")", "\n", "def", "test_imgaug_augmentations_for_bboxes_serialization", "(", "\n", "augmentation_cls", ",", "params", ",", "p", ",", "seed", ",", "image", ",", "albumentations_bboxes", ",", "always_apply", "\n", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "p", ",", "always_apply", "=", "always_apply", ",", "**", "params", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "ia", ".", "seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "bboxes", "=", "albumentations_bboxes", ")", "\n", "set_seed", "(", "seed", ")", "\n", "ia", ".", "seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "bboxes", "=", "albumentations_bboxes", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"bboxes\"", "]", ",", "deserialized_aug_data", "[", "\"bboxes\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_imgaug_augmentations_for_keypoints_serialization": [[168, 198], ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "augmentation_cls", "albumentations.to_dict", "albumentations.from_dict", "tests.utils.set_seed", "imgaug.seed", "augmentation_cls.", "tests.utils.set_seed", "imgaug.seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "[", "\n", "[", "A", ".", "IAASuperpixels", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAAdditiveGaussianNoise", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAACropAndPad", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAFliplr", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAFlipud", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAAffine", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAPiecewiseAffine", ",", "{", "}", "]", ",", "\n", "[", "A", ".", "IAAPerspective", ",", "{", "}", "]", ",", "\n", "]", ",", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "0.5", ",", "1", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"always_apply\"", ",", "(", "False", ",", "True", ")", ")", "\n", "def", "test_imgaug_augmentations_for_keypoints_serialization", "(", "\n", "augmentation_cls", ",", "params", ",", "p", ",", "seed", ",", "image", ",", "keypoints", ",", "always_apply", "\n", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "p", ",", "always_apply", "=", "always_apply", ",", "**", "params", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "ia", ".", "seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ")", "\n", "set_seed", "(", "seed", ")", "\n", "ia", ".", "seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"keypoints\"", "]", ",", "deserialized_aug_data", "[", "\"keypoints\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_imgaug_transforms_binary_mask_interpolation": [[200, 215], ["pytest.mark.parametrize", "augmentation_cls", "numpy.random.randint", "numpy.random.randint", "augmentation_cls.", "numpy.array_equal", "numpy.unique", "numpy.array"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "[", "\n", "[", "IAAAffine", ",", "{", "\"scale\"", ":", "1.5", "}", "]", ",", "\n", "[", "IAAPiecewiseAffine", ",", "{", "\"scale\"", ":", "1.5", "}", "]", ",", "\n", "[", "IAAPerspective", ",", "{", "}", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_imgaug_transforms_binary_mask_interpolation", "(", "augmentation_cls", ",", "params", ")", ":", "\n", "    ", "\"\"\"Checks whether transformations based on DualTransform does not introduce a mask interpolation artifacts\"\"\"", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "2", ",", "size", "=", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "np", ".", "unique", "(", "data", "[", "\"mask\"", "]", ")", ",", "np", ".", "array", "(", "[", "0", ",", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.__test_multiprocessing_support_proc": [[217, 220], ["transform"], "function", ["None"], ["", "def", "__test_multiprocessing_support_proc", "(", "args", ")", ":", "\n", "    ", "x", ",", "transform", "=", "args", "\n", "return", "transform", "(", "image", "=", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_imgaug_transforms_multiprocessing_support": [[222, 239], ["pytest.mark.parametrize", "augmentation_cls", "numpy.random.randint", "multiprocessing_context.Pool", "multiprocessing_context.Pool.map", "multiprocessing_context.Pool.close", "multiprocessing_context.Pool.join", "map"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.InMemoryFile.close"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "[", "\n", "[", "IAAAffine", ",", "{", "\"scale\"", ":", "1.5", "}", "]", ",", "\n", "[", "IAAPiecewiseAffine", ",", "{", "\"scale\"", ":", "1.5", "}", "]", ",", "\n", "[", "IAAPerspective", ",", "{", "}", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_imgaug_transforms_multiprocessing_support", "(", "augmentation_cls", ",", "params", ",", "multiprocessing_context", ")", ":", "\n", "    ", "\"\"\"Checks whether we can use augmentations in multiprocessing environments\"\"\"", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "pool", "=", "multiprocessing_context", ".", "Pool", "(", "8", ")", "\n", "pool", ".", "map", "(", "__test_multiprocessing_support_proc", ",", "map", "(", "lambda", "x", ":", "(", "x", ",", "aug", ")", ",", "[", "image", "]", "*", "100", ")", ")", "\n", "pool", ".", "close", "(", ")", "\n", "pool", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug.test_compare_crop_and_pad": [[241, 310], ["pytest.mark.parametrize", "albumentations.BboxParams", "albumentations.KeypointParams", "numpy.random.randint", "range", "albumentations.Compose", "albumentations.Compose", "A.Compose.", "A.Compose.", "transform_albu.items", "min", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "np.array.append", "numpy.random.randint", "numpy.random.random().astype", "numpy.allclose", "albumentations.CropAndPad", "albumentations.imgaug.transforms.IAACropAndPad", "numpy.array", "min", "numpy.random.random"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.random"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"img_dtype\"", ",", "\"px\"", ",", "\"percent\"", ",", "\"pad_mode\"", ",", "\"pad_cval\"", "]", ",", "\n", "[", "\n", "[", "np", ".", "uint8", ",", "10", ",", "None", ",", "cv2", ".", "BORDER_CONSTANT", ",", "0", "]", ",", "\n", "[", "np", ".", "uint8", ",", "-", "10", ",", "None", ",", "cv2", ".", "BORDER_CONSTANT", ",", "0", "]", ",", "\n", "[", "np", ".", "uint8", ",", "None", ",", "0.1", ",", "cv2", ".", "BORDER_CONSTANT", ",", "0", "]", ",", "\n", "[", "np", ".", "uint8", ",", "None", ",", "-", "0.1", ",", "cv2", ".", "BORDER_CONSTANT", ",", "0", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_compare_crop_and_pad", "(", "img_dtype", ",", "px", ",", "percent", ",", "pad_mode", ",", "pad_cval", ")", ":", "\n", "    ", "h", ",", "w", ",", "c", "=", "100", ",", "100", ",", "3", "\n", "mode_mapping", "=", "{", "\n", "cv2", ".", "BORDER_CONSTANT", ":", "\"constant\"", ",", "\n", "cv2", ".", "BORDER_REPLICATE", ":", "\"edge\"", ",", "\n", "cv2", ".", "BORDER_REFLECT101", ":", "\"reflect\"", ",", "\n", "cv2", ".", "BORDER_WRAP", ":", "\"wrap\"", ",", "\n", "}", "\n", "pad_mode_iaa", "=", "mode_mapping", "[", "pad_mode", "]", "\n", "\n", "bbox_params", "=", "A", ".", "BboxParams", "(", "format", "=", "\"pascal_voc\"", ")", "\n", "keypoint_params", "=", "A", ".", "KeypointParams", "(", "format", "=", "\"xy\"", ",", "remove_invisible", "=", "False", ")", "\n", "\n", "keypoints", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "min", "(", "h", ",", "w", ")", ",", "[", "10", ",", "2", "]", ")", "\n", "\n", "bboxes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "x1", ",", "y1", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "min", "(", "h", ",", "w", ")", "-", "2", ",", "2", ")", "\n", "x2", "=", "np", ".", "random", ".", "randint", "(", "x1", "+", "1", ",", "w", "-", "1", ")", "\n", "y2", "=", "np", ".", "random", ".", "randint", "(", "y1", "+", "1", ",", "h", "-", "1", ")", "\n", "bboxes", ".", "append", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "0", "]", ")", "\n", "\n", "", "transform_albu", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "CropAndPad", "(", "\n", "px", "=", "px", ",", "\n", "percent", "=", "percent", ",", "\n", "pad_mode", "=", "pad_mode", ",", "\n", "pad_cval", "=", "pad_cval", ",", "\n", "keep_size", "=", "True", ",", "\n", "p", "=", "1", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_AREA", "\n", "if", "(", "px", "is", "not", "None", "and", "px", "<", "0", ")", "or", "(", "percent", "is", "not", "None", "and", "percent", "<", "0", ")", "\n", "else", "cv2", ".", "INTER_LINEAR", ",", "\n", ")", "\n", "]", ",", "\n", "bbox_params", "=", "bbox_params", ",", "\n", "keypoint_params", "=", "keypoint_params", ",", "\n", ")", "\n", "transform_iaa", "=", "A", ".", "Compose", "(", "\n", "[", "IAACropAndPad", "(", "px", "=", "px", ",", "percent", "=", "percent", ",", "pad_mode", "=", "pad_mode_iaa", ",", "pad_cval", "=", "pad_cval", ",", "keep_size", "=", "True", ",", "p", "=", "1", ")", "]", ",", "\n", "bbox_params", "=", "bbox_params", ",", "\n", "keypoint_params", "=", "keypoint_params", ",", "\n", ")", "\n", "\n", "if", "img_dtype", "==", "np", ".", "uint8", ":", "\n", "        ", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "(", "h", ",", "w", ",", "c", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "        ", "img", "=", "np", ".", "random", ".", "random", "(", "(", "h", ",", "w", ",", "c", ")", ")", ".", "astype", "(", "img_dtype", ")", "\n", "\n", "", "res_albu", "=", "transform_albu", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ",", "bboxes", "=", "bboxes", ")", "\n", "res_iaa", "=", "transform_iaa", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ",", "bboxes", "=", "bboxes", ")", "\n", "\n", "for", "key", ",", "item", "in", "res_albu", ".", "items", "(", ")", ":", "\n", "        ", "if", "key", "==", "\"bboxes\"", ":", "\n", "            ", "bboxes", "=", "np", ".", "array", "(", "res_iaa", "[", "key", "]", ")", "\n", "h", "=", "bboxes", "[", ":", ",", "3", "]", "-", "bboxes", "[", ":", ",", "1", "]", "\n", "w", "=", "bboxes", "[", ":", ",", "2", "]", "-", "bboxes", "[", ":", ",", "0", "]", "\n", "res_iaa", "[", "key", "]", "=", "bboxes", "[", "(", "h", ">", "0", ")", "&", "(", "w", ">", "0", ")", "]", "\n", "", "assert", "np", ".", "allclose", "(", "item", ",", "res_iaa", "[", "key", "]", ")", ",", "f\"{key} are not equal\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_convert_keypoint_to_albumentations": [[18, 36], ["pytest.mark.parametrize", "numpy.ones", "albumentations.augmentations.keypoints_utils.convert_keypoint_to_albumentations", "numpy.array", "math.radians", "math.radians"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_to_albumentations"], ["@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"kp\"", ",", "\"source_format\"", ",", "\"expected\"", "]", ",", "\n", "[", "\n", "(", "(", "20", ",", "30", ")", ",", "\"xy\"", ",", "(", "20", ",", "30", ",", "0", ",", "0", ")", ")", ",", "\n", "(", "np", ".", "array", "(", "[", "20", ",", "30", "]", ")", ",", "\"xy\"", ",", "(", "20", ",", "30", ",", "0", ",", "0", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ")", ",", "\"yx\"", ",", "(", "30", ",", "20", ",", "0", ",", "0", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "60", ")", ",", "\"xys\"", ",", "(", "20", ",", "30", ",", "0", ",", "60", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "60", ")", ",", "\"xya\"", ",", "(", "20", ",", "30", ",", "math", ".", "radians", "(", "60", ")", ",", "0", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "60", ",", "80", ")", ",", "\"xyas\"", ",", "(", "20", ",", "30", ",", "math", ".", "radians", "(", "60", ")", ",", "80", ")", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_convert_keypoint_to_albumentations", "(", "kp", ",", "source_format", ",", "expected", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "\n", "converted_keypoint", "=", "convert_keypoint_to_albumentations", "(", "\n", "kp", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "source_format", "\n", ")", "\n", "assert", "converted_keypoint", "==", "expected", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_convert_keypoint_from_albumentations": [[38, 54], ["pytest.mark.parametrize", "numpy.ones", "albumentations.augmentations.keypoints_utils.convert_keypoint_from_albumentations", "math.degrees", "math.degrees"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_from_albumentations"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"kp\"", ",", "\"target_format\"", ",", "\"expected\"", "]", ",", "\n", "[", "\n", "(", "(", "20", ",", "30", ",", "0", ",", "0", ")", ",", "\"xy\"", ",", "(", "20", ",", "30", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "0", ",", "0", ")", ",", "\"yx\"", ",", "(", "30", ",", "20", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "0.6", ",", "0", ")", ",", "\"xya\"", ",", "(", "20", ",", "30", ",", "math", ".", "degrees", "(", "0.6", ")", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "0", ",", "0.6", ")", ",", "\"xys\"", ",", "(", "20", ",", "30", ",", "0.6", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "0.6", ",", "80", ")", ",", "\"xyas\"", ",", "(", "20", ",", "30", ",", "math", ".", "degrees", "(", "0.6", ")", ",", "80", ")", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_convert_keypoint_from_albumentations", "(", "kp", ",", "target_format", ",", "expected", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "converted_keypoint", "=", "convert_keypoint_from_albumentations", "(", "\n", "kp", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "target_format", "=", "target_format", "\n", ")", "\n", "assert", "converted_keypoint", "==", "expected", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_convert_keypoint_to_albumentations_and_back": [[56, 74], ["pytest.mark.parametrize", "numpy.ones", "albumentations.augmentations.keypoints_utils.convert_keypoint_to_albumentations", "albumentations.augmentations.keypoints_utils.convert_keypoint_from_albumentations"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_to_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_from_albumentations"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"kp\"", ",", "\"keypoint_format\"", "]", ",", "\n", "[", "\n", "(", "(", "20", ",", "30", ",", "40", ",", "50", ")", ",", "\"xy\"", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "40", ",", "50", ",", "99", ")", ",", "\"xyas\"", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "60", ",", "80", ")", ",", "\"xysa\"", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "60", ",", "80", ",", "99", ")", ",", "\"yx\"", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_convert_keypoint_to_albumentations_and_back", "(", "kp", ",", "keypoint_format", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "converted_kp", "=", "convert_keypoint_to_albumentations", "(", "\n", "kp", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "keypoint_format", "\n", ")", "\n", "converted_back_kp", "=", "convert_keypoint_from_albumentations", "(", "\n", "converted_kp", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "target_format", "=", "keypoint_format", "\n", ")", "\n", "assert", "converted_back_kp", "==", "kp", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_convert_keypoints_to_albumentations": [[76, 89], ["numpy.ones", "albumentations.augmentations.keypoints_utils.convert_keypoints_to_albumentations", "albumentations.augmentations.keypoints_utils.convert_keypoint_to_albumentations", "albumentations.augmentations.keypoints_utils.convert_keypoint_to_albumentations"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoints_to_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_to_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_to_albumentations"], ["", "def", "test_convert_keypoints_to_albumentations", "(", ")", ":", "\n", "    ", "keypoints", "=", "[", "(", "20", ",", "30", ",", "40", ",", "50", ")", ",", "(", "30", ",", "40", ",", "50", ",", "60", ",", "99", ")", "]", "\n", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "converted_keypoints", "=", "convert_keypoints_to_albumentations", "(", "\n", "keypoints", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "\"xyas\"", "\n", ")", "\n", "converted_keypoint_1", "=", "convert_keypoint_to_albumentations", "(", "\n", "keypoints", "[", "0", "]", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "\"xyas\"", "\n", ")", "\n", "converted_keypoint_2", "=", "convert_keypoint_to_albumentations", "(", "\n", "keypoints", "[", "1", "]", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "\"xyas\"", "\n", ")", "\n", "assert", "converted_keypoints", "==", "[", "converted_keypoint_1", ",", "converted_keypoint_2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_convert_keypoints_from_albumentations": [[91, 104], ["numpy.ones", "albumentations.augmentations.keypoints_utils.convert_keypoints_from_albumentations", "albumentations.augmentations.keypoints_utils.convert_keypoint_from_albumentations", "albumentations.augmentations.keypoints_utils.convert_keypoint_from_albumentations"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoints_from_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_from_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.convert_keypoint_from_albumentations"], ["", "def", "test_convert_keypoints_from_albumentations", "(", ")", ":", "\n", "    ", "keypoints", "=", "[", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ")", ",", "(", "0.3", ",", "0.4", ",", "0.7", ",", "0.9", ",", "99", ")", "]", "\n", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "converted_keypointes", "=", "convert_keypoints_from_albumentations", "(", "\n", "keypoints", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "target_format", "=", "\"xyas\"", "\n", ")", "\n", "converted_keypoint_1", "=", "convert_keypoint_from_albumentations", "(", "\n", "keypoints", "[", "0", "]", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "target_format", "=", "\"xyas\"", "\n", ")", "\n", "converted_keypoint_2", "=", "convert_keypoint_from_albumentations", "(", "\n", "keypoints", "[", "1", "]", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "target_format", "=", "\"xyas\"", "\n", ")", "\n", "assert", "converted_keypointes", "==", "[", "converted_keypoint_1", ",", "converted_keypoint_2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_compose_with_keypoint_noop": [[106, 125], ["pytest.mark.parametrize", "numpy.ones", "numpy.array_equal", "albumentations.Compose", "A.Compose.", "albumentations.Compose", "A.Compose.", "albumentations.NoOp", "albumentations.NoOp"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"keypoints\"", ",", "\"keypoint_format\"", ",", "\"labels\"", "]", ",", "\n", "[", "\n", "(", "[", "(", "20", ",", "30", ",", "40", ",", "50", ")", "]", ",", "\"xyas\"", ",", "[", "1", "]", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "40", ",", "50", ",", "99", ")", ",", "(", "10", ",", "40", ",", "30", ",", "20", ",", "9", ")", "]", ",", "\"xy\"", ",", "None", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ")", "]", ",", "\"yx\"", ",", "[", "2", "]", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ",", "99", ")", "]", ",", "\"xys\"", ",", "None", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_compose_with_keypoint_noop", "(", "keypoints", ",", "keypoint_format", ",", "labels", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "if", "labels", "is", "not", "None", ":", "\n", "        ", "aug", "=", "A", ".", "Compose", "(", "[", "A", ".", "NoOp", "(", "p", "=", "1.0", ")", "]", ",", "keypoint_params", "=", "{", "\"format\"", ":", "keypoint_format", ",", "\"label_fields\"", ":", "[", "\"labels\"", "]", "}", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ",", "labels", "=", "labels", ")", "\n", "", "else", ":", "\n", "        ", "aug", "=", "A", ".", "Compose", "(", "[", "A", ".", "NoOp", "(", "p", "=", "1.0", ")", "]", ",", "keypoint_params", "=", "{", "\"format\"", ":", "keypoint_format", "}", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ")", "\n", "", "assert", "np", ".", "array_equal", "(", "transformed", "[", "\"image\"", "]", ",", "image", ")", "\n", "assert", "transformed", "[", "\"keypoints\"", "]", "==", "keypoints", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_compose_with_keypoint_noop_error_label_fields": [[127, 133], ["pytest.mark.parametrize", "numpy.ones", "albumentations.Compose", "pytest.raises", "A.Compose.", "albumentations.NoOp"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"keypoints\"", ",", "\"keypoint_format\"", "]", ",", "[", "[", "[", "[", "20", ",", "30", ",", "40", ",", "50", "]", "]", ",", "\"xyas\"", "]", "]", ")", "\n", "def", "test_compose_with_keypoint_noop_error_label_fields", "(", "keypoints", ",", "keypoint_format", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "aug", "=", "A", ".", "Compose", "(", "[", "A", ".", "NoOp", "(", "p", "=", "1.0", ")", "]", ",", "keypoint_params", "=", "{", "\"format\"", ":", "keypoint_format", ",", "\"label_fields\"", ":", "\"class_id\"", "}", ")", "\n", "with", "pytest", ".", "raises", "(", "Exception", ")", ":", "\n", "        ", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ",", "cls_id", "=", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_compose_with_keypoint_noop_label_outside": [[135, 153], ["pytest.mark.parametrize", "numpy.ones", "albumentations.Compose", "A.Compose.", "numpy.array_equal", "labels.items", "albumentations.NoOp", "list", "labels.keys"], "function", ["None"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"keypoints\"", ",", "\"keypoint_format\"", ",", "\"labels\"", "]", ",", "\n", "[", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ")", "]", ",", "\"xy\"", ",", "{", "\"label\"", ":", "[", "1", "]", "}", ")", ",", "\n", "(", "[", "]", ",", "\"xy\"", ",", "{", "}", ")", ",", "\n", "(", "[", "]", ",", "\"xy\"", ",", "{", "\"label\"", ":", "[", "]", "}", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ")", "]", ",", "\"xy\"", ",", "{", "\"id\"", ":", "[", "3", "]", "}", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ")", ",", "(", "30", ",", "40", ",", "40", ",", "50", ")", "]", ",", "\"xy\"", ",", "{", "\"id\"", ":", "[", "3", ",", "1", "]", "}", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_compose_with_keypoint_noop_label_outside", "(", "keypoints", ",", "keypoint_format", ",", "labels", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "aug", "=", "A", ".", "Compose", "(", "[", "A", ".", "NoOp", "(", "p", "=", "1.0", ")", "]", ",", "keypoint_params", "=", "{", "\"format\"", ":", "keypoint_format", ",", "\"label_fields\"", ":", "list", "(", "labels", ".", "keys", "(", ")", ")", "}", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ",", "**", "labels", ")", "\n", "assert", "np", ".", "array_equal", "(", "transformed", "[", "\"image\"", "]", ",", "image", ")", "\n", "assert", "transformed", "[", "\"keypoints\"", "]", "==", "keypoints", "\n", "for", "k", ",", "v", "in", "labels", ".", "items", "(", ")", ":", "\n", "        ", "assert", "transformed", "[", "k", "]", "==", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_random_sized_crop_size": [[155, 162], ["numpy.ones", "albumentations.RandomSizedCrop", "A.RandomSizedCrop.", "len", "len"], "function", ["None"], ["", "", "def", "test_random_sized_crop_size", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "keypoints", "=", "[", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ")", ",", "(", "0.3", ",", "0.4", ",", "0.7", ",", "0.9", ",", "99", ")", "]", "\n", "aug", "=", "A", ".", "RandomSizedCrop", "(", "min_max_height", "=", "(", "70", ",", "90", ")", ",", "height", "=", "50", ",", "width", "=", "50", ",", "p", "=", "1.0", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "transformed", "[", "\"image\"", "]", ".", "shape", "==", "(", "50", ",", "50", ",", "3", ")", "\n", "assert", "len", "(", "keypoints", ")", "==", "len", "(", "transformed", "[", "\"keypoints\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_random_resized_crop_size": [[164, 171], ["numpy.ones", "albumentations.RandomResizedCrop", "A.RandomResizedCrop.", "len", "len"], "function", ["None"], ["", "def", "test_random_resized_crop_size", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "keypoints", "=", "[", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ")", ",", "(", "0.3", ",", "0.4", ",", "0.7", ",", "0.9", ",", "99", ")", "]", "\n", "aug", "=", "A", ".", "RandomResizedCrop", "(", "height", "=", "50", ",", "width", "=", "50", ",", "p", "=", "1.0", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "transformed", "[", "\"image\"", "]", ".", "shape", "==", "(", "50", ",", "50", ",", "3", ")", "\n", "assert", "len", "(", "keypoints", ")", "==", "len", "(", "transformed", "[", "\"keypoints\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_keypoint_flips_transform_3x3": [[173, 196], ["pytest.mark.parametrize", "albumentations.Compose", "numpy.ones", "A.Compose.", "numpy.allclose", "aug", "numpy.ones", "len"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"aug\"", ",", "\"keypoints\"", ",", "\"expected\"", "]", ",", "\n", "[", "\n", "[", "A", ".", "HorizontalFlip", ",", "[", "[", "0", ",", "0", "]", "]", ",", "[", "[", "2", ",", "0", "]", "]", "]", ",", "\n", "[", "A", ".", "HorizontalFlip", ",", "[", "[", "2", ",", "0", "]", "]", ",", "[", "[", "0", ",", "0", "]", "]", "]", ",", "\n", "[", "A", ".", "HorizontalFlip", ",", "[", "[", "0", ",", "2", "]", "]", ",", "[", "[", "2", ",", "2", "]", "]", "]", ",", "\n", "[", "A", ".", "HorizontalFlip", ",", "[", "[", "2", ",", "2", "]", "]", ",", "[", "[", "0", ",", "2", "]", "]", "]", ",", "\n", "#", "\n", "[", "A", ".", "VerticalFlip", ",", "[", "[", "0", ",", "0", "]", "]", ",", "[", "[", "0", ",", "2", "]", "]", "]", ",", "\n", "[", "A", ".", "VerticalFlip", ",", "[", "[", "2", ",", "0", "]", "]", ",", "[", "[", "2", ",", "2", "]", "]", "]", ",", "\n", "[", "A", ".", "VerticalFlip", ",", "[", "[", "0", ",", "2", "]", "]", ",", "[", "[", "0", ",", "0", "]", "]", "]", ",", "\n", "[", "A", ".", "VerticalFlip", ",", "[", "[", "2", ",", "2", "]", "]", ",", "[", "[", "2", ",", "0", "]", "]", "]", ",", "\n", "#", "\n", "[", "A", ".", "HorizontalFlip", ",", "[", "[", "1", ",", "1", "]", "]", ",", "[", "[", "1", ",", "1", "]", "]", "]", ",", "\n", "[", "A", ".", "VerticalFlip", ",", "[", "[", "1", ",", "1", "]", "]", ",", "[", "[", "1", ",", "1", "]", "]", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_keypoint_flips_transform_3x3", "(", "aug", ",", "keypoints", ",", "expected", ")", ":", "\n", "    ", "transform", "=", "A", ".", "Compose", "(", "[", "aug", "(", "p", "=", "1", ")", "]", ",", "keypoint_params", "=", "{", "\"format\"", ":", "\"xy\"", "}", ")", "\n", "\n", "image", "=", "np", ".", "ones", "(", "(", "3", ",", "3", ",", "3", ")", ")", "\n", "transformed", "=", "transform", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ",", "labels", "=", "np", ".", "ones", "(", "len", "(", "keypoints", ")", ")", ")", "\n", "assert", "np", ".", "allclose", "(", "expected", ",", "transformed", "[", "\"keypoints\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_keypoint_transform_format_xyas": [[198, 218], ["pytest.mark.parametrize", "albumentations.Compose", "numpy.ones", "A.Compose.", "numpy.allclose", "aug", "numpy.ones", "len"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"aug\"", ",", "\"keypoints\"", ",", "\"expected\"", "]", ",", "\n", "[", "\n", "[", "A", ".", "HorizontalFlip", ",", "[", "[", "20", ",", "30", ",", "0", ",", "0", "]", "]", ",", "[", "[", "79", ",", "30", ",", "180", ",", "0", "]", "]", "]", ",", "\n", "[", "A", ".", "HorizontalFlip", ",", "[", "[", "20", ",", "30", ",", "45", ",", "0", "]", "]", ",", "[", "[", "79", ",", "30", ",", "135", ",", "0", "]", "]", "]", ",", "\n", "[", "A", ".", "HorizontalFlip", ",", "[", "[", "20", ",", "30", ",", "90", ",", "0", "]", "]", ",", "[", "[", "79", ",", "30", ",", "90", ",", "0", "]", "]", "]", ",", "\n", "#", "\n", "[", "A", ".", "VerticalFlip", ",", "[", "[", "20", ",", "30", ",", "0", ",", "0", "]", "]", ",", "[", "[", "20", ",", "69", ",", "0", ",", "0", "]", "]", "]", ",", "\n", "[", "A", ".", "VerticalFlip", ",", "[", "[", "20", ",", "30", ",", "45", ",", "0", "]", "]", ",", "[", "[", "20", ",", "69", ",", "315", ",", "0", "]", "]", "]", ",", "\n", "[", "A", ".", "VerticalFlip", ",", "[", "[", "20", ",", "30", ",", "90", ",", "0", "]", "]", ",", "[", "[", "20", ",", "69", ",", "270", ",", "0", "]", "]", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_keypoint_transform_format_xyas", "(", "aug", ",", "keypoints", ",", "expected", ")", ":", "\n", "    ", "transform", "=", "A", ".", "Compose", "(", "\n", "[", "aug", "(", "p", "=", "1", ")", "]", ",", "keypoint_params", "=", "{", "\"format\"", ":", "\"xyas\"", ",", "\"angle_in_degrees\"", ":", "True", ",", "\"label_fields\"", ":", "[", "\"labels\"", "]", "}", "\n", ")", "\n", "\n", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "transformed", "=", "transform", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ",", "labels", "=", "np", ".", "ones", "(", "len", "(", "keypoints", ")", ")", ")", "\n", "assert", "np", ".", "allclose", "(", "expected", ",", "transformed", "[", "\"keypoints\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_keypoint_rotate90": [[220, 232], ["pytest.mark.parametrize", "albumentations.keypoint_rot90"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_rot90"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"keypoint\"", ",", "\"expected\"", ",", "\"factor\"", "]", ",", "\n", "[", "\n", "(", "(", "20", ",", "30", ",", "math", ".", "pi", "/", "2", ",", "0", ")", ",", "(", "20", ",", "30", ",", "math", ".", "pi", "/", "2", ",", "0", ")", ",", "0", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "math", ".", "pi", "/", "2", ",", "0", ")", ",", "(", "30", ",", "179", ",", "0", ",", "0", ")", ",", "1", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "math", ".", "pi", "/", "2", ",", "0", ")", ",", "(", "179", ",", "69", ",", "3", "*", "math", ".", "pi", "/", "2", ",", "0", ")", ",", "2", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "math", ".", "pi", "/", "2", ",", "0", ")", ",", "(", "69", ",", "20", ",", "math", ".", "pi", ",", "0", ")", ",", "3", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_keypoint_rotate90", "(", "keypoint", ",", "expected", ",", "factor", ")", ":", "\n", "    ", "actual", "=", "FGeometric", ".", "keypoint_rot90", "(", "keypoint", ",", "factor", ",", "rows", "=", "100", ",", "cols", "=", "200", ")", "\n", "assert", "actual", "==", "expected", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_keypoint_rotate": [[234, 248], ["pytest.mark.parametrize", "albumentations.keypoint_rotate", "numpy.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"keypoint\"", ",", "\"expected\"", ",", "\"angle\"", "]", ",", "\n", "[", "\n", "[", "[", "20", ",", "30", ",", "math", ".", "pi", "/", "2", ",", "0", "]", ",", "[", "20", ",", "30", ",", "math", ".", "pi", "/", "2", ",", "0", "]", ",", "0", "]", ",", "\n", "[", "[", "20", ",", "30", ",", "math", ".", "pi", "/", "2", ",", "0", "]", ",", "[", "30", ",", "79", ",", "math", ".", "pi", ",", "0", "]", ",", "90", "]", ",", "\n", "[", "[", "20", ",", "30", ",", "math", ".", "pi", "/", "2", ",", "0", "]", ",", "[", "79", ",", "69", ",", "3", "*", "math", ".", "pi", "/", "2", ",", "0", "]", ",", "180", "]", ",", "\n", "[", "[", "20", ",", "30", ",", "math", ".", "pi", "/", "2", ",", "0", "]", ",", "[", "69", ",", "20", ",", "0", ",", "0", "]", ",", "270", "]", ",", "\n", "[", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "99", ",", "99", ",", "math", ".", "pi", ",", "0", "]", ",", "180", "]", ",", "\n", "[", "[", "99", ",", "99", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "math", ".", "pi", ",", "0", "]", ",", "180", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_keypoint_rotate", "(", "keypoint", ",", "expected", ",", "angle", ")", ":", "\n", "    ", "actual", "=", "FGeometric", ".", "keypoint_rotate", "(", "keypoint", ",", "angle", ",", "rows", "=", "100", ",", "cols", "=", "100", ")", "\n", "np", ".", "testing", ".", "assert_allclose", "(", "actual", ",", "expected", ",", "atol", "=", "1e-7", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_keypoint_scale": [[250, 261], ["pytest.mark.parametrize", "albumentations.keypoint_scale", "numpy.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_scale"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"keypoint\"", ",", "\"expected\"", ",", "\"scale\"", "]", ",", "\n", "[", "\n", "[", "[", "0.0", ",", "0.0", ",", "math", ".", "pi", "/", "2", ",", "1", "]", ",", "[", "0.0", ",", "0.0", ",", "math", ".", "pi", "/", "2", ",", "1", "]", ",", "1", "]", ",", "\n", "[", "[", "0.0", ",", "0.0", ",", "math", ".", "pi", "/", "2", ",", "1", "]", ",", "[", "0.0", ",", "0.0", ",", "math", ".", "pi", "/", "2", ",", "2", "]", ",", "2", "]", ",", "\n", "[", "[", "0.0", ",", "0.0", ",", "math", ".", "pi", "/", "2", ",", "1", "]", ",", "[", "0.0", ",", "0.0", ",", "math", ".", "pi", "/", "2", ",", "0.5", "]", ",", "0.5", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_keypoint_scale", "(", "keypoint", ",", "expected", ",", "scale", ")", ":", "\n", "    ", "actual", "=", "FGeometric", ".", "keypoint_scale", "(", "keypoint", ",", "scale", ",", "scale", ")", "\n", "np", ".", "testing", ".", "assert_allclose", "(", "actual", ",", "expected", ",", "atol", "=", "1e-7", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_keypoint_shift_scale_rotate": [[263, 270], ["pytest.mark.parametrize", "albumentations.keypoint_shift_scale_rotate", "numpy.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.keypoint_shift_scale_rotate"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"keypoint\"", ",", "\"expected\"", ",", "\"angle\"", ",", "\"scale\"", ",", "\"dx\"", ",", "\"dy\"", "]", ",", "\n", "[", "[", "[", "50", ",", "50", ",", "0", ",", "5", "]", ",", "[", "120", ",", "160", ",", "math", ".", "pi", "/", "2", ",", "10", "]", ",", "90", ",", "2", ",", "0.1", ",", "0.1", "]", "]", ",", "\n", ")", "\n", "def", "test_keypoint_shift_scale_rotate", "(", "keypoint", ",", "expected", ",", "angle", ",", "scale", ",", "dx", ",", "dy", ")", ":", "\n", "    ", "actual", "=", "FGeometric", ".", "keypoint_shift_scale_rotate", "(", "keypoint", ",", "angle", ",", "scale", ",", "dx", ",", "dy", ",", "rows", "=", "100", ",", "cols", "=", "200", ")", "\n", "np", ".", "testing", ".", "assert_allclose", "(", "actual", ",", "expected", ",", "rtol", "=", "1e-4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_compose_with_additional_targets": [[272, 280], ["numpy.ones", "albumentations.Compose", "A.Compose.", "albumentations.CenterCrop"], "function", ["None"], ["", "def", "test_compose_with_additional_targets", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "keypoints", "=", "[", "(", "10", ",", "10", ")", ",", "(", "50", ",", "50", ")", "]", "\n", "kp1", "=", "[", "(", "15", ",", "15", ")", ",", "(", "55", ",", "55", ")", "]", "\n", "aug", "=", "A", ".", "Compose", "(", "[", "A", ".", "CenterCrop", "(", "50", ",", "50", ")", "]", ",", "keypoint_params", "=", "{", "\"format\"", ":", "\"xy\"", "}", ",", "additional_targets", "=", "{", "\"kp1\"", ":", "\"keypoints\"", "}", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ",", "kp1", "=", "kp1", ")", "\n", "assert", "transformed", "[", "\"keypoints\"", "]", "==", "[", "(", "25", ",", "25", ")", "]", "\n", "assert", "transformed", "[", "\"kp1\"", "]", "==", "[", "(", "30", ",", "30", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_angle_to_2pi_range": [[282, 298], ["pytest.mark.parametrize", "numpy.isclose", "albumentations.augmentations.keypoints_utils.angle_to_2pi_range"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.keypoints_utils.angle_to_2pi_range"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"angle\"", ",", "\"expected\"", "]", ",", "\n", "[", "\n", "[", "0", ",", "0", "]", ",", "\n", "[", "np", ".", "pi", "/", "2", ",", "np", ".", "pi", "/", "2", "]", ",", "\n", "[", "np", ".", "pi", ",", "np", ".", "pi", "]", ",", "\n", "[", "3", "*", "np", ".", "pi", "/", "2", ",", "3", "*", "np", ".", "pi", "/", "2", "]", ",", "\n", "[", "2", "*", "np", ".", "pi", ",", "0", "]", ",", "\n", "[", "-", "np", ".", "pi", "/", "2", ",", "3", "*", "np", ".", "pi", "/", "2", "]", ",", "\n", "[", "-", "np", ".", "pi", ",", "np", ".", "pi", "]", ",", "\n", "[", "-", "3", "*", "np", ".", "pi", "/", "2", ",", "np", ".", "pi", "/", "2", "]", ",", "\n", "[", "-", "2", "*", "np", ".", "pi", ",", "0", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_angle_to_2pi_range", "(", "angle", ",", "expected", ")", ":", "\n", "    ", "assert", "np", ".", "isclose", "(", "angle_to_2pi_range", "(", "angle", ")", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_keypoint.test_coarse_dropout": [[300, 308], ["albumentations.Compose", "A.Compose.", "len", "albumentations.CoarseDropout", "albumentations.KeypointParams", "numpy.zeros"], "function", ["None"], ["", "def", "test_coarse_dropout", "(", ")", ":", "\n", "    ", "aug", "=", "A", ".", "Compose", "(", "\n", "[", "A", ".", "CoarseDropout", "(", "min_holes", "=", "1", ",", "max_holes", "=", "1", ",", "min_height", "=", "128", ",", "max_width", "=", "128", ",", "min_width", "=", "128", ",", "max_height", "=", "128", ",", "p", "=", "1", ")", "]", ",", "\n", "keypoint_params", "=", "A", ".", "KeypointParams", "(", "format", "=", "\"xy\"", ")", ",", "\n", ")", "\n", "\n", "result", "=", "aug", "(", "image", "=", "np", ".", "zeros", "(", "(", "128", ",", "128", ")", ")", ",", "keypoints", "=", "(", "(", "10", ",", "10", ")", ",", "(", "20", ",", "30", ")", ")", ")", "\n", "assert", "len", "(", "result", "[", "\"keypoints\"", "]", ")", "==", "0", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_random._calc": [[10, 12], ["None"], "function", ["None"], ["def", "_calc", "(", "args", ")", ":", "\n", "    ", "return", "args", "[", "0", "]", "(", "*", "args", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_random.test_multiprocessing": [[14, 42], ["pytest.mark.parametrize", "random.seed", "numpy.random.seed", "range", "multiprocessing.pool.Pool", "pool.map", "numpy.allclose", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"func\"", ",", "\"args\"", "]", ",", "\n", "[", "\n", "[", "random_utils", ".", "uniform", ",", "[", "-", "(", "1", "<<", "15", ")", ",", "1", "<<", "15", ",", "100", "]", "]", ",", "\n", "[", "random_utils", ".", "rand", ",", "[", "10", ",", "10", "]", "]", ",", "\n", "[", "random_utils", ".", "randn", ",", "[", "10", ",", "10", "]", "]", ",", "\n", "[", "random_utils", ".", "normal", ",", "[", "0", ",", "1", ",", "100", "]", "]", ",", "\n", "[", "random_utils", ".", "poisson", ",", "[", "1", "<<", "15", ",", "100", "]", "]", ",", "\n", "[", "random_utils", ".", "permutation", ",", "[", "np", ".", "arange", "(", "1000", ")", "]", "]", ",", "\n", "[", "random_utils", ".", "randint", ",", "[", "-", "(", "1", "<<", "15", ")", ",", "1", "<<", "15", ",", "100", "]", "]", ",", "\n", "[", "random_utils", ".", "random", ",", "[", "100", "]", "]", ",", "\n", "[", "random_utils", ".", "choice", ",", "[", "np", ".", "arange", "(", "1000", ")", ",", "100", "]", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_multiprocessing", "(", "func", ",", "args", ")", ":", "\n", "    ", "seed", "=", "0", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "n", "=", "10", "\n", "status", "=", "False", "\n", "for", "_", "in", "range", "(", "n", ")", ":", "\n", "        ", "with", "Pool", "(", "2", ")", "as", "pool", ":", "\n", "            ", "res", "=", "pool", ".", "map", "(", "_calc", ",", "[", "(", "func", ",", "args", ")", ",", "(", "func", ",", "args", ")", "]", ")", "\n", "", "status", "=", "not", "np", ".", "allclose", "(", "res", "[", "0", "]", ",", "res", "[", "1", "]", ")", "\n", "if", "status", ":", "\n", "            ", "break", "\n", "", "", "assert", "status", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug_imports.test_imgaug_augmentations_imported_when_imgaug_is_installed": [[8, 27], ["pytest.mark.parametrize", "getattr", "getattr.", "isinstance"], "function", ["None"], ["@", "skipif_no_imgaug", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"aug_name\"", ",", "\n", "[", "\n", "\"IAAEmboss\"", ",", "\n", "\"IAASuperpixels\"", ",", "\n", "\"IAASharpen\"", ",", "\n", "\"IAAAdditiveGaussianNoise\"", ",", "\n", "\"IAACropAndPad\"", ",", "\n", "\"IAAFliplr\"", ",", "\n", "\"IAAFlipud\"", ",", "\n", "\"IAAAffine\"", ",", "\n", "\"IAAPiecewiseAffine\"", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_imgaug_augmentations_imported_when_imgaug_is_installed", "(", "aug_name", ")", ":", "\n", "    ", "aug_cls", "=", "getattr", "(", "A", ",", "aug_name", ")", "\n", "t", "=", "aug_cls", "(", ")", "\n", "assert", "isinstance", "(", "t", ",", "A", ".", "BasicIAATransform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug_imports.test_iaaperpective_augmentation_imported_when_imgaug_is_installed": [[29, 35], ["IAAPerspective", "isinstance"], "function", ["None"], ["", "@", "skipif_no_imgaug", "\n", "def", "test_iaaperpective_augmentation_imported_when_imgaug_is_installed", "(", ")", ":", "\n", "    ", "from", "albumentations", ".", "imgaug", ".", "transforms", "import", "IAAPerspective", "\n", "\n", "t", "=", "IAAPerspective", "(", ")", "\n", "assert", "isinstance", "(", "t", ",", "A", ".", "DualTransform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug_imports.test_imgaug_stubs_imported_when_imgaug_is_not_installed": [[37, 63], ["pytest.mark.parametrize", "getattr", "issubclass", "pytest.raises", "getattr.", "str"], "function", ["None"], ["", "@", "skipif_imgaug", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"aug_name\"", ",", "\n", "[", "\n", "\"IAAEmboss\"", ",", "\n", "\"IAASuperpixels\"", ",", "\n", "\"IAASharpen\"", ",", "\n", "\"IAAAdditiveGaussianNoise\"", ",", "\n", "\"IAACropAndPad\"", ",", "\n", "\"IAAFliplr\"", ",", "\n", "\"IAAFlipud\"", ",", "\n", "\"IAAAffine\"", ",", "\n", "\"IAAPiecewiseAffine\"", ",", "\n", "\"IAAPerspective\"", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_imgaug_stubs_imported_when_imgaug_is_not_installed", "(", "aug_name", ")", ":", "\n", "    ", "aug_cls", "=", "getattr", "(", "A", ",", "aug_name", ")", "\n", "assert", "issubclass", "(", "aug_cls", ",", "IAAStub", ")", "\n", "with", "pytest", ".", "raises", "(", "RuntimeError", ")", "as", "exc_info", ":", "\n", "        ", "aug_cls", "(", ")", "\n", "message", "=", "(", "\n", "f\"You are trying to use a deprecated augmentation '{aug_name}' which depends on the imgaug library, \"", "\n", "f\"but imgaug is not installed.\"", "\n", ")", "\n", "assert", "message", "in", "str", "(", "exc_info", ".", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug_imports.test_imports_from_imgaug_module_dont_raise_import_error": [[65, 70], ["IAAFlipud"], "function", ["None"], ["", "", "@", "skipif_no_imgaug", "\n", "def", "test_imports_from_imgaug_module_dont_raise_import_error", "(", ")", ":", "\n", "    ", "from", "albumentations", ".", "imgaug", ".", "transforms", "import", "IAAFlipud", "\n", "\n", "IAAFlipud", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_imgaug_imports.test_imports_from_imgaug_module_raise_import_error": [[72, 83], ["pytest.raises", "str"], "function", ["None"], ["", "@", "skipif_imgaug", "\n", "def", "test_imports_from_imgaug_module_raise_import_error", "(", ")", ":", "\n", "    ", "with", "pytest", ".", "raises", "(", "ImportError", ")", "as", "exc_info", ":", "\n", "        ", "from", "albumentations", ".", "imgaug", ".", "transforms", "import", "IAAFlipud", "\n", "\n", "message", "=", "(", "\n", "\"You are trying to import an augmentation that depends on the imgaug library, but imgaug is not \"", "\n", "\"installed. To install a version of Albumentations that contains imgaug please run \"", "\n", "\"'pip install -U albumentations[imgaug]'\"", "\n", ")", "\n", "assert", "message", "in", "str", "(", "exc_info", ".", "value", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_normalize_bbox": [[19, 26], ["pytest.mark.parametrize", "albumentations.augmentations.bbox_utils.normalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox"], ["@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"bbox\"", ",", "\"expected\"", "]", ",", "\n", "[", "(", "(", "15", ",", "25", ",", "100", ",", "200", ")", ",", "(", "0.0375", ",", "0.125", ",", "0.25", ",", "1.0", ")", ")", ",", "(", "(", "15", ",", "25", ",", "100", ",", "200", ",", "99", ")", ",", "(", "0.0375", ",", "0.125", ",", "0.25", ",", "1.0", ",", "99", ")", ")", "]", ",", "\n", ")", "\n", "def", "test_normalize_bbox", "(", "bbox", ",", "expected", ")", ":", "\n", "    ", "normalized_bbox", "=", "normalize_bbox", "(", "bbox", ",", "200", ",", "400", ")", "\n", "assert", "normalized_bbox", "==", "expected", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_denormalize_bbox": [[28, 35], ["pytest.mark.parametrize", "albumentations.augmentations.bbox_utils.denormalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"bbox\"", ",", "\"expected\"", "]", ",", "\n", "[", "(", "(", "0.0375", ",", "0.125", ",", "0.25", ",", "1.0", ")", ",", "(", "15", ",", "25", ",", "100", ",", "200", ")", ")", ",", "(", "(", "0.0375", ",", "0.125", ",", "0.25", ",", "1.0", ",", "99", ")", ",", "(", "15", ",", "25", ",", "100", ",", "200", ",", "99", ")", ")", "]", ",", "\n", ")", "\n", "def", "test_denormalize_bbox", "(", "bbox", ",", "expected", ")", ":", "\n", "    ", "denormalized_bbox", "=", "denormalize_bbox", "(", "bbox", ",", "200", ",", "400", ")", "\n", "assert", "denormalized_bbox", "==", "expected", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_normalize_denormalize_bbox": [[37, 42], ["pytest.mark.parametrize", "albumentations.augmentations.bbox_utils.normalize_bbox", "albumentations.augmentations.bbox_utils.denormalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"bbox\"", ",", "[", "(", "15", ",", "25", ",", "100", ",", "200", ")", ",", "(", "15", ",", "25", ",", "100", ",", "200", ",", "99", ")", "]", ")", "\n", "def", "test_normalize_denormalize_bbox", "(", "bbox", ")", ":", "\n", "    ", "normalized_bbox", "=", "normalize_bbox", "(", "bbox", ",", "200", ",", "400", ")", "\n", "denormalized_bbox", "=", "denormalize_bbox", "(", "normalized_bbox", ",", "200", ",", "400", ")", "\n", "assert", "denormalized_bbox", "==", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_denormalize_normalize_bbox": [[44, 49], ["pytest.mark.parametrize", "albumentations.augmentations.bbox_utils.denormalize_bbox", "albumentations.augmentations.bbox_utils.normalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"bbox\"", ",", "[", "(", "0.0375", ",", "0.125", ",", "0.25", ",", "1.0", ")", ",", "(", "0.0375", ",", "0.125", ",", "0.25", ",", "1.0", ",", "99", ")", "]", ")", "\n", "def", "test_denormalize_normalize_bbox", "(", "bbox", ")", ":", "\n", "    ", "denormalized_bbox", "=", "denormalize_bbox", "(", "bbox", ",", "200", ",", "400", ")", "\n", "normalized_bbox", "=", "normalize_bbox", "(", "denormalized_bbox", ",", "200", ",", "400", ")", "\n", "assert", "normalized_bbox", "==", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_normalize_bboxes": [[51, 56], ["albumentations.augmentations.bbox_utils.normalize_bboxes", "albumentations.augmentations.bbox_utils.normalize_bbox", "albumentations.augmentations.bbox_utils.normalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bboxes", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.normalize_bbox"], ["", "def", "test_normalize_bboxes", "(", ")", ":", "\n", "    ", "bboxes", "=", "[", "(", "15", ",", "25", ",", "100", ",", "200", ")", ",", "(", "15", ",", "25", ",", "100", ",", "200", ",", "99", ")", "]", "\n", "normalized_bboxes_1", "=", "normalize_bboxes", "(", "bboxes", ",", "200", ",", "400", ")", "\n", "normalized_bboxes_2", "=", "[", "normalize_bbox", "(", "bboxes", "[", "0", "]", ",", "200", ",", "400", ")", ",", "normalize_bbox", "(", "bboxes", "[", "1", "]", ",", "200", ",", "400", ")", "]", "\n", "assert", "normalized_bboxes_1", "==", "normalized_bboxes_2", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_denormalize_bboxes": [[58, 63], ["albumentations.augmentations.bbox_utils.denormalize_bboxes", "albumentations.augmentations.bbox_utils.denormalize_bbox", "albumentations.augmentations.bbox_utils.denormalize_bbox"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bboxes", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.denormalize_bbox"], ["", "def", "test_denormalize_bboxes", "(", ")", ":", "\n", "    ", "bboxes", "=", "[", "(", "0.0375", ",", "0.125", ",", "0.25", ",", "1.0", ")", ",", "(", "0.0375", ",", "0.125", ",", "0.25", ",", "1.0", ",", "99", ")", "]", "\n", "denormalized_bboxes_1", "=", "denormalize_bboxes", "(", "bboxes", ",", "200", ",", "400", ")", "\n", "denormalized_bboxes_2", "=", "[", "denormalize_bbox", "(", "bboxes", "[", "0", "]", ",", "200", ",", "400", ")", ",", "denormalize_bbox", "(", "bboxes", "[", "1", "]", ",", "200", ",", "400", ")", "]", "\n", "assert", "denormalized_bboxes_1", "==", "denormalized_bboxes_2", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_calculate_bbox_area": [[65, 71], ["pytest.mark.parametrize", "albumentations.augmentations.bbox_utils.calculate_bbox_area"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.calculate_bbox_area"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"bbox\"", ",", "\"rows\"", ",", "\"cols\"", ",", "\"expected\"", "]", ",", "[", "(", "(", "0", ",", "0", ",", "1", ",", "1", ")", ",", "50", ",", "100", ",", "5000", ")", ",", "(", "(", "0.2", ",", "0.2", ",", "1", ",", "1", ",", "99", ")", ",", "50", ",", "50", ",", "1600", ")", "]", "\n", ")", "\n", "def", "test_calculate_bbox_area", "(", "bbox", ",", "rows", ",", "cols", ",", "expected", ")", ":", "\n", "    ", "area", "=", "calculate_bbox_area", "(", "bbox", ",", "rows", ",", "cols", ")", "\n", "assert", "area", "==", "expected", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_convert_bbox_to_albumentations": [[73, 94], ["pytest.mark.parametrize", "numpy.ones", "albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations", "numpy.all", "numpy.isclose"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"bbox\"", ",", "\"source_format\"", ",", "\"expected\"", "]", ",", "\n", "[", "\n", "(", "(", "20", ",", "30", ",", "40", ",", "50", ")", ",", "\"coco\"", ",", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "40", ",", "50", ",", "99", ")", ",", "\"coco\"", ",", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ",", "99", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "60", ",", "80", ")", ",", "\"pascal_voc\"", ",", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ")", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "60", ",", "80", ",", "99", ")", ",", "\"pascal_voc\"", ",", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ",", "99", ")", ")", ",", "\n", "(", "(", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ")", ",", "\"yolo\"", ",", "(", "0.00", ",", "0.05", ",", "0.40", ",", "0.55", ")", ")", ",", "\n", "(", "(", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "99", ")", ",", "\"yolo\"", ",", "(", "0.00", ",", "0.05", ",", "0.40", ",", "0.55", ",", "99", ")", ")", ",", "\n", "(", "(", "0.1", ",", "0.1", ",", "0.2", ",", "0.2", ")", ",", "\"yolo\"", ",", "(", "0.0", ",", "0.0", ",", "0.2", ",", "0.2", ")", ")", ",", "\n", "(", "(", "0.99662423", ",", "0.7520255", ",", "0.00675154", ",", "0.01446759", ")", ",", "\"yolo\"", ",", "(", "0.99324846", ",", "0.744791705", ",", "1.0", ",", "0.759259295", ")", ")", ",", "\n", "(", "(", "0.9375", ",", "0.510416", ",", "0.1234375", ",", "0.97638", ")", ",", "\"yolo\"", ",", "(", "0.87578125", ",", "0.022226", ",", "0.999218749", ",", "0.998606", ")", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_convert_bbox_to_albumentations", "(", "bbox", ",", "source_format", ",", "expected", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "\n", "converted_bbox", "=", "convert_bbox_to_albumentations", "(", "\n", "bbox", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "source_format", "\n", ")", "\n", "assert", "np", ".", "all", "(", "np", ".", "isclose", "(", "converted_bbox", ",", "expected", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_convert_bbox_from_albumentations": [[96, 113], ["pytest.mark.parametrize", "numpy.ones", "albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations", "numpy.all", "numpy.isclose"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"bbox\"", ",", "\"target_format\"", ",", "\"expected\"", "]", ",", "\n", "[", "\n", "(", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ")", ",", "\"coco\"", ",", "(", "20", ",", "30", ",", "40", ",", "50", ")", ")", ",", "\n", "(", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ",", "99", ")", ",", "\"coco\"", ",", "(", "20", ",", "30", ",", "40", ",", "50", ",", "99", ")", ")", ",", "\n", "(", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ")", ",", "\"pascal_voc\"", ",", "(", "20", ",", "30", ",", "60", ",", "80", ")", ")", ",", "\n", "(", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ",", "99", ")", ",", "\"pascal_voc\"", ",", "(", "20", ",", "30", ",", "60", ",", "80", ",", "99", ")", ")", ",", "\n", "(", "(", "0.00", ",", "0.05", ",", "0.40", ",", "0.55", ")", ",", "\"yolo\"", ",", "(", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ")", ")", ",", "\n", "(", "(", "0.00", ",", "0.05", ",", "0.40", ",", "0.55", ",", "99", ")", ",", "\"yolo\"", ",", "(", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "99", ")", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_convert_bbox_from_albumentations", "(", "bbox", ",", "target_format", ",", "expected", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "converted_bbox", "=", "convert_bbox_from_albumentations", "(", "\n", "bbox", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "target_format", "=", "target_format", "\n", ")", "\n", "assert", "np", ".", "all", "(", "np", ".", "isclose", "(", "converted_bbox", ",", "expected", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_convert_bbox_to_albumentations_and_back": [[115, 144], ["pytest.mark.parametrize", "numpy.ones", "albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations", "albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations", "numpy.all", "numpy.isclose"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"bbox\"", ",", "\"bbox_format\"", "]", ",", "\n", "[", "\n", "(", "(", "20", ",", "30", ",", "40", ",", "50", ")", ",", "\"coco\"", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "40", ",", "50", ",", "99", ")", ",", "\"coco\"", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "41", ",", "51", ",", "99", ")", ",", "\"coco\"", ")", ",", "\n", "(", "(", "21", ",", "31", ",", "40", ",", "50", ",", "99", ")", ",", "\"coco\"", ")", ",", "\n", "(", "(", "21", ",", "31", ",", "41", ",", "51", ",", "99", ")", ",", "\"coco\"", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "60", ",", "80", ")", ",", "\"pascal_voc\"", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "60", ",", "80", ",", "99", ")", ",", "\"pascal_voc\"", ")", ",", "\n", "(", "(", "20", ",", "30", ",", "61", ",", "81", ",", "99", ")", ",", "\"pascal_voc\"", ")", ",", "\n", "(", "(", "21", ",", "31", ",", "60", ",", "80", ",", "99", ")", ",", "\"pascal_voc\"", ")", ",", "\n", "(", "(", "21", ",", "31", ",", "61", ",", "81", ",", "99", ")", ",", "\"pascal_voc\"", ")", ",", "\n", "(", "(", "0.01", ",", "0.06", ",", "0.41", ",", "0.56", ")", ",", "\"yolo\"", ")", ",", "\n", "(", "(", "0.01", ",", "0.06", ",", "0.41", ",", "0.56", ",", "99", ")", ",", "\"yolo\"", ")", ",", "\n", "(", "(", "0.02", ",", "0.06", ",", "0.42", ",", "0.56", ",", "99", ")", ",", "\"yolo\"", ")", ",", "\n", "(", "(", "0.01", ",", "0.05", ",", "0.41", ",", "0.55", ",", "99", ")", ",", "\"yolo\"", ")", ",", "\n", "(", "(", "0.02", ",", "0.06", ",", "0.41", ",", "0.55", ",", "99", ")", ",", "\"yolo\"", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_convert_bbox_to_albumentations_and_back", "(", "bbox", ",", "bbox_format", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "converted_bbox", "=", "convert_bbox_to_albumentations", "(", "\n", "bbox", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "bbox_format", "\n", ")", "\n", "converted_back_bbox", "=", "convert_bbox_from_albumentations", "(", "\n", "converted_bbox", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "target_format", "=", "bbox_format", "\n", ")", "\n", "assert", "np", ".", "all", "(", "np", ".", "isclose", "(", "converted_back_bbox", ",", "bbox", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_convert_bboxes_to_albumentations": [[146, 159], ["numpy.ones", "albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations", "albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations", "albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations"], ["", "def", "test_convert_bboxes_to_albumentations", "(", ")", ":", "\n", "    ", "bboxes", "=", "[", "(", "20", ",", "30", ",", "40", ",", "50", ")", ",", "(", "30", ",", "40", ",", "50", ",", "60", ",", "99", ")", "]", "\n", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "converted_bboxes", "=", "convert_bboxes_to_albumentations", "(", "\n", "bboxes", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "\"coco\"", "\n", ")", "\n", "converted_bbox_1", "=", "convert_bbox_to_albumentations", "(", "\n", "bboxes", "[", "0", "]", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "\"coco\"", "\n", ")", "\n", "converted_bbox_2", "=", "convert_bbox_to_albumentations", "(", "\n", "bboxes", "[", "1", "]", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "\"coco\"", "\n", ")", "\n", "assert", "converted_bboxes", "==", "[", "converted_bbox_1", ",", "converted_bbox_2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_convert_bboxes_from_albumentations": [[161, 174], ["numpy.ones", "albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations", "albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations", "albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations"], ["", "def", "test_convert_bboxes_from_albumentations", "(", ")", ":", "\n", "    ", "bboxes", "=", "[", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ")", ",", "(", "0.3", ",", "0.4", ",", "0.7", ",", "0.9", ",", "99", ")", "]", "\n", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "converted_bboxes", "=", "convert_bboxes_to_albumentations", "(", "\n", "bboxes", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "\"coco\"", "\n", ")", "\n", "converted_bbox_1", "=", "convert_bbox_to_albumentations", "(", "\n", "bboxes", "[", "0", "]", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "\"coco\"", "\n", ")", "\n", "converted_bbox_2", "=", "convert_bbox_to_albumentations", "(", "\n", "bboxes", "[", "1", "]", ",", "rows", "=", "image", ".", "shape", "[", "0", "]", ",", "cols", "=", "image", ".", "shape", "[", "1", "]", ",", "source_format", "=", "\"coco\"", "\n", ")", "\n", "assert", "converted_bboxes", "==", "[", "converted_bbox_1", ",", "converted_bbox_2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_compose_with_bbox_noop": [[176, 197], ["pytest.mark.parametrize", "numpy.ones", "numpy.array_equal", "numpy.all", "albumentations.core.composition.Compose", "albumentations.core.composition.Compose.", "albumentations.core.composition.Compose", "albumentations.core.composition.Compose.", "numpy.isclose", "albumentations.core.transforms_interface.NoOp", "albumentations.core.transforms_interface.NoOp"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"bboxes\"", ",", "\"bbox_format\"", ",", "\"labels\"", "]", ",", "\n", "[", "\n", "(", "[", "(", "20", ",", "30", ",", "40", ",", "50", ")", "]", ",", "\"coco\"", ",", "[", "1", "]", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "40", ",", "50", ",", "99", ")", ",", "(", "10", ",", "40", ",", "30", ",", "20", ",", "9", ")", "]", ",", "\"coco\"", ",", "None", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ")", "]", ",", "\"pascal_voc\"", ",", "[", "2", "]", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ",", "99", ")", "]", ",", "\"pascal_voc\"", ",", "None", ")", ",", "\n", "(", "[", "(", "0.1", ",", "0.2", ",", "0.1", ",", "0.2", ")", "]", ",", "\"yolo\"", ",", "[", "2", "]", ")", ",", "\n", "(", "[", "(", "0.1", ",", "0.2", ",", "0.1", ",", "0.2", ",", "99", ")", "]", ",", "\"yolo\"", ",", "None", ")", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_compose_with_bbox_noop", "(", "bboxes", ",", "bbox_format", ",", "labels", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "if", "labels", "is", "not", "None", ":", "\n", "        ", "aug", "=", "Compose", "(", "[", "NoOp", "(", "p", "=", "1.0", ")", "]", ",", "bbox_params", "=", "{", "\"format\"", ":", "bbox_format", ",", "\"label_fields\"", ":", "[", "\"labels\"", "]", "}", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ",", "labels", "=", "labels", ")", "\n", "", "else", ":", "\n", "        ", "aug", "=", "Compose", "(", "[", "NoOp", "(", "p", "=", "1.0", ")", "]", ",", "bbox_params", "=", "{", "\"format\"", ":", "bbox_format", "}", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ")", "\n", "", "assert", "np", ".", "array_equal", "(", "transformed", "[", "\"image\"", "]", ",", "image", ")", "\n", "assert", "np", ".", "all", "(", "np", ".", "isclose", "(", "transformed", "[", "\"bboxes\"", "]", ",", "bboxes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_compose_with_bbox_noop_error_label_fields": [[199, 205], ["pytest.mark.parametrize", "numpy.ones", "albumentations.core.composition.Compose", "pytest.raises", "albumentations.core.composition.Compose.", "albumentations.core.transforms_interface.NoOp"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"bboxes\"", ",", "\"bbox_format\"", "]", ",", "[", "[", "[", "[", "20", ",", "30", ",", "40", ",", "50", "]", "]", ",", "\"coco\"", "]", "]", ")", "\n", "def", "test_compose_with_bbox_noop_error_label_fields", "(", "bboxes", ",", "bbox_format", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "aug", "=", "Compose", "(", "[", "NoOp", "(", "p", "=", "1.0", ")", "]", ",", "bbox_params", "=", "{", "\"format\"", ":", "bbox_format", "}", ")", "\n", "with", "pytest", ".", "raises", "(", "Exception", ")", ":", "\n", "        ", "aug", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_compose_with_bbox_noop_label_outside": [[207, 228], ["pytest.mark.parametrize", "numpy.ones", "albumentations.core.composition.Compose", "albumentations.core.composition.Compose.", "numpy.array_equal", "labels.items", "albumentations.core.transforms_interface.NoOp", "list", "labels.keys"], "function", ["None"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"bboxes\"", ",", "\"bbox_format\"", ",", "\"labels\"", "]", ",", "\n", "[", "\n", "[", "[", "(", "20", ",", "30", ",", "60", ",", "80", ")", "]", ",", "\"pascal_voc\"", ",", "{", "\"label\"", ":", "[", "1", "]", "}", "]", ",", "\n", "[", "[", "]", ",", "\"pascal_voc\"", ",", "{", "}", "]", ",", "\n", "[", "[", "]", ",", "\"pascal_voc\"", ",", "{", "\"label\"", ":", "[", "]", "}", "]", ",", "\n", "[", "[", "(", "20", ",", "30", ",", "60", ",", "80", ")", "]", ",", "\"pascal_voc\"", ",", "{", "\"id\"", ":", "[", "3", "]", "}", "]", ",", "\n", "[", "[", "(", "20", ",", "30", ",", "60", ",", "80", ")", ",", "(", "30", ",", "40", ",", "40", ",", "50", ")", "]", ",", "\"pascal_voc\"", ",", "{", "\"id\"", ":", "[", "3", ",", "1", "]", "}", "]", ",", "\n", "[", "[", "(", "20", ",", "30", ",", "60", ",", "80", ",", "1", ",", "11", ")", ",", "(", "30", ",", "40", ",", "40", ",", "50", ",", "2", ",", "22", ")", "]", ",", "\"pascal_voc\"", ",", "{", "\"id\"", ":", "[", "3", ",", "1", "]", "}", "]", ",", "\n", "[", "[", "(", "20", ",", "30", ",", "60", ",", "80", ",", "1", ",", "11", ")", ",", "(", "30", ",", "40", ",", "40", ",", "50", ",", "2", ",", "22", ")", "]", ",", "\"pascal_voc\"", ",", "{", "}", "]", ",", "\n", "[", "[", "(", "20", ",", "30", ",", "60", ",", "80", ",", "1", ",", "11", ")", ",", "(", "30", ",", "40", ",", "40", ",", "50", ",", "2", ",", "21", ")", "]", ",", "\"pascal_voc\"", ",", "{", "\"id\"", ":", "[", "31", ",", "32", "]", ",", "\"subclass\"", ":", "[", "311", ",", "321", "]", "}", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_compose_with_bbox_noop_label_outside", "(", "bboxes", ",", "bbox_format", ",", "labels", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "aug", "=", "Compose", "(", "[", "NoOp", "(", "p", "=", "1.0", ")", "]", ",", "bbox_params", "=", "{", "\"format\"", ":", "bbox_format", ",", "\"label_fields\"", ":", "list", "(", "labels", ".", "keys", "(", ")", ")", "}", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ",", "**", "labels", ")", "\n", "assert", "np", ".", "array_equal", "(", "transformed", "[", "\"image\"", "]", ",", "image", ")", "\n", "assert", "transformed", "[", "\"bboxes\"", "]", "==", "bboxes", "\n", "for", "k", ",", "v", "in", "labels", ".", "items", "(", ")", ":", "\n", "        ", "assert", "transformed", "[", "k", "]", "==", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_random_sized_crop_size": [[230, 237], ["numpy.ones", "albumentations.RandomSizedCrop", "albumentations.RandomSizedCrop.", "len", "len"], "function", ["None"], ["", "", "def", "test_random_sized_crop_size", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "bboxes", "=", "[", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ")", ",", "(", "0.3", ",", "0.4", ",", "0.7", ",", "0.9", ",", "99", ")", "]", "\n", "aug", "=", "RandomSizedCrop", "(", "min_max_height", "=", "(", "70", ",", "90", ")", ",", "height", "=", "50", ",", "width", "=", "50", ",", "p", "=", "1.0", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ")", "\n", "assert", "transformed", "[", "\"image\"", "]", ".", "shape", "==", "(", "50", ",", "50", ",", "3", ")", "\n", "assert", "len", "(", "bboxes", ")", "==", "len", "(", "transformed", "[", "\"bboxes\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_random_resized_crop_size": [[239, 246], ["numpy.ones", "albumentations.RandomResizedCrop", "albumentations.RandomResizedCrop.", "len", "len"], "function", ["None"], ["", "def", "test_random_resized_crop_size", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "100", ",", "100", ",", "3", ")", ")", "\n", "bboxes", "=", "[", "(", "0.2", ",", "0.3", ",", "0.6", ",", "0.8", ")", ",", "(", "0.3", ",", "0.4", ",", "0.7", ",", "0.9", ",", "99", ")", "]", "\n", "aug", "=", "RandomResizedCrop", "(", "height", "=", "50", ",", "width", "=", "50", ",", "p", "=", "1.0", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ")", "\n", "assert", "transformed", "[", "\"image\"", "]", ".", "shape", "==", "(", "50", ",", "50", ",", "3", ")", "\n", "assert", "len", "(", "bboxes", ")", "==", "len", "(", "transformed", "[", "\"bboxes\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_random_rotate": [[248, 254], ["numpy.ones", "albumentations.Rotate", "albumentations.Rotate.", "len", "len"], "function", ["None"], ["", "def", "test_random_rotate", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "192", ",", "192", ",", "3", ")", ")", "\n", "bboxes", "=", "[", "(", "78", ",", "42", ",", "142", ",", "80", ")", "]", "\n", "aug", "=", "Rotate", "(", "limit", "=", "15", ",", "p", "=", "1.0", ")", "\n", "transformed", "=", "aug", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ")", "\n", "assert", "len", "(", "bboxes", ")", "==", "len", "(", "transformed", "[", "\"bboxes\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_bbox.test_crop_boxes_replay_compose": [[256, 270], ["numpy.ones", "albumentations.core.composition.ReplayCompose", "dict", "albumentations.core.composition.ReplayCompose.", "albumentations.core.composition.ReplayCompose.replay", "numpy.testing.assert_almost_equal", "albumentations.RandomCrop", "albumentations.core.composition.BboxParams"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.replay"], ["", "def", "test_crop_boxes_replay_compose", "(", ")", ":", "\n", "    ", "image", "=", "np", ".", "ones", "(", "(", "512", ",", "384", ",", "3", ")", ")", "\n", "bboxes", "=", "[", "(", "78", ",", "42", ",", "142", ",", "80", ")", ",", "(", "32", ",", "12", ",", "42", ",", "72", ")", ",", "(", "200", ",", "100", ",", "300", ",", "200", ")", "]", "\n", "labels", "=", "[", "0", ",", "1", ",", "2", "]", "\n", "transform", "=", "ReplayCompose", "(", "\n", "[", "RandomCrop", "(", "256", ",", "256", ",", "p", "=", "1.0", ")", "]", ",", "\n", "bbox_params", "=", "BboxParams", "(", "format", "=", "\"pascal_voc\"", ",", "min_area", "=", "16", ",", "label_fields", "=", "[", "\"labels\"", "]", ")", ",", "\n", ")", "\n", "\n", "input_data", "=", "dict", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ",", "labels", "=", "labels", ")", "\n", "transformed", "=", "transform", "(", "**", "input_data", ")", "\n", "transformed2", "=", "ReplayCompose", ".", "replay", "(", "transformed", "[", "\"replay\"", "]", ",", "**", "input_data", ")", "\n", "\n", "np", ".", "testing", ".", "assert_almost_equal", "(", "transformed", "[", "\"bboxes\"", "]", ",", "transformed2", "[", "\"bboxes\"", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_augmentations_serialization": [[28, 65], ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "augmentation_cls", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "augmentation_cls.", "utils.set_seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal", "utils.get_transforms"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms"], ["@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ",", "\n", "A", ".", "FDA", ",", "\n", "A", ".", "HistogramMatching", ",", "\n", "A", ".", "PixelDistributionAdaptation", ",", "\n", "A", ".", "Lambda", ",", "\n", "A", ".", "TemplateTransform", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "0.5", ",", "1", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"always_apply\"", ",", "(", "False", ",", "True", ")", ")", "\n", "def", "test_augmentations_serialization", "(", "augmentation_cls", ",", "params", ",", "p", ",", "seed", ",", "image", ",", "mask", ",", "always_apply", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "p", ",", "always_apply", "=", "always_apply", ",", "**", "params", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"mask\"", "]", ",", "deserialized_aug_data", "[", "\"mask\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_augmentations_serialization_with_custom_parameters": [[336, 354], ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "augmentation_cls", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "augmentation_cls.", "utils.set_seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal", "utils.check_all_augs_exists"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.check_all_augs_exists"], ["@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "check_all_augs_exists", "(", "AUGMENTATION_CLS_PARAMS", ",", "AUGMENTATION_CLS_EXCEPT", ")", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "0.5", ",", "1", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"always_apply\"", ",", "(", "False", ",", "True", ")", ")", "\n", "def", "test_augmentations_serialization_with_custom_parameters", "(", "\n", "augmentation_cls", ",", "params", ",", "p", ",", "seed", ",", "image", ",", "mask", ",", "always_apply", "\n", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "p", ",", "always_apply", "=", "always_apply", ",", "**", "params", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"mask\"", "]", ",", "deserialized_aug_data", "[", "\"mask\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_augmentations_serialization_to_file_with_custom_parameters": [[356, 377], ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "utils.check_all_augs_exists", "unittest.mock.patch", "augmentation_cls", "albumentations.save", "albumentations.load", "utils.set_seed", "augmentation_cls.", "utils.set_seed", "A.load.", "numpy.array_equal", "numpy.array_equal", "utils.OpenMock"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.check_all_augs_exists", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.save", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.load", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "check_all_augs_exists", "(", "AUGMENTATION_CLS_PARAMS", ",", "AUGMENTATION_CLS_EXCEPT", ")", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "0.5", ",", "1", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"always_apply\"", ",", "(", "False", ",", "True", ")", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"data_format\"", ",", "(", "\"yaml\"", ",", ")", ")", "\n", "def", "test_augmentations_serialization_to_file_with_custom_parameters", "(", "\n", "augmentation_cls", ",", "params", ",", "p", ",", "seed", ",", "image", ",", "mask", ",", "always_apply", ",", "data_format", "\n", ")", ":", "\n", "    ", "with", "patch", "(", "\"builtins.open\"", ",", "OpenMock", "(", ")", ")", ":", "\n", "        ", "aug", "=", "augmentation_cls", "(", "p", "=", "p", ",", "always_apply", "=", "always_apply", ",", "**", "params", ")", "\n", "filepath", "=", "\"serialized.{}\"", ".", "format", "(", "data_format", ")", "\n", "A", ".", "save", "(", "aug", ",", "filepath", ",", "data_format", "=", "data_format", ")", "\n", "deserialized_aug", "=", "A", ".", "load", "(", "filepath", ",", "data_format", "=", "data_format", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"mask\"", "]", ",", "deserialized_aug_data", "[", "\"mask\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_augmentations_for_bboxes_serialization": [[379, 426], ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "augmentation_cls", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "augmentation_cls.", "utils.set_seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal", "utils.get_transforms"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "FDA", ",", "\n", "A", ".", "HistogramMatching", ",", "\n", "A", ".", "PixelDistributionAdaptation", ",", "\n", "A", ".", "Lambda", ",", "\n", "A", ".", "CoarseDropout", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ",", "\n", "A", ".", "ElasticTransform", ",", "\n", "A", ".", "GridDistortion", ",", "\n", "A", ".", "RandomGridShuffle", ",", "\n", "A", ".", "GridDropout", ",", "\n", "A", ".", "MaskDropout", ",", "\n", "A", ".", "OpticalDistortion", ",", "\n", "A", ".", "TemplateTransform", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "0.5", ",", "1", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"always_apply\"", ",", "(", "False", ",", "True", ")", ")", "\n", "def", "test_augmentations_for_bboxes_serialization", "(", "\n", "augmentation_cls", ",", "params", ",", "p", ",", "seed", ",", "image", ",", "albumentations_bboxes", ",", "always_apply", "\n", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "p", ",", "always_apply", "=", "always_apply", ",", "**", "params", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "bboxes", "=", "albumentations_bboxes", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "bboxes", "=", "albumentations_bboxes", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"bboxes\"", "]", ",", "deserialized_aug_data", "[", "\"bboxes\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_augmentations_for_keypoints_serialization": [[428, 473], ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "augmentation_cls", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "augmentation_cls.", "utils.set_seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal", "utils.get_transforms"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "FDA", ",", "\n", "A", ".", "HistogramMatching", ",", "\n", "A", ".", "PixelDistributionAdaptation", ",", "\n", "A", ".", "Lambda", ",", "\n", "A", ".", "CoarseDropout", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ",", "\n", "A", ".", "ElasticTransform", ",", "\n", "A", ".", "GridDistortion", ",", "\n", "A", ".", "RandomGridShuffle", ",", "\n", "A", ".", "GridDropout", ",", "\n", "A", ".", "MaskDropout", ",", "\n", "A", ".", "OpticalDistortion", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ",", "\n", "A", ".", "TemplateTransform", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "0.5", ",", "1", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"always_apply\"", ",", "(", "False", ",", "True", ")", ")", "\n", "def", "test_augmentations_for_keypoints_serialization", "(", "augmentation_cls", ",", "params", ",", "p", ",", "seed", ",", "image", ",", "keypoints", ",", "always_apply", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "p", ",", "always_apply", "=", "always_apply", ",", "**", "params", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"keypoints\"", "]", ",", "deserialized_aug_data", "[", "\"keypoints\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_augmentations_serialization_with_call_params": [[475, 494], ["pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "pytest.mark.parametrize", "augmentation_cls", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "augmentation_cls.", "utils.set_seed", "A.from_dict.", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", ",", "\"call_params\"", "]", ",", "\n", "[", "[", "A", ".", "RandomCropNearBBox", ",", "{", "\"max_part_shift\"", ":", "0.15", "}", ",", "{", "\"cropping_bbox\"", ":", "[", "-", "59", ",", "77", ",", "177", ",", "231", "]", "}", "]", "]", ",", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "0.5", ",", "1", "]", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"always_apply\"", ",", "(", "False", ",", "True", ")", ")", "\n", "def", "test_augmentations_serialization_with_call_params", "(", "\n", "augmentation_cls", ",", "params", ",", "call_params", ",", "p", ",", "seed", ",", "image", ",", "always_apply", "\n", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "p", ",", "always_apply", "=", "always_apply", ",", "**", "params", ")", "\n", "annotations", "=", "{", "\"image\"", ":", "image", ",", "**", "call_params", "}", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "**", "annotations", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "**", "annotations", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_from_float_serialization": [[496, 503], ["albumentations.FromFloat", "albumentations.to_dict", "albumentations.from_dict", "A.FromFloat.", "A.from_dict.", "numpy.array_equal"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict"], ["", "def", "test_from_float_serialization", "(", "float_image", ")", ":", "\n", "    ", "aug", "=", "A", ".", "FromFloat", "(", "p", "=", "1", ",", "dtype", "=", "\"uint8\"", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "float_image", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "float_image", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_transform_pipeline_serialization": [[505, 550], ["pytest.mark.parametrize", "albumentations.Compose", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "A.Compose.", "utils.set_seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal", "albumentations.OneOrOther", "albumentations.SomeOf", "albumentations.Compose", "albumentations.Compose", "albumentations.HorizontalFlip", "albumentations.Transpose", "albumentations.HueSaturationValue", "albumentations.RandomBrightnessContrast", "albumentations.Resize", "albumentations.RandomSizedCrop", "albumentations.OneOf", "albumentations.Resize", "albumentations.RandomSizedCrop", "albumentations.OneOf", "albumentations.RandomSizedCrop", "albumentations.RandomSizedCrop", "albumentations.HueSaturationValue", "albumentations.RGBShift"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "def", "test_transform_pipeline_serialization", "(", "seed", ",", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "OneOrOther", "(", "\n", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "Resize", "(", "1024", ",", "1024", ")", ",", "\n", "A", ".", "RandomSizedCrop", "(", "min_max_height", "=", "(", "256", ",", "1024", ")", ",", "height", "=", "512", ",", "width", "=", "512", ",", "p", "=", "1", ")", ",", "\n", "A", ".", "OneOf", "(", "\n", "[", "\n", "A", ".", "RandomSizedCrop", "(", "min_max_height", "=", "(", "256", ",", "512", ")", ",", "height", "=", "384", ",", "width", "=", "384", ",", "p", "=", "0.5", ")", ",", "\n", "A", ".", "RandomSizedCrop", "(", "min_max_height", "=", "(", "256", ",", "512", ")", ",", "height", "=", "512", ",", "width", "=", "512", ",", "p", "=", "0.5", ")", ",", "\n", "]", "\n", ")", ",", "\n", "]", "\n", ")", ",", "\n", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "Resize", "(", "1024", ",", "1024", ")", ",", "\n", "A", ".", "RandomSizedCrop", "(", "min_max_height", "=", "(", "256", ",", "1025", ")", ",", "height", "=", "256", ",", "width", "=", "256", ",", "p", "=", "1", ")", ",", "\n", "A", ".", "OneOf", "(", "[", "A", ".", "HueSaturationValue", "(", "p", "=", "0.5", ")", ",", "A", ".", "RGBShift", "(", "p", "=", "0.7", ")", "]", ",", "p", "=", "1", ")", ",", "\n", "]", "\n", ")", ",", "\n", ")", ",", "\n", "A", ".", "SomeOf", "(", "\n", "[", "\n", "A", ".", "HorizontalFlip", "(", "p", "=", "1", ")", ",", "\n", "A", ".", "Transpose", "(", "p", "=", "1", ")", ",", "\n", "A", ".", "HueSaturationValue", "(", "p", "=", "0.5", ")", ",", "\n", "A", ".", "RandomBrightnessContrast", "(", "p", "=", "0.5", ")", ",", "\n", "]", ",", "\n", "2", ",", "\n", "replace", "=", "False", ",", "\n", ")", ",", "\n", "]", "\n", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"mask\"", "]", ",", "deserialized_aug_data", "[", "\"mask\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_transform_pipeline_serialization_with_bboxes": [[552, 591], ["pytest.mark.parametrize", "pytest.mark.parametrize", "albumentations.Compose", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "A.Compose.", "utils.set_seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal", "albumentations.OneOrOther", "albumentations.SomeOf", "albumentations.Compose", "albumentations.Compose", "albumentations.HorizontalFlip", "albumentations.Transpose", "albumentations.HueSaturationValue", "albumentations.RandomBrightnessContrast", "albumentations.RandomRotate90", "albumentations.OneOf", "albumentations.Rotate", "albumentations.OneOf", "albumentations.HorizontalFlip", "albumentations.VerticalFlip", "albumentations.HueSaturationValue", "albumentations.RGBShift"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"bboxes\"", ",", "\"bbox_format\"", ",", "\"labels\"", "]", ",", "\n", "[", "\n", "(", "[", "(", "20", ",", "30", ",", "40", ",", "50", ")", "]", ",", "\"coco\"", ",", "[", "1", "]", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "40", ",", "50", ",", "99", ")", ",", "(", "10", ",", "40", ",", "30", ",", "20", ",", "9", ")", "]", ",", "\"coco\"", ",", "[", "1", ",", "2", "]", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ")", "]", ",", "\"pascal_voc\"", ",", "[", "2", "]", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ",", "99", ")", "]", ",", "\"pascal_voc\"", ",", "[", "1", "]", ")", ",", "\n", "(", "[", "(", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ")", "]", ",", "\"yolo\"", ",", "[", "2", "]", ")", ",", "\n", "(", "[", "(", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "99", ")", "]", ",", "\"yolo\"", ",", "[", "1", "]", ")", ",", "\n", "]", ",", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "def", "test_transform_pipeline_serialization_with_bboxes", "(", "seed", ",", "image", ",", "bboxes", ",", "bbox_format", ",", "labels", ")", ":", "\n", "    ", "aug", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "OneOrOther", "(", "\n", "A", ".", "Compose", "(", "[", "A", ".", "RandomRotate90", "(", ")", ",", "A", ".", "OneOf", "(", "[", "A", ".", "HorizontalFlip", "(", "p", "=", "0.5", ")", ",", "A", ".", "VerticalFlip", "(", "p", "=", "0.5", ")", "]", ")", "]", ")", ",", "\n", "A", ".", "Compose", "(", "[", "A", ".", "Rotate", "(", "p", "=", "0.5", ")", ",", "A", ".", "OneOf", "(", "[", "A", ".", "HueSaturationValue", "(", "p", "=", "0.5", ")", ",", "A", ".", "RGBShift", "(", "p", "=", "0.7", ")", "]", ",", "p", "=", "1", ")", "]", ")", ",", "\n", ")", ",", "\n", "A", ".", "SomeOf", "(", "\n", "[", "\n", "A", ".", "HorizontalFlip", "(", "p", "=", "1", ")", ",", "\n", "A", ".", "Transpose", "(", "p", "=", "1", ")", ",", "\n", "A", ".", "HueSaturationValue", "(", "p", "=", "0.5", ")", ",", "\n", "A", ".", "RandomBrightnessContrast", "(", "p", "=", "0.5", ")", ",", "\n", "]", ",", "\n", "n", "=", "5", ",", "\n", ")", ",", "\n", "]", ",", "\n", "bbox_params", "=", "{", "\"format\"", ":", "bbox_format", ",", "\"label_fields\"", ":", "[", "\"labels\"", "]", "}", ",", "\n", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ",", "labels", "=", "labels", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "bboxes", "=", "bboxes", ",", "labels", "=", "labels", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"bboxes\"", "]", ",", "deserialized_aug_data", "[", "\"bboxes\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_transform_pipeline_serialization_with_keypoints": [[593, 631], ["pytest.mark.parametrize", "pytest.mark.parametrize", "albumentations.Compose", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "A.Compose.", "utils.set_seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal", "albumentations.OneOrOther", "albumentations.SomeOf", "albumentations.Compose", "albumentations.Compose", "albumentations.RandomRotate90", "albumentations.OneOf", "albumentations.Rotate", "albumentations.OneOf", "albumentations.HorizontalFlip", "albumentations.Transpose", "albumentations.HueSaturationValue", "albumentations.RandomBrightnessContrast", "albumentations.HorizontalFlip", "albumentations.VerticalFlip", "albumentations.HueSaturationValue", "albumentations.RGBShift"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"keypoints\"", ",", "\"keypoint_format\"", ",", "\"labels\"", "]", ",", "\n", "[", "\n", "(", "[", "(", "20", ",", "30", ",", "40", ",", "50", ")", "]", ",", "\"xyas\"", ",", "[", "1", "]", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "40", ",", "50", ",", "99", ")", ",", "(", "10", ",", "40", ",", "30", ",", "20", ",", "9", ")", "]", ",", "\"xy\"", ",", "[", "1", ",", "2", "]", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ")", "]", ",", "\"yx\"", ",", "[", "2", "]", ")", ",", "\n", "(", "[", "(", "20", ",", "30", ",", "60", ",", "80", ",", "99", ")", "]", ",", "\"xys\"", ",", "[", "1", "]", ")", ",", "\n", "]", ",", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "def", "test_transform_pipeline_serialization_with_keypoints", "(", "seed", ",", "image", ",", "keypoints", ",", "keypoint_format", ",", "labels", ")", ":", "\n", "    ", "aug", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "OneOrOther", "(", "\n", "A", ".", "Compose", "(", "[", "A", ".", "RandomRotate90", "(", ")", ",", "A", ".", "OneOf", "(", "[", "A", ".", "HorizontalFlip", "(", "p", "=", "0.5", ")", ",", "A", ".", "VerticalFlip", "(", "p", "=", "0.5", ")", "]", ")", "]", ")", ",", "\n", "A", ".", "Compose", "(", "[", "A", ".", "Rotate", "(", "p", "=", "0.5", ")", ",", "A", ".", "OneOf", "(", "[", "A", ".", "HueSaturationValue", "(", "p", "=", "0.5", ")", ",", "A", ".", "RGBShift", "(", "p", "=", "0.7", ")", "]", ",", "p", "=", "1", ")", "]", ")", ",", "\n", ")", ",", "\n", "A", ".", "SomeOf", "(", "\n", "n", "=", "2", ",", "\n", "transforms", "=", "[", "\n", "A", ".", "HorizontalFlip", "(", "p", "=", "1", ")", ",", "\n", "A", ".", "Transpose", "(", "p", "=", "1", ")", ",", "\n", "A", ".", "HueSaturationValue", "(", "p", "=", "0.5", ")", ",", "\n", "A", ".", "RandomBrightnessContrast", "(", "p", "=", "0.5", ")", ",", "\n", "]", ",", "\n", "replace", "=", "False", ",", "\n", ")", ",", "\n", "]", ",", "\n", "keypoint_params", "=", "{", "\"format\"", ":", "keypoint_format", ",", "\"label_fields\"", ":", "[", "\"labels\"", "]", "}", ",", "\n", ")", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ",", "labels", "=", "labels", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ",", "labels", "=", "labels", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"keypoints\"", "]", ",", "deserialized_aug_data", "[", "\"keypoints\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_additional_targets_for_image_only_serialization": [[633, 652], ["pytest.mark.parametrize", "pytest.mark.parametrize", "albumentations.Compose", "image.copy", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "A.Compose.", "utils.set_seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal", "utils.get_image_only_transforms", "augmentation_cls"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_image_only_transforms"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_image_only_transforms", "(", "\n", "except_augmentations", "=", "{", "A", ".", "HistogramMatching", ",", "A", ".", "FDA", ",", "A", ".", "PixelDistributionAdaptation", ",", "A", ".", "TemplateTransform", "}", ",", "\n", ")", ",", "\n", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "def", "test_additional_targets_for_image_only_serialization", "(", "augmentation_cls", ",", "params", ",", "image", ",", "seed", ")", ":", "\n", "    ", "aug", "=", "A", ".", "Compose", "(", "[", "augmentation_cls", "(", "always_apply", "=", "True", ",", "**", "params", ")", "]", ",", "additional_targets", "=", "{", "\"image2\"", ":", "\"image\"", "}", ")", "\n", "image2", "=", "image", ".", "copy", "(", ")", "\n", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "image2", "=", "image2", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "image2", "=", "image2", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image2\"", "]", ",", "deserialized_aug_data", "[", "\"image2\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_lambda_serialization": [[654, 681], ["pytest.mark.parametrize", "pytest.mark.parametrize", "albumentations.Lambda", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "A.Lambda.", "utils.set_seed", "A.from_dict.", "numpy.array_equal", "numpy.array_equal", "numpy.array_equal", "numpy.array_equal", "albumentations.vflip", "albumentations.vflip", "albumentations.bbox_vflip", "albumentations.keypoint_vflip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.bbox_vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.keypoint_vflip"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "1", "]", ")", "\n", "def", "test_lambda_serialization", "(", "image", ",", "mask", ",", "albumentations_bboxes", ",", "keypoints", ",", "seed", ",", "p", ")", ":", "\n", "    ", "def", "vflip_image", "(", "image", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "F", ".", "vflip", "(", "image", ")", "\n", "\n", "", "def", "vflip_mask", "(", "mask", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "F", ".", "vflip", "(", "mask", ")", "\n", "\n", "", "def", "vflip_bbox", "(", "bbox", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "F", ".", "bbox_vflip", "(", "bbox", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "vflip_keypoint", "(", "keypoint", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "F", ".", "keypoint_vflip", "(", "keypoint", ",", "**", "kwargs", ")", "\n", "\n", "", "aug", "=", "A", ".", "Lambda", "(", "name", "=", "\"vflip\"", ",", "image", "=", "vflip_image", ",", "mask", "=", "vflip_mask", ",", "bbox", "=", "vflip_bbox", ",", "keypoint", "=", "vflip_keypoint", ",", "p", "=", "p", ")", "\n", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ",", "lambda_transforms", "=", "{", "\"vflip\"", ":", "aug", "}", ")", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ",", "bboxes", "=", "albumentations_bboxes", ",", "keypoints", "=", "keypoints", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ",", "bboxes", "=", "albumentations_bboxes", ",", "keypoints", "=", "keypoints", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"mask\"", "]", ",", "deserialized_aug_data", "[", "\"mask\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"bboxes\"", "]", ",", "deserialized_aug_data", "[", "\"bboxes\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"keypoints\"", "]", ",", "deserialized_aug_data", "[", "\"keypoints\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_serialization_v2_conversion_without_totensor": [[683, 694], ["os.path.dirname", "os.path.join", "albumentations.load", "numpy.random.seed", "numpy.random.randint", "random.seed", "os.path.abspath", "os.path.join", "open", "json.load", "A.load.", "transformed_image.tolist", "os.path.join"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.load", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.load"], ["", "def", "test_serialization_v2_conversion_without_totensor", "(", ")", ":", "\n", "    ", "current_directory", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "files_directory", "=", "os", ".", "path", ".", "join", "(", "current_directory", ",", "\"files\"", ")", "\n", "transform_1_1_0", "=", "A", ".", "load", "(", "os", ".", "path", ".", "join", "(", "files_directory", ",", "\"transform_v1.1.0_without_totensor.json\"", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "files_directory", ",", "\"output_v1.1.0_without_totensor.json\"", ")", ")", "as", "f", ":", "\n", "        ", "output_1_1_0", "=", "json", ".", "load", "(", "f", ")", "\n", "", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "255", ",", "size", "=", "(", "256", ",", "256", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "random", ".", "seed", "(", "42", ")", "\n", "transformed_image", "=", "transform_1_1_0", "(", "image", "=", "image", ")", "[", "\"image\"", "]", "\n", "assert", "transformed_image", ".", "tolist", "(", ")", "==", "output_1_1_0", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_serialization_v2_conversion_with_totensor": [[696, 708], ["os.path.dirname", "os.path.join", "albumentations.load", "numpy.random.seed", "numpy.random.randint", "random.seed", "os.path.abspath", "os.path.join", "open", "json.load", "A.load.", "transformed_image.numpy().tolist", "os.path.join", "transformed_image.numpy"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.load", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.load"], ["", "@", "skipif_no_torch", "\n", "def", "test_serialization_v2_conversion_with_totensor", "(", ")", ":", "\n", "    ", "current_directory", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "files_directory", "=", "os", ".", "path", ".", "join", "(", "current_directory", ",", "\"files\"", ")", "\n", "transform_1_1_0", "=", "A", ".", "load", "(", "os", ".", "path", ".", "join", "(", "files_directory", ",", "\"transform_v1.1.0_with_totensor.json\"", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "files_directory", ",", "\"output_v1.1.0_with_totensor.json\"", ")", ")", "as", "f", ":", "\n", "        ", "output_1_1_0", "=", "json", ".", "load", "(", "f", ")", "\n", "", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "255", ",", "size", "=", "(", "256", ",", "256", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "random", ".", "seed", "(", "42", ")", "\n", "transformed_image", "=", "transform_1_1_0", "(", "image", "=", "image", ")", "[", "\"image\"", "]", "\n", "assert", "transformed_image", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "==", "output_1_1_0", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_serialization_v2_without_totensor": [[710, 721], ["os.path.dirname", "os.path.join", "albumentations.load", "numpy.random.seed", "numpy.random.randint", "random.seed", "os.path.abspath", "os.path.join", "open", "json.load", "A.load.", "transformed_image.tolist", "os.path.join"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.load", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.load"], ["", "def", "test_serialization_v2_without_totensor", "(", ")", ":", "\n", "    ", "current_directory", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "files_directory", "=", "os", ".", "path", ".", "join", "(", "current_directory", ",", "\"files\"", ")", "\n", "transform", "=", "A", ".", "load", "(", "os", ".", "path", ".", "join", "(", "files_directory", ",", "\"transform_serialization_v2_without_totensor.json\"", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "files_directory", ",", "\"output_v1.1.0_without_totensor.json\"", ")", ")", "as", "f", ":", "\n", "        ", "output_1_1_0", "=", "json", ".", "load", "(", "f", ")", "\n", "", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "255", ",", "size", "=", "(", "256", ",", "256", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "random", ".", "seed", "(", "42", ")", "\n", "transformed_image", "=", "transform", "(", "image", "=", "image", ")", "[", "\"image\"", "]", "\n", "assert", "transformed_image", ".", "tolist", "(", ")", "==", "output_1_1_0", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_serialization_v2_with_totensor": [[723, 735], ["os.path.dirname", "os.path.join", "albumentations.load", "numpy.random.seed", "numpy.random.randint", "random.seed", "os.path.abspath", "os.path.join", "open", "json.load", "A.load.", "transformed_image.numpy().tolist", "os.path.join", "transformed_image.numpy"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.load", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.load"], ["", "@", "skipif_no_torch", "\n", "def", "test_serialization_v2_with_totensor", "(", ")", ":", "\n", "    ", "current_directory", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "files_directory", "=", "os", ".", "path", ".", "join", "(", "current_directory", ",", "\"files\"", ")", "\n", "transform", "=", "A", ".", "load", "(", "os", ".", "path", ".", "join", "(", "files_directory", ",", "\"transform_serialization_v2_with_totensor.json\"", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "files_directory", ",", "\"output_v1.1.0_with_totensor.json\"", ")", ")", "as", "f", ":", "\n", "        ", "output_1_1_0", "=", "json", ".", "load", "(", "f", ")", "\n", "", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "255", ",", "size", "=", "(", "256", ",", "256", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "random", ".", "seed", "(", "42", ")", "\n", "transformed_image", "=", "transform", "(", "image", "=", "image", ")", "[", "\"image\"", "]", "\n", "assert", "transformed_image", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "==", "output_1_1_0", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_custom_transform_with_overlapping_name": [[737, 743], ["None"], "function", ["None"], ["", "def", "test_custom_transform_with_overlapping_name", "(", ")", ":", "\n", "    ", "class", "HorizontalFlip", "(", "ImageOnlyTransform", ")", ":", "\n", "        ", "pass", "\n", "\n", "", "assert", "SERIALIZABLE_REGISTRY", "[", "\"HorizontalFlip\"", "]", "==", "A", ".", "HorizontalFlip", "\n", "assert", "SERIALIZABLE_REGISTRY", "[", "\"tests.test_serialization.HorizontalFlip\"", "]", "==", "HorizontalFlip", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_serialization_v2_to_dict": [[745, 755], ["albumentations.Compose", "albumentations.to_dict", "albumentations.HorizontalFlip"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict"], ["", "def", "test_serialization_v2_to_dict", "(", ")", ":", "\n", "    ", "transform", "=", "A", ".", "Compose", "(", "[", "A", ".", "HorizontalFlip", "(", ")", "]", ")", "\n", "transform_dict", "=", "A", ".", "to_dict", "(", "transform", ")", "[", "\"transform\"", "]", "\n", "assert", "transform_dict", "==", "{", "\n", "\"__class_fullname__\"", ":", "\"Compose\"", ",", "\n", "\"p\"", ":", "1.0", ",", "\n", "\"transforms\"", ":", "[", "{", "\"__class_fullname__\"", ":", "\"HorizontalFlip\"", ",", "\"always_apply\"", ":", "False", ",", "\"p\"", ":", "0.5", "}", "]", ",", "\n", "\"bbox_params\"", ":", "None", ",", "\n", "\"keypoint_params\"", ":", "None", ",", "\n", "\"additional_targets\"", ":", "{", "}", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_shorten_class_name": [[758, 768], ["pytest.mark.parametrize", "albumentations.core.serialization.shorten_class_name"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.shorten_class_name"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"class_fullname\"", ",", "\"expected_short_class_name\"", "]", ",", "\n", "[", "\n", "[", "\"albumentations.augmentations.transforms.HorizontalFlip\"", ",", "\"HorizontalFlip\"", "]", ",", "\n", "[", "\"HorizontalFlip\"", ",", "\"HorizontalFlip\"", "]", ",", "\n", "[", "\"some_module.HorizontalFlip\"", ",", "\"some_module.HorizontalFlip\"", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_shorten_class_name", "(", "class_fullname", ",", "expected_short_class_name", ")", ":", "\n", "    ", "assert", "shorten_class_name", "(", "class_fullname", ")", "==", "expected_short_class_name", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_serialization.test_template_transform_serialization": [[770, 786], ["pytest.mark.parametrize", "pytest.mark.parametrize", "albumentations.TemplateTransform", "albumentations.Compose", "albumentations.to_dict", "albumentations.from_dict", "utils.set_seed", "A.Compose.", "utils.set_seed", "A.from_dict.", "numpy.array_equal", "albumentations.Flip", "albumentations.Blur"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.serialization.to_dict", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"seed\"", ",", "TEST_SEEDS", ")", "\n", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"p\"", ",", "[", "1", "]", ")", "\n", "def", "test_template_transform_serialization", "(", "image", ",", "template", ",", "seed", ",", "p", ")", ":", "\n", "    ", "template_transform", "=", "A", ".", "TemplateTransform", "(", "name", "=", "\"template\"", ",", "templates", "=", "template", ",", "p", "=", "p", ")", "\n", "\n", "aug", "=", "A", ".", "Compose", "(", "[", "A", ".", "Flip", "(", ")", ",", "template_transform", ",", "A", ".", "Blur", "(", ")", "]", ")", "\n", "\n", "serialized_aug", "=", "A", ".", "to_dict", "(", "aug", ")", "\n", "deserialized_aug", "=", "A", ".", "from_dict", "(", "serialized_aug", ",", "lambda_transforms", "=", "{", "\"template\"", ":", "template_transform", "}", ")", "\n", "\n", "set_seed", "(", "seed", ")", "\n", "aug_data", "=", "aug", "(", "image", "=", "image", ")", "\n", "set_seed", "(", "seed", ")", "\n", "deserialized_aug_data", "=", "deserialized_aug", "(", "image", "=", "image", ")", "\n", "\n", "assert", "np", ".", "array_equal", "(", "aug_data", "[", "\"image\"", "]", ",", "deserialized_aug_data", "[", "\"image\"", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_image_only_augmentations": [[13, 43], ["pytest.mark.parametrize", "augmentation_cls", "augmentation_cls.", "numpy.array_equal", "utils.get_image_only_transforms", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_image_only_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_image_only_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "HistogramMatching", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "FDA", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "PixelDistributionAdaptation", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "\"transform_type\"", ":", "\"standard\"", ",", "\n", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "A", ".", "FromFloat", ",", "A", ".", "Normalize", ",", "A", ".", "ToFloat", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_image_only_augmentations", "(", "augmentation_cls", ",", "params", ",", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "data", "[", "\"mask\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"mask\"", "]", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_image_only_augmentations_with_float_values": [[45, 85], ["pytest.mark.parametrize", "augmentation_cls", "augmentation_cls.", "numpy.array_equal", "utils.get_image_only_transforms", "numpy.random.uniform().astype", "numpy.random.uniform().astype", "numpy.random.uniform().astype", "numpy.random.uniform().astype", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_image_only_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_image_only_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "HistogramMatching", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "FDA", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "PixelDistributionAdaptation", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "\"transform_type\"", ":", "\"standard\"", ",", "\n", "}", ",", "\n", "A", ".", "MedianBlur", ":", "{", "\"blur_limit\"", ":", "(", "3", ",", "5", ")", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "}", ",", "\n", "A", ".", "RingingOvershoot", ":", "{", "\"blur_limit\"", ":", "(", "3", ",", "5", ")", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "CLAHE", ",", "\n", "A", ".", "Equalize", ",", "\n", "A", ".", "FancyPCA", ",", "\n", "A", ".", "FromFloat", ",", "\n", "A", ".", "ISONoise", ",", "\n", "A", ".", "Posterize", ",", "\n", "A", ".", "RandomToneCurve", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_image_only_augmentations_with_float_values", "(", "augmentation_cls", ",", "params", ",", "float_image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "data", "=", "aug", "(", "image", "=", "float_image", ",", "mask", "=", "mask", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "float32", "\n", "assert", "data", "[", "\"mask\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "np", ".", "array_equal", "(", "data", "[", "\"mask\"", "]", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_dual_augmentations": [[87, 108], ["pytest.mark.parametrize", "augmentation_cls", "augmentation_cls.", "utils.get_dual_transforms"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_dual_transforms"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_dual_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "A", ".", "RandomCropNearBBox", ",", "A", ".", "RandomSizedBBoxSafeCrop", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_dual_augmentations", "(", "augmentation_cls", ",", "params", ",", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "data", "[", "\"mask\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_dual_augmentations_with_float_values": [[110, 131], ["pytest.mark.parametrize", "augmentation_cls", "augmentation_cls.", "utils.get_dual_transforms"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_dual_transforms"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_dual_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "A", ".", "RandomCropNearBBox", ",", "A", ".", "RandomSizedBBoxSafeCrop", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_dual_augmentations_with_float_values", "(", "augmentation_cls", ",", "params", ",", "float_image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "data", "=", "aug", "(", "image", "=", "float_image", ",", "mask", "=", "mask", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "float32", "\n", "assert", "data", "[", "\"mask\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_augmentations_wont_change_input": [[133, 172], ["pytest.mark.parametrize", "image.copy", "mask.copy", "augmentation_cls", "augmentation_cls.", "numpy.array_equal", "numpy.array_equal", "utils.get_transforms", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "HistogramMatching", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "FDA", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "PixelDistributionAdaptation", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "\"transform_type\"", ":", "\"standard\"", ",", "\n", "}", ",", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "A", ".", "RandomCropNearBBox", ",", "A", ".", "RandomSizedBBoxSafeCrop", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_augmentations_wont_change_input", "(", "augmentation_cls", ",", "params", ",", "image", ",", "mask", ")", ":", "\n", "    ", "image_copy", "=", "image", ".", "copy", "(", ")", "\n", "mask_copy", "=", "mask", ".", "copy", "(", ")", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "image", ",", "image_copy", ")", "\n", "assert", "np", ".", "array_equal", "(", "mask", ",", "mask_copy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_augmentations_wont_change_float_input": [[174, 223], ["pytest.mark.parametrize", "float_image.copy", "augmentation_cls", "augmentation_cls.", "numpy.array_equal", "utils.get_transforms", "numpy.random.uniform().astype", "numpy.random.uniform().astype", "numpy.random.uniform().astype", "numpy.random.uniform().astype", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "HistogramMatching", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "FDA", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "PixelDistributionAdaptation", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "\"transform_type\"", ":", "\"standard\"", ",", "\n", "}", ",", "\n", "A", ".", "MedianBlur", ":", "{", "\"blur_limit\"", ":", "(", "3", ",", "5", ")", "}", ",", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "CLAHE", ",", "\n", "A", ".", "Equalize", ",", "\n", "A", ".", "FancyPCA", ",", "\n", "A", ".", "ISONoise", ",", "\n", "A", ".", "Posterize", ",", "\n", "A", ".", "RandomToneCurve", ",", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ",", "\n", "A", ".", "MaskDropout", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_augmentations_wont_change_float_input", "(", "augmentation_cls", ",", "params", ",", "float_image", ")", ":", "\n", "    ", "float_image_copy", "=", "float_image", ".", "copy", "(", ")", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "aug", "(", "image", "=", "float_image", ")", "\n", "assert", "np", ".", "array_equal", "(", "float_image", ",", "float_image_copy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_augmentations_wont_change_shape_grayscale": [[225, 290], ["pytest.mark.parametrize", "augmentation_cls", "numpy.zeros", "numpy.zeros", "augmentation_cls.", "numpy.array_equal", "numpy.array_equal", "numpy.zeros", "numpy.zeros", "augmentation_cls.", "numpy.array_equal", "numpy.array_equal", "utils.get_transforms", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "HistogramMatching", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "FDA", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "Normalize", ":", "{", "\"mean\"", ":", "0", ",", "\"std\"", ":", "1", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "224", ",", "224", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "ChannelDropout", ",", "\n", "A", ".", "ChannelShuffle", ",", "\n", "A", ".", "FancyPCA", ",", "\n", "A", ".", "ISONoise", ",", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ",", "\n", "A", ".", "CenterCrop", ",", "\n", "A", ".", "Crop", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ",", "\n", "A", ".", "RandomCrop", ",", "\n", "A", ".", "RandomResizedCrop", ",", "\n", "A", ".", "RandomSizedCrop", ",", "\n", "A", ".", "CropAndPad", ",", "\n", "A", ".", "Resize", ",", "\n", "A", ".", "LongestMaxSize", ",", "\n", "A", ".", "SmallestMaxSize", ",", "\n", "A", ".", "PadIfNeeded", ",", "\n", "A", ".", "RGBShift", ",", "\n", "A", ".", "RandomFog", ",", "\n", "A", ".", "RandomRain", ",", "\n", "A", ".", "RandomScale", ",", "\n", "A", ".", "RandomShadow", ",", "\n", "A", ".", "RandomSnow", ",", "\n", "A", ".", "RandomSunFlare", ",", "\n", "A", ".", "ToSepia", ",", "\n", "A", ".", "PixelDistributionAdaptation", ",", "\n", "A", ".", "UnsharpMask", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_augmentations_wont_change_shape_grayscale", "(", "augmentation_cls", ",", "params", ",", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "\n", "# Test for grayscale image", "\n", "image", "=", "np", ".", "zeros", "(", "(", "224", ",", "224", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask", "=", "np", ".", "zeros", "(", "(", "224", ",", "224", ")", ")", "\n", "result", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "assert", "np", ".", "array_equal", "(", "image", ".", "shape", ",", "result", "[", "\"image\"", "]", ".", "shape", ")", "\n", "assert", "np", ".", "array_equal", "(", "mask", ".", "shape", ",", "result", "[", "\"mask\"", "]", ".", "shape", ")", "\n", "\n", "# Test for grayscale image with dummy dim", "\n", "image_1ch", "=", "np", ".", "zeros", "(", "(", "224", ",", "224", ",", "1", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask_1ch", "=", "np", ".", "zeros", "(", "(", "224", ",", "224", ",", "1", ")", ")", "\n", "\n", "result", "=", "aug", "(", "image", "=", "image_1ch", ",", "mask", "=", "mask_1ch", ")", "\n", "assert", "np", ".", "array_equal", "(", "image_1ch", ".", "shape", ",", "result", "[", "\"image\"", "]", ".", "shape", ")", "\n", "assert", "np", ".", "array_equal", "(", "mask_1ch", ".", "shape", ",", "result", "[", "\"mask\"", "]", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_augmentations_wont_change_shape_rgb": [[292, 341], ["pytest.mark.parametrize", "augmentation_cls", "numpy.zeros", "numpy.zeros", "augmentation_cls.", "numpy.array_equal", "numpy.array_equal", "utils.get_transforms", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "HistogramMatching", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "FDA", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "PixelDistributionAdaptation", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "\"transform_type\"", ":", "\"standard\"", ",", "\n", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "(", "224", ",", "224", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ",", "\n", "A", ".", "CenterCrop", ",", "\n", "A", ".", "Crop", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ",", "\n", "A", ".", "RandomCrop", ",", "\n", "A", ".", "RandomResizedCrop", ",", "\n", "A", ".", "RandomSizedCrop", ",", "\n", "A", ".", "CropAndPad", ",", "\n", "A", ".", "Resize", ",", "\n", "A", ".", "LongestMaxSize", ",", "\n", "A", ".", "SmallestMaxSize", ",", "\n", "A", ".", "PadIfNeeded", ",", "\n", "A", ".", "RandomScale", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_augmentations_wont_change_shape_rgb", "(", "augmentation_cls", ",", "params", ",", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "\n", "# Test for RGB image", "\n", "image_3ch", "=", "np", ".", "zeros", "(", "(", "224", ",", "224", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask_3ch", "=", "np", ".", "zeros", "(", "(", "224", ",", "224", ",", "3", ")", ")", "\n", "\n", "result", "=", "aug", "(", "image", "=", "image_3ch", ",", "mask", "=", "mask_3ch", ")", "\n", "assert", "np", ".", "array_equal", "(", "image_3ch", ".", "shape", ",", "result", "[", "\"image\"", "]", ".", "shape", ")", "\n", "assert", "np", ".", "array_equal", "(", "mask_3ch", ".", "shape", ",", "result", "[", "\"mask\"", "]", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_image_only_crop_around_bbox_augmentation": [[343, 349], ["pytest.mark.parametrize", "augmentation_cls", "augmentation_cls."], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "[", "[", "A", ".", "RandomCropNearBBox", ",", "{", "\"max_part_shift\"", ":", "0.15", "}", "]", "]", ")", "\n", "def", "test_image_only_crop_around_bbox_augmentation", "(", "augmentation_cls", ",", "params", ",", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "annotations", "=", "{", "\"image\"", ":", "image", ",", "\"cropping_bbox\"", ":", "[", "-", "59", ",", "77", ",", "177", ",", "231", "]", "}", "\n", "data", "=", "aug", "(", "**", "annotations", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_mask_fill_value": [[351, 375], ["pytest.mark.parametrize", "random.seed", "augmentation_cls", "augmentation_cls.", "numpy.ones", "numpy.zeros"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "[", "\n", "[", "\n", "A", ".", "PadIfNeeded", ",", "\n", "{", "\"min_height\"", ":", "514", ",", "\"min_width\"", ":", "514", ",", "\"border_mode\"", ":", "cv2", ".", "BORDER_CONSTANT", ",", "\"value\"", ":", "100", ",", "\"mask_value\"", ":", "1", "}", ",", "\n", "]", ",", "\n", "[", "A", ".", "Rotate", ",", "{", "\"border_mode\"", ":", "cv2", ".", "BORDER_CONSTANT", ",", "\"value\"", ":", "100", ",", "\"mask_value\"", ":", "1", "}", "]", ",", "\n", "[", "A", ".", "SafeRotate", ",", "{", "\"border_mode\"", ":", "cv2", ".", "BORDER_CONSTANT", ",", "\"value\"", ":", "100", ",", "\"mask_value\"", ":", "1", "}", "]", ",", "\n", "[", "A", ".", "ShiftScaleRotate", ",", "{", "\"border_mode\"", ":", "cv2", ".", "BORDER_CONSTANT", ",", "\"value\"", ":", "100", ",", "\"mask_value\"", ":", "1", "}", "]", ",", "\n", "[", "A", ".", "OpticalDistortion", ",", "{", "\"border_mode\"", ":", "cv2", ".", "BORDER_CONSTANT", ",", "\"value\"", ":", "100", ",", "\"mask_value\"", ":", "1", "}", "]", ",", "\n", "[", "A", ".", "ElasticTransform", ",", "{", "\"border_mode\"", ":", "cv2", ".", "BORDER_CONSTANT", ",", "\"value\"", ":", "100", ",", "\"mask_value\"", ":", "1", "}", "]", ",", "\n", "[", "A", ".", "GridDistortion", ",", "{", "\"border_mode\"", ":", "cv2", ".", "BORDER_CONSTANT", ",", "\"value\"", ":", "100", ",", "\"mask_value\"", ":", "1", "}", "]", ",", "\n", "[", "A", ".", "Affine", ",", "{", "\"mode\"", ":", "cv2", ".", "BORDER_CONSTANT", ",", "\"cval_mask\"", ":", "1", ",", "\"cval\"", ":", "100", "}", "]", ",", "\n", "[", "A", ".", "PiecewiseAffine", ",", "{", "\"mode\"", ":", "\"constant\"", ",", "\"cval_mask\"", ":", "1", ",", "\"cval\"", ":", "100", "}", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_mask_fill_value", "(", "augmentation_cls", ",", "params", ")", ":", "\n", "    ", "random", ".", "seed", "(", "42", ")", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "input", "=", "{", "\"image\"", ":", "np", ".", "zeros", "(", "(", "512", ",", "512", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "+", "100", ",", "\"mask\"", ":", "np", ".", "ones", "(", "(", "512", ",", "512", ")", ")", "}", "\n", "output", "=", "aug", "(", "**", "input", ")", "\n", "assert", "(", "output", "[", "\"image\"", "]", "==", "100", ")", ".", "all", "(", ")", "\n", "assert", "(", "output", "[", "\"mask\"", "]", "==", "1", ")", ".", "all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_multichannel_image_augmentations": [[377, 432], ["pytest.mark.parametrize", "numpy.zeros", "augmentation_cls", "augmentation_cls.", "utils.get_transforms", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "HistogramMatching", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "6", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "FDA", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "6", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "(", "100", ",", "100", ",", "6", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "CLAHE", ",", "\n", "A", ".", "ColorJitter", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ",", "\n", "A", ".", "FromFloat", ",", "\n", "A", ".", "HueSaturationValue", ",", "\n", "A", ".", "ISONoise", ",", "\n", "A", ".", "ImageCompression", ",", "\n", "A", ".", "MaskDropout", ",", "\n", "A", ".", "Normalize", ",", "\n", "A", ".", "RGBShift", ",", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "RandomFog", ",", "\n", "A", ".", "RandomRain", ",", "\n", "A", ".", "RandomShadow", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ",", "\n", "A", ".", "RandomSnow", ",", "\n", "A", ".", "RandomSunFlare", ",", "\n", "A", ".", "ToFloat", ",", "\n", "A", ".", "ToGray", ",", "\n", "A", ".", "ToSepia", ",", "\n", "A", ".", "FancyPCA", ",", "\n", "A", ".", "PixelDistributionAdaptation", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_multichannel_image_augmentations", "(", "augmentation_cls", ",", "params", ")", ":", "\n", "    ", "image", "=", "np", ".", "zeros", "(", "(", "100", ",", "100", ",", "6", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "data", "[", "\"image\"", "]", ".", "shape", "[", "2", "]", "==", "6", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_float_multichannel_image_augmentations": [[434, 492], ["pytest.mark.parametrize", "numpy.zeros", "augmentation_cls", "augmentation_cls.", "utils.get_transforms", "numpy.random.uniform().astype", "numpy.random.uniform().astype", "numpy.random.randint", "numpy.random.uniform", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "HistogramMatching", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "uniform", "(", "0.0", ",", "1.0", ",", "(", "100", ",", "100", ",", "6", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "FDA", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "6", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "Normalize", ":", "{", "\"mean\"", ":", "0", ",", "\"std\"", ":", "1", "}", ",", "\n", "A", ".", "MedianBlur", ":", "{", "\"blur_limit\"", ":", "(", "3", ",", "5", ")", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "uniform", "(", "0.0", ",", "1.0", ",", "(", "100", ",", "100", ",", "6", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "CLAHE", ",", "\n", "A", ".", "ColorJitter", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ",", "\n", "A", ".", "FromFloat", ",", "\n", "A", ".", "HueSaturationValue", ",", "\n", "A", ".", "ISONoise", ",", "\n", "A", ".", "ImageCompression", ",", "\n", "A", ".", "MaskDropout", ",", "\n", "A", ".", "RGBShift", ",", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "RandomFog", ",", "\n", "A", ".", "RandomRain", ",", "\n", "A", ".", "RandomShadow", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ",", "\n", "A", ".", "RandomSnow", ",", "\n", "A", ".", "RandomSunFlare", ",", "\n", "A", ".", "ToGray", ",", "\n", "A", ".", "ToSepia", ",", "\n", "A", ".", "Equalize", ",", "\n", "A", ".", "FancyPCA", ",", "\n", "A", ".", "Posterize", ",", "\n", "A", ".", "RandomToneCurve", ",", "\n", "A", ".", "PixelDistributionAdaptation", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_float_multichannel_image_augmentations", "(", "augmentation_cls", ",", "params", ")", ":", "\n", "    ", "image", "=", "np", ".", "zeros", "(", "(", "100", ",", "100", ",", "6", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "float32", "\n", "assert", "data", "[", "\"image\"", "]", ".", "shape", "[", "2", "]", "==", "6", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_multichannel_image_augmentations_diff_channels": [[494, 544], ["pytest.mark.parametrize", "range", "utils.get_transforms", "numpy.zeros", "augmentation_cls", "augmentation_cls.", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "randint", "(", "0", ",", "1", ",", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "CLAHE", ",", "\n", "A", ".", "ColorJitter", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ",", "\n", "A", ".", "FromFloat", ",", "\n", "A", ".", "HueSaturationValue", ",", "\n", "A", ".", "ISONoise", ",", "\n", "A", ".", "ImageCompression", ",", "\n", "A", ".", "MaskDropout", ",", "\n", "A", ".", "Normalize", ",", "\n", "A", ".", "RGBShift", ",", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "RandomFog", ",", "\n", "A", ".", "RandomRain", ",", "\n", "A", ".", "RandomShadow", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ",", "\n", "A", ".", "RandomSnow", ",", "\n", "A", ".", "RandomSunFlare", ",", "\n", "A", ".", "ToFloat", ",", "\n", "A", ".", "ToGray", ",", "\n", "A", ".", "ToSepia", ",", "\n", "A", ".", "FancyPCA", ",", "\n", "A", ".", "FDA", ",", "\n", "A", ".", "HistogramMatching", ",", "\n", "A", ".", "PixelDistributionAdaptation", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_multichannel_image_augmentations_diff_channels", "(", "augmentation_cls", ",", "params", ")", ":", "\n", "    ", "for", "num_channels", "in", "range", "(", "3", ",", "13", ")", ":", "\n", "        ", "image", "=", "np", ".", "zeros", "(", "(", "100", ",", "100", ",", "num_channels", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "data", "[", "\"image\"", "]", ".", "shape", "[", "2", "]", "==", "num_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_float_multichannel_image_augmentations_diff_channels": [[546, 599], ["pytest.mark.parametrize", "range", "utils.get_transforms", "numpy.zeros", "augmentation_cls", "augmentation_cls.", "numpy.random.uniform().astype", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "Normalize", ":", "{", "\"mean\"", ":", "0", ",", "\"std\"", ":", "1", "}", ",", "\n", "A", ".", "MedianBlur", ":", "{", "\"blur_limit\"", ":", "(", "3", ",", "5", ")", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "uniform", "(", "0.0", ",", "1.0", ",", "(", "100", ",", "100", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "}", ",", "\n", "}", ",", "\n", "except_augmentations", "=", "{", "\n", "A", ".", "CLAHE", ",", "\n", "A", ".", "ColorJitter", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ",", "\n", "A", ".", "FromFloat", ",", "\n", "A", ".", "HueSaturationValue", ",", "\n", "A", ".", "ISONoise", ",", "\n", "A", ".", "ImageCompression", ",", "\n", "A", ".", "MaskDropout", ",", "\n", "A", ".", "RGBShift", ",", "\n", "A", ".", "RandomCropNearBBox", ",", "\n", "A", ".", "RandomFog", ",", "\n", "A", ".", "RandomRain", ",", "\n", "A", ".", "RandomShadow", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ",", "\n", "A", ".", "RandomSnow", ",", "\n", "A", ".", "RandomSunFlare", ",", "\n", "A", ".", "ToGray", ",", "\n", "A", ".", "ToSepia", ",", "\n", "A", ".", "Equalize", ",", "\n", "A", ".", "FancyPCA", ",", "\n", "A", ".", "Posterize", ",", "\n", "A", ".", "RandomToneCurve", ",", "\n", "A", ".", "FDA", ",", "\n", "A", ".", "HistogramMatching", ",", "\n", "A", ".", "PixelDistributionAdaptation", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_float_multichannel_image_augmentations_diff_channels", "(", "augmentation_cls", ",", "params", ")", ":", "\n", "    ", "for", "num_channels", "in", "range", "(", "3", ",", "13", ")", ":", "\n", "        ", "image", "=", "np", ".", "zeros", "(", "(", "100", ",", "100", ",", "num_channels", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "np", ".", "float32", "\n", "assert", "data", "[", "\"image\"", "]", ".", "shape", "[", "2", "]", "==", "num_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_pad_if_needed": [[601, 657], ["pytest.mark.parametrize", "numpy.zeros", "augmentation_cls", "augmentation_cls."], "function", ["None"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", ",", "\"image_shape\"", "]", ",", "\n", "[", "\n", "[", "A", ".", "PadIfNeeded", ",", "{", "\"min_height\"", ":", "514", ",", "\"min_width\"", ":", "516", "}", ",", "(", "300", ",", "200", ")", "]", ",", "\n", "[", "A", ".", "PadIfNeeded", ",", "{", "\"min_height\"", ":", "514", ",", "\"min_width\"", ":", "516", "}", ",", "(", "512", ",", "516", ")", "]", ",", "\n", "[", "A", ".", "PadIfNeeded", ",", "{", "\"min_height\"", ":", "514", ",", "\"min_width\"", ":", "516", "}", ",", "(", "600", ",", "600", ")", "]", ",", "\n", "[", "\n", "A", ".", "PadIfNeeded", ",", "\n", "{", "\"min_height\"", ":", "None", ",", "\"min_width\"", ":", "None", ",", "\"pad_height_divisor\"", ":", "128", ",", "\"pad_width_divisor\"", ":", "128", "}", ",", "\n", "(", "300", ",", "200", ")", ",", "\n", "]", ",", "\n", "[", "\n", "A", ".", "PadIfNeeded", ",", "\n", "{", "\"min_height\"", ":", "None", ",", "\"min_width\"", ":", "None", ",", "\"pad_height_divisor\"", ":", "72", ",", "\"pad_width_divisor\"", ":", "128", "}", ",", "\n", "(", "72", ",", "128", ")", ",", "\n", "]", ",", "\n", "[", "\n", "A", ".", "PadIfNeeded", ",", "\n", "{", "\"min_height\"", ":", "None", ",", "\"min_width\"", ":", "None", ",", "\"pad_height_divisor\"", ":", "72", ",", "\"pad_width_divisor\"", ":", "128", "}", ",", "\n", "(", "15", ",", "15", ")", ",", "\n", "]", ",", "\n", "[", "\n", "A", ".", "PadIfNeeded", ",", "\n", "{", "\"min_height\"", ":", "None", ",", "\"min_width\"", ":", "None", ",", "\"pad_height_divisor\"", ":", "72", ",", "\"pad_width_divisor\"", ":", "128", "}", ",", "\n", "(", "144", ",", "256", ")", ",", "\n", "]", ",", "\n", "[", "\n", "A", ".", "PadIfNeeded", ",", "\n", "{", "\"min_height\"", ":", "None", ",", "\"min_width\"", ":", "None", ",", "\"pad_height_divisor\"", ":", "72", ",", "\"pad_width_divisor\"", ":", "128", "}", ",", "\n", "(", "200", ",", "300", ")", ",", "\n", "]", ",", "\n", "[", "A", ".", "PadIfNeeded", ",", "{", "\"min_height\"", ":", "512", ",", "\"min_width\"", ":", "None", ",", "\"pad_width_divisor\"", ":", "128", "}", ",", "(", "300", ",", "200", ")", "]", ",", "\n", "[", "A", ".", "PadIfNeeded", ",", "{", "\"min_height\"", ":", "None", ",", "\"min_width\"", ":", "512", ",", "\"pad_height_divisor\"", ":", "128", "}", ",", "(", "300", ",", "200", ")", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_pad_if_needed", "(", "augmentation_cls", ":", "Type", "[", "A", ".", "PadIfNeeded", "]", ",", "params", ":", "Dict", ",", "image_shape", ":", "Tuple", "[", "int", ",", "int", "]", ")", ":", "\n", "    ", "image", "=", "np", ".", "zeros", "(", "image_shape", ")", "\n", "pad", "=", "augmentation_cls", "(", "**", "params", ")", "\n", "\n", "image_padded", "=", "pad", "(", "image", "=", "image", ")", "[", "\"image\"", "]", "\n", "\n", "if", "pad", ".", "min_width", "is", "not", "None", ":", "\n", "        ", "assert", "image_padded", ".", "shape", "[", "1", "]", ">=", "pad", ".", "min_width", "\n", "\n", "", "if", "pad", ".", "min_height", "is", "not", "None", ":", "\n", "        ", "assert", "image_padded", ".", "shape", "[", "0", "]", ">=", "pad", ".", "min_height", "\n", "\n", "", "if", "pad", ".", "pad_width_divisor", "is", "not", "None", ":", "\n", "        ", "assert", "image_padded", ".", "shape", "[", "1", "]", "%", "pad", ".", "pad_width_divisor", "==", "0", "\n", "assert", "image_padded", ".", "shape", "[", "1", "]", ">=", "image", ".", "shape", "[", "1", "]", "\n", "assert", "image_padded", ".", "shape", "[", "1", "]", "-", "image", ".", "shape", "[", "1", "]", "<=", "pad", ".", "pad_width_divisor", "\n", "\n", "", "if", "pad", ".", "pad_height_divisor", "is", "not", "None", ":", "\n", "        ", "assert", "image_padded", ".", "shape", "[", "0", "]", "%", "pad", ".", "pad_height_divisor", "==", "0", "\n", "assert", "image_padded", ".", "shape", "[", "0", "]", ">=", "image", ".", "shape", "[", "0", "]", "\n", "assert", "image_padded", ".", "shape", "[", "0", "]", "-", "image", ".", "shape", "[", "0", "]", "<=", "pad", ".", "pad_height_divisor", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_pad_if_needed_position": [[659, 704], ["pytest.mark.parametrize", "random.seed", "numpy.zeros", "albumentations.PadIfNeeded", "numpy.ones", "A.PadIfNeeded.", "max", "max"], "function", ["None"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"params\"", ",", "\"image_shape\"", "]", ",", "\n", "[", "\n", "[", "{", "\"min_height\"", ":", "10", ",", "\"min_width\"", ":", "12", ",", "\"border_mode\"", ":", "0", ",", "\"value\"", ":", "1", ",", "\"position\"", ":", "\"center\"", "}", ",", "(", "5", ",", "6", ")", "]", ",", "\n", "[", "{", "\"min_height\"", ":", "10", ",", "\"min_width\"", ":", "12", ",", "\"border_mode\"", ":", "0", ",", "\"value\"", ":", "1", ",", "\"position\"", ":", "\"top_left\"", "}", ",", "(", "5", ",", "6", ")", "]", ",", "\n", "[", "{", "\"min_height\"", ":", "10", ",", "\"min_width\"", ":", "12", ",", "\"border_mode\"", ":", "0", ",", "\"value\"", ":", "1", ",", "\"position\"", ":", "\"top_right\"", "}", ",", "(", "5", ",", "6", ")", "]", ",", "\n", "[", "{", "\"min_height\"", ":", "10", ",", "\"min_width\"", ":", "12", ",", "\"border_mode\"", ":", "0", ",", "\"value\"", ":", "1", ",", "\"position\"", ":", "\"bottom_left\"", "}", ",", "(", "5", ",", "6", ")", "]", ",", "\n", "[", "{", "\"min_height\"", ":", "10", ",", "\"min_width\"", ":", "12", ",", "\"border_mode\"", ":", "0", ",", "\"value\"", ":", "1", ",", "\"position\"", ":", "\"bottom_right\"", "}", ",", "(", "5", ",", "6", ")", "]", ",", "\n", "[", "{", "\"min_height\"", ":", "10", ",", "\"min_width\"", ":", "12", ",", "\"border_mode\"", ":", "0", ",", "\"value\"", ":", "1", ",", "\"position\"", ":", "\"random\"", "}", ",", "(", "5", ",", "6", ")", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_pad_if_needed_position", "(", "params", ",", "image_shape", ")", ":", "\n", "    ", "random", ".", "seed", "(", "42", ")", "\n", "\n", "image", "=", "np", ".", "zeros", "(", "image_shape", ")", "\n", "pad", "=", "A", ".", "PadIfNeeded", "(", "**", "params", ")", "\n", "image_padded", "=", "pad", "(", "image", "=", "image", ")", "[", "\"image\"", "]", "\n", "\n", "true_result", "=", "np", ".", "ones", "(", "(", "max", "(", "image_shape", "[", "0", "]", ",", "params", "[", "\"min_height\"", "]", ")", ",", "max", "(", "image_shape", "[", "1", "]", ",", "params", "[", "\"min_width\"", "]", ")", ")", ")", "\n", "\n", "if", "params", "[", "\"position\"", "]", "==", "\"center\"", ":", "\n", "        ", "x_start", "=", "image_shape", "[", "0", "]", "//", "2", "\n", "y_start", "=", "image_shape", "[", "1", "]", "//", "2", "\n", "true_result", "[", "x_start", ":", "x_start", "+", "image_shape", "[", "0", "]", ",", "y_start", ":", "y_start", "+", "image_shape", "[", "1", "]", "]", "=", "0", "\n", "assert", "(", "image_padded", "==", "true_result", ")", ".", "all", "(", ")", "\n", "\n", "", "elif", "params", "[", "\"position\"", "]", "==", "\"top_left\"", ":", "\n", "        ", "true_result", "[", ":", "image_shape", "[", "0", "]", ",", ":", "image_shape", "[", "1", "]", "]", "=", "0", "\n", "assert", "(", "image_padded", "==", "true_result", ")", ".", "all", "(", ")", "\n", "\n", "", "elif", "params", "[", "\"position\"", "]", "==", "\"top_right\"", ":", "\n", "        ", "true_result", "[", ":", "image_shape", "[", "0", "]", ",", "-", "image_shape", "[", "1", "]", ":", "]", "=", "0", "\n", "assert", "(", "image_padded", "==", "true_result", ")", ".", "all", "(", ")", "\n", "\n", "", "elif", "params", "[", "\"position\"", "]", "==", "\"bottom_left\"", ":", "\n", "        ", "true_result", "[", "-", "image_shape", "[", "0", "]", ":", ",", ":", "image_shape", "[", "1", "]", "]", "=", "0", "\n", "assert", "(", "image_padded", "==", "true_result", ")", ".", "all", "(", ")", "\n", "\n", "", "elif", "params", "[", "\"position\"", "]", "==", "\"bottom_right\"", ":", "\n", "        ", "true_result", "[", "-", "image_shape", "[", "0", "]", ":", ",", "-", "image_shape", "[", "1", "]", ":", "]", "=", "0", "\n", "assert", "(", "image_padded", "==", "true_result", ")", ".", "all", "(", ")", "\n", "\n", "", "elif", "params", "[", "\"position\"", "]", "==", "\"random\"", ":", "\n", "        ", "true_result", "[", "0", ":", "5", ",", "-", "7", ":", "-", "1", "]", "=", "0", "\n", "assert", "(", "image_padded", "==", "true_result", ")", ".", "all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_perspective_order_points": [[706, 739], ["pytest.mark.parametrize", "numpy.array", "albumentations.Perspective._order_points", "len", "len", "numpy.unique"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.transforms.Perspective._order_points"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"points\"", "]", ",", "\n", "[", "\n", "[", "\n", "[", "\n", "[", "37.25756906", ",", "11.0567457", "]", ",", "\n", "[", "514.03919117", ",", "9.49484312", "]", ",", "\n", "[", "585.66154354", ",", "74.97413793", "]", ",", "\n", "[", "63.60979494", ",", "85.39815904", "]", ",", "\n", "]", "\n", "]", ",", "\n", "[", "\n", "[", "\n", "[", "37", ",", "11", "]", ",", "\n", "[", "514", ",", "9", "]", ",", "\n", "[", "585", ",", "74", "]", ",", "\n", "[", "63", ",", "85", "]", ",", "\n", "]", "\n", "]", ",", "\n", "[", "\n", "[", "\n", "[", "10", ",", "20", "]", ",", "\n", "[", "719", ",", "34", "]", ",", "\n", "[", "613", ",", "63", "]", ",", "\n", "[", "91", ",", "33", "]", ",", "\n", "]", "\n", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_perspective_order_points", "(", "points", ")", ":", "\n", "    ", "points", "=", "np", ".", "array", "(", "points", ")", "\n", "res", "=", "A", ".", "Perspective", ".", "_order_points", "(", "points", ")", "\n", "assert", "len", "(", "points", ")", "==", "len", "(", "np", ".", "unique", "(", "res", ",", "axis", "=", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_perspective_valid_keypoints_after_transform": [[741, 773], ["pytest.mark.parametrize", "random.seed", "numpy.random.seed", "numpy.zeros", "albumentations.Compose", "A.Compose.", "albumentations.Perspective"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"seed\"", ",", "\"scale\"", ",", "\"h\"", ",", "\"w\"", "]", ",", "\n", "[", "\n", "[", "0", ",", "0.08", ",", "89", ",", "628", "]", ",", "\n", "[", "0", ",", "0.15", ",", "89", ",", "628", "]", ",", "\n", "[", "0", ",", "0.15", ",", "35", ",", "190", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_perspective_valid_keypoints_after_transform", "(", "seed", ":", "int", ",", "scale", ":", "float", ",", "h", ":", "int", ",", "w", ":", "int", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "image", "=", "np", ".", "zeros", "(", "[", "h", ",", "w", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "keypoints", "=", "[", "\n", "[", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "h", "-", "1", "]", ",", "\n", "[", "w", "-", "1", ",", "h", "-", "1", "]", ",", "\n", "[", "w", "-", "1", ",", "0", "]", ",", "\n", "]", "\n", "\n", "transform", "=", "A", ".", "Compose", "(", "\n", "[", "A", ".", "Perspective", "(", "scale", "=", "(", "scale", ",", "scale", ")", ",", "p", "=", "1", ")", "]", ",", "keypoint_params", "=", "{", "\"format\"", ":", "\"xy\"", ",", "\"remove_invisible\"", ":", "False", "}", "\n", ")", "\n", "\n", "res", "=", "transform", "(", "image", "=", "image", ",", "keypoints", "=", "keypoints", ")", "[", "\"keypoints\"", "]", "\n", "\n", "x1", ",", "y1", "=", "res", "[", "0", "]", "\n", "x2", ",", "y2", "=", "res", "[", "1", "]", "\n", "x3", ",", "y3", "=", "res", "[", "2", "]", "\n", "x4", ",", "y4", "=", "res", "[", "3", "]", "\n", "\n", "assert", "x1", "<", "x3", "and", "x1", "<", "x4", "and", "x2", "<", "x3", "and", "x2", "<", "x4", "and", "y1", "<", "y2", "and", "y1", "<", "y3", "and", "y4", "<", "y2", "and", "y4", "<", "y3", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_pixel_domain_adaptation": [[775, 796], ["pytest.mark.parametrize", "numpy.random.randint", "numpy.random.randint", "albumentations.PixelDistributionAdaptation", "numpy.testing.assert_allclose", "x.astype", "A.PixelDistributionAdaptation.", "adapted.mean", "ref_img.mean", "adapted.mean", "img.mean", "ref_img.mean"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\"kind\"", ",", "[", "\"pca\"", ",", "\"minmax\"", ",", "\"standard\"", "]", ")", "\n", "def", "test_pixel_domain_adaptation", "(", "kind", ")", ":", "\n", "    ", "img_uint8", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "100", ",", "high", "=", "200", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "ref_img_uint8", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "100", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img_float", ",", "ref_img_float", "=", "[", "x", ".", "astype", "(", "\"float32\"", ")", "/", "255.0", "for", "x", "in", "(", "img_uint8", ",", "ref_img_uint8", ")", "]", "\n", "\n", "for", "img", ",", "ref_img", "in", "(", "(", "img_uint8", ",", "ref_img_uint8", ")", ",", "(", "img_float", ",", "ref_img_float", ")", ")", ":", "\n", "        ", "adapter", "=", "A", ".", "PixelDistributionAdaptation", "(", "\n", "reference_images", "=", "[", "ref_img", "]", ",", "\n", "blend_ratio", "=", "(", "1", ",", "1", ")", ",", "\n", "read_fn", "=", "lambda", "x", ":", "x", ",", "\n", "always_apply", "=", "True", ",", "\n", "transform_type", "=", "kind", ",", "\n", ")", "\n", "adapted", "=", "adapter", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "np", ".", "testing", ".", "assert_allclose", "(", "\n", "adapted", ".", "mean", "(", ")", ",", "\n", "ref_img", ".", "mean", "(", ")", ",", "\n", "rtol", "=", "0", ",", "\n", "atol", "=", "2", "if", "img", ".", "dtype", "==", "np", ".", "uint8", "else", "0.01", ",", "\n", "err_msg", "=", "f\"{adapted.mean()} {img.mean()} {ref_img.mean()}\"", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_augmentations.test_non_contiguous_input": [[799, 864], ["pytest.mark.parametrize", "numpy.empty().transpose", "numpy.empty().transpose", "utils.get_transforms", "augmentation_cls", "augmentation_cls.", "numpy.empty", "numpy.empty", "albumentations.Compose", "augmentation_cls.", "augmentation_cls", "augmentation_cls.", "augmentation_cls", "albumentations.BboxParams", "numpy.random.uniform().astype", "numpy.random.uniform().astype", "numpy.random.uniform().astype", "numpy.random.uniform().astype", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.transpose", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"augmentation_cls\"", ",", "\"params\"", "]", ",", "\n", "get_transforms", "(", "\n", "custom_arguments", "=", "{", "\n", "# only image", "\n", "A", ".", "HistogramMatching", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "FDA", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "}", ",", "\n", "A", ".", "PixelDistributionAdaptation", ":", "{", "\n", "\"reference_images\"", ":", "[", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "]", ",", "\n", "\"read_fn\"", ":", "lambda", "x", ":", "x", ",", "\n", "\"transform_type\"", ":", "\"standard\"", ",", "\n", "}", ",", "\n", "A", ".", "MedianBlur", ":", "{", "\"blur_limit\"", ":", "(", "3", ",", "5", ")", "}", ",", "\n", "A", ".", "TemplateTransform", ":", "{", "\n", "\"templates\"", ":", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", ",", "\n", "}", ",", "\n", "A", ".", "RingingOvershoot", ":", "{", "\"blur_limit\"", ":", "(", "3", ",", "5", ")", "}", ",", "\n", "# dual", "\n", "A", ".", "Crop", ":", "{", "\"y_min\"", ":", "0", ",", "\"y_max\"", ":", "10", ",", "\"x_min\"", ":", "0", ",", "\"x_max\"", ":", "10", "}", ",", "\n", "A", ".", "CenterCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropNonEmptyMaskIfExists", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomResizedCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedCrop", ":", "{", "\"min_max_height\"", ":", "(", "4", ",", "8", ")", ",", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "CropAndPad", ":", "{", "\"px\"", ":", "10", "}", ",", "\n", "A", ".", "Resize", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "A", ".", "RandomSizedBBoxSafeCrop", ":", "{", "\"height\"", ":", "10", ",", "\"width\"", ":", "10", "}", ",", "\n", "}", ",", "\n", ")", ",", "\n", ")", "\n", "def", "test_non_contiguous_input", "(", "augmentation_cls", ",", "params", ",", "bboxes", ")", ":", "\n", "\n", "    ", "image", "=", "np", ".", "empty", "(", "[", "3", ",", "100", ",", "100", "]", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "mask", "=", "np", ".", "empty", "(", "[", "3", ",", "100", ",", "100", "]", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "# check preconditions", "\n", "assert", "not", "image", ".", "flags", "[", "\"C_CONTIGUOUS\"", "]", "\n", "assert", "not", "mask", ".", "flags", "[", "\"C_CONTIGUOUS\"", "]", "\n", "\n", "if", "augmentation_cls", "==", "A", ".", "RandomCropNearBBox", ":", "\n", "# requires \"cropping_bbox\" arg", "\n", "        ", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ",", "cropping_bbox", "=", "bboxes", "[", "0", "]", ")", "\n", "", "elif", "augmentation_cls", "==", "A", ".", "RandomSizedBBoxSafeCrop", ":", "\n", "# requires \"bboxes\" arg", "\n", "        ", "aug", "=", "A", ".", "Compose", "(", "[", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "]", ",", "bbox_params", "=", "A", ".", "BboxParams", "(", "format", "=", "\"pascal_voc\"", ")", ")", "\n", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ",", "bboxes", "=", "bboxes", ")", "\n", "", "else", ":", "\n", "# standard args: image and mask", "\n", "        ", "if", "augmentation_cls", "==", "A", ".", "FromFloat", ":", "\n", "# requires float image", "\n", "            ", "image", "=", "(", "image", "/", "255", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "assert", "not", "image", ".", "flags", "[", "\"C_CONTIGUOUS\"", "]", "\n", "", "elif", "augmentation_cls", "==", "A", ".", "MaskDropout", ":", "\n", "# requires single channel mask", "\n", "            ", "mask", "=", "mask", "[", ":", ",", ":", ",", "0", "]", "\n", "\n", "", "aug", "=", "augmentation_cls", "(", "p", "=", "1", ",", "**", "params", ")", "\n", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.InMemoryFile.__init__": [[33, 37], ["io.StringIO.__init__"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.InMemoryFile.close": [[38, 41], ["utils.InMemoryFile.save_value", "super().close", "utils.InMemoryFile.getvalue"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.OpenMock.save_value", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.InMemoryFile.close"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.OpenMock.__init__": [[50, 52], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.OpenMock.__call__": [[53, 56], ["utils.OpenMock.values.get", "utils.InMemoryFile"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.OpenMock.save_value": [[57, 59], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_3d": [[12, 19], ["tuple", "len", "numpy.repeat"], "function", ["None"], ["return", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_target_format": [[21, 30], ["ValueError", "utils.convert_2d_to_3d", "utils.convert_2d_to_3d", "len"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_3d", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.convert_2d_to_3d"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.set_seed": [[61, 64], ["random.seed", "numpy.random.seed"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_filtered_transforms": [[66, 97], ["inspect.getmembers", "set", "result.append", "any", "issubclass", "inspect.isclass", "issubclass", "inspect.getsource", "inspect.getsource", "issubclass", "custom_arguments.get"], "function", ["None"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_image_only_transforms": [[99, 104], ["utils.get_filtered_transforms"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_filtered_transforms"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_dual_transforms": [[106, 111], ["utils.get_filtered_transforms"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_filtered_transforms"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms": [[113, 119], ["utils.get_filtered_transforms"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_filtered_transforms"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.check_all_augs_exists": [[122, 139], ["utils.get_transforms", "set", "ValueError", "not_existed.append"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.tests.utils.get_transforms"], []], "home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.pytest_ignore_collect": [[35, 49], ["path.fnmatch", "warnings.warn", "path.fnmatch", "warnings.warn", "UserWarning", "UserWarning"], "function", ["None"], ["def", "pytest_ignore_collect", "(", "path", ")", ":", "\n", "    ", "if", "not", "torch_available", "and", "path", ".", "fnmatch", "(", "\"test_pytorch.py\"", ")", ":", "\n", "        ", "warnings", ".", "warn", "(", "\n", "UserWarning", "(", "\n", "\"Tests that require PyTorch and torchvision were skipped because those libraries are not installed.\"", "\n", ")", "\n", ")", "\n", "return", "True", "\n", "\n", "", "if", "not", "imgaug_available", "and", "path", ".", "fnmatch", "(", "\"test_imgaug.py\"", ")", ":", "\n", "        ", "warnings", ".", "warn", "(", "UserWarning", "(", "\"Tests that require imgaug were skipped because this library is not installed.\"", ")", ")", "\n", "return", "True", "\n", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.image": [[51, 54], ["numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "fixture", "\n", "def", "image", "(", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.mask": [[56, 59], ["numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "fixture", "\n", "def", "mask", "(", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "2", ",", "size", "=", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.bboxes": [[61, 64], ["None"], "function", ["None"], ["", "@", "pytest", ".", "fixture", "\n", "def", "bboxes", "(", ")", ":", "\n", "    ", "return", "[", "[", "15", ",", "12", ",", "75", ",", "30", ",", "1", "]", ",", "[", "55", ",", "25", ",", "90", ",", "90", ",", "2", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.albumentations_bboxes": [[66, 69], ["None"], "function", ["None"], ["", "@", "pytest", ".", "fixture", "\n", "def", "albumentations_bboxes", "(", ")", ":", "\n", "    ", "return", "[", "[", "0.15", ",", "0.12", ",", "0.75", ",", "0.30", ",", "1", "]", ",", "[", "0.55", ",", "0.25", ",", "0.90", ",", "0.90", ",", "2", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.keypoints": [[71, 74], ["None"], "function", ["None"], ["", "@", "pytest", ".", "fixture", "\n", "def", "keypoints", "(", ")", ":", "\n", "    ", "return", "[", "[", "20", ",", "30", ",", "40", ",", "50", ",", "1", "]", ",", "[", "20", ",", "30", ",", "60", ",", "80", ",", "2", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.float_image": [[76, 79], ["numpy.random.uniform().astype", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "@", "pytest", ".", "fixture", "\n", "def", "float_image", "(", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.template": [[81, 84], ["numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "fixture", "\n", "def", "template", "(", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.float_template": [[86, 89], ["numpy.random.uniform().astype", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.uniform"], ["", "@", "pytest", ".", "fixture", "\n", "def", "float_template", "(", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "high", "=", "1.0", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.conftest.multiprocessing_context": [[91, 101], ["multiprocessing.get_context"], "function", ["None"], ["", "@", "pytest", ".", "fixture", "\n", "def", "multiprocessing_context", "(", ")", ":", "\n", "# Usage of `fork` as a start method for multiprocessing could lead to deadlocks on macOS.", "\n", "# Because `fork` was the default start method for macOS until Python 3.8", "\n", "# we had to manually set the start method to `spawn` to avoid those issues.", "\n", "    ", "if", "sys", ".", "platform", "==", "\"darwin\"", ":", "\n", "        ", "method", "=", "\"spawn\"", "\n", "", "else", ":", "\n", "        ", "method", "=", "None", "\n", "", "return", "multiprocessing", ".", "get_context", "(", "method", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_pytorch.test_torch_to_tensor_v2_augmentations": [[12, 20], ["albumentations.pytorch.transforms.ToTensorV2", "albumentations.pytorch.transforms.ToTensorV2.", "isinstance", "isinstance"], "function", ["None"], ["def", "test_torch_to_tensor_v2_augmentations", "(", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "ToTensorV2", "(", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ",", "force_apply", "=", "True", ")", "\n", "height", ",", "width", ",", "num_channels", "=", "image", ".", "shape", "\n", "assert", "isinstance", "(", "data", "[", "\"image\"", "]", ",", "torch", ".", "Tensor", ")", "and", "data", "[", "\"image\"", "]", ".", "shape", "==", "(", "num_channels", ",", "height", ",", "width", ")", "\n", "assert", "isinstance", "(", "data", "[", "\"mask\"", "]", ",", "torch", ".", "Tensor", ")", "and", "data", "[", "\"mask\"", "]", ".", "shape", "==", "mask", ".", "shape", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "assert", "data", "[", "\"mask\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_pytorch.test_torch_to_tensor_v2_augmentations_with_transpose_2d_mask": [[22, 35], ["albumentations.pytorch.transforms.ToTensorV2", "albumentations.pytorch.transforms.ToTensorV2.", "isinstance", "isinstance"], "function", ["None"], ["", "def", "test_torch_to_tensor_v2_augmentations_with_transpose_2d_mask", "(", "image", ",", "mask", ")", ":", "\n", "    ", "aug", "=", "ToTensorV2", "(", "transpose_mask", "=", "True", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ",", "force_apply", "=", "True", ")", "\n", "image_height", ",", "image_width", ",", "image_num_channels", "=", "image", ".", "shape", "\n", "mask_height", ",", "mask_width", "=", "mask", ".", "shape", "\n", "assert", "isinstance", "(", "data", "[", "\"image\"", "]", ",", "torch", ".", "Tensor", ")", "and", "data", "[", "\"image\"", "]", ".", "shape", "==", "(", "\n", "image_num_channels", ",", "\n", "image_height", ",", "\n", "image_width", ",", "\n", ")", "\n", "assert", "isinstance", "(", "data", "[", "\"mask\"", "]", ",", "torch", ".", "Tensor", ")", "and", "data", "[", "\"mask\"", "]", ".", "shape", "==", "(", "mask_height", ",", "mask_width", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "assert", "data", "[", "\"mask\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_pytorch.test_torch_to_tensor_v2_augmentations_with_transpose_3d_mask": [[37, 55], ["albumentations.pytorch.transforms.ToTensorV2", "numpy.random.randint", "albumentations.pytorch.transforms.ToTensorV2.", "isinstance", "isinstance"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "test_torch_to_tensor_v2_augmentations_with_transpose_3d_mask", "(", "image", ")", ":", "\n", "    ", "aug", "=", "ToTensorV2", "(", "transpose_mask", "=", "True", ")", "\n", "mask", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "4", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "data", "=", "aug", "(", "image", "=", "image", ",", "mask", "=", "mask", ",", "force_apply", "=", "True", ")", "\n", "image_height", ",", "image_width", ",", "image_num_channels", "=", "image", ".", "shape", "\n", "mask_height", ",", "mask_width", ",", "mask_num_channels", "=", "mask", ".", "shape", "\n", "assert", "isinstance", "(", "data", "[", "\"image\"", "]", ",", "torch", ".", "Tensor", ")", "and", "data", "[", "\"image\"", "]", ".", "shape", "==", "(", "\n", "image_num_channels", ",", "\n", "image_height", ",", "\n", "image_width", ",", "\n", ")", "\n", "assert", "isinstance", "(", "data", "[", "\"mask\"", "]", ",", "torch", ".", "Tensor", ")", "and", "data", "[", "\"mask\"", "]", ".", "shape", "==", "(", "\n", "mask_num_channels", ",", "\n", "mask_height", ",", "\n", "mask_width", ",", "\n", ")", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "assert", "data", "[", "\"mask\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_pytorch.test_additional_targets_for_totensorv2": [[57, 82], ["albumentations.Compose", "range", "numpy.random.randint", "np.random.randint.copy", "numpy.random.randint", "np.random.randint.copy", "A.Compose.", "numpy.array_equal", "numpy.array_equal", "albumentations.pytorch.transforms.ToTensorV2", "isinstance", "isinstance", "isinstance", "isinstance"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "test_additional_targets_for_totensorv2", "(", ")", ":", "\n", "    ", "aug", "=", "A", ".", "Compose", "(", "[", "ToTensorV2", "(", ")", "]", ",", "additional_targets", "=", "{", "\"image2\"", ":", "\"image\"", ",", "\"mask2\"", ":", "\"mask\"", "}", ")", "\n", "for", "_i", "in", "range", "(", "10", ")", ":", "\n", "        ", "image1", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "image2", "=", "image1", ".", "copy", "(", ")", "\n", "mask1", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "4", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask2", "=", "mask1", ".", "copy", "(", ")", "\n", "res", "=", "aug", "(", "image", "=", "image1", ",", "image2", "=", "image2", ",", "mask", "=", "mask1", ",", "mask2", "=", "mask2", ")", "\n", "\n", "image1_height", ",", "image1_width", ",", "image1_num_channels", "=", "image1", ".", "shape", "\n", "image2_height", ",", "image2_width", ",", "image2_num_channels", "=", "image2", ".", "shape", "\n", "assert", "isinstance", "(", "res", "[", "\"image\"", "]", ",", "torch", ".", "Tensor", ")", "and", "res", "[", "\"image\"", "]", ".", "shape", "==", "(", "\n", "image1_num_channels", ",", "\n", "image1_height", ",", "\n", "image1_width", ",", "\n", ")", "\n", "assert", "isinstance", "(", "res", "[", "\"image2\"", "]", ",", "torch", ".", "Tensor", ")", "and", "res", "[", "\"image2\"", "]", ".", "shape", "==", "(", "\n", "image2_num_channels", ",", "\n", "image2_height", ",", "\n", "image2_width", ",", "\n", ")", "\n", "assert", "isinstance", "(", "res", "[", "\"mask\"", "]", ",", "torch", ".", "Tensor", ")", "and", "res", "[", "\"mask\"", "]", ".", "shape", "==", "mask1", ".", "shape", "\n", "assert", "isinstance", "(", "res", "[", "\"mask2\"", "]", ",", "torch", ".", "Tensor", ")", "and", "res", "[", "\"mask2\"", "]", ".", "shape", "==", "mask2", ".", "shape", "\n", "assert", "np", ".", "array_equal", "(", "res", "[", "\"image\"", "]", ",", "res", "[", "\"image2\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "res", "[", "\"mask\"", "]", ",", "res", "[", "\"mask2\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_pytorch.test_torch_to_tensor_v2_on_gray_scale_images": [[84, 92], ["albumentations.pytorch.transforms.ToTensorV2", "numpy.random.randint", "albumentations.pytorch.transforms.ToTensorV2.", "isinstance", "len"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "", "def", "test_torch_to_tensor_v2_on_gray_scale_images", "(", ")", ":", "\n", "    ", "aug", "=", "ToTensorV2", "(", ")", "\n", "grayscale_image", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "data", "=", "aug", "(", "image", "=", "grayscale_image", ")", "\n", "assert", "isinstance", "(", "data", "[", "\"image\"", "]", ",", "torch", ".", "Tensor", ")", "\n", "assert", "len", "(", "data", "[", "\"image\"", "]", ".", "shape", ")", "==", "3", "\n", "assert", "data", "[", "\"image\"", "]", ".", "shape", "[", "1", ":", "]", "==", "grayscale_image", ".", "shape", "\n", "assert", "data", "[", "\"image\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_pytorch.test_torch_to_tensor_raises_runtime_error": [[94, 104], ["pytest.raises", "albumentations.pytorch.transforms.ToTensor", "str"], "function", ["None"], ["", "def", "test_torch_to_tensor_raises_runtime_error", "(", ")", ":", "\n", "    ", "with", "pytest", ".", "raises", "(", "RuntimeError", ")", "as", "exc_info", ":", "\n", "        ", "aug", "=", "ToTensor", "(", ")", "# noqa F841", "\n", "", "message", "=", "(", "\n", "\"`ToTensor` is obsolete and it was removed from Albumentations. Please use `ToTensorV2` instead - \"", "\n", "\"https://albumentations.ai/docs/api_reference/pytorch/transforms/\"", "\n", "\"#albumentations.pytorch.transforms.ToTensorV2. \"", "\n", "\"\\n\\nIf you need `ToTensor` downgrade Albumentations to version 0.5.2.\"", "\n", ")", "\n", "assert", "str", "(", "exc_info", ".", "value", ")", "==", "message", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_pytorch.test_with_replaycompose": [[106, 120], ["albumentations.ReplayCompose", "A.ReplayCompose.", "albumentations.ReplayCompose.replay", "numpy.array_equal", "numpy.array_equal", "numpy.random.randint", "numpy.random.randint", "albumentations.pytorch.transforms.ToTensorV2"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.core.composition.ReplayCompose.replay", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint", "home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "def", "test_with_replaycompose", "(", ")", ":", "\n", "    ", "aug", "=", "A", ".", "ReplayCompose", "(", "[", "ToTensorV2", "(", ")", "]", ")", "\n", "kwargs", "=", "{", "\n", "\"image\"", ":", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "\n", "\"mask\"", ":", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "256", ",", "size", "=", "(", "100", ",", "100", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "\n", "}", "\n", "res", "=", "aug", "(", "**", "kwargs", ")", "\n", "res2", "=", "A", ".", "ReplayCompose", ".", "replay", "(", "res", "[", "\"replay\"", "]", ",", "**", "kwargs", ")", "\n", "assert", "np", ".", "array_equal", "(", "res", "[", "\"image\"", "]", ",", "res2", "[", "\"image\"", "]", ")", "\n", "assert", "np", ".", "array_equal", "(", "res", "[", "\"mask\"", "]", ",", "res2", "[", "\"mask\"", "]", ")", "\n", "assert", "res", "[", "\"image\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "assert", "res", "[", "\"mask\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "assert", "res2", "[", "\"image\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "assert", "res2", "[", "\"mask\"", "]", ".", "dtype", "==", "torch", ".", "uint8", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_pytorch.test_color_jitter": [[122, 163], ["pytest.mark.parametrize", "numpy.random.seed", "numpy.random.randint", "PIL.Image.fromarray", "albumentations.Compose", "torchvision.transforms.ColorJitter", "numpy.array", "numpy.abs().max", "A.Compose.", "torchvision.transforms.ColorJitter.", "albumentations.ColorJitter", "numpy.abs", "res1.astype", "np.array.astype"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.albumentations.random_utils.randint"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "[", "\"brightness\"", ",", "\"contrast\"", ",", "\"saturation\"", ",", "\"hue\"", "]", ",", "\n", "[", "\n", "[", "1", ",", "1", ",", "1", ",", "0", "]", ",", "\n", "[", "0.123", ",", "1", ",", "1", ",", "0", "]", ",", "\n", "[", "1.321", ",", "1", ",", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "0.234", ",", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "1.432", ",", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "1", ",", "0.345", ",", "0", "]", ",", "\n", "[", "1", ",", "1", ",", "1.543", ",", "0", "]", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_color_jitter", "(", "brightness", ",", "contrast", ",", "saturation", ",", "hue", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "img", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "256", ",", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "pil_image", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n", "transform", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "ColorJitter", "(", "\n", "brightness", "=", "[", "brightness", ",", "brightness", "]", ",", "\n", "contrast", "=", "[", "contrast", ",", "contrast", "]", ",", "\n", "saturation", "=", "[", "saturation", ",", "saturation", "]", ",", "\n", "hue", "=", "[", "hue", ",", "hue", "]", ",", "\n", "p", "=", "1", ",", "\n", ")", "\n", "]", "\n", ")", "\n", "\n", "pil_transform", "=", "ColorJitter", "(", "\n", "brightness", "=", "[", "brightness", ",", "brightness", "]", ",", "\n", "contrast", "=", "[", "contrast", ",", "contrast", "]", ",", "\n", "saturation", "=", "[", "saturation", ",", "saturation", "]", ",", "\n", "hue", "=", "[", "hue", ",", "hue", "]", ",", "\n", ")", "\n", "\n", "res1", "=", "transform", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "res2", "=", "np", ".", "array", "(", "pil_transform", "(", "pil_image", ")", ")", "\n", "\n", "_max", "=", "np", ".", "abs", "(", "res1", ".", "astype", "(", "np", ".", "int16", ")", "-", "res2", ".", "astype", "(", "np", ".", "int16", ")", ")", ".", "max", "(", ")", "\n", "assert", "_max", "<=", "2", ",", "\"Max: {}\"", ".", "format", "(", "_max", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.tests.test_pytorch.test_post_data_check": [[165, 189], ["numpy.empty", "albumentations.Compose", "A.Compose.", "albumentations.Resize", "albumentations.Normalize", "albumentations.pytorch.transforms.ToTensorV2", "albumentations.KeypointParams", "albumentations.BboxParams", "len", "len"], "function", ["None"], ["", "def", "test_post_data_check", "(", ")", ":", "\n", "    ", "img", "=", "np", ".", "empty", "(", "[", "100", ",", "100", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "bboxes", "=", "[", "\n", "[", "0", ",", "0", ",", "90", ",", "90", ",", "0", "]", ",", "\n", "]", "\n", "keypoints", "=", "[", "\n", "[", "90", ",", "90", "]", ",", "\n", "[", "50", ",", "50", "]", ",", "\n", "]", "\n", "\n", "transform", "=", "A", ".", "Compose", "(", "\n", "[", "\n", "A", ".", "Resize", "(", "50", ",", "50", ")", ",", "\n", "A", ".", "Normalize", "(", ")", ",", "\n", "ToTensorV2", "(", ")", ",", "\n", "]", ",", "\n", "keypoint_params", "=", "A", ".", "KeypointParams", "(", "\"xy\"", ")", ",", "\n", "bbox_params", "=", "A", ".", "BboxParams", "(", "\"pascal_voc\"", ")", ",", "\n", ")", "\n", "\n", "res", "=", "transform", "(", "image", "=", "img", ",", "keypoints", "=", "keypoints", ",", "bboxes", "=", "bboxes", ")", "\n", "assert", "len", "(", "res", "[", "\"keypoints\"", "]", ")", "!=", "0", "and", "len", "(", "res", "[", "\"bboxes\"", "]", ")", "!=", "0", "\n", "assert", "res", "[", "\"keypoints\"", "]", "==", "[", "(", "45", ",", "45", ")", ",", "(", "25", ",", "25", ")", "]", "\n", "assert", "res", "[", "\"bboxes\"", "]", "==", "[", "(", "0", ",", "0", ",", "45", ",", "45", ",", "0", ")", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.__init__": [[93, 97], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "df", ",", "package_versions", ")", ":", "\n", "        ", "self", ".", "_df", "=", "df", "\n", "self", ".", "_package_versions", "=", "package_versions", "\n", "self", ".", "_libraries_description", "=", "{", "\"torchvision\"", ":", "\"(Pillow-SIMD backend)\"", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator._highlight_best_result": [[98, 108], ["float", "int", "str"], "methods", ["None"], ["", "def", "_highlight_best_result", "(", "self", ",", "results", ")", ":", "\n", "        ", "best_result", "=", "float", "(", "\"-inf\"", ")", "\n", "for", "result", "in", "results", ":", "\n", "            ", "try", ":", "\n", "                ", "result", "=", "int", "(", "result", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "continue", "\n", "", "if", "result", ">", "best_result", ":", "\n", "                ", "best_result", "=", "result", "\n", "", "", "return", "[", "\"**{}**\"", ".", "format", "(", "r", ")", "if", "r", "==", "str", "(", "best_result", ")", "else", "r", "for", "r", "in", "results", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator._make_headers": [[109, 120], ["benchmark.MarkdownGenerator._df.columns.to_list", "benchmark.MarkdownGenerator._libraries_description.get", "columns.append"], "methods", ["None"], ["", "def", "_make_headers", "(", "self", ")", ":", "\n", "        ", "libraries", "=", "self", ".", "_df", ".", "columns", ".", "to_list", "(", ")", "\n", "columns", "=", "[", "]", "\n", "for", "library", "in", "libraries", ":", "\n", "            ", "version", "=", "self", ".", "_package_versions", "[", "library", "]", "\n", "library_description", "=", "self", ".", "_libraries_description", ".", "get", "(", "library", ")", "\n", "if", "library_description", ":", "\n", "                ", "library", "+=", "\" {}\"", ".", "format", "(", "library_description", ")", "\n", "\n", "", "columns", ".", "append", "(", "\"{library}<br><small>{version}</small>\"", ".", "format", "(", "library", "=", "library", ",", "version", "=", "version", ")", ")", "\n", "", "return", "[", "\"\"", "]", "+", "columns", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator._make_value_matrix": [[121, 129], ["benchmark.MarkdownGenerator._df.index.tolist", "benchmark.MarkdownGenerator._df.values.tolist", "zip", "value_matrix.append", "benchmark.MarkdownGenerator._highlight_best_result"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator._highlight_best_result"], ["", "def", "_make_value_matrix", "(", "self", ")", ":", "\n", "        ", "index", "=", "self", ".", "_df", ".", "index", ".", "tolist", "(", ")", "\n", "values", "=", "self", ".", "_df", ".", "values", ".", "tolist", "(", ")", "\n", "value_matrix", "=", "[", "]", "\n", "for", "transform", ",", "results", "in", "zip", "(", "index", ",", "values", ")", ":", "\n", "            ", "row", "=", "[", "transform", "]", "+", "self", ".", "_highlight_best_result", "(", "results", ")", "\n", "value_matrix", ".", "append", "(", "row", ")", "\n", "", "return", "value_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator._make_versions_text": [[130, 137], ["benchmark.MarkdownGenerator._package_versions[].replace"], "methods", ["None"], ["", "def", "_make_versions_text", "(", "self", ")", ":", "\n", "        ", "libraries", "=", "[", "\"Python\"", ",", "\"numpy\"", ",", "\"pillow-simd\"", ",", "\"opencv-python\"", ",", "\"scikit-image\"", ",", "\"scipy\"", "]", "\n", "libraries_with_versions", "=", "[", "\n", "\"{library} {version}\"", ".", "format", "(", "library", "=", "library", ",", "version", "=", "self", ".", "_package_versions", "[", "library", "]", ".", "replace", "(", "\"\\n\"", ",", "\"\"", ")", ")", "\n", "for", "library", "in", "libraries", "\n", "]", "\n", "return", "\"Python and library versions: {}.\"", ".", "format", "(", "\", \"", ".", "join", "(", "libraries_with_versions", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print": [[138, 145], ["pytablewriter.MarkdownTableWriter", "benchmark.MarkdownGenerator._make_headers", "benchmark.MarkdownGenerator._make_value_matrix", "pytablewriter.MarkdownTableWriter.write_table", "benchmark.MarkdownGenerator.print"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator._make_headers", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator._make_value_matrix", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print"], ["", "def", "print", "(", "self", ")", ":", "\n", "        ", "writer", "=", "MarkdownTableWriter", "(", ")", "\n", "writer", ".", "headers", "=", "self", ".", "_make_headers", "(", ")", "\n", "writer", ".", "value_matrix", "=", "self", ".", "_make_value_matrix", "(", ")", "\n", "writer", ".", "styles", "=", "[", "Style", "(", "align", "=", "\"left\"", ")", "]", "+", "[", "Style", "(", "align", "=", "\"center\"", ")", "for", "_", "in", "range", "(", "len", "(", "writer", ".", "headers", ")", "-", "1", ")", "]", "\n", "writer", ".", "write_table", "(", ")", "\n", "print", "(", "\"\\n\"", "+", "self", ".", "_make_versions_text", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BenchmarkTest.__str__": [[169, 171], ["None"], "methods", ["None"], ["    ", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BenchmarkTest.imgaug": [[172, 174], ["benchmark.BenchmarkTest.imgaug_transform.augment_image"], "methods", ["None"], ["", "def", "imgaug", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "self", ".", "imgaug_transform", ".", "augment_image", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BenchmarkTest.augmentor": [[175, 178], ["numpy.array", "benchmark.BenchmarkTest.augmentor_op.perform_operation"], "methods", ["None"], ["", "def", "augmentor", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "self", ".", "augmentor_op", ".", "perform_operation", "(", "[", "img", "]", ")", "[", "0", "]", "\n", "return", "np", ".", "array", "(", "img", ",", "np", ".", "uint8", ",", "copy", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BenchmarkTest.solt": [[179, 181], ["benchmark.BenchmarkTest.solt_stream"], "methods", ["None"], ["", "def", "solt", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "self", ".", "solt_stream", "(", "{", "\"image\"", ":", "img", "}", ",", "return_torch", "=", "False", ")", ".", "data", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BenchmarkTest.torchvision": [[182, 185], ["benchmark.BenchmarkTest.torchvision_transform", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.torchvision_transform"], ["", "def", "torchvision", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "self", ".", "torchvision_transform", "(", "img", ")", "\n", "return", "np", ".", "array", "(", "img", ",", "np", ".", "uint8", ",", "copy", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BenchmarkTest.is_supported_by": [[186, 197], ["hasattr", "hasattr", "hasattr", "hasattr", "hasattr", "hasattr"], "methods", ["None"], ["", "def", "is_supported_by", "(", "self", ",", "library", ")", ":", "\n", "        ", "if", "library", "==", "\"imgaug\"", ":", "\n", "            ", "return", "hasattr", "(", "self", ",", "\"imgaug_transform\"", ")", "\n", "", "if", "library", "==", "\"augmentor\"", ":", "\n", "            ", "return", "hasattr", "(", "self", ",", "\"augmentor_op\"", ")", "or", "hasattr", "(", "self", ",", "\"augmentor_pipeline\"", ")", "\n", "", "if", "library", "==", "\"solt\"", ":", "\n", "            ", "return", "hasattr", "(", "self", ",", "\"solt_stream\"", ")", "\n", "", "if", "library", "==", "\"torchvision\"", ":", "\n", "            ", "return", "hasattr", "(", "self", ",", "\"torchvision_transform\"", ")", "\n", "\n", "", "return", "hasattr", "(", "self", ",", "library", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BenchmarkTest.run": [[198, 202], ["getattr", "getattr."], "methods", ["None"], ["", "def", "run", "(", "self", ",", "library", ",", "imgs", ")", ":", "\n", "        ", "transform", "=", "getattr", "(", "self", ",", "library", ")", "\n", "for", "img", "in", "imgs", ":", "\n", "            ", "transform", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.HorizontalFlip.__init__": [[205, 209], ["imgaug.augmenters.Fliplr", "Augmentor.Operations.Flip", "solt.Stream", "solt.Stream", "solt.Stream", "solt.Flip", "solt.Flip", "solt.Flip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "Fliplr", "(", "p", "=", "1", ")", "\n", "self", ".", "augmentor_op", "=", "Operations", ".", "Flip", "(", "probability", "=", "1", ",", "top_bottom_left_right", "=", "\"LEFT_RIGHT\"", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "Flip", "(", "p", "=", "1", ",", "axis", "=", "1", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.HorizontalFlip.albumentations": [[210, 215], ["albumentations.hflip", "albumentations.hflip", "albumentations.hflip", "albumentations.hflip", "albumentations.hflip_cv2", "albumentations.hflip_cv2", "albumentations.hflip_cv2", "albumentations.hflip_cv2"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip_cv2", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip_cv2", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip_cv2", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip_cv2"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "img", ".", "ndim", "==", "3", "and", "img", ".", "shape", "[", "2", "]", ">", "1", "and", "img", ".", "dtype", "==", "np", ".", "uint8", ":", "\n", "            ", "return", "albumentations", ".", "hflip_cv2", "(", "img", ")", "\n", "\n", "", "return", "albumentations", ".", "hflip", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.HorizontalFlip.torchvision_transform": [[216, 218], ["torchvision.hflip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.hflip"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "torchvision", ".", "hflip", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.HorizontalFlip.keras": [[219, 221], ["numpy.ascontiguousarray", "keras_preprocessing.flip_axis"], "methods", ["None"], ["", "def", "keras", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "np", ".", "ascontiguousarray", "(", "keras", ".", "flip_axis", "(", "img", ",", "axis", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.HorizontalFlip.imgaug": [[222, 224], ["numpy.ascontiguousarray", "benchmark.HorizontalFlip.imgaug_transform.augment_image"], "methods", ["None"], ["", "def", "imgaug", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "np", ".", "ascontiguousarray", "(", "self", ".", "imgaug_transform", ".", "augment_image", "(", "img", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.VerticalFlip.__init__": [[227, 231], ["imgaug.augmenters.Flipud", "Augmentor.Operations.Flip", "solt.Stream", "solt.Stream", "solt.Stream", "solt.Flip", "solt.Flip", "solt.Flip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "Flipud", "(", "p", "=", "1", ")", "\n", "self", ".", "augmentor_op", "=", "Operations", ".", "Flip", "(", "probability", "=", "1", ",", "top_bottom_left_right", "=", "\"TOP_BOTTOM\"", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "Flip", "(", "p", "=", "1", ",", "axis", "=", "0", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.VerticalFlip.albumentations": [[232, 234], ["albumentations.vflip", "albumentations.vflip", "albumentations.vflip", "albumentations.vflip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "vflip", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.VerticalFlip.torchvision_transform": [[235, 237], ["torchvision.vflip"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.vflip"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "torchvision", ".", "vflip", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.VerticalFlip.keras": [[238, 240], ["numpy.ascontiguousarray", "keras_preprocessing.flip_axis"], "methods", ["None"], ["", "def", "keras", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "np", ".", "ascontiguousarray", "(", "keras", ".", "flip_axis", "(", "img", ",", "axis", "=", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.VerticalFlip.imgaug": [[241, 243], ["numpy.ascontiguousarray", "benchmark.VerticalFlip.imgaug_transform.augment_image"], "methods", ["None"], ["", "def", "imgaug", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "np", ".", "ascontiguousarray", "(", "self", ".", "imgaug_transform", ".", "augment_image", "(", "img", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Rotate.__init__": [[246, 250], ["imgaug.augmenters.Affine", "Augmentor.Operations.RotateStandard", "solt.Stream", "solt.Stream", "solt.Stream", "solt.Rotate", "solt.Rotate", "solt.Rotate"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "Affine", "(", "rotate", "=", "(", "45", ",", "45", ")", ",", "order", "=", "1", ",", "mode", "=", "\"reflect\"", ")", "\n", "self", ".", "augmentor_op", "=", "Operations", ".", "RotateStandard", "(", "probability", "=", "1", ",", "max_left_rotation", "=", "45", ",", "max_right_rotation", "=", "45", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "Rotate", "(", "p", "=", "1", ",", "angle_range", "=", "(", "45", ",", "45", ")", ")", "]", ",", "padding", "=", "\"r\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Rotate.albumentations": [[251, 253], ["albumentations.augmentations.geometric.functional.rotate", "albumentations.augmentations.geometric.functional.rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "rotate", "(", "img", ",", "angle", "=", "-", "45", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Rotate.torchvision_transform": [[254, 256], ["torchvision.rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.rotate"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "torchvision", ".", "rotate", "(", "img", ",", "angle", "=", "-", "45", ",", "resample", "=", "Image", ".", "BILINEAR", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Rotate.keras": [[257, 260], ["keras_preprocessing.apply_affine_transform", "numpy.ascontiguousarray"], "methods", ["None"], ["", "def", "keras", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "keras", ".", "apply_affine_transform", "(", "img", ",", "theta", "=", "45", ",", "channel_axis", "=", "2", ",", "fill_mode", "=", "\"reflect\"", ")", "\n", "return", "np", ".", "ascontiguousarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Brightness.__init__": [[263, 267], ["imgaug.augmenters.Add", "Augmentor.Operations.RandomBrightness", "solt.Stream", "solt.Stream", "solt.Stream", "solt.Brightness", "solt.Brightness", "solt.Brightness"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "Add", "(", "(", "127", ",", "127", ")", ",", "per_channel", "=", "False", ")", "\n", "self", ".", "augmentor_op", "=", "Operations", ".", "RandomBrightness", "(", "probability", "=", "1", ",", "min_factor", "=", "1.5", ",", "max_factor", "=", "1.5", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "Brightness", "(", "p", "=", "1", ",", "brightness_range", "=", "(", "127", ",", "127", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Brightness.albumentations": [[268, 270], ["albumentations.brightness_contrast_adjust", "albumentations.brightness_contrast_adjust", "albumentations.brightness_contrast_adjust", "albumentations.brightness_contrast_adjust"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "brightness_contrast_adjust", "(", "img", ",", "beta", "=", "0.5", ",", "beta_by_max", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Brightness.torchvision_transform": [[271, 273], ["torchvision.adjust_brightness"], "methods", ["None"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "torchvision", ".", "adjust_brightness", "(", "img", ",", "brightness_factor", "=", "1.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Brightness.keras": [[274, 276], ["keras_preprocessing.apply_brightness_shift().astype", "keras_preprocessing.apply_brightness_shift"], "methods", ["None"], ["", "def", "keras", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "keras", ".", "apply_brightness_shift", "(", "img", ",", "brightness", "=", "1.5", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Contrast.__init__": [[279, 283], ["imgaug.augmenters.Multiply", "Augmentor.Operations.RandomContrast", "solt.Stream", "solt.Stream", "solt.Stream", "solt.Contrast", "solt.Contrast", "solt.Contrast"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "Multiply", "(", "(", "1.5", ",", "1.5", ")", ",", "per_channel", "=", "False", ")", "\n", "self", ".", "augmentor_op", "=", "Operations", ".", "RandomContrast", "(", "probability", "=", "1", ",", "min_factor", "=", "1.5", ",", "max_factor", "=", "1.5", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "Contrast", "(", "p", "=", "1", ",", "contrast_range", "=", "(", "1.5", ",", "1.5", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Contrast.albumentations": [[284, 286], ["albumentations.brightness_contrast_adjust", "albumentations.brightness_contrast_adjust", "albumentations.brightness_contrast_adjust", "albumentations.brightness_contrast_adjust"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "brightness_contrast_adjust", "(", "img", ",", "alpha", "=", "1.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Contrast.torchvision_transform": [[287, 289], ["torchvision.adjust_contrast"], "methods", ["None"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "torchvision", ".", "adjust_contrast", "(", "img", ",", "contrast_factor", "=", "1.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BrightnessContrast.__init__": [[292, 303], ["imgaug.augmenters.Sequential", "Augmentor.Pipeline", "benchmark.BrightnessContrast.augmentor_pipeline.add_operation", "benchmark.BrightnessContrast.augmentor_pipeline.add_operation", "solt.Stream", "solt.Stream", "solt.Stream", "Augmentor.Operations.RandomBrightness", "Augmentor.Operations.RandomContrast", "imgaug.augmenters.Multiply", "imgaug.augmenters.Add", "solt.Brightness", "solt.Brightness", "solt.Brightness", "solt.Contrast", "solt.Contrast", "solt.Contrast"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "Sequential", "(", "\n", "[", "iaa", ".", "Multiply", "(", "(", "1.5", ",", "1.5", ")", ",", "per_channel", "=", "False", ")", ",", "iaa", ".", "Add", "(", "(", "127", ",", "127", ")", ",", "per_channel", "=", "False", ")", "]", "\n", ")", "\n", "self", ".", "augmentor_pipeline", "=", "Pipeline", "(", ")", "\n", "self", ".", "augmentor_pipeline", ".", "add_operation", "(", "\n", "Operations", ".", "RandomBrightness", "(", "probability", "=", "1", ",", "min_factor", "=", "1.5", ",", "max_factor", "=", "1.5", ")", "\n", ")", "\n", "self", ".", "augmentor_pipeline", ".", "add_operation", "(", "Operations", ".", "RandomContrast", "(", "probability", "=", "1", ",", "min_factor", "=", "1.5", ",", "max_factor", "=", "1.5", ")", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "\n", "[", "slt", ".", "Brightness", "(", "p", "=", "1", ",", "brightness_range", "=", "(", "127", ",", "127", ")", ")", ",", "slt", ".", "Contrast", "(", "p", "=", "1", ",", "contrast_range", "=", "(", "1.5", ",", "1.5", ")", ")", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BrightnessContrast.albumentations": [[305, 307], ["albumentations.brightness_contrast_adjust", "albumentations.brightness_contrast_adjust", "albumentations.brightness_contrast_adjust", "albumentations.brightness_contrast_adjust"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.brightness_contrast_adjust"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "brightness_contrast_adjust", "(", "img", ",", "alpha", "=", "1.5", ",", "beta", "=", "0.5", ",", "beta_by_max", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BrightnessContrast.torchvision_transform": [[308, 312], ["torchvision.adjust_brightness", "torchvision.adjust_contrast"], "methods", ["None"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "torchvision", ".", "adjust_brightness", "(", "img", ",", "brightness_factor", "=", "1.5", ")", "\n", "img", "=", "torchvision", ".", "adjust_contrast", "(", "img", ",", "contrast_factor", "=", "1.5", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BrightnessContrast.augmentor": [[313, 317], ["numpy.array", "operation.perform_operation"], "methods", ["None"], ["", "def", "augmentor", "(", "self", ",", "img", ")", ":", "\n", "        ", "for", "operation", "in", "self", ".", "augmentor_pipeline", ".", "operations", ":", "\n", "            ", "(", "img", ",", ")", "=", "operation", ".", "perform_operation", "(", "[", "img", "]", ")", "\n", "", "return", "np", ".", "array", "(", "img", ",", "np", ".", "uint8", ",", "copy", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ShiftScaleRotate.__init__": [[320, 323], ["imgaug.augmenters.Affine"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "Affine", "(", "\n", "scale", "=", "(", "2", ",", "2", ")", ",", "rotate", "=", "(", "45", ",", "45", ")", ",", "translate_px", "=", "(", "50", ",", "50", ")", ",", "order", "=", "1", ",", "mode", "=", "\"reflect\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ShiftScaleRotate.albumentations": [[325, 327], ["albumentations.augmentations.geometric.functional.shift_scale_rotate", "albumentations.augmentations.geometric.functional.shift_scale_rotate"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.shift_scale_rotate"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "shift_scale_rotate", "(", "img", ",", "angle", "=", "-", "45", ",", "scale", "=", "2", ",", "dx", "=", "0.2", ",", "dy", "=", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ShiftScaleRotate.torchvision_transform": [[328, 330], ["torchvision.affine"], "methods", ["None"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "torchvision", ".", "affine", "(", "img", ",", "angle", "=", "45", ",", "translate", "=", "(", "50", ",", "50", ")", ",", "scale", "=", "2", ",", "shear", "=", "0", ",", "resample", "=", "Image", ".", "BILINEAR", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ShiftScaleRotate.keras": [[331, 334], ["keras_preprocessing.apply_affine_transform", "numpy.ascontiguousarray"], "methods", ["None"], ["", "def", "keras", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "keras", ".", "apply_affine_transform", "(", "img", ",", "theta", "=", "45", ",", "tx", "=", "50", ",", "ty", "=", "50", ",", "zx", "=", "0.5", ",", "zy", "=", "0.5", ",", "fill_mode", "=", "\"reflect\"", ")", "\n", "return", "np", ".", "ascontiguousarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ShiftHSV.__init__": [[337, 340], ["imgaug.augmenters.AddToHueAndSaturation", "solt.Stream", "solt.Stream", "solt.Stream", "solt.HSV", "solt.HSV", "solt.HSV"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "AddToHueAndSaturation", "(", "(", "20", ",", "20", ")", ",", "per_channel", "=", "False", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "HSV", "(", "p", "=", "1", ",", "h_range", "=", "(", "20", ",", "20", ")", ",", "s_range", "=", "(", "20", ",", "20", ")", ",", "v_range", "=", "(", "20", ",", "20", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ShiftHSV.albumentations": [[341, 343], ["albumentations.shift_hsv", "albumentations.shift_hsv", "albumentations.shift_hsv", "albumentations.shift_hsv"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_hsv", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_hsv", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_hsv", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_hsv"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "shift_hsv", "(", "img", ",", "hue_shift", "=", "20", ",", "sat_shift", "=", "20", ",", "val_shift", "=", "20", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ShiftHSV.torchvision_transform": [[344, 349], ["torchvision.adjust_hue", "torchvision.adjust_saturation", "torchvision.adjust_brightness"], "methods", ["None"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "torchvision", ".", "adjust_hue", "(", "img", ",", "hue_factor", "=", "0.1", ")", "\n", "img", "=", "torchvision", ".", "adjust_saturation", "(", "img", ",", "saturation_factor", "=", "1.2", ")", "\n", "img", "=", "torchvision", ".", "adjust_brightness", "(", "img", ",", "brightness_factor", "=", "1.2", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Solarize.__init__": [[352, 354], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Solarize.albumentations": [[355, 357], ["albumentations.solarize", "albumentations.solarize", "albumentations.solarize", "albumentations.solarize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.solarize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.solarize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.solarize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.solarize"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "solarize", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Solarize.pillow": [[358, 360], ["PIL.ImageOps.solarize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.solarize"], ["", "def", "pillow", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "ImageOps", ".", "solarize", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Equalize.__init__": [[363, 366], ["imgaug.augmenters.AllChannelsHistogramEqualization", "Augmentor.Operations.HistogramEqualisation"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "AllChannelsHistogramEqualization", "(", ")", "\n", "self", ".", "augmentor_op", "=", "Operations", ".", "HistogramEqualisation", "(", "probability", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Equalize.albumentations": [[367, 369], ["albumentations.equalize", "albumentations.equalize", "albumentations.equalize", "albumentations.equalize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "equalize", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Equalize.pillow": [[370, 372], ["PIL.ImageOps.equalize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.equalize"], ["", "def", "pillow", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "ImageOps", ".", "equalize", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Equalize.imgaug": [[373, 376], ["benchmark.Equalize.imgaug_transform.augment_image", "numpy.ascontiguousarray"], "methods", ["None"], ["", "def", "imgaug", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "self", ".", "imgaug_transform", ".", "augment_image", "(", "img", ")", "\n", "return", "np", ".", "ascontiguousarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.RandomCrop64.__init__": [[379, 383], ["imgaug.augmenters.CropToFixedSize", "Augmentor.Operations.Crop", "solt.Stream", "solt.Stream", "solt.Stream", "solt.Crop", "solt.Crop", "solt.Crop"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "CropToFixedSize", "(", "width", "=", "64", ",", "height", "=", "64", ")", "\n", "self", ".", "augmentor_op", "=", "Operations", ".", "Crop", "(", "probability", "=", "1", ",", "width", "=", "64", ",", "height", "=", "64", ",", "centre", "=", "False", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "Crop", "(", "crop_to", "=", "(", "64", ",", "64", ")", ",", "crop_mode", "=", "\"r\"", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.RandomCrop64.albumentations": [[384, 387], ["albumentations.augmentations.crops.functional.random_crop", "albumentations.augmentations.crops.functional.random_crop", "numpy.ascontiguousarray"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "random_crop", "(", "img", ",", "crop_height", "=", "64", ",", "crop_width", "=", "64", ",", "h_start", "=", "0", ",", "w_start", "=", "0", ")", "\n", "return", "np", ".", "ascontiguousarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.RandomCrop64.torchvision_transform": [[388, 390], ["torchvision.crop"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "torchvision", ".", "crop", "(", "img", ",", "top", "=", "0", ",", "left", "=", "0", ",", "height", "=", "64", ",", "width", "=", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.RandomCrop64.solt": [[391, 394], ["numpy.ascontiguousarray", "benchmark.RandomCrop64.solt_stream"], "methods", ["None"], ["", "def", "solt", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "self", ".", "solt_stream", "(", "{", "\"image\"", ":", "img", "}", ",", "return_torch", "=", "False", ")", ".", "data", "[", "0", "]", "\n", "return", "np", ".", "ascontiguousarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.RandomSizedCrop_64_512.__init__": [[397, 407], ["Augmentor.Pipeline", "benchmark.RandomSizedCrop_64_512.augmentor_pipeline.add_operation", "benchmark.RandomSizedCrop_64_512.augmentor_pipeline.add_operation", "imgaug.augmenters.Sequential", "solt.Stream", "solt.Stream", "solt.Stream", "Augmentor.Operations.Crop", "Augmentor.Operations.Resize", "imgaug.augmenters.CropToFixedSize", "imgaug.augmenters.Scale", "solt.Crop", "solt.Crop", "solt.Crop", "solt.Resize", "solt.Resize", "solt.Resize"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "augmentor_pipeline", "=", "Pipeline", "(", ")", "\n", "self", ".", "augmentor_pipeline", ".", "add_operation", "(", "Operations", ".", "Crop", "(", "probability", "=", "1", ",", "width", "=", "64", ",", "height", "=", "64", ",", "centre", "=", "False", ")", ")", "\n", "self", ".", "augmentor_pipeline", ".", "add_operation", "(", "\n", "Operations", ".", "Resize", "(", "probability", "=", "1", ",", "width", "=", "512", ",", "height", "=", "512", ",", "resample_filter", "=", "\"BILINEAR\"", ")", "\n", ")", "\n", "self", ".", "imgaug_transform", "=", "iaa", ".", "Sequential", "(", "\n", "[", "iaa", ".", "CropToFixedSize", "(", "width", "=", "64", ",", "height", "=", "64", ")", ",", "iaa", ".", "Scale", "(", "size", "=", "512", ",", "interpolation", "=", "\"linear\"", ")", "]", "\n", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "Crop", "(", "crop_to", "=", "(", "64", ",", "64", ")", ",", "crop_mode", "=", "\"r\"", ")", ",", "slt", ".", "Resize", "(", "resize_to", "=", "(", "512", ",", "512", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.RandomSizedCrop_64_512.albumentations": [[408, 411], ["albumentations.augmentations.crops.functional.random_crop", "albumentations.augmentations.crops.functional.random_crop", "albumentations.augmentations.geometric.functional.resize", "albumentations.augmentations.geometric.functional.resize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop", "home.repos.pwc.inspect_result.albu_albumentations.crops.functional.random_crop", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "random_crop", "(", "img", ",", "crop_height", "=", "64", ",", "crop_width", "=", "64", ",", "h_start", "=", "0", ",", "w_start", "=", "0", ")", "\n", "return", "resize", "(", "img", ",", "height", "=", "512", ",", "width", "=", "512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.RandomSizedCrop_64_512.augmentor": [[412, 416], ["numpy.array", "operation.perform_operation"], "methods", ["None"], ["", "def", "augmentor", "(", "self", ",", "img", ")", ":", "\n", "        ", "for", "operation", "in", "self", ".", "augmentor_pipeline", ".", "operations", ":", "\n", "            ", "(", "img", ",", ")", "=", "operation", ".", "perform_operation", "(", "[", "img", "]", ")", "\n", "", "return", "np", ".", "array", "(", "img", ",", "np", ".", "uint8", ",", "copy", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.RandomSizedCrop_64_512.torchvision_transform": [[417, 420], ["torchvision.crop", "torchvision.resize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.crops.functional.crop", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "torchvision", ".", "crop", "(", "img", ",", "top", "=", "0", ",", "left", "=", "0", ",", "height", "=", "64", ",", "width", "=", "64", ")", "\n", "return", "torchvision", ".", "resize", "(", "img", ",", "(", "512", ",", "512", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ShiftRGB.__init__": [[423, 425], ["imgaug.augmenters.Add"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "Add", "(", "(", "100", ",", "100", ")", ",", "per_channel", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ShiftRGB.albumentations": [[426, 428], ["albumentations.shift_rgb", "albumentations.shift_rgb", "albumentations.shift_rgb", "albumentations.shift_rgb"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_rgb", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_rgb", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_rgb", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.shift_rgb"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "shift_rgb", "(", "img", ",", "r_shift", "=", "100", ",", "g_shift", "=", "100", ",", "b_shift", "=", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ShiftRGB.keras": [[429, 432], ["keras_preprocessing.apply_channel_shift", "numpy.ascontiguousarray"], "methods", ["None"], ["", "def", "keras", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "keras", ".", "apply_channel_shift", "(", "img", ",", "intensity", "=", "100", ",", "channel_axis", "=", "2", ")", "\n", "return", "np", ".", "ascontiguousarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.PadToSize512.__init__": [[435, 437], ["solt.Stream", "solt.Stream", "solt.Stream", "solt.Pad", "solt.Pad", "solt.Pad"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "Pad", "(", "pad_to", "=", "(", "512", ",", "512", ")", ",", "padding", "=", "\"r\"", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.PadToSize512.albumentations": [[438, 440], ["albumentations.pad", "albumentations.pad", "albumentations.pad", "albumentations.pad"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "pad", "(", "img", ",", "min_height", "=", "512", ",", "min_width", "=", "512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.PadToSize512.torchvision_transform": [[441, 447], ["torchvision.pad", "torchvision.pad", "int", "int"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.pad"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "img", ".", "size", "[", "0", "]", "<", "512", ":", "\n", "            ", "img", "=", "torchvision", ".", "pad", "(", "img", ",", "(", "int", "(", "(", "1", "+", "512", "-", "img", ".", "size", "[", "0", "]", ")", "/", "2", ")", ",", "0", ")", ",", "padding_mode", "=", "\"reflect\"", ")", "\n", "", "if", "img", ".", "size", "[", "1", "]", "<", "512", ":", "\n", "            ", "img", "=", "torchvision", ".", "pad", "(", "img", ",", "(", "0", ",", "int", "(", "(", "1", "+", "512", "-", "img", ".", "size", "[", "1", "]", ")", "/", "2", ")", ")", ",", "padding_mode", "=", "\"reflect\"", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Resize512.__init__": [[450, 454], ["imgaug.augmenters.Scale", "solt.Stream", "solt.Stream", "solt.Stream", "Augmentor.Operations.Resize", "solt.Resize", "solt.Resize", "solt.Resize"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "Scale", "(", "size", "=", "512", ",", "interpolation", "=", "\"linear\"", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "Resize", "(", "resize_to", "=", "(", "512", ",", "512", ")", ")", "]", ")", "\n", "self", ".", "augmentor_op", "=", "Operations", ".", "Resize", "(", "probability", "=", "1", ",", "width", "=", "512", ",", "height", "=", "512", ",", "resample_filter", "=", "\"BILINEAR\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Resize512.albumentations": [[455, 457], ["albumentations.augmentations.geometric.functional.resize", "albumentations.augmentations.geometric.functional.resize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize", "home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "resize", "(", "img", ",", "height", "=", "512", ",", "width", "=", "512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Resize512.torchvision_transform": [[458, 460], ["torchvision.resize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.geometric.functional.resize"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "torchvision", ".", "resize", "(", "img", ",", "(", "512", ",", "512", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Gamma.__init__": [[463, 465], ["solt.Stream", "solt.Stream", "solt.Stream", "solt.GammaCorrection", "solt.GammaCorrection", "solt.GammaCorrection"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "GammaCorrection", "(", "p", "=", "1", ",", "gamma_range", "=", "(", "0.5", ",", "0.5", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Gamma.albumentations": [[466, 468], ["albumentations.gamma_transform", "albumentations.gamma_transform", "albumentations.gamma_transform", "albumentations.gamma_transform"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gamma_transform", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gamma_transform", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gamma_transform", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.gamma_transform"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "gamma_transform", "(", "img", ",", "gamma", "=", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Gamma.torchvision_transform": [[469, 471], ["torchvision.adjust_gamma"], "methods", ["None"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "torchvision", ".", "adjust_gamma", "(", "img", ",", "gamma", "=", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Grayscale.__init__": [[474, 478], ["Augmentor.Operations.Greyscale", "imgaug.augmenters.Grayscale", "solt.Stream", "solt.Stream", "solt.Stream", "solt.CvtColor", "solt.CvtColor", "solt.CvtColor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "augmentor_op", "=", "Operations", ".", "Greyscale", "(", "probability", "=", "1", ")", "\n", "self", ".", "imgaug_transform", "=", "iaa", ".", "Grayscale", "(", "alpha", "=", "1.0", ")", "\n", "self", ".", "solt_stream", "=", "slc", ".", "Stream", "(", "[", "slt", ".", "CvtColor", "(", "mode", "=", "\"rgb2gs\"", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Grayscale.albumentations": [[479, 481], ["albumentations.to_gray", "albumentations.to_gray", "albumentations.to_gray", "albumentations.to_gray"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_gray", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_gray", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_gray", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.to_gray"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "to_gray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Grayscale.torchvision_transform": [[482, 484], ["torchvision.to_grayscale"], "methods", ["None"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "torchvision", ".", "to_grayscale", "(", "img", ",", "num_output_channels", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Grayscale.augmentor": [[485, 489], ["numpy.array", "numpy.dstack", "benchmark.Grayscale.augmentor_op.perform_operation"], "methods", ["None"], ["", "def", "augmentor", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "self", ".", "augmentor_op", ".", "perform_operation", "(", "[", "img", "]", ")", "[", "0", "]", "\n", "img", "=", "np", ".", "array", "(", "img", ",", "np", ".", "uint8", ",", "copy", "=", "False", ")", "\n", "return", "np", ".", "dstack", "(", "[", "img", ",", "img", ",", "img", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Posterize.albumentations": [[492, 494], ["albumentations.posterize", "albumentations.posterize", "albumentations.posterize", "albumentations.posterize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.posterize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.posterize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.posterize", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.posterize"], ["    ", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "posterize", "(", "img", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Posterize.pillow": [[495, 497], ["PIL.ImageOps.posterize"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.posterize"], ["", "def", "pillow", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "ImageOps", ".", "posterize", "(", "img", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Multiply.__init__": [[500, 502], ["imgaug.augmenters.Multiply"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "imgaug_transform", "=", "iaa", ".", "Multiply", "(", "mul", "=", "1.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.Multiply.albumentations": [[503, 505], ["albumentations.multiply", "albumentations.multiply", "albumentations.multiply", "albumentations.multiply", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.multiply", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.multiply", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.multiply", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.multiply"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "albumentations", ".", "multiply", "(", "img", ",", "np", ".", "array", "(", "[", "1.5", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MultiplyElementwise.__init__": [[508, 511], ["albumentations.MultiplicativeNoise", "albumentations.MultiplicativeNoise", "imgaug.augmenters.MultiplyElementwise"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "aug", "=", "A", ".", "MultiplicativeNoise", "(", "(", "0", ",", "1", ")", ",", "per_channel", "=", "True", ",", "elementwise", "=", "True", ",", "p", "=", "1", ")", "\n", "self", ".", "imgaug_transform", "=", "iaa", ".", "MultiplyElementwise", "(", "mul", "=", "(", "0", ",", "1", ")", ",", "per_channel", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MultiplyElementwise.albumentations": [[512, 514], ["benchmark.MultiplyElementwise.aug"], "methods", ["None"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "self", ".", "aug", "(", "image", "=", "img", ")", "[", "\"image\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.__init__": [[517, 520], ["int", "imgaug.augmenters.AddToHue"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "imgaug_hue_param", "=", "int", "(", "0.5", "*", "255", ")", "\n", "self", ".", "imgaug_transform", "=", "iaa", ".", "AddToHue", "(", "(", "imgaug_hue_param", ",", "imgaug_hue_param", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.imgaug": [[521, 527], ["imgaug.augmenters.pillike.enhance_brightness", "imgaug.augmenters.pillike.enhance_contrast", "imgaug.augmenters.pillike.enhance_color", "benchmark.ColorJitter.imgaug_transform.augment_image"], "methods", ["None"], ["", "def", "imgaug", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "iaa", ".", "pillike", ".", "enhance_brightness", "(", "img", ",", "1.5", ")", "\n", "img", "=", "iaa", ".", "pillike", ".", "enhance_contrast", "(", "img", ",", "1.5", ")", "\n", "img", "=", "iaa", ".", "pillike", ".", "enhance_color", "(", "img", ",", "1.5", ")", "\n", "img", "=", "self", ".", "imgaug_transform", ".", "augment_image", "(", "img", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.albumentations": [[528, 534], ["albumentations.adjust_brightness_torchvision", "albumentations.adjust_brightness_torchvision", "albumentations.adjust_brightness_torchvision", "albumentations.adjust_brightness_torchvision", "albumentations.adjust_contrast_torchvision", "albumentations.adjust_contrast_torchvision", "albumentations.adjust_contrast_torchvision", "albumentations.adjust_contrast_torchvision", "albumentations.adjust_saturation_torchvision", "albumentations.adjust_saturation_torchvision", "albumentations.adjust_saturation_torchvision", "albumentations.adjust_saturation_torchvision", "albumentations.adjust_hue_torchvision", "albumentations.adjust_hue_torchvision", "albumentations.adjust_hue_torchvision", "albumentations.adjust_hue_torchvision"], "methods", ["home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_brightness_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_brightness_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_brightness_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_brightness_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_contrast_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_contrast_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_contrast_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_contrast_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_saturation_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_saturation_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_saturation_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_saturation_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_hue_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_hue_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_hue_torchvision", "home.repos.pwc.inspect_result.albu_albumentations.augmentations.functional.adjust_hue_torchvision"], ["", "def", "albumentations", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "albumentations", ".", "adjust_brightness_torchvision", "(", "img", ",", "1.5", ")", "\n", "img", "=", "albumentations", ".", "adjust_contrast_torchvision", "(", "img", ",", "1.5", ")", "\n", "img", "=", "albumentations", ".", "adjust_saturation_torchvision", "(", "img", ",", "1.5", ")", "\n", "img", "=", "albumentations", ".", "adjust_hue_torchvision", "(", "img", ",", "0.5", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.ColorJitter.torchvision_transform": [[535, 541], ["torchvision.adjust_brightness", "torchvision.adjust_contrast", "torchvision.adjust_saturation", "torchvision.adjust_hue"], "methods", ["None"], ["", "def", "torchvision_transform", "(", "self", ",", "img", ")", ":", "\n", "        ", "img", "=", "torchvision", ".", "adjust_brightness", "(", "img", ",", "1.5", ")", "\n", "img", "=", "torchvision", ".", "adjust_contrast", "(", "img", ",", "1.5", ")", "\n", "img", "=", "torchvision", ".", "adjust_saturation", "(", "img", ",", "1.5", ")", "\n", "img", "=", "torchvision", ".", "adjust_hue", "(", "img", ",", "0.5", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.parse_args": [[46, 66], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.environ.get"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Augmentation libraries performance benchmark\"", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-d\"", ",", "\"--data-dir\"", ",", "metavar", "=", "\"DIR\"", ",", "default", "=", "os", ".", "environ", ".", "get", "(", "\"DATA_DIR\"", ")", ",", "help", "=", "\"path to a directory with images\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-i\"", ",", "\"--images\"", ",", "default", "=", "2000", ",", "type", "=", "int", ",", "metavar", "=", "\"N\"", ",", "help", "=", "\"number of images for benchmarking (default: 2000)\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-l\"", ",", "\"--libraries\"", ",", "default", "=", "DEFAULT_BENCHMARKING_LIBRARIES", ",", "nargs", "=", "\"+\"", ",", "help", "=", "\"list of libraries to benchmark\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-r\"", ",", "\"--runs\"", ",", "default", "=", "5", ",", "type", "=", "int", ",", "metavar", "=", "\"N\"", ",", "help", "=", "\"number of runs for each benchmark (default: 5)\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--show-std\"", ",", "dest", "=", "\"show_std\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"show standard deviation for benchmark runs\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"-p\"", ",", "\"--print-package-versions\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"print versions of packages\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-m\"", ",", "\"--markdown\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"print benchmarking results as a markdown table\"", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.get_package_versions": [[68, 90], ["pkg_resources.get_distribution"], "function", ["None"], ["", "def", "get_package_versions", "(", ")", ":", "\n", "    ", "packages", "=", "[", "\n", "\"albumentations\"", ",", "\n", "\"imgaug\"", ",", "\n", "\"torchvision\"", ",", "\n", "\"keras\"", ",", "\n", "\"numpy\"", ",", "\n", "\"opencv-python\"", ",", "\n", "\"scikit-image\"", ",", "\n", "\"scipy\"", ",", "\n", "\"pillow\"", ",", "\n", "\"pillow-simd\"", ",", "\n", "\"augmentor\"", ",", "\n", "\"solt\"", ",", "\n", "]", "\n", "package_versions", "=", "{", "\"Python\"", ":", "sys", ".", "version", "}", "\n", "for", "package", "in", "packages", ":", "\n", "        ", "try", ":", "\n", "            ", "package_versions", "[", "package", "]", "=", "pkg_resources", ".", "get_distribution", "(", "package", ")", ".", "version", "\n", "", "except", "pkg_resources", ".", "DistributionNotFound", ":", "\n", "            ", "pass", "\n", "", "", "return", "package_versions", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.read_img_pillow": [[147, 151], ["open", "PIL.Image.open", "Image.open.convert"], "function", ["None"], ["", "", "def", "read_img_pillow", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "\"rb\"", ")", "as", "f", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.read_img_cv2": [[153, 157], ["cv2.imread", "cv2.cvtColor"], "function", ["None"], ["", "", "def", "read_img_cv2", "(", "filepath", ")", ":", "\n", "    ", "img", "=", "cv2", ".", "imread", "(", "filepath", ")", "\n", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.format_results": [[159, 166], ["str", "math.floor", "numpy.mean", "math.ceil", "numpy.std"], "function", ["None"], ["", "def", "format_results", "(", "images_per_second_for_aug", ",", "show_std", "=", "False", ")", ":", "\n", "    ", "if", "images_per_second_for_aug", "is", "None", ":", "\n", "        ", "return", "\"-\"", "\n", "", "result", "=", "str", "(", "math", ".", "floor", "(", "np", ".", "mean", "(", "images_per_second_for_aug", ")", ")", ")", "\n", "if", "show_std", ":", "\n", "        ", "result", "+=", "\" \u00b1 {}\"", ".", "format", "(", "math", ".", "ceil", "(", "np", ".", "std", "(", "images_per_second_for_aug", ")", ")", ")", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.main": [[543, 603], ["benchmark.parse_args", "benchmark.get_package_versions", "collections.defaultdict", "list", "pandas.set_option", "pandas.DataFrame.from_dict", "df.reindex.applymap", "df.reindex.reindex", "print", "sorted", "benchmark.read_img_cv2", "benchmark.read_img_pillow", "benchmark.HorizontalFlip", "benchmark.VerticalFlip", "benchmark.Rotate", "benchmark.ShiftScaleRotate", "benchmark.Brightness", "benchmark.Contrast", "benchmark.BrightnessContrast", "benchmark.ShiftRGB", "benchmark.ShiftHSV", "benchmark.Gamma", "benchmark.Grayscale", "benchmark.RandomCrop64", "benchmark.PadToSize512", "benchmark.Resize512", "benchmark.RandomSizedCrop_64_512", "benchmark.Posterize", "benchmark.Solarize", "benchmark.Equalize", "benchmark.Multiply", "benchmark.MultiplyElementwise", "benchmark.ColorJitter", "tqdm.tqdm", "tqdm.tqdm.close", "str", "benchmark.MarkdownGenerator", "benchmark.MarkdownGenerator.print", "print", "os.listdir", "os.path.join", "os.path.join", "tqdm.tqdm.set_description", "benchmark.is_supported_by", "tqdm.tqdm.update", "benchmark.format_results", "df.reindex.head", "len", "timeit.Timer", "timeit.Timer.repeat", "len", "str", "benchmark.run"], "function", ["home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.parse_args", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.get_package_versions", "home.repos.pwc.inspect_result.albu_albumentations.core.serialization.from_dict", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.read_img_cv2", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.read_img_pillow", "home.repos.pwc.inspect_result.albu_albumentations.tests.utils.InMemoryFile.close", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.MarkdownGenerator.print", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BenchmarkTest.is_supported_by", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.format_results", "home.repos.pwc.inspect_result.albu_albumentations.benchmark.benchmark.BenchmarkTest.run"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "package_versions", "=", "get_package_versions", "(", ")", "\n", "if", "args", ".", "print_package_versions", ":", "\n", "        ", "print", "(", "package_versions", ")", "\n", "", "images_per_second", "=", "defaultdict", "(", "dict", ")", "\n", "libraries", "=", "args", ".", "libraries", "\n", "data_dir", "=", "args", ".", "data_dir", "\n", "paths", "=", "list", "(", "sorted", "(", "os", ".", "listdir", "(", "data_dir", ")", ")", ")", "\n", "paths", "=", "paths", "[", ":", "args", ".", "images", "]", "\n", "imgs_cv2", "=", "[", "read_img_cv2", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "path", ")", ")", "for", "path", "in", "paths", "]", "\n", "imgs_pillow", "=", "[", "read_img_pillow", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "path", ")", ")", "for", "path", "in", "paths", "]", "\n", "\n", "benchmarks", "=", "[", "\n", "HorizontalFlip", "(", ")", ",", "\n", "VerticalFlip", "(", ")", ",", "\n", "Rotate", "(", ")", ",", "\n", "ShiftScaleRotate", "(", ")", ",", "\n", "Brightness", "(", ")", ",", "\n", "Contrast", "(", ")", ",", "\n", "BrightnessContrast", "(", ")", ",", "\n", "ShiftRGB", "(", ")", ",", "\n", "ShiftHSV", "(", ")", ",", "\n", "Gamma", "(", ")", ",", "\n", "Grayscale", "(", ")", ",", "\n", "RandomCrop64", "(", ")", ",", "\n", "PadToSize512", "(", ")", ",", "\n", "Resize512", "(", ")", ",", "\n", "RandomSizedCrop_64_512", "(", ")", ",", "\n", "Posterize", "(", ")", ",", "\n", "Solarize", "(", ")", ",", "\n", "Equalize", "(", ")", ",", "\n", "Multiply", "(", ")", ",", "\n", "MultiplyElementwise", "(", ")", ",", "\n", "ColorJitter", "(", ")", ",", "\n", "]", "\n", "for", "library", "in", "libraries", ":", "\n", "        ", "imgs", "=", "imgs_pillow", "if", "library", "in", "(", "\"torchvision\"", ",", "\"augmentor\"", ",", "\"pillow\"", ")", "else", "imgs_cv2", "\n", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "benchmarks", ")", ")", "\n", "for", "benchmark", "in", "benchmarks", ":", "\n", "            ", "pbar", ".", "set_description", "(", "\"Current benchmark: {} | {}\"", ".", "format", "(", "library", ",", "benchmark", ")", ")", "\n", "benchmark_images_per_second", "=", "None", "\n", "if", "benchmark", ".", "is_supported_by", "(", "library", ")", ":", "\n", "                ", "timer", "=", "Timer", "(", "lambda", ":", "benchmark", ".", "run", "(", "library", ",", "imgs", ")", ")", "\n", "run_times", "=", "timer", ".", "repeat", "(", "number", "=", "1", ",", "repeat", "=", "args", ".", "runs", ")", "\n", "benchmark_images_per_second", "=", "[", "1", "/", "(", "run_time", "/", "args", ".", "images", ")", "for", "run_time", "in", "run_times", "]", "\n", "", "images_per_second", "[", "library", "]", "[", "str", "(", "benchmark", ")", "]", "=", "benchmark_images_per_second", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "", "pbar", ".", "close", "(", ")", "\n", "", "pd", ".", "set_option", "(", "\"display.width\"", ",", "1000", ")", "\n", "df", "=", "pd", ".", "DataFrame", ".", "from_dict", "(", "images_per_second", ")", "\n", "df", "=", "df", ".", "applymap", "(", "lambda", "r", ":", "format_results", "(", "r", ",", "args", ".", "show_std", ")", ")", "\n", "df", "=", "df", "[", "libraries", "]", "\n", "augmentations", "=", "[", "str", "(", "i", ")", "for", "i", "in", "benchmarks", "]", "\n", "df", "=", "df", ".", "reindex", "(", "augmentations", ")", "\n", "if", "args", ".", "markdown", ":", "\n", "        ", "makedown_generator", "=", "MarkdownGenerator", "(", "df", ",", "package_versions", ")", "\n", "makedown_generator", ".", "print", "(", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "df", ".", "head", "(", "len", "(", "augmentations", ")", ")", ")", "\n", "\n"]]}