{"home.repos.pwc.inspect_result.furkanbiten_idl_data.None.run_textract.dump_json": [[10, 19], ["os.path.join", "json.dump", "object_name.split", "os.path.exists", "os.makedirs", "open"], "function", ["None"], ["def", "dump_json", "(", "results", ",", "paths", ")", ":", "\n", "    ", "path_to_save", ",", "object_name", "=", "paths", "[", "0", "]", ",", "paths", "[", "1", "]", "\n", "pdf", "=", "object_name", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "json_out", "=", "os", ".", "path", ".", "join", "(", "path_to_save", ",", "pdf", "+", "'.json'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path_to_save", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path_to_save", ")", "\n", "#     json_path = \"{:}/{:}\".format(dir_path, splitted_doc[-1].replace('.pdf', '.json'))", "\n", "", "json", ".", "dump", "(", "results", ",", "open", "(", "json_out", ",", "'w'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.furkanbiten_idl_data.None.run_textract.get_response": [[20, 38], ["enumerate", "textract.get_document_text_detection", "run_textract.dump_json", "time.sleep", "textract.get_document_text_detection", "print", "textract.get_document_text_detection", "results.append"], "function", ["home.repos.pwc.inspect_result.furkanbiten_idl_data.None.run_textract.dump_json"], ["", "def", "get_response", "(", "response", ",", "comb", ",", "textract", ")", ":", "\n", "    ", "for", "ix", ",", "resp", "in", "enumerate", "(", "response", ")", ":", "\n", "\n", "        ", "ocr", "=", "textract", ".", "get_document_text_detection", "(", "JobId", "=", "resp", "[", "'JobId'", "]", ")", "\n", "while", "ocr", "[", "'JobStatus'", "]", "!=", "'SUCCEEDED'", ":", "\n", "            ", "time", ".", "sleep", "(", "1", ")", "\n", "ocr", "=", "textract", ".", "get_document_text_detection", "(", "JobId", "=", "resp", "[", "'JobId'", "]", ")", "\n", "if", "ocr", "[", "'JobStatus'", "]", "==", "'FAILED'", ":", "\n", "                ", "print", "(", "ocr", ")", "\n", "break", "\n", "\n", "", "", "results", "=", "[", "comb", "[", "ix", "]", "[", "1", "]", ",", "ocr", "]", "\n", "if", "'NextToken'", "in", "ocr", ":", "\n", "            ", "while", "'NextToken'", "in", "ocr", ":", "\n", "                ", "ocr", "=", "textract", ".", "get_document_text_detection", "(", "JobId", "=", "resp", "[", "'JobId'", "]", ",", "NextToken", "=", "ocr", "[", "'NextToken'", "]", ")", "\n", "results", ".", "append", "(", "ocr", ")", "\n", "\n", "", "", "dump_json", "(", "results", ",", "comb", "[", "ix", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.furkanbiten_idl_data.None.run_textract.run_textract": [[39, 75], ["os.path.join", "print", "botocore.client.Config", "boto3.client", "tqdm.tqdm", "os.path.join().replace", "os.path.join", "range", "zip", "os.listdir", "os.path.join.replace", "os.listdir", "dict", "os.path.exists", "os.path.join", "run_textract.get_response", "os.path.join", "p_path.split", "boto3.client.start_document_text_detection", "response.append", "file_names.append", "len", "print", "len", "len"], "function", ["home.repos.pwc.inspect_result.furkanbiten_idl_data.None.run_textract.get_response"], ["", "", "def", "run_textract", "(", "args", ")", ":", "\n", "    ", "pdf_root", ",", "s3", ",", "KEYS", ",", "ix", "=", "args", "\n", "pdf_root", "=", "os", ".", "path", ".", "join", "(", "pdf_root", ",", "s3", ")", "\n", "print", "(", "pdf_root", ")", "\n", "# if os.path.exists(pdf_root.replace('IDL', 'OCR')):", "\n", "#     continue", "\n", "\n", "pdfs", "=", "[", "os", ".", "path", ".", "join", "(", "pdf_root", ",", "p", ")", ".", "replace", "(", "'IDL'", ",", "'OCR'", ")", "for", "p", "in", "os", ".", "listdir", "(", "pdf_root", ")", "]", "\n", "object_names", "=", "[", "os", ".", "path", ".", "join", "(", "pdf_root", ".", "replace", "(", "ROOT", ",", "''", ")", ",", "p", ")", "for", "p", "in", "os", ".", "listdir", "(", "pdf_root", ")", "]", "\n", "\n", "config", "=", "Config", "(", "retries", "=", "dict", "(", "max_attempts", "=", "5", ")", ")", "\n", "textract", "=", "boto3", ".", "client", "(", "'textract'", ",", "aws_access_key_id", "=", "KEYS", "[", "(", "ix", "+", "1", ")", "%", "len", "(", "KEYS", ")", "]", "[", "0", "]", ",", "\n", "aws_secret_access_key", "=", "KEYS", "[", "(", "ix", "+", "1", ")", "%", "len", "(", "KEYS", ")", "]", "[", "1", "]", ",", "\n", "region_name", "=", "'us-west-2'", ",", "\n", "config", "=", "config", ")", "\n", "\n", "# for comb in tqdm.tqdm(zip(*[iter(zip(pdfs, object_names))]*MAX_ASYNC_OPS), total=len(pdfs)/MAX_ASYNC_OPS, position=ix):", "\n", "for", "i", "in", "tqdm", ".", "tqdm", "(", "range", "(", "len", "(", "pdfs", ")", "//", "MAX_ASYNC_OPS", "+", "1", ")", ",", "position", "=", "ix", ")", ":", "\n", "        ", "response", ",", "file_names", "=", "[", "]", ",", "[", "]", "\n", "# for p_path, obj_name in comb:", "\n", "for", "p_path", ",", "obj_name", "in", "zip", "(", "pdfs", "[", "i", "*", "MAX_ASYNC_OPS", ":", "(", "i", "+", "1", ")", "*", "MAX_ASYNC_OPS", "]", ",", "\n", "object_names", "[", "i", "*", "MAX_ASYNC_OPS", ":", "(", "i", "+", "1", ")", "*", "MAX_ASYNC_OPS", "]", ")", ":", "\n", "            ", "if", "os", ".", "path", ".", "exists", "(", "p_path", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "pdf", "=", "p_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "pdf_name", "=", "os", ".", "path", ".", "join", "(", "obj_name", ",", "pdf", "+", "'.pdf'", ")", "\n", "try", ":", "\n", "                ", "r", "=", "textract", ".", "start_document_text_detection", "(", "DocumentLocation", "=", "{", "'S3Object'", ":", "{", "'Bucket'", ":", "BUCKET_NAME", ",", "'Name'", ":", "pdf_name", "}", "}", ")", "\n", "response", ".", "append", "(", "r", ")", "\n", "file_names", ".", "append", "(", "(", "p_path", ",", "obj_name", ")", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "print", "(", "e", ")", "\n", "\n", "", "", "if", "response", ":", "\n", "            ", "get_response", "(", "response", ",", "file_names", ",", "textract", ")", "\n", "\n"]]}