{"home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.batch_norm.__init__": [[263, 268], ["tensorflow.variable_scope"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "epsilon", "=", "1e-5", ",", "momentum", "=", "0.9", ",", "name", "=", "\"batch_norm\"", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "      ", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "name", "=", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.batch_norm.__call__": [[269, 277], ["tensorflow.contrib.layers.batch_norm"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "x", ",", "train", "=", "True", ")", ":", "\n", "    ", "return", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "x", ",", "\n", "decay", "=", "self", ".", "momentum", ",", "\n", "updates_collections", "=", "None", ",", "\n", "epsilon", "=", "self", ".", "epsilon", ",", "\n", "scale", "=", "True", ",", "\n", "is_training", "=", "train", ",", "\n", "scope", "=", "self", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.conv2d_apply": [[9, 33], ["tensorflow.split", "tensorflow.split", "tensorflow.reshape", "tensorflow.tile", "tensorflow.reduce_sum", "tensorflow.split", "zip", "tensorflow.concat", "tensorflow.split", "tensorflow.stack", "frames.append", "tensorflow.nn.relu", "tensorflow.squeeze", "tf.stack.append", "tensorflow.nn.depthwise_conv2d"], "function", ["None"], ["def", "conv2d_apply", "(", "stimage", ",", "kernels", ",", "self", ")", ":", "\n", "\n", "  ", "kernel_times", "=", "tf", ".", "split", "(", "kernels", ",", "self", ".", "output_frames", ",", "1", ")", "\n", "stimage_batchs", "=", "tf", ".", "split", "(", "stimage", ",", "self", ".", "batch_size", ",", "0", ")", "\n", "\n", "frames", "=", "[", "]", "\n", "for", "kernel_t", "in", "kernel_times", ":", "\n", "    ", "kernel_t", "=", "tf", ".", "reshape", "(", "kernel_t", ",", "\n", "[", "self", ".", "batch_size", ",", "self", ".", "conv_size", ",", "self", ".", "conv_size", ",", "1", ",", "self", ".", "sequence_len", "]", ")", "\n", "kernel_t", "=", "tf", ".", "tile", "(", "kernel_t", ",", "[", "1", ",", "1", ",", "1", ",", "self", ".", "c_dim", "]", ")", "\n", "kernel_t", "=", "tf", ".", "nn", ".", "relu", "(", "kernel_t", "-", "1e-12", ")", "+", "1e-12", "\n", "kernel_t", "/=", "tf", ".", "reduce_sum", "(", "kernel_t", ",", "[", "1", ",", "2", ",", "3", "]", ",", "keep_dims", "=", "True", ")", "\n", "kernel_batchs", "=", "tf", ".", "split", "(", "kernel_t", ",", "self", ".", "batch_size", ",", "0", ")", "\n", "\n", "transformed", "=", "[", "]", "\n", "for", "kernel", ",", "preimg", "in", "zip", "(", "kernel_batchs", ",", "stimage_batchs", ")", ":", "\n", "      ", "kernel", "=", "tf", ".", "squeeze", "(", "kernel", ",", "axis", "=", "0", ")", "\n", "transformed", ".", "append", "(", "\n", "tf", ".", "nn", ".", "depthwise_conv2d", "(", "preimg", ",", "kernel", ",", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "'SAME'", ")", ")", "\n", "", "transformed", "=", "tf", ".", "concat", "(", "transformed", ",", "axis", "=", "0", ")", "\n", "transformed", "=", "tf", ".", "split", "(", "transformed", ",", "self", ".", "sequence_len", ",", "axis", "=", "3", ")", "\n", "transformed", "=", "tf", ".", "stack", "(", "transformed", ",", "axis", "=", "1", ")", "\n", "frames", ".", "append", "(", "transformed", ")", "\n", "", "return", "frames", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.affine_apply": [[34, 55], ["tensorflow.convert_to_tensor", "tensorflow.reshape", "tensorflow.split", "numpy.array", "tensorflow.nn.tanh", "tensorflow.split", "tensorflow.stack", "frames.append", "tensorflow.squeeze", "tf.stack.append", "ops.transformer"], "function", ["home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.transformer"], ["", "def", "affine_apply", "(", "stimage", ",", "kernels", ",", "self", ")", ":", "\n", "  ", "identity_params", "=", "tf", ".", "convert_to_tensor", "(", "\n", "np", ".", "array", "(", "[", "1.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", ",", "0.0", "]", ",", "np", ".", "float32", ")", ")", "\n", "\n", "kernels", "=", "tf", ".", "nn", ".", "tanh", "(", "kernels", ")", "*", "0.1", "\n", "kernels", "=", "tf", ".", "reshape", "(", "kernels", ",", "\n", "[", "self", ".", "batch_size", ",", "self", ".", "output_frames", ",", "6", ",", "self", ".", "sequence_len", "]", ")", "\n", "kernel_times", "=", "tf", ".", "split", "(", "kernels", ",", "self", ".", "output_frames", ",", "axis", "=", "1", ")", "\n", "\n", "frames", "=", "[", "]", "\n", "for", "kernel_t", "in", "kernel_times", ":", "\n", "    ", "kernel_nums", "=", "tf", ".", "split", "(", "kernel_t", ",", "self", ".", "sequence_len", ",", "axis", "=", "3", ")", "\n", "transformed", "=", "[", "]", "\n", "\n", "for", "kernel", "in", "kernel_nums", ":", "\n", "      ", "params", "=", "tf", ".", "squeeze", "(", "kernel", ",", "axis", "=", "[", "1", ",", "3", "]", ")", "\n", "params", "+=", "identity_params", "\n", "transformed", ".", "append", "(", "transformer", "(", "stimage", ",", "params", ")", ")", "\n", "", "transformed", "=", "tf", ".", "stack", "(", "transformed", ",", "axis", "=", "1", ")", "\n", "frames", ".", "append", "(", "transformed", ")", "\n", "", "return", "frames", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.volumetric_apply": [[57, 100], ["tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.reshape", "tensorflow.split", "tensorflow.stack", "tensorflow.nn.relu", "tensorflow.nn.softmax", "tensorflow.split", "tensorflow.concat", "tensorflow.split", "tensorflow.zeors", "zip", "frames_1.append", "tensorflow.reshape", "int", "tensorflow.split", "tensorflow.split", "zip", "d3ed.append", "stimage.get_shape", "tensorflow.squeeze", "sketch.append", "tensorflow.concat", "tensorflow.squeeze", "tensorflow.nn.conv3d"], "function", ["home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.conv3d"], ["", "def", "volumetric_apply", "(", "layered_image", ",", "stimage", ",", "raw_trans_1", ",", "raw_trans_2", ",", "self", ")", ":", "\n", "  ", "'''\n  layed_image: list of batch *num* h *w *c\n  raw_trans_1: batch * -1\n  raw_trans_2: batch * -1\n  '''", "\n", "trans_a", "=", "tf", ".", "reshape", "(", "raw_trans_1", ",", "[", "self", ".", "batch_size", ",", "self", ".", "sequence_len", ",", "5", ",", "5", ",", "1", ",", "1", "]", ")", "\n", "trans_a", "=", "tf", ".", "nn", ".", "relu", "(", "trans_a", "-", "(", "1e-12", ")", ")", "+", "(", "1e-12", ")", "\n", "norm_factor", "=", "tf", ".", "reduce_sum", "(", "trans_a", ",", "[", "1", ",", "2", ",", "3", "]", ",", "keep_dims", "=", "True", ")", "\n", "trans_a", "/=", "norm_factor", "\n", "\n", "trans_b", "=", "tf", ".", "reshape", "(", "\n", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "reshape", "(", "raw_trans_2", ",", "[", "-", "1", ",", "self", ".", "sequence_len", "]", ")", ")", ",", "\n", "[", "int", "(", "self", ".", "batch_size", ")", ",", "self", ".", "input_width", ",", "self", ".", "input_height", ",", "self", ".", "sequence_len", "]", ")", "\n", "mask_list", "=", "tf", ".", "split", "(", "trans_b", ",", "self", ".", "sequence_len", ",", "axis", "=", "3", ")", "\n", "\n", "## with conv3d", "\n", "frames_1", "=", "[", "]", "\n", "for", "image_t", "in", "layered_image", ":", "\n", "    ", "image_channels", "=", "tf", ".", "split", "(", "image_t", ",", "self", ".", "c_dim", ",", "axis", "=", "4", ")", "\n", "d3ed", "=", "[", "]", "\n", "for", "image_c", "in", "image_channels", ":", "\n", "      ", "ted_batchs", "=", "tf", ".", "split", "(", "image_c", ",", "self", ".", "batch_size", ",", "axis", "=", "0", ")", "\n", "tra_batchs", "=", "tf", ".", "split", "(", "trans_a", ",", "self", ".", "batch_size", ",", "axis", "=", "0", ")", "\n", "sketch", "=", "[", "]", "\n", "for", "kernel", ",", "preimg", "in", "zip", "(", "tra_batchs", ",", "ted_batchs", ")", ":", "\n", "        ", "kernel", "=", "tf", ".", "squeeze", "(", "kernel", ",", "axis", "=", "0", ")", "\n", "sketch", ".", "append", "(", "\n", "tf", ".", "nn", ".", "conv3d", "(", "preimg", ",", "kernel", ",", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ",", "'SAME'", ")", ")", "\n", "", "d3ed", ".", "append", "(", "tf", ".", "concat", "(", "sketch", ",", "0", ")", ")", "\n", "", "image_d3ed", "=", "tf", ".", "concat", "(", "d3ed", ",", "axis", "=", "4", ")", "\n", "\n", "image_filters_1", "=", "tf", ".", "split", "(", "image_d3ed", ",", "self", ".", "sequence_len", ",", "axis", "=", "1", ")", "\n", "\n", "output_1", "=", "tf", ".", "zeors", "(", "stimage", ".", "get_shape", "(", ")", ")", "\n", "for", "layer_1", ",", "layer_2", ",", "mask", "in", "zip", "(", "image_filters_1", ",", "image_filters_2", ",", "mask_list", "[", "1", ":", "]", ")", ":", "\n", "      ", "output_1", "+=", "tf", ".", "squeeze", "(", "layer_1", ",", "axis", "=", "1", ")", "*", "mask", "\n", "\n", "", "frames_1", ".", "append", "(", "output_1", ")", "\n", "\n", "", "vid_1", "=", "tf", ".", "stack", "(", "frames_1", ",", "axis", "=", "1", ")", "\n", "\n", "return", "vid_1", ",", "vid_2", "#vid_1 con3d", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.transformer": [[101, 234], ["tensorflow.variable_scope", "ops.transformer._transform"], "function", ["None"], ["", "def", "transformer", "(", "U", ",", "theta", ",", "out_size", "=", "[", "240", ",", "320", "]", ",", "name", "=", "'SpatialTransformer'", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    From https://github.com/skaae/transformer_network/blob/master/transformerlayer.py\n    \"\"\"", "\n", "\n", "def", "_repeat", "(", "x", ",", "n_repeats", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'_repeat'", ")", ":", "\n", "            ", "rep", "=", "tf", ".", "transpose", "(", "\n", "tf", ".", "expand_dims", "(", "tf", ".", "ones", "(", "shape", "=", "tf", ".", "stack", "(", "[", "n_repeats", ",", "]", ")", ")", ",", "1", ")", ",", "[", "1", ",", "0", "]", ")", "\n", "rep", "=", "tf", ".", "cast", "(", "rep", ",", "'int32'", ")", "\n", "x", "=", "tf", ".", "matmul", "(", "tf", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", "1", ")", ")", ",", "rep", ")", "\n", "return", "tf", ".", "reshape", "(", "x", ",", "[", "-", "1", "]", ")", "\n", "\n", "", "", "def", "_interpolate", "(", "im", ",", "x", ",", "y", ",", "out_size", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'_interpolate'", ")", ":", "\n", "# constants", "\n", "            ", "num_batch", "=", "tf", ".", "shape", "(", "im", ")", "[", "0", "]", "\n", "height", "=", "tf", ".", "shape", "(", "im", ")", "[", "1", "]", "\n", "width", "=", "tf", ".", "shape", "(", "im", ")", "[", "2", "]", "\n", "channels", "=", "tf", ".", "shape", "(", "im", ")", "[", "3", "]", "\n", "\n", "x", "=", "tf", ".", "cast", "(", "x", ",", "'float32'", ")", "\n", "y", "=", "tf", ".", "cast", "(", "y", ",", "'float32'", ")", "\n", "height_f", "=", "tf", ".", "cast", "(", "height", ",", "'float32'", ")", "\n", "width_f", "=", "tf", ".", "cast", "(", "width", ",", "'float32'", ")", "\n", "out_height", "=", "out_size", "[", "0", "]", "\n", "out_width", "=", "out_size", "[", "1", "]", "\n", "zero", "=", "tf", ".", "zeros", "(", "[", "]", ",", "dtype", "=", "'int32'", ")", "\n", "max_y", "=", "tf", ".", "cast", "(", "tf", ".", "shape", "(", "im", ")", "[", "1", "]", "-", "1", ",", "'int32'", ")", "\n", "max_x", "=", "tf", ".", "cast", "(", "tf", ".", "shape", "(", "im", ")", "[", "2", "]", "-", "1", ",", "'int32'", ")", "\n", "\n", "# scale indices from [-1, 1] to [0, width/height]", "\n", "x", "=", "(", "x", "+", "1.0", ")", "*", "(", "width_f", ")", "/", "2.0", "\n", "y", "=", "(", "y", "+", "1.0", ")", "*", "(", "height_f", ")", "/", "2.0", "\n", "\n", "# do sampling", "\n", "x0", "=", "tf", ".", "cast", "(", "tf", ".", "floor", "(", "x", ")", ",", "'int32'", ")", "\n", "x1", "=", "x0", "+", "1", "\n", "y0", "=", "tf", ".", "cast", "(", "tf", ".", "floor", "(", "y", ")", ",", "'int32'", ")", "\n", "y1", "=", "y0", "+", "1", "\n", "\n", "x0", "=", "tf", ".", "clip_by_value", "(", "x0", ",", "zero", ",", "max_x", ")", "\n", "x1", "=", "tf", ".", "clip_by_value", "(", "x1", ",", "zero", ",", "max_x", ")", "\n", "y0", "=", "tf", ".", "clip_by_value", "(", "y0", ",", "zero", ",", "max_y", ")", "\n", "y1", "=", "tf", ".", "clip_by_value", "(", "y1", ",", "zero", ",", "max_y", ")", "\n", "dim2", "=", "width", "\n", "dim1", "=", "width", "*", "height", "\n", "base", "=", "_repeat", "(", "tf", ".", "range", "(", "num_batch", ")", "*", "dim1", ",", "out_height", "*", "out_width", ")", "\n", "base_y0", "=", "base", "+", "y0", "*", "dim2", "\n", "base_y1", "=", "base", "+", "y1", "*", "dim2", "\n", "idx_a", "=", "base_y0", "+", "x0", "\n", "idx_b", "=", "base_y1", "+", "x0", "\n", "idx_c", "=", "base_y0", "+", "x1", "\n", "idx_d", "=", "base_y1", "+", "x1", "\n", "\n", "# use indices to lookup pixels in the flat image and restore", "\n", "# channels dim", "\n", "im_flat", "=", "tf", ".", "reshape", "(", "im", ",", "tf", ".", "stack", "(", "[", "-", "1", ",", "channels", "]", ")", ")", "\n", "im_flat", "=", "tf", ".", "cast", "(", "im_flat", ",", "'float32'", ")", "\n", "Ia", "=", "tf", ".", "gather", "(", "im_flat", ",", "idx_a", ")", "\n", "Ib", "=", "tf", ".", "gather", "(", "im_flat", ",", "idx_b", ")", "\n", "Ic", "=", "tf", ".", "gather", "(", "im_flat", ",", "idx_c", ")", "\n", "Id", "=", "tf", ".", "gather", "(", "im_flat", ",", "idx_d", ")", "\n", "\n", "# and finally calculate interpolated values", "\n", "x0_f", "=", "tf", ".", "cast", "(", "x0", ",", "'float32'", ")", "\n", "x1_f", "=", "tf", ".", "cast", "(", "x1", ",", "'float32'", ")", "\n", "y0_f", "=", "tf", ".", "cast", "(", "y0", ",", "'float32'", ")", "\n", "y1_f", "=", "tf", ".", "cast", "(", "y1", ",", "'float32'", ")", "\n", "wa", "=", "tf", ".", "expand_dims", "(", "(", "(", "x1_f", "-", "x", ")", "*", "(", "y1_f", "-", "y", ")", ")", ",", "1", ")", "\n", "wb", "=", "tf", ".", "expand_dims", "(", "(", "(", "x1_f", "-", "x", ")", "*", "(", "y", "-", "y0_f", ")", ")", ",", "1", ")", "\n", "wc", "=", "tf", ".", "expand_dims", "(", "(", "(", "x", "-", "x0_f", ")", "*", "(", "y1_f", "-", "y", ")", ")", ",", "1", ")", "\n", "wd", "=", "tf", ".", "expand_dims", "(", "(", "(", "x", "-", "x0_f", ")", "*", "(", "y", "-", "y0_f", ")", ")", ",", "1", ")", "\n", "output", "=", "tf", ".", "add_n", "(", "[", "wa", "*", "Ia", ",", "wb", "*", "Ib", ",", "wc", "*", "Ic", ",", "wd", "*", "Id", "]", ")", "\n", "return", "output", "\n", "\n", "", "", "def", "_meshgrid", "(", "height", ",", "width", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'_meshgrid'", ")", ":", "\n", "# This should be equivalent to:", "\n", "#  x_t, y_t = np.meshgrid(np.linspace(-1, 1, width),", "\n", "#                         np.linspace(-1, 1, height))", "\n", "#  ones = np.ones(np.prod(x_t.shape))", "\n", "#  grid = np.vstack([x_t.flatten(), y_t.flatten(), ones])", "\n", "            ", "x_t", "=", "tf", ".", "matmul", "(", "tf", ".", "ones", "(", "shape", "=", "tf", ".", "stack", "(", "[", "height", ",", "1", "]", ")", ")", ",", "\n", "tf", ".", "transpose", "(", "tf", ".", "expand_dims", "(", "tf", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "width", ")", ",", "1", ")", ",", "[", "1", ",", "0", "]", ")", ")", "\n", "y_t", "=", "tf", ".", "matmul", "(", "tf", ".", "expand_dims", "(", "tf", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "height", ")", ",", "1", ")", ",", "\n", "tf", ".", "ones", "(", "shape", "=", "tf", ".", "stack", "(", "[", "1", ",", "width", "]", ")", ")", ")", "\n", "\n", "x_t_flat", "=", "tf", ".", "reshape", "(", "x_t", ",", "(", "1", ",", "-", "1", ")", ")", "\n", "y_t_flat", "=", "tf", ".", "reshape", "(", "y_t", ",", "(", "1", ",", "-", "1", ")", ")", "\n", "\n", "ones", "=", "tf", ".", "ones_like", "(", "x_t_flat", ")", "\n", "grid", "=", "tf", ".", "concat", "(", "axis", "=", "0", ",", "values", "=", "[", "x_t_flat", ",", "y_t_flat", ",", "ones", "]", ")", "\n", "return", "grid", "\n", "\n", "", "", "def", "_transform", "(", "theta", ",", "input_dim", ",", "out_size", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'_transform'", ")", ":", "\n", "            ", "num_batch", "=", "tf", ".", "shape", "(", "input_dim", ")", "[", "0", "]", "\n", "height", "=", "tf", ".", "shape", "(", "input_dim", ")", "[", "1", "]", "\n", "width", "=", "tf", ".", "shape", "(", "input_dim", ")", "[", "2", "]", "\n", "num_channels", "=", "tf", ".", "shape", "(", "input_dim", ")", "[", "3", "]", "\n", "theta", "=", "tf", ".", "reshape", "(", "theta", ",", "(", "-", "1", ",", "2", ",", "3", ")", ")", "\n", "theta", "=", "tf", ".", "cast", "(", "theta", ",", "'float32'", ")", "\n", "\n", "# grid of (x_t, y_t, 1), eq (1) in ref [1]", "\n", "height_f", "=", "tf", ".", "cast", "(", "height", ",", "'float32'", ")", "\n", "width_f", "=", "tf", ".", "cast", "(", "width", ",", "'float32'", ")", "\n", "out_height", "=", "out_size", "[", "0", "]", "\n", "out_width", "=", "out_size", "[", "1", "]", "\n", "grid", "=", "_meshgrid", "(", "out_height", ",", "out_width", ")", "\n", "grid", "=", "tf", ".", "expand_dims", "(", "grid", ",", "0", ")", "\n", "grid", "=", "tf", ".", "reshape", "(", "grid", ",", "[", "-", "1", "]", ")", "\n", "grid", "=", "tf", ".", "tile", "(", "grid", ",", "tf", ".", "stack", "(", "[", "num_batch", "]", ")", ")", "\n", "grid", "=", "tf", ".", "reshape", "(", "grid", ",", "tf", ".", "stack", "(", "[", "num_batch", ",", "3", ",", "-", "1", "]", ")", ")", "\n", "\n", "# Transform A x (x_t, y_t, 1)^T -> (x_s, y_s)", "\n", "T_g", "=", "tf", ".", "matmul", "(", "theta", ",", "grid", ")", "\n", "x_s", "=", "tf", ".", "slice", "(", "T_g", ",", "[", "0", ",", "0", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "-", "1", "]", ")", "\n", "y_s", "=", "tf", ".", "slice", "(", "T_g", ",", "[", "0", ",", "1", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "-", "1", "]", ")", "\n", "x_s_flat", "=", "tf", ".", "reshape", "(", "x_s", ",", "[", "-", "1", "]", ")", "\n", "y_s_flat", "=", "tf", ".", "reshape", "(", "y_s", ",", "[", "-", "1", "]", ")", "\n", "\n", "input_transformed", "=", "_interpolate", "(", "\n", "input_dim", ",", "x_s_flat", ",", "y_s_flat", ",", "\n", "out_size", ")", "\n", "\n", "output", "=", "tf", ".", "reshape", "(", "\n", "input_transformed", ",", "tf", ".", "stack", "(", "[", "num_batch", ",", "out_height", ",", "out_width", ",", "num_channels", "]", ")", ")", "\n", "return", "output", "\n", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "output", "=", "_transform", "(", "theta", ",", "U", ",", "out_size", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.batch_transformer": [[236, 243], ["tensorflow.variable_scope", "map", "tensorflow.gather", "ops.transformer", "tensorflow.reshape", "thetas.get_shape().as_list", "xrange", "thetas.get_shape"], "function", ["home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.transformer"], ["", "", "def", "batch_transformer", "(", "U", ",", "thetas", ",", "out_size", ",", "name", "=", "'BatchSpatialTransformer'", ")", ":", "\n", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "        ", "num_batch", ",", "num_transforms", "=", "map", "(", "int", ",", "thetas", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", ":", "2", "]", ")", "\n", "indices", "=", "[", "[", "i", "]", "*", "num_transforms", "for", "i", "in", "xrange", "(", "num_batch", ")", "]", "\n", "input_repeated", "=", "tf", ".", "gather", "(", "U", ",", "tf", ".", "reshape", "(", "indices", ",", "[", "-", "1", "]", ")", ")", "\n", "return", "transformer", "(", "input_repeated", ",", "thetas", ",", "out_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.conv3d": [[245, 261], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.conv3d", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.nn.bias_add", "tf.reshape.get_shape", "tensorflow.truncated_normal_initializer", "tensorflow.constant_initializer", "input_.get_shape"], "function", ["home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.conv3d"], ["", "", "def", "conv3d", "(", "input_", ",", "output_dim", ",", "\n", "k_h", "=", "4", ",", "k_w", "=", "4", ",", "k_d", "=", "2", ",", "d_h", "=", "2", ",", "d_w", "=", "2", ",", "d_d", "=", "2", ",", "stddev", "=", "0.02", ",", "\n", "name", "=", "\"conv3d\"", ",", "with_w", "=", "False", ")", ":", "\n", "\n", "  ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "    ", "w", "=", "tf", ".", "get_variable", "(", "'w'", ",", "[", "k_d", ",", "k_h", ",", "k_w", ",", "input_", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "output_dim", "]", ",", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv3d", "(", "input_", ",", "w", ",", "strides", "=", "[", "1", ",", "d_d", ",", "d_h", ",", "d_w", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "biases", "=", "tf", ".", "get_variable", "(", "'biases'", ",", "[", "output_dim", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "conv", "=", "tf", ".", "reshape", "(", "tf", ".", "nn", ".", "bias_add", "(", "conv", ",", "biases", ")", ",", "conv", ".", "get_shape", "(", ")", ")", "\n", "\n", "if", "with_w", ":", "\n", "      ", "return", "conv", ",", "w", ",", "biases", "\n", "", "else", ":", "\n", "      ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.conv": [[279, 296], ["tensorflow.reshape", "input.get_shape", "tensorflow.nn.conv2d", "convolve", "tensorflow.split", "tensorflow.split", "tensorflow.concat", "tensorflow.nn.bias_add", "convolve", "zip", "tf.concat.get_shape().as_list", "tf.concat.get_shape"], "function", ["home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.conv2d"], ["", "", "def", "conv", "(", "input", ",", "kernel", ",", "biases", ",", "k_h", ",", "k_w", ",", "c_o", ",", "s_h", ",", "s_w", ",", "padding", "=", "\"VALID\"", ",", "group", "=", "1", ")", ":", "\n", "    ", "'''From https://github.com/ethereon/caffe-tensorflow\n    '''", "\n", "c_i", "=", "input", ".", "get_shape", "(", ")", "[", "-", "1", "]", "\n", "assert", "c_i", "%", "group", "==", "0", "\n", "assert", "c_o", "%", "group", "==", "0", "\n", "convolve", "=", "lambda", "i", ",", "k", ":", "tf", ".", "nn", ".", "conv2d", "(", "i", ",", "k", ",", "[", "1", ",", "s_h", ",", "s_w", ",", "1", "]", ",", "padding", "=", "padding", ")", "\n", "\n", "\n", "if", "group", "==", "1", ":", "\n", "        ", "conv", "=", "convolve", "(", "input", ",", "kernel", ")", "\n", "", "else", ":", "\n", "        ", "input_groups", "=", "tf", ".", "split", "(", "input", ",", "group", ",", "3", ")", "#tf.split(3, group, input)", "\n", "kernel_groups", "=", "tf", ".", "split", "(", "kernel", ",", "group", ",", "3", ")", "#tf.split(3, group, kernel)", "\n", "output_groups", "=", "[", "convolve", "(", "i", ",", "k", ")", "for", "i", ",", "k", "in", "zip", "(", "input_groups", ",", "kernel_groups", ")", "]", "\n", "conv", "=", "tf", ".", "concat", "(", "output_groups", ",", "3", ")", "#tf.concat(3, output_groups)", "\n", "", "return", "tf", ".", "reshape", "(", "tf", ".", "nn", ".", "bias_add", "(", "conv", ",", "biases", ")", ",", "[", "-", "1", "]", "+", "conv", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.lrelu": [[297, 299], ["tensorflow.maximum"], "function", ["None"], ["", "def", "lrelu", "(", "x", ",", "leak", "=", "0.2", ",", "name", "=", "\"lrelu\"", ")", ":", "\n", "  ", "return", "tf", ".", "maximum", "(", "x", ",", "leak", "*", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.linear": [[300, 312], ["input_.get_shape().as_list", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "input_.get_shape", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer", "tensorflow.matmul", "tensorflow.matmul"], "function", ["None"], ["", "def", "linear", "(", "input_", ",", "output_size", ",", "scope", "=", "None", ",", "stddev", "=", "0.02", ",", "bias_start", "=", "0.0", ",", "with_w", "=", "False", ")", ":", "\n", "  ", "shape", "=", "input_", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "scope", "or", "\"Linear\"", ")", ":", "\n", "    ", "matrix", "=", "tf", ".", "get_variable", "(", "\"Matrix\"", ",", "[", "shape", "[", "1", "]", ",", "output_size", "]", ",", "tf", ".", "float32", ",", "\n", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "[", "output_size", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "bias_start", ")", ")", "\n", "if", "with_w", ":", "\n", "      ", "return", "tf", ".", "matmul", "(", "input_", ",", "matrix", ")", "+", "bias", ",", "matrix", ",", "bias", "\n", "", "else", ":", "\n", "      ", "return", "tf", ".", "matmul", "(", "input_", ",", "matrix", ")", "+", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.conv2d": [[313, 327], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.conv2d", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.nn.bias_add", "tf.reshape.get_shape", "tensorflow.truncated_normal_initializer", "tensorflow.constant_initializer", "input_.get_shape"], "function", ["home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.ops.conv2d"], ["", "", "", "def", "conv2d", "(", "input_", ",", "output_dim", ",", "\n", "k_h", "=", "4", ",", "k_w", "=", "4", ",", "d_h", "=", "2", ",", "d_w", "=", "2", ",", "stddev", "=", "0.02", ",", "\n", "name", "=", "\"conv2d\"", ",", "with_w", "=", "False", ",", "padding", "=", "'SAME'", ")", ":", "\n", "  ", "with", "tf", ".", "variable_scope", "(", "name", ")", ":", "\n", "    ", "w", "=", "tf", ".", "get_variable", "(", "'w'", ",", "[", "k_h", ",", "k_w", ",", "input_", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "output_dim", "]", ",", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "input_", ",", "w", ",", "strides", "=", "[", "1", ",", "d_h", ",", "d_w", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "biases", "=", "tf", ".", "get_variable", "(", "'biases'", ",", "[", "output_dim", "]", ",", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ")", "\n", "conv", "=", "tf", ".", "reshape", "(", "tf", ".", "nn", ".", "bias_add", "(", "conv", ",", "biases", ")", ",", "conv", ".", "get_shape", "(", ")", ")", "\n", "if", "with_w", ":", "\n", "      ", "return", "conv", ",", "w", ",", "biases", "\n", "", "else", ":", "\n", "      ", "return", "conv", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.main.main": [[32, 74], ["utils.pp.pprint", "tensorflow.ConfigProto", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "tensorflow.Session", "model.Vid_Imagine", "utils.show_all_variables", "test.Vid_Imagine_Test.train", "tensorflow.Session", "test.Vid_Imagine_Test", "utils.show_all_variables", "test.Vid_Imagine_Test.test"], "function", ["home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.utils.show_all_variables", "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.utils.show_all_variables"], ["def", "main", "(", "_", ")", ":", "\n", "  ", "pp", ".", "pprint", "(", "flags", ".", "FLAGS", ".", "__flags", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "FLAGS", ".", "checkpoint_dir", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "FLAGS", ".", "checkpoint_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "FLAGS", ".", "sample_dir", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "FLAGS", ".", "sample_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "FLAGS", ".", "test_dir", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "FLAGS", ".", "test_dir", ")", "\n", "\n", "\n", "#gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.333)", "\n", "", "run_config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "run_config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "if", "FLAGS", ".", "is_train", ":", "\n", "    ", "with", "tf", ".", "Session", "(", "config", "=", "run_config", ")", "as", "sess", ":", "\n", "      ", "v_imagie", "=", "Vid_Imagine", "(", "\n", "sess", ",", "\n", "image_width", "=", "FLAGS", ".", "input_width", ",", "\n", "image_height", "=", "FLAGS", ".", "input_height", ",", "\n", "num_epochs", "=", "FLAGS", ".", "epoch", ",", "\n", "batch_size", "=", "FLAGS", ".", "batch_size", ",", "\n", "c_dim", "=", "FLAGS", ".", "c_dim", ",", "\n", "feature", "=", "FLAGS", ".", "feature", ",", "\n", "data_dir", "=", "FLAGS", ".", "dataset_dir", ",", "\n", "dataset_name", "=", "FLAGS", ".", "dataset", ")", "\n", "show_all_variables", "(", ")", "\n", "v_imagie", ".", "train", "(", "FLAGS", ")", "\n", "", "", "else", ":", "\n", "    ", "with", "tf", ".", "Session", "(", "config", "=", "run_config", ")", "as", "sess", ":", "\n", "      ", "v_imagie", "=", "Vid_Imagine_Test", "(", "\n", "sess", ",", "\n", "image_width", "=", "FLAGS", ".", "input_width", ",", "\n", "image_height", "=", "FLAGS", ".", "input_height", ",", "\n", "num_epochs", "=", "FLAGS", ".", "epoch", ",", "\n", "batch_size", "=", "FLAGS", ".", "batch_size", ",", "\n", "c_dim", "=", "FLAGS", ".", "c_dim", ",", "\n", "feature", "=", "FLAGS", ".", "feature", ",", "\n", "data_dir", "=", "FLAGS", ".", "dataset_dir", ",", "\n", "dataset_name", "=", "FLAGS", ".", "dataset", ")", "\n", "show_all_variables", "(", ")", "\n", "v_imagie", ".", "test", "(", "FLAGS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.utils.show_all_variables": [[22, 25], ["tensorflow.trainable_variables", "tensorflow.model_analyzer.analyze_vars"], "function", ["None"], ["def", "show_all_variables", "(", ")", ":", "\n", "  ", "model_vars", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "slim", ".", "model_analyzer", ".", "analyze_vars", "(", "model_vars", ",", "print_info", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.utils.save_images": [[26, 30], ["utils.merge", "scipy.misc.imsave"], "function", ["home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.utils.merge"], ["", "def", "save_images", "(", "images", ",", "size", ",", "image_path", ")", ":", "\n", "# images = (images+1.)/2.", "\n", "  ", "puzzle", "=", "merge", "(", "images", ",", "size", ")", "\n", "return", "scipy", ".", "misc", ".", "imsave", "(", "image_path", ",", "puzzle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.utils.merge": [[31, 48], ["numpy.zeros", "enumerate", "numpy.zeros", "enumerate", "numpy.squeeze"], "function", ["None"], ["", "def", "merge", "(", "images", ",", "size", ")", ":", "\n", "  ", "cdim", "=", "images", ".", "shape", "[", "-", "1", "]", "\n", "h", ",", "w", "=", "images", ".", "shape", "[", "1", "]", ",", "images", ".", "shape", "[", "2", "]", "\n", "if", "cdim", "==", "1", ":", "\n", "    ", "img", "=", "np", ".", "zeros", "(", "(", "h", "*", "size", "[", "0", "]", ",", "w", "*", "size", "[", "1", "]", ")", ")", "\n", "for", "idx", ",", "image", "in", "enumerate", "(", "images", ")", ":", "\n", "      ", "i", "=", "idx", "%", "size", "[", "1", "]", "\n", "j", "=", "idx", "//", "size", "[", "1", "]", "\n", "img", "[", "j", "*", "h", ":", "j", "*", "h", "+", "h", ",", "i", "*", "w", ":", "i", "*", "w", "+", "w", "]", "=", "np", ".", "squeeze", "(", "image", ")", "\n", "", "return", "img", "\n", "", "else", ":", "\n", "    ", "img", "=", "np", ".", "zeros", "(", "(", "h", "*", "size", "[", "0", "]", ",", "w", "*", "size", "[", "1", "]", ",", "cdim", ")", ")", "\n", "for", "idx", ",", "image", "in", "enumerate", "(", "images", ")", ":", "\n", "      ", "i", "=", "idx", "%", "size", "[", "1", "]", "\n", "j", "=", "idx", "//", "size", "[", "1", "]", "\n", "img", "[", "j", "*", "h", ":", "j", "*", "h", "+", "h", ",", "i", "*", "w", ":", "i", "*", "w", "+", "w", ",", ":", "]", "=", "image", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.utils.SequenceToImageAndVideo": [[49, 56], ["tensorflow.image.resize_images", "tensorflow.concat"], "function", ["None"], ["", "", "def", "SequenceToImageAndVideo", "(", "images", ",", "resize_height", "=", "320", ",", "resize_width", "=", "240", ")", ":", "\n", "  ", "image_first", "=", "images", "[", ":", ",", "0", ",", ":", ",", ":", ",", ":", "]", "\n", "resized_images", "=", "tf", ".", "image", ".", "resize_images", "(", "image_first", ",", "[", "resize_width", ",", "resize_height", "]", ")", "\n", "if", "resized_images", ".", "shape", "[", "-", "1", "]", "==", "1", ":", "\n", "    ", "resized_images", "=", "tf", ".", "concat", "(", "[", "resized_images", ",", "resized_images", ",", "resized_images", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "video", "=", "images", "\n", "return", "resized_images", ",", "video", ",", "image_first", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.utils.ReadInput": [[57, 81], ["tensorflow.train.string_input_producer", "tensorflow.TFRecordReader", "tf.TFRecordReader.read", "tensorflow.parse_single_sequence_example", "tensorflow.reshape", "tensorflow.train.shuffle_batch", "tensorflow.gfile.Glob", "tensorflow.FixedLenSequenceFeature", "tensorflow.gfile.Glob", "tensorflow.gfile.Glob"], "function", ["None"], ["", "def", "ReadInput", "(", "self", ",", "num_epochs", "=", "None", ",", "val", "=", "False", ",", "test", "=", "False", ")", ":", "\n", "  ", "if", "val", ":", "\n", "    ", "filenames", "=", "tf", ".", "gfile", ".", "Glob", "(", "self", ".", "data_dir", "+", "'/surfing_val.tfrecords'", ")", "\n", "", "elif", "test", ":", "\n", "    ", "filenames", "=", "tf", ".", "gfile", ".", "Glob", "(", "self", ".", "data_dir", "+", "'/surfing_test.tfrecords'", ")", "\n", "", "else", ":", "\n", "    ", "filenames", "=", "tf", ".", "gfile", ".", "Glob", "(", "self", ".", "data_dir", "+", "'/surfing.tfrecords'", ")", "\n", "", "filename_queue", "=", "tf", ".", "train", ".", "string_input_producer", "(", "filenames", ",", "num_epochs", "=", "num_epochs", ",", "shuffle", "=", "True", ")", "\n", "reader", "=", "tf", ".", "TFRecordReader", "(", ")", "\n", "_", ",", "example", "=", "reader", ".", "read", "(", "filename_queue", ")", "\n", "feature_sepc", "=", "{", "\n", "self", ".", "features", ":", "tf", ".", "FixedLenSequenceFeature", "(", "\n", "shape", "=", "[", "self", ".", "image_width", "*", "self", ".", "image_width", "*", "self", ".", "c_dim", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "}", "\n", "_", ",", "features", "=", "tf", ".", "parse_single_sequence_example", "(", "\n", "example", ",", "sequence_features", "=", "feature_sepc", ")", "\n", "moving_objs", "=", "tf", ".", "reshape", "(", "\n", "features", "[", "self", ".", "features", "]", ",", "[", "self", ".", "video_len", ",", "self", ".", "image_width", ",", "self", ".", "image_width", ",", "self", ".", "c_dim", "]", ")", "\n", "examples", "=", "tf", ".", "train", ".", "shuffle_batch", "(", "\n", "[", "moving_objs", "]", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "num_threads", "=", "self", ".", "batch_size", ",", "\n", "capacity", "=", "self", ".", "batch_size", "*", "100", ",", "\n", "min_after_dequeue", "=", "self", ".", "batch_size", "*", "4", ")", "\n", "return", "examples", "\n", "\n"]], "home.repos.pwc.inspect_result.gitpub327_VideoImagination.None.utils.video_summary": [[82, 90], ["tensorflow.shape", "range", "tensorflow.slice", "tensorflow.reshape", "sum.append", "tensorflow.summary.image"], "function", ["None"], ["", "def", "video_summary", "(", "name", ",", "Video", ",", "fs", ")", ":", "\n", "  ", "shape", "=", "tf", ".", "shape", "(", "Video", ")", "\n", "sum", "=", "[", "]", "\n", "for", "x", "in", "range", "(", "fs", ")", ":", "\n", "    ", "frame", "=", "tf", ".", "slice", "(", "Video", ",", "[", "0", ",", "x", ",", "0", ",", "0", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", "\n", "frame", "=", "tf", ".", "reshape", "(", "frame", ",", "[", "shape", "[", "0", "]", ",", "shape", "[", "2", "]", ",", "shape", "[", "3", "]", ",", "shape", "[", "4", "]", "]", ")", "\n", "sum", ".", "append", "(", "tf", ".", "summary", ".", "image", "(", "name", ",", "frame", ")", ")", "\n", "", "return", "sum", "\n", "", ""]]}