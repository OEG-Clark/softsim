{"home.repos.pwc.inspect_result.rballester_ttpca.ttpca.reduce.reduce": [[12, 144], ["numpy.setdiff1d", "numpy.setdiff1d", "ttrecipes.core.transpose", "order.index", "copy.deepcopy", "future.builtins.range", "tt.vector.from_list", "ttrecipes.core.means", "tt.vector.round", "numpy.sqrt", "copy.deepcopy", "future.builtins.range", "tt.vector.from_list", "tt.vector.round", "tt.vector.to_list", "future.builtins.range", "future.builtins.range", "tt.vector.from_list", "ttrecipes.core.shift_mode", "tt.vector.to_list", "numpy.einsum", "numpy.reshape", "tt.vector.from_list", "tt.vector.norm", "tt.vector.to_list", "ttrecipes.core.orthogonalize", "numpy.linalg.svd", "cores[].dot", "tt.vector.from_list", "tt.vector.from_list", "ttrecipes.core.concatenate", "hasattr", "len", "len", "ValueError", "numpy.min", "numpy.max", "print", "print", "numpy.arange", "numpy.arange", "list", "tt.vector.to_list", "ttrecipes.core.constant_tt", "numpy.asscalar", "tt.vector.to_list", "numpy.repeat", "tt.vector.norm", "numpy.sqrt", "print", "ttrecipes.core.left_orthogonalize", "ttrecipes.core.right_orthogonalize", "print", "print", "copy.deepcopy", "tt.vector.from_list", "numpy.diag", "numpy.concatenate", "print", "tt.vector.norm", "numpy.sqrt", "numpy.unique", "list", "list", "numpy.repeat", "numpy.sum", "len", "numpy.mean", "numpy.prod", "[].dot", "tt.vector.to_list", "len", "print", "numpy.mean", "list", "list", "ttrecipes.core.mean", "len", "len", "numpy.eye", "numpy.zeros", "numpy.ones", "len", "future.builtins.range", "future.builtins.range", "withinmean2.full", "numpy.eye", "numpy.diag", "numpy.delete", "len", "numpy.arange", "len", "slice", "slice"], "function", ["None"], ["def", "reduce", "(", "t", ",", "modes", ",", "degree", "=", "3", ",", "eps", "=", "1e-3", ",", "verbose", "=", "False", ",", "return_all", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Given a tensor and a list of modes, consider the space of subtensors obtained\n    by fixing these modes. Find a PCA basis for that space and return the coefficients\n    for each subtensor\n\n    :param t: a TT\n    :param modes: the ensemble modes\n    :param degree: how large a PCA basis to take (default is 3)\n    :param eps: relative error tolerance. Used while permuting modes. Default is 1e-3\n    :param verbose:\n    :param return_all: if True, return information about the projection error. Default is False\n    :return: ensemble (if not return_all) or (ensemble, preserved, residual) (if return_all):\n        - ensemble: a TT of size M1 x ... x Mk x `degree`, where M1, etc. are the sizes of `t` along `modes`\n        - preserved: the fraction (between 0 and 1; higher is better) of norm preserved by the embedding\n        - residual: the tensor containing the trailing R-degree principal components\n\n    \"\"\"", "\n", "\n", "N", "=", "t", ".", "d", "\n", "shape", "=", "t", ".", "n", "\n", "if", "not", "hasattr", "(", "modes", ",", "'__len__'", ")", ":", "\n", "        ", "modes", "=", "[", "modes", "]", "\n", "\n", "", "if", "len", "(", "modes", ")", "!=", "len", "(", "np", ".", "unique", "(", "modes", ")", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Modes may not be repeated'", ")", "\n", "", "assert", "0", "<=", "np", ".", "min", "(", "modes", ")", "\n", "assert", "np", ".", "max", "(", "modes", ")", "<", "N", "\n", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "'Computing PCA ensemble...'", ")", "\n", "\n", "# Group target modes next to each other", "\n", "", "if", "verbose", ":", "\n", "        ", "print", "(", "'\\tTransposing tensor... 0'", ",", "end", "=", "''", ")", "\n", "", "part1", "=", "np", ".", "setdiff1d", "(", "np", ".", "arange", "(", "modes", "[", "0", "]", ")", ",", "modes", ")", "# Modes that will lie to the left of the target ones", "\n", "part2", "=", "np", ".", "setdiff1d", "(", "np", ".", "arange", "(", "modes", "[", "0", "]", ",", "N", ")", ",", "modes", ")", "# Modes that will lie to the right of the target ones", "\n", "order", "=", "list", "(", "part1", ")", "+", "list", "(", "modes", ")", "+", "list", "(", "part2", ")", "\n", "t", "=", "tr", ".", "core", ".", "transpose", "(", "t", ",", "order", ",", "eps", "=", "eps", ")", "\n", "start_pos", "=", "order", ".", "index", "(", "modes", "[", "0", "]", ")", "# The first mode (modes[0]) ended up at this position", "\n", "\n", "# We now project each vector on the subspace spanned by the constant vector", "\n", "# This is achieved by subtracting each vector's within-mean", "\n", "cores", "=", "copy", ".", "deepcopy", "(", "tt", ".", "vector", ".", "to_list", "(", "t", ")", ")", "\n", "for", "n", "in", "range", "(", "N", ")", ":", "\n", "        ", "if", "n", "<", "start_pos", "or", "n", ">=", "start_pos", "+", "len", "(", "modes", ")", ":", "\n", "            ", "cores", "[", "n", "]", "=", "np", ".", "repeat", "(", "np", ".", "mean", "(", "cores", "[", "n", "]", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ",", "cores", "[", "n", "]", ".", "shape", "[", "1", "]", ",", "axis", "=", "1", ")", "\n", "", "", "withinmeanrep", "=", "tt", ".", "vector", ".", "from_list", "(", "cores", ")", "\n", "withinmean", "=", "tr", ".", "core", ".", "means", "(", "t", ",", "modes", "=", "list", "(", "range", "(", "start_pos", ")", ")", "+", "list", "(", "range", "(", "start_pos", "+", "len", "(", "modes", ")", ",", "N", ")", ")", ")", "\n", "t", "=", "tt", ".", "vector", ".", "round", "(", "t", "-", "withinmeanrep", ",", "eps", "=", "eps", ")", "\n", "degree", "-=", "1", "\n", "\n", "withinmean2", "=", "withinmean", "-", "tr", ".", "core", ".", "constant_tt", "(", "shape", "=", "withinmean", ".", "n", ",", "fill", "=", "tr", ".", "core", ".", "mean", "(", "withinmean", ")", ")", "\n", "norm1", "=", "np", ".", "sqrt", "(", "np", ".", "asscalar", "(", "np", ".", "sum", "(", "withinmean2", ".", "full", "(", ")", "**", "2", ")", ")", ")", "\n", "\n", "# Subtract the cross-mean (mean of the collection of vectors)", "\n", "cores", "=", "copy", ".", "deepcopy", "(", "tt", ".", "vector", ".", "to_list", "(", "t", ")", ")", "\n", "for", "n", "in", "range", "(", "start_pos", ",", "start_pos", "+", "len", "(", "modes", ")", ")", ":", "\n", "        ", "cores", "[", "n", "]", "=", "np", ".", "repeat", "(", "np", ".", "mean", "(", "cores", "[", "n", "]", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ",", "cores", "[", "n", "]", ".", "shape", "[", "1", "]", ",", "axis", "=", "1", ")", "\n", "", "crossmean", "=", "tt", ".", "vector", ".", "from_list", "(", "cores", ")", "\n", "t", "=", "tt", ".", "vector", ".", "round", "(", "t", "-", "crossmean", ",", "eps", "=", "eps", ")", "\n", "\n", "norm2", "=", "tt", ".", "vector", ".", "norm", "(", "t", ")", "/", "np", ".", "sqrt", "(", "np", ".", "prod", "(", "shape", "[", "np", ".", "delete", "(", "np", ".", "arange", "(", "N", ")", ",", "modes", ")", "]", ")", ")", "\n", "\n", "# Orthogonalize to the left and right of these modes", "\n", "cores", "=", "tt", ".", "vector", ".", "to_list", "(", "t", ")", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "'\\n\\tOrthogonalization...'", ")", "\n", "", "for", "i", "in", "range", "(", "start_pos", ")", ":", "\n", "        ", "tr", ".", "core", ".", "left_orthogonalize", "(", "cores", ",", "i", ")", "\n", "", "for", "i", "in", "range", "(", "N", "-", "1", ",", "start_pos", "+", "len", "(", "modes", ")", "-", "1", ",", "-", "1", ")", ":", "\n", "        ", "tr", ".", "core", ".", "right_orthogonalize", "(", "cores", ",", "i", ")", "\n", "\n", "# Cut out the relevant sequence of modes", "\n", "", "cores", "=", "cores", "[", "start_pos", ":", "start_pos", "+", "len", "(", "modes", ")", "]", "\n", "\n", "# Convert the sequence into a TT (convert ranks to spatial modes)", "\n", "cores", "=", "[", "np", ".", "eye", "(", "cores", "[", "0", "]", ".", "shape", "[", "0", "]", ")", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "]", "+", "cores", "+", "[", "np", ".", "eye", "(", "cores", "[", "-", "1", "]", ".", "shape", "[", "2", "]", ")", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "]", "\n", "t", "=", "tt", ".", "vector", ".", "from_list", "(", "cores", ")", "\n", "\n", "# Put the rank modes together at the very right", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "'\\tPutting rank modes together...'", ")", "\n", "", "t", "=", "tr", ".", "core", ".", "shift_mode", "(", "t", ",", "0", ",", "t", ".", "d", "-", "2", ",", "eps", "=", "eps", ")", "\n", "cores", "=", "tt", ".", "vector", ".", "to_list", "(", "t", ")", "\n", "\n", "# Merge the two rank dimensions into one", "\n", "cores", "[", "-", "2", "]", "=", "np", ".", "einsum", "(", "'iaj,jbk->ikab'", ",", "cores", "[", "-", "2", "]", ",", "cores", "[", "-", "1", "]", ")", "\n", "del", "cores", "[", "-", "1", "]", "\n", "cores", "[", "-", "1", "]", "=", "np", ".", "reshape", "(", "cores", "[", "-", "1", "]", ",", "[", "-", "1", ",", "cores", "[", "-", "1", "]", ".", "shape", "[", "2", "]", "*", "cores", "[", "-", "1", "]", ".", "shape", "[", "3", "]", ",", "1", "]", ")", "\n", "t", "=", "tt", ".", "vector", ".", "from_list", "(", "cores", ")", "\n", "\n", "norm", "=", "tt", ".", "vector", ".", "norm", "(", "t", ")", "\n", "if", "norm", ">", "0", ":", "\n", "        ", "t", "*=", "(", "norm2", "/", "norm", ")", "\n", "\n", "# Compute the truncated PCA of the space spanned by the rank modes", "\n", "", "if", "verbose", ":", "\n", "        ", "print", "(", "'\\tSVD reduction...'", ")", "\n", "", "cores", "=", "tt", ".", "vector", ".", "to_list", "(", "t", ")", "\n", "tr", ".", "core", ".", "orthogonalize", "(", "cores", ",", "t", ".", "d", "-", "1", ")", "\n", "cores", "[", "-", "1", "]", "=", "cores", "[", "-", "1", "]", "[", "...", ",", "0", "]", "\n", "svd", "=", "np", ".", "linalg", ".", "svd", "(", "cores", "[", "-", "1", "]", ",", "full_matrices", "=", "False", ")", "\n", "\n", "if", "return_all", ":", "\n", "# Compute error", "\n", "        ", "cores2", "=", "copy", ".", "deepcopy", "(", "cores", ")", "\n", "cores2", "[", "-", "1", "]", "=", "svd", "[", "0", "]", "[", ":", ",", "degree", ":", "]", ".", "dot", "(", "np", ".", "diag", "(", "svd", "[", "1", "]", ")", "[", "degree", ":", "]", ")", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "error", "=", "tt", ".", "vector", ".", "from_list", "(", "cores2", ")", "\n", "\n", "", "cores", "[", "-", "1", "]", "=", "svd", "[", "0", "]", "[", ":", ",", ":", "degree", "]", "\n", "cores", "[", "-", "1", "]", "=", "cores", "[", "-", "1", "]", ".", "dot", "(", "np", ".", "diag", "(", "svd", "[", "1", "]", "[", ":", "degree", "]", ")", ")", "\n", "cores", "[", "-", "1", "]", "=", "cores", "[", "-", "1", "]", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "if", "cores", "[", "-", "1", "]", ".", "shape", "[", "1", "]", "<", "degree", ":", "# Degenerate case: add a slice of zeros", "\n", "        ", "cores", "[", "-", "1", "]", "=", "np", ".", "concatenate", "(", "[", "cores", "[", "-", "1", "]", ",", "np", ".", "zeros", "(", "[", "cores", "[", "-", "1", "]", ".", "shape", "[", "0", "]", ",", "degree", "-", "cores", "[", "-", "1", "]", ".", "shape", "[", "1", "]", ",", "\n", "cores", "[", "-", "1", "]", ".", "shape", "[", "2", "]", "]", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "proj", "=", "tt", ".", "vector", ".", "from_list", "(", "cores", ")", "\n", "\n", "withinmean", "=", "tt", ".", "vector", ".", "from_list", "(", "tt", ".", "vector", ".", "to_list", "(", "withinmean", ")", "+", "[", "np", ".", "ones", "(", "[", "1", ",", "1", ",", "1", "]", ")", "]", ")", "\n", "proj", "=", "tr", ".", "core", ".", "concatenate", "(", "[", "withinmean", ",", "proj", "]", ",", "axis", "=", "len", "(", "modes", ")", ",", "eps", "=", "eps", ")", "\n", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", ")", "\n", "\n", "", "if", "return_all", ":", "\n", "        ", "norm2preserved", "=", "tt", ".", "vector", ".", "norm", "(", "proj", "[", "[", "slice", "(", "None", ")", "]", "*", "len", "(", "modes", ")", "+", "[", "slice", "(", "1", ",", "None", ")", "]", "]", ")", "\n", "preserved", "=", "np", ".", "sqrt", "(", "(", "norm1", "**", "2", "+", "norm2preserved", "**", "2", ")", "/", "(", "norm1", "**", "2", "+", "norm2", "**", "2", ")", ")", "\n", "if", "verbose", ":", "\n", "            ", "print", "(", "'This embedding preserves {:g}% of the original norm'", ".", "format", "(", "preserved", "*", "100", ")", ")", "\n", "", "return", "proj", ",", "preserved", ",", "error", "\n", "", "else", ":", "\n", "        ", "return", "proj", "\n", "", "", ""]]}