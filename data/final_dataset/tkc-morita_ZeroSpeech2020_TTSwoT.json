{"home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.preprocessing.check_mfcc_distr.get_mfccs": [[9, 31], ["glob.glob", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "os.path.join", "scipy.read", "wav.astype.astype", "int", "int", "librosa.core.stft", "np.concatenate.append", "librosa.feature.mfcc", "np.concatenate.append", "np.concatenate.append", "np.concatenate.append", "numpy.absolute", "librosa.feature.delta", "librosa.feature.delta"], "function", ["None"], ["def", "get_mfccs", "(", "dir_path", ",", "win_length_in_sec", ",", "hop_length_in_sec", ",", "n_mfcc", "=", "13", ")", ":", "\n", "\t", "spectra", "=", "[", "]", "\n", "mfccs", "=", "[", "]", "\n", "first_ders", "=", "[", "]", "\n", "second_ders", "=", "[", "]", "\n", "for", "path", "in", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "dir_path", ",", "'*.wav'", ")", ")", ":", "\n", "\t\t", "fs", ",", "wav", "=", "spw", ".", "read", "(", "path", ")", "\n", "# wav = normalize_int16(wav)", "\n", "wav", "=", "wav", ".", "astype", "(", "np", ".", "float32", ")", "\n", "win_length", "=", "int", "(", "win_length_in_sec", "*", "fs", ")", "\n", "hop_length", "=", "int", "(", "hop_length_in_sec", "*", "fs", ")", "\n", "stft", "=", "librosa", ".", "core", ".", "stft", "(", "wav", ",", "n_fft", "=", "win_length", ",", "hop_length", "=", "hop_length", ")", "\n", "spectra", ".", "append", "(", "np", ".", "absolute", "(", "stft", ")", ")", "\n", "mfcc", "=", "librosa", ".", "feature", ".", "mfcc", "(", "wav", ",", "sr", "=", "fs", ",", "n_mfcc", "=", "n_mfcc", ",", "n_fft", "=", "win_length", ",", "hop_length", "=", "hop_length", ")", "\n", "mfccs", ".", "append", "(", "mfcc", ")", "\n", "first_ders", ".", "append", "(", "librosa", ".", "feature", ".", "delta", "(", "mfcc", ",", "order", "=", "1", ")", ")", "\n", "second_ders", ".", "append", "(", "librosa", ".", "feature", ".", "delta", "(", "mfcc", ",", "order", "=", "2", ")", ")", "\n", "", "spectra", "=", "np", ".", "concatenate", "(", "spectra", ",", "axis", "=", "-", "1", ")", "\n", "mfccs", "=", "np", ".", "concatenate", "(", "mfccs", ",", "axis", "=", "-", "1", ")", "\n", "first_ders", "=", "np", ".", "concatenate", "(", "first_ders", ",", "axis", "=", "-", "1", ")", "\n", "second_ders", "=", "np", ".", "concatenate", "(", "second_ders", ",", "axis", "=", "-", "1", ")", "\n", "return", "spectra", ",", "mfccs", ",", "first_ders", ",", "second_ders", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.preprocessing.check_mfcc_distr.normalize_int16": [[32, 39], ["isinstance", "wav.float.astype", "wav.float.float"], "function", ["None"], ["", "def", "normalize_int16", "(", "wav", ")", ":", "\n", "\t", "if", "isinstance", "(", "wav", ",", "np", ".", "ndarray", ")", ":", "\n", "\t\t", "wav", "=", "wav", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "# torch.Tensor", "\n", "\t\t", "wav", "=", "wav", ".", "float", "(", ")", "\n", "", "wav", "/=", "2", "**", "15", "\n", "return", "wav", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.preprocessing.create_data_director.create_data_director": [[19, 31], ["create_data_director.find_root", "pandas.DataFrame", "glob.glob", "os.path.join", "os.path.basename", "os.path.relpath", "scipy.read", "rows.append", "os.path.basename.split", "float", "os.path.splitext"], "function", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.preprocessing.create_data_director.find_root"], ["def", "create_data_director", "(", "source_dirs", ")", ":", "\n", "\t", "root", "=", "find_root", "(", "source_dirs", ")", "\n", "rows", "=", "[", "]", "\n", "for", "d", "in", "source_dirs", ":", "\n", "\t\t", "for", "filepath", "in", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "d", ",", "'*.wav'", ")", ")", ":", "\n", "\t\t\t", "filename", "=", "os", ".", "path", ".", "basename", "(", "filepath", ")", "\n", "speaker", "=", "filename", ".", "split", "(", "'_'", ")", "[", "0", "]", "\n", "rel_path", "=", "os", ".", "path", ".", "relpath", "(", "filepath", ",", "root", ")", "\n", "fs", ",", "wav", "=", "spw", ".", "read", "(", "filepath", ")", "\n", "duration", "=", "wav", ".", "shape", "[", "0", "]", "/", "float", "(", "fs", ")", "\n", "rows", ".", "append", "(", "[", "rel_path", ",", "speaker", ",", "duration", ",", "os", ".", "path", ".", "splitext", "(", "filename", ")", "[", "0", "]", "]", ")", "\n", "", "", "return", "pd", ".", "DataFrame", "(", "rows", ",", "columns", "=", "[", "'filename'", ",", "'speaker'", ",", "'duration'", ",", "'filebase'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.preprocessing.create_data_director.find_root": [[32, 40], ["zip", "len", "d.split", "set"], "function", ["None"], ["", "def", "find_root", "(", "dirs", ")", ":", "\n", "\t", "root", "=", "''", "\n", "for", "dirnames", "in", "zip", "(", "*", "[", "d", ".", "split", "(", "'/'", ")", "for", "d", "in", "dirs", "]", ")", ":", "\n", "\t\t", "if", "len", "(", "set", "(", "dirnames", ")", ")", "==", "1", ":", "\n", "\t\t\t", "root", "+=", "dirnames", "[", "0", "]", "+", "'/'", "\n", "", "else", ":", "\n", "\t\t\t", "break", "\n", "", "", "return", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.test.Tester.__init__": [[14, 24], ["torch.manual_seed", "torch.cuda.manual_seed_all", "torch.device", "test.Tester.retrieve_model", "test.Tester.parameters", "test.Tester.audition.eval", "test.Tester.cognition.eval", "test.Tester.articulation.eval"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.retrieve_model"], ["\t", "def", "__init__", "(", "self", ",", "model_config_path", ",", "device", "=", "'cpu'", ",", "seed", "=", "111", ")", ":", "\n", "\t\t", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "\n", "self", ".", "retrieve_model", "(", "checkpoint_path", "=", "model_config_path", ",", "device", "=", "device", ")", "\n", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "\t\t\t", "param", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "audition", ".", "eval", "(", ")", "# Turn off dropout", "\n", "self", ".", "cognition", ".", "eval", "(", ")", "\n", "self", ".", "articulation", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.test.Tester.encode_and_decode": [[26, 62], ["torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.no_grad", "torch.nn.utils.rnn.pad_packed_sequence", "input_frames.to.to.to", "test.Tester.audition", "test.Tester.cognition.encode", "logits.softmax", "test.Tester.cognition.vae.get_map_inference", "modules.rnn_utils.pad_flatten_sequence", "modules.rnn_utils.pad_flatten_sequence", "modules.rnn_utils.pad_flatten_sequence", "one_hot_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "features_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "probs_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "code_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "isinstance", "isinstance", "speaker.expand().to.expand().to.expand().to", "test.Tester.cognition.decode", "test.Tester.articulation", "wav_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "out_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "one_hot_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "features_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "probs_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "code_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu", "speaker.expand().to.expand().to.expand", "wav_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "out_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.encode", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.get_map_inference", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.decode"], ["", "def", "encode_and_decode", "(", "self", ",", "input_frames", ",", "target_wav", ",", "speaker", ",", "is_packed", "=", "False", ",", "to_numpy", "=", "True", ")", ":", "\n", "\t\t", "if", "not", "is_packed", ":", "\n", "\t\t\t", "if", "not", "isinstance", "(", "input_frames", ",", "list", ")", ":", "\n", "\t\t\t\t", "input_frames", "=", "[", "input_frames", "]", "\n", "", "if", "not", "isinstance", "(", "target_wav", ",", "list", ")", ":", "\n", "\t\t\t\t", "target_wav", "=", "[", "target_wav", "]", "\n", "", "input_frames", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "input_frames", ")", "\n", "target_wav", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "target_wav", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "_", ",", "out_lengths", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pad_packed_sequence", "(", "target_wav", ",", "batch_first", "=", "True", ")", "\n", "input_frames", "=", "input_frames", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "code", "=", "self", ".", "audition", "(", "input_frames", ")", "\n", "logits", ",", "downsampled_batch_sizes", "=", "self", ".", "cognition", ".", "encode", "(", "code", ")", "\n", "\n", "probs", "=", "logits", ".", "softmax", "(", "-", "1", ")", "\n", "one_hot", ",", "features", "=", "self", ".", "cognition", ".", "vae", ".", "get_map_inference", "(", "logits", ")", "\n", "one_hot_padded", ",", "code_lengths", "=", "rnn_utils", ".", "pad_flatten_sequence", "(", "one_hot", ",", "downsampled_batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "features_padded", ",", "_", "=", "rnn_utils", ".", "pad_flatten_sequence", "(", "features", ",", "downsampled_batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "probs_padded", ",", "_", "=", "rnn_utils", ".", "pad_flatten_sequence", "(", "probs", ",", "downsampled_batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "if", "speaker", "is", "None", ":", "\n", "\t\t\t\t", "wav_padded", "=", "None", "\n", "out_lengths", "=", "None", "\n", "", "else", ":", "\n", "\t\t\t\t", "speaker", "=", "speaker", ".", "expand", "(", "input_frames", ".", "batch_sizes", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "features", "=", "self", ".", "cognition", ".", "decode", "(", "features", ",", "speaker", ",", "downsampled_batch_sizes", ",", "out_lengths", ")", "\n", "wav_padded", "=", "self", ".", "articulation", "(", "features", ",", "out_lengths", ")", "\n", "", "", "if", "to_numpy", ":", "\n", "\t\t\t", "one_hot_padded", "=", "one_hot_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "features_padded", "=", "features_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "probs_padded", "=", "probs_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "code_lengths", "=", "code_lengths", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "not", "speaker", "is", "None", ":", "\n", "\t\t\t\t", "wav_padded", "=", "wav_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "out_lengths", "=", "out_lengths", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "", "return", "one_hot_padded", ",", "probs_padded", ",", "features_padded", ",", "code_lengths", ",", "wav_padded", ",", "out_lengths", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.test.Tester.main": [[64, 121], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset.df_director.fillna", "dataset.df_director.fillna.groupby", "os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "dataset.reset_director", "modules.data_utils.get_data_loader", "torch.tensor", "test.Tester.encode_and_decode", "enumerate", "pandas.DataFrame", "pandas.DataFrame.to_csv", "pandas.DataFrame", "pandas.DataFrame.to_csv", "pandas.DataFrame", "pandas.DataFrame.to_csv", "os.path.splitext", "test.Tester.omit_consecutive_repetition", "os.path.join", "scipy.write", "os.path.basename", "os.path.join", "os.path.join", "os.path.join", "filename_wo_ext.split"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.reset_director", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.get_data_loader", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.Tester.encode_and_decode", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.test.Tester.omit_consecutive_repetition"], ["", "def", "main", "(", "\n", "self", ",", "\n", "dataset", ",", "\n", "save_dir", ",", "\n", "synthesis_speaker_col", "=", "'synthesis_speaker'", ",", "\n", "batch_size", "=", "1", ",", "\n", "num_workers", "=", "1", ",", "\n", "omit_repetition", "=", "False", "\n", ")", ":", "\n", "\t\t", "feature_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'as_features/'", ")", "\n", "prob_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'as_probs/'", ")", "\n", "onehot_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'as_one-hot/'", ")", "\n", "synthesis_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'synthesis/'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "feature_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "feature_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "prob_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "prob_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "onehot_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "onehot_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "synthesis_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "synthesis_dir", ")", "\n", "", "full_df", "=", "dataset", ".", "df_director", ".", "fillna", "(", "value", "=", "{", "synthesis_speaker_col", ":", "'__NA__'", "}", ")", "\n", "for", "synthesis_speaker", ",", "sub_df", "in", "full_df", ".", "groupby", "(", "synthesis_speaker_col", ")", ":", "\n", "\t\t\t", "dataset", ".", "reset_director", "(", "sub_df", ")", "\n", "if", "synthesis_speaker", "==", "'__NA__'", ":", "\n", "\t\t\t\t", "synthesis_speaker", "=", "None", "\n", "", "else", ":", "\n", "\t\t\t\t", "synthesis_speaker_name", "=", "synthesis_speaker", "\n", "synthesis_speaker", "=", "torch", ".", "tensor", "(", "dataset", ".", "speaker2ix", "[", "synthesis_speaker", "]", ")", "\n", "", "dataloader", "=", "data_utils", ".", "get_data_loader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "num_workers", ")", "\n", "for", "input_frames", ",", "target_wav", ",", "speaker", ",", "data_ixs", "in", "dataloader", ":", "\n", "\n", "\t\t\t\t", "one_hot_padded", ",", "probs_padded", ",", "features_padded", ",", "code_lengths", ",", "wav_padded", ",", "out_lengths", "=", "self", ".", "encode_and_decode", "(", "input_frames", ",", "target_wav", ",", "synthesis_speaker", ",", "is_packed", "=", "True", ",", "to_numpy", "=", "True", ")", "\n", "\n", "data_paths", "=", "dataset", ".", "df_director", ".", "loc", "[", "data_ixs", ",", "dataset", ".", "path_col", "]", "\n", "for", "ix_in_batch", ",", "p", "in", "enumerate", "(", "data_paths", ")", ":", "\n", "\t\t\t\t\t", "filename_wo_ext", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "p", ")", ")", "[", "0", "]", "\n", "\n", "code_l", "=", "code_lengths", "[", "ix_in_batch", "]", "\n", "one_hot", "=", "one_hot_padded", "[", "ix_in_batch", ",", ":", "code_l", ",", ":", "]", "\n", "features", "=", "features_padded", "[", "ix_in_batch", ",", ":", "code_l", ",", ":", "]", "\n", "probs", "=", "probs_padded", "[", "ix_in_batch", ",", ":", "code_l", ",", ":", "]", "\n", "if", "omit_repetition", ":", "\n", "\t\t\t\t\t\t", "one_hot", ",", "features", ",", "probs", "=", "self", ".", "omit_consecutive_repetition", "(", "one_hot", ",", "features", ",", "probs", ")", "\n", "\n", "", "df_category", "=", "pd", ".", "DataFrame", "(", "one_hot", ")", "\n", "df_category", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "onehot_dir", ",", "filename_wo_ext", ")", "+", "'.txt'", ",", "index", "=", "False", ",", "header", "=", "None", ",", "sep", "=", "' '", ")", "\n", "df_feat", "=", "pd", ".", "DataFrame", "(", "features", ")", "\n", "df_feat", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "feature_dir", ",", "filename_wo_ext", ")", "+", "'.txt'", ",", "index", "=", "False", ",", "header", "=", "None", ",", "sep", "=", "' '", ")", "\n", "df_prob", "=", "pd", ".", "DataFrame", "(", "probs", ")", "\n", "df_prob", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "prob_dir", ",", "filename_wo_ext", ")", "+", "'.txt'", ",", "index", "=", "False", ",", "header", "=", "None", ",", "sep", "=", "' '", ")", "\n", "if", "not", "synthesis_speaker", "is", "None", ":", "\n", "\t\t\t\t\t\t", "out_l", "=", "out_lengths", "[", "ix_in_batch", "]", "\n", "wav", "=", "wav_padded", "[", "ix_in_batch", ",", ":", "out_l", "]", "\n", "filename_wo_ext", "=", "'_'", ".", "join", "(", "[", "synthesis_speaker_name", "]", "+", "filename_wo_ext", ".", "split", "(", "'_'", ")", "[", "1", ":", "]", ")", "\n", "basename", "=", "os", ".", "path", ".", "join", "(", "synthesis_dir", ",", "filename_wo_ext", ")", "\n", "spw", ".", "write", "(", "basename", "+", "'.wav'", ",", "dataset", ".", "fs", ",", "wav", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.test.Tester.omit_consecutive_repetition": [[122, 134], ["out.append"], "methods", ["None"], ["", "", "", "", "", "def", "omit_consecutive_repetition", "(", "self", ",", "vecs", ",", "*", "other_vecs", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tOmit consecutive repetitions in vecs.\n\t\tvecs: ndarray[time,dim]\n\t\t\"\"\"", "\n", "changes", "=", "[", "True", "]", "+", "(", "vecs", "[", ":", "-", "1", "]", "!=", "vecs", "[", "1", ":", "]", ")", ".", "any", "(", "axis", "=", "-", "1", ")", ".", "tolist", "(", ")", "\n", "out", "=", "vecs", "[", "changes", ",", "...", "]", "\n", "if", "other_vecs", ":", "\n", "\t\t\t", "out", "=", "[", "out", "]", "\n", "for", "v", "in", "other_vecs", ":", "\n", "\t\t\t\t", "out", ".", "append", "(", "v", "[", "changes", ",", "...", "]", ")", "\n", "", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.test.get_args": [[136, 159], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "", "def", "get_args", "(", ")", ":", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'model_path'", ",", "type", "=", "str", ",", "help", "=", "'Path to the model checkpoint.'", ")", "\n", "parser", ".", "add_argument", "(", "'input_root'", ",", "type", "=", "str", ",", "help", "=", "'Path to the root directory under which inputs are located.'", ")", "\n", "parser", ".", "add_argument", "(", "'director_file'", ",", "type", "=", "str", ",", "help", "=", "'Path to the csv file containing relative paths to the wav files and speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--path_col'", ",", "type", "=", "str", ",", "default", "=", "'filename'", ",", "help", "=", "'Name of the column containing relative paths to the wav files.'", ")", "\n", "parser", ".", "add_argument", "(", "'--speaker_col'", ",", "type", "=", "str", ",", "default", "=", "'speaker'", ",", "help", "=", "'Name of the column containing speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--duration_col'", ",", "type", "=", "str", ",", "default", "=", "'duration'", ",", "help", "=", "'Name of the column containing the file duration (in sec).'", ")", "\n", "parser", ".", "add_argument", "(", "'--synthesis_speaker_col'", ",", "type", "=", "str", ",", "default", "=", "'synthesis_speaker'", ",", "help", "=", "'Name of the column containing the synthesis speaker.'", ")", "\n", "parser", ".", "add_argument", "(", "'-S'", ",", "'--save_dir'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'Path to the directory where results are saved.'", ")", "\n", "parser", ".", "add_argument", "(", "'-s'", ",", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1111", ",", "help", "=", "'random seed (used in the wave production).'", ")", "\n", "parser", ".", "add_argument", "(", "'-d'", ",", "'--device'", ",", "type", "=", "str", ",", "default", "=", "'cpu'", ",", "help", "=", "'Computing device.'", ")", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'Batch size for training.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_frame_length'", ",", "type", "=", "float", ",", "default", "=", "0.025", ",", "help", "=", "'FFT frame length in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_step_size'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'FFT step size in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_mfcc'", ",", "type", "=", "int", ",", "default", "=", "13", ",", "help", "=", "'# of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--mfcc_max_delta'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'Max order of derivatives of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--channel'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'Channel ID # (starting from 0) of multichannel recordings to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'# of workers for dataloading (>=1).'", ")", "\n", "parser", ".", "add_argument", "(", "'--omit_repetition'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Omit consecutive repetition in latent representation sequences.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.learning.Learner.__init__": [[38, 119], ["learning.update_log_handler", "torch.cuda.is_available", "torch.device", "logger.info", "device.startswith", "learning.Learner.retrieve_model", "logger.info", "torch.manual_seed", "torch.cuda.manual_seed_all", "modules.audition.Audition", "modules.cognition.Cognition", "modules.articulation.Articulation", "modules.loss.SpectralLoss", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "learning.Learner.audition.to", "learning.Learner.cognition.to", "learning.Learner.articulation.to", "logger.info", "print", "itertools.chain", "logger.info", "learning.Learner.audition.parameters", "learning.Learner.cognition.parameters", "learning.Learner.articulation.parameters", "torch.backends.cudnn.version"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.update_log_handler", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.retrieve_model"], ["\t", "def", "__init__", "(", "self", ",", "\n", "save_dir", ",", "\n", "input_size", ",", "\n", "num_latent_categories", ",", "\n", "feature_dim", ",", "\n", "articulatory_channels", ",", "\n", "other_hidden_size", ",", "\n", "num_speakers", ",", "\n", "total_input_frames", ",", "\n", "out_freq", "=", "16000", ",", "\n", "encoder_layers", "=", "3", ",", "\n", "jitter_prob", "=", "0.12", ",", "\n", "prior_concentration", "=", "1.0", ",", "\n", "min_temperature", "=", "0.5", ",", "\n", "temperature_update_freq", "=", "1000", ",", "\n", "temperature_anneal_rate", "=", "1e-5", ",", "\n", "loss_n_ffts", "=", "[", "128", ",", "512", ",", "2048", "]", ",", "\n", "loss_frame_lengths", "=", "[", "80", ",", "400", ",", "1920", "]", ",", "\n", "loss_step_sizes", "=", "[", "40", ",", "100", ",", "640", "]", ",", "\n", "device", "=", "'cpu'", ",", "\n", "seed", "=", "1111", ",", "\n", ")", ":", "\n", "\t\t", "self", ".", "retrieval", ",", "self", ".", "log_file_path", "=", "update_log_handler", "(", "save_dir", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "\t\t\t", "if", "device", ".", "startswith", "(", "'cuda'", ")", ":", "\n", "\t\t\t\t", "logger", ".", "info", "(", "'CUDA Version: {version}'", ".", "format", "(", "version", "=", "torch", ".", "version", ".", "cuda", ")", ")", "\n", "if", "torch", ".", "backends", ".", "cudnn", ".", "enabled", ":", "\n", "\t\t\t\t\t", "logger", ".", "info", "(", "'cuDNN Version: {version}'", ".", "format", "(", "version", "=", "torch", ".", "backends", ".", "cudnn", ".", "version", "(", ")", ")", ")", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "print", "(", "'CUDA is available. Restart with option -C or --cuda to activate it.'", ")", "\n", "\n", "\n", "", "", "self", ".", "save_dir", "=", "save_dir", "\n", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "\n", "logger", ".", "info", "(", "'Device: {device}'", ".", "format", "(", "device", "=", "device", ")", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "self", ".", "seed", "=", "seed", "\n", "\n", "if", "self", ".", "retrieval", ":", "\n", "\t\t\t", "self", ".", "last_iter", "=", "self", ".", "retrieve_model", "(", "device", "=", "device", ")", "\n", "logger", ".", "info", "(", "'Model retrieved.'", ")", "\n", "", "else", ":", "\n", "\t\t\t", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "# According to the docs, \"It\u2019s safe to call this function if CUDA is not available; in that case, it is silently ignored.\"", "\n", "self", ".", "audition", "=", "audition", ".", "Audition", "(", "input_size", ",", "other_hidden_size", ")", "\n", "self", ".", "cognition", "=", "cognition", ".", "Cognition", "(", "\n", "other_hidden_size", ",", "\n", "other_hidden_size", ",", "\n", "articulatory_channels", ",", "\n", "num_latent_categories", ",", "\n", "feature_dim", ",", "\n", "num_speakers", ",", "\n", "total_input_frames", "=", "total_input_frames", ",", "\n", "prior_concentration", "=", "prior_concentration", ",", "\n", "min_temperature", "=", "min_temperature", ",", "\n", "temperature_update_freq", "=", "temperature_update_freq", ",", "\n", "temperature_anneal_rate", "=", "temperature_anneal_rate", ",", "\n", "jitter_prob", "=", "jitter_prob", ",", "\n", ")", "\n", "self", ".", "articulation", "=", "articulation", ".", "Articulation", "(", "articulatory_channels", ")", "\n", "self", ".", "spectral_loss", "=", "loss", ".", "SpectralLoss", "(", "\n", "n_ffts", "=", "loss_n_ffts", ",", "\n", "frame_lengths", "=", "loss_frame_lengths", ",", "\n", "step_sizes", "=", "loss_step_sizes", ",", "\n", ")", "\n", "logger", ".", "info", "(", "\"Data are coded by {num_latent_categories} feature vectors of {feature_dim} dimensions.\"", ".", "format", "(", "num_latent_categories", "=", "num_latent_categories", ",", "feature_dim", "=", "feature_dim", ")", ")", "\n", "logger", ".", "info", "(", "\"The dimensionality of articulatory convolution channel: {}\"", ".", "format", "(", "articulatory_channels", ")", ")", "\n", "logger", ".", "info", "(", "'The dimensionality of other hidden states: {}'", ".", "format", "(", "other_hidden_size", ")", ")", "\n", "logger", ".", "info", "(", "'Prior concentration of Dirichlet: {}'", ".", "format", "(", "prior_concentration", ")", ")", "\n", "logger", ".", "info", "(", "'The temperature of Gumbel-Softmax is at least {min_temperature}, and multiplied by {temperature_anneal_rate} for every {temperature_update_freq} iterations.'", ".", "format", "(", "min_temperature", "=", "min_temperature", ",", "temperature_anneal_rate", "=", "temperature_anneal_rate", ",", "temperature_update_freq", "=", "temperature_update_freq", ")", ")", "\n", "logger", ".", "info", "(", "'# of speakers: {}'", ".", "format", "(", "num_speakers", ")", ")", "\n", "logger", ".", "info", "(", "'Trained with the specral loss with n_ffts={n_ffts}, frame_lengths={frame_lengths}, step_sizes={step_sizes}'", ".", "format", "(", "n_ffts", "=", "loss_n_ffts", ",", "frame_lengths", "=", "loss_frame_lengths", ",", "step_sizes", "=", "loss_step_sizes", ")", ")", "\n", "self", ".", "parameters", "=", "lambda", ":", "itertools", ".", "chain", "(", "self", ".", "audition", ".", "parameters", "(", ")", ",", "self", ".", "cognition", ".", "parameters", "(", ")", ",", "self", ".", "articulation", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "audition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "cognition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "articulation", ".", "to", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.learning.Learner.train": [[123, 213], ["learning.Learner.audition.train", "learning.Learner.cognition.train", "learning.Learner.articulation.train", "len", "enumerate", "learning.Learner.save_model", "logger.info", "input_.to.to.to", "target.to.to.to", "speaker.to.to.to", "learning.Learner.optimizer.zero_grad", "torch.manual_seed", "torch.cuda.manual_seed_all", "learning.Learner.audition", "torch.nn.utils.rnn.pad_packed_sequence", "learning.Learner.cognition", "learning.Learner.articulation", "learning.Learner.spectral_loss", "out_lengths.sum", "modules.loss.backward", "torch.nn.utils.clip_grad_norm_", "learning.Learner.optimizer.step", "learning.Learner.lr_scheduler.step", "learning.Learner.cognition.vae.increment_iter_counts", "learning.Learner.item", "kl_loss_per_sample.item", "category_logits.size", "modules.loss.item", "learning.Learner.parameters", "torch.no_grad", "torch.nn.functional.softmax", "torch.nn.functional.log_softmax", "torch.nn.functional.softmax.sum", "logger.info", "category_proportion.where", "torch.nn.functional.softmax", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "learning.Learner.save_model", "clustering_counts.sum", "category_proportion.log", "torch.nn.functional.softmax.log"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.save_model", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.increment_iter_counts", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.save_model"], ["", "", "def", "train", "(", "self", ",", "dataloader", ",", "saving_interval", ",", "start_iter", "=", "0", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tTraining phase. Updates weights.\n\t\t\"\"\"", "\n", "self", ".", "audition", ".", "train", "(", ")", "# Turn on training mode which enables dropout.", "\n", "self", ".", "cognition", ".", "train", "(", ")", "\n", "self", ".", "articulation", ".", "train", "(", ")", "\n", "\n", "emission_loss", "=", "0", "\n", "kl_loss", "=", "0", "\n", "elbo", "=", "0", "\n", "clustering_entropy", "=", "0", "\n", "clustering_counts", "=", "0", "\n", "num_frames", "=", "0", "\n", "\n", "num_iterations", "=", "len", "(", "dataloader", ")", "\n", "\n", "for", "iteration", ",", "(", "input_", ",", "target", ",", "speaker", ",", "_", ")", "in", "enumerate", "(", "dataloader", ",", "start_iter", ")", ":", "\n", "\t\t\t", "iteration", "+=", "1", "# make indexation start with 1.", "\n", "input_", "=", "input_", ".", "to", "(", "self", ".", "device", ")", "\n", "target", "=", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "speaker", "=", "speaker", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "torch", ".", "manual_seed", "(", "iteration", "+", "self", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "iteration", "+", "self", ".", "seed", ")", "\n", "\n", "audio_processed", "=", "self", ".", "audition", "(", "input_", ")", "\n", "\n", "target_padded", ",", "out_lengths", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pad_packed_sequence", "(", "target", ",", "batch_first", "=", "True", ")", "\n", "code", ",", "category_logits", ",", "kl_loss_total", "=", "self", ".", "cognition", "(", "audio_processed", ",", "speaker", ",", "out_lengths", ")", "\n", "\n", "output_padded", "=", "self", ".", "articulation", "(", "code", ",", "out_lengths", ")", "\n", "\n", "emission_loss_per_sample", "=", "self", ".", "spectral_loss", "(", "output_padded", ",", "target_padded", ",", "out_lengths", ")", "\n", "\n", "sample_size", "=", "out_lengths", ".", "sum", "(", ")", "\n", "kl_loss_per_sample", "=", "kl_loss_total", "/", "sample_size", "\n", "loss", "=", "emission_loss_per_sample", "+", "kl_loss_per_sample", "\n", "elbo", "+=", "-", "loss", ".", "item", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "# `clip_grad_norm` helps prevent the exploding gradient problem in RNNs.", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "parameters", "(", ")", ",", "1.0", ")", "\n", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "self", ".", "cognition", ".", "vae", ".", "increment_iter_counts", "(", ")", "\n", "\n", "emission_loss", "+=", "emission_loss_per_sample", ".", "item", "(", ")", "\n", "kl_loss", "+=", "kl_loss_per_sample", ".", "item", "(", ")", "\n", "# num_samples += sample_size", "\n", "num_frames", "+=", "category_logits", ".", "size", "(", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t\t", "clustering_probs", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "category_logits", ",", "-", "1", ")", "\n", "log_clustering_probs", "=", "torch", ".", "nn", ".", "functional", ".", "log_softmax", "(", "category_logits", ",", "-", "1", ")", "\n", "clustering_entropy", "+=", "(", "-", "clustering_probs", "*", "log_clustering_probs", ")", ".", "sum", "(", ")", "\n", "clustering_counts", "+=", "clustering_probs", ".", "sum", "(", "0", ")", "\n", "\n", "", "if", "iteration", "%", "saving_interval", "==", "0", ":", "\n", "\t\t\t\t", "logger", ".", "info", "(", "'{iteration}/{num_iterations} iterations complete.'", ".", "format", "(", "\n", "iteration", "=", "iteration", ",", "\n", "num_iterations", "=", "num_iterations", ",", "\n", ")", ")", "\n", "emission_loss", "/=", "saving_interval", "\n", "kl_loss", "/=", "saving_interval", "\n", "elbo", "/=", "saving_interval", "\n", "clustering_perplex", "=", "(", "clustering_entropy", "/", "num_frames", ")", ".", "exp", "(", ")", ".", "item", "(", ")", "\n", "category_proportion", "=", "clustering_counts", "/", "clustering_counts", ".", "sum", "(", ")", "\n", "log_category_proportion", "=", "category_proportion", ".", "where", "(", "category_proportion", "==", "0.0", ",", "category_proportion", ".", "log", "(", ")", ")", "\n", "proportion_perplex", "=", "(", "-", "category_proportion", "*", "log_category_proportion", ")", ".", "sum", "(", ")", ".", "exp", "(", ")", ".", "item", "(", ")", "\n", "pi_shape", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "self", ".", "cognition", ".", "vae", ".", "posterior_shape_logits", ",", "-", "1", ")", "\n", "pi_shape_perplex", "=", "(", "-", "pi_shape", "*", "pi_shape", ".", "log", "(", ")", ")", ".", "sum", "(", ")", ".", "exp", "(", ")", ".", "item", "(", ")", "\n", "logger", ".", "info", "(", "'mean emission loss (per sound sample): {:5.4f}'", ".", "format", "(", "emission_loss", ")", ")", "\n", "logger", ".", "info", "(", "'mean KL (per sound sample): {:5.4f}'", ".", "format", "(", "kl_loss", ")", ")", "\n", "logger", ".", "info", "(", "'mean ELBO (per sound sample): {:5.4f}'", ".", "format", "(", "elbo", ")", ")", "\n", "logger", ".", "info", "(", "'perplexity of q(z | x): {:5.4f}'", ".", "format", "(", "clustering_perplex", ")", ")", "\n", "logger", ".", "info", "(", "'perplexity of sum(q(z | x)): {:5.4f}'", ".", "format", "(", "proportion_perplex", ")", ")", "\n", "logger", ".", "info", "(", "'perplexity of q(pi): {:5.4f}'", ".", "format", "(", "pi_shape_perplex", ")", ")", "\n", "emission_loss", "=", "0", "\n", "kl_loss", "=", "0", "\n", "elbo", "=", "0", "\n", "clustering_entropy", "=", "0", "\n", "clustering_counts", "=", "0", "\n", "num_frames", "=", "0", "\n", "# num_samples = 0", "\n", "self", ".", "save_model", "(", "iteration", "-", "1", ")", "\n", "", "", "self", ".", "save_model", "(", "iteration", "-", "1", ")", "\n", "logger", ".", "info", "(", "'END OF TRAINING'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.learning.Learner.learn": [[216, 238], ["list", "modules.data_utils.get_data_loader", "learning.Learner.train", "logger.info", "torch.optim.Adam", "learning.Learner.optimizer.load_state_dict", "torch.optim.lr_scheduler.MultiStepLR", "learning.Learner.lr_scheduler.load_state_dict", "learning.Learner.cognition.vae.set_pretrain_iters", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "learning.Learner.parameters", "learning.Learner.parameters"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.get_data_loader", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.set_pretrain_iters"], ["", "def", "learn", "(", "self", ",", "dataset", ",", "num_iters", ",", "batch_size", ",", "milestones", "=", "list", "(", ")", ",", "pretrain_iters", "=", "0", ",", "learning_rate", "=", "4", "*", "(", "10", "**", "-", "4", ")", ",", "gamma", "=", "0.5", ",", "num_workers", "=", "1", ",", "saving_interval", "=", "1", ")", ":", "\n", "\t\t", "if", "self", ".", "retrieval", ":", "\n", "\t\t\t", "start_iter", "=", "self", ".", "last_iter", "+", "1", "\n", "logger", ".", "info", "(", "'To be restarted from the beginning of iter #: {iter}'", ".", "format", "(", "iter", "=", "start_iter", ")", ")", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "learning_rate", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "\n", "self", ".", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "self", ".", "optimizer", ",", "milestones", ",", "gamma", "=", "gamma", ")", "\n", "self", ".", "lr_scheduler", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'lr_scheduler'", "]", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "cognition", ".", "vae", ".", "set_pretrain_iters", "(", "pretrain_iters", ")", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "learning_rate", ")", "\n", "self", ".", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "self", ".", "optimizer", ",", "milestones", ",", "gamma", "=", "gamma", ")", "\n", "logger", ".", "info", "(", "\"START LEARNING.\"", ")", "\n", "logger", ".", "info", "(", "\"# of iters: {ep}\"", ".", "format", "(", "ep", "=", "num_iters", ")", ")", "\n", "logger", ".", "info", "(", "\"first {} iters are for pretraining w/o gumbel-softmax sampling.\"", ".", "format", "(", "pretrain_iters", ")", ")", "\n", "logger", ".", "info", "(", "\"batch size for training data: {size}\"", ".", "format", "(", "size", "=", "batch_size", ")", ")", "\n", "logger", ".", "info", "(", "\"initial learning rate: {lr}\"", ".", "format", "(", "lr", "=", "learning_rate", ")", ")", "\n", "logger", ".", "info", "(", "\"Learning rate is multiplied by {gamma} at {milestones} iterations.\"", ".", "format", "(", "gamma", "=", "gamma", ",", "milestones", "=", "milestones", ")", ")", "\n", "start_iter", "=", "0", "\n", "", "dataloader", "=", "data_utils", ".", "get_data_loader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "num_iterations", "=", "num_iters", ",", "start_iter", "=", "start_iter", ",", "num_workers", "=", "num_workers", ",", "random_seed", "=", "self", ".", "seed", ")", "\n", "self", ".", "train", "(", "dataloader", ",", "saving_interval", ",", "start_iter", "=", "start_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.learning.Learner.save_model": [[240, 263], ["torch.cuda.is_available", "torch.save", "torch.save", "logger.info", "learning.Learner.audition.state_dict", "learning.Learner.audition.pack_init_args", "learning.Learner.cognition.state_dict", "learning.Learner.cognition.pack_init_args", "learning.Learner.articulation.state_dict", "learning.Learner.articulation.pack_init_args", "learning.Learner.spectral_loss.pack_init_args", "learning.Learner.optimizer.state_dict", "learning.Learner.lr_scheduler.state_dict", "torch.get_rng_state", "torch.cuda.get_rng_state_all", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args"], ["", "def", "save_model", "(", "self", ",", "iteration", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tSave model config.\n\t\tAllow multiple tries to prevent immediate I/O errors.\n\t\t\"\"\"", "\n", "checkpoint", "=", "{", "\n", "'iteration'", ":", "iteration", ",", "\n", "'audition'", ":", "self", ".", "audition", ".", "state_dict", "(", ")", ",", "\n", "'audition_init_args'", ":", "self", ".", "audition", ".", "pack_init_args", "(", ")", ",", "\n", "'cognition'", ":", "self", ".", "cognition", ".", "state_dict", "(", ")", ",", "\n", "'cognition_init_args'", ":", "self", ".", "cognition", ".", "pack_init_args", "(", ")", ",", "\n", "'articulation'", ":", "self", ".", "articulation", ".", "state_dict", "(", ")", ",", "\n", "'articulation_init_args'", ":", "self", ".", "articulation", ".", "pack_init_args", "(", ")", ",", "\n", "'spectral_loss_init_args'", ":", "self", ".", "spectral_loss", ".", "pack_init_args", "(", ")", ",", "\n", "'optimizer'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'lr_scheduler'", ":", "self", ".", "lr_scheduler", ".", "state_dict", "(", ")", ",", "\n", "'random_state'", ":", "torch", ".", "get_rng_state", "(", ")", ",", "\n", "}", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "\t\t\t", "checkpoint", "[", "'random_state_cuda'", "]", "=", "torch", ".", "cuda", ".", "get_rng_state_all", "(", ")", "\n", "", "torch", ".", "save", "(", "checkpoint", ",", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'checkpoint_after-{iteration}-iters.pt'", ".", "format", "(", "iteration", "=", "iteration", "+", "1", ")", ")", ")", "\n", "torch", ".", "save", "(", "checkpoint", ",", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'checkpoint.pt'", ")", ")", "\n", "logger", ".", "info", "(", "'Config successfully saved.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.learning.Learner.retrieve_model": [[265, 296], ["torch.load", "modules.audition.Audition", "modules.cognition.Cognition", "modules.articulation.Articulation", "learning.Learner.audition.load_state_dict", "learning.Learner.cognition.load_state_dict", "learning.Learner.articulation.load_state_dict", "learning.Learner.audition.to", "learning.Learner.cognition.to", "learning.Learner.articulation.to", "modules.loss.SpectralLoss", "os.path.join", "itertools.chain", "torch.set_rng_state", "torch.cuda.set_rng_state_all", "learning.Learner.audition.parameters", "learning.Learner.cognition.parameters", "learning.Learner.articulation.parameters", "logger.warning", "print"], "methods", ["None"], ["", "def", "retrieve_model", "(", "self", ",", "checkpoint_path", "=", "None", ",", "device", "=", "'cpu'", ")", ":", "\n", "\t\t", "if", "checkpoint_path", "is", "None", ":", "\n", "\t\t\t", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'checkpoint.pt'", ")", "\n", "", "self", ".", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "map_location", "=", "'cpu'", ")", "# Random state needs to be loaded to CPU first even when cuda is available.", "\n", "\n", "self", ".", "audition", "=", "audition", ".", "Audition", "(", "**", "self", ".", "checkpoint", "[", "'audition_init_args'", "]", ")", "\n", "self", ".", "cognition", "=", "cognition", ".", "Cognition", "(", "**", "self", ".", "checkpoint", "[", "'cognition_init_args'", "]", ")", "\n", "self", ".", "articulation", "=", "articulation", ".", "Articulation", "(", "**", "self", ".", "checkpoint", "[", "'articulation_init_args'", "]", ")", "\n", "self", ".", "audition", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'audition'", "]", ",", "strict", "=", "False", ")", "\n", "self", ".", "cognition", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'cognition'", "]", ")", "\n", "self", ".", "articulation", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'articulation'", "]", ")", "\n", "self", ".", "audition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "cognition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "articulation", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "\n", "self", ".", "parameters", "=", "lambda", ":", "itertools", ".", "chain", "(", "self", ".", "audition", ".", "parameters", "(", ")", ",", "self", ".", "cognition", ".", "parameters", "(", ")", ",", "self", ".", "articulation", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "spectral_loss", "=", "loss", ".", "SpectralLoss", "(", "**", "self", ".", "checkpoint", "[", "'spectral_loss_init_args'", "]", ")", "\n", "\n", "try", ":", "\n", "\t\t\t", "torch", ".", "set_rng_state", "(", "self", ".", "checkpoint", "[", "'random_state'", "]", ")", "\n", "", "except", "RuntimeError", ":", "\n", "\t\t\t", "msg", "=", "'Failed to retrieve random_state.'", "\n", "try", ":", "\n", "\t\t\t\t", "logger", ".", "warning", "(", "msg", ")", "\n", "", "except", "NameError", ":", "\n", "\t\t\t\t", "print", "(", "msg", ")", "\n", "", "", "if", "device", "==", "'cuda'", ":", "\n", "\t\t\t", "torch", ".", "cuda", ".", "set_rng_state_all", "(", "self", ".", "checkpoint", "[", "'random_state_cuda'", "]", ")", "\n", "", "return", "self", ".", "checkpoint", "[", "'iteration'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.learning.update_log_handler": [[13, 34], ["os.path.join", "os.path.isfile", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logger.setLevel", "logger.addHandler", "logger.removeHandler", "logger.info", "logger.info", "logger.info"], "function", ["None"], ["def", "update_log_handler", "(", "file_dir", ")", ":", "\n", "\t", "current_handlers", "=", "logger", ".", "handlers", "[", ":", "]", "\n", "for", "h", "in", "current_handlers", ":", "\n", "\t\t", "logger", ".", "removeHandler", "(", "h", ")", "\n", "", "log_file_path", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "'history.log'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "log_file_path", ")", ":", "\n", "\t\t", "retrieval", "=", "True", "\n", "", "else", ":", "\n", "\t\t", "retrieval", "=", "False", "\n", "", "handler", "=", "FileHandler", "(", "filename", "=", "log_file_path", ")", "#Define the handler.", "\n", "handler", ".", "setLevel", "(", "DEBUG", ")", "\n", "formatter", "=", "Formatter", "(", "'{asctime} - {levelname} - {message}'", ",", "style", "=", "'{'", ")", "#Define the log format.", "\n", "handler", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "setLevel", "(", "DEBUG", ")", "\n", "logger", ".", "addHandler", "(", "handler", ")", "#Register the handler for the logger.", "\n", "if", "retrieval", ":", "\n", "\t\t", "logger", ".", "info", "(", "\"LEARNING RETRIEVED.\"", ")", "\n", "", "else", ":", "\n", "\t\t", "logger", ".", "info", "(", "\"Logger set up.\"", ")", "\n", "logger", ".", "info", "(", "\"PyTorch ver.: {ver}\"", ".", "format", "(", "ver", "=", "torch", ".", "__version__", ")", ")", "\n", "", "return", "retrieval", ",", "log_file_path", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.learning.get_args": [[299, 337], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "", "def", "get_args", "(", ")", ":", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'input_root'", ",", "type", "=", "str", ",", "help", "=", "'Path to the root directory under which inputs are located.'", ")", "\n", "parser", ".", "add_argument", "(", "'director_file'", ",", "type", "=", "str", ",", "help", "=", "'Path to the csv file containing relative paths to the wav files and speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--path_col'", ",", "type", "=", "str", ",", "default", "=", "'filename'", ",", "help", "=", "'Name of the column containing relative paths to the wav files.'", ")", "\n", "parser", ".", "add_argument", "(", "'--speaker_col'", ",", "type", "=", "str", ",", "default", "=", "'speaker'", ",", "help", "=", "'Name of the column containing speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--duration_col'", ",", "type", "=", "str", ",", "default", "=", "'duration'", ",", "help", "=", "'Name of the column containing the file duration (in sec).'", ")", "\n", "parser", ".", "add_argument", "(", "'-S'", ",", "'--save_root'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'Path to the directory where results are saved.'", ")", "\n", "parser", ".", "add_argument", "(", "'-j'", ",", "'--job_id'", ",", "type", "=", "str", ",", "default", "=", "'NO_JOB_ID'", ",", "help", "=", "'Job ID. For users of computing clusters.'", ")", "\n", "parser", ".", "add_argument", "(", "'-s'", ",", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1111", ",", "help", "=", "'random seed'", ")", "\n", "parser", ".", "add_argument", "(", "'-d'", ",", "'--device'", ",", "type", "=", "str", ",", "default", "=", "'cpu'", ",", "help", "=", "'Computing device.'", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--iterations'", ",", "type", "=", "int", ",", "default", "=", "900000", ",", "help", "=", "'# of iterations to train the model.'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrain_iters'", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "'# of initial iterations to pretrain the model w/o gumbel-softmax sampling.'", ")", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'Batch size for training.'", ")", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--learning_rate'", ",", "type", "=", "float", ",", "default", "=", "4", "*", "(", "10", "**", "-", "4", ")", ",", "help", "=", "'Initial learning rate.'", ")", "\n", "parser", ".", "add_argument", "(", "'--milestones'", ",", "type", "=", "int", ",", "nargs", "=", "'*'", ",", "default", "=", "[", "]", ",", "help", "=", "'Iterations at which the learning rate is reduced.'", ")", "\n", "parser", ".", "add_argument", "(", "'--gamma'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'Multiplier to the learning rate.'", ")", "\n", "parser", ".", "add_argument", "(", "'-K'", ",", "'--num_feature_categories'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'# of possible discrete values token on by latent features into which data are encoded.'", ")", "\n", "parser", ".", "add_argument", "(", "'-f'", ",", "'--feature_dim'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'# of dimensions of features into which the discrete feature are linear-transformed.'", ")", "\n", "parser", ".", "add_argument", "(", "'--encoder_layers'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of layers of encoder LSTM.'", ")", "\n", "parser", ".", "add_argument", "(", "'--articulatory_channels'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'Dimensionality of the convolutional layers.'", ")", "\n", "parser", ".", "add_argument", "(", "'--other_hidden_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'Dimensionality of the other hidden states (e.g. MLP).'", ")", "\n", "parser", ".", "add_argument", "(", "'--jitter_prob'", ",", "type", "=", "float", ",", "default", "=", ".12", ",", "help", "=", "'Probability of jitter in the decoder.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_frame_length'", ",", "type", "=", "float", ",", "default", "=", "0.025", ",", "help", "=", "'FFT frame length in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_step_size'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'FFT step size in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_mfcc'", ",", "type", "=", "int", ",", "default", "=", "13", ",", "help", "=", "'# of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--mfcc_max_delta'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'Max order of derivatives of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--channel'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'Channel ID # (starting from 0) of multichannel recordings to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_duration'", ",", "type", "=", "float", ",", "default", "=", "3.0", ",", "help", "=", "'Max duration of input wave (in sec).'", ")", "\n", "parser", ".", "add_argument", "(", "'--prior_concentration'", ",", "type", "=", "float", ",", "default", "=", "1.0", ",", "help", "=", "'Concentration of the Dirichlet prior on the probability of the discrete feature.'", ")", "\n", "parser", ".", "add_argument", "(", "'--min_temperature'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'Minimum temperature of gumbel-softmax sampling.'", ")", "\n", "parser", ".", "add_argument", "(", "'--temperature_update_freq'", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "'Frequency of temperature annealing.'", ")", "\n", "parser", ".", "add_argument", "(", "'--temperature_anneal_rate'", ",", "type", "=", "float", ",", "default", "=", "1e-5", ",", "help", "=", "'Rate of temperature annealing.'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'# of workers for dataloading (>=1).'", ")", "\n", "parser", ".", "add_argument", "(", "'--saving_interval'", ",", "type", "=", "int", ",", "default", "=", "200", ",", "help", "=", "'# of iterations in which model parameters are saved once.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.conv_encoder.learning.get_save_dir": [[339, 347], ["os.path.join", "os.path.isdir", "os.makedirs"], "function", ["None"], ["", "def", "get_save_dir", "(", "save_root", ",", "job_id_str", ")", ":", "\n", "\t", "save_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "save_root", ",", "\n", "job_id_str", "# + '_START-AT-' + datetime.datetime.now().strftime('%y-%m-%d-%H-%M-%S-%f')", "\n", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "save_dir", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "return", "save_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.Audition.__init__": [[10, 13], ["super().__init__", "audition.ESN"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\n", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ")", ":", "\n", "\t\t", "super", "(", "Audition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channel", "=", "in_channel", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.Audition.forward": [[14, 17], ["audition.Audition.rnn"], "methods", ["None"], ["self", ".", "out_channel", "=", "out_channel", "\n", "self", ".", "network", "=", "torch", ".", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv1'", ",", "ConvSubLayer", "(", "in_channel", ",", "out_channel", ")", ")", ",", "\n", "(", "'conv2'", ",", "ConvSubLayer", "(", "out_channel", ",", "out_channel", ")", ")", ",", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.Audition.pack_init_args": [[18, 25], ["None"], "methods", ["None"], ["(", "'strided_conv'", ",", "ConvSubLayer", "(", "out_channel", ",", "out_channel", ",", "filter_length", "=", "4", ",", "stride", "=", "2", ")", ")", ",", "\n", "(", "'conv3'", ",", "ConvSubLayer", "(", "out_channel", ",", "out_channel", ")", ")", ",", "\n", "(", "'conv4'", ",", "ConvSubLayer", "(", "out_channel", ",", "out_channel", ")", ")", ",", "\n", "(", "'ff1'", ",", "ConvSubLayer", "(", "out_channel", ",", "out_channel", ",", "filter_length", "=", "1", ")", ")", ",", "\n", "(", "'ff2'", ",", "ConvSubLayer", "(", "out_channel", ",", "out_channel", ",", "filter_length", "=", "1", ")", ")", ",", "\n", "(", "'ff3'", ",", "ConvSubLayer", "(", "out_channel", ",", "out_channel", ",", "filter_length", "=", "1", ")", ")", ",", "\n", "(", "'ff4'", ",", "ConvSubLayer", "(", "out_channel", ",", "out_channel", ",", "filter_length", "=", "1", ")", ")", ",", "\n", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ConvSubLayer.__init__": [[45, 50], ["super().__init__", "torch.nn.Conv1d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\t", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ",", "filter_length", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "\t\t", "super", "(", "ConvSubLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv1d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "filter_length", ",", "stride", "=", "stride", ",", "padding", "=", "(", "filter_length", "-", "stride", ")", "//", "2", ",", "padding_mode", "=", "'zeros'", ")", "\n", "self", ".", "relu", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "residual_connection", "=", "(", "in_channel", "==", "out_channel", ")", "and", "(", "stride", "==", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ConvSubLayer.forward": [[51, 58], ["audition.ConvSubLayer.conv", "audition.ConvSubLayer.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_", ")", ":", "\n", "\t\t", "output", "=", "self", ".", "conv", "(", "input_", ")", "\n", "output", "=", "self", ".", "relu", "(", "output", ")", "\n", "# output = torch.nn.functional.pad(output, (self.left_padding, self.right_padding), mode='constant', value=0.0)", "\n", "if", "self", ".", "residual_connection", ":", "\n", "\t\t\t", "output", "=", "output", "+", "input_", "\n", "", "return", "output", "", "", "", ""]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.__init__": [[12, 48], ["float", "pandas.read_csv", "data_utils.Dataset.get_fs", "float", "int", "data_utils.Dataset.speaker2ix.items", "enumerate", "sorted", "data_utils.Dataset.df_director[].unique"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.get_fs"], ["\t", "def", "__init__", "(", "\n", "self", ",", "\n", "data_root", ",", "\n", "director_path", ",", "\n", "path_col", "=", "'path'", ",", "\n", "speaker_col", "=", "'speaker'", ",", "\n", "duration_col", "=", "'duration'", ",", "\n", "max_duration", "=", "float", "(", "'inf'", ")", ",", "\n", "channel", "=", "0", ",", "\n", "common_trans", "=", "None", ",", "\n", "in_trans", "=", "None", ",", "\n", "out_trans", "=", "None", ",", "\n", "speaker2ix", "=", "None", ",", "\n", ")", ":", "\n", "\t\t", "self", ".", "data_root", "=", "data_root", "\n", "self", ".", "df_director", "=", "pd", ".", "read_csv", "(", "director_path", ")", "\n", "self", ".", "path_col", "=", "path_col", "\n", "self", ".", "speaker_col", "=", "speaker_col", "\n", "self", ".", "duration_col", "=", "duration_col", "\n", "self", ".", "channel", "=", "channel", "\n", "self", ".", "common_trans", "=", "common_trans", "\n", "self", ".", "in_trans", "=", "in_trans", "\n", "self", ".", "out_trans", "=", "out_trans", "\n", "\n", "self", ".", "fs", "=", "self", ".", "get_fs", "(", ")", "\n", "if", "max_duration", "<", "float", "(", "'inf'", ")", ":", "\n", "\t\t\t", "self", ".", "max_length", "=", "int", "(", "max_duration", "*", "self", ".", "fs", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "max_length", "=", "max_duration", "\n", "\n", "", "self", ".", "speaker2ix", "=", "speaker2ix", "\n", "if", "self", ".", "speaker2ix", "is", "None", ":", "\n", "\t\t\t", "self", ".", "speaker2ix", "=", "{", "speaker", ":", "ix", "for", "ix", ",", "speaker", "in", "enumerate", "(", "sorted", "(", "self", ".", "df_director", "[", "self", ".", "speaker_col", "]", ".", "unique", "(", ")", ")", ")", "}", "\n", "", "self", ".", "ix2speaker", "=", "{", "ix", ":", "speaker", "for", "speaker", ",", "ix", "in", "self", ".", "speaker2ix", ".", "items", "(", ")", "}", "\n", "\n", "", "def", "get_fs", "(", "self", ",", "data_ix", "=", "0", ")", ":", "\n", "\t\t", "fs", ",", "_", "=", "self", ".", "read_wav", "(", "data_ix", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.get_fs": [[49, 52], ["data_utils.Dataset.read_wav"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.read_wav"], ["return", "fs", "\n", "\n", "\n", "", "def", "get_sample_freq", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.get_sample_freq": [[54, 56], ["None"], "methods", ["None"], ["\n", "", "def", "get_num_samples", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "df_director", "[", "self", ".", "duration_col", "]", ".", "values", "*", "self", ".", "fs", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.get_num_samples": [[57, 59], ["None"], "methods", ["None"], ["\n", "", "def", "get_num_speakers", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "speaker2ix", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.get_num_speakers": [[60, 62], ["len"], "methods", ["None"], ["\n", "", "def", "set_transforms", "(", "self", ",", "common_trans", "=", "None", ",", "in_trans", "=", "None", ",", "out_trans", "=", "None", ")", ":", "\n", "\t\t", "if", "not", "common_trans", "is", "None", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.set_transforms": [[63, 72], ["None"], "methods", ["None"], ["\t\t\t", "self", ".", "common_trans", "=", "common_trans", "\n", "", "if", "not", "in_trans", "is", "None", ":", "\n", "\t\t\t", "self", ".", "in_trans", "=", "in_trans", "\n", "", "if", "not", "out_trans", "is", "None", ":", "\n", "\t\t\t", "self", ".", "out_trans", "=", "out_trans", "\n", "\n", "", "", "def", "read_wav", "(", "self", ",", "data_ix", ")", ":", "\n", "\t\t", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_root", ",", "self", ".", "df_director", ".", "loc", "[", "data_ix", ",", "self", ".", "path_col", "]", ")", "\n", "fs", ",", "wav", "=", "spw", ".", "read", "(", "path", ")", "\n", "if", "len", "(", "wav", ".", "shape", ")", ">", "1", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.read_wav": [[73, 79], ["os.path.join", "scipy.read", "len"], "methods", ["None"], ["\t\t\t", "wav", "=", "wav", "[", ":", ",", "self", ".", "channel", "]", "\n", "", "return", "fs", ",", "wav", "\n", "\n", "", "def", "get_speaker", "(", "self", ",", "data_ix", ")", ":", "\n", "\t\t", "speaker", "=", "self", ".", "df_director", ".", "loc", "[", "data_ix", ",", "self", ".", "speaker_col", "]", "\n", "if", "speaker", "in", "self", ".", "speaker2ix", ":", "\n", "\t\t\t", "speaker_ix", "=", "self", ".", "speaker2ix", "[", "speaker", "]", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.get_speaker": [[80, 87], ["float"], "methods", ["None"], ["", "else", ":", "\n", "\t\t\t", "speaker_ix", "=", "float", "(", "'nan'", ")", "\n", "", "return", "speaker", ",", "speaker_ix", "\n", "\n", "", "def", "reset_director", "(", "self", ",", "new_df", ")", ":", "\n", "\t\t", "self", ".", "df_director", "=", "new_df", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.reset_director": [[88, 90], ["new_df.reset_index"], "methods", ["None"], ["\t\t", "\"\"\"Return # of data strings.\"\"\"", "\n", "return", "self", ".", "df_director", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.__len__": [[91, 94], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "data_ix", ")", ":", "\n", "\t\t", "_", ",", "wav", "=", "self", ".", "read_wav", "(", "data_ix", ")", "\n", "_", ",", "speaker_ix", "=", "self", ".", "get_speaker", "(", "data_ix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.__getitem__": [[95, 110], ["data_utils.Dataset.read_wav", "data_utils.Dataset.get_speaker", "torch.randint().item", "torch.randint().item", "torch.randint().item", "torch.randint().item", "data_utils.Dataset.in_trans", "data_utils.Dataset.out_trans", "data_utils.Dataset.f0_trans", "torch.randint", "torch.randint", "torch.randint", "torch.randint"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.read_wav", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.get_speaker"], ["if", "wav", ".", "shape", "[", "0", "]", ">", "self", ".", "max_length", ":", "\n", "\t\t\t", "onset", "=", "torch", ".", "randint", "(", "wav", ".", "shape", "[", "0", "]", "-", "self", ".", "max_length", "+", "1", ",", "(", "1", ",", ")", ")", ".", "item", "(", ")", "\n", "wav", "=", "wav", "[", "onset", ":", "onset", "+", "self", ".", "max_length", "]", "\n", "\n", "", "if", "self", ".", "in_trans", ":", "\n", "\t\t\t", "input_data", "=", "self", ".", "in_trans", "(", "wav", ")", "\n", "", "if", "self", ".", "out_trans", ":", "\n", "\t\t\t", "target_data", "=", "self", ".", "out_trans", "(", "wav", ")", "\n", "", "return", "input_data", ",", "target_data", ",", "speaker_ix", ",", "data_ix", "\n", "\n", "\n", "", "def", "get_wave_stats", "(", "self", ",", "transform", "=", "None", ")", ":", "\n", "\t\t", "if", "transform", "is", "None", ":", "\n", "\t\t\t", "samples", "=", "[", "self", ".", "read_wav", "(", "data_ix", ")", "[", "1", "]", "for", "data_ix", "in", "self", ".", "df_director", ".", "index", ".", "tolist", "(", ")", "]", "\n", "", "else", ":", "\n", "\t\t\t", "samples", "=", "[", "transform", "(", "self", ".", "read_wav", "(", "data_ix", ")", "[", "1", "]", ")", "for", "data_ix", "in", "self", ".", "df_director", ".", "index", ".", "tolist", "(", ")", "]", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.get_wave_stats": [[112, 119], ["numpy.concatenate", "numpy.mean", "numpy.std", "transform", "data_utils.Dataset.read_wav", "data_utils.Dataset.df_director.index.tolist", "data_utils.Dataset.df_director.index.tolist", "data_utils.Dataset.read_wav"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.read_wav", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.read_wav"], ["return", "np", ".", "mean", "(", "samples", ",", "axis", "=", "0", ")", ",", "np", ".", "std", "(", "samples", ",", "axis", "=", "0", ",", "ddof", "=", "1", ")", "\n", "\n", "", "", "class", "Compose", "(", "object", ")", ":", "\n", "\t", "def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "\t\t", "self", ".", "transforms", "=", "transforms", "\n", "\n", "", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "\t\t", "for", "trans", "in", "self", ".", "transforms", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Compose.__init__": [[121, 123], ["None"], "methods", ["None"], ["", "return", "data", "\n", "\n", "", "", "class", "IterationBasedBatchSampler", "(", "torch", ".", "utils", ".", "data", ".", "BatchSampler", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Compose.__call__": [[124, 128], ["trans"], "methods", ["None"], ["\t"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.IterationBasedBatchSampler.__init__": [[137, 144], ["hasattr", "data_utils.IterationBasedBatchSampler.batch_sampler.sampler.set_start_ix", "len"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.RandomSampler.set_start_ix"], ["self", ".", "batch_sampler", ".", "sampler", ".", "set_start_ix", "(", "start_ix", ")", "\n", "\n", "", "", "def", "__iter__", "(", "self", ")", ":", "\n", "\t\t", "iteration", "=", "self", ".", "start_iter", "\n", "epoch", "=", "iteration", "//", "len", "(", "self", ".", "batch_sampler", ")", "\n", "while", "iteration", "<=", "self", ".", "num_iterations", ":", "\n", "\t\t\t", "if", "hasattr", "(", "self", ".", "batch_sampler", ".", "sampler", ",", "'set_epoch'", ")", ":", "\n", "\t\t\t\t", "self", ".", "batch_sampler", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.IterationBasedBatchSampler.__iter__": [[145, 157], ["len", "hasattr", "data_utils.IterationBasedBatchSampler.batch_sampler.sampler.set_epoch"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.RandomSampler.set_epoch"], ["", "for", "batch", "in", "self", ".", "batch_sampler", ":", "\n", "\t\t\t\t", "iteration", "+=", "1", "\n", "if", "iteration", ">", "self", ".", "num_iterations", ":", "\n", "\t\t\t\t\t", "break", "\n", "", "yield", "batch", "\n", "", "epoch", "+=", "1", "\n", "\n", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "num_iterations", "\n", "\n", "", "", "class", "RandomSampler", "(", "torch", ".", "utils", ".", "data", ".", "RandomSampler", ")", ":", "\n", "\t"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.IterationBasedBatchSampler.__len__": [[158, 160], ["None"], "methods", ["None"], ["\n", "def", "__init__", "(", "self", ",", "*", "args", ",", "seed", "=", "111", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", "RandomSampler", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.RandomSampler.__init__": [[165, 170], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["", "def", "set_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "\t\t", "self", ".", "epoch", "=", "epoch", "\n", "\n", "", "def", "set_start_ix", "(", "self", ",", "start_ix", ")", ":", "\n", "\t\t", "self", ".", "start_ix", "=", "start_ix", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.RandomSampler.set_epoch": [[171, 173], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "\t\t", "g", "=", "torch", ".", "Generator", "(", ")", "\n", "g", ".", "manual_seed", "(", "self", ".", "epoch", "+", "self", ".", "seed", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.RandomSampler.set_start_ix": [[174, 176], ["None"], "methods", ["None"], ["start_ix", "=", "self", ".", "start_ix", "\n", "self", ".", "start_ix", "=", "0", "\n", "n", "=", "len", "(", "self", ".", "data_source", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.RandomSampler.__iter__": [[177, 186], ["torch.Generator", "torch.Generator", "torch.Generator", "torch.Generator", "torch.Generator.manual_seed", "torch.Generator.manual_seed", "len", "iter", "iter", "torch.randperm().tolist", "torch.randperm().tolist", "torch.randperm().tolist", "torch.randperm().tolist", "torch.randint().tolist", "torch.randint().tolist", "torch.randint().tolist", "torch.randint().tolist", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randint", "torch.randint", "torch.randint", "torch.randint"], "methods", ["None"], ["if", "self", ".", "replacement", ":", "\n", "\t\t\t", "return", "iter", "(", "torch", ".", "randint", "(", "high", "=", "n", ",", "size", "=", "(", "self", ".", "num_samples", ",", ")", ",", "dtype", "=", "torch", ".", "int64", ",", "generator", "=", "g", ")", ".", "tolist", "(", ")", "[", "start_ix", ":", "]", ")", "\n", "", "return", "iter", "(", "torch", ".", "randperm", "(", "n", ",", "generator", "=", "g", ")", ".", "tolist", "(", ")", "[", "start_ix", ":", "]", ")", "\n", "\n", "\n", "", "", "def", "get_data_loader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_iterations", "=", "None", ",", "start_iter", "=", "0", ",", "num_workers", "=", "1", ",", "random_seed", "=", "111", ")", ":", "\n", "\t", "if", "shuffle", ":", "\n", "\t\t", "sampler", "=", "RandomSampler", "(", "dataset", ",", "replacement", "=", "False", ",", "seed", "=", "random_seed", ")", "\n", "", "else", ":", "\n", "\t\t", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "SequentialSampler", "(", "dataset", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.get_data_loader": [[188, 199], ["torch.utils.data.BatchSampler", "torch.utils.data.BatchSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data_utils.RandomSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "data_utils.IterationBasedBatchSampler"], "function", ["None"], ["if", "not", "num_iterations", "is", "None", ":", "\n", "\t\t", "batch_sampler", "=", "IterationBasedBatchSampler", "(", "batch_sampler", ",", "num_iterations", ",", "start_iter", "=", "start_iter", ")", "\n", "\n", "", "data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "num_workers", "=", "num_workers", ",", "batch_sampler", "=", "batch_sampler", ",", "collate_fn", "=", "collator", ")", "\n", "return", "data_loader", "\n", "\n", "", "def", "collator", "(", "batch", ")", ":", "\n", "\t", "batch", "=", "sorted", "(", "batch", ",", "key", "=", "lambda", "data", ":", "data", "[", "1", "]", ".", "size", "(", "0", ")", ",", "reverse", "=", "True", ")", "# Reordering", "\n", "input_data", ",", "target_data", ",", "speaker_ix", ",", "data_ix", "=", "list", "(", "zip", "(", "*", "batch", ")", ")", "\n", "input_data", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "input_data", ")", "\n", "target_data", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "target_data", ")", "\n", "speaker_ix", "=", "torch", ".", "tensor", "(", "speaker_ix", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.collator": [[200, 208], ["sorted", "list", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.tensor", "torch.tensor", "zip", "data[].size"], "function", ["None"], ["return", "input_data", ",", "target_data", ",", "speaker_ix", ",", "data_ix", "", "", ""]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.Articulation.__init__": [[11, 36], ["super().__init__", "articulation.Source", "articulation.Filter", "articulation.Filter", "articulation.FIRFilter", "articulation.FIRFilter", "articulation.FIRFilter", "articulation.FIRFilter"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\t", "def", "__init__", "(", "\n", "self", ",", "\n", "channels", ",", "\n", "num_harmonics", "=", "7", ",", "\n", "src_noise_std", "=", "0.003", ",", "\n", "src_amplitude", "=", "0.1", ",", "\n", "filter_blocks", "=", "5", ",", "\n", "filter_layers_per_block", "=", "10", ",", "\n", "filter_length", "=", "3", ",", "\n", "out_freq", "=", "16000", ",", "\n", "low_passband_voiced", "=", "[", "0", ",", "5000", "]", ",", "\n", "high_passband_voiced", "=", "[", "7000", ",", "8000", "]", ",", "\n", "low_passband_voiceless", "=", "[", "0", ",", "1000", "]", ",", "\n", "high_passband_voiceless", "=", "[", "3000", ",", "8000", "]", ",", "\n", "fir_order", "=", "10", "\n", ")", ":", "\n", "\t\t", "super", "(", "Articulation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "source", "=", "Source", "(", "out_freq", "=", "out_freq", ",", "num_harmonics", "=", "num_harmonics", ",", "noise_std", "=", "src_noise_std", ",", "amplitude", "=", "src_amplitude", ")", "\n", "self", ".", "filter_harmonic", "=", "Filter", "(", "channels", ",", "num_blocks", "=", "filter_blocks", ",", "num_layers_per_block", "=", "filter_layers_per_block", ",", "filter_length", "=", "filter_length", ")", "\n", "self", ".", "filter_noisy", "=", "Filter", "(", "channels", ",", "num_blocks", "=", "1", ",", "num_layers_per_block", "=", "filter_layers_per_block", ",", "filter_length", "=", "filter_length", ")", "\n", "self", ".", "fir_voiced_low_pass", "=", "FIRFilter", "(", "low_passband_voiced", ",", "high_passband_voiced", ",", "fs", "=", "out_freq", ",", "order", "=", "fir_order", ")", "\n", "self", ".", "fir_voiced_high_pass", "=", "FIRFilter", "(", "high_passband_voiced", ",", "low_passband_voiced", ",", "fs", "=", "out_freq", ",", "order", "=", "fir_order", ")", "\n", "self", ".", "fir_voiceless_low_pass", "=", "FIRFilter", "(", "low_passband_voiceless", ",", "high_passband_voiceless", ",", "fs", "=", "out_freq", ",", "order", "=", "fir_order", ")", "\n", "self", ".", "fir_voiceless_high_pass", "=", "FIRFilter", "(", "high_passband_voiceless", ",", "low_passband_voiceless", ",", "fs", "=", "out_freq", ",", "order", "=", "fir_order", ")", "\n", "self", ".", "out_freq", "=", "out_freq", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.Articulation.forward": [[37, 55], ["feature_padded.transpose().contiguous.transpose().contiguous.transpose().contiguous", "torch.nn.utils.rnn.pack_padded_sequence", "articulation.Articulation.source", "articulation.Articulation.filter_harmonic", "articulation.Articulation.filter_noisy", "rnn_utils.pad_flatten_sequence", "rnn_utils.pad_flatten_sequence", "articulation.Articulation.fir_voiced_low_pass", "articulation.Articulation.fir_voiced_high_pass", "articulation.Articulation.fir_voiceless_low_pass", "articulation.Articulation.fir_voiceless_high_pass", "feature_padded.transpose().contiguous.transpose().contiguous.transpose"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence"], ["", "def", "forward", "(", "self", ",", "feature_padded", ",", "out_lengths", ")", ":", "\n", "\t\t", "voicedness", "=", "(", "feature_padded", "[", ":", ",", "0", ",", ":", "]", "*", "5.0", ")", ".", "sigmoid", "(", ")", "\n", "feature_padded", "=", "feature_padded", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "feature", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_padded_sequence", "(", "feature_padded", ",", "out_lengths", ",", "batch_first", "=", "True", ")", "\n", "\n", "harmonic", ",", "noisy", "=", "self", ".", "source", "(", "feature", ".", "data", "[", ":", ",", "0", "]", ",", "feature", ".", "batch_sizes", ")", "\n", "\n", "harmonic", "=", "self", ".", "filter_harmonic", "(", "harmonic", ",", "feature", ".", "data", ",", "feature", ".", "batch_sizes", ")", "\n", "noisy", "=", "self", ".", "filter_noisy", "(", "noisy", ",", "feature", ".", "data", ",", "feature", ".", "batch_sizes", ")", "\n", "\n", "harmonic", ",", "_", "=", "pad_flatten_sequence", "(", "harmonic", ",", "feature", ".", "batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "noisy", ",", "_", "=", "pad_flatten_sequence", "(", "noisy", ",", "feature", ".", "batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "\n", "voiced", "=", "self", ".", "fir_voiced_low_pass", "(", "harmonic", ")", "+", "self", ".", "fir_voiced_high_pass", "(", "noisy", ")", "\n", "voiceless", "=", "self", ".", "fir_voiceless_low_pass", "(", "harmonic", ")", "+", "self", ".", "fir_voiceless_high_pass", "(", "noisy", ")", "\n", "\n", "wave", "=", "voicedness", "*", "voiced", "+", "(", "1", "-", "voicedness", ")", "*", "voiceless", "\n", "return", "wave", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.Articulation.pack_init_args": [[56, 73], ["articulation.Articulation.source.harmonic_ixs.size"], "methods", ["None"], ["", "def", "pack_init_args", "(", "self", ")", ":", "\n", "\t\t", "args", "=", "{", "\n", "\"num_harmonics\"", ":", "self", ".", "source", ".", "harmonic_ixs", ".", "size", "(", "0", ")", "-", "1", ",", "\n", "\"src_noise_std\"", ":", "self", ".", "source", ".", "noise_std", ",", "\n", "\"src_amplitude\"", ":", "self", ".", "source", ".", "amplitude", ",", "\n", "\"channels\"", ":", "self", ".", "filter_harmonic", ".", "channels", ",", "\n", "\"filter_blocks\"", ":", "self", ".", "filter_harmonic", ".", "num_blocks", ",", "\n", "\"filter_layers_per_block\"", ":", "self", ".", "filter_harmonic", ".", "num_layers_per_block", ",", "\n", "\"filter_length\"", ":", "self", ".", "filter_harmonic", ".", "filter_length", ",", "\n", "\"out_freq\"", ":", "self", ".", "out_freq", ",", "\n", "\"low_passband_voiced\"", ":", "self", ".", "fir_voiced_low_pass", ".", "passband", ",", "\n", "\"high_passband_voiced\"", ":", "self", ".", "fir_voiced_high_pass", ".", "passband", ",", "\n", "\"low_passband_voiceless\"", ":", "self", ".", "fir_voiceless_low_pass", ".", "passband", ",", "\n", "\"high_passband_voiceless\"", ":", "self", ".", "fir_voiceless_high_pass", ".", "passband", ",", "\n", "\"fir_order\"", ":", "self", ".", "fir_voiced_low_pass", ".", "order", "\n", "}", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.Source.__init__": [[75, 86], ["super().__init__", "torch.nn.Linear", "articulation.Source.register_buffer", "math.log", "torch.arange().float", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\t", "def", "__init__", "(", "self", ",", "out_freq", "=", "16000", ",", "num_harmonics", "=", "7", ",", "noise_std", "=", "0.003", ",", "amplitude", "=", "0.1", ")", ":", "\n", "\t\t", "super", "(", "Source", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "noise_std", "=", "noise_std", "\n", "self", ".", "amplitude", "=", "amplitude", "\n", "self", ".", "combine_harmonics", "=", "torch", ".", "nn", ".", "Linear", "(", "num_harmonics", "+", "1", ",", "1", ")", "\n", "self", ".", "register_buffer", "(", "\n", "\"harmonic_ixs\"", ",", "\n", "torch", ".", "arange", "(", "1", ",", "num_harmonics", "+", "2", ")", ".", "float", "(", ")", "\n", ")", "\n", "self", ".", "out_freq", "=", "out_freq", "\n", "\n", "", "def", "forward", "(", "self", ",", "log_f0", ",", "batch_sizes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.Source.forward": [[87, 107], ["log_f0.clamp().exp", "torch.randn_like", "rnn_utils.pad_flatten_sequence", "articulation.Source.combine_harmonics().squeeze", "voiced.tanh.tanh.tanh", "freqs.cumsum", "torch.nn.utils.rnn.pack_padded_sequence", "log_f0.clamp", "angle.sin", "articulation.Source.combine_harmonics", "torch.rand_like"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence"], ["\t\t", "\"\"\"\n\t\tlog_f0: 1D array flattening batched time series. Of size sum(seq_len)\n\t\t\t\t\t  Intended to represent log(F0).\n\t\t\"\"\"", "\n", "f0", "=", "log_f0", ".", "exp", "(", ")", "\n", "standard_noise", "=", "torch", ".", "randn_like", "(", "f0", ")", "\n", "\n", "voiceless", "=", "(", "self", ".", "amplitude", "/", "3.0", ")", "*", "standard_noise", "\n", "\n", "freqs", "=", "2", "*", "math", ".", "pi", "*", "f0", "[", ":", ",", "None", "]", "*", "self", ".", "harmonic_ixs", "[", "None", ",", ":", "]", "/", "self", ".", "out_freq", "\n", "freqs", ",", "lengths", "=", "pad_flatten_sequence", "(", "freqs", ",", "batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "init_phase", "=", "(", "2", "*", "torch", ".", "rand_like", "(", "freqs", "[", ":", ",", "0", ",", "0", "]", ")", "-", "1.0", ")", "*", "math", ".", "pi", "\n", "angle", "=", "freqs", ".", "cumsum", "(", "1", ")", "+", "init_phase", "[", ":", ",", "None", ",", "None", "]", "\n", "angle", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_padded_sequence", "(", "angle", ",", "lengths", ",", "batch_first", "=", "True", ")", ".", "data", "\n", "harmonics", "=", "self", ".", "amplitude", "*", "angle", ".", "sin", "(", ")", "+", "self", ".", "noise_std", "*", "standard_noise", "[", ":", ",", "None", "]", "\n", "voiced", "=", "self", ".", "combine_harmonics", "(", "harmonics", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "voiced", "=", "voiced", ".", "tanh", "(", ")", "\n", "return", "voiced", ",", "voiceless", "\n", "\n", "", "", "class", "Filter", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.Filter.__init__": [[109, 119], ["super().__init__", "torch.nn.Sequential", "articulation.FilterBlock", "range"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\t\t", "super", "(", "Filter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "filter_blocks", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "[", "\n", "FilterBlock", "(", "channels", ",", "filter_length", "=", "filter_length", ",", "num_layers", "=", "num_layers_per_block", ")", "\n", "for", "b", "in", "range", "(", "num_blocks", ")", "\n", "]", ")", "\n", "self", ".", "num_blocks", "=", "num_blocks", "\n", "self", ".", "num_layers_per_block", "=", "num_layers_per_block", "\n", "self", ".", "filter_length", "=", "filter_length", "\n", "self", ".", "channels", "=", "channels", "\n", "\n", "", "def", "forward", "(", "self", ",", "src", ",", "condition", ",", "batch_sizes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.Filter.forward": [[120, 124], ["[].squeeze", "articulation.Filter.filter_blocks"], "methods", ["None"], ["\t\t", "args", "=", "{", "'src'", ":", "src", "[", ":", ",", "None", "]", ",", "'condition'", ":", "condition", ",", "'batch_sizes'", ":", "batch_sizes", "}", "\n", "filtered", "=", "self", ".", "filter_blocks", "(", "args", ")", "[", "'src'", "]", ".", "squeeze", "(", "-", "1", ")", "\n", "return", "filtered", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.FilterBlock.__init__": [[127, 135], ["super().__init__", "torch.nn.Linear", "torch.nn.Sequential", "torch.nn.Linear", "articulation.DilatedConv", "range"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\t\t", "super", "(", "FilterBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "preprocess", "=", "torch", ".", "nn", ".", "Linear", "(", "1", ",", "channels", ")", "\n", "self", ".", "dilated_convs", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "[", "\n", "DilatedConv", "(", "channels", ",", "filter_length", ",", "2", "**", "k", ")", "\n", "for", "k", "in", "range", "(", "num_layers", ")", "\n", "]", ")", "\n", "self", ".", "postprocess", "=", "torch", ".", "nn", ".", "Linear", "(", "channels", ",", "1", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.FilterBlock.forward": [[136, 142], ["articulation.FilterBlock.preprocess", "articulation.FilterBlock.dilated_convs", "articulation.FilterBlock.postprocess"], "methods", ["None"], ["\t\t", "src_orig", "=", "args", "[", "'src'", "]", "\n", "args", "[", "'src'", "]", "=", "self", ".", "preprocess", "(", "src_orig", ")", "\n", "filtered", "=", "self", ".", "dilated_convs", "(", "args", ")", "[", "'src'", "]", "\n", "args", "[", "'src'", "]", "=", "self", ".", "postprocess", "(", "filtered", ")", "+", "src_orig", "\n", "return", "args", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.DilatedConv.__init__": [[151, 159], ["super().__init__", "torch.nn.Conv1d"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\t\t", "super", "(", "DilatedConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv1d", "(", "\n", "channels", ",", "\n", "channels", ",", "\n", "kernel_size", "=", "filter_length", ",", "\n", "dilation", "=", "dilation", ")", "\n", "self", ".", "left_padding", "=", "dilation", "*", "(", "filter_length", "-", "1", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.DilatedConv.forward": [[160, 168], ["rnn_utils.pad_flatten_sequence", "articulation.DilatedConv.conv", "torch.nn.functional.pad().transpose().contiguous", "src_padded.transpose().contiguous", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.functional.pad().transpose", "torch.nn.functional.pad().transpose().contiguous.tanh", "src_padded.transpose", "torch.nn.functional.pad"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence"], ["\t\t", "src_padded", ",", "lengths", "=", "pad_flatten_sequence", "(", "args", "[", "'src'", "]", ",", "args", "[", "'batch_sizes'", "]", ",", "batch_first", "=", "True", ")", "\n", "conved", "=", "self", ".", "conv", "(", "src_padded", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ")", "\n", "conved", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "conved", ",", "(", "self", ".", "left_padding", ",", "0", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "conved", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_padded_sequence", "(", "conved", ",", "lengths", ",", "batch_first", "=", "True", ")", ".", "data", "\n", "conved", "=", "conved", ".", "tanh", "(", ")", "+", "args", "[", "'src'", "]", "+", "args", "[", "'condition'", "]", "\n", "args", "[", "'src'", "]", "=", "conved", "\n", "return", "args", "\n", "\n", "", "", "class", "FIRFilter", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.FIRFilter.__init__": [[170, 193], ["super().__init__", "scipy.remez().astype", "articulation.FIRFilter.register_parameter", "torch.nn.Parameter", "list", "list", "list", "list", "scipy.remez", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["self", ",", "\n", "passband", ",", "\n", "stopband", ",", "\n", "fs", "=", "16000", ",", "\n", "order", "=", "10", "\n", ")", ":", "\n", "\t\t", "super", "(", "FIRFilter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "passband", "=", "passband", "\n", "self", ".", "stopband", "=", "stopband", "\n", "if", "passband", "[", "0", "]", "<", "stopband", "[", "0", "]", ":", "# low pass", "\n", "\t\t\t", "bands", "=", "list", "(", "passband", ")", "+", "list", "(", "stopband", ")", "\n", "desired", "=", "[", "1", ",", "0", "]", "\n", "", "else", ":", "# high pass", "\n", "\t\t\t", "bands", "=", "list", "(", "stopband", ")", "+", "list", "(", "passband", ")", "\n", "desired", "=", "[", "0", ",", "1", "]", "\n", "", "taps", "=", "spsig", ".", "remez", "(", "order", "+", "1", ",", "bands", ",", "desired", ",", "fs", "=", "fs", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "self", ".", "register_parameter", "(", "\n", "\"filter_coefs\"", ",", "\n", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "from_numpy", "(", "taps", ")", "[", "None", ",", "None", ",", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", ")", "\n", "self", ".", "order", "=", "order", "\n", "\n", "", "def", "forward", "(", "self", ",", "wav", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.articulation.FIRFilter.forward": [[194, 201], ["torch.nn.functional.pad", "torch.nn.functional.conv1d", "wav.unsqueeze.unsqueeze.squeeze", "wav.unsqueeze.unsqueeze.unsqueeze"], "methods", ["None"], ["\t\t", "wav", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "wav", ",", "(", "self", ".", "order", ",", "0", ")", ",", "mode", "=", "'constant'", ",", "value", "=", "0.0", ")", "\n", "if", "wav", ".", "ndim", "<", "3", ":", "\n", "\t\t\t", "wav", "=", "wav", ".", "unsqueeze", "(", "1", ")", "\n", "", "wav", "=", "torch", ".", "nn", ".", "functional", ".", "conv1d", "(", "wav", ",", "self", ".", "filter_coefs", ")", "\n", "wav", "=", "wav", ".", "squeeze", "(", "1", ")", "\n", "return", "wav", "", "", "", ""]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.loss.SpectralLoss.__init__": [[6, 18], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\t", "def", "__init__", "(", "\n", "self", ",", "\n", "n_ffts", "=", "[", "128", ",", "512", ",", "2048", "]", ",", "\n", "frame_lengths", "=", "[", "80", ",", "400", ",", "1920", "]", ",", "\n", "step_sizes", "=", "[", "40", ",", "100", ",", "640", "]", ",", "\n", "eps", "=", "1e-5", "\n", ")", ":", "\n", "\t\t", "super", "(", "SpectralLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_ffts", "=", "n_ffts", "\n", "self", ".", "frame_lengths", "=", "frame_lengths", "\n", "self", ".", "step_sizes", "=", "step_sizes", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.loss.SpectralLoss.forward": [[19, 36], ["zip", "wave1_padded.stft", "spectra1.transpose().contiguous.transpose().contiguous.transpose().contiguous", "wave2_padded.stft", "spectra2.transpose().contiguous.transpose().contiguous.transpose().contiguous", "len", "torch.nn.utils.rnn.pack_padded_sequence", "spectra1.transpose().contiguous.transpose().contiguous.pow().sum", "torch.nn.utils.rnn.pack_padded_sequence", "spectra2.transpose().contiguous.transpose().contiguous.pow().sum", "spectra1.transpose().contiguous.transpose().contiguous.transpose", "spectra2.transpose().contiguous.transpose().contiguous.transpose", "spectra1.transpose().contiguous.transpose().contiguous.pow", "spectra2.transpose().contiguous.transpose().contiguous.pow", "wave_lengths.float", "amplitude1.log", "amplitude2.log"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "wave1_padded", ",", "wave2_padded", ",", "wave_lengths", ")", ":", "\n", "\t\t", "loss", "=", "0.0", "\n", "for", "n_fft", ",", "frame_length", ",", "step_size", "in", "zip", "(", "self", ".", "n_ffts", ",", "self", ".", "frame_lengths", ",", "self", ".", "step_sizes", ")", ":", "\n", "\t\t\t", "spectra_lengths", "=", "(", "wave_lengths", ".", "float", "(", ")", "/", "step_size", ")", ".", "floor", "(", ")", ".", "long", "(", ")", "+", "1", "\n", "spectra1", "=", "wave1_padded", ".", "stft", "(", "n_fft", ",", "hop_length", "=", "step_size", ",", "win_length", "=", "frame_length", ")", "\n", "spectra1", "=", "spectra1", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "spectra1", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_padded_sequence", "(", "spectra1", ",", "spectra_lengths", ",", "batch_first", "=", "True", ")", ".", "data", "\n", "amplitude1", "=", "spectra1", ".", "pow", "(", "2", ")", ".", "sum", "(", "-", "1", ")", "+", "self", ".", "eps", "\n", "\n", "spectra2", "=", "wave2_padded", ".", "stft", "(", "n_fft", ",", "hop_length", "=", "step_size", ",", "win_length", "=", "frame_length", ")", "\n", "spectra2", "=", "spectra2", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "spectra2", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_padded_sequence", "(", "spectra2", ",", "spectra_lengths", ",", "batch_first", "=", "True", ")", ".", "data", "\n", "amplitude2", "=", "spectra2", ".", "pow", "(", "2", ")", ".", "sum", "(", "-", "1", ")", "+", "self", ".", "eps", "\n", "\n", "loss", "=", "loss", "+", "(", "amplitude1", ".", "log", "(", ")", "-", "amplitude2", ".", "log", "(", ")", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "*", "0.5", "\n", "", "loss", "=", "loss", "/", "len", "(", "self", ".", "n_ffts", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.loss.SpectralLoss.pack_init_args": [[37, 45], ["None"], "methods", ["None"], ["", "def", "pack_init_args", "(", "self", ")", ":", "\n", "\t\t", "args", "=", "{", "\n", "\"n_ffts\"", ":", "self", ".", "n_ffts", ",", "\n", "\"frame_lengths\"", ":", "self", ".", "frame_lengths", ",", "\n", "\"step_sizes\"", ":", "self", ".", "step_sizes", ",", "\n", "\"eps\"", ":", "self", ".", "eps", "\n", "}", "\n", "return", "args", "", "", "", ""]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.MuLawCompund.__init__": [[19, 21], ["None"], "methods", ["None"], ["\n", "", "def", "__call__", "(", "self", ",", "wav", ")", ":", "\n", "\t\t", "if", "isinstance", "(", "wav", ",", "np", ".", "ndarray", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.MuLawCompund.__call__": [[22, 27], ["isinstance", "numpy.log1p", "math.log1p", "numpy.sign", "numpy.log1p", "wav.sign", "numpy.abs", "wav.abs"], "methods", ["None"], ["\t\t\t", "return", "np", ".", "sign", "(", "wav", ")", "*", "np", ".", "log1p", "(", "self", ".", "mu", "*", "np", ".", "abs", "(", "wav", ")", ")", "/", "np", ".", "log1p", "(", "self", ".", "mu", ")", "\n", "", "else", ":", "# torch.Tensor", "\n", "\t\t\t", "return", "wav", ".", "sign", "(", ")", "*", "(", "self", ".", "mu", "*", "wav", ".", "abs", "(", ")", ")", ".", "log1p", "(", ")", "/", "math", ".", "log1p", "(", "self", ".", "mu", ")", "\n", "\n", "", "", "def", "inverse", "(", "self", ",", "signed_magnitude", ")", ":", "\n", "\t\t", "if", "isinstance", "(", "signed_magnitude", ",", "np", ".", "ndarray", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.MuLawCompund.inverse": [[28, 33], ["isinstance", "numpy.sign", "signed_magnitude.sign", "numpy.abs", "signed_magnitude.abs"], "methods", ["None"], ["\t\t\t", "return", "np", ".", "sign", "(", "signed_magnitude", ")", "*", "(", "(", "self", ".", "mu", "+", "1.0", ")", "**", "np", ".", "abs", "(", "signed_magnitude", ")", "-", "1.0", ")", "/", "self", ".", "mu", "\n", "", "else", ":", "# torch.Tensor", "\n", "\t\t\t", "return", "signed_magnitude", ".", "sign", "(", ")", "*", "(", "(", "self", ".", "mu", "+", "1.0", ")", "**", "signed_magnitude", ".", "abs", "(", ")", "-", "1.0", ")", "/", "self", ".", "mu", "\n", "\n", "", "", "", "class", "Quantize", "(", "object", ")", ":", "\n", "\t", "def", "__init__", "(", "self", ",", "levels", "=", "256", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.Quantize.__init__": [[35, 37], ["None"], "methods", ["None"], ["\n", "", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "\t\t"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.Quantize.__call__": [[38, 47], ["isinstance", "q.astype", "q.long"], "methods", ["None"], ["\n", "q", "=", "(", "(", "x", "+", "1", ")", "*", "0.5", "*", "(", "self", ".", "levels", "-", "1", ")", ")", ".", "round", "(", ")", "\n", "if", "isinstance", "(", "q", ",", "np", ".", "ndarray", ")", ":", "\n", "\t\t\t", "return", "q", ".", "astype", "(", "int", ")", "\n", "", "else", ":", "# torch.Tensor", "\n", "\t\t\t", "return", "q", ".", "long", "(", ")", "\n", "\n", "", "", "def", "dequantize", "(", "self", ",", "c", ")", ":", "\n", "\t\t"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.Quantize.dequantize": [[48, 57], ["isinstance", "c.float.float.astype", "c.float.float.float"], "methods", ["None"], ["\n", "if", "isinstance", "(", "c", ",", "np", ".", "ndarray", ")", ":", "\n", "\t\t\t", "c", "=", "c", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "# torch.Tensor", "\n", "\t\t\t", "c", "=", "c", ".", "float", "(", ")", "\n", "", "return", "(", "c", "/", "(", "self", ".", "levels", "-", "1.0", ")", ")", "*", "2", "-", "1.0", "\n", "\n", "\n", "", "", "class", "MFCC", "(", "object", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.MFCC.__init__": [[60, 78], ["MelSpectrogram"], "methods", ["None"], ["fs", ",", "\n", "win_length", ",", "\n", "hop_length", ",", "\n", "n_mfcc", "=", "13", ",", "\n", "max_delta_order", "=", "2", ",", "\n", ")", ":", "\n", "\t\t", "self", ".", "fs", "=", "fs", "\n", "self", ".", "win_length", "=", "win_length", "\n", "self", ".", "hop_length", "=", "hop_length", "\n", "self", ".", "n_mfcc", "=", "n_mfcc", "\n", "self", ".", "max_delta_order", "=", "max_delta_order", "\n", "try", ":", "\n", "\t\t\t", "from", "torchaudio", ".", "transforms", "import", "MelSpectrogram", "\n", "self", ".", "torch_mfcc", "=", "MelSpectrogram", "(", "sample_rate", "=", "self", ".", "fs", ",", "win_length", "=", "self", ".", "win_length", ",", "hop_length", "=", "self", ".", "hop_length", ",", "n_mfcc", "=", "self", ".", "n_mfcc", ")", "\n", "", "except", ":", "\n", "\t\t\t", "self", ".", "torch_mfcc", "=", "None", "\n", "\n", "", "", "def", "__call__", "(", "self", ",", "wav", ")", ":", "\n", "\t\t"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.MFCC.__call__": [[79, 106], ["isinstance", "numpy.pad", "librosa.feature.mfcc", "numpy.concatenate", "numpy.transpose", "TypeError", "numpy.pad.astype", "librosa.feature.delta", "range"], "methods", ["None"], ["\n", "if", "isinstance", "(", "wav", ",", "np", ".", "ndarray", ")", ":", "\n", "\t\t\t", "wav", "=", "np", ".", "pad", "(", "wav", ",", "(", "self", ".", "win_length", "-", "1", ")", "//", "2", ",", "mode", "=", "'reflect'", ")", "\n", "mfcc", "=", "librosa", ".", "feature", ".", "mfcc", "(", "\n", "wav", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "sr", "=", "self", ".", "fs", ",", "\n", "n_fft", "=", "self", ".", "win_length", ",", "\n", "hop_length", "=", "self", ".", "hop_length", ",", "\n", "n_mfcc", "=", "self", ".", "n_mfcc", ",", "\n", "center", "=", "False", ",", "\n", ")", "\n", "out", "=", "np", ".", "concatenate", "(", "\n", "[", "mfcc", "]", "\n", "+", "\n", "[", "librosa", ".", "feature", ".", "delta", "(", "mfcc", ",", "order", "=", "order", ")", "\n", "for", "order", "in", "range", "(", "1", ",", "self", ".", "max_delta_order", "+", "1", ")", "]", "\n", ",", "\n", "axis", "=", "0", "\n", ")", "\n", "return", "np", ".", "transpose", "(", "out", ")", "\n", "# elif self.torch_mfcc is None:", "\n", "# raise TypeError('You need to install torchaudio to get MFCC from torch.Tensor data.')", "\n", "", "else", ":", "\n", "\t\t\t", "TypeError", "(", "'torch.Tensor is not currently supported for MFCC derivative estimation.'", ")", "\n", "# return self.torch_mfcc(wav)", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.STFT.__init__": [[110, 119], ["None"], "methods", ["None"], ["fs", ",", "\n", "win_length", ",", "\n", "hop_length", ",", "\n", ")", ":", "\n", "\t\t", "self", ".", "fs", "=", "fs", "\n", "self", ".", "win_length", "=", "win_length", "\n", "self", ".", "hop_length", "=", "hop_length", "\n", "\n", "", "def", "__call__", "(", "self", ",", "wav", ")", ":", "\n", "\t\t"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.STFT.__call__": [[120, 145], ["isinstance", "librosa.core.stft", "numpy.absolute", "numpy.transpose", "torch.stft", "torch.stft.pow().sum().sqrt", "spectral_amplitude.transpose().contiguous.transpose().contiguous.transpose().contiguous", "wav.astype", "torch.stft.pow().sum", "spectral_amplitude.transpose().contiguous.transpose().contiguous.transpose", "torch.stft.pow"], "methods", ["None"], ["\n", "if", "isinstance", "(", "wav", ",", "np", ".", "ndarray", ")", ":", "\n", "\t\t\t", "spectra", "=", "librosa", ".", "core", ".", "stft", "(", "\n", "wav", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "n_fft", "=", "self", ".", "win_length", ",", "\n", "hop_length", "=", "self", ".", "hop_length", ",", "\n", "center", "=", "True", ",", "\n", "window", "=", "'hann'", "\n", ")", "\n", "spectral_amplitude", "=", "np", ".", "absolute", "(", "spectra", ")", "\n", "spectral_amplitude", "=", "np", ".", "transpose", "(", "spectral_amplitude", ")", "\n", "", "else", ":", "\n", "\t\t\t", "spectra", "=", "torch", ".", "stft", "(", "\n", "wav", ",", "\n", "self", ".", "win_length", ",", "\n", "hop_length", "=", "self", ".", "hop_length", ",", "\n", "center", "=", "True", ",", "\n", "window", "=", "'hann_window'", "\n", ")", "\n", "spectral_amplitude", "=", "spectra", ".", "pow", "(", "2", ")", ".", "sum", "(", "-", "1", ")", ".", "sqrt", "(", ")", "\n", "spectral_amplitude", "=", "spectral_amplitude", ".", "transpose", "(", "0", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "", "return", "spectral_amplitude", "\n", "\n", "", "", "class", "Rescale", "(", "object", ")", ":", "\n", "\t", "def", "__init__", "(", "self", ",", "scalar", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.Rescale.__init__": [[147, 149], ["float"], "methods", ["None"], ["\n", "", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "return", "x", "/", "self", ".", "scalar", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.Rescale.__call__": [[150, 152], ["None"], "methods", ["None"], ["\n", "", "", "def", "shift", "(", "x", ")", ":", "\n", "\t"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.Normalize.__init__": [[160, 163], ["None"], "methods", ["None"], ["self", ".", "std", "=", "std", "\n", "\n", "", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "return", "(", "x", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.Normalize.__call__": [[164, 166], ["None"], "methods", ["None"], ["", "", ""]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.normalize_int16": [[10, 17], ["isinstance", "wav.float.astype", "wav.float.float"], "function", ["None"], ["\t\t", "wav", "=", "wav", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "# torch.Tensor", "\n", "\t\t", "wav", "=", "wav", ".", "float", "(", ")", "\n", "", "wav", "/=", "2", "**", "15", "\n", "return", "wav", "\n", "\n", "", "class", "MuLawCompund", "(", "object", ")", ":", "\n", "\t", "def", "__init__", "(", "self", ",", "mu", "=", "255", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.shift": [[153, 158], ["None"], "function", ["None"], ["\n", "return", "2", "*", "x", "-", "1.0", "\n", "\n", "", "class", "Normalize", "(", "object", ")", ":", "\n", "\t", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence": [[5, 12], ["torch.nn._VF._pad_packed_sequence", "batch_sizes.cpu", "batch_sizes.size"], "function", ["None"], ["def", "pad_flatten_sequence", "(", "flatten", ",", "batch_sizes", ",", "padding_value", "=", "0.0", ",", "batch_first", "=", "False", ")", ":", "\n", "\t", "return", "torch", ".", "nn", ".", "_VF", ".", "_pad_packed_sequence", "(", "\n", "flatten", ",", "\n", "batch_sizes", ".", "cpu", "(", ")", ",", "\n", "batch_first", ",", "\n", "padding_value", ",", "\n", "batch_sizes", ".", "size", "(", "0", ")", "\n", ")", ""]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.__init__": [[11, 54], ["super().__init__", "cognition.Downsample", "cognition.ABCD_VAE", "cognition.TimeJitter", "cognition.SpeakerColoring", "cognition.Upsample"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "input_size", ",", "\n", "hidden_size", ",", "\n", "output_size", ",", "\n", "num_categories", ",", "\n", "feature_dim", ",", "\n", "num_speakers", ",", "\n", "*", "args", ",", "\n", "total_input_frames", "=", "None", ",", "\n", "data_size", "=", "None", ",", "\n", "prior_concentration", "=", "1.0", ",", "\n", "min_temperature", "=", "0.5", ",", "\n", "temperature_update_freq", "=", "1000", ",", "\n", "temperature_anneal_rate", "=", "1e-5", ",", "\n", "iter_counts", "=", "0", ",", "\n", "pretrain_iters", "=", "0", ",", "\n", "jitter_prob", "=", "0.12", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "\t\t", "super", "(", "Cognition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "if", "data_size", "is", "None", ":", "\n", "\t\t\t", "data_size", "=", "total_input_frames", "//", "2", "\n", "", "self", ".", "vae", "=", "ABCD_VAE", "(", "\n", "input_size", ",", "\n", "num_categories", ",", "\n", "feature_dim", ",", "\n", "hidden_size", ",", "\n", "data_size", ",", "\n", "prior_concentration", "=", "prior_concentration", ",", "\n", "min_temperature", "=", "min_temperature", ",", "\n", "temperature_update_freq", "=", "temperature_update_freq", ",", "\n", "temperature_anneal_rate", "=", "temperature_anneal_rate", ",", "\n", "iter_counts", "=", "iter_counts", ",", "\n", "pretrain_iters", "=", "pretrain_iters", ",", "\n", ")", "\n", "self", ".", "time_jitter", "=", "TimeJitter", "(", "p", "=", "jitter_prob", ")", "\n", "self", ".", "speaker_coloring", "=", "SpeakerColoring", "(", "num_speakers", ",", "feature_dim", ",", "hidden_size", ")", "\n", "self", ".", "upsample", "=", "Upsample", "(", "2", "*", "hidden_size", ",", "hidden_size", ",", "output_size", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "packed_audio", ",", "speaker", ",", "output_lengths", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.forward": [[55, 62], ["cognition.Cognition.encode", "cognition.Cognition.time_jitter", "cognition.Cognition.decode"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.encode", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.decode"], ["\t\t", "flatten_code", ",", "category_logits", ",", "downsampled_batch_sizes", ",", "kl_loss_total", "=", "self", ".", "encode", "(", "packed_audio", ")", "\n", "\n", "flatten_code", "=", "self", ".", "time_jitter", "(", "flatten_code", ",", "downsampled_batch_sizes", ")", "\n", "\n", "padded_code", "=", "self", ".", "decode", "(", "flatten_code", ",", "speaker", ",", "downsampled_batch_sizes", ",", "output_lengths", ")", "\n", "return", "padded_code", ",", "category_logits", ",", "kl_loss_total", "\n", "\n", "", "def", "encode", "(", "self", ",", "packed_audio", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.encode": [[63, 72], ["cognition.Cognition.downsample", "cognition.Cognition.vae", "cognition.Cognition.vae.sample", "cognition.Cognition.count_consecutive_repetitions", "cognition.Cognition.vae.kl_divergence", "cognition.Cognition.float().pow", "cognition.Cognition.vae.is_pretrain", "cognition.Cognition.float"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.sample", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.count_consecutive_repetitions", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.kl_divergence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.is_pretrain"], ["\t\t", "category_logits", "=", "self", ".", "vae", "(", "packed_audio", ".", "data", ")", "\n", "if", "self", ".", "training", ":", "\n", "\t\t\t", "flatten_code", "=", "self", ".", "vae", ".", "sample", "(", "category_logits", ",", "no_sample", "=", "self", ".", "vae", ".", "is_pretrain", "(", ")", ")", "\n", "counts", "=", "self", ".", "count_consecutive_repetitions", "(", "flatten_code", ",", "packed_audio", ".", "batch_sizes", ")", "\n", "kl_loss_total", "=", "self", ".", "vae", ".", "kl_divergence", "(", "category_logits", ",", "counts", ".", "float", "(", ")", ".", "pow", "(", "-", "1", ")", ")", "\n", "return", "flatten_code", ",", "category_logits", ",", "packed_audio", ".", "batch_sizes", ",", "kl_loss_total", "\n", "", "return", "category_logits", ",", "packed_audio", ".", "batch_sizes", "\n", "\n", "", "def", "decode", "(", "self", ",", "flatten_code", ",", "speaker", ",", "downsampled_batch_sizes", ",", "output_lengths", ")", ":", "\n", "\t\t", "packed_code", "=", "self", ".", "speaker_coloring", "(", "flatten_code", ",", "speaker", ",", "downsampled_batch_sizes", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.decode": [[73, 80], ["cognition.Cognition.speaker_coloring", "torch.nn.utils.rnn.pad_packed_sequence", "cognition.Cognition.transpose().contiguous", "cognition.Cognition.upsample", "output_lengths[].item", "cognition.Cognition.transpose"], "methods", ["None"], ["padded_code", ",", "_", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pad_packed_sequence", "(", "packed_code", ",", "batch_first", "=", "True", ")", "\n", "padded_code", "=", "padded_code", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "\n", "padded_code", "=", "self", ".", "upsample", "(", "padded_code", ",", "output_lengths", "[", "0", "]", ".", "item", "(", ")", ")", "\n", "return", "padded_code", "\n", "\n", "", "def", "count_consecutive_repetitions", "(", "self", ",", "flatten_code", ",", "batch_sizes", ")", ":", "\n", "\t\t", "map_categories", "=", "flatten_code", ".", "argmax", "(", "dim", "=", "-", "1", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.count_consecutive_repetitions": [[81, 91], ["flatten_code.argmax", "rnn_utils.pad_flatten_sequence", "torch.stack", "seq.unique_consecutive", "torch.stack.append", "torch.nn.utils.rnn.pack_padded_sequence"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence"], ["padded_cat", ",", "lengths", "=", "pad_flatten_sequence", "(", "map_categories", ",", "batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "out", "=", "[", "]", "\n", "for", "seq", "in", "padded_cat", ":", "\n", "\t\t\t", "_", ",", "inverse_indices", ",", "counts", "=", "seq", ".", "unique_consecutive", "(", "return_inverse", "=", "True", ",", "return_counts", "=", "True", ")", "\n", "out", ".", "append", "(", "counts", "[", "inverse_indices", "]", ")", "\n", "", "out", "=", "torch", ".", "stack", "(", "out", ",", "dim", "=", "0", ")", "\n", "out", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_padded_sequence", "(", "out", ",", "lengths", ",", "batch_first", "=", "True", ")", ".", "data", "\n", "return", "out", "\n", "\n", "", "def", "pack_init_args", "(", "self", ")", ":", "\n", "\t\t", "args", "=", "self", ".", "vae", ".", "pack_init_args", "(", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.pack_init_args": [[93, 101], ["cognition.Cognition.vae.pack_init_args"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args"], ["args", "[", "'hidden_size'", "]", "=", "self", ".", "hidden_size", "\n", "args", "[", "'output_size'", "]", "=", "self", ".", "output_size", "\n", "args", "[", "'num_speakers'", "]", "=", "self", ".", "speaker_coloring", ".", "num_speakers", "\n", "args", "[", "'jitter_prob'", "]", "=", "self", ".", "time_jitter", ".", "p", "\n", "return", "args", "\n", "\n", "", "", "class", "TimeJitter", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n", "\t"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.TimeJitter.__init__": [[106, 109], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\n", "", "def", "forward", "(", "self", ",", "x", ",", "batch_sizes", ")", ":", "\n", "\t\t", "if", "self", ".", "training", ":", "\n", "\t\t\t", "samples", "=", "torch", ".", "rand_like", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.TimeJitter.forward": [[110, 116], ["torch.rand_like", "cognition.TimeJitter._get_shifted_idxs", "x[].where", "x[].where"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.TimeJitter._get_shifted_idxs"], ["t_minus_1", ",", "t_plus_1", "=", "self", ".", "_get_shifted_idxs", "(", "batch_sizes", ")", "\n", "x", "=", "x", "[", "t_minus_1", "]", ".", "where", "(", "samples", "<", "self", ".", "p", "*", ".5", ",", "x", "[", "t_plus_1", "]", ".", "where", "(", "samples", ">=", "1", "-", "self", ".", "p", "*", ".5", ",", "x", ")", ")", "\n", "", "return", "x", "\n", "\n", "", "def", "_get_shifted_idxs", "(", "self", ",", "batch_sizes", ")", ":", "\n", "\t\t", "idxs", "=", "[", "list", "(", "range", "(", "batch_sizes", "[", "0", "]", ")", ")", "]", "+", "[", "list", "(", "range", "(", "start", ",", "start", "+", "bs", ")", ")", "for", "bs", ",", "start", "in", "zip", "(", "batch_sizes", "[", "1", ":", "]", ",", "batch_sizes", ".", "cumsum", "(", "0", ")", "[", ":", "-", "1", "]", ")", "]", "\n", "t_minus_1", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.TimeJitter._get_shifted_idxs": [[117, 127], ["range", "batch_sizes.size", "max", "min", "list", "list", "range", "range", "zip", "batch_sizes.size", "batch_sizes.cumsum"], "methods", ["None"], ["t_plus_1", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "batch_sizes", ".", "size", "(", "0", ")", ")", ":", "\n", "\t\t\t", "tm1_or_0", "=", "max", "(", "t", "-", "1", ",", "0", ")", "\n", "t_minus_1", "+=", "idxs", "[", "tm1_or_0", "]", "[", ":", "batch_sizes", "[", "t", "]", "]", "\n", "tp1_or_T", "=", "min", "(", "t", "+", "1", ",", "batch_sizes", ".", "size", "(", "0", ")", "-", "1", ")", "\n", "t_plus_1", "+=", "idxs", "[", "tp1_or_T", "]", "+", "idxs", "[", "t", "]", "[", "batch_sizes", "[", "tp1_or_T", "]", ":", "]", "\n", "", "return", "t_minus_1", ",", "t_plus_1", "\n", "\n", "", "", "class", "SpeakerColoring", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n", "\t", "def", "__init__", "(", "self", ",", "num_speakers", ",", "input_size", ",", "hidden_size", ",", "num_layers", "=", "3", ")", ":", "\n", "\t\t", "super", "(", "SpeakerColoring", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.SpeakerColoring.__init__": [[129, 135], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.LSTM"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["self", ".", "embed_speaker_for_input", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_speakers", ",", "input_size", ")", "\n", "self", ".", "embed_speaker_for_init", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_speakers", ",", "2", "*", "hidden_size", "*", "num_layers", ")", "\n", "self", ".", "rnn", "=", "torch", ".", "nn", ".", "LSTM", "(", "input_size", "*", "2", ",", "hidden_size", ",", "num_layers", "=", "num_layers", ",", "batch_first", "=", "True", ",", "bidirectional", "=", "True", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "flatten_code", ",", "speaker", ",", "code_batch_sizes", ")", ":", "\n", "\t\t", "speaker_for_input", "=", "self", ".", "embed_speaker_for_input", "(", "speaker", ")", "\n", "speaker_for_input", "=", "torch", ".", "cat", "(", "[", "speaker_for_input", "[", ":", "bs", "]", "for", "bs", "in", "code_batch_sizes", "]", ",", "dim", "=", "0", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.SpeakerColoring.forward": [[136, 149], ["cognition.SpeakerColoring.embed_speaker_for_input", "torch.cat", "torch.cat", "rnn_utils.pad_flatten_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "cognition.SpeakerColoring.embed_speaker_for_init", "init_hidden.view().transpose().contiguous.view().transpose().contiguous.view().transpose().contiguous", "cognition.SpeakerColoring.rnn", "torch.zeros_like", "init_hidden.view().transpose().contiguous.view().transpose().contiguous.view().transpose", "init_hidden.view().transpose().contiguous.view().transpose().contiguous.view", "speaker.size"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence"], ["flatten_code", "=", "torch", ".", "cat", "(", "[", "flatten_code", ",", "speaker_for_input", "]", ",", "dim", "=", "-", "1", ")", "\n", "padded_code", ",", "code_lengths", "=", "pad_flatten_sequence", "(", "flatten_code", ",", "code_batch_sizes", ")", "\n", "packed_code", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_padded_sequence", "(", "padded_code", ",", "code_lengths", ")", "\n", "\n", "init_hidden", "=", "self", ".", "embed_speaker_for_init", "(", "speaker", ")", "\n", "init_hidden", "=", "init_hidden", ".", "view", "(", "speaker", ".", "size", "(", "0", ")", ",", "2", "*", "self", ".", "rnn", ".", "num_layers", ",", "-", "1", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "init_hidden", "=", "(", "init_hidden", ",", "torch", ".", "zeros_like", "(", "init_hidden", ")", ")", "\n", "\n", "packed_code", ",", "_", "=", "self", ".", "rnn", "(", "packed_code", ",", "init_hidden", ")", "\n", "return", "packed_code", "\n", "\n", "\n", "\n", "", "", "class", "Upsample", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Upsample.__init__": [[163, 187], ["super().__init__", "zip", "transforms.append", "torch.nn.Sequential", "transforms.append", "transforms.append", "torch.nn.ConvTranspose1d", "zip", "torch.nn.ConvTranspose1d", "torch.nn.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["padding", "=", "p", ")", "\n", ")", "\n", "transforms", ".", "append", "(", "torch", ".", "nn", ".", "LeakyReLU", "(", ")", ")", "\n", "ic", "=", "oc", "\n", "", "transforms", ".", "append", "(", "\n", "torch", ".", "nn", ".", "ConvTranspose1d", "(", "\n", "ic", ",", "out_channels", ",", "\n", "kernel_size", "=", "kernels", "[", "-", "1", "]", ",", "stride", "=", "strides", "[", "-", "1", "]", ",", "\n", "padding", "=", "paddings", "[", "-", "1", "]", ")", "\n", ")", "\n", "self", ".", "transforms", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "transforms", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "output_size", "=", "None", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "transforms", "(", "x", ")", "\n", "x", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "x", ",", "size", "=", "output_size", ",", "mode", "=", "'nearest'", ")", "# Currently (Pytorch ver. 1.4 stable), this interpolation is somehow necessary to prevent \"RuntimeError: grad_columns needs to be contiguous\" even when the length of x is already as desired.", "\n", "return", "x", "\n", "\n", "\n", "", "", "class", "ABCD_VAE", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n", "\t", "\"\"\"\n\t\"A\"ttention-\"B\"ased \"C\"ategorical sampling with the \"D\"irichlet prior.\n\t\"\"\"", "\n", "def", "__init__", "(", "self", ",", "\n", "input_size", ",", "\n", "num_categories", ",", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Upsample.forward": [[188, 192], ["cognition.Upsample.transforms", "torch.nn.functional.interpolate"], "methods", ["None"], ["feature_dim", ",", "\n", "mlp_hidden_size", ",", "\n", "data_size", ",", "\n", "prior_concentration", "=", "1.0", ",", "\n", "min_temperature", "=", "0.5", ",", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.__init__": [[198, 237], ["super().__init__", "cognition.MLP", "cognition.ABCD_VAE.update_temperature", "cognition.ABCD_VAE.register_buffer", "cognition.ABCD_VAE.register_parameter", "cognition.ABCD_VAE.register_parameter", "torch.tensor", "torch.nn.Parameter", "torch.nn.Parameter", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.update_temperature"], ["\t\t", "super", "(", "ABCD_VAE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_categories", "=", "num_categories", "\n", "self", ".", "to_code_like", "=", "MLP", "(", "input_size", ",", "mlp_hidden_size", ",", "feature_dim", ")", "\n", "self", ".", "min_temperature", "=", "min_temperature", "\n", "self", ".", "iter_counts", "=", "iter_counts", "\n", "self", ".", "pretrain_iters", "=", "pretrain_iters", "\n", "self", ".", "temperature_update_freq", "=", "temperature_update_freq", "\n", "self", ".", "temperature_anneal_rate", "=", "temperature_anneal_rate", "\n", "self", ".", "data_size", "=", "data_size", "\n", "self", ".", "update_temperature", "(", "(", "self", ".", "iter_counts", "//", "self", ".", "temperature_update_freq", ")", "*", "self", ".", "temperature_update_freq", ")", "\n", "self", ".", "register_buffer", "(", "\n", "\"prior_concentration\"", ",", "\n", "torch", ".", "tensor", "(", "prior_concentration", ")", "\n", ")", "\n", "self", ".", "register_parameter", "(", "\n", "\"posterior_shape_logits\"", ",", "\n", "torch", ".", "nn", ".", "Parameter", "(", "\n", "torch", ".", "randn", "(", "num_categories", ")", ",", "\n", "requires_grad", "=", "True", "\n", ")", "\n", ")", "\n", "self", ".", "register_parameter", "(", "\n", "\"codebook\"", ",", "\n", "torch", ".", "nn", ".", "Parameter", "(", "\n", "torch", ".", "randn", "(", "(", "feature_dim", ",", "num_categories", ")", ")", ",", "\n", "requires_grad", "=", "True", "\n", ")", "\n", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tConvert vectors into the unnormalized log posterior distribution of the categorical variable, z.\n\t\tThat is, q(z | x), where x is the data.\n\t\tThe logits are given by the unnormalized cosine similarity b/w the transformed x and the codebook.\n\t\t(Or Attention weights to the codebook.)\n\t\t\"\"\"", "\n", "x", "=", "self", ".", "to_code_like", "(", "x", ")", "\n", "logits", "=", "torch", ".", "mm", "(", "x", ",", "self", ".", "codebook", ")", "/", "math", ".", "sqrt", "(", "x", ".", "size", "(", "-", "1", ")", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.forward": [[240, 250], ["cognition.ABCD_VAE.to_code_like", "torch.mm", "math.sqrt", "cognition.ABCD_VAE.size"], "methods", ["None"], ["\n", "if", "no_sample", ":", "\n", "\t\t\t", "sample", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "logits", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "\t\t\t", "sample", "=", "torch", ".", "nn", ".", "functional", ".", "gumbel_softmax", "(", "logits", ",", "tau", "=", "self", ".", "temperature", ",", "dim", "=", "-", "1", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.sample": [[251, 266], ["torch.mm", "torch.nn.functional.softmax", "torch.nn.functional.gumbel_softmax", "cognition.ABCD_VAE.codebook.t"], "methods", ["None"], ["", "features", "=", "torch", ".", "mm", "(", "sample", ",", "self", ".", "codebook", ".", "t", "(", ")", ")", "\n", "return", "features", "\n", "\n", "", "def", "get_map_inference", "(", "self", ",", "logits", ")", ":", "\n", "\t\t", "map_categories", "=", "logits", ".", "argmax", "(", "-", "1", ")", "\n", "one_hot", "=", "torch", ".", "nn", ".", "functional", ".", "one_hot", "(", "map_categories", ",", "num_classes", "=", "self", ".", "num_categories", ")", "\n", "features", "=", "torch", ".", "mm", "(", "one_hot", ".", "float", "(", ")", ",", "self", ".", "codebook", ".", "t", "(", ")", ")", "\n", "return", "one_hot", ",", "features", "\n", "\n", "", "def", "kl_divergence", "(", "self", ",", "logits", ",", "data_weights", "=", "1.0", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tKL(q(pi)*q(z|x) || p(pi)*p(z|pi))\n\t\t\"\"\"", "\n", "if", "isinstance", "(", "data_weights", ",", "torch", ".", "Tensor", ")", "and", "data_weights", ".", "ndim", "==", "1", ":", "\n", "\t\t\t", "data_weights", "=", "data_weights", "[", ":", ",", "None", "]", "\n", "# Eq[log q(pi)]", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.get_map_inference": [[267, 272], ["logits.argmax", "torch.nn.functional.one_hot", "torch.mm", "torch.nn.functional.one_hot.float", "cognition.ABCD_VAE.codebook.t"], "methods", ["None"], ["# Optimal pars of the posterior Dirichlet is", "\n", "# a distribution of the total data size + the prior pseudo counts.", "\n", "", "posterior_shape", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "self", ".", "posterior_shape_logits", ",", "-", "1", ")", "\n", "posterior_concentration", "=", "posterior_shape", "*", "self", ".", "data_size", "+", "self", ".", "prior_concentration", "\n", "sum_posterior_concentration", "=", "posterior_concentration", ".", "sum", "(", ")", "\n", "expected_log_pi", "=", "posterior_concentration", ".", "digamma", "(", ")", "-", "sum_posterior_concentration", ".", "digamma", "(", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.kl_divergence": [[273, 307], ["torch.nn.functional.softmax", "posterior_concentration.sum", "torch.nn.functional.softmax", "torch.nn.functional.log_softmax", "logits.size", "isinstance", "posterior_concentration.digamma", "posterior_concentration.sum.digamma", "posterior_concentration.sum.lgamma", "posterior_concentration.lgamma().sum", "cognition.ABCD_VAE.prior_concentration.lgamma", "posterior_concentration.lgamma"], "methods", ["None"], ["Eq_log_q_pi", "=", "sum_posterior_concentration", ".", "lgamma", "(", ")", "-", "posterior_concentration", ".", "lgamma", "(", ")", ".", "sum", "(", ")", "+", "(", "(", "posterior_concentration", "-", "1.0", ")", "*", "expected_log_pi", ")", ".", "sum", "(", ")", "\n", "\n", "# Eq[log p(pi)]", "\n", "Eq_log_p_pi", "=", "(", "self", ".", "prior_concentration", "*", "self", ".", "num_categories", ")", ".", "lgamma", "(", ")", "-", "self", ".", "prior_concentration", ".", "lgamma", "(", ")", "*", "self", ".", "num_categories", "+", "(", "(", "self", ".", "prior_concentration", "-", "1.0", ")", "*", "expected_log_pi", ")", ".", "sum", "(", ")", "\n", "\n", "# Eq[log q(z|x)]", "\n", "q_z", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "logits", ",", "-", "1", ")", "\n", "log_q_z", "=", "torch", ".", "nn", ".", "functional", ".", "log_softmax", "(", "logits", ",", "-", "1", ")", "# More stable than q_z.log()", "\n", "Eq_log_q_z", "=", "(", "q_z", "*", "log_q_z", "*", "data_weights", ")", ".", "sum", "(", ")", "\n", "\n", "# Eq[log p(z|pi)]", "\n", "Eq_log_p_z", "=", "(", "q_z", "*", "expected_log_pi", "[", "None", ",", ":", "]", "*", "data_weights", ")", ".", "sum", "(", ")", "\n", "\n", "batch_size", "=", "logits", ".", "size", "(", "0", ")", "\n", "\n", "kl", "=", "(", "Eq_log_q_pi", "-", "Eq_log_p_pi", ")", "*", "(", "batch_size", "/", "self", ".", "data_size", ")", "+", "Eq_log_q_z", "-", "Eq_log_p_z", "\n", "return", "kl", "\n", "\n", "", "def", "log_pmf", "(", "self", ",", "targets", ",", "logits", ")", ":", "\n", "\t\t", "return", "torch", ".", "nn", ".", "functional", ".", "cross_entropy", "(", "logits", ",", "targets", ",", "reduction", "=", "'sum'", ")", "\n", "\n", "", "def", "increment_iter_counts", "(", "self", ")", ":", "\n", "\t\t", "self", ".", "iter_counts", "+=", "1", "\n", "if", "max", "(", "1", ",", "self", ".", "iter_counts", "-", "self", ".", "pretrain_iters", ")", "%", "self", ".", "temperature_update_freq", "==", "0", ":", "\n", "\t\t\t", "self", ".", "update_temperature", "(", ")", "\n", "\n", "", "", "def", "update_temperature", "(", "self", ",", "steps", "=", "None", ")", ":", "\n", "\t\t", "if", "steps", "is", "None", ":", "\n", "\t\t\t", "steps", "=", "self", ".", "iter_counts", "\n", "", "steps", "-=", "self", ".", "pretrain_iters", "\n", "self", ".", "temperature", "=", "min", "(", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.log_pmf": [[308, 310], ["torch.nn.functional.cross_entropy"], "methods", ["None"], ["self", ".", "min_temperature", ",", "\n", "math", ".", "exp", "(", "-", "self", ".", "temperature_anneal_rate", "*", "steps", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.increment_iter_counts": [[311, 315], ["cognition.ABCD_VAE.update_temperature", "max"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.update_temperature"], ["\n", "", "def", "is_pretrain", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "iter_counts", "<", "self", ".", "pretrain_iters", "\n", "\n", "", "def", "set_pretrain_iters", "(", "self", ",", "pretrain_iters", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.update_temperature": [[316, 323], ["min", "math.exp"], "methods", ["None"], ["\t\t", "self", ".", "pretrain_iters", "=", "pretrain_iters", "\n", "\n", "", "def", "pack_init_args", "(", "self", ")", ":", "\n", "\t\t", "parameters", "=", "{", "\n", "\"input_size\"", ":", "self", ".", "to_code_like", ".", "input_size", ",", "\n", "\"num_categories\"", ":", "self", ".", "num_categories", ",", "\n", "\"mlp_hidden_size\"", ":", "self", ".", "to_code_like", ".", "hidden_size", ",", "\n", "\"feature_dim\"", ":", "self", ".", "to_code_like", ".", "output_size", ",", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.is_pretrain": [[325, 327], ["None"], "methods", ["None"], ["\"prior_concentration\"", ":", "self", ".", "prior_concentration", ".", "item", "(", ")", ",", "\n", "\"min_temperature\"", ":", "self", ".", "min_temperature", ",", "\n", "\"temperature_update_freq\"", ":", "self", ".", "temperature_update_freq", ",", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.set_pretrain_iters": [[328, 330], ["None"], "methods", ["None"], ["\"temperature_anneal_rate\"", ":", "self", ".", "temperature_anneal_rate", ",", "\n", "\"iter_counts\"", ":", "self", ".", "iter_counts", ",", "\n", "\"pretrain_iters\"", ":", "self", ".", "pretrain_iters", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args": [[331, 346], ["cognition.ABCD_VAE.prior_concentration.item"], "methods", ["None"], ["}", "\n", "return", "parameters", "\n", "\n", "\n", "", "", "class", "MLP", "(", "torch", ".", "jit", ".", "ScriptModule", ")", ":", "\n", "\t", "\"\"\"\n\tMulti-Layer Perceptron.\n\t\"\"\"", "\n", "def", "__init__", "(", "self", ",", "input_size", ",", "hidden_size", ",", "output_size", ")", ":", "\n", "\t\t", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "whole_network", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Linear", "(", "input_size", ",", "hidden_size", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", ")", ",", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.MLP.__init__": [[352, 361], ["super().__init__", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\t\t", "return", "self", ".", "whole_network", "(", "batched_input", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.MLP.forward": [[363, 366], ["cognition.MLP.whole_network"], "methods", ["None"], []], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN.__init__": [[29, 50], ["super().__init__", "audition.ESN._init_parameters", "torch.nn.Dropout", "torch.nn.Tanh", "audition.ESN._init_parameters"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN._init_parameters", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN._init_parameters"], ["padded", "=", "padded", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "padded", "=", "self", ".", "network", "(", "padded", ")", "\n", "padded", "=", "padded", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "lengths", "=", "lengths", "//", "2", "\n", "packed", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_padded_sequence", "(", "padded", ",", "lengths", ",", "batch_first", "=", "True", ")", "\n", "return", "packed", "\n", "\n", "", "def", "pack_init_args", "(", "self", ")", ":", "\n", "\t\t", "args", "=", "{", "\n", "\"in_channel\"", ":", "self", ".", "in_channel", ",", "\n", "\"out_channel\"", ":", "self", ".", "out_channel", ",", "\n", "}", "\n", "return", "args", "\n", "\n", "\n", "", "", "class", "ConvSubLayer", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n", "\t", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ",", "filter_length", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "\t\t", "super", "(", "ConvSubLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv1d", "(", "in_channel", ",", "out_channel", ",", "kernel_size", "=", "filter_length", ",", "stride", "=", "stride", ",", "padding", "=", "(", "filter_length", "-", "stride", ")", "//", "2", ",", "padding_mode", "=", "'zeros'", ")", "\n", "self", ".", "relu", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "residual_connection", "=", "(", "in_channel", "==", "out_channel", ")", "and", "(", "stride", "==", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN._init_parameters": [[51, 91], ["spstats.binom.ppf().astype", "audition.ESN.register_parameter", "spstats.binom.ppf().astype", "range", "torch.nn.Parameter", "audition.ESN.register_parameter", "audition.ESN.register_parameter", "getattr", "torch.eig", "spstats.binom.ppf", "spstats.binom.ppf", "torch.nn.Parameter", "range", "torch.nn.Parameter", "torch.nn.Dropout", "eig_val.pow().sum().max().sqrt", "torch.randn", "torch.randint", "eig_val.pow().sum().max", "torch.randint", "eig_val.pow().sum", "eig_val.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_", ")", ":", "\n", "\t\t", "output", "=", "self", ".", "conv", "(", "input_", ")", "\n", "output", "=", "self", ".", "relu", "(", "output", ")", "\n", "# output = torch.nn.functional.pad(output, (self.left_padding, self.right_padding), mode='constant', value=0.0)", "\n", "if", "self", ".", "residual_connection", ":", "\n", "\t\t\t", "output", "=", "output", "+", "input_", "\n", "", "return", "output", "", "", "", ""]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN.forward": [[93, 117], ["torch.cat.view", "range", "torch.cat", "rnn_utils.pad_flatten_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "audition.ESN.init_hidden", "torch.cat.to", "torch.cat.size", "torch.cat.size", "audition.ESN._forward_per_layer", "audition.ESN.drop", "torch.cat", "getattr", "getattr", "audition.ESN._forward_per_layer_backward", "torch.cat", "getattr", "getattr", "audition.ESN.init_hidden"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN.init_hidden", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN._forward_per_layer", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN._forward_per_layer_backward", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN.init_hidden"], []], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN._forward_per_layer": [[118, 144], ["weight_ih.mm", "h_0.t", "torch.cat().to", "range", "torch.cat", "torch.cat", "flatten_input.t", "len", "weight_hh.to_sparse().mm", "torch.cat.t", "torch.cat.t().view", "torch.cat", "torch.cat.size", "torch.cat.size", "weight_hh.to_sparse", "audition.ESN.activation", "torch.cat.t", "torch.tensor"], "methods", ["None"], []], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN._forward_per_layer_backward": [[145, 167], ["weight_ih.mm", "h_0.t", "torch.cat().to", "batch_sizes.flip", "range", "torch.cat", "flatten_input.t", "len", "weight_hh.to_sparse().mm", "torch.cat", "torch.cat.t", "torch.cat.t().view", "torch.cat", "torch.cat.size", "torch.cat.size", "weight_hh.to_sparse", "audition.ESN.activation", "torch.cat.t", "batch_sizes[].flip", "torch.tensor"], "methods", ["None"], []], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.audition.ESN.init_hidden": [[168, 170], ["torch.zeros"], "methods", ["None"], []], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Downsample.__init__": [[151, 154], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__"], ["\t\t", "super", "(", "Upsample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "kernels", "is", "None", ":", "\n", "\t\t\t", "kernels", "=", "[", "s", "**", "2", "for", "s", "in", "strides", "]", "\n", "", "paddings", "=", "[", "(", "k", "-", "s", ")", "//", "2", "for", "s", ",", "k", "in", "zip", "(", "strides", ",", "kernels", ")", "]", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Downsample.forward": [[155, 161], ["torch.nn.utils.rnn.pad_packed_sequence", "padded[].contiguous", "torch.nn.utils.rnn.pack_padded_sequence"], "methods", ["None"], ["transforms", "=", "[", "]", "\n", "ic", "=", "in_channels", "\n", "oc", "=", "hidden_channels", "\n", "for", "k", ",", "s", ",", "p", "in", "zip", "(", "kernels", "[", ":", "-", "1", "]", ",", "strides", "[", ":", "-", "1", "]", ",", "paddings", "[", ":", "-", "1", "]", ")", ":", "\n", "\t\t\t", "transforms", ".", "append", "(", "\n", "torch", ".", "nn", ".", "ConvTranspose1d", "(", "\n", "ic", ",", "oc", ",", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.loss.F0Loss.forward": [[50, 52], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.F0.__init__": [[171, 176], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.sound_transforms.F0.__call__": [[177, 185], ["parselmouth.Sound", "parselmouth.Sound.to_pitch", "numpy.array", "numpy.clip", "torch.from_numpy", "torch.nn.functional.interpolate().view", "numpy.nan_to_num", "parselmouth.Sound.to_pitch.get_value_in_frame", "torch.nn.functional.interpolate", "range", "parselmouth.Sound.to_pitch.get_number_of_frames"], "methods", ["None"], []], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.test.Tester.__init__": [[14, 24], ["torch.manual_seed", "torch.cuda.manual_seed_all", "torch.device", "test.Tester.retrieve_model", "test.Tester.parameters", "test.Tester.audition.eval", "test.Tester.cognition.eval", "test.Tester.articulation.eval"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.retrieve_model"], ["\t", "def", "__init__", "(", "self", ",", "model_config_path", ",", "device", "=", "'cpu'", ",", "seed", "=", "111", ")", ":", "\n", "\t\t", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "\n", "self", ".", "retrieve_model", "(", "checkpoint_path", "=", "model_config_path", ",", "device", "=", "device", ")", "\n", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "\t\t\t", "param", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "audition", ".", "eval", "(", ")", "# Turn off dropout", "\n", "self", ".", "cognition", ".", "eval", "(", ")", "\n", "self", ".", "articulation", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.test.Tester.encode_and_decode": [[26, 62], ["torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.no_grad", "torch.nn.utils.rnn.pad_packed_sequence", "input_frames.to.to.to", "test.Tester.audition", "test.Tester.cognition.encode", "logits.softmax", "test.Tester.cognition.vae.get_map_inference", "modules.rnn_utils.pad_flatten_sequence", "modules.rnn_utils.pad_flatten_sequence", "modules.rnn_utils.pad_flatten_sequence", "one_hot_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "features_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "probs_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "code_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "isinstance", "isinstance", "speaker.expand().to.expand().to.expand().to", "test.Tester.cognition.decode", "test.Tester.articulation", "wav_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "out_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "one_hot_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "features_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "probs_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "code_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu", "speaker.expand().to.expand().to.expand", "wav_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "out_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.encode", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.get_map_inference", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.decode"], ["", "def", "encode_and_decode", "(", "self", ",", "input_frames", ",", "target_wav", ",", "speaker", ",", "is_packed", "=", "False", ",", "to_numpy", "=", "True", ")", ":", "\n", "\t\t", "if", "not", "is_packed", ":", "\n", "\t\t\t", "if", "not", "isinstance", "(", "input_frames", ",", "list", ")", ":", "\n", "\t\t\t\t", "input_frames", "=", "[", "input_frames", "]", "\n", "", "if", "not", "isinstance", "(", "target_wav", ",", "list", ")", ":", "\n", "\t\t\t\t", "target_wav", "=", "[", "target_wav", "]", "\n", "", "input_frames", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "input_frames", ")", "\n", "target_wav", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "target_wav", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "_", ",", "out_lengths", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pad_packed_sequence", "(", "target_wav", ",", "batch_first", "=", "True", ")", "\n", "input_frames", "=", "input_frames", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "code", "=", "self", ".", "audition", "(", "input_frames", ")", "\n", "logits", ",", "downsampled_batch_sizes", "=", "self", ".", "cognition", ".", "encode", "(", "code", ")", "\n", "\n", "probs", "=", "logits", ".", "softmax", "(", "-", "1", ")", "\n", "one_hot", ",", "features", "=", "self", ".", "cognition", ".", "vae", ".", "get_map_inference", "(", "logits", ")", "\n", "one_hot_padded", ",", "code_lengths", "=", "rnn_utils", ".", "pad_flatten_sequence", "(", "one_hot", ",", "downsampled_batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "features_padded", ",", "_", "=", "rnn_utils", ".", "pad_flatten_sequence", "(", "features", ",", "downsampled_batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "probs_padded", ",", "_", "=", "rnn_utils", ".", "pad_flatten_sequence", "(", "probs", ",", "downsampled_batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "if", "speaker", "is", "None", ":", "\n", "\t\t\t\t", "wav_padded", "=", "None", "\n", "out_lengths", "=", "None", "\n", "", "else", ":", "\n", "\t\t\t\t", "speaker", "=", "speaker", ".", "expand", "(", "input_frames", ".", "batch_sizes", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "features", "=", "self", ".", "cognition", ".", "decode", "(", "features", ",", "speaker", ",", "downsampled_batch_sizes", ",", "out_lengths", ")", "\n", "wav_padded", "=", "self", ".", "articulation", "(", "features", ",", "out_lengths", ")", "\n", "", "", "if", "to_numpy", ":", "\n", "\t\t\t", "one_hot_padded", "=", "one_hot_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "features_padded", "=", "features_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "probs_padded", "=", "probs_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "code_lengths", "=", "code_lengths", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "not", "speaker", "is", "None", ":", "\n", "\t\t\t\t", "wav_padded", "=", "wav_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "out_lengths", "=", "out_lengths", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "", "return", "one_hot_padded", ",", "probs_padded", ",", "features_padded", ",", "code_lengths", ",", "wav_padded", ",", "out_lengths", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.test.Tester.main": [[64, 121], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset.df_director.fillna", "dataset.df_director.fillna.groupby", "os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "dataset.reset_director", "modules.data_utils.get_data_loader", "torch.tensor", "test.Tester.encode_and_decode", "enumerate", "pandas.DataFrame", "pandas.DataFrame.to_csv", "pandas.DataFrame", "pandas.DataFrame.to_csv", "pandas.DataFrame", "pandas.DataFrame.to_csv", "os.path.splitext", "test.Tester.omit_consecutive_repetition", "os.path.join", "scipy.write", "os.path.basename", "os.path.join", "os.path.join", "os.path.join", "filename_wo_ext.split"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.reset_director", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.get_data_loader", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.Tester.encode_and_decode", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.test.Tester.omit_consecutive_repetition"], ["", "def", "main", "(", "\n", "self", ",", "\n", "dataset", ",", "\n", "save_dir", ",", "\n", "synthesis_speaker_col", "=", "'synthesis_speaker'", ",", "\n", "batch_size", "=", "1", ",", "\n", "num_workers", "=", "1", ",", "\n", "omit_repetition", "=", "False", "\n", ")", ":", "\n", "\t\t", "feature_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'as_features/'", ")", "\n", "prob_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'as_probs/'", ")", "\n", "onehot_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'as_one-hot/'", ")", "\n", "synthesis_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'synthesis/'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "feature_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "feature_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "prob_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "prob_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "onehot_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "onehot_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "synthesis_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "synthesis_dir", ")", "\n", "", "full_df", "=", "dataset", ".", "df_director", ".", "fillna", "(", "value", "=", "{", "synthesis_speaker_col", ":", "'__NA__'", "}", ")", "\n", "for", "synthesis_speaker", ",", "sub_df", "in", "full_df", ".", "groupby", "(", "synthesis_speaker_col", ")", ":", "\n", "\t\t\t", "dataset", ".", "reset_director", "(", "sub_df", ")", "\n", "if", "synthesis_speaker", "==", "'__NA__'", ":", "\n", "\t\t\t\t", "synthesis_speaker", "=", "None", "\n", "", "else", ":", "\n", "\t\t\t\t", "synthesis_speaker_name", "=", "synthesis_speaker", "\n", "synthesis_speaker", "=", "torch", ".", "tensor", "(", "dataset", ".", "speaker2ix", "[", "synthesis_speaker", "]", ")", "\n", "", "dataloader", "=", "data_utils", ".", "get_data_loader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "num_workers", ")", "\n", "for", "input_frames", ",", "target_wav", ",", "speaker", ",", "data_ixs", "in", "dataloader", ":", "\n", "\n", "\t\t\t\t", "one_hot_padded", ",", "probs_padded", ",", "features_padded", ",", "code_lengths", ",", "wav_padded", ",", "out_lengths", "=", "self", ".", "encode_and_decode", "(", "input_frames", ",", "target_wav", ",", "synthesis_speaker", ",", "is_packed", "=", "True", ",", "to_numpy", "=", "True", ")", "\n", "\n", "data_paths", "=", "dataset", ".", "df_director", ".", "loc", "[", "data_ixs", ",", "dataset", ".", "path_col", "]", "\n", "for", "ix_in_batch", ",", "p", "in", "enumerate", "(", "data_paths", ")", ":", "\n", "\t\t\t\t\t", "filename_wo_ext", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "p", ")", ")", "[", "0", "]", "\n", "\n", "code_l", "=", "code_lengths", "[", "ix_in_batch", "]", "\n", "one_hot", "=", "one_hot_padded", "[", "ix_in_batch", ",", ":", "code_l", ",", ":", "]", "\n", "features", "=", "features_padded", "[", "ix_in_batch", ",", ":", "code_l", ",", ":", "]", "\n", "probs", "=", "probs_padded", "[", "ix_in_batch", ",", ":", "code_l", ",", ":", "]", "\n", "if", "omit_repetition", ":", "\n", "\t\t\t\t\t\t", "one_hot", ",", "features", ",", "probs", "=", "self", ".", "omit_consecutive_repetition", "(", "one_hot", ",", "features", ",", "probs", ")", "\n", "\n", "", "df_category", "=", "pd", ".", "DataFrame", "(", "one_hot", ")", "\n", "df_category", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "onehot_dir", ",", "filename_wo_ext", ")", "+", "'.txt'", ",", "index", "=", "False", ",", "header", "=", "None", ",", "sep", "=", "' '", ")", "\n", "df_feat", "=", "pd", ".", "DataFrame", "(", "features", ")", "\n", "df_feat", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "feature_dir", ",", "filename_wo_ext", ")", "+", "'.txt'", ",", "index", "=", "False", ",", "header", "=", "None", ",", "sep", "=", "' '", ")", "\n", "df_prob", "=", "pd", ".", "DataFrame", "(", "probs", ")", "\n", "df_prob", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "prob_dir", ",", "filename_wo_ext", ")", "+", "'.txt'", ",", "index", "=", "False", ",", "header", "=", "None", ",", "sep", "=", "' '", ")", "\n", "if", "not", "synthesis_speaker", "is", "None", ":", "\n", "\t\t\t\t\t\t", "out_l", "=", "out_lengths", "[", "ix_in_batch", "]", "\n", "wav", "=", "wav_padded", "[", "ix_in_batch", ",", ":", "out_l", "]", "\n", "filename_wo_ext", "=", "'_'", ".", "join", "(", "[", "synthesis_speaker_name", "]", "+", "filename_wo_ext", ".", "split", "(", "'_'", ")", "[", "1", ":", "]", ")", "\n", "basename", "=", "os", ".", "path", ".", "join", "(", "synthesis_dir", ",", "filename_wo_ext", ")", "\n", "spw", ".", "write", "(", "basename", "+", "'.wav'", ",", "dataset", ".", "fs", ",", "wav", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.test.Tester.omit_consecutive_repetition": [[122, 134], ["out.append"], "methods", ["None"], ["", "", "", "", "", "def", "omit_consecutive_repetition", "(", "self", ",", "vecs", ",", "*", "other_vecs", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tOmit consecutive repetitions in vecs.\n\t\tvecs: ndarray[time,dim]\n\t\t\"\"\"", "\n", "changes", "=", "[", "True", "]", "+", "(", "vecs", "[", ":", "-", "1", "]", "!=", "vecs", "[", "1", ":", "]", ")", ".", "any", "(", "axis", "=", "-", "1", ")", ".", "tolist", "(", ")", "\n", "out", "=", "vecs", "[", "changes", ",", "...", "]", "\n", "if", "other_vecs", ":", "\n", "\t\t\t", "out", "=", "[", "out", "]", "\n", "for", "v", "in", "other_vecs", ":", "\n", "\t\t\t\t", "out", ".", "append", "(", "v", "[", "changes", ",", "...", "]", ")", "\n", "", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.test.get_args": [[136, 159], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "", "def", "get_args", "(", ")", ":", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'model_path'", ",", "type", "=", "str", ",", "help", "=", "'Path to the model checkpoint.'", ")", "\n", "parser", ".", "add_argument", "(", "'input_root'", ",", "type", "=", "str", ",", "help", "=", "'Path to the root directory under which inputs are located.'", ")", "\n", "parser", ".", "add_argument", "(", "'director_file'", ",", "type", "=", "str", ",", "help", "=", "'Path to the csv file containing relative paths to the wav files and speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--path_col'", ",", "type", "=", "str", ",", "default", "=", "'filename'", ",", "help", "=", "'Name of the column containing relative paths to the wav files.'", ")", "\n", "parser", ".", "add_argument", "(", "'--speaker_col'", ",", "type", "=", "str", ",", "default", "=", "'speaker'", ",", "help", "=", "'Name of the column containing speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--duration_col'", ",", "type", "=", "str", ",", "default", "=", "'duration'", ",", "help", "=", "'Name of the column containing the file duration (in sec).'", ")", "\n", "parser", ".", "add_argument", "(", "'--synthesis_speaker_col'", ",", "type", "=", "str", ",", "default", "=", "'synthesis_speaker'", ",", "help", "=", "'Name of the column containing the synthesis speaker.'", ")", "\n", "parser", ".", "add_argument", "(", "'-S'", ",", "'--save_dir'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'Path to the directory where results are saved.'", ")", "\n", "parser", ".", "add_argument", "(", "'-s'", ",", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1111", ",", "help", "=", "'random seed (used in the wave production).'", ")", "\n", "parser", ".", "add_argument", "(", "'-d'", ",", "'--device'", ",", "type", "=", "str", ",", "default", "=", "'cpu'", ",", "help", "=", "'Computing device.'", ")", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'Batch size for training.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_frame_length'", ",", "type", "=", "float", ",", "default", "=", "0.025", ",", "help", "=", "'FFT frame length in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_step_size'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'FFT step size in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_mfcc'", ",", "type", "=", "int", ",", "default", "=", "13", ",", "help", "=", "'# of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--mfcc_max_delta'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'Max order of derivatives of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--channel'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'Channel ID # (starting from 0) of multichannel recordings to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'# of workers for dataloading (>=1).'", ")", "\n", "parser", ".", "add_argument", "(", "'--omit_repetition'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Omit consecutive repetition in latent representation sequences.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.plot_f0.Tester.__init__": [[16, 24], ["torch.device", "plot_f0.Tester.retrieve_model", "plot_f0.Tester.parameters", "plot_f0.Tester.audition.eval", "plot_f0.Tester.cognition.eval", "plot_f0.Tester.articulation.eval"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.retrieve_model"], ["\t", "def", "__init__", "(", "self", ",", "model_config_path", ",", "device", "=", "'cpu'", ")", ":", "\n", "\t\t", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "\n", "self", ".", "retrieve_model", "(", "checkpoint_path", "=", "model_config_path", ",", "device", "=", "device", ")", "\n", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "\t\t\t", "param", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "audition", ".", "eval", "(", ")", "# Turn off dropout", "\n", "self", ".", "cognition", ".", "eval", "(", ")", "\n", "self", ".", "articulation", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.plot_f0.Tester.encode_and_decode": [[26, 49], ["torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.no_grad", "torch.nn.utils.rnn.pad_packed_sequence", "input_frames.to.to.to", "plot_f0.Tester.audition", "plot_f0.Tester.cognition.encode", "plot_f0.Tester.cognition.vae.get_map_inference", "speaker.expand().to.expand().to.expand().to", "plot_f0.Tester.cognition.decode", "plot_f0.Tester.articulation", "features[].exp().data.cpu().numpy", "wav_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "isinstance", "isinstance", "speaker.expand().to.expand().to.expand", "features[].exp().data.cpu", "wav_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "features[].exp"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.encode", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.get_map_inference", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.decode"], ["", "def", "encode_and_decode", "(", "self", ",", "input_frames", ",", "target_wav", ",", "speaker", ",", "is_packed", "=", "False", ",", "to_numpy", "=", "True", ")", ":", "\n", "\t\t", "if", "not", "is_packed", ":", "\n", "\t\t\t", "if", "not", "isinstance", "(", "input_frames", ",", "list", ")", ":", "\n", "\t\t\t\t", "input_frames", "=", "[", "input_frames", "]", "\n", "", "if", "not", "isinstance", "(", "target_wav", ",", "list", ")", ":", "\n", "\t\t\t\t", "target_wav", "=", "[", "target_wav", "]", "\n", "", "input_frames", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "input_frames", ")", "\n", "target_wav", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "target_wav", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "_", ",", "out_lengths", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pad_packed_sequence", "(", "target_wav", ",", "batch_first", "=", "True", ")", "\n", "input_frames", "=", "input_frames", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "code", "=", "self", ".", "audition", "(", "input_frames", ")", "\n", "logits", ",", "downsampled_batch_sizes", "=", "self", ".", "cognition", ".", "encode", "(", "code", ")", "\n", "\n", "one_hot", ",", "features", "=", "self", ".", "cognition", ".", "vae", ".", "get_map_inference", "(", "logits", ")", "\n", "speaker", "=", "speaker", ".", "expand", "(", "input_frames", ".", "batch_sizes", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "features", "=", "self", ".", "cognition", ".", "decode", "(", "features", ",", "speaker", ",", "downsampled_batch_sizes", ",", "out_lengths", ")", "\n", "wav_padded", "=", "self", ".", "articulation", "(", "features", ",", "out_lengths", ")", "\n", "", "if", "to_numpy", ":", "\n", "\t\t\t", "f0", "=", "features", "[", ":", ",", "0", ",", ":", "]", ".", "exp", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "wav_padded", "=", "wav_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "return", "f0", ",", "wav_padded", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.plot_f0.Tester.main": [[51, 87], ["torch.from_numpy", "torch.tensor", "plot_f0.Tester.encode_and_decode", "to_f0", "matplotlib.subplots", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.yscale", "matplotlib.xticks", "matplotlib.yticks", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.show", "os.path.dirname", "matplotlib.savefig", "numpy.arange", "os.path.isdir", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.Tester.encode_and_decode"], ["", "def", "main", "(", "\n", "self", ",", "\n", "wav", ",", "\n", "input_frames", ",", "\n", "f0_target", ",", "\n", "speaker", ",", "\n", "fs", ",", "\n", "save_path", ",", "\n", "to_f0", "\n", ")", ":", "\n", "\t\t", "wav", "=", "torch", ".", "from_numpy", "(", "wav", ")", "\n", "speaker", "=", "torch", ".", "tensor", "(", "speaker", ")", "\n", "f0_source", ",", "wav_synthesis", "=", "self", ".", "encode_and_decode", "(", "input_frames", ",", "wav", ",", "speaker", ",", "is_packed", "=", "False", ",", "to_numpy", "=", "True", ")", "\n", "f0_source", "=", "f0_source", "[", "0", "]", "\n", "wav_synthesis", "=", "wav_synthesis", "[", "0", "]", "\n", "f0_synthesis", "=", "to_f0", "(", "wav_synthesis", ")", "\n", "\n", "time", "=", "np", ".", "arange", "(", "f0_target", ".", "shape", "[", "0", "]", ")", "*", "1000", "/", "fs", "\n", "plt", ".", "subplots", "(", "1", ",", "1", ",", "figsize", "=", "(", "6.4", ",", "2", ")", ")", "\n", "plt", ".", "plot", "(", "time", ",", "f0_source", ",", "color", "=", "'C2'", ",", "label", "=", "'Source'", ",", "linewidth", "=", "3", ")", "\n", "plt", ".", "plot", "(", "time", ",", "f0_synthesis", ",", "color", "=", "'C0'", ",", "label", "=", "'Synthesis'", ",", "linewidth", "=", "3", ")", "\n", "plt", ".", "plot", "(", "time", ",", "f0_target", ",", "color", "=", "'C1'", ",", "label", "=", "'Target'", ",", "linewidth", "=", "3", ")", "\n", "plt", ".", "xlabel", "(", "'Time (ms)'", ",", "fontsize", "=", "'xx-large'", ")", "\n", "plt", ".", "ylabel", "(", "'F0 (Hz)'", ",", "fontsize", "=", "'xx-large'", ")", "\n", "plt", ".", "yscale", "(", "'log'", ")", "\n", "plt", ".", "xticks", "(", "fontsize", "=", "'x-large'", ")", "\n", "plt", ".", "yticks", "(", "fontsize", "=", "'x-large'", ")", "\n", "plt", ".", "legend", "(", "fontsize", "=", "'xx-large'", ",", "loc", "=", "(", "1.01", ",", "0.3", ")", ")", "\n", "if", "save_path", "is", "None", ":", "\n", "\t\t\t", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "save_dir", "=", "os", ".", "path", ".", "dirname", "(", "save_path", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "save_dir", ")", ":", "\n", "\t\t\t\t", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "plt", ".", "savefig", "(", "save_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.plot_f0.F0.__init__": [[93, 98], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "fs", ",", "freq_low", "=", "75.0", ",", "freq_high", "=", "600.0", ",", "eps", "=", "10e-5", ")", ":", "# Default freq_low and freq_high follow Praat", "\n", "\t\t", "self", ".", "fs", "=", "fs", "\n", "self", ".", "freq_low", "=", "freq_low", "\n", "self", ".", "freq_high", "=", "freq_high", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.plot_f0.F0.__call__": [[99, 107], ["parselmouth.Sound", "parselmouth.Sound.to_pitch", "numpy.array", "numpy.clip", "torch.from_numpy", "torch.nn.functional.interpolate().view", "torch.nn.functional.interpolate().view.numpy", "numpy.nan_to_num", "parselmouth.Sound.to_pitch.get_value_in_frame", "torch.nn.functional.interpolate", "range", "parselmouth.Sound.to_pitch.get_number_of_frames"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "wav", ")", ":", "\n", "\t\t", "snd", "=", "Sound", "(", "wav", ",", "self", ".", "fs", ")", "\n", "pitch", "=", "snd", ".", "to_pitch", "(", "pitch_floor", "=", "self", ".", "freq_low", ",", "pitch_ceiling", "=", "self", ".", "freq_high", ")", "\n", "freq", "=", "np", ".", "array", "(", "[", "pitch", ".", "get_value_in_frame", "(", "ix", ")", "for", "ix", "in", "range", "(", "1", ",", "pitch", ".", "get_number_of_frames", "(", ")", "+", "1", ")", "]", ")", "\n", "freq", "=", "np", ".", "clip", "(", "np", ".", "nan_to_num", "(", "freq", ",", "nan", "=", "self", ".", "eps", ")", ",", "self", ".", "eps", ",", "None", ")", "\n", "freq", "=", "torch", ".", "from_numpy", "(", "freq", ")", "\n", "freq", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "freq", "[", "None", ",", "None", ",", ":", "]", ",", "size", "=", "wav", ".", "size", ")", ".", "view", "(", "-", "1", ")", "\n", "return", "freq", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.plot_f0.get_args": [[108, 122], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "", "def", "get_args", "(", ")", ":", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'model_path'", ",", "type", "=", "str", ",", "help", "=", "'Path to the model checkpoint.'", ")", "\n", "parser", ".", "add_argument", "(", "'data_path'", ",", "type", "=", "str", ",", "help", "=", "'Path to the wav file.'", ")", "\n", "parser", ".", "add_argument", "(", "'-S'", ",", "'--save_path'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'Path to the image file where results are saved.'", ")", "\n", "parser", ".", "add_argument", "(", "'-d'", ",", "'--device'", ",", "type", "=", "str", ",", "default", "=", "'cpu'", ",", "help", "=", "'Computing device.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_frame_length'", ",", "type", "=", "float", ",", "default", "=", "0.025", ",", "help", "=", "'FFT frame length in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_step_size'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'FFT step size in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_mfcc'", ",", "type", "=", "int", ",", "default", "=", "13", ",", "help", "=", "'# of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--mfcc_max_delta'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'Max order of derivatives of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--channel'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'Channel ID # (starting from 0) of multichannel recordings to use.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.learning.Learner.__init__": [[38, 121], ["learning.update_log_handler", "torch.cuda.is_available", "torch.device", "logger.info", "device.startswith", "learning.Learner.retrieve_model", "logger.info", "torch.manual_seed", "torch.cuda.manual_seed_all", "modules.audition.Audition", "modules.cognition.Cognition", "modules.articulation.Articulation", "modules.loss.SpectralLoss", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "learning.Learner.audition.to", "learning.Learner.cognition.to", "learning.Learner.articulation.to", "logger.info", "print", "itertools.chain", "logger.info", "learning.Learner.audition.parameters", "learning.Learner.cognition.parameters", "learning.Learner.articulation.parameters", "torch.backends.cudnn.version"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.update_log_handler", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.retrieve_model"], ["\t", "def", "__init__", "(", "self", ",", "\n", "save_dir", ",", "\n", "input_size", ",", "\n", "num_latent_categories", ",", "\n", "feature_dim", ",", "\n", "articulatory_channels", ",", "\n", "other_hidden_size", ",", "\n", "num_speakers", ",", "\n", "total_input_frames", ",", "\n", "out_freq", "=", "16000", ",", "\n", "encoder_layers", "=", "3", ",", "\n", "jitter_prob", "=", "0.12", ",", "\n", "prior_concentration", "=", "1.0", ",", "\n", "min_temperature", "=", "0.5", ",", "\n", "temperature_update_freq", "=", "1000", ",", "\n", "temperature_anneal_rate", "=", "1e-5", ",", "\n", "loss_n_ffts", "=", "[", "128", ",", "512", ",", "2048", "]", ",", "\n", "loss_frame_lengths", "=", "[", "80", ",", "400", ",", "1920", "]", ",", "\n", "loss_step_sizes", "=", "[", "40", ",", "100", ",", "640", "]", ",", "\n", "device", "=", "'cpu'", ",", "\n", "seed", "=", "1111", ",", "\n", ")", ":", "\n", "\t\t", "self", ".", "retrieval", ",", "self", ".", "log_file_path", "=", "update_log_handler", "(", "save_dir", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "\t\t\t", "if", "device", ".", "startswith", "(", "'cuda'", ")", ":", "\n", "\t\t\t\t", "logger", ".", "info", "(", "'CUDA Version: {version}'", ".", "format", "(", "version", "=", "torch", ".", "version", ".", "cuda", ")", ")", "\n", "if", "torch", ".", "backends", ".", "cudnn", ".", "enabled", ":", "\n", "\t\t\t\t\t", "logger", ".", "info", "(", "'cuDNN Version: {version}'", ".", "format", "(", "version", "=", "torch", ".", "backends", ".", "cudnn", ".", "version", "(", ")", ")", ")", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "print", "(", "'CUDA is available. Restart with option -C or --cuda to activate it.'", ")", "\n", "\n", "\n", "", "", "self", ".", "save_dir", "=", "save_dir", "\n", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "\n", "logger", ".", "info", "(", "'Device: {device}'", ".", "format", "(", "device", "=", "device", ")", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "self", ".", "seed", "=", "seed", "\n", "\n", "if", "self", ".", "retrieval", ":", "\n", "\t\t\t", "self", ".", "last_iter", "=", "self", ".", "retrieve_model", "(", "device", "=", "device", ")", "\n", "logger", ".", "info", "(", "'Model retrieved.'", ")", "\n", "", "else", ":", "\n", "\t\t\t", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "# According to the docs, \"It\u2019s safe to call this function if CUDA is not available; in that case, it is silently ignored.\"", "\n", "self", ".", "audition", "=", "audition", ".", "Audition", "(", "input_size", ",", "other_hidden_size", ")", "\n", "self", ".", "cognition", "=", "cognition", ".", "Cognition", "(", "\n", "other_hidden_size", ",", "\n", "other_hidden_size", ",", "\n", "articulatory_channels", ",", "\n", "num_latent_categories", ",", "\n", "feature_dim", ",", "\n", "num_speakers", ",", "\n", "total_input_frames", "=", "total_input_frames", ",", "\n", "prior_concentration", "=", "prior_concentration", ",", "\n", "min_temperature", "=", "min_temperature", ",", "\n", "temperature_update_freq", "=", "temperature_update_freq", ",", "\n", "temperature_anneal_rate", "=", "temperature_anneal_rate", ",", "\n", "jitter_prob", "=", "jitter_prob", ",", "\n", ")", "\n", "self", ".", "articulation", "=", "articulation", ".", "Articulation", "(", "articulatory_channels", ")", "\n", "self", ".", "spectral_loss", "=", "loss", ".", "SpectralLoss", "(", "\n", "n_ffts", "=", "loss_n_ffts", ",", "\n", "frame_lengths", "=", "loss_frame_lengths", ",", "\n", "step_sizes", "=", "loss_step_sizes", ",", "\n", ")", "\n", "logger", ".", "info", "(", "\"Data are coded by {num_latent_categories} feature vectors of {feature_dim} dimensions.\"", ".", "format", "(", "num_latent_categories", "=", "num_latent_categories", ",", "feature_dim", "=", "feature_dim", ")", ")", "\n", "logger", ".", "info", "(", "\"The dimensionality of articulatory convolution channel: {}\"", ".", "format", "(", "articulatory_channels", ")", ")", "\n", "logger", ".", "info", "(", "'The dimensionality of other hidden states: {}'", ".", "format", "(", "other_hidden_size", ")", ")", "\n", "logger", ".", "info", "(", "'Prior concentration of Dirichlet: {}'", ".", "format", "(", "prior_concentration", ")", ")", "\n", "logger", ".", "info", "(", "'The temperature of Gumbel-Softmax is at least {min_temperature}, and multiplied by {temperature_anneal_rate} for every {temperature_update_freq} iterations.'", ".", "format", "(", "min_temperature", "=", "min_temperature", ",", "temperature_anneal_rate", "=", "temperature_anneal_rate", ",", "temperature_update_freq", "=", "temperature_update_freq", ")", ")", "\n", "logger", ".", "info", "(", "'# of speakers: {}'", ".", "format", "(", "num_speakers", ")", ")", "\n", "logger", ".", "info", "(", "'Trained with the specral loss with n_ffts={n_ffts}, frame_lengths={frame_lengths}, step_sizes={step_sizes}'", ".", "format", "(", "n_ffts", "=", "loss_n_ffts", ",", "frame_lengths", "=", "loss_frame_lengths", ",", "step_sizes", "=", "loss_step_sizes", ")", ")", "\n", "self", ".", "parameters", "=", "lambda", ":", "itertools", ".", "chain", "(", "self", ".", "audition", ".", "parameters", "(", ")", ",", "self", ".", "cognition", ".", "parameters", "(", ")", ",", "self", ".", "articulation", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "audition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "cognition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "articulation", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.learning.Learner.train": [[125, 215], ["learning.Learner.audition.train", "learning.Learner.cognition.train", "learning.Learner.articulation.train", "len", "enumerate", "learning.Learner.save_model", "logger.info", "input_.to.to.to", "target.to.to.to", "speaker.to.to.to", "learning.Learner.optimizer.zero_grad", "torch.manual_seed", "torch.cuda.manual_seed_all", "learning.Learner.audition", "torch.nn.utils.rnn.pad_packed_sequence", "learning.Learner.cognition", "learning.Learner.articulation", "learning.Learner.spectral_loss", "out_lengths.sum", "modules.loss.backward", "torch.nn.utils.clip_grad_norm_", "learning.Learner.optimizer.step", "learning.Learner.lr_scheduler.step", "learning.Learner.cognition.vae.increment_iter_counts", "learning.Learner.item", "kl_loss_per_sample.item", "category_logits.size", "modules.loss.item", "learning.Learner.parameters", "torch.no_grad", "torch.nn.functional.softmax", "torch.nn.functional.log_softmax", "torch.nn.functional.softmax.sum", "logger.info", "category_proportion.where", "torch.nn.functional.softmax", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "learning.Learner.save_model", "clustering_counts.sum", "category_proportion.log", "torch.nn.functional.softmax.log"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.save_model", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.increment_iter_counts", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.save_model"], ["\n", "self", ".", "audition", ".", "train", "(", ")", "# Turn on training mode which enables dropout.", "\n", "self", ".", "cognition", ".", "train", "(", ")", "\n", "self", ".", "articulation", ".", "train", "(", ")", "\n", "\n", "emission_loss", "=", "0", "\n", "kl_loss", "=", "0", "\n", "elbo", "=", "0", "\n", "clustering_entropy", "=", "0", "\n", "clustering_counts", "=", "0", "\n", "num_frames", "=", "0", "\n", "\n", "num_iterations", "=", "len", "(", "dataloader", ")", "\n", "\n", "for", "iteration", ",", "(", "input_", ",", "target", ",", "speaker", ",", "_", ")", "in", "enumerate", "(", "dataloader", ",", "start_iter", ")", ":", "\n", "\t\t\t", "iteration", "+=", "1", "# make indexation start with 1.", "\n", "input_", "=", "input_", ".", "to", "(", "self", ".", "device", ")", "\n", "target", "=", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "speaker", "=", "speaker", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "torch", ".", "manual_seed", "(", "iteration", "+", "self", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "iteration", "+", "self", ".", "seed", ")", "\n", "\n", "audio_processed", "=", "self", ".", "audition", "(", "input_", ")", "\n", "\n", "target_padded", ",", "out_lengths", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pad_packed_sequence", "(", "target", ",", "batch_first", "=", "True", ")", "\n", "code", ",", "category_logits", ",", "kl_loss_total", "=", "self", ".", "cognition", "(", "audio_processed", ",", "speaker", ",", "out_lengths", ")", "\n", "\n", "output_padded", "=", "self", ".", "articulation", "(", "code", ",", "out_lengths", ")", "\n", "\n", "emission_loss_per_sample", "=", "self", ".", "spectral_loss", "(", "output_padded", ",", "target_padded", ",", "out_lengths", ")", "\n", "\n", "sample_size", "=", "out_lengths", ".", "sum", "(", ")", "\n", "kl_loss_per_sample", "=", "kl_loss_total", "/", "sample_size", "\n", "loss", "=", "emission_loss_per_sample", "+", "kl_loss_per_sample", "\n", "elbo", "+=", "-", "loss", ".", "item", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "# `clip_grad_norm` helps prevent the exploding gradient problem in RNNs.", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "parameters", "(", ")", ",", "1.0", ")", "\n", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "self", ".", "cognition", ".", "vae", ".", "increment_iter_counts", "(", ")", "\n", "\n", "emission_loss", "+=", "emission_loss_per_sample", ".", "item", "(", ")", "\n", "kl_loss", "+=", "kl_loss_per_sample", ".", "item", "(", ")", "\n", "# num_samples += sample_size", "\n", "num_frames", "+=", "category_logits", ".", "size", "(", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t\t", "clustering_probs", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "category_logits", ",", "-", "1", ")", "\n", "log_clustering_probs", "=", "torch", ".", "nn", ".", "functional", ".", "log_softmax", "(", "category_logits", ",", "-", "1", ")", "\n", "clustering_entropy", "+=", "(", "-", "clustering_probs", "*", "log_clustering_probs", ")", ".", "sum", "(", ")", "\n", "clustering_counts", "+=", "clustering_probs", ".", "sum", "(", "0", ")", "\n", "\n", "", "if", "iteration", "%", "saving_interval", "==", "0", ":", "\n", "\t\t\t\t", "logger", ".", "info", "(", "'{iteration}/{num_iterations} iterations complete.'", ".", "format", "(", "\n", "iteration", "=", "iteration", ",", "\n", "num_iterations", "=", "num_iterations", ",", "\n", ")", ")", "\n", "emission_loss", "/=", "saving_interval", "\n", "kl_loss", "/=", "saving_interval", "\n", "elbo", "/=", "saving_interval", "\n", "clustering_perplex", "=", "(", "clustering_entropy", "/", "num_frames", ")", ".", "exp", "(", ")", ".", "item", "(", ")", "\n", "category_proportion", "=", "clustering_counts", "/", "clustering_counts", ".", "sum", "(", ")", "\n", "log_category_proportion", "=", "category_proportion", ".", "where", "(", "category_proportion", "==", "0.0", ",", "category_proportion", ".", "log", "(", ")", ")", "\n", "proportion_perplex", "=", "(", "-", "category_proportion", "*", "log_category_proportion", ")", ".", "sum", "(", ")", ".", "exp", "(", ")", ".", "item", "(", ")", "\n", "pi_shape", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "self", ".", "cognition", ".", "vae", ".", "posterior_shape_logits", ",", "-", "1", ")", "\n", "pi_shape_perplex", "=", "(", "-", "pi_shape", "*", "pi_shape", ".", "log", "(", ")", ")", ".", "sum", "(", ")", ".", "exp", "(", ")", ".", "item", "(", ")", "\n", "logger", ".", "info", "(", "'mean emission loss (per sound sample): {:5.4f}'", ".", "format", "(", "emission_loss", ")", ")", "\n", "logger", ".", "info", "(", "'mean KL (per sound sample): {:5.4f}'", ".", "format", "(", "kl_loss", ")", ")", "\n", "logger", ".", "info", "(", "'mean ELBO (per sound sample): {:5.4f}'", ".", "format", "(", "elbo", ")", ")", "\n", "logger", ".", "info", "(", "'perplexity of q(z | x): {:5.4f}'", ".", "format", "(", "clustering_perplex", ")", ")", "\n", "logger", ".", "info", "(", "'perplexity of sum(q(z | x)): {:5.4f}'", ".", "format", "(", "proportion_perplex", ")", ")", "\n", "logger", ".", "info", "(", "'perplexity of q(pi): {:5.4f}'", ".", "format", "(", "pi_shape_perplex", ")", ")", "\n", "emission_loss", "=", "0", "\n", "kl_loss", "=", "0", "\n", "elbo", "=", "0", "\n", "clustering_entropy", "=", "0", "\n", "clustering_counts", "=", "0", "\n", "num_frames", "=", "0", "\n", "# num_samples = 0", "\n", "self", ".", "save_model", "(", "iteration", "-", "1", ")", "\n", "", "", "self", ".", "save_model", "(", "iteration", "-", "1", ")", "\n", "logger", ".", "info", "(", "'END OF TRAINING'", ")", "\n", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.learning.Learner.learn": [[218, 240], ["list", "modules.data_utils.get_data_loader", "learning.Learner.train", "logger.info", "torch.optim.Adam", "learning.Learner.optimizer.load_state_dict", "torch.optim.lr_scheduler.MultiStepLR", "learning.Learner.lr_scheduler.load_state_dict", "learning.Learner.cognition.vae.set_pretrain_iters", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "learning.Learner.parameters", "learning.Learner.parameters"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.get_data_loader", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.set_pretrain_iters"], ["\t\t\t", "start_iter", "=", "self", ".", "last_iter", "+", "1", "\n", "logger", ".", "info", "(", "'To be restarted from the beginning of iter #: {iter}'", ".", "format", "(", "iter", "=", "start_iter", ")", ")", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "learning_rate", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "\n", "self", ".", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "self", ".", "optimizer", ",", "milestones", ",", "gamma", "=", "gamma", ")", "\n", "self", ".", "lr_scheduler", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'lr_scheduler'", "]", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "cognition", ".", "vae", ".", "set_pretrain_iters", "(", "pretrain_iters", ")", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "learning_rate", ")", "\n", "self", ".", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "self", ".", "optimizer", ",", "milestones", ",", "gamma", "=", "gamma", ")", "\n", "logger", ".", "info", "(", "\"START LEARNING.\"", ")", "\n", "logger", ".", "info", "(", "\"# of iters: {ep}\"", ".", "format", "(", "ep", "=", "num_iters", ")", ")", "\n", "logger", ".", "info", "(", "\"first {} iters are for pretraining w/o gumbel-softmax sampling.\"", ".", "format", "(", "pretrain_iters", ")", ")", "\n", "logger", ".", "info", "(", "\"batch size for training data: {size}\"", ".", "format", "(", "size", "=", "batch_size", ")", ")", "\n", "logger", ".", "info", "(", "\"initial learning rate: {lr}\"", ".", "format", "(", "lr", "=", "learning_rate", ")", ")", "\n", "logger", ".", "info", "(", "\"Learning rate is multiplied by {gamma} at {milestones} iterations.\"", ".", "format", "(", "gamma", "=", "gamma", ",", "milestones", "=", "milestones", ")", ")", "\n", "start_iter", "=", "0", "\n", "", "dataloader", "=", "data_utils", ".", "get_data_loader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "num_iterations", "=", "num_iters", ",", "start_iter", "=", "start_iter", ",", "num_workers", "=", "num_workers", ",", "random_seed", "=", "self", ".", "seed", ")", "\n", "self", ".", "train", "(", "dataloader", ",", "saving_interval", ",", "start_iter", "=", "start_iter", ")", "\n", "\n", "\n", "", "def", "save_model", "(", "self", ",", "iteration", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.learning.Learner.save_model": [[242, 265], ["torch.cuda.is_available", "torch.save", "torch.save", "logger.info", "learning.Learner.audition.state_dict", "learning.Learner.audition.pack_init_args", "learning.Learner.cognition.state_dict", "learning.Learner.cognition.pack_init_args", "learning.Learner.articulation.state_dict", "learning.Learner.articulation.pack_init_args", "learning.Learner.spectral_loss.pack_init_args", "learning.Learner.optimizer.state_dict", "learning.Learner.lr_scheduler.state_dict", "torch.get_rng_state", "torch.cuda.get_rng_state_all", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args"], ["\n", "checkpoint", "=", "{", "\n", "'iteration'", ":", "iteration", ",", "\n", "'audition'", ":", "self", ".", "audition", ".", "state_dict", "(", ")", ",", "\n", "'audition_init_args'", ":", "self", ".", "audition", ".", "pack_init_args", "(", ")", ",", "\n", "'cognition'", ":", "self", ".", "cognition", ".", "state_dict", "(", ")", ",", "\n", "'cognition_init_args'", ":", "self", ".", "cognition", ".", "pack_init_args", "(", ")", ",", "\n", "'articulation'", ":", "self", ".", "articulation", ".", "state_dict", "(", ")", ",", "\n", "'articulation_init_args'", ":", "self", ".", "articulation", ".", "pack_init_args", "(", ")", ",", "\n", "'spectral_loss_init_args'", ":", "self", ".", "spectral_loss", ".", "pack_init_args", "(", ")", ",", "\n", "'optimizer'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'lr_scheduler'", ":", "self", ".", "lr_scheduler", ".", "state_dict", "(", ")", ",", "\n", "'random_state'", ":", "torch", ".", "get_rng_state", "(", ")", ",", "\n", "}", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "\t\t\t", "checkpoint", "[", "'random_state_cuda'", "]", "=", "torch", ".", "cuda", ".", "get_rng_state_all", "(", ")", "\n", "", "torch", ".", "save", "(", "checkpoint", ",", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'checkpoint_after-{iteration}-iters.pt'", ".", "format", "(", "iteration", "=", "iteration", "+", "1", ")", ")", ")", "\n", "torch", ".", "save", "(", "checkpoint", ",", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'checkpoint.pt'", ")", ")", "\n", "logger", ".", "info", "(", "'Config successfully saved.'", ")", "\n", "\n", "\n", "", "def", "retrieve_model", "(", "self", ",", "checkpoint_path", "=", "None", ",", "device", "=", "'cpu'", ")", ":", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.learning.Learner.retrieve_model": [[267, 298], ["torch.load", "modules.audition.Audition", "modules.cognition.Cognition", "modules.articulation.Articulation", "learning.Learner.audition.load_state_dict", "learning.Learner.cognition.load_state_dict", "learning.Learner.articulation.load_state_dict", "learning.Learner.audition.to", "learning.Learner.cognition.to", "learning.Learner.articulation.to", "modules.loss.SpectralLoss", "os.path.join", "itertools.chain", "torch.set_rng_state", "torch.cuda.set_rng_state_all", "learning.Learner.audition.parameters", "learning.Learner.cognition.parameters", "learning.Learner.articulation.parameters", "logger.warning", "print"], "methods", ["None"], ["\t\t\t", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'checkpoint.pt'", ")", "\n", "", "self", ".", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "map_location", "=", "'cpu'", ")", "# Random state needs to be loaded to CPU first even when cuda is available.", "\n", "\n", "self", ".", "audition", "=", "audition", ".", "Audition", "(", "**", "self", ".", "checkpoint", "[", "'audition_init_args'", "]", ")", "\n", "self", ".", "cognition", "=", "cognition", ".", "Cognition", "(", "**", "self", ".", "checkpoint", "[", "'cognition_init_args'", "]", ")", "\n", "self", ".", "articulation", "=", "articulation", ".", "Articulation", "(", "**", "self", ".", "checkpoint", "[", "'articulation_init_args'", "]", ")", "\n", "self", ".", "audition", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'audition'", "]", ",", "strict", "=", "False", ")", "\n", "self", ".", "cognition", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'cognition'", "]", ")", "\n", "self", ".", "articulation", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'articulation'", "]", ")", "\n", "self", ".", "audition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "cognition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "articulation", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "\n", "self", ".", "parameters", "=", "lambda", ":", "itertools", ".", "chain", "(", "self", ".", "audition", ".", "parameters", "(", ")", ",", "self", ".", "cognition", ".", "parameters", "(", ")", ",", "self", ".", "articulation", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "spectral_loss", "=", "loss", ".", "SpectralLoss", "(", "**", "self", ".", "checkpoint", "[", "'spectral_loss_init_args'", "]", ")", "\n", "\n", "try", ":", "\n", "\t\t\t", "torch", ".", "set_rng_state", "(", "self", ".", "checkpoint", "[", "'random_state'", "]", ")", "\n", "", "except", "RuntimeError", ":", "\n", "\t\t\t", "msg", "=", "'Failed to retrieve random_state.'", "\n", "try", ":", "\n", "\t\t\t\t", "logger", ".", "warning", "(", "msg", ")", "\n", "", "except", "NameError", ":", "\n", "\t\t\t\t", "print", "(", "msg", ")", "\n", "", "", "if", "device", "==", "'cuda'", ":", "\n", "\t\t\t", "torch", ".", "cuda", ".", "set_rng_state_all", "(", "self", ".", "checkpoint", "[", "'random_state_cuda'", "]", ")", "\n", "", "return", "self", ".", "checkpoint", "[", "'iteration'", "]", "\n", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.learning.update_log_handler": [[13, 34], ["os.path.join", "os.path.isfile", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logger.setLevel", "logger.addHandler", "logger.removeHandler", "logger.info", "logger.info", "logger.info"], "function", ["None"], ["def", "update_log_handler", "(", "file_dir", ")", ":", "\n", "\t", "current_handlers", "=", "logger", ".", "handlers", "[", ":", "]", "\n", "for", "h", "in", "current_handlers", ":", "\n", "\t\t", "logger", ".", "removeHandler", "(", "h", ")", "\n", "", "log_file_path", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "'history.log'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "log_file_path", ")", ":", "\n", "\t\t", "retrieval", "=", "True", "\n", "", "else", ":", "\n", "\t\t", "retrieval", "=", "False", "\n", "", "handler", "=", "FileHandler", "(", "filename", "=", "log_file_path", ")", "#Define the handler.", "\n", "handler", ".", "setLevel", "(", "DEBUG", ")", "\n", "formatter", "=", "Formatter", "(", "'{asctime} - {levelname} - {message}'", ",", "style", "=", "'{'", ")", "#Define the log format.", "\n", "handler", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "setLevel", "(", "DEBUG", ")", "\n", "logger", ".", "addHandler", "(", "handler", ")", "#Register the handler for the logger.", "\n", "if", "retrieval", ":", "\n", "\t\t", "logger", ".", "info", "(", "\"LEARNING RETRIEVED.\"", ")", "\n", "", "else", ":", "\n", "\t\t", "logger", ".", "info", "(", "\"Logger set up.\"", ")", "\n", "logger", ".", "info", "(", "\"PyTorch ver.: {ver}\"", ".", "format", "(", "ver", "=", "torch", ".", "__version__", ")", ")", "\n", "", "return", "retrieval", ",", "log_file_path", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.learning.get_args": [[301, 341], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["\n", "parser", ".", "add_argument", "(", "'input_root'", ",", "type", "=", "str", ",", "help", "=", "'Path to the root directory under which inputs are located.'", ")", "\n", "parser", ".", "add_argument", "(", "'director_file'", ",", "type", "=", "str", ",", "help", "=", "'Path to the csv file containing relative paths to the wav files and speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--path_col'", ",", "type", "=", "str", ",", "default", "=", "'filename'", ",", "help", "=", "'Name of the column containing relative paths to the wav files.'", ")", "\n", "parser", ".", "add_argument", "(", "'--speaker_col'", ",", "type", "=", "str", ",", "default", "=", "'speaker'", ",", "help", "=", "'Name of the column containing speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--duration_col'", ",", "type", "=", "str", ",", "default", "=", "'duration'", ",", "help", "=", "'Name of the column containing the file duration (in sec).'", ")", "\n", "parser", ".", "add_argument", "(", "'-S'", ",", "'--save_root'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'Path to the directory where results are saved.'", ")", "\n", "parser", ".", "add_argument", "(", "'-j'", ",", "'--job_id'", ",", "type", "=", "str", ",", "default", "=", "'NO_JOB_ID'", ",", "help", "=", "'Job ID. For users of computing clusters.'", ")", "\n", "parser", ".", "add_argument", "(", "'-s'", ",", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1111", ",", "help", "=", "'random seed'", ")", "\n", "parser", ".", "add_argument", "(", "'-d'", ",", "'--device'", ",", "type", "=", "str", ",", "default", "=", "'cpu'", ",", "help", "=", "'Computing device.'", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--iterations'", ",", "type", "=", "int", ",", "default", "=", "900000", ",", "help", "=", "'# of iterations to train the model.'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrain_iters'", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "'# of initial iterations to pretrain the model w/o gumbel-softmax sampling.'", ")", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'Batch size for training.'", ")", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--learning_rate'", ",", "type", "=", "float", ",", "default", "=", "4", "*", "(", "10", "**", "-", "4", ")", ",", "help", "=", "'Initial learning rate.'", ")", "\n", "parser", ".", "add_argument", "(", "'--milestones'", ",", "type", "=", "int", ",", "nargs", "=", "'*'", ",", "default", "=", "[", "]", ",", "help", "=", "'Iterations at which the learning rate is reduced.'", ")", "\n", "parser", ".", "add_argument", "(", "'--gamma'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'Multiplier to the learning rate.'", ")", "\n", "parser", ".", "add_argument", "(", "'-K'", ",", "'--num_feature_categories'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'# of possible discrete values token on by latent features into which data are encoded.'", ")", "\n", "parser", ".", "add_argument", "(", "'-f'", ",", "'--feature_dim'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'# of dimensions of features into which the discrete feature are linear-transformed.'", ")", "\n", "parser", ".", "add_argument", "(", "'--encoder_layers'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of layers of encoder LSTM.'", ")", "\n", "parser", ".", "add_argument", "(", "'--articulatory_channels'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'Dimensionality of the convolutional layers.'", ")", "\n", "parser", ".", "add_argument", "(", "'--other_hidden_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'Dimensionality of the other hidden states (e.g. MLP).'", ")", "\n", "parser", ".", "add_argument", "(", "'--jitter_prob'", ",", "type", "=", "float", ",", "default", "=", ".12", ",", "help", "=", "'Probability of jitter in the decoder.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_frame_length'", ",", "type", "=", "float", ",", "default", "=", "0.025", ",", "help", "=", "'FFT frame length in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_step_size'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'FFT step size in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_mfcc'", ",", "type", "=", "int", ",", "default", "=", "13", ",", "help", "=", "'# of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--mfcc_max_delta'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'Max order of derivatives of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--channel'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'Channel ID # (starting from 0) of multichannel recordings to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_duration'", ",", "type", "=", "float", ",", "default", "=", "3.0", ",", "help", "=", "'Max duration of input wave (in sec).'", ")", "\n", "parser", ".", "add_argument", "(", "'--prior_concentration'", ",", "type", "=", "float", ",", "default", "=", "1.0", ",", "help", "=", "'Concentration of the Dirichlet prior on the probability of the discrete feature.'", ")", "\n", "parser", ".", "add_argument", "(", "'--min_temperature'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'Minimum temperature of gumbel-softmax sampling.'", ")", "\n", "parser", ".", "add_argument", "(", "'--temperature_update_freq'", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "'Frequency of temperature annealing.'", ")", "\n", "parser", ".", "add_argument", "(", "'--temperature_anneal_rate'", ",", "type", "=", "float", ",", "default", "=", "1e-5", ",", "help", "=", "'Rate of temperature annealing.'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'# of workers for dataloading (>=1).'", ")", "\n", "parser", ".", "add_argument", "(", "'--saving_interval'", ",", "type", "=", "int", ",", "default", "=", "200", ",", "help", "=", "'# of iterations in which model parameters are saved once.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "get_save_dir", "(", "save_root", ",", "job_id_str", ")", ":", "\n", "\t", "save_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "save_root", ",", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN.learning.get_save_dir": [[343, 351], ["os.path.join", "os.path.isdir", "os.makedirs"], "function", ["None"], [")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "save_dir", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "return", "save_dir", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "\t", "args", "=", "get_args", "(", ")", "\n", "\n", "save_root", "=", "args", ".", "save_root", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.test.Tester.__init__": [[14, 24], ["torch.manual_seed", "torch.cuda.manual_seed_all", "torch.device", "test.Tester.retrieve_model", "test.Tester.parameters", "test.Tester.audition.eval", "test.Tester.cognition.eval", "test.Tester.articulation.eval"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.retrieve_model"], ["\t", "def", "__init__", "(", "self", ",", "model_config_path", ",", "device", "=", "'cpu'", ",", "seed", "=", "111", ")", ":", "\n", "\t\t", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "\n", "self", ".", "retrieve_model", "(", "checkpoint_path", "=", "model_config_path", ",", "device", "=", "device", ")", "\n", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "\t\t\t", "param", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "audition", ".", "eval", "(", ")", "# Turn off dropout", "\n", "self", ".", "cognition", ".", "eval", "(", ")", "\n", "self", ".", "articulation", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.test.Tester.encode_and_decode": [[26, 62], ["torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.no_grad", "torch.nn.utils.rnn.pad_packed_sequence", "input_frames.to.to.to", "test.Tester.audition", "test.Tester.cognition.encode", "logits.softmax", "test.Tester.cognition.vae.get_map_inference", "modules.rnn_utils.pad_flatten_sequence", "modules.rnn_utils.pad_flatten_sequence", "modules.rnn_utils.pad_flatten_sequence", "one_hot_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "features_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "probs_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "code_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "isinstance", "isinstance", "speaker.expand().to.expand().to.expand().to", "test.Tester.cognition.decode", "test.Tester.articulation", "wav_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "out_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "one_hot_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "features_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "probs_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "code_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu", "speaker.expand().to.expand().to.expand", "wav_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "out_lengths.data.cpu().numpy.data.cpu().numpy.data.cpu"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.encode", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.get_map_inference", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.rnn_utils.pad_flatten_sequence", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.decode"], ["", "def", "encode_and_decode", "(", "self", ",", "input_frames", ",", "target_wav", ",", "speaker", ",", "is_packed", "=", "False", ",", "to_numpy", "=", "True", ")", ":", "\n", "\t\t", "if", "not", "is_packed", ":", "\n", "\t\t\t", "if", "not", "isinstance", "(", "input_frames", ",", "list", ")", ":", "\n", "\t\t\t\t", "input_frames", "=", "[", "input_frames", "]", "\n", "", "if", "not", "isinstance", "(", "target_wav", ",", "list", ")", ":", "\n", "\t\t\t\t", "target_wav", "=", "[", "target_wav", "]", "\n", "", "input_frames", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "input_frames", ")", "\n", "target_wav", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "target_wav", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "_", ",", "out_lengths", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pad_packed_sequence", "(", "target_wav", ",", "batch_first", "=", "True", ")", "\n", "input_frames", "=", "input_frames", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "code", "=", "self", ".", "audition", "(", "input_frames", ")", "\n", "logits", ",", "downsampled_batch_sizes", "=", "self", ".", "cognition", ".", "encode", "(", "code", ")", "\n", "\n", "probs", "=", "logits", ".", "softmax", "(", "-", "1", ")", "\n", "one_hot", ",", "features", "=", "self", ".", "cognition", ".", "vae", ".", "get_map_inference", "(", "logits", ")", "\n", "one_hot_padded", ",", "code_lengths", "=", "rnn_utils", ".", "pad_flatten_sequence", "(", "one_hot", ",", "downsampled_batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "features_padded", ",", "_", "=", "rnn_utils", ".", "pad_flatten_sequence", "(", "features", ",", "downsampled_batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "probs_padded", ",", "_", "=", "rnn_utils", ".", "pad_flatten_sequence", "(", "probs", ",", "downsampled_batch_sizes", ",", "batch_first", "=", "True", ")", "\n", "if", "speaker", "is", "None", ":", "\n", "\t\t\t\t", "wav_padded", "=", "None", "\n", "out_lengths", "=", "None", "\n", "", "else", ":", "\n", "\t\t\t\t", "speaker", "=", "speaker", ".", "expand", "(", "input_frames", ".", "batch_sizes", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "features", "=", "self", ".", "cognition", ".", "decode", "(", "features", ",", "speaker", ",", "downsampled_batch_sizes", ",", "out_lengths", ")", "\n", "wav_padded", "=", "self", ".", "articulation", "(", "features", ",", "out_lengths", ")", "\n", "", "", "if", "to_numpy", ":", "\n", "\t\t\t", "one_hot_padded", "=", "one_hot_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "features_padded", "=", "features_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "probs_padded", "=", "probs_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "code_lengths", "=", "code_lengths", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "not", "speaker", "is", "None", ":", "\n", "\t\t\t\t", "wav_padded", "=", "wav_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "out_lengths", "=", "out_lengths", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "", "return", "one_hot_padded", ",", "probs_padded", ",", "features_padded", ",", "code_lengths", ",", "wav_padded", ",", "out_lengths", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.test.Tester.main": [[64, 121], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset.df_director.fillna", "dataset.df_director.fillna.groupby", "os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "os.path.isdir", "os.makedirs", "dataset.reset_director", "modules.data_utils.get_data_loader", "torch.tensor", "test.Tester.encode_and_decode", "enumerate", "pandas.DataFrame", "pandas.DataFrame.to_csv", "pandas.DataFrame", "pandas.DataFrame.to_csv", "pandas.DataFrame", "pandas.DataFrame.to_csv", "os.path.splitext", "test.Tester.omit_consecutive_repetition", "os.path.join", "scipy.write", "os.path.basename", "os.path.join", "os.path.join", "os.path.join", "filename_wo_ext.split"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.Dataset.reset_director", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.get_data_loader", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.Tester.encode_and_decode", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.test.Tester.omit_consecutive_repetition"], ["", "def", "main", "(", "\n", "self", ",", "\n", "dataset", ",", "\n", "save_dir", ",", "\n", "synthesis_speaker_col", "=", "'synthesis_speaker'", ",", "\n", "batch_size", "=", "1", ",", "\n", "num_workers", "=", "1", ",", "\n", "omit_repetition", "=", "False", "\n", ")", ":", "\n", "\t\t", "feature_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'as_features/'", ")", "\n", "prob_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'as_probs/'", ")", "\n", "onehot_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'as_one-hot/'", ")", "\n", "synthesis_dir", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'synthesis/'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "feature_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "feature_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "prob_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "prob_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "onehot_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "onehot_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "synthesis_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "synthesis_dir", ")", "\n", "", "full_df", "=", "dataset", ".", "df_director", ".", "fillna", "(", "value", "=", "{", "synthesis_speaker_col", ":", "'__NA__'", "}", ")", "\n", "for", "synthesis_speaker", ",", "sub_df", "in", "full_df", ".", "groupby", "(", "synthesis_speaker_col", ")", ":", "\n", "\t\t\t", "dataset", ".", "reset_director", "(", "sub_df", ")", "\n", "if", "synthesis_speaker", "==", "'__NA__'", ":", "\n", "\t\t\t\t", "synthesis_speaker", "=", "None", "\n", "", "else", ":", "\n", "\t\t\t\t", "synthesis_speaker_name", "=", "synthesis_speaker", "\n", "synthesis_speaker", "=", "torch", ".", "tensor", "(", "dataset", ".", "speaker2ix", "[", "synthesis_speaker", "]", ")", "\n", "", "dataloader", "=", "data_utils", ".", "get_data_loader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "num_workers", ")", "\n", "for", "input_frames", ",", "target_wav", ",", "speaker", ",", "data_ixs", "in", "dataloader", ":", "\n", "\n", "\t\t\t\t", "one_hot_padded", ",", "probs_padded", ",", "features_padded", ",", "code_lengths", ",", "wav_padded", ",", "out_lengths", "=", "self", ".", "encode_and_decode", "(", "input_frames", ",", "target_wav", ",", "synthesis_speaker", ",", "is_packed", "=", "True", ",", "to_numpy", "=", "True", ")", "\n", "\n", "data_paths", "=", "dataset", ".", "df_director", ".", "loc", "[", "data_ixs", ",", "dataset", ".", "path_col", "]", "\n", "for", "ix_in_batch", ",", "p", "in", "enumerate", "(", "data_paths", ")", ":", "\n", "\t\t\t\t\t", "filename_wo_ext", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "p", ")", ")", "[", "0", "]", "\n", "\n", "code_l", "=", "code_lengths", "[", "ix_in_batch", "]", "\n", "one_hot", "=", "one_hot_padded", "[", "ix_in_batch", ",", ":", "code_l", ",", ":", "]", "\n", "features", "=", "features_padded", "[", "ix_in_batch", ",", ":", "code_l", ",", ":", "]", "\n", "probs", "=", "probs_padded", "[", "ix_in_batch", ",", ":", "code_l", ",", ":", "]", "\n", "if", "omit_repetition", ":", "\n", "\t\t\t\t\t\t", "one_hot", ",", "features", ",", "probs", "=", "self", ".", "omit_consecutive_repetition", "(", "one_hot", ",", "features", ",", "probs", ")", "\n", "\n", "", "df_category", "=", "pd", ".", "DataFrame", "(", "one_hot", ")", "\n", "df_category", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "onehot_dir", ",", "filename_wo_ext", ")", "+", "'.txt'", ",", "index", "=", "False", ",", "header", "=", "None", ",", "sep", "=", "' '", ")", "\n", "df_feat", "=", "pd", ".", "DataFrame", "(", "features", ")", "\n", "df_feat", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "feature_dir", ",", "filename_wo_ext", ")", "+", "'.txt'", ",", "index", "=", "False", ",", "header", "=", "None", ",", "sep", "=", "' '", ")", "\n", "df_prob", "=", "pd", ".", "DataFrame", "(", "probs", ")", "\n", "df_prob", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "prob_dir", ",", "filename_wo_ext", ")", "+", "'.txt'", ",", "index", "=", "False", ",", "header", "=", "None", ",", "sep", "=", "' '", ")", "\n", "if", "not", "synthesis_speaker", "is", "None", ":", "\n", "\t\t\t\t\t\t", "out_l", "=", "out_lengths", "[", "ix_in_batch", "]", "\n", "wav", "=", "wav_padded", "[", "ix_in_batch", ",", ":", "out_l", "]", "\n", "filename_wo_ext", "=", "'_'", ".", "join", "(", "[", "synthesis_speaker_name", "]", "+", "filename_wo_ext", ".", "split", "(", "'_'", ")", "[", "1", ":", "]", ")", "\n", "basename", "=", "os", ".", "path", ".", "join", "(", "synthesis_dir", ",", "filename_wo_ext", ")", "\n", "spw", ".", "write", "(", "basename", "+", "'.wav'", ",", "dataset", ".", "fs", ",", "wav", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.test.Tester.omit_consecutive_repetition": [[122, 134], ["out.append"], "methods", ["None"], ["", "", "", "", "", "def", "omit_consecutive_repetition", "(", "self", ",", "vecs", ",", "*", "other_vecs", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tOmit consecutive repetitions in vecs.\n\t\tvecs: ndarray[time,dim]\n\t\t\"\"\"", "\n", "changes", "=", "[", "True", "]", "+", "(", "vecs", "[", ":", "-", "1", "]", "!=", "vecs", "[", "1", ":", "]", ")", ".", "any", "(", "axis", "=", "-", "1", ")", ".", "tolist", "(", ")", "\n", "out", "=", "vecs", "[", "changes", ",", "...", "]", "\n", "if", "other_vecs", ":", "\n", "\t\t\t", "out", "=", "[", "out", "]", "\n", "for", "v", "in", "other_vecs", ":", "\n", "\t\t\t\t", "out", ".", "append", "(", "v", "[", "changes", ",", "...", "]", ")", "\n", "", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.test.get_args": [[136, 159], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "", "def", "get_args", "(", ")", ":", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'model_path'", ",", "type", "=", "str", ",", "help", "=", "'Path to the model checkpoint.'", ")", "\n", "parser", ".", "add_argument", "(", "'input_root'", ",", "type", "=", "str", ",", "help", "=", "'Path to the root directory under which inputs are located.'", ")", "\n", "parser", ".", "add_argument", "(", "'director_file'", ",", "type", "=", "str", ",", "help", "=", "'Path to the csv file containing relative paths to the wav files and speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--path_col'", ",", "type", "=", "str", ",", "default", "=", "'filename'", ",", "help", "=", "'Name of the column containing relative paths to the wav files.'", ")", "\n", "parser", ".", "add_argument", "(", "'--speaker_col'", ",", "type", "=", "str", ",", "default", "=", "'speaker'", ",", "help", "=", "'Name of the column containing speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--duration_col'", ",", "type", "=", "str", ",", "default", "=", "'duration'", ",", "help", "=", "'Name of the column containing the file duration (in sec).'", ")", "\n", "parser", ".", "add_argument", "(", "'--synthesis_speaker_col'", ",", "type", "=", "str", ",", "default", "=", "'synthesis_speaker'", ",", "help", "=", "'Name of the column containing the synthesis speaker.'", ")", "\n", "parser", ".", "add_argument", "(", "'-S'", ",", "'--save_dir'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'Path to the directory where results are saved.'", ")", "\n", "parser", ".", "add_argument", "(", "'-s'", ",", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1111", ",", "help", "=", "'random seed (used in the wave production).'", ")", "\n", "parser", ".", "add_argument", "(", "'-d'", ",", "'--device'", ",", "type", "=", "str", ",", "default", "=", "'cpu'", ",", "help", "=", "'Computing device.'", ")", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'Batch size for training.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_frame_length'", ",", "type", "=", "float", ",", "default", "=", "0.025", ",", "help", "=", "'FFT frame length in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_step_size'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'FFT step size in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_mfcc'", ",", "type", "=", "int", ",", "default", "=", "13", ",", "help", "=", "'# of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--mfcc_max_delta'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'Max order of derivatives of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--channel'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'Channel ID # (starting from 0) of multichannel recordings to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'# of workers for dataloading (>=1).'", ")", "\n", "parser", ".", "add_argument", "(", "'--omit_repetition'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Omit consecutive repetition in latent representation sequences.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.Tester.__init__": [[16, 24], ["torch.device", "plot_f0.Tester.retrieve_model", "plot_f0.Tester.parameters", "plot_f0.Tester.audition.eval", "plot_f0.Tester.cognition.eval", "plot_f0.Tester.articulation.eval"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.retrieve_model"], ["\t", "def", "__init__", "(", "self", ",", "model_config_path", ",", "device", "=", "'cpu'", ")", ":", "\n", "\t\t", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "\n", "self", ".", "retrieve_model", "(", "checkpoint_path", "=", "model_config_path", ",", "device", "=", "device", ")", "\n", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "\t\t\t", "param", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "audition", ".", "eval", "(", ")", "# Turn off dropout", "\n", "self", ".", "cognition", ".", "eval", "(", ")", "\n", "self", ".", "articulation", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.Tester.encode_and_decode": [[26, 49], ["torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.no_grad", "torch.nn.utils.rnn.pad_packed_sequence", "input_frames.to.to.to", "plot_f0.Tester.audition", "plot_f0.Tester.cognition.encode", "plot_f0.Tester.cognition.vae.get_map_inference", "speaker.expand().to.expand().to.expand().to", "plot_f0.Tester.cognition.decode", "plot_f0.Tester.articulation", "features[].exp().data.cpu().numpy", "wav_padded.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "isinstance", "isinstance", "speaker.expand().to.expand().to.expand", "features[].exp().data.cpu", "wav_padded.data.cpu().numpy.data.cpu().numpy.data.cpu", "features[].exp"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.encode", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.get_map_inference", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.Cognition.decode"], ["", "def", "encode_and_decode", "(", "self", ",", "input_frames", ",", "target_wav", ",", "speaker", ",", "is_packed", "=", "False", ",", "to_numpy", "=", "True", ")", ":", "\n", "\t\t", "if", "not", "is_packed", ":", "\n", "\t\t\t", "if", "not", "isinstance", "(", "input_frames", ",", "list", ")", ":", "\n", "\t\t\t\t", "input_frames", "=", "[", "input_frames", "]", "\n", "", "if", "not", "isinstance", "(", "target_wav", ",", "list", ")", ":", "\n", "\t\t\t\t", "target_wav", "=", "[", "target_wav", "]", "\n", "", "input_frames", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "input_frames", ")", "\n", "target_wav", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pack_sequence", "(", "target_wav", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "_", ",", "out_lengths", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pad_packed_sequence", "(", "target_wav", ",", "batch_first", "=", "True", ")", "\n", "input_frames", "=", "input_frames", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "code", "=", "self", ".", "audition", "(", "input_frames", ")", "\n", "logits", ",", "downsampled_batch_sizes", "=", "self", ".", "cognition", ".", "encode", "(", "code", ")", "\n", "\n", "one_hot", ",", "features", "=", "self", ".", "cognition", ".", "vae", ".", "get_map_inference", "(", "logits", ")", "\n", "speaker", "=", "speaker", ".", "expand", "(", "input_frames", ".", "batch_sizes", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "features", "=", "self", ".", "cognition", ".", "decode", "(", "features", ",", "speaker", ",", "downsampled_batch_sizes", ",", "out_lengths", ")", "\n", "wav_padded", "=", "self", ".", "articulation", "(", "features", ",", "out_lengths", ")", "\n", "", "if", "to_numpy", ":", "\n", "\t\t\t", "f0", "=", "features", "[", ":", ",", "0", ",", ":", "]", ".", "exp", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "wav_padded", "=", "wav_padded", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "return", "f0", ",", "wav_padded", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.Tester.main": [[51, 87], ["torch.from_numpy", "torch.tensor", "plot_f0.Tester.encode_and_decode", "to_f0", "matplotlib.subplots", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.yscale", "matplotlib.xticks", "matplotlib.yticks", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.show", "os.path.dirname", "matplotlib.savefig", "numpy.arange", "os.path.isdir", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.Tester.encode_and_decode"], ["", "def", "main", "(", "\n", "self", ",", "\n", "wav", ",", "\n", "input_frames", ",", "\n", "f0_target", ",", "\n", "speaker", ",", "\n", "fs", ",", "\n", "save_path", ",", "\n", "to_f0", "\n", ")", ":", "\n", "\t\t", "wav", "=", "torch", ".", "from_numpy", "(", "wav", ")", "\n", "speaker", "=", "torch", ".", "tensor", "(", "speaker", ")", "\n", "f0_source", ",", "wav_synthesis", "=", "self", ".", "encode_and_decode", "(", "input_frames", ",", "wav", ",", "speaker", ",", "is_packed", "=", "False", ",", "to_numpy", "=", "True", ")", "\n", "f0_source", "=", "f0_source", "[", "0", "]", "\n", "wav_synthesis", "=", "wav_synthesis", "[", "0", "]", "\n", "f0_synthesis", "=", "to_f0", "(", "wav_synthesis", ")", "\n", "\n", "time", "=", "np", ".", "arange", "(", "f0_target", ".", "shape", "[", "0", "]", ")", "*", "1000", "/", "fs", "\n", "plt", ".", "subplots", "(", "1", ",", "1", ",", "figsize", "=", "(", "6.4", ",", "2", ")", ")", "\n", "plt", ".", "plot", "(", "time", ",", "f0_source", ",", "color", "=", "'C2'", ",", "label", "=", "'Source'", ",", "linewidth", "=", "3", ")", "\n", "plt", ".", "plot", "(", "time", ",", "f0_synthesis", ",", "color", "=", "'C0'", ",", "label", "=", "'Synthesis'", ",", "linewidth", "=", "3", ")", "\n", "plt", ".", "plot", "(", "time", ",", "f0_target", ",", "color", "=", "'C1'", ",", "label", "=", "'Target'", ",", "linewidth", "=", "3", ")", "\n", "plt", ".", "xlabel", "(", "'Time (ms)'", ",", "fontsize", "=", "'xx-large'", ")", "\n", "plt", ".", "ylabel", "(", "'F0 (Hz)'", ",", "fontsize", "=", "'xx-large'", ")", "\n", "plt", ".", "yscale", "(", "'log'", ")", "\n", "plt", ".", "xticks", "(", "fontsize", "=", "'x-large'", ")", "\n", "plt", ".", "yticks", "(", "fontsize", "=", "'x-large'", ")", "\n", "plt", ".", "legend", "(", "fontsize", "=", "'xx-large'", ",", "loc", "=", "(", "1.01", ",", "0.3", ")", ")", "\n", "if", "save_path", "is", "None", ":", "\n", "\t\t\t", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "save_dir", "=", "os", ".", "path", ".", "dirname", "(", "save_path", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "save_dir", ")", ":", "\n", "\t\t\t\t", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "plt", ".", "savefig", "(", "save_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.F0.__init__": [[93, 98], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "fs", ",", "freq_low", "=", "75.0", ",", "freq_high", "=", "600.0", ",", "eps", "=", "10e-5", ")", ":", "# Default freq_low and freq_high follow Praat", "\n", "\t\t", "self", ".", "fs", "=", "fs", "\n", "self", ".", "freq_low", "=", "freq_low", "\n", "self", ".", "freq_high", "=", "freq_high", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.F0.__call__": [[99, 107], ["parselmouth.Sound", "parselmouth.Sound.to_pitch", "numpy.array", "numpy.clip", "torch.from_numpy", "torch.nn.functional.interpolate().view", "torch.nn.functional.interpolate().view.numpy", "numpy.nan_to_num", "parselmouth.Sound.to_pitch.get_value_in_frame", "torch.nn.functional.interpolate", "range", "parselmouth.Sound.to_pitch.get_number_of_frames"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "wav", ")", ":", "\n", "\t\t", "snd", "=", "Sound", "(", "wav", ",", "self", ".", "fs", ")", "\n", "pitch", "=", "snd", ".", "to_pitch", "(", "pitch_floor", "=", "self", ".", "freq_low", ",", "pitch_ceiling", "=", "self", ".", "freq_high", ")", "\n", "freq", "=", "np", ".", "array", "(", "[", "pitch", ".", "get_value_in_frame", "(", "ix", ")", "for", "ix", "in", "range", "(", "1", ",", "pitch", ".", "get_number_of_frames", "(", ")", "+", "1", ")", "]", ")", "\n", "freq", "=", "np", ".", "clip", "(", "np", ".", "nan_to_num", "(", "freq", ",", "nan", "=", "self", ".", "eps", ")", ",", "self", ".", "eps", ",", "None", ")", "\n", "freq", "=", "torch", ".", "from_numpy", "(", "freq", ")", "\n", "freq", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "freq", "[", "None", ",", "None", ",", ":", "]", ",", "size", "=", "wav", ".", "size", ")", ".", "view", "(", "-", "1", ")", "\n", "return", "freq", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.plot_f0.get_args": [[108, 122], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "", "def", "get_args", "(", ")", ":", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'model_path'", ",", "type", "=", "str", ",", "help", "=", "'Path to the model checkpoint.'", ")", "\n", "parser", ".", "add_argument", "(", "'data_path'", ",", "type", "=", "str", ",", "help", "=", "'Path to the wav file.'", ")", "\n", "parser", ".", "add_argument", "(", "'-S'", ",", "'--save_path'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'Path to the image file where results are saved.'", ")", "\n", "parser", ".", "add_argument", "(", "'-d'", ",", "'--device'", ",", "type", "=", "str", ",", "default", "=", "'cpu'", ",", "help", "=", "'Computing device.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_frame_length'", ",", "type", "=", "float", ",", "default", "=", "0.025", ",", "help", "=", "'FFT frame length in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_step_size'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'FFT step size in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_mfcc'", ",", "type", "=", "int", ",", "default", "=", "13", ",", "help", "=", "'# of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--mfcc_max_delta'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'Max order of derivatives of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--channel'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'Channel ID # (starting from 0) of multichannel recordings to use.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.__init__": [[38, 122], ["learning.update_log_handler", "torch.cuda.is_available", "torch.device", "logger.info", "modules.loss.F0Loss", "device.startswith", "learning.Learner.retrieve_model", "logger.info", "torch.manual_seed", "torch.cuda.manual_seed_all", "modules.audition.Audition", "modules.cognition.Cognition", "modules.articulation.Articulation", "modules.loss.SpectralLoss", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "learning.Learner.audition.to", "learning.Learner.cognition.to", "learning.Learner.articulation.to", "logger.info", "print", "itertools.chain", "logger.info", "learning.Learner.audition.parameters", "learning.Learner.cognition.parameters", "learning.Learner.articulation.parameters", "torch.backends.cudnn.version"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.update_log_handler", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.retrieve_model"], ["\t", "def", "__init__", "(", "self", ",", "\n", "save_dir", ",", "\n", "input_size", ",", "\n", "num_latent_categories", ",", "\n", "feature_dim", ",", "\n", "articulatory_channels", ",", "\n", "other_hidden_size", ",", "\n", "num_speakers", ",", "\n", "total_input_frames", ",", "\n", "out_freq", "=", "16000", ",", "\n", "encoder_layers", "=", "3", ",", "\n", "jitter_prob", "=", "0.12", ",", "\n", "prior_concentration", "=", "1.0", ",", "\n", "min_temperature", "=", "0.5", ",", "\n", "temperature_update_freq", "=", "1000", ",", "\n", "temperature_anneal_rate", "=", "1e-5", ",", "\n", "loss_n_ffts", "=", "[", "128", ",", "512", ",", "2048", "]", ",", "\n", "loss_frame_lengths", "=", "[", "80", ",", "400", ",", "1920", "]", ",", "\n", "loss_step_sizes", "=", "[", "40", ",", "100", ",", "640", "]", ",", "\n", "device", "=", "'cpu'", ",", "\n", "seed", "=", "1111", ",", "\n", ")", ":", "\n", "\t\t", "self", ".", "retrieval", ",", "self", ".", "log_file_path", "=", "update_log_handler", "(", "save_dir", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "\t\t\t", "if", "device", ".", "startswith", "(", "'cuda'", ")", ":", "\n", "\t\t\t\t", "logger", ".", "info", "(", "'CUDA Version: {version}'", ".", "format", "(", "version", "=", "torch", ".", "version", ".", "cuda", ")", ")", "\n", "if", "torch", ".", "backends", ".", "cudnn", ".", "enabled", ":", "\n", "\t\t\t\t\t", "logger", ".", "info", "(", "'cuDNN Version: {version}'", ".", "format", "(", "version", "=", "torch", ".", "backends", ".", "cudnn", ".", "version", "(", ")", ")", ")", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "print", "(", "'CUDA is available. Restart with option -C or --cuda to activate it.'", ")", "\n", "\n", "\n", "", "", "self", ".", "save_dir", "=", "save_dir", "\n", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "device", ")", "\n", "logger", ".", "info", "(", "'Device: {device}'", ".", "format", "(", "device", "=", "device", ")", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "self", ".", "seed", "=", "seed", "\n", "\n", "if", "self", ".", "retrieval", ":", "\n", "\t\t\t", "self", ".", "last_iter", "=", "self", ".", "retrieve_model", "(", "device", "=", "device", ")", "\n", "logger", ".", "info", "(", "'Model retrieved.'", ")", "\n", "", "else", ":", "\n", "\t\t\t", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "# According to the docs, \"It\u2019s safe to call this function if CUDA is not available; in that case, it is silently ignored.\"", "\n", "self", ".", "audition", "=", "audition", ".", "Audition", "(", "input_size", ",", "other_hidden_size", ")", "\n", "self", ".", "cognition", "=", "cognition", ".", "Cognition", "(", "\n", "other_hidden_size", ",", "\n", "other_hidden_size", ",", "\n", "articulatory_channels", ",", "\n", "num_latent_categories", ",", "\n", "feature_dim", ",", "\n", "num_speakers", ",", "\n", "total_input_frames", "=", "total_input_frames", ",", "\n", "prior_concentration", "=", "prior_concentration", ",", "\n", "min_temperature", "=", "min_temperature", ",", "\n", "temperature_update_freq", "=", "temperature_update_freq", ",", "\n", "temperature_anneal_rate", "=", "temperature_anneal_rate", ",", "\n", "jitter_prob", "=", "jitter_prob", ",", "\n", ")", "\n", "self", ".", "articulation", "=", "articulation", ".", "Articulation", "(", "articulatory_channels", ")", "\n", "self", ".", "spectral_loss", "=", "loss", ".", "SpectralLoss", "(", "\n", "n_ffts", "=", "loss_n_ffts", ",", "\n", "frame_lengths", "=", "loss_frame_lengths", ",", "\n", "step_sizes", "=", "loss_step_sizes", ",", "\n", ")", "\n", "logger", ".", "info", "(", "\"Data are coded by {num_latent_categories} feature vectors of {feature_dim} dimensions.\"", ".", "format", "(", "num_latent_categories", "=", "num_latent_categories", ",", "feature_dim", "=", "feature_dim", ")", ")", "\n", "logger", ".", "info", "(", "\"The dimensionality of articulatory convolution channel: {}\"", ".", "format", "(", "articulatory_channels", ")", ")", "\n", "logger", ".", "info", "(", "'The dimensionality of other hidden states: {}'", ".", "format", "(", "other_hidden_size", ")", ")", "\n", "logger", ".", "info", "(", "'Prior concentration of Dirichlet: {}'", ".", "format", "(", "prior_concentration", ")", ")", "\n", "logger", ".", "info", "(", "'The temperature of Gumbel-Softmax is at least {min_temperature}, and multiplied by {temperature_anneal_rate} for every {temperature_update_freq} iterations.'", ".", "format", "(", "min_temperature", "=", "min_temperature", ",", "temperature_anneal_rate", "=", "temperature_anneal_rate", ",", "temperature_update_freq", "=", "temperature_update_freq", ")", ")", "\n", "logger", ".", "info", "(", "'# of speakers: {}'", ".", "format", "(", "num_speakers", ")", ")", "\n", "logger", ".", "info", "(", "'Trained with the specral loss with n_ffts={n_ffts}, frame_lengths={frame_lengths}, step_sizes={step_sizes}'", ".", "format", "(", "n_ffts", "=", "loss_n_ffts", ",", "frame_lengths", "=", "loss_frame_lengths", ",", "step_sizes", "=", "loss_step_sizes", ")", ")", "\n", "self", ".", "parameters", "=", "lambda", ":", "itertools", ".", "chain", "(", "self", ".", "audition", ".", "parameters", "(", ")", ",", "self", ".", "cognition", ".", "parameters", "(", ")", ",", "self", ".", "articulation", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "audition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "cognition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "articulation", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train": [[126, 224], ["learning.Learner.audition.train", "learning.Learner.cognition.train", "learning.Learner.articulation.train", "len", "enumerate", "learning.Learner.save_model", "logger.info", "input_.to.to.to", "target.to.to.to", "f0.to.to.to", "speaker.to.to.to", "learning.Learner.optimizer.zero_grad", "torch.manual_seed", "torch.cuda.manual_seed_all", "learning.Learner.audition", "torch.nn.utils.rnn.pad_packed_sequence", "learning.Learner.cognition", "learning.Learner.articulation", "learning.Learner.spectral_loss", "learning.Learner.f0_loss", "out_lengths.sum", "modules.loss.backward", "torch.nn.utils.clip_grad_norm_", "learning.Learner.optimizer.step", "learning.Learner.lr_scheduler.step", "learning.Learner.cognition.vae.increment_iter_counts", "learning.Learner.item", "learning.Learner.item", "kl_loss_per_sample.item", "category_logits.size", "f0.to.to.data.log", "modules.loss.item", "learning.Learner.parameters", "torch.no_grad", "torch.nn.functional.softmax", "torch.nn.functional.log_softmax", "torch.nn.functional.softmax.sum", "logger.info", "category_proportion.where", "torch.nn.functional.softmax", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "learning.Learner.save_model", "clustering_counts.sum", "category_proportion.log", "torch.nn.functional.softmax.log"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.save_model", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.increment_iter_counts", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.save_model"], ["\n", "self", ".", "audition", ".", "train", "(", ")", "# Turn on training mode which enables dropout.", "\n", "self", ".", "cognition", ".", "train", "(", ")", "\n", "self", ".", "articulation", ".", "train", "(", ")", "\n", "\n", "emission_loss", "=", "0", "\n", "kl_loss", "=", "0", "\n", "elbo", "=", "0", "\n", "clustering_entropy", "=", "0", "\n", "clustering_counts", "=", "0", "\n", "num_frames", "=", "0", "\n", "\n", "num_iterations", "=", "len", "(", "dataloader", ")", "\n", "\n", "for", "iteration", ",", "(", "input_", ",", "target", ",", "speaker", ",", "_", ")", "in", "enumerate", "(", "dataloader", ",", "start_iter", ")", ":", "\n", "\t\t\t", "iteration", "+=", "1", "# make indexation start with 1.", "\n", "input_", "=", "input_", ".", "to", "(", "self", ".", "device", ")", "\n", "target", "=", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "speaker", "=", "speaker", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "torch", ".", "manual_seed", "(", "iteration", "+", "self", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "iteration", "+", "self", ".", "seed", ")", "\n", "\n", "audio_processed", "=", "self", ".", "audition", "(", "input_", ")", "\n", "\n", "target_padded", ",", "out_lengths", "=", "torch", ".", "nn", ".", "utils", ".", "rnn", ".", "pad_packed_sequence", "(", "target", ",", "batch_first", "=", "True", ")", "\n", "code", ",", "category_logits", ",", "kl_loss_total", "=", "self", ".", "cognition", "(", "audio_processed", ",", "speaker", ",", "out_lengths", ")", "\n", "\n", "output_padded", "=", "self", ".", "articulation", "(", "code", ",", "out_lengths", ")", "\n", "\n", "emission_loss_per_sample", "=", "self", ".", "spectral_loss", "(", "output_padded", ",", "target_padded", ",", "out_lengths", ")", "\n", "\n", "sample_size", "=", "out_lengths", ".", "sum", "(", ")", "\n", "kl_loss_per_sample", "=", "kl_loss_total", "/", "sample_size", "\n", "loss", "=", "emission_loss_per_sample", "+", "kl_loss_per_sample", "\n", "elbo", "+=", "-", "loss", ".", "item", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "# `clip_grad_norm` helps prevent the exploding gradient problem in RNNs.", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "parameters", "(", ")", ",", "1.0", ")", "\n", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "self", ".", "cognition", ".", "vae", ".", "increment_iter_counts", "(", ")", "\n", "\n", "emission_loss", "+=", "emission_loss_per_sample", ".", "item", "(", ")", "\n", "kl_loss", "+=", "kl_loss_per_sample", ".", "item", "(", ")", "\n", "# num_samples += sample_size", "\n", "num_frames", "+=", "category_logits", ".", "size", "(", "0", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t\t", "clustering_probs", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "category_logits", ",", "-", "1", ")", "\n", "log_clustering_probs", "=", "torch", ".", "nn", ".", "functional", ".", "log_softmax", "(", "category_logits", ",", "-", "1", ")", "\n", "clustering_entropy", "+=", "(", "-", "clustering_probs", "*", "log_clustering_probs", ")", ".", "sum", "(", ")", "\n", "clustering_counts", "+=", "clustering_probs", ".", "sum", "(", "0", ")", "\n", "\n", "", "if", "iteration", "%", "saving_interval", "==", "0", ":", "\n", "\t\t\t\t", "logger", ".", "info", "(", "'{iteration}/{num_iterations} iterations complete.'", ".", "format", "(", "\n", "iteration", "=", "iteration", ",", "\n", "num_iterations", "=", "num_iterations", ",", "\n", ")", ")", "\n", "emission_loss", "/=", "saving_interval", "\n", "kl_loss", "/=", "saving_interval", "\n", "elbo", "/=", "saving_interval", "\n", "clustering_perplex", "=", "(", "clustering_entropy", "/", "num_frames", ")", ".", "exp", "(", ")", ".", "item", "(", ")", "\n", "category_proportion", "=", "clustering_counts", "/", "clustering_counts", ".", "sum", "(", ")", "\n", "log_category_proportion", "=", "category_proportion", ".", "where", "(", "category_proportion", "==", "0.0", ",", "category_proportion", ".", "log", "(", ")", ")", "\n", "proportion_perplex", "=", "(", "-", "category_proportion", "*", "log_category_proportion", ")", ".", "sum", "(", ")", ".", "exp", "(", ")", ".", "item", "(", ")", "\n", "pi_shape", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "self", ".", "cognition", ".", "vae", ".", "posterior_shape_logits", ",", "-", "1", ")", "\n", "pi_shape_perplex", "=", "(", "-", "pi_shape", "*", "pi_shape", ".", "log", "(", ")", ")", ".", "sum", "(", ")", ".", "exp", "(", ")", ".", "item", "(", ")", "\n", "logger", ".", "info", "(", "'mean emission loss (per sound sample): {:5.4f}'", ".", "format", "(", "emission_loss", ")", ")", "\n", "logger", ".", "info", "(", "'mean KL (per sound sample): {:5.4f}'", ".", "format", "(", "kl_loss", ")", ")", "\n", "logger", ".", "info", "(", "'mean ELBO (per sound sample): {:5.4f}'", ".", "format", "(", "elbo", ")", ")", "\n", "logger", ".", "info", "(", "'perplexity of q(z | x): {:5.4f}'", ".", "format", "(", "clustering_perplex", ")", ")", "\n", "logger", ".", "info", "(", "'perplexity of sum(q(z | x)): {:5.4f}'", ".", "format", "(", "proportion_perplex", ")", ")", "\n", "logger", ".", "info", "(", "'perplexity of q(pi): {:5.4f}'", ".", "format", "(", "pi_shape_perplex", ")", ")", "\n", "emission_loss", "=", "0", "\n", "kl_loss", "=", "0", "\n", "elbo", "=", "0", "\n", "clustering_entropy", "=", "0", "\n", "clustering_counts", "=", "0", "\n", "num_frames", "=", "0", "\n", "# num_samples = 0", "\n", "self", ".", "save_model", "(", "iteration", "-", "1", ")", "\n", "", "", "self", ".", "save_model", "(", "iteration", "-", "1", ")", "\n", "logger", ".", "info", "(", "'END OF TRAINING'", ")", "\n", "\n", "\n", "\n", "", "def", "learn", "(", "self", ",", "dataset", ",", "num_iters", ",", "batch_size", ",", "milestones", "=", "list", "(", ")", ",", "pretrain_iters", "=", "0", ",", "learning_rate", "=", "4", "*", "(", "10", "**", "-", "4", ")", ",", "gamma", "=", "0.5", ",", "num_workers", "=", "1", ",", "saving_interval", "=", "1", ")", ":", "\n", "\t\t", "if", "self", ".", "retrieval", ":", "\n", "\t\t\t", "start_iter", "=", "self", ".", "last_iter", "+", "1", "\n", "logger", ".", "info", "(", "'To be restarted from the beginning of iter #: {iter}'", ".", "format", "(", "iter", "=", "start_iter", ")", ")", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "learning_rate", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "\n", "self", ".", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "self", ".", "optimizer", ",", "milestones", ",", "gamma", "=", "gamma", ")", "\n", "self", ".", "lr_scheduler", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'lr_scheduler'", "]", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.learn": [[227, 249], ["list", "modules.data_utils.get_data_loader", "learning.Learner.train", "logger.info", "torch.optim.Adam", "learning.Learner.optimizer.load_state_dict", "torch.optim.lr_scheduler.MultiStepLR", "learning.Learner.lr_scheduler.load_state_dict", "learning.Learner.cognition.vae.set_pretrain_iters", "torch.optim.Adam", "torch.optim.lr_scheduler.MultiStepLR", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "learning.Learner.parameters", "learning.Learner.parameters"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.data_utils.get_data_loader", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.train", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.set_pretrain_iters"], ["self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "learning_rate", ")", "\n", "self", ".", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "self", ".", "optimizer", ",", "milestones", ",", "gamma", "=", "gamma", ")", "\n", "logger", ".", "info", "(", "\"START LEARNING.\"", ")", "\n", "logger", ".", "info", "(", "\"# of iters: {ep}\"", ".", "format", "(", "ep", "=", "num_iters", ")", ")", "\n", "logger", ".", "info", "(", "\"first {} iters are for pretraining w/o gumbel-softmax sampling.\"", ".", "format", "(", "pretrain_iters", ")", ")", "\n", "logger", ".", "info", "(", "\"batch size for training data: {size}\"", ".", "format", "(", "size", "=", "batch_size", ")", ")", "\n", "logger", ".", "info", "(", "\"initial learning rate: {lr}\"", ".", "format", "(", "lr", "=", "learning_rate", ")", ")", "\n", "logger", ".", "info", "(", "\"Learning rate is multiplied by {gamma} at {milestones} iterations.\"", ".", "format", "(", "gamma", "=", "gamma", ",", "milestones", "=", "milestones", ")", ")", "\n", "start_iter", "=", "0", "\n", "", "dataloader", "=", "data_utils", ".", "get_data_loader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "num_iterations", "=", "num_iters", ",", "start_iter", "=", "start_iter", ",", "num_workers", "=", "num_workers", ",", "random_seed", "=", "self", ".", "seed", ")", "\n", "self", ".", "train", "(", "dataloader", ",", "saving_interval", ",", "start_iter", "=", "start_iter", ")", "\n", "\n", "\n", "", "def", "save_model", "(", "self", ",", "iteration", ")", ":", "\n", "\t\t", "\"\"\"\n\t\tSave model config.\n\t\tAllow multiple tries to prevent immediate I/O errors.\n\t\t\"\"\"", "\n", "checkpoint", "=", "{", "\n", "'iteration'", ":", "iteration", ",", "\n", "'audition'", ":", "self", ".", "audition", ".", "state_dict", "(", ")", ",", "\n", "'audition_init_args'", ":", "self", ".", "audition", ".", "pack_init_args", "(", ")", ",", "\n", "'cognition'", ":", "self", ".", "cognition", ".", "state_dict", "(", ")", ",", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.save_model": [[251, 274], ["torch.cuda.is_available", "torch.save", "torch.save", "logger.info", "learning.Learner.audition.state_dict", "learning.Learner.audition.pack_init_args", "learning.Learner.cognition.state_dict", "learning.Learner.cognition.pack_init_args", "learning.Learner.articulation.state_dict", "learning.Learner.articulation.pack_init_args", "learning.Learner.spectral_loss.pack_init_args", "learning.Learner.optimizer.state_dict", "learning.Learner.lr_scheduler.state_dict", "torch.get_rng_state", "torch.cuda.get_rng_state_all", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args", "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.modules.cognition.ABCD_VAE.pack_init_args"], ["'articulation'", ":", "self", ".", "articulation", ".", "state_dict", "(", ")", ",", "\n", "'articulation_init_args'", ":", "self", ".", "articulation", ".", "pack_init_args", "(", ")", ",", "\n", "'spectral_loss_init_args'", ":", "self", ".", "spectral_loss", ".", "pack_init_args", "(", ")", ",", "\n", "'optimizer'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'lr_scheduler'", ":", "self", ".", "lr_scheduler", ".", "state_dict", "(", ")", ",", "\n", "'random_state'", ":", "torch", ".", "get_rng_state", "(", ")", ",", "\n", "}", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "\t\t\t", "checkpoint", "[", "'random_state_cuda'", "]", "=", "torch", ".", "cuda", ".", "get_rng_state_all", "(", ")", "\n", "", "torch", ".", "save", "(", "checkpoint", ",", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'checkpoint_after-{iteration}-iters.pt'", ".", "format", "(", "iteration", "=", "iteration", "+", "1", ")", ")", ")", "\n", "torch", ".", "save", "(", "checkpoint", ",", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'checkpoint.pt'", ")", ")", "\n", "logger", ".", "info", "(", "'Config successfully saved.'", ")", "\n", "\n", "\n", "", "def", "retrieve_model", "(", "self", ",", "checkpoint_path", "=", "None", ",", "device", "=", "'cpu'", ")", ":", "\n", "\t\t", "if", "checkpoint_path", "is", "None", ":", "\n", "\t\t\t", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'checkpoint.pt'", ")", "\n", "", "self", ".", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "map_location", "=", "'cpu'", ")", "# Random state needs to be loaded to CPU first even when cuda is available.", "\n", "\n", "self", ".", "audition", "=", "audition", ".", "Audition", "(", "**", "self", ".", "checkpoint", "[", "'audition_init_args'", "]", ")", "\n", "self", ".", "cognition", "=", "cognition", ".", "Cognition", "(", "**", "self", ".", "checkpoint", "[", "'cognition_init_args'", "]", ")", "\n", "self", ".", "articulation", "=", "articulation", ".", "Articulation", "(", "**", "self", ".", "checkpoint", "[", "'articulation_init_args'", "]", ")", "\n", "self", ".", "audition", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'audition'", "]", ",", "strict", "=", "False", ")", "\n", "self", ".", "cognition", ".", "load_state_dict", "(", "self", ".", "checkpoint", "[", "'cognition'", "]", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.Learner.retrieve_model": [[276, 307], ["torch.load", "modules.audition.Audition", "modules.cognition.Cognition", "modules.articulation.Articulation", "learning.Learner.audition.load_state_dict", "learning.Learner.cognition.load_state_dict", "learning.Learner.articulation.load_state_dict", "learning.Learner.audition.to", "learning.Learner.cognition.to", "learning.Learner.articulation.to", "modules.loss.SpectralLoss", "os.path.join", "itertools.chain", "torch.set_rng_state", "torch.cuda.set_rng_state_all", "learning.Learner.audition.parameters", "learning.Learner.cognition.parameters", "learning.Learner.articulation.parameters", "logger.warning", "print"], "methods", ["None"], ["self", ".", "audition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "cognition", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "articulation", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "\n", "self", ".", "parameters", "=", "lambda", ":", "itertools", ".", "chain", "(", "self", ".", "audition", ".", "parameters", "(", ")", ",", "self", ".", "cognition", ".", "parameters", "(", ")", ",", "self", ".", "articulation", ".", "parameters", "(", ")", ")", "\n", "\n", "self", ".", "spectral_loss", "=", "loss", ".", "SpectralLoss", "(", "**", "self", ".", "checkpoint", "[", "'spectral_loss_init_args'", "]", ")", "\n", "\n", "try", ":", "\n", "\t\t\t", "torch", ".", "set_rng_state", "(", "self", ".", "checkpoint", "[", "'random_state'", "]", ")", "\n", "", "except", "RuntimeError", ":", "\n", "\t\t\t", "msg", "=", "'Failed to retrieve random_state.'", "\n", "try", ":", "\n", "\t\t\t\t", "logger", ".", "warning", "(", "msg", ")", "\n", "", "except", "NameError", ":", "\n", "\t\t\t\t", "print", "(", "msg", ")", "\n", "", "", "if", "device", "==", "'cuda'", ":", "\n", "\t\t\t", "torch", ".", "cuda", ".", "set_rng_state_all", "(", "self", ".", "checkpoint", "[", "'random_state_cuda'", "]", ")", "\n", "", "return", "self", ".", "checkpoint", "[", "'iteration'", "]", "\n", "\n", "\n", "\n", "", "", "def", "get_args", "(", ")", ":", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'input_root'", ",", "type", "=", "str", ",", "help", "=", "'Path to the root directory under which inputs are located.'", ")", "\n", "parser", ".", "add_argument", "(", "'director_file'", ",", "type", "=", "str", ",", "help", "=", "'Path to the csv file containing relative paths to the wav files and speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--path_col'", ",", "type", "=", "str", ",", "default", "=", "'filename'", ",", "help", "=", "'Name of the column containing relative paths to the wav files.'", ")", "\n", "parser", ".", "add_argument", "(", "'--speaker_col'", ",", "type", "=", "str", ",", "default", "=", "'speaker'", ",", "help", "=", "'Name of the column containing speaker IDs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--duration_col'", ",", "type", "=", "str", ",", "default", "=", "'duration'", ",", "help", "=", "'Name of the column containing the file duration (in sec).'", ")", "\n", "parser", ".", "add_argument", "(", "'-S'", ",", "'--save_root'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'Path to the directory where results are saved.'", ")", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.update_log_handler": [[13, 34], ["os.path.join", "os.path.isfile", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logger.setLevel", "logger.addHandler", "logger.removeHandler", "logger.info", "logger.info", "logger.info"], "function", ["None"], ["def", "update_log_handler", "(", "file_dir", ")", ":", "\n", "\t", "current_handlers", "=", "logger", ".", "handlers", "[", ":", "]", "\n", "for", "h", "in", "current_handlers", ":", "\n", "\t\t", "logger", ".", "removeHandler", "(", "h", ")", "\n", "", "log_file_path", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "'history.log'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "log_file_path", ")", ":", "\n", "\t\t", "retrieval", "=", "True", "\n", "", "else", ":", "\n", "\t\t", "retrieval", "=", "False", "\n", "", "handler", "=", "FileHandler", "(", "filename", "=", "log_file_path", ")", "#Define the handler.", "\n", "handler", ".", "setLevel", "(", "DEBUG", ")", "\n", "formatter", "=", "Formatter", "(", "'{asctime} - {levelname} - {message}'", ",", "style", "=", "'{'", ")", "#Define the log format.", "\n", "handler", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "setLevel", "(", "DEBUG", ")", "\n", "logger", ".", "addHandler", "(", "handler", ")", "#Register the handler for the logger.", "\n", "if", "retrieval", ":", "\n", "\t\t", "logger", ".", "info", "(", "\"LEARNING RETRIEVED.\"", ")", "\n", "", "else", ":", "\n", "\t\t", "logger", ".", "info", "(", "\"Logger set up.\"", ")", "\n", "logger", ".", "info", "(", "\"PyTorch ver.: {ver}\"", ".", "format", "(", "ver", "=", "torch", ".", "__version__", ")", ")", "\n", "", "return", "retrieval", ",", "log_file_path", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.get_args": [[310, 350], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["parser", ".", "add_argument", "(", "'-d'", ",", "'--device'", ",", "type", "=", "str", ",", "default", "=", "'cpu'", ",", "help", "=", "'Computing device.'", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--iterations'", ",", "type", "=", "int", ",", "default", "=", "900000", ",", "help", "=", "'# of iterations to train the model.'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrain_iters'", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "'# of initial iterations to pretrain the model w/o gumbel-softmax sampling.'", ")", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'Batch size for training.'", ")", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--learning_rate'", ",", "type", "=", "float", ",", "default", "=", "4", "*", "(", "10", "**", "-", "4", ")", ",", "help", "=", "'Initial learning rate.'", ")", "\n", "parser", ".", "add_argument", "(", "'--milestones'", ",", "type", "=", "int", ",", "nargs", "=", "'*'", ",", "default", "=", "[", "]", ",", "help", "=", "'Iterations at which the learning rate is reduced.'", ")", "\n", "parser", ".", "add_argument", "(", "'--gamma'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'Multiplier to the learning rate.'", ")", "\n", "parser", ".", "add_argument", "(", "'-K'", ",", "'--num_feature_categories'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'# of possible discrete values token on by latent features into which data are encoded.'", ")", "\n", "parser", ".", "add_argument", "(", "'-f'", ",", "'--feature_dim'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'# of dimensions of features into which the discrete feature are linear-transformed.'", ")", "\n", "parser", ".", "add_argument", "(", "'--encoder_layers'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of layers of encoder LSTM.'", ")", "\n", "parser", ".", "add_argument", "(", "'--articulatory_channels'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'Dimensionality of the convolutional layers.'", ")", "\n", "parser", ".", "add_argument", "(", "'--other_hidden_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'Dimensionality of the other hidden states (e.g. MLP).'", ")", "\n", "parser", ".", "add_argument", "(", "'--jitter_prob'", ",", "type", "=", "float", ",", "default", "=", ".12", ",", "help", "=", "'Probability of jitter in the decoder.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_frame_length'", ",", "type", "=", "float", ",", "default", "=", "0.025", ",", "help", "=", "'FFT frame length in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--fft_step_size'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'FFT step size in sec.'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_mfcc'", ",", "type", "=", "int", ",", "default", "=", "13", ",", "help", "=", "'# of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--mfcc_max_delta'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'Max order of derivatives of MFCCs to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--channel'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'Channel ID # (starting from 0) of multichannel recordings to use.'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_duration'", ",", "type", "=", "float", ",", "default", "=", "3.0", ",", "help", "=", "'Max duration of input wave (in sec).'", ")", "\n", "parser", ".", "add_argument", "(", "'--prior_concentration'", ",", "type", "=", "float", ",", "default", "=", "1.0", ",", "help", "=", "'Concentration of the Dirichlet prior on the probability of the discrete feature.'", ")", "\n", "parser", ".", "add_argument", "(", "'--min_temperature'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'Minimum temperature of gumbel-softmax sampling.'", ")", "\n", "parser", ".", "add_argument", "(", "'--temperature_update_freq'", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "'Frequency of temperature annealing.'", ")", "\n", "parser", ".", "add_argument", "(", "'--temperature_anneal_rate'", ",", "type", "=", "float", ",", "default", "=", "1e-5", ",", "help", "=", "'Rate of temperature annealing.'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'# of workers for dataloading (>=1).'", ")", "\n", "parser", ".", "add_argument", "(", "'--saving_interval'", ",", "type", "=", "int", ",", "default", "=", "200", ",", "help", "=", "'# of iterations in which model parameters are saved once.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "", "def", "get_save_dir", "(", "save_root", ",", "job_id_str", ")", ":", "\n", "\t", "save_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "save_root", ",", "\n", "job_id_str", "# + '_START-AT-' + datetime.datetime.now().strftime('%y-%m-%d-%H-%M-%S-%f')", "\n", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "save_dir", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "return", "save_dir", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "\t", "args", "=", "get_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tkc-morita_ZeroSpeech2020_TTSwoT.ESN_F0-learn.learning.get_save_dir": [[352, 360], ["os.path.join", "os.path.isdir", "os.makedirs"], "function", ["None"], ["if", "save_root", "is", "None", ":", "\n", "\t\t", "save_root", "=", "args", ".", "input_root", "\n", "", "save_dir", "=", "get_save_dir", "(", "save_root", ",", "args", ".", "job_id", ")", "\n", "\n", "speaker_coding_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'speaker_coding.json'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "speaker_coding_path", ")", ":", "\n", "\t\t", "with", "open", "(", "speaker_coding_path", ",", "'r'", ")", "as", "f", ":", "\n", "\t\t\t", "speaker2ix", "=", "json", ".", "load", "(", "f", ")", "\n", "", "", "else", ":", "\n"]]}