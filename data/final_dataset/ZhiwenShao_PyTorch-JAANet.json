{"home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.train_JAAv2_disfa.main": [[16, 262], ["torch.cuda.is_available", "torch.cuda.is_available", "torch.from_numpy", "torch.from_numpy", "data_list.ImageList", "torch.DataLoader", "data_list.ImageList", "torch.DataLoader", "print", "region_learning.cuda.load_state_dict", "align_net.cuda.load_state_dict", "pretrain_local_attention_refine.load_state_dict", "pretrain_local_au_net.load_state_dict", "global_au_feat.cuda.load_state_dict", "print", "print", "print", "print", "print", "print", "open", "range", "open.close", "np.loadtxt", "au_weight.float.float().cuda", "au_weight.float.float", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "region_learning.cuda.load_state_dict", "align_net.cuda.load_state_dict", "local_attention_refine.cuda.load_state_dict", "local_au_net.cuda.load_state_dict", "global_au_feat.cuda.load_state_dict", "au_net.cuda.load_state_dict", "region_learning.cuda.cuda", "align_net.cuda.cuda", "local_attention_refine.cuda.cuda", "local_au_net.cuda.cuda", "global_au_feat.cuda.cuda", "au_net.cuda.cuda", "itertools.chain", "param_lr.append", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "enumerate", "pre_process.image_train", "pre_process.land_transform", "pre_process.image_test", "pre_process.land_transform", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "filter", "filter", "filter", "filter", "filter", "filter", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "region_learning.cuda.train", "align_net.cuda.train", "local_attention_refine.cuda.train", "local_au_net.cuda.train", "global_au_feat.cuda.train", "au_net.cuda.train", "util.AU_detection_evalv2", "print", "print", "region_learning.cuda.train", "align_net.cuda.train", "local_attention_refine.cuda.train", "local_au_net.cuda.train", "global_au_feat.cuda.train", "au_net.cuda.train", "lr_scheduler", "lr_scheduler.zero_grad", "region_learning.cuda.", "align_net.cuda.", "local_attention_refine.cuda.", "local_au_net.cuda.", "global_au_feat.cuda.", "torch.cat", "torch.cat", "au_net.cuda.", "util.au_softmax_loss", "util.au_dice_loss", "util.au_softmax_loss", "util.au_dice_loss", "util.landmark_loss", "total_loss.backward", "lr_scheduler.step", "au_weight.float.float", "region_learning.cuda.parameters", "align_net.cuda.parameters", "local_attention_refine.cuda.parameters", "local_au_net.cuda.parameters", "global_au_feat.cuda.parameters", "au_net.cuda.parameters", "str", "region_learning.cuda.state_dict", "align_net.cuda.state_dict", "local_attention_refine.cuda.state_dict", "local_au_net.cuda.state_dict", "global_au_feat.cuda.state_dict", "au_net.cuda.state_dict", "print", "print", "print", "au.long.long", "aus_map.cuda.cuda", "aus_map.cuda.detach", "np.loadtxt", "np.loadtxt", "str", "str", "str", "str", "str", "input.cuda", "land.float().cuda", "biocular.float().cuda", "au.long.long().cuda", "local_au_out_feat.detach", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "local_f1score_arr.mean", "local_acc_arr.mean", "f1score_arr.mean", "acc_arr.mean", "local_f1score_arr.mean", "local_acc_arr.mean", "f1score_arr.mean", "acc_arr.mean", "total_loss.data.cpu().numpy", "util.au_softmax_loss.data.cpu().numpy", "util.au_dice_loss.data.cpu().numpy", "util.au_softmax_loss.data.cpu().numpy", "util.au_dice_loss.data.cpu().numpy", "util.landmark_loss.data.cpu().numpy", "land.float", "biocular.float", "au.long.long", "total_loss.data.cpu", "util.au_softmax_loss.data.cpu", "util.au_dice_loss.data.cpu", "util.au_softmax_loss.data.cpu", "util.au_dice_loss.data.cpu", "util.landmark_loss.data.cpu"], "function", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_test", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.AU_detection_evalv2", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_softmax_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_dice_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_softmax_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_dice_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.landmark_loss"], ["def", "main", "(", "config", ")", ":", "\n", "## set loss criterion", "\n", "    ", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "au_weight", "=", "torch", ".", "from_numpy", "(", "np", ".", "loadtxt", "(", "config", ".", "train_path_prefix", "+", "'_weight.txt'", ")", ")", "\n", "if", "use_gpu", ":", "\n", "        ", "au_weight", "=", "au_weight", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "au_weight", "=", "au_weight", ".", "float", "(", ")", "\n", "\n", "## prepare data", "\n", "", "dsets", "=", "{", "}", "\n", "dset_loaders", "=", "{", "}", "\n", "\n", "dsets", "[", "'train'", "]", "=", "ImageList", "(", "crop_size", "=", "config", ".", "crop_size", ",", "path", "=", "config", ".", "train_path_prefix", ",", "\n", "transform", "=", "prep", ".", "image_train", "(", "crop_size", "=", "config", ".", "crop_size", ")", ",", "\n", "target_transform", "=", "prep", ".", "land_transform", "(", "img_size", "=", "config", ".", "crop_size", ",", "\n", "flip_reflect", "=", "np", ".", "loadtxt", "(", "\n", "config", ".", "flip_reflect", ")", ")", ")", "\n", "\n", "dset_loaders", "[", "'train'", "]", "=", "util_data", ".", "DataLoader", "(", "dsets", "[", "'train'", "]", ",", "batch_size", "=", "config", ".", "train_batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "config", ".", "num_workers", ")", "\n", "\n", "dsets", "[", "'test'", "]", "=", "ImageList", "(", "crop_size", "=", "config", ".", "crop_size", ",", "path", "=", "config", ".", "test_path_prefix", ",", "phase", "=", "'test'", ",", "\n", "transform", "=", "prep", ".", "image_test", "(", "crop_size", "=", "config", ".", "crop_size", ")", ",", "\n", "target_transform", "=", "prep", ".", "land_transform", "(", "img_size", "=", "config", ".", "crop_size", ",", "\n", "flip_reflect", "=", "np", ".", "loadtxt", "(", "\n", "config", ".", "flip_reflect", ")", ")", "\n", ")", "\n", "\n", "dset_loaders", "[", "'test'", "]", "=", "util_data", ".", "DataLoader", "(", "dsets", "[", "'test'", "]", ",", "batch_size", "=", "config", ".", "eval_batch_size", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "config", ".", "num_workers", ")", "\n", "\n", "## set network modules", "\n", "region_learning", "=", "network", ".", "network_dict", "[", "config", ".", "region_learning", "]", "(", "input_dim", "=", "3", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "align_net", "=", "network", ".", "network_dict", "[", "config", ".", "align_net", "]", "(", "crop_size", "=", "config", ".", "crop_size", ",", "map_size", "=", "config", ".", "map_size", ",", "\n", "au_num", "=", "config", ".", "au_num", ",", "land_num", "=", "config", ".", "land_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ")", "\n", "local_attention_refine", "=", "network", ".", "network_dict", "[", "config", ".", "local_attention_refine", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "local_au_net", "=", "network", ".", "network_dict", "[", "config", ".", "local_au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "global_au_feat", "=", "network", ".", "network_dict", "[", "config", ".", "global_au_feat", "]", "(", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "au_net", "=", "network", ".", "network_dict", "[", "config", ".", "au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "12000", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "pretrain_local_attention_refine", "=", "network", ".", "network_dict", "[", "config", ".", "local_attention_refine", "]", "(", "au_num", "=", "config", ".", "bp4d_au_num", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "pretrain_local_au_net", "=", "network", ".", "network_dict", "[", "config", ".", "local_au_net", "]", "(", "au_num", "=", "config", ".", "bp4d_au_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "print", "(", "'loading pretrained model ...'", ")", "\n", "region_learning", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "pretrain_path", "+", "'/region_learning_'", "+", "str", "(", "config", ".", "pretrain_epoch", ")", "+", "'.pth'", ")", ")", "\n", "align_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "pretrain_path", "+", "'/align_net_'", "+", "str", "(", "config", ".", "pretrain_epoch", ")", "+", "'.pth'", ")", ")", "\n", "pretrain_local_attention_refine", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "pretrain_path", "+", "'/local_attention_refine_'", "+", "str", "(", "\n", "config", ".", "pretrain_epoch", ")", "+", "'.pth'", ")", ")", "\n", "pretrain_local_au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "pretrain_path", "+", "'/local_au_net_'", "+", "str", "(", "config", ".", "pretrain_epoch", ")", "+", "'.pth'", ")", ")", "\n", "global_au_feat", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "pretrain_path", "+", "'/global_au_feat_'", "+", "str", "(", "config", ".", "pretrain_epoch", ")", "+", "'.pth'", ")", ")", "\n", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "0", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "0", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "1", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "1", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "2", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "2", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "3", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "3", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "5", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "6", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "6", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "10", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "7", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "9", "]", "\n", "\n", "local_au_net", ".", "local_aus_branch", "[", "0", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "0", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "1", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "1", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "2", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "2", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "3", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "3", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "5", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "6", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "6", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "10", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "7", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "9", "]", "\n", "\n", "if", "config", ".", "start_epoch", ">", "0", ":", "\n", "        ", "print", "(", "'resuming model from epoch %d'", "%", "(", "config", ".", "start_epoch", ")", ")", "\n", "region_learning", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/region_learning_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "align_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/align_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_attention_refine", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_attention_refine_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_au_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "global_au_feat", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/global_au_feat_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/au_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "\n", "", "if", "use_gpu", ":", "\n", "        ", "region_learning", "=", "region_learning", ".", "cuda", "(", ")", "\n", "align_net", "=", "align_net", ".", "cuda", "(", ")", "\n", "local_attention_refine", "=", "local_attention_refine", ".", "cuda", "(", ")", "\n", "local_au_net", "=", "local_au_net", ".", "cuda", "(", ")", "\n", "global_au_feat", "=", "global_au_feat", ".", "cuda", "(", ")", "\n", "au_net", "=", "au_net", ".", "cuda", "(", ")", "\n", "\n", "", "print", "(", "region_learning", ")", "\n", "print", "(", "align_net", ")", "\n", "print", "(", "local_attention_refine", ")", "\n", "print", "(", "local_au_net", ")", "\n", "print", "(", "global_au_feat", ")", "\n", "print", "(", "au_net", ")", "\n", "# summary(net, (3, config.crop_size, config.crop_size))", "\n", "\n", "## collect parameters", "\n", "region_learning_parameter_list", "=", "[", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "region_learning", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "align_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "align_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "local_attention_refine_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "local_attention_refine", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "local_au_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "local_au_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "global_au_feat_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "global_au_feat", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "au_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "au_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "\n", "## set optimizer", "\n", "optimizer", "=", "optim_dict", "[", "config", ".", "optimizer_type", "]", "(", "itertools", ".", "chain", "(", "region_learning_parameter_list", ",", "align_net_parameter_list", ",", "\n", "local_attention_refine_parameter_list", ",", "\n", "local_au_net_parameter_list", ",", "\n", "global_au_feat_parameter_list", ",", "\n", "au_net_parameter_list", ")", ",", "\n", "lr", "=", "1.0", ",", "momentum", "=", "config", ".", "momentum", ",", "weight_decay", "=", "config", ".", "weight_decay", ",", "\n", "nesterov", "=", "config", ".", "use_nesterov", ")", "\n", "param_lr", "=", "[", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_lr", ".", "append", "(", "param_group", "[", "'lr'", "]", ")", "\n", "\n", "", "lr_scheduler", "=", "lr_schedule", ".", "schedule_dict", "[", "config", ".", "lr_type", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", "\n", "\n", "", "res_file", "=", "open", "(", "\n", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/AU_pred_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.txt'", ",", "'w'", ")", "\n", "\n", "## train", "\n", "count", "=", "0", "\n", "\n", "for", "epoch", "in", "range", "(", "config", ".", "start_epoch", ",", "config", ".", "n_epochs", "+", "1", ")", ":", "\n", "        ", "if", "epoch", ">", "config", ".", "start_epoch", ":", "\n", "            ", "print", "(", "'taking snapshot ...'", ")", "\n", "torch", ".", "save", "(", "region_learning", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/region_learning_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "align_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/align_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "local_attention_refine", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_attention_refine_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "local_au_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "global_au_feat", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/global_au_feat_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "au_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "\n", "# eval in the train", "\n", "", "if", "epoch", ">", "config", ".", "start_epoch", ":", "\n", "            ", "print", "(", "'testing ...'", ")", "\n", "region_learning", ".", "train", "(", "False", ")", "\n", "align_net", ".", "train", "(", "False", ")", "\n", "local_attention_refine", ".", "train", "(", "False", ")", "\n", "local_au_net", ".", "train", "(", "False", ")", "\n", "global_au_feat", ".", "train", "(", "False", ")", "\n", "au_net", ".", "train", "(", "False", ")", "\n", "\n", "local_f1score_arr", ",", "local_acc_arr", ",", "f1score_arr", ",", "acc_arr", ",", "mean_error", ",", "failure_rate", "=", "AU_detection_evalv2", "(", "\n", "dset_loaders", "[", "'test'", "]", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "\n", "local_au_net", ",", "global_au_feat", ",", "au_net", ",", "use_gpu", "=", "use_gpu", ")", "\n", "print", "(", "'epoch =%d, local f1 score mean=%f, local accuracy mean=%f, '", "\n", "'f1 score mean=%f, accuracy mean=%f, mean error=%f, failure rate=%f'", "%", "(", "epoch", ",", "local_f1score_arr", ".", "mean", "(", ")", ",", "\n", "local_acc_arr", ".", "mean", "(", ")", ",", "f1score_arr", ".", "mean", "(", ")", ",", "\n", "acc_arr", ".", "mean", "(", ")", ",", "mean_error", ",", "failure_rate", ")", ")", "\n", "print", "(", "'%d\\t%f\\t%f\\t%f\\t%f\\t%f\\t%f'", "%", "(", "epoch", ",", "local_f1score_arr", ".", "mean", "(", ")", ",", "\n", "local_acc_arr", ".", "mean", "(", ")", ",", "f1score_arr", ".", "mean", "(", ")", ",", "\n", "acc_arr", ".", "mean", "(", ")", ",", "mean_error", ",", "failure_rate", ")", ",", "file", "=", "res_file", ")", "\n", "\n", "region_learning", ".", "train", "(", "True", ")", "\n", "align_net", ".", "train", "(", "True", ")", "\n", "local_attention_refine", ".", "train", "(", "True", ")", "\n", "local_au_net", ".", "train", "(", "True", ")", "\n", "global_au_feat", ".", "train", "(", "True", ")", "\n", "au_net", ".", "train", "(", "True", ")", "\n", "\n", "", "if", "epoch", ">=", "config", ".", "n_epochs", ":", "\n", "            ", "break", "\n", "\n", "", "for", "i", ",", "batch", "in", "enumerate", "(", "dset_loaders", "[", "'train'", "]", ")", ":", "\n", "            ", "if", "i", "%", "config", ".", "display", "==", "0", "and", "count", ">", "0", ":", "\n", "                ", "print", "(", "'[epoch = %d][iter = %d][total_loss = %f][loss_au_softmax = %f][loss_au_dice = %f]'", "\n", "'[loss_local_au_softmax = %f][loss_local_au_dice = %f]'", "\n", "'[loss_land = %f]'", "%", "(", "epoch", ",", "i", ",", "\n", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_au_softmax", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_au_dice", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "\n", "loss_local_au_softmax", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_local_au_dice", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_land", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "print", "(", "'learning rate = %f %f %f %f %f %f'", "%", "(", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "2", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "3", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "4", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "5", "]", "[", "'lr'", "]", ")", ")", "\n", "print", "(", "'the number of training iterations is %d'", "%", "(", "count", ")", ")", "\n", "\n", "", "input", ",", "land", ",", "biocular", ",", "au", "=", "batch", "\n", "\n", "if", "use_gpu", ":", "\n", "                ", "input", ",", "land", ",", "biocular", ",", "au", "=", "input", ".", "cuda", "(", ")", ",", "land", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "biocular", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "au", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "                ", "au", "=", "au", ".", "long", "(", ")", "\n", "\n", "", "optimizer", "=", "lr_scheduler", "(", "param_lr", ",", "optimizer", ",", "epoch", ",", "config", ".", "gamma", ",", "config", ".", "stepsize", ",", "config", ".", "init_lr", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "region_feat", "=", "region_learning", "(", "input", ")", "\n", "align_feat", ",", "align_output", ",", "aus_map", "=", "align_net", "(", "region_feat", ")", "\n", "if", "use_gpu", ":", "\n", "                ", "aus_map", "=", "aus_map", ".", "cuda", "(", ")", "\n", "", "output_aus_map", "=", "local_attention_refine", "(", "aus_map", ".", "detach", "(", ")", ")", "\n", "local_au_out_feat", ",", "local_aus_output", "=", "local_au_net", "(", "region_feat", ",", "output_aus_map", ")", "\n", "global_au_out_feat", "=", "global_au_feat", "(", "region_feat", ")", "\n", "concat_au_feat", "=", "torch", ".", "cat", "(", "(", "align_feat", ",", "global_au_out_feat", ",", "local_au_out_feat", ".", "detach", "(", ")", ")", ",", "1", ")", "\n", "aus_output", "=", "au_net", "(", "concat_au_feat", ")", "\n", "\n", "loss_au_softmax", "=", "au_softmax_loss", "(", "aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_au_dice", "=", "au_dice_loss", "(", "aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_au", "=", "loss_au_softmax", "+", "loss_au_dice", "\n", "\n", "loss_local_au_softmax", "=", "au_softmax_loss", "(", "local_aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_local_au_dice", "=", "au_dice_loss", "(", "local_aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_local_au", "=", "loss_local_au_softmax", "+", "loss_local_au_dice", "\n", "\n", "loss_land", "=", "landmark_loss", "(", "align_output", ",", "land", ",", "biocular", ")", "\n", "\n", "total_loss", "=", "config", ".", "lambda_au", "*", "(", "loss_au", "+", "loss_local_au", ")", "+", "config", ".", "lambda_land", "*", "loss_land", "\n", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "count", "=", "count", "+", "1", "\n", "\n", "", "", "res_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.test_JAAv2.main": [[14, 105], ["torch.cuda.is_available", "torch.cuda.is_available", "data_list.ImageList", "torch.DataLoader", "open", "region_learning.cuda.train", "align_net.cuda.train", "local_attention_refine.cuda.train", "local_au_net.cuda.train", "global_au_feat.cuda.train", "au_net.cuda.train", "range", "open.close", "region_learning.cuda.cuda", "align_net.cuda.cuda", "local_attention_refine.cuda.cuda", "local_au_net.cuda.cuda", "global_au_feat.cuda.cuda", "au_net.cuda.cuda", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "RuntimeError", "region_learning.cuda.load_state_dict", "align_net.cuda.load_state_dict", "local_attention_refine.cuda.load_state_dict", "local_au_net.cuda.load_state_dict", "global_au_feat.cuda.load_state_dict", "au_net.cuda.load_state_dict", "pre_process.image_test", "pre_process.land_transform", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "util.AU_detection_evalv2", "print", "print", "util.vis_attention", "str", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "np.loadtxt", "str", "str", "str", "str", "str", "str", "local_f1score_arr.mean", "local_acc_arr.mean", "f1score_arr.mean", "acc_arr.mean", "local_f1score_arr.mean", "local_acc_arr.mean", "f1score_arr.mean", "acc_arr.mean", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_test", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.AU_detection_evalv2", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.vis_attention"], ["def", "main", "(", "config", ")", ":", "\n", "## set loss criterion", "\n", "    ", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "## prepare data", "\n", "dsets", "=", "{", "}", "\n", "dset_loaders", "=", "{", "}", "\n", "dsets", "[", "'test'", "]", "=", "ImageList", "(", "crop_size", "=", "config", ".", "crop_size", ",", "path", "=", "config", ".", "test_path_prefix", ",", "phase", "=", "'test'", ",", "\n", "transform", "=", "prep", ".", "image_test", "(", "crop_size", "=", "config", ".", "crop_size", ")", ",", "\n", "target_transform", "=", "prep", ".", "land_transform", "(", "img_size", "=", "config", ".", "crop_size", ",", "\n", "flip_reflect", "=", "np", ".", "loadtxt", "(", "\n", "config", ".", "flip_reflect", ")", ")", "\n", ")", "\n", "\n", "dset_loaders", "[", "'test'", "]", "=", "util_data", ".", "DataLoader", "(", "dsets", "[", "'test'", "]", ",", "batch_size", "=", "config", ".", "eval_batch_size", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "config", ".", "num_workers", ")", "\n", "\n", "## set network modules", "\n", "region_learning", "=", "network", ".", "network_dict", "[", "config", ".", "region_learning", "]", "(", "input_dim", "=", "3", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "align_net", "=", "network", ".", "network_dict", "[", "config", ".", "align_net", "]", "(", "crop_size", "=", "config", ".", "crop_size", ",", "map_size", "=", "config", ".", "map_size", ",", "\n", "au_num", "=", "config", ".", "au_num", ",", "land_num", "=", "config", ".", "land_num", ",", "\n", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ")", "\n", "local_attention_refine", "=", "network", ".", "network_dict", "[", "config", ".", "local_attention_refine", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "local_au_net", "=", "network", ".", "network_dict", "[", "config", ".", "local_au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "global_au_feat", "=", "network", ".", "network_dict", "[", "config", ".", "global_au_feat", "]", "(", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "au_net", "=", "network", ".", "network_dict", "[", "config", ".", "au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "12000", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "region_learning", "=", "region_learning", ".", "cuda", "(", ")", "\n", "align_net", "=", "align_net", ".", "cuda", "(", ")", "\n", "local_attention_refine", "=", "local_attention_refine", ".", "cuda", "(", ")", "\n", "local_au_net", "=", "local_au_net", ".", "cuda", "(", ")", "\n", "global_au_feat", "=", "global_au_feat", ".", "cuda", "(", ")", "\n", "au_net", "=", "au_net", ".", "cuda", "(", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", "\n", "\n", "", "if", "config", ".", "start_epoch", "<=", "0", ":", "\n", "        ", "raise", "(", "RuntimeError", "(", "'start_epoch should be larger than 0\\n'", ")", ")", "\n", "\n", "", "res_file", "=", "open", "(", "\n", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/'", "+", "config", ".", "prefix", "+", "'offline_AU_pred_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.txt'", ",", "'w'", ")", "\n", "region_learning", ".", "train", "(", "False", ")", "\n", "align_net", ".", "train", "(", "False", ")", "\n", "local_attention_refine", ".", "train", "(", "False", ")", "\n", "local_au_net", ".", "train", "(", "False", ")", "\n", "global_au_feat", ".", "train", "(", "False", ")", "\n", "au_net", ".", "train", "(", "False", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "config", ".", "start_epoch", ",", "config", ".", "n_epochs", "+", "1", ")", ":", "\n", "        ", "region_learning", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/region_learning_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "align_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/align_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_attention_refine", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_attention_refine_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "global_au_feat", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/global_au_feat_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "\n", "if", "config", ".", "pred_AU", ":", "\n", "            ", "local_f1score_arr", ",", "local_acc_arr", ",", "f1score_arr", ",", "acc_arr", ",", "mean_error", ",", "failure_rate", "=", "AU_detection_evalv2", "(", "\n", "dset_loaders", "[", "'test'", "]", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "\n", "local_au_net", ",", "global_au_feat", ",", "au_net", ",", "use_gpu", "=", "use_gpu", ")", "\n", "print", "(", "'epoch =%d, local f1 score mean=%f, local accuracy mean=%f, '", "\n", "'f1 score mean=%f, accuracy mean=%f, mean error=%f, failure rate=%f'", "%", "(", "\n", "epoch", ",", "local_f1score_arr", ".", "mean", "(", ")", ",", "\n", "local_acc_arr", ".", "mean", "(", ")", ",", "f1score_arr", ".", "mean", "(", ")", ",", "\n", "acc_arr", ".", "mean", "(", ")", ",", "mean_error", ",", "failure_rate", ")", ")", "\n", "print", "(", "'%d\\t%f\\t%f\\t%f\\t%f\\t%f\\t%f'", "%", "(", "epoch", ",", "local_f1score_arr", ".", "mean", "(", ")", ",", "\n", "local_acc_arr", ".", "mean", "(", ")", ",", "f1score_arr", ".", "mean", "(", ")", ",", "\n", "acc_arr", ".", "mean", "(", ")", ",", "mean_error", ",", "failure_rate", ")", ",", "file", "=", "res_file", ")", "\n", "", "if", "config", ".", "vis_attention", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/vis_map/'", "+", "str", "(", "epoch", ")", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/vis_map/'", "+", "str", "(", "epoch", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/overlay_vis_map/'", "+", "str", "(", "epoch", ")", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/overlay_vis_map/'", "+", "str", "(", "epoch", ")", ")", "\n", "\n", "", "vis_attention", "(", "dset_loaders", "[", "'test'", "]", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "\n", "config", ".", "write_res_prefix", ",", "config", ".", "run_name", ",", "epoch", ",", "use_gpu", "=", "use_gpu", ")", "\n", "\n", "", "", "res_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.LocalConv2dReLU.__init__": [[9, 24], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range", "torch.ReLU", "torch.ReLU", "torch.ReLU", "range", "range", "torch.PReLU", "torch.PReLU", "torch.PReLU", "range"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__init__"], ["    ", "def", "__init__", "(", "self", ",", "local_h_num", ",", "local_w_num", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "activation_type", "=", "'ReLU'", ")", ":", "\n", "        ", "super", "(", "LocalConv2dReLU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "local_h_num", "=", "local_h_num", "\n", "self", ".", "local_w_num", "=", "local_w_num", "\n", "\n", "self", ".", "bns", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "for", "i", "in", "range", "(", "local_h_num", "*", "local_w_num", ")", "]", ")", "\n", "\n", "if", "activation_type", "==", "'ReLU'", ":", "\n", "            ", "self", ".", "relus", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "for", "i", "in", "range", "(", "local_h_num", "*", "local_w_num", ")", "]", ")", "\n", "", "elif", "activation_type", "==", "'PReLU'", ":", "\n", "            ", "self", ".", "relus", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "PReLU", "(", ")", "for", "i", "in", "range", "(", "local_h_num", "*", "local_w_num", ")", "]", ")", "\n", "\n", "", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "groups", ",", "bias", ")", "for", "i", "in", "\n", "range", "(", "local_h_num", "*", "local_w_num", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.LocalConv2dReLU.forward": [[25, 47], ["torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "range", "int", "len", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "range", "int", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.size", "w_splits[].contiguous", "h_out.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "h_splits[].size", "len", "len", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h_splits", "=", "torch", ".", "split", "(", "x", ",", "int", "(", "x", ".", "size", "(", "2", ")", "/", "self", ".", "local_h_num", ")", ",", "2", ")", "\n", "\n", "h_out", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "h_splits", ")", ")", ":", "\n", "            ", "start", "=", "True", "\n", "w_splits", "=", "torch", ".", "split", "(", "h_splits", "[", "i", "]", ",", "int", "(", "h_splits", "[", "i", "]", ".", "size", "(", "3", ")", "/", "self", ".", "local_w_num", ")", ",", "3", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "w_splits", ")", ")", ":", "\n", "                ", "bn_out", "=", "self", ".", "bns", "[", "i", "*", "len", "(", "w_splits", ")", "+", "j", "]", "(", "w_splits", "[", "j", "]", ".", "contiguous", "(", ")", ")", "\n", "bn_out", "=", "self", ".", "relus", "[", "i", "*", "len", "(", "w_splits", ")", "+", "j", "]", "(", "bn_out", ")", "\n", "conv_out", "=", "self", ".", "convs", "[", "i", "*", "len", "(", "w_splits", ")", "+", "j", "]", "(", "bn_out", ")", "\n", "if", "start", ":", "\n", "                    ", "h_out", ".", "append", "(", "conv_out", ")", "\n", "start", "=", "False", "\n", "", "else", ":", "\n", "                    ", "h_out", "[", "i", "]", "=", "torch", ".", "cat", "(", "(", "h_out", "[", "i", "]", ",", "conv_out", ")", ",", "3", ")", "\n", "", "", "if", "i", "==", "0", ":", "\n", "                ", "out", "=", "h_out", "[", "i", "]", "\n", "", "else", ":", "\n", "                ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "h_out", "[", "i", "]", ")", ",", "2", ")", "\n", "\n", "", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.HierarchicalMultiScaleRegionLayer.__init__": [[50, 71], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "network.LocalConv2dReLU", "network.LocalConv2dReLU", "network.LocalConv2dReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "int", "int", "int", "int", "int", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__init__"], ["    ", "def", "__init__", "(", "self", ",", "local_group", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "activation_type", "=", "'ReLU'", ")", ":", "\n", "        ", "super", "(", "HierarchicalMultiScaleRegionLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "\n", "padding", ",", "dilation", ",", "groups", ",", "bias", ")", "\n", "self", ".", "local_conv_branch1", "=", "LocalConv2dReLU", "(", "local_group", "[", "0", "]", "[", "0", "]", ",", "local_group", "[", "0", "]", "[", "1", "]", ",", "out_channels", ",", "int", "(", "out_channels", "/", "2", ")", ",", "\n", "kernel_size", ",", "stride", ",", "\n", "padding", ",", "dilation", ",", "groups", ",", "bias", ",", "activation_type", ")", "\n", "self", ".", "local_conv_branch2", "=", "LocalConv2dReLU", "(", "local_group", "[", "1", "]", "[", "0", "]", ",", "local_group", "[", "1", "]", "[", "1", "]", ",", "int", "(", "out_channels", "/", "2", ")", ",", "\n", "int", "(", "out_channels", "/", "4", ")", ",", "kernel_size", ",", "stride", ",", "\n", "padding", ",", "dilation", ",", "groups", ",", "bias", ",", "activation_type", ")", "\n", "self", ".", "local_conv_branch3", "=", "LocalConv2dReLU", "(", "local_group", "[", "2", "]", "[", "0", "]", ",", "local_group", "[", "2", "]", "[", "1", "]", ",", "int", "(", "out_channels", "/", "4", ")", ",", "\n", "int", "(", "out_channels", "/", "4", ")", ",", "kernel_size", ",", "stride", ",", "\n", "padding", ",", "dilation", ",", "groups", ",", "bias", ",", "activation_type", ")", "\n", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "\n", "if", "activation_type", "==", "'ReLU'", ":", "\n", "            ", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "activation_type", "==", "'PReLU'", ":", "\n", "            ", "self", ".", "relu", "=", "nn", ".", "PReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.HierarchicalMultiScaleRegionLayer.forward": [[72, 84], ["network.HierarchicalMultiScaleRegionLayer.conv", "network.HierarchicalMultiScaleRegionLayer.local_conv_branch1", "network.HierarchicalMultiScaleRegionLayer.local_conv_branch2", "network.HierarchicalMultiScaleRegionLayer.local_conv_branch3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.HierarchicalMultiScaleRegionLayer.bn", "network.HierarchicalMultiScaleRegionLayer.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "local_branch1", "=", "self", ".", "local_conv_branch1", "(", "x", ")", "\n", "local_branch2", "=", "self", ".", "local_conv_branch2", "(", "local_branch1", ")", "\n", "local_branch3", "=", "self", ".", "local_conv_branch3", "(", "local_branch2", ")", "\n", "local_out", "=", "torch", ".", "cat", "(", "(", "local_branch1", ",", "local_branch2", ",", "local_branch3", ")", ",", "1", ")", "\n", "\n", "out", "=", "x", "+", "local_out", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.HLFeatExtractor.__init__": [[87, 114], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "unit_dim", "=", "8", ")", ":", "\n", "        ", "super", "(", "HLFeatExtractor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "feat_extract", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_dim", ",", "unit_dim", "*", "12", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "unit_dim", "*", "12", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "unit_dim", "*", "12", ",", "unit_dim", "*", "12", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "unit_dim", "*", "12", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "unit_dim", "*", "12", ",", "unit_dim", "*", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "unit_dim", "*", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "unit_dim", "*", "16", ",", "unit_dim", "*", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "unit_dim", "*", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "unit_dim", "*", "16", ",", "unit_dim", "*", "20", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "unit_dim", "*", "20", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "unit_dim", "*", "20", ",", "unit_dim", "*", "20", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "unit_dim", "*", "20", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.HLFeatExtractor.forward": [[116, 119], ["network.HLFeatExtractor.feat_extract"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "feat_extract", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.HMRegionLearning.__init__": [[122, 135], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "network.HierarchicalMultiScaleRegionLayer", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "network.HierarchicalMultiScaleRegionLayer", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", "=", "3", ",", "unit_dim", "=", "8", ")", ":", "\n", "        ", "super", "(", "HMRegionLearning", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "multiscale_feat", "=", "nn", ".", "Sequential", "(", "\n", "HierarchicalMultiScaleRegionLayer", "(", "[", "[", "8", ",", "8", "]", ",", "[", "4", ",", "4", "]", ",", "[", "2", ",", "2", "]", "]", ",", "input_dim", ",", "unit_dim", "*", "4", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "activation_type", "=", "'ReLU'", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "\n", "HierarchicalMultiScaleRegionLayer", "(", "[", "[", "8", ",", "8", "]", ",", "[", "4", ",", "4", "]", ",", "[", "2", ",", "2", "]", "]", ",", "unit_dim", "*", "4", ",", "unit_dim", "*", "8", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "activation_type", "=", "'ReLU'", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.HMRegionLearning.forward": [[137, 140], ["network.HMRegionLearning.multiscale_feat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "multiscale_feat", "=", "self", ".", "multiscale_feat", "(", "x", ")", "\n", "return", "multiscale_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.AlignNet.__init__": [[173, 188], ["torch.Module.__init__", "network.HLFeatExtractor", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__init__"], ["    ", "def", "__init__", "(", "self", ",", "crop_size", ",", "map_size", ",", "au_num", ",", "land_num", ",", "input_dim", ",", "unit_dim", "=", "8", ",", "\n", "spatial_ratio", "=", "0.14", ",", "fill_coeff", "=", "0.56", ")", ":", "\n", "        ", "super", "(", "AlignNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "align_feat", "=", "HLFeatExtractor", "(", "input_dim", "=", "input_dim", ",", "unit_dim", "=", "unit_dim", ")", "\n", "self", ".", "align_output", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "4000", ",", "unit_dim", "*", "64", ")", ",", "\n", "nn", ".", "Linear", "(", "unit_dim", "*", "64", ",", "land_num", "*", "2", ")", "\n", ")", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "map_size", "=", "map_size", "\n", "self", ".", "au_num", "=", "au_num", "\n", "self", ".", "land_num", "=", "land_num", "\n", "self", ".", "spatial_ratio", "=", "spatial_ratio", "\n", "self", ".", "fill_coeff", "=", "fill_coeff", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.AlignNet.forward": [[189, 272], ["network.AlignNet.align_feat", "network.AlignNet.view", "network.AlignNet.align_output", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "network.AlignNet.size", "network.AlignNet.size", "land_array.data.cpu().numpy.data.cpu().numpy.data.cpu().numpy", "numpy.append", "numpy.array().reshape", "abs", "network.generate_map", "network.generate_map", "network.generate_map", "network.generate_map", "network.AlignNet.size", "network.generate_map", "network.generate_map", "network.generate_map", "network.generate_map", "network.generate_map", "land_array.data.cpu().numpy.data.cpu().numpy.data.cpu", "numpy.array", "network.generate_map", "network.generate_map", "network.generate_map", "network.generate_map", "len", "len", "network.generate_map", "network.generate_map", "network.generate_map"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "align_feat_out", "=", "self", ".", "align_feat", "(", "x", ")", "\n", "align_feat", "=", "align_feat_out", ".", "view", "(", "align_feat_out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "align_output", "=", "self", ".", "align_output", "(", "align_feat", ")", "\n", "\n", "aus_map", "=", "torch", ".", "zeros", "(", "(", "align_output", ".", "size", "(", "0", ")", ",", "self", ".", "au_num", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "map_size", "+", "8", ")", ")", "\n", "for", "i", "in", "range", "(", "align_output", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "land_array", "=", "align_output", "[", "i", ",", ":", "]", "\n", "land_array", "=", "land_array", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "str_dt", "=", "np", ".", "append", "(", "land_array", "[", "0", ":", "len", "(", "land_array", ")", ":", "2", "]", ",", "land_array", "[", "1", ":", "len", "(", "land_array", ")", ":", "2", "]", ")", "\n", "arr2d", "=", "np", ".", "array", "(", "str_dt", ")", ".", "reshape", "(", "(", "2", ",", "self", ".", "land_num", ")", ")", "\n", "ruler", "=", "abs", "(", "arr2d", "[", "0", ",", "22", "]", "-", "arr2d", "[", "0", ",", "25", "]", ")", "\n", "\n", "#au1", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "0", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "4", "]", ",", "arr2d", "[", "1", ",", "4", "]", "-", "ruler", "/", "2", ",", "arr2d", "[", "0", ",", "5", "]", ",", "arr2d", "[", "1", ",", "5", "]", "-", "ruler", "/", "2", ")", "\n", "\n", "\n", "# au2", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "1", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "1", "]", ",", "arr2d", "[", "1", ",", "1", "]", "-", "ruler", "/", "3", ",", "arr2d", "[", "0", ",", "8", "]", ",", "arr2d", "[", "1", ",", "8", "]", "-", "ruler", "/", "3", ")", "\n", "\n", "# au4", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "2", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "2", "]", ",", "arr2d", "[", "1", ",", "2", "]", "+", "ruler", "/", "3", ",", "arr2d", "[", "0", ",", "7", "]", ",", "arr2d", "[", "1", ",", "7", "]", "+", "ruler", "/", "3", ")", "\n", "\n", "# au6", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "3", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "24", "]", ",", "arr2d", "[", "1", ",", "24", "]", "+", "ruler", ",", "arr2d", "[", "0", ",", "29", "]", ",", "arr2d", "[", "1", ",", "29", "]", "+", "ruler", ")", "\n", "# for bp4d", "\n", "if", "self", ".", "au_num", "==", "12", ":", "\n", "# au7", "\n", "                ", "generate_map", "(", "aus_map", "[", "i", ",", "4", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "21", "]", ",", "arr2d", "[", "1", ",", "21", "]", ",", "arr2d", "[", "0", ",", "26", "]", ",", "arr2d", "[", "1", ",", "26", "]", ")", "\n", "\n", "# au10", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "5", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "43", "]", ",", "arr2d", "[", "1", ",", "43", "]", ",", "arr2d", "[", "0", ",", "45", "]", ",", "arr2d", "[", "1", ",", "45", "]", ")", "\n", "\n", "# au12 au14 au15", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "6", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "31", "]", ",", "arr2d", "[", "1", ",", "31", "]", ",", "arr2d", "[", "0", ",", "37", "]", ",", "arr2d", "[", "1", ",", "37", "]", ")", "\n", "aus_map", "[", "i", ",", "7", "]", "=", "aus_map", "[", "i", ",", "6", "]", "\n", "aus_map", "[", "i", ",", "8", "]", "=", "aus_map", "[", "i", ",", "6", "]", "\n", "\n", "# au17", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "9", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "39", "]", ",", "arr2d", "[", "1", ",", "39", "]", "+", "ruler", "/", "2", ",", "arr2d", "[", "0", ",", "41", "]", ",", "arr2d", "[", "1", ",", "41", "]", "+", "ruler", "/", "2", ")", "\n", "\n", "# au23 au24", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "10", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "34", "]", ",", "arr2d", "[", "1", ",", "34", "]", ",", "arr2d", "[", "0", ",", "40", "]", ",", "arr2d", "[", "1", ",", "40", "]", ")", "\n", "aus_map", "[", "i", ",", "11", "]", "=", "aus_map", "[", "i", ",", "10", "]", "\n", "# for disfa", "\n", "", "elif", "self", ".", "au_num", "==", "8", ":", "\n", "# au9", "\n", "                ", "generate_map", "(", "aus_map", "[", "i", ",", "4", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "15", "]", ",", "arr2d", "[", "1", ",", "15", "]", "-", "ruler", "/", "2", ",", "arr2d", "[", "0", ",", "17", "]", ",", "arr2d", "[", "1", ",", "17", "]", "-", "ruler", "/", "2", ")", "\n", "# au12", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "5", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "31", "]", ",", "arr2d", "[", "1", ",", "31", "]", ",", "arr2d", "[", "0", ",", "37", "]", ",", "arr2d", "[", "1", ",", "37", "]", ")", "\n", "# au25", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "6", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "34", "]", ",", "arr2d", "[", "1", ",", "34", "]", ",", "arr2d", "[", "0", ",", "40", "]", ",", "arr2d", "[", "1", ",", "40", "]", ")", "\n", "# au26", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "7", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "39", "]", ",", "arr2d", "[", "1", ",", "39", "]", "+", "ruler", "/", "2", ",", "arr2d", "[", "0", ",", "41", "]", ",", "arr2d", "[", "1", ",", "41", "]", "+", "ruler", "/", "2", ")", "\n", "# for gft", "\n", "", "elif", "self", ".", "au_num", "==", "10", ":", "\n", "# au10", "\n", "                ", "generate_map", "(", "aus_map", "[", "i", ",", "4", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "43", "]", ",", "arr2d", "[", "1", ",", "43", "]", ",", "arr2d", "[", "0", ",", "45", "]", ",", "arr2d", "[", "1", ",", "45", "]", ")", "\n", "# au12 au14 au15", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "5", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "31", "]", ",", "arr2d", "[", "1", ",", "31", "]", ",", "arr2d", "[", "0", ",", "37", "]", ",", "arr2d", "[", "1", ",", "37", "]", ")", "\n", "aus_map", "[", "i", ",", "6", "]", "=", "aus_map", "[", "i", ",", "5", "]", "\n", "aus_map", "[", "i", ",", "7", "]", "=", "aus_map", "[", "i", ",", "5", "]", "\n", "# au23 au24", "\n", "generate_map", "(", "aus_map", "[", "i", ",", "8", "]", ",", "self", ".", "crop_size", ",", "self", ".", "map_size", "+", "8", ",", "self", ".", "spatial_ratio", ",", "self", ".", "fill_coeff", ",", "\n", "arr2d", "[", "0", ",", "34", "]", ",", "arr2d", "[", "1", ",", "34", "]", ",", "arr2d", "[", "0", ",", "40", "]", ",", "arr2d", "[", "1", ",", "40", "]", ")", "\n", "aus_map", "[", "i", ",", "9", "]", "=", "aus_map", "[", "i", ",", "8", "]", "\n", "\n", "", "", "return", "align_feat_out", ",", "align_output", ",", "aus_map", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.LocalAttentionRefine.__init__": [[275, 295], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "range"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__init__"], ["    ", "def", "__init__", "(", "self", ",", "au_num", ",", "unit_dim", "=", "8", ")", ":", "\n", "        ", "super", "(", "LocalAttentionRefine", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "local_aus_attention", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "unit_dim", "*", "8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "unit_dim", "*", "8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "unit_dim", "*", "8", ",", "unit_dim", "*", "8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "unit_dim", "*", "8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "unit_dim", "*", "8", ",", "unit_dim", "*", "8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "unit_dim", "*", "8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "unit_dim", "*", "8", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "for", "i", "in", "range", "(", "au_num", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.LocalAttentionRefine.forward": [[296, 307], ["range", "len", "initial_au_map.unsqueeze.unsqueeze.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "local_aus_attention", ")", ")", ":", "\n", "            ", "initial_au_map", "=", "x", "[", ":", ",", "i", ",", ":", ",", ":", "]", "\n", "initial_au_map", "=", "initial_au_map", ".", "unsqueeze", "(", "1", ")", "\n", "au_map", "=", "self", ".", "local_aus_attention", "[", "i", "]", "(", "initial_au_map", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "aus_map", "=", "au_map", "\n", "", "else", ":", "\n", "                ", "aus_map", "=", "torch", ".", "cat", "(", "(", "aus_map", ",", "au_map", ")", ",", "1", ")", "\n", "\n", "", "", "return", "aus_map", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.LocalAUNetv1.__init__": [[310, 315], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "network.HLFeatExtractor", "range"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__init__"], ["    ", "def", "__init__", "(", "self", ",", "au_num", ",", "input_dim", ",", "unit_dim", "=", "8", ")", ":", "\n", "        ", "super", "(", "LocalAUNetv1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "local_aus_branch", "=", "nn", ".", "ModuleList", "(", "\n", "[", "HLFeatExtractor", "(", "input_dim", "=", "input_dim", ",", "unit_dim", "=", "unit_dim", ")", "for", "i", "in", "range", "(", "au_num", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.LocalAUNetv1.forward": [[316, 329], ["range", "len", "au_map.unsqueeze.unsqueeze.unsqueeze", "float", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat", ",", "aus_map", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "local_aus_branch", ")", ")", ":", "\n", "            ", "au_map", "=", "aus_map", "[", ":", ",", "i", ",", ":", ",", ":", "]", "\n", "au_map", "=", "au_map", ".", "unsqueeze", "(", "1", ")", "\n", "au_feat", "=", "feat", "*", "au_map", "\n", "output_au_feat", "=", "self", ".", "local_aus_branch", "[", "i", "]", "(", "au_feat", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "aus_feat", "=", "output_au_feat", "\n", "", "else", ":", "\n", "                ", "aus_feat", "=", "aus_feat", "+", "output_au_feat", "\n", "# average over all AUs", "\n", "", "", "aus_feat", "=", "aus_feat", "/", "float", "(", "len", "(", "self", ".", "local_aus_branch", ")", ")", "\n", "return", "aus_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.LocalAUNetv2.__init__": [[332, 342], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "network.HLFeatExtractor", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "range"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__init__"], ["    ", "def", "__init__", "(", "self", ",", "au_num", ",", "input_dim", ",", "unit_dim", "=", "8", ")", ":", "\n", "        ", "super", "(", "LocalAUNetv2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "local_aus_branch", "=", "nn", ".", "ModuleList", "(", "\n", "[", "HLFeatExtractor", "(", "input_dim", "=", "input_dim", ",", "unit_dim", "=", "unit_dim", ")", "for", "i", "in", "range", "(", "au_num", ")", "]", ")", "\n", "self", ".", "local_aus_output", "=", "nn", ".", "ModuleList", "(", "\n", "[", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "4000", ",", "unit_dim", "*", "8", ")", ",", "\n", "nn", ".", "Linear", "(", "unit_dim", "*", "8", ",", "2", ")", "\n", ")", "for", "i", "in", "range", "(", "au_num", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.LocalAUNetv2.forward": [[343, 363], ["range", "len", "au_map.unsqueeze.unsqueeze.unsqueeze", "output_au_feat.view", "torch.log_softmax.view", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "float", "output_au_feat.size", "torch.log_softmax.size", "int", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "torch.log_softmax.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat", ",", "aus_map", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "local_aus_branch", ")", ")", ":", "\n", "            ", "au_map", "=", "aus_map", "[", ":", ",", "i", ",", ":", ",", ":", "]", "\n", "au_map", "=", "au_map", ".", "unsqueeze", "(", "1", ")", "\n", "au_feat", "=", "feat", "*", "au_map", "\n", "output_au_feat", "=", "self", ".", "local_aus_branch", "[", "i", "]", "(", "au_feat", ")", "\n", "reshape_output_au_feat", "=", "output_au_feat", ".", "view", "(", "output_au_feat", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "au_output", "=", "self", ".", "local_aus_output", "[", "i", "]", "(", "reshape_output_au_feat", ")", "\n", "au_output", "=", "au_output", ".", "view", "(", "au_output", ".", "size", "(", "0", ")", ",", "2", ",", "int", "(", "au_output", ".", "size", "(", "1", ")", "/", "2", ")", ")", "\n", "au_output", "=", "F", ".", "log_softmax", "(", "au_output", ",", "dim", "=", "1", ")", "\n", "\n", "if", "i", "==", "0", ":", "\n", "                ", "aus_feat", "=", "output_au_feat", "\n", "aus_output", "=", "au_output", "\n", "", "else", ":", "\n", "                ", "aus_feat", "=", "aus_feat", "+", "output_au_feat", "\n", "aus_output", "=", "torch", ".", "cat", "(", "(", "aus_output", ",", "au_output", ")", ",", "2", ")", "\n", "# average over all AUs", "\n", "", "", "aus_feat", "=", "aus_feat", "/", "float", "(", "len", "(", "self", ".", "local_aus_branch", ")", ")", "\n", "return", "aus_feat", ",", "aus_output", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.AUNet.__init__": [[366, 372], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__init__"], ["    ", "def", "__init__", "(", "self", ",", "au_num", ",", "input_dim", "=", "12000", ",", "unit_dim", "=", "8", ")", ":", "\n", "        ", "super", "(", "AUNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "au_output", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_dim", ",", "unit_dim", "*", "64", ")", ",", "\n", "nn", ".", "Linear", "(", "unit_dim", "*", "64", ",", "au_num", "*", "2", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.AUNet.forward": [[374, 380], ["x.view.view.view", "network.AUNet.au_output", "torch.log_softmax.view", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "x.view.view.size", "torch.log_softmax.size", "int", "torch.log_softmax.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "au_output", "=", "self", ".", "au_output", "(", "x", ")", "\n", "au_output", "=", "au_output", ".", "view", "(", "au_output", ".", "size", "(", "0", ")", ",", "2", ",", "int", "(", "au_output", ".", "size", "(", "1", ")", "/", "2", ")", ")", "\n", "au_output", "=", "F", ".", "log_softmax", "(", "au_output", ",", "dim", "=", "1", ")", "\n", "return", "au_output", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.network.generate_map": [[142, 170], ["round", "numpy.array", "range", "float", "round", "round", "round", "round", "round", "round", "max", "min", "max", "min", "max", "min", "max", "min", "range", "int", "range", "int", "int", "max", "int", "abs", "abs"], "function", ["None"], ["", "", "def", "generate_map", "(", "map", ",", "crop_size", ",", "map_size", ",", "spatial_ratio", ",", "fill_coeff", ",", "center1_x", ",", "center1_y", ",", "center2_x", ",", "center2_y", ")", ":", "\n", "    ", "spatial_scale", "=", "float", "(", "map_size", ")", "/", "crop_size", "\n", "half_AU_size", "=", "round", "(", "(", "map_size", "-", "1", ")", "/", "2.0", "*", "spatial_ratio", ")", "\n", "\n", "centers", "=", "np", ".", "array", "(", "[", "[", "center1_x", ",", "center1_y", "]", ",", "\n", "[", "center2_x", ",", "center2_y", "]", "]", ")", "\n", "for", "center_ind", "in", "range", "(", "centers", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "AU_center_x", "=", "round", "(", "centers", "[", "center_ind", ",", "0", "]", "*", "spatial_scale", ")", "\n", "AU_center_y", "=", "round", "(", "centers", "[", "center_ind", ",", "1", "]", "*", "spatial_scale", ")", "\n", "start_w", "=", "round", "(", "AU_center_x", "-", "half_AU_size", ")", "\n", "start_h", "=", "round", "(", "AU_center_y", "-", "half_AU_size", ")", "\n", "end_w", "=", "round", "(", "AU_center_x", "+", "half_AU_size", ")", "\n", "end_h", "=", "round", "(", "AU_center_y", "+", "half_AU_size", ")", "\n", "\n", "# treat landmark coordinates as starting from 0 rather than 1", "\n", "start_h", "=", "max", "(", "start_h", ",", "0", ")", "\n", "start_h", "=", "min", "(", "start_h", ",", "map_size", "-", "1", ")", "\n", "start_w", "=", "max", "(", "start_w", ",", "0", ")", "\n", "start_w", "=", "min", "(", "start_w", ",", "map_size", "-", "1", ")", "\n", "end_h", "=", "max", "(", "end_h", ",", "0", ")", "\n", "end_h", "=", "min", "(", "end_h", ",", "map_size", "-", "1", ")", "\n", "end_w", "=", "max", "(", "end_w", ",", "0", ")", "\n", "end_w", "=", "min", "(", "end_w", ",", "map_size", "-", "1", ")", "\n", "\n", "for", "h", "in", "range", "(", "int", "(", "start_h", ")", ",", "int", "(", "end_h", ")", "+", "1", ")", ":", "\n", "            ", "for", "w", "in", "range", "(", "int", "(", "start_w", ")", ",", "int", "(", "end_w", ")", "+", "1", ")", ":", "\n", "                ", "map", "[", "h", ",", "w", "]", "=", "max", "(", "1", "-", "(", "abs", "(", "h", "-", "AU_center_y", ")", "+", "abs", "(", "w", "-", "AU_center_x", ")", ")", "*", "\n", "fill_coeff", "/", "(", "map_size", "*", "spatial_ratio", ")", ",", "map", "[", "h", ",", "w", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.train_JAAv1_disfa.main": [[17, 255], ["torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "data_list.ImageList", "torch.DataLoader", "data_list.ImageList", "torch.DataLoader", "print", "region_learning.cuda.load_state_dict", "align_net.cuda.load_state_dict", "pretrain_local_attention_refine.load_state_dict", "pretrain_local_au_net.load_state_dict", "global_au_feat.cuda.load_state_dict", "print", "print", "print", "print", "print", "print", "open", "range", "open.close", "np.loadtxt", "au_weight.float.float().cuda", "au_weight.float.float", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "region_learning.cuda.load_state_dict", "align_net.cuda.load_state_dict", "local_attention_refine.cuda.load_state_dict", "local_au_net.cuda.load_state_dict", "global_au_feat.cuda.load_state_dict", "au_net.cuda.load_state_dict", "region_learning.cuda.cuda", "align_net.cuda.cuda", "local_attention_refine.cuda.cuda", "local_au_net.cuda.cuda", "global_au_feat.cuda.cuda", "au_net.cuda.cuda", "itertools.chain", "param_lr.append", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "enumerate", "pre_process.image_train", "pre_process.land_transform", "pre_process.image_test", "pre_process.land_transform", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "filter", "filter", "filter", "filter", "filter", "filter", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "region_learning.cuda.train", "align_net.cuda.train", "local_attention_refine.cuda.train", "local_au_net.cuda.train", "global_au_feat.cuda.train", "au_net.cuda.train", "util.AU_detection_evalv1", "print", "print", "region_learning.cuda.train", "align_net.cuda.train", "local_attention_refine.cuda.train", "local_au_net.cuda.train", "global_au_feat.cuda.train", "au_net.cuda.train", "lr_scheduler", "lr_scheduler.zero_grad", "region_learning.cuda.", "align_net.cuda.", "local_attention_refine.cuda.", "local_au_net.cuda.", "global_au_feat.cuda.", "torch.cat", "torch.cat", "torch.cat", "au_net.cuda.", "util.au_softmax_loss", "util.au_dice_loss", "util.landmark_loss", "torch.interpolate", "util.attention_refine_loss", "total_loss.backward", "lr_scheduler.step", "au_weight.float.float", "region_learning.cuda.parameters", "align_net.cuda.parameters", "local_attention_refine.cuda.parameters", "local_au_net.cuda.parameters", "global_au_feat.cuda.parameters", "au_net.cuda.parameters", "str", "region_learning.cuda.state_dict", "align_net.cuda.state_dict", "local_attention_refine.cuda.state_dict", "local_au_net.cuda.state_dict", "global_au_feat.cuda.state_dict", "au_net.cuda.state_dict", "print", "print", "print", "au.long.long", "aus_map.cuda.cuda", "aus_map.cuda.detach", "F.interpolate.detach", "np.loadtxt", "np.loadtxt", "str", "str", "str", "str", "str", "input.cuda", "land.float().cuda", "biocular.float().cuda", "au.long.long().cuda", "local_attention_refine.size", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "f1score_arr.mean", "acc_arr.mean", "f1score_arr.mean", "acc_arr.mean", "total_loss.data.cpu().numpy", "util.au_softmax_loss.data.cpu().numpy", "util.au_dice_loss.data.cpu().numpy", "util.landmark_loss.data.cpu().numpy", "util.attention_refine_loss.data.cpu().numpy", "land.float", "biocular.float", "au.long.long", "total_loss.data.cpu", "util.au_softmax_loss.data.cpu", "util.au_dice_loss.data.cpu", "util.landmark_loss.data.cpu", "util.attention_refine_loss.data.cpu"], "function", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_test", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.AU_detection_evalv1", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_softmax_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_dice_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.landmark_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.attention_refine_loss"], ["def", "main", "(", "config", ")", ":", "\n", "## set loss criterion", "\n", "    ", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "au_weight", "=", "torch", ".", "from_numpy", "(", "np", ".", "loadtxt", "(", "config", ".", "train_path_prefix", "+", "'_weight.txt'", ")", ")", "\n", "if", "use_gpu", ":", "\n", "        ", "au_weight", "=", "au_weight", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "au_weight", "=", "au_weight", ".", "float", "(", ")", "\n", "\n", "## prepare data", "\n", "", "dsets", "=", "{", "}", "\n", "dset_loaders", "=", "{", "}", "\n", "\n", "dsets", "[", "'train'", "]", "=", "ImageList", "(", "crop_size", "=", "config", ".", "crop_size", ",", "path", "=", "config", ".", "train_path_prefix", ",", "\n", "transform", "=", "prep", ".", "image_train", "(", "crop_size", "=", "config", ".", "crop_size", ")", ",", "\n", "target_transform", "=", "prep", ".", "land_transform", "(", "img_size", "=", "config", ".", "crop_size", ",", "\n", "flip_reflect", "=", "np", ".", "loadtxt", "(", "\n", "config", ".", "flip_reflect", ")", ")", ")", "\n", "\n", "dset_loaders", "[", "'train'", "]", "=", "util_data", ".", "DataLoader", "(", "dsets", "[", "'train'", "]", ",", "batch_size", "=", "config", ".", "train_batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "config", ".", "num_workers", ")", "\n", "\n", "dsets", "[", "'test'", "]", "=", "ImageList", "(", "crop_size", "=", "config", ".", "crop_size", ",", "path", "=", "config", ".", "test_path_prefix", ",", "phase", "=", "'test'", ",", "\n", "transform", "=", "prep", ".", "image_test", "(", "crop_size", "=", "config", ".", "crop_size", ")", ",", "\n", "target_transform", "=", "prep", ".", "land_transform", "(", "img_size", "=", "config", ".", "crop_size", ",", "\n", "flip_reflect", "=", "np", ".", "loadtxt", "(", "\n", "config", ".", "flip_reflect", ")", ")", "\n", ")", "\n", "\n", "dset_loaders", "[", "'test'", "]", "=", "util_data", ".", "DataLoader", "(", "dsets", "[", "'test'", "]", ",", "batch_size", "=", "config", ".", "eval_batch_size", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "config", ".", "num_workers", ")", "\n", "\n", "## set network modules", "\n", "region_learning", "=", "network", ".", "network_dict", "[", "config", ".", "region_learning", "]", "(", "input_dim", "=", "3", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "align_net", "=", "network", ".", "network_dict", "[", "config", ".", "align_net", "]", "(", "crop_size", "=", "config", ".", "crop_size", ",", "map_size", "=", "config", ".", "map_size", ",", "\n", "au_num", "=", "config", ".", "au_num", ",", "land_num", "=", "config", ".", "land_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ")", "\n", "local_attention_refine", "=", "network", ".", "network_dict", "[", "config", ".", "local_attention_refine", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "local_au_net", "=", "network", ".", "network_dict", "[", "config", ".", "local_au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "global_au_feat", "=", "network", ".", "network_dict", "[", "config", ".", "global_au_feat", "]", "(", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "au_net", "=", "network", ".", "network_dict", "[", "config", ".", "au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "12000", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "\n", "pretrain_local_attention_refine", "=", "network", ".", "network_dict", "[", "config", ".", "local_attention_refine", "]", "(", "au_num", "=", "config", ".", "bp4d_au_num", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "pretrain_local_au_net", "=", "network", ".", "network_dict", "[", "config", ".", "local_au_net", "]", "(", "au_num", "=", "config", ".", "bp4d_au_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "print", "(", "'loading pretrained model ...'", ")", "\n", "region_learning", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "pretrain_path", "+", "'/region_learning_'", "+", "str", "(", "config", ".", "pretrain_epoch", ")", "+", "'.pth'", ")", ")", "\n", "align_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "pretrain_path", "+", "'/align_net_'", "+", "str", "(", "config", ".", "pretrain_epoch", ")", "+", "'.pth'", ")", ")", "\n", "pretrain_local_attention_refine", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "pretrain_path", "+", "'/local_attention_refine_'", "+", "str", "(", "\n", "config", ".", "pretrain_epoch", ")", "+", "'.pth'", ")", ")", "\n", "pretrain_local_au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "pretrain_path", "+", "'/local_au_net_'", "+", "str", "(", "config", ".", "pretrain_epoch", ")", "+", "'.pth'", ")", ")", "\n", "global_au_feat", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "pretrain_path", "+", "'/global_au_feat_'", "+", "str", "(", "config", ".", "pretrain_epoch", ")", "+", "'.pth'", ")", ")", "\n", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "0", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "0", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "1", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "1", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "2", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "2", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "3", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "3", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "5", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "6", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "6", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "10", "]", "\n", "local_attention_refine", ".", "local_aus_attention", "[", "7", "]", "=", "pretrain_local_attention_refine", ".", "local_aus_attention", "[", "9", "]", "\n", "\n", "local_au_net", ".", "local_aus_branch", "[", "0", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "0", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "1", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "1", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "2", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "2", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "3", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "3", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "5", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "6", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "6", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "10", "]", "\n", "local_au_net", ".", "local_aus_branch", "[", "7", "]", "=", "pretrain_local_au_net", ".", "local_aus_branch", "[", "9", "]", "\n", "\n", "if", "config", ".", "start_epoch", ">", "0", ":", "\n", "        ", "print", "(", "'resuming model from epoch %d'", "%", "(", "config", ".", "start_epoch", ")", ")", "\n", "region_learning", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/region_learning_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "align_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/align_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_attention_refine", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_attention_refine_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_au_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "global_au_feat", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/global_au_feat_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/au_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "\n", "", "if", "use_gpu", ":", "\n", "        ", "region_learning", "=", "region_learning", ".", "cuda", "(", ")", "\n", "align_net", "=", "align_net", ".", "cuda", "(", ")", "\n", "local_attention_refine", "=", "local_attention_refine", ".", "cuda", "(", ")", "\n", "local_au_net", "=", "local_au_net", ".", "cuda", "(", ")", "\n", "global_au_feat", "=", "global_au_feat", ".", "cuda", "(", ")", "\n", "au_net", "=", "au_net", ".", "cuda", "(", ")", "\n", "\n", "", "print", "(", "region_learning", ")", "\n", "print", "(", "align_net", ")", "\n", "print", "(", "local_attention_refine", ")", "\n", "print", "(", "local_au_net", ")", "\n", "print", "(", "global_au_feat", ")", "\n", "print", "(", "au_net", ")", "\n", "\n", "## collect parameters", "\n", "region_learning_parameter_list", "=", "[", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "region_learning", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "align_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "align_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "local_attention_refine_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "local_attention_refine", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "config", ".", "grad_enhance", "}", "]", "\n", "local_au_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "local_au_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "global_au_feat_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "global_au_feat", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "au_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "au_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "\n", "## set optimizer", "\n", "optimizer", "=", "optim_dict", "[", "config", ".", "optimizer_type", "]", "(", "itertools", ".", "chain", "(", "region_learning_parameter_list", ",", "align_net_parameter_list", ",", "\n", "local_attention_refine_parameter_list", ",", "\n", "local_au_net_parameter_list", ",", "\n", "global_au_feat_parameter_list", ",", "\n", "au_net_parameter_list", ")", ",", "\n", "lr", "=", "1.0", ",", "momentum", "=", "config", ".", "momentum", ",", "weight_decay", "=", "config", ".", "weight_decay", ",", "\n", "nesterov", "=", "config", ".", "use_nesterov", ")", "\n", "param_lr", "=", "[", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_lr", ".", "append", "(", "param_group", "[", "'lr'", "]", ")", "\n", "\n", "", "lr_scheduler", "=", "lr_schedule", ".", "schedule_dict", "[", "config", ".", "lr_type", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", "\n", "\n", "", "res_file", "=", "open", "(", "\n", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/AU_pred_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.txt'", ",", "'w'", ")", "\n", "\n", "## train", "\n", "count", "=", "0", "\n", "\n", "for", "epoch", "in", "range", "(", "config", ".", "start_epoch", ",", "config", ".", "n_epochs", "+", "1", ")", ":", "\n", "        ", "if", "epoch", ">", "config", ".", "start_epoch", ":", "\n", "            ", "print", "(", "'taking snapshot ...'", ")", "\n", "torch", ".", "save", "(", "region_learning", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/region_learning_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "align_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/align_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "local_attention_refine", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_attention_refine_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "local_au_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "global_au_feat", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/global_au_feat_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "au_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "\n", "# eval in the train", "\n", "", "if", "epoch", ">", "config", ".", "start_epoch", ":", "\n", "            ", "print", "(", "'testing ...'", ")", "\n", "region_learning", ".", "train", "(", "False", ")", "\n", "align_net", ".", "train", "(", "False", ")", "\n", "local_attention_refine", ".", "train", "(", "False", ")", "\n", "local_au_net", ".", "train", "(", "False", ")", "\n", "global_au_feat", ".", "train", "(", "False", ")", "\n", "au_net", ".", "train", "(", "False", ")", "\n", "\n", "f1score_arr", ",", "acc_arr", ",", "mean_error", ",", "failure_rate", "=", "AU_detection_evalv1", "(", "\n", "dset_loaders", "[", "'test'", "]", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "\n", "local_au_net", ",", "global_au_feat", ",", "au_net", ",", "use_gpu", "=", "use_gpu", ")", "\n", "print", "(", "'epoch =%d, f1 score mean=%f, accuracy mean=%f, mean error=%f, failure rate=%f'", "\n", "%", "(", "epoch", ",", "f1score_arr", ".", "mean", "(", ")", ",", "acc_arr", ".", "mean", "(", ")", ",", "mean_error", ",", "failure_rate", ")", ")", "\n", "print", "(", "'%d\\t%f\\t%f\\t%f\\t%f'", "%", "(", "epoch", ",", "f1score_arr", ".", "mean", "(", ")", ",", "acc_arr", ".", "mean", "(", ")", ",", "\n", "mean_error", ",", "failure_rate", ")", ",", "file", "=", "res_file", ")", "\n", "\n", "region_learning", ".", "train", "(", "True", ")", "\n", "align_net", ".", "train", "(", "True", ")", "\n", "local_attention_refine", ".", "train", "(", "True", ")", "\n", "local_au_net", ".", "train", "(", "True", ")", "\n", "global_au_feat", ".", "train", "(", "True", ")", "\n", "au_net", ".", "train", "(", "True", ")", "\n", "\n", "", "if", "epoch", ">=", "config", ".", "n_epochs", ":", "\n", "            ", "break", "\n", "\n", "", "for", "i", ",", "batch", "in", "enumerate", "(", "dset_loaders", "[", "'train'", "]", ")", ":", "\n", "            ", "if", "i", "%", "config", ".", "display", "==", "0", "and", "count", ">", "0", ":", "\n", "                ", "print", "(", "'[epoch = %d][iter = %d][total_loss = %f][loss_au_softmax = %f][loss_au_dice = %f][loss_land = %f][loss_attention_refine = %f]'", "%", "(", "epoch", ",", "i", ",", "\n", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_au_softmax", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_au_dice", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_land", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_attention_refine", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "print", "(", "'learning rate = %f %f %f %f %f %f'", "%", "(", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "2", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "3", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "4", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "5", "]", "[", "'lr'", "]", ")", ")", "\n", "print", "(", "'the number of training iterations is %d'", "%", "(", "count", ")", ")", "\n", "\n", "", "input", ",", "land", ",", "biocular", ",", "au", "=", "batch", "\n", "\n", "if", "use_gpu", ":", "\n", "                ", "input", ",", "land", ",", "biocular", ",", "au", "=", "input", ".", "cuda", "(", ")", ",", "land", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "biocular", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "au", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "                ", "au", "=", "au", ".", "long", "(", ")", "\n", "\n", "", "optimizer", "=", "lr_scheduler", "(", "param_lr", ",", "optimizer", ",", "epoch", ",", "config", ".", "gamma", ",", "config", ".", "stepsize", ",", "config", ".", "init_lr", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "region_feat", "=", "region_learning", "(", "input", ")", "\n", "align_feat", ",", "align_output", ",", "aus_map", "=", "align_net", "(", "region_feat", ")", "\n", "if", "use_gpu", ":", "\n", "                ", "aus_map", "=", "aus_map", ".", "cuda", "(", ")", "\n", "", "output_aus_map", "=", "local_attention_refine", "(", "aus_map", ".", "detach", "(", ")", ")", "\n", "local_au_out_feat", "=", "local_au_net", "(", "region_feat", ",", "output_aus_map", ")", "\n", "global_au_out_feat", "=", "global_au_feat", "(", "region_feat", ")", "\n", "concat_au_feat", "=", "torch", ".", "cat", "(", "(", "align_feat", ",", "global_au_out_feat", ",", "local_au_out_feat", ")", ",", "1", ")", "\n", "aus_output", "=", "au_net", "(", "concat_au_feat", ")", "\n", "\n", "loss_au_softmax", "=", "au_softmax_loss", "(", "aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_au_dice", "=", "au_dice_loss", "(", "aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_au", "=", "loss_au_softmax", "+", "loss_au_dice", "\n", "loss_land", "=", "landmark_loss", "(", "align_output", ",", "land", ",", "biocular", ")", "\n", "\n", "resize_aus_map", "=", "F", ".", "interpolate", "(", "aus_map", ",", "size", "=", "output_aus_map", ".", "size", "(", "2", ")", ")", "\n", "loss_attention_refine", "=", "attention_refine_loss", "(", "output_aus_map", ",", "resize_aus_map", ".", "detach", "(", ")", ")", "\n", "\n", "total_loss", "=", "config", ".", "lambda_au", "*", "loss_au", "+", "config", ".", "lambda_land", "*", "loss_land", "+", "(", "config", ".", "lambda_refine", "/", "config", ".", "grad_enhance", ")", "*", "loss_attention_refine", "\n", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "count", "=", "count", "+", "1", "\n", "\n", "", "", "res_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.lr_schedule.inv_lr_scheduler": [[1, 10], ["None"], "function", ["None"], ["def", "inv_lr_scheduler", "(", "param_lr", ",", "optimizer", ",", "iter_num", ",", "gamma", ",", "power", ",", "init_lr", "=", "0.001", ")", ":", "\n", "    ", "lr", "=", "init_lr", "*", "(", "1", "+", "gamma", "*", "iter_num", ")", "**", "(", "-", "power", ")", "\n", "\n", "i", "=", "0", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "*", "param_lr", "[", "i", "]", "\n", "i", "+=", "1", "\n", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.lr_schedule.step_lr_scheduler": [[12, 22], ["None"], "function", ["None"], ["", "def", "step_lr_scheduler", "(", "param_lr", ",", "optimizer", ",", "iter_num", ",", "gamma", ",", "stepsize", ",", "init_lr", "=", "0.001", ")", ":", "\n", "    ", "'''Decay learning rate by a factor of gamma every stepsize epochs.'''", "\n", "lr", "=", "init_lr", "*", "(", "gamma", "**", "(", "iter_num", "//", "stepsize", ")", ")", "\n", "\n", "i", "=", "0", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "*", "param_lr", "[", "i", "]", "\n", "i", "+=", "1", "\n", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.lr_schedule.lambda_lr_scheduler": [[24, 33], ["max", "float"], "function", ["None"], ["", "def", "lambda_lr_scheduler", "(", "param_lr", ",", "optimizer", ",", "epoch", ",", "n_epochs", ",", "offset", ",", "decay_start_epoch", ",", "init_lr", "=", "0.001", ")", ":", "\n", "    ", "lr", "=", "init_lr", "*", "(", "1.0", "-", "max", "(", "0", ",", "epoch", "+", "offset", "-", "decay_start_epoch", ")", "/", "float", "(", "n_epochs", "-", "decay_start_epoch", "+", "1", ")", ")", "\n", "\n", "i", "=", "0", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "*", "param_lr", "[", "i", "]", "\n", "i", "+=", "1", "\n", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.test_JAAv1.main": [[14, 102], ["torch.cuda.is_available", "torch.cuda.is_available", "data_list.ImageList", "torch.DataLoader", "open", "region_learning.cuda.train", "align_net.cuda.train", "local_attention_refine.cuda.train", "local_au_net.cuda.train", "global_au_feat.cuda.train", "au_net.cuda.train", "range", "open.close", "region_learning.cuda.cuda", "align_net.cuda.cuda", "local_attention_refine.cuda.cuda", "local_au_net.cuda.cuda", "global_au_feat.cuda.cuda", "au_net.cuda.cuda", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "RuntimeError", "region_learning.cuda.load_state_dict", "align_net.cuda.load_state_dict", "local_attention_refine.cuda.load_state_dict", "local_au_net.cuda.load_state_dict", "global_au_feat.cuda.load_state_dict", "au_net.cuda.load_state_dict", "pre_process.image_test", "pre_process.land_transform", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "util.AU_detection_evalv1", "print", "print", "util.vis_attention", "str", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "np.loadtxt", "str", "str", "str", "str", "str", "str", "f1score_arr.mean", "acc_arr.mean", "f1score_arr.mean", "acc_arr.mean", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_test", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.AU_detection_evalv1", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.vis_attention"], ["def", "main", "(", "config", ")", ":", "\n", "## set loss criterion", "\n", "    ", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "## prepare data", "\n", "dsets", "=", "{", "}", "\n", "dset_loaders", "=", "{", "}", "\n", "dsets", "[", "'test'", "]", "=", "ImageList", "(", "crop_size", "=", "config", ".", "crop_size", ",", "path", "=", "config", ".", "test_path_prefix", ",", "phase", "=", "'test'", ",", "\n", "transform", "=", "prep", ".", "image_test", "(", "crop_size", "=", "config", ".", "crop_size", ")", ",", "\n", "target_transform", "=", "prep", ".", "land_transform", "(", "img_size", "=", "config", ".", "crop_size", ",", "\n", "flip_reflect", "=", "np", ".", "loadtxt", "(", "\n", "config", ".", "flip_reflect", ")", ")", "\n", ")", "\n", "\n", "dset_loaders", "[", "'test'", "]", "=", "util_data", ".", "DataLoader", "(", "dsets", "[", "'test'", "]", ",", "batch_size", "=", "config", ".", "eval_batch_size", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "config", ".", "num_workers", ")", "\n", "\n", "## set network modules", "\n", "region_learning", "=", "network", ".", "network_dict", "[", "config", ".", "region_learning", "]", "(", "input_dim", "=", "3", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "align_net", "=", "network", ".", "network_dict", "[", "config", ".", "align_net", "]", "(", "crop_size", "=", "config", ".", "crop_size", ",", "map_size", "=", "config", ".", "map_size", ",", "\n", "au_num", "=", "config", ".", "au_num", ",", "land_num", "=", "config", ".", "land_num", ",", "\n", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ")", "\n", "local_attention_refine", "=", "network", ".", "network_dict", "[", "config", ".", "local_attention_refine", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "local_au_net", "=", "network", ".", "network_dict", "[", "config", ".", "local_au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "global_au_feat", "=", "network", ".", "network_dict", "[", "config", ".", "global_au_feat", "]", "(", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "au_net", "=", "network", ".", "network_dict", "[", "config", ".", "au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "12000", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "region_learning", "=", "region_learning", ".", "cuda", "(", ")", "\n", "align_net", "=", "align_net", ".", "cuda", "(", ")", "\n", "local_attention_refine", "=", "local_attention_refine", ".", "cuda", "(", ")", "\n", "local_au_net", "=", "local_au_net", ".", "cuda", "(", ")", "\n", "global_au_feat", "=", "global_au_feat", ".", "cuda", "(", ")", "\n", "au_net", "=", "au_net", ".", "cuda", "(", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", "\n", "\n", "", "if", "config", ".", "start_epoch", "<=", "0", ":", "\n", "        ", "raise", "(", "RuntimeError", "(", "'start_epoch should be larger than 0\\n'", ")", ")", "\n", "\n", "", "res_file", "=", "open", "(", "\n", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/'", "+", "config", ".", "prefix", "+", "'offline_AU_pred_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.txt'", ",", "'w'", ")", "\n", "region_learning", ".", "train", "(", "False", ")", "\n", "align_net", ".", "train", "(", "False", ")", "\n", "local_attention_refine", ".", "train", "(", "False", ")", "\n", "local_au_net", ".", "train", "(", "False", ")", "\n", "global_au_feat", ".", "train", "(", "False", ")", "\n", "au_net", ".", "train", "(", "False", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "config", ".", "start_epoch", ",", "config", ".", "n_epochs", "+", "1", ")", ":", "\n", "        ", "region_learning", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/region_learning_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "align_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/align_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_attention_refine", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_attention_refine_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "global_au_feat", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/global_au_feat_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", ")", "\n", "\n", "if", "config", ".", "pred_AU", ":", "\n", "            ", "f1score_arr", ",", "acc_arr", ",", "mean_error", ",", "failure_rate", "=", "AU_detection_evalv1", "(", "\n", "dset_loaders", "[", "'test'", "]", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "\n", "local_au_net", ",", "global_au_feat", ",", "au_net", ",", "use_gpu", "=", "use_gpu", ")", "\n", "print", "(", "'epoch =%d, f1 score mean=%f, accuracy mean=%f, mean error=%f, failure rate=%f'", "\n", "%", "(", "epoch", ",", "f1score_arr", ".", "mean", "(", ")", ",", "acc_arr", ".", "mean", "(", ")", ",", "mean_error", ",", "failure_rate", ")", ")", "\n", "print", "(", "'%d\\t%f\\t%f\\t%f\\t%f'", "%", "(", "epoch", ",", "f1score_arr", ".", "mean", "(", ")", ",", "acc_arr", ".", "mean", "(", ")", ",", "\n", "mean_error", ",", "failure_rate", ")", ",", "file", "=", "res_file", ")", "\n", "\n", "", "if", "config", ".", "vis_attention", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/vis_map/'", "+", "str", "(", "epoch", ")", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/vis_map/'", "+", "str", "(", "epoch", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/overlay_vis_map/'", "+", "str", "(", "epoch", ")", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/overlay_vis_map/'", "+", "str", "(", "epoch", ")", ")", "\n", "\n", "", "vis_attention", "(", "dset_loaders", "[", "'test'", "]", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "\n", "config", ".", "write_res_prefix", ",", "config", ".", "run_name", ",", "epoch", ",", "use_gpu", "=", "use_gpu", ")", "\n", "\n", "", "", "res_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.data_list.ImageList.__init__": [[27, 44], ["open().readlines", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "data_list.make_dataset", "len", "RuntimeError", "open"], "methods", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.data_list.make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "crop_size", ",", "path", ",", "phase", "=", "'train'", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "loader", "=", "default_loader", ")", ":", "\n", "\n", "        ", "image_list", "=", "open", "(", "path", "+", "'_path.txt'", ")", ".", "readlines", "(", ")", "\n", "land", "=", "np", ".", "loadtxt", "(", "path", "+", "'_land.txt'", ")", "\n", "biocular", "=", "np", ".", "loadtxt", "(", "path", "+", "'_biocular.txt'", ")", "\n", "au", "=", "np", ".", "loadtxt", "(", "path", "+", "'_AUoccur.txt'", ")", "\n", "imgs", "=", "make_dataset", "(", "image_list", ",", "land", ",", "biocular", ",", "au", ")", "\n", "if", "len", "(", "imgs", ")", "==", "0", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "'Found 0 images in subfolders of: '", "+", "path", "+", "'\\n'", ")", ")", "\n", "\n", "", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "loader", "=", "loader", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "phase", "=", "phase", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.data_list.ImageList.__getitem__": [[45, 71], ["data_list.ImageList.loader", "random.randint", "random.randint", "random.randint", "data_list.ImageList.transform", "data_list.ImageList.target_transform", "data_list.ImageList.transform", "data_list.ImageList.target_transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "path", ",", "land", ",", "biocular", ",", "au", "=", "self", ".", "imgs", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "path", ")", "\n", "if", "self", ".", "phase", "==", "'train'", ":", "\n", "            ", "w", ",", "h", "=", "img", ".", "size", "\n", "offset_y", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "self", ".", "crop_size", ")", "\n", "offset_x", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "self", ".", "crop_size", ")", "\n", "\n", "flip", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "                ", "img", "=", "self", ".", "transform", "(", "img", ",", "flip", ",", "offset_x", ",", "offset_y", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "                ", "land", "=", "self", ".", "target_transform", "(", "land", ",", "flip", ",", "offset_x", ",", "offset_y", ")", "\n", "# for testing", "\n", "", "", "else", ":", "\n", "            ", "w", ",", "h", "=", "img", ".", "size", "\n", "offset_y", "=", "(", "h", "-", "self", ".", "crop_size", ")", "/", "2", "\n", "offset_x", "=", "(", "w", "-", "self", ".", "crop_size", ")", "/", "2", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "                ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "                ", "land", "=", "self", ".", "target_transform", "(", "land", ",", "0", ",", "offset_x", ",", "offset_y", ")", "\n", "\n", "", "", "return", "img", ",", "land", ",", "biocular", ",", "au", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.data_list.ImageList.__len__": [[72, 74], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.data_list.make_dataset": [[6, 11], ["len", "image_list[].strip", "range"], "function", ["None"], ["def", "make_dataset", "(", "image_list", ",", "land", ",", "biocular", ",", "au", ")", ":", "\n", "    ", "len_", "=", "len", "(", "image_list", ")", "\n", "images", "=", "[", "(", "image_list", "[", "i", "]", ".", "strip", "(", ")", ",", "land", "[", "i", ",", ":", "]", ",", "biocular", "[", "i", "]", ",", "au", "[", "i", ",", ":", "]", ")", "for", "i", "in", "range", "(", "len_", ")", "]", "\n", "\n", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.data_list.pil_loader": [[13, 19], ["open", "PIL.Image.open", "img.convert"], "function", ["None"], ["", "def", "pil_loader", "(", "path", ")", ":", "\n", "# open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)", "\n", "# Image value: [0,1]", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "            ", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.data_list.default_loader": [[21, 23], ["data_list.pil_loader"], "function", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.data_list.pil_loader"], ["", "", "", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.train_JAAv2.main": [[16, 231], ["torch.cuda.is_available", "torch.cuda.is_available", "torch.from_numpy", "torch.from_numpy", "data_list.ImageList", "torch.DataLoader", "data_list.ImageList", "torch.DataLoader", "print", "print", "print", "print", "print", "print", "open", "range", "open.close", "np.loadtxt", "au_weight.float.float().cuda", "au_weight.float.float", "print", "region_learning.cuda.load_state_dict", "align_net.cuda.load_state_dict", "local_attention_refine.cuda.load_state_dict", "local_au_net.cuda.load_state_dict", "global_au_feat.cuda.load_state_dict", "au_net.cuda.load_state_dict", "region_learning.cuda.cuda", "align_net.cuda.cuda", "local_attention_refine.cuda.cuda", "local_au_net.cuda.cuda", "global_au_feat.cuda.cuda", "au_net.cuda.cuda", "itertools.chain", "param_lr.append", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "enumerate", "pre_process.image_train", "pre_process.land_transform", "pre_process.image_test", "pre_process.land_transform", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "filter", "filter", "filter", "filter", "filter", "filter", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "region_learning.cuda.train", "align_net.cuda.train", "local_attention_refine.cuda.train", "local_au_net.cuda.train", "global_au_feat.cuda.train", "au_net.cuda.train", "util.AU_detection_evalv2", "print", "print", "region_learning.cuda.train", "align_net.cuda.train", "local_attention_refine.cuda.train", "local_au_net.cuda.train", "global_au_feat.cuda.train", "au_net.cuda.train", "lr_scheduler", "lr_scheduler.zero_grad", "region_learning.cuda.", "align_net.cuda.", "local_attention_refine.cuda.", "local_au_net.cuda.", "global_au_feat.cuda.", "torch.cat", "torch.cat", "au_net.cuda.", "util.au_softmax_loss", "util.au_dice_loss", "util.au_softmax_loss", "util.au_dice_loss", "util.landmark_loss", "total_loss.backward", "lr_scheduler.step", "au_weight.float.float", "region_learning.cuda.parameters", "align_net.cuda.parameters", "local_attention_refine.cuda.parameters", "local_au_net.cuda.parameters", "global_au_feat.cuda.parameters", "au_net.cuda.parameters", "str", "region_learning.cuda.state_dict", "align_net.cuda.state_dict", "local_attention_refine.cuda.state_dict", "local_au_net.cuda.state_dict", "global_au_feat.cuda.state_dict", "au_net.cuda.state_dict", "print", "print", "print", "au.long.long", "aus_map.cuda.cuda", "aus_map.cuda.detach", "np.loadtxt", "np.loadtxt", "input.cuda", "land.float().cuda", "biocular.float().cuda", "au.long.long().cuda", "local_au_out_feat.detach", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "local_f1score_arr.mean", "local_acc_arr.mean", "f1score_arr.mean", "acc_arr.mean", "local_f1score_arr.mean", "local_acc_arr.mean", "f1score_arr.mean", "acc_arr.mean", "total_loss.data.cpu().numpy", "util.au_softmax_loss.data.cpu().numpy", "util.au_dice_loss.data.cpu().numpy", "util.au_softmax_loss.data.cpu().numpy", "util.au_dice_loss.data.cpu().numpy", "util.landmark_loss.data.cpu().numpy", "land.float", "biocular.float", "au.long.long", "total_loss.data.cpu", "util.au_softmax_loss.data.cpu", "util.au_dice_loss.data.cpu", "util.au_softmax_loss.data.cpu", "util.au_dice_loss.data.cpu", "util.landmark_loss.data.cpu"], "function", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_test", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.AU_detection_evalv2", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_softmax_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_dice_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_softmax_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_dice_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.landmark_loss"], ["def", "main", "(", "config", ")", ":", "\n", "## set loss criterion", "\n", "    ", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "au_weight", "=", "torch", ".", "from_numpy", "(", "np", ".", "loadtxt", "(", "config", ".", "train_path_prefix", "+", "'_weight.txt'", ")", ")", "\n", "if", "use_gpu", ":", "\n", "        ", "au_weight", "=", "au_weight", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "au_weight", "=", "au_weight", ".", "float", "(", ")", "\n", "\n", "## prepare data", "\n", "", "dsets", "=", "{", "}", "\n", "dset_loaders", "=", "{", "}", "\n", "\n", "dsets", "[", "'train'", "]", "=", "ImageList", "(", "crop_size", "=", "config", ".", "crop_size", ",", "path", "=", "config", ".", "train_path_prefix", ",", "\n", "transform", "=", "prep", ".", "image_train", "(", "crop_size", "=", "config", ".", "crop_size", ")", ",", "\n", "target_transform", "=", "prep", ".", "land_transform", "(", "img_size", "=", "config", ".", "crop_size", ",", "\n", "flip_reflect", "=", "np", ".", "loadtxt", "(", "\n", "config", ".", "flip_reflect", ")", ")", ")", "\n", "\n", "dset_loaders", "[", "'train'", "]", "=", "util_data", ".", "DataLoader", "(", "dsets", "[", "'train'", "]", ",", "batch_size", "=", "config", ".", "train_batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "config", ".", "num_workers", ")", "\n", "\n", "dsets", "[", "'test'", "]", "=", "ImageList", "(", "crop_size", "=", "config", ".", "crop_size", ",", "path", "=", "config", ".", "test_path_prefix", ",", "phase", "=", "'test'", ",", "\n", "transform", "=", "prep", ".", "image_test", "(", "crop_size", "=", "config", ".", "crop_size", ")", ",", "\n", "target_transform", "=", "prep", ".", "land_transform", "(", "img_size", "=", "config", ".", "crop_size", ",", "\n", "flip_reflect", "=", "np", ".", "loadtxt", "(", "\n", "config", ".", "flip_reflect", ")", ")", "\n", ")", "\n", "\n", "dset_loaders", "[", "'test'", "]", "=", "util_data", ".", "DataLoader", "(", "dsets", "[", "'test'", "]", ",", "batch_size", "=", "config", ".", "eval_batch_size", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "config", ".", "num_workers", ")", "\n", "\n", "## set network modules", "\n", "region_learning", "=", "network", ".", "network_dict", "[", "config", ".", "region_learning", "]", "(", "input_dim", "=", "3", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "align_net", "=", "network", ".", "network_dict", "[", "config", ".", "align_net", "]", "(", "crop_size", "=", "config", ".", "crop_size", ",", "map_size", "=", "config", ".", "map_size", ",", "\n", "au_num", "=", "config", ".", "au_num", ",", "land_num", "=", "config", ".", "land_num", ",", "\n", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "fill_coeff", "=", "config", ".", "fill_coeff", ")", "\n", "local_attention_refine", "=", "network", ".", "network_dict", "[", "config", ".", "local_attention_refine", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "local_au_net", "=", "network", ".", "network_dict", "[", "config", ".", "local_au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "global_au_feat", "=", "network", ".", "network_dict", "[", "config", ".", "global_au_feat", "]", "(", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "au_net", "=", "network", ".", "network_dict", "[", "config", ".", "au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "12000", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "\n", "\n", "if", "config", ".", "start_epoch", ">", "0", ":", "\n", "        ", "print", "(", "'resuming model from epoch %d'", "%", "(", "config", ".", "start_epoch", ")", ")", "\n", "region_learning", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/region_learning_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "align_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/align_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_attention_refine", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_attention_refine_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_au_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "global_au_feat", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/global_au_feat_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/au_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "\n", "", "if", "use_gpu", ":", "\n", "        ", "region_learning", "=", "region_learning", ".", "cuda", "(", ")", "\n", "align_net", "=", "align_net", ".", "cuda", "(", ")", "\n", "local_attention_refine", "=", "local_attention_refine", ".", "cuda", "(", ")", "\n", "local_au_net", "=", "local_au_net", ".", "cuda", "(", ")", "\n", "global_au_feat", "=", "global_au_feat", ".", "cuda", "(", ")", "\n", "au_net", "=", "au_net", ".", "cuda", "(", ")", "\n", "\n", "", "print", "(", "region_learning", ")", "\n", "print", "(", "align_net", ")", "\n", "print", "(", "local_attention_refine", ")", "\n", "print", "(", "local_au_net", ")", "\n", "print", "(", "global_au_feat", ")", "\n", "print", "(", "au_net", ")", "\n", "\n", "## collect parameters", "\n", "region_learning_parameter_list", "=", "[", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "region_learning", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "align_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "align_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "local_attention_refine_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "local_attention_refine", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "local_au_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "local_au_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "global_au_feat_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "global_au_feat", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "au_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "au_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "\n", "## set optimizer", "\n", "optimizer", "=", "optim_dict", "[", "config", ".", "optimizer_type", "]", "(", "itertools", ".", "chain", "(", "region_learning_parameter_list", ",", "align_net_parameter_list", ",", "\n", "local_attention_refine_parameter_list", ",", "\n", "local_au_net_parameter_list", ",", "\n", "global_au_feat_parameter_list", ",", "\n", "au_net_parameter_list", ")", ",", "\n", "lr", "=", "1.0", ",", "momentum", "=", "config", ".", "momentum", ",", "weight_decay", "=", "config", ".", "weight_decay", ",", "\n", "nesterov", "=", "config", ".", "use_nesterov", ")", "\n", "param_lr", "=", "[", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_lr", ".", "append", "(", "param_group", "[", "'lr'", "]", ")", "\n", "\n", "", "lr_scheduler", "=", "lr_schedule", ".", "schedule_dict", "[", "config", ".", "lr_type", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", "\n", "\n", "", "res_file", "=", "open", "(", "\n", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/AU_pred_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.txt'", ",", "'w'", ")", "\n", "\n", "## train", "\n", "count", "=", "0", "\n", "\n", "for", "epoch", "in", "range", "(", "config", ".", "start_epoch", ",", "config", ".", "n_epochs", "+", "1", ")", ":", "\n", "        ", "if", "epoch", ">", "config", ".", "start_epoch", ":", "\n", "            ", "print", "(", "'taking snapshot ...'", ")", "\n", "torch", ".", "save", "(", "region_learning", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/region_learning_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "align_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/align_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "local_attention_refine", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_attention_refine_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "local_au_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "global_au_feat", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/global_au_feat_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "au_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "\n", "# eval in the train", "\n", "", "if", "epoch", ">", "config", ".", "start_epoch", ":", "\n", "            ", "print", "(", "'testing ...'", ")", "\n", "region_learning", ".", "train", "(", "False", ")", "\n", "align_net", ".", "train", "(", "False", ")", "\n", "local_attention_refine", ".", "train", "(", "False", ")", "\n", "local_au_net", ".", "train", "(", "False", ")", "\n", "global_au_feat", ".", "train", "(", "False", ")", "\n", "au_net", ".", "train", "(", "False", ")", "\n", "\n", "local_f1score_arr", ",", "local_acc_arr", ",", "f1score_arr", ",", "acc_arr", ",", "mean_error", ",", "failure_rate", "=", "AU_detection_evalv2", "(", "\n", "dset_loaders", "[", "'test'", "]", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "\n", "local_au_net", ",", "global_au_feat", ",", "au_net", ",", "use_gpu", "=", "use_gpu", ")", "\n", "print", "(", "'epoch =%d, local f1 score mean=%f, local accuracy mean=%f, '", "\n", "'f1 score mean=%f, accuracy mean=%f, mean error=%f, failure rate=%f'", "%", "(", "epoch", ",", "local_f1score_arr", ".", "mean", "(", ")", ",", "\n", "local_acc_arr", ".", "mean", "(", ")", ",", "f1score_arr", ".", "mean", "(", ")", ",", "\n", "acc_arr", ".", "mean", "(", ")", ",", "mean_error", ",", "failure_rate", ")", ")", "\n", "print", "(", "'%d\\t%f\\t%f\\t%f\\t%f\\t%f\\t%f'", "%", "(", "epoch", ",", "local_f1score_arr", ".", "mean", "(", ")", ",", "\n", "local_acc_arr", ".", "mean", "(", ")", ",", "f1score_arr", ".", "mean", "(", ")", ",", "\n", "acc_arr", ".", "mean", "(", ")", ",", "mean_error", ",", "failure_rate", ")", ",", "file", "=", "res_file", ")", "\n", "\n", "region_learning", ".", "train", "(", "True", ")", "\n", "align_net", ".", "train", "(", "True", ")", "\n", "local_attention_refine", ".", "train", "(", "True", ")", "\n", "local_au_net", ".", "train", "(", "True", ")", "\n", "global_au_feat", ".", "train", "(", "True", ")", "\n", "au_net", ".", "train", "(", "True", ")", "\n", "\n", "", "if", "epoch", ">=", "config", ".", "n_epochs", ":", "\n", "            ", "break", "\n", "\n", "", "for", "i", ",", "batch", "in", "enumerate", "(", "dset_loaders", "[", "'train'", "]", ")", ":", "\n", "            ", "if", "i", "%", "config", ".", "display", "==", "0", "and", "count", ">", "0", ":", "\n", "                ", "print", "(", "'[epoch = %d][iter = %d][total_loss = %f][loss_au_softmax = %f][loss_au_dice = %f]'", "\n", "'[loss_local_au_softmax = %f][loss_local_au_dice = %f]'", "\n", "'[loss_land = %f]'", "%", "(", "epoch", ",", "i", ",", "\n", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_au_softmax", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_au_dice", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "\n", "loss_local_au_softmax", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_local_au_dice", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_land", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "print", "(", "'learning rate = %f %f %f %f %f %f'", "%", "(", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "2", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "3", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "4", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "5", "]", "[", "'lr'", "]", ")", ")", "\n", "print", "(", "'the number of training iterations is %d'", "%", "(", "count", ")", ")", "\n", "\n", "", "input", ",", "land", ",", "biocular", ",", "au", "=", "batch", "\n", "\n", "if", "use_gpu", ":", "\n", "                ", "input", ",", "land", ",", "biocular", ",", "au", "=", "input", ".", "cuda", "(", ")", ",", "land", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "biocular", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "au", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "                ", "au", "=", "au", ".", "long", "(", ")", "\n", "\n", "", "optimizer", "=", "lr_scheduler", "(", "param_lr", ",", "optimizer", ",", "epoch", ",", "config", ".", "gamma", ",", "config", ".", "stepsize", ",", "config", ".", "init_lr", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "region_feat", "=", "region_learning", "(", "input", ")", "\n", "align_feat", ",", "align_output", ",", "aus_map", "=", "align_net", "(", "region_feat", ")", "\n", "if", "use_gpu", ":", "\n", "                ", "aus_map", "=", "aus_map", ".", "cuda", "(", ")", "\n", "", "output_aus_map", "=", "local_attention_refine", "(", "aus_map", ".", "detach", "(", ")", ")", "\n", "local_au_out_feat", ",", "local_aus_output", "=", "local_au_net", "(", "region_feat", ",", "output_aus_map", ")", "\n", "global_au_out_feat", "=", "global_au_feat", "(", "region_feat", ")", "\n", "concat_au_feat", "=", "torch", ".", "cat", "(", "(", "align_feat", ",", "global_au_out_feat", ",", "local_au_out_feat", ".", "detach", "(", ")", ")", ",", "1", ")", "\n", "aus_output", "=", "au_net", "(", "concat_au_feat", ")", "\n", "\n", "loss_au_softmax", "=", "au_softmax_loss", "(", "aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_au_dice", "=", "au_dice_loss", "(", "aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_au", "=", "loss_au_softmax", "+", "loss_au_dice", "\n", "\n", "loss_local_au_softmax", "=", "au_softmax_loss", "(", "local_aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_local_au_dice", "=", "au_dice_loss", "(", "local_aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_local_au", "=", "loss_local_au_softmax", "+", "loss_local_au_dice", "\n", "\n", "loss_land", "=", "landmark_loss", "(", "align_output", ",", "land", ",", "biocular", ")", "\n", "\n", "total_loss", "=", "config", ".", "lambda_au", "*", "(", "loss_au", "+", "loss_local_au", ")", "+", "config", ".", "lambda_land", "*", "loss_land", "\n", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "count", "=", "count", "+", "1", "\n", "\n", "", "", "res_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.train_JAAv1.main": [[17, 223], ["torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "data_list.ImageList", "torch.DataLoader", "data_list.ImageList", "torch.DataLoader", "print", "print", "print", "print", "print", "print", "open", "range", "open.close", "np.loadtxt", "au_weight.float.float().cuda", "au_weight.float.float", "print", "region_learning.cuda.load_state_dict", "align_net.cuda.load_state_dict", "local_attention_refine.cuda.load_state_dict", "local_au_net.cuda.load_state_dict", "global_au_feat.cuda.load_state_dict", "au_net.cuda.load_state_dict", "region_learning.cuda.cuda", "align_net.cuda.cuda", "local_attention_refine.cuda.cuda", "local_au_net.cuda.cuda", "global_au_feat.cuda.cuda", "au_net.cuda.cuda", "itertools.chain", "param_lr.append", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "enumerate", "pre_process.image_train", "pre_process.land_transform", "pre_process.image_test", "pre_process.land_transform", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "filter", "filter", "filter", "filter", "filter", "filter", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "region_learning.cuda.train", "align_net.cuda.train", "local_attention_refine.cuda.train", "local_au_net.cuda.train", "global_au_feat.cuda.train", "au_net.cuda.train", "util.AU_detection_evalv1", "print", "print", "region_learning.cuda.train", "align_net.cuda.train", "local_attention_refine.cuda.train", "local_au_net.cuda.train", "global_au_feat.cuda.train", "au_net.cuda.train", "lr_scheduler", "lr_scheduler.zero_grad", "region_learning.cuda.", "align_net.cuda.", "local_attention_refine.cuda.", "local_au_net.cuda.", "global_au_feat.cuda.", "torch.cat", "torch.cat", "torch.cat", "au_net.cuda.", "util.au_softmax_loss", "util.au_dice_loss", "util.landmark_loss", "torch.interpolate", "util.attention_refine_loss", "total_loss.backward", "lr_scheduler.step", "au_weight.float.float", "region_learning.cuda.parameters", "align_net.cuda.parameters", "local_attention_refine.cuda.parameters", "local_au_net.cuda.parameters", "global_au_feat.cuda.parameters", "au_net.cuda.parameters", "str", "region_learning.cuda.state_dict", "align_net.cuda.state_dict", "local_attention_refine.cuda.state_dict", "local_au_net.cuda.state_dict", "global_au_feat.cuda.state_dict", "au_net.cuda.state_dict", "print", "print", "print", "au.long.long", "aus_map.cuda.cuda", "aus_map.cuda.detach", "F.interpolate.detach", "np.loadtxt", "np.loadtxt", "input.cuda", "land.float().cuda", "biocular.float().cuda", "au.long.long().cuda", "local_attention_refine.size", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "f1score_arr.mean", "acc_arr.mean", "f1score_arr.mean", "acc_arr.mean", "total_loss.data.cpu().numpy", "util.au_softmax_loss.data.cpu().numpy", "util.au_dice_loss.data.cpu().numpy", "util.landmark_loss.data.cpu().numpy", "util.attention_refine_loss.data.cpu().numpy", "land.float", "biocular.float", "au.long.long", "total_loss.data.cpu", "util.au_softmax_loss.data.cpu", "util.au_dice_loss.data.cpu", "util.landmark_loss.data.cpu", "util.attention_refine_loss.data.cpu"], "function", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_test", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.AU_detection_evalv1", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_softmax_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_dice_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.landmark_loss", "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.attention_refine_loss"], ["def", "main", "(", "config", ")", ":", "\n", "## set loss criterion", "\n", "    ", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "au_weight", "=", "torch", ".", "from_numpy", "(", "np", ".", "loadtxt", "(", "config", ".", "train_path_prefix", "+", "'_weight.txt'", ")", ")", "\n", "if", "use_gpu", ":", "\n", "        ", "au_weight", "=", "au_weight", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "au_weight", "=", "au_weight", ".", "float", "(", ")", "\n", "\n", "## prepare data", "\n", "", "dsets", "=", "{", "}", "\n", "dset_loaders", "=", "{", "}", "\n", "\n", "dsets", "[", "'train'", "]", "=", "ImageList", "(", "crop_size", "=", "config", ".", "crop_size", ",", "path", "=", "config", ".", "train_path_prefix", ",", "\n", "transform", "=", "prep", ".", "image_train", "(", "crop_size", "=", "config", ".", "crop_size", ")", ",", "\n", "target_transform", "=", "prep", ".", "land_transform", "(", "img_size", "=", "config", ".", "crop_size", ",", "\n", "flip_reflect", "=", "np", ".", "loadtxt", "(", "\n", "config", ".", "flip_reflect", ")", ")", ")", "\n", "\n", "dset_loaders", "[", "'train'", "]", "=", "util_data", ".", "DataLoader", "(", "dsets", "[", "'train'", "]", ",", "batch_size", "=", "config", ".", "train_batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "config", ".", "num_workers", ")", "\n", "\n", "dsets", "[", "'test'", "]", "=", "ImageList", "(", "crop_size", "=", "config", ".", "crop_size", ",", "path", "=", "config", ".", "test_path_prefix", ",", "phase", "=", "'test'", ",", "\n", "transform", "=", "prep", ".", "image_test", "(", "crop_size", "=", "config", ".", "crop_size", ")", ",", "\n", "target_transform", "=", "prep", ".", "land_transform", "(", "img_size", "=", "config", ".", "crop_size", ",", "\n", "flip_reflect", "=", "np", ".", "loadtxt", "(", "\n", "config", ".", "flip_reflect", ")", ")", "\n", ")", "\n", "\n", "dset_loaders", "[", "'test'", "]", "=", "util_data", ".", "DataLoader", "(", "dsets", "[", "'test'", "]", ",", "batch_size", "=", "config", ".", "eval_batch_size", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "config", ".", "num_workers", ")", "\n", "\n", "## set network modules", "\n", "region_learning", "=", "network", ".", "network_dict", "[", "config", ".", "region_learning", "]", "(", "input_dim", "=", "3", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "align_net", "=", "network", ".", "network_dict", "[", "config", ".", "align_net", "]", "(", "crop_size", "=", "config", ".", "crop_size", ",", "map_size", "=", "config", ".", "map_size", ",", "\n", "au_num", "=", "config", ".", "au_num", ",", "land_num", "=", "config", ".", "land_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ")", "\n", "local_attention_refine", "=", "network", ".", "network_dict", "[", "config", ".", "local_attention_refine", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "local_au_net", "=", "network", ".", "network_dict", "[", "config", ".", "local_au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "global_au_feat", "=", "network", ".", "network_dict", "[", "config", ".", "global_au_feat", "]", "(", "input_dim", "=", "config", ".", "unit_dim", "*", "8", ",", "\n", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "au_net", "=", "network", ".", "network_dict", "[", "config", ".", "au_net", "]", "(", "au_num", "=", "config", ".", "au_num", ",", "input_dim", "=", "12000", ",", "unit_dim", "=", "config", ".", "unit_dim", ")", "\n", "\n", "\n", "if", "config", ".", "start_epoch", ">", "0", ":", "\n", "        ", "print", "(", "'resuming model from epoch %d'", "%", "(", "config", ".", "start_epoch", ")", ")", "\n", "region_learning", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/region_learning_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "align_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/align_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_attention_refine", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_attention_refine_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "local_au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_au_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "global_au_feat", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/global_au_feat_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "au_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/au_net_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.pth'", ")", ")", "\n", "\n", "", "if", "use_gpu", ":", "\n", "        ", "region_learning", "=", "region_learning", ".", "cuda", "(", ")", "\n", "align_net", "=", "align_net", ".", "cuda", "(", ")", "\n", "local_attention_refine", "=", "local_attention_refine", ".", "cuda", "(", ")", "\n", "local_au_net", "=", "local_au_net", ".", "cuda", "(", ")", "\n", "global_au_feat", "=", "global_au_feat", ".", "cuda", "(", ")", "\n", "au_net", "=", "au_net", ".", "cuda", "(", ")", "\n", "\n", "", "print", "(", "region_learning", ")", "\n", "print", "(", "align_net", ")", "\n", "print", "(", "local_attention_refine", ")", "\n", "print", "(", "local_au_net", ")", "\n", "print", "(", "global_au_feat", ")", "\n", "print", "(", "au_net", ")", "\n", "\n", "## collect parameters", "\n", "region_learning_parameter_list", "=", "[", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "region_learning", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "align_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "align_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "local_attention_refine_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "local_attention_refine", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "config", ".", "grad_enhance", "}", "]", "\n", "local_au_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "local_au_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "global_au_feat_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "global_au_feat", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "au_net_parameter_list", "=", "[", "\n", "{", "'params'", ":", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "au_net", ".", "parameters", "(", ")", ")", ",", "'lr'", ":", "1", "}", "]", "\n", "\n", "## set optimizer", "\n", "optimizer", "=", "optim_dict", "[", "config", ".", "optimizer_type", "]", "(", "itertools", ".", "chain", "(", "region_learning_parameter_list", ",", "align_net_parameter_list", ",", "\n", "local_attention_refine_parameter_list", ",", "\n", "local_au_net_parameter_list", ",", "\n", "global_au_feat_parameter_list", ",", "\n", "au_net_parameter_list", ")", ",", "\n", "lr", "=", "1.0", ",", "momentum", "=", "config", ".", "momentum", ",", "weight_decay", "=", "config", ".", "weight_decay", ",", "\n", "nesterov", "=", "config", ".", "use_nesterov", ")", "\n", "param_lr", "=", "[", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_lr", ".", "append", "(", "param_group", "[", "'lr'", "]", ")", "\n", "\n", "", "lr_scheduler", "=", "lr_schedule", ".", "schedule_dict", "[", "config", ".", "lr_type", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", ")", "\n", "\n", "", "res_file", "=", "open", "(", "\n", "config", ".", "write_res_prefix", "+", "config", ".", "run_name", "+", "'/AU_pred_'", "+", "str", "(", "config", ".", "start_epoch", ")", "+", "'.txt'", ",", "'w'", ")", "\n", "\n", "## train", "\n", "count", "=", "0", "\n", "\n", "for", "epoch", "in", "range", "(", "config", ".", "start_epoch", ",", "config", ".", "n_epochs", "+", "1", ")", ":", "\n", "        ", "if", "epoch", ">", "config", ".", "start_epoch", ":", "\n", "            ", "print", "(", "'taking snapshot ...'", ")", "\n", "torch", ".", "save", "(", "region_learning", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/region_learning_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "align_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/align_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "local_attention_refine", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_attention_refine_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "local_au_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/local_au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "global_au_feat", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/global_au_feat_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "torch", ".", "save", "(", "au_net", ".", "state_dict", "(", ")", ",", "\n", "config", ".", "write_path_prefix", "+", "config", ".", "run_name", "+", "'/au_net_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", ")", "\n", "\n", "# eval in the train", "\n", "", "if", "epoch", ">", "config", ".", "start_epoch", ":", "\n", "            ", "print", "(", "'testing ...'", ")", "\n", "region_learning", ".", "train", "(", "False", ")", "\n", "align_net", ".", "train", "(", "False", ")", "\n", "local_attention_refine", ".", "train", "(", "False", ")", "\n", "local_au_net", ".", "train", "(", "False", ")", "\n", "global_au_feat", ".", "train", "(", "False", ")", "\n", "au_net", ".", "train", "(", "False", ")", "\n", "\n", "f1score_arr", ",", "acc_arr", ",", "mean_error", ",", "failure_rate", "=", "AU_detection_evalv1", "(", "\n", "dset_loaders", "[", "'test'", "]", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "\n", "local_au_net", ",", "global_au_feat", ",", "au_net", ",", "use_gpu", "=", "use_gpu", ")", "\n", "print", "(", "'epoch =%d, f1 score mean=%f, accuracy mean=%f, mean error=%f, failure rate=%f'", "\n", "%", "(", "epoch", ",", "f1score_arr", ".", "mean", "(", ")", ",", "acc_arr", ".", "mean", "(", ")", ",", "mean_error", ",", "failure_rate", ")", ")", "\n", "print", "(", "'%d\\t%f\\t%f\\t%f\\t%f'", "%", "(", "epoch", ",", "f1score_arr", ".", "mean", "(", ")", ",", "acc_arr", ".", "mean", "(", ")", ",", "\n", "mean_error", ",", "failure_rate", ")", ",", "file", "=", "res_file", ")", "\n", "\n", "region_learning", ".", "train", "(", "True", ")", "\n", "align_net", ".", "train", "(", "True", ")", "\n", "local_attention_refine", ".", "train", "(", "True", ")", "\n", "local_au_net", ".", "train", "(", "True", ")", "\n", "global_au_feat", ".", "train", "(", "True", ")", "\n", "au_net", ".", "train", "(", "True", ")", "\n", "\n", "", "if", "epoch", ">=", "config", ".", "n_epochs", ":", "\n", "            ", "break", "\n", "\n", "", "for", "i", ",", "batch", "in", "enumerate", "(", "dset_loaders", "[", "'train'", "]", ")", ":", "\n", "            ", "if", "i", "%", "config", ".", "display", "==", "0", "and", "count", ">", "0", ":", "\n", "                ", "print", "(", "'[epoch = %d][iter = %d][total_loss = %f][loss_au_softmax = %f][loss_au_dice = %f][loss_land = %f][loss_attention_refine = %f]'", "%", "(", "epoch", ",", "i", ",", "\n", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_au_softmax", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_au_dice", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_land", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "loss_attention_refine", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "print", "(", "'learning rate = %f %f %f %f %f %f'", "%", "(", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "2", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "3", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "4", "]", "[", "'lr'", "]", ",", "\n", "optimizer", ".", "param_groups", "[", "5", "]", "[", "'lr'", "]", ")", ")", "\n", "print", "(", "'the number of training iterations is %d'", "%", "(", "count", ")", ")", "\n", "\n", "", "input", ",", "land", ",", "biocular", ",", "au", "=", "batch", "\n", "\n", "if", "use_gpu", ":", "\n", "                ", "input", ",", "land", ",", "biocular", ",", "au", "=", "input", ".", "cuda", "(", ")", ",", "land", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "biocular", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "au", ".", "long", "(", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "                ", "au", "=", "au", ".", "long", "(", ")", "\n", "\n", "", "optimizer", "=", "lr_scheduler", "(", "param_lr", ",", "optimizer", ",", "epoch", ",", "config", ".", "gamma", ",", "config", ".", "stepsize", ",", "config", ".", "init_lr", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "region_feat", "=", "region_learning", "(", "input", ")", "\n", "align_feat", ",", "align_output", ",", "aus_map", "=", "align_net", "(", "region_feat", ")", "\n", "if", "use_gpu", ":", "\n", "                ", "aus_map", "=", "aus_map", ".", "cuda", "(", ")", "\n", "", "output_aus_map", "=", "local_attention_refine", "(", "aus_map", ".", "detach", "(", ")", ")", "\n", "local_au_out_feat", "=", "local_au_net", "(", "region_feat", ",", "output_aus_map", ")", "\n", "global_au_out_feat", "=", "global_au_feat", "(", "region_feat", ")", "\n", "concat_au_feat", "=", "torch", ".", "cat", "(", "(", "align_feat", ",", "global_au_out_feat", ",", "local_au_out_feat", ")", ",", "1", ")", "\n", "aus_output", "=", "au_net", "(", "concat_au_feat", ")", "\n", "\n", "loss_au_softmax", "=", "au_softmax_loss", "(", "aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_au_dice", "=", "au_dice_loss", "(", "aus_output", ",", "au", ",", "weight", "=", "au_weight", ")", "\n", "loss_au", "=", "loss_au_softmax", "+", "loss_au_dice", "\n", "loss_land", "=", "landmark_loss", "(", "align_output", ",", "land", ",", "biocular", ")", "\n", "\n", "resize_aus_map", "=", "F", ".", "interpolate", "(", "aus_map", ",", "size", "=", "output_aus_map", ".", "size", "(", "2", ")", ")", "\n", "loss_attention_refine", "=", "attention_refine_loss", "(", "output_aus_map", ",", "resize_aus_map", ".", "detach", "(", ")", ")", "\n", "\n", "total_loss", "=", "config", ".", "lambda_au", "*", "loss_au", "+", "config", ".", "lambda_land", "*", "loss_land", "+", "(", "config", ".", "lambda_refine", "/", "config", ".", "grad_enhance", ")", "*", "loss_attention_refine", "\n", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "count", "=", "count", "+", "1", "\n", "\n", "", "", "res_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.str2bool": [[10, 12], ["v.lower"], "function", ["None"], ["def", "str2bool", "(", "v", ")", ":", "\n", "    ", "return", "v", ".", "lower", "(", ")", "in", "(", "'true'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.tensor2img": [[13, 19], ["np.tile.data.numpy", "np.tile.astype", "numpy.tile", "numpy.transpose"], "function", ["None"], ["", "def", "tensor2img", "(", "img", ")", ":", "\n", "    ", "img", "=", "img", ".", "data", ".", "numpy", "(", ")", "\n", "if", "img", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "        ", "img", "=", "np", ".", "tile", "(", "img", ",", "(", "3", ",", "1", ",", "1", ")", ")", "\n", "", "img", "=", "(", "np", ".", "transpose", "(", "img", ",", "(", "1", ",", "2", ",", "0", ")", ")", "+", "1", ")", "/", "2.0", "*", "255.0", "\n", "return", "img", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.save_img": [[20, 25], ["util.tensor2img", "PIL.Image.fromarray", "Image.fromarray.save"], "function", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.tensor2img"], ["", "def", "save_img", "(", "img", ",", "name", ",", "path", ")", ":", "\n", "    ", "img", "=", "tensor2img", "(", "img", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "img", ".", "save", "(", "path", "+", "name", "+", "'.png'", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.AU_detection_evalv1": [[27, 110], ["enumerate", "torch.cat.data.numpy", "torch.cat.data.numpy", "torch.cat.data.numpy", "torch.cat.data.numpy", "numpy.zeros", "AUoccur_actual.transpose.transpose", "AUoccur_pred.transpose.transpose", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "range", "np.zeros.mean", "numpy.zeros", "region_learning", "align_net", "local_attention_refine", "local_au_net", "global_au_feat", "torch.cat", "torch.cat", "au_net", "aus_output[].exp", "sklearn.metrics.f1_score", "sklearn.metrics.accuracy_score", "left_eye_x.mean", "left_eye_y.mean", "right_eye_x.mean", "right_eye_y.mean", "math.sqrt", "range", "errors[].mean", "len", "np.zeros.sum", "aus_map.cuda.cuda", "aus_map.cuda.detach", "aus_output[].exp.data.cpu().float", "au.data.cpu().float", "align_output.data.cpu().float", "land.data.cpu().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "int", "input.cuda", "land.cuda", "au.cuda", "math.sqrt", "aus_output[].exp.data.cpu", "au.data.cpu", "align_output.data.cpu", "land.data.cpu", "aus_output[].exp.data.cpu().float", "au.data.cpu().float", "align_output.data.cpu().float", "land.data.cpu().float", "int", "aus_output[].exp.data.cpu", "au.data.cpu", "align_output.data.cpu", "land.data.cpu"], "function", ["None"], ["", "def", "AU_detection_evalv1", "(", "loader", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "\n", "local_au_net", ",", "global_au_feat", ",", "au_net", ",", "use_gpu", "=", "True", ",", "fail_threshold", "=", "0.1", ")", ":", "\n", "    ", "missing_label", "=", "9", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "input", ",", "land", ",", "biocular", ",", "au", "=", "batch", "\n", "if", "use_gpu", ":", "\n", "            ", "input", ",", "land", ",", "au", "=", "input", ".", "cuda", "(", ")", ",", "land", ".", "cuda", "(", ")", ",", "au", ".", "cuda", "(", ")", "\n", "\n", "", "region_feat", "=", "region_learning", "(", "input", ")", "\n", "align_feat", ",", "align_output", ",", "aus_map", "=", "align_net", "(", "region_feat", ")", "\n", "if", "use_gpu", ":", "\n", "            ", "aus_map", "=", "aus_map", ".", "cuda", "(", ")", "\n", "", "output_aus_map", "=", "local_attention_refine", "(", "aus_map", ".", "detach", "(", ")", ")", "\n", "local_au_out_feat", "=", "local_au_net", "(", "region_feat", ",", "output_aus_map", ")", "\n", "global_au_out_feat", "=", "global_au_feat", "(", "region_feat", ")", "\n", "concat_au_feat", "=", "torch", ".", "cat", "(", "(", "align_feat", ",", "global_au_out_feat", ",", "local_au_out_feat", ")", ",", "1", ")", "\n", "aus_output", "=", "au_net", "(", "concat_au_feat", ")", "\n", "aus_output", "=", "(", "aus_output", "[", ":", ",", "1", ",", ":", "]", ")", ".", "exp", "(", ")", "\n", "\n", "if", "i", "==", "0", ":", "\n", "            ", "all_output", "=", "aus_output", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "all_au", "=", "au", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "all_pred_land", "=", "align_output", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "all_land", "=", "land", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "            ", "all_output", "=", "torch", ".", "cat", "(", "(", "all_output", ",", "aus_output", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "all_au", "=", "torch", ".", "cat", "(", "(", "all_au", ",", "au", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "all_pred_land", "=", "torch", ".", "cat", "(", "(", "all_pred_land", ",", "align_output", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "all_land", "=", "torch", ".", "cat", "(", "(", "all_land", ",", "land", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "\n", "", "", "AUoccur_pred_prob", "=", "all_output", ".", "data", ".", "numpy", "(", ")", "\n", "AUoccur_actual", "=", "all_au", ".", "data", ".", "numpy", "(", ")", "\n", "pred_land", "=", "all_pred_land", ".", "data", ".", "numpy", "(", ")", "\n", "GT_land", "=", "all_land", ".", "data", ".", "numpy", "(", ")", "\n", "\n", "# AUs", "\n", "AUoccur_pred", "=", "np", ".", "zeros", "(", "AUoccur_pred_prob", ".", "shape", ")", "\n", "AUoccur_pred", "[", "AUoccur_pred_prob", "<", "0.5", "]", "=", "0", "\n", "AUoccur_pred", "[", "AUoccur_pred_prob", ">=", "0.5", "]", "=", "1", "\n", "\n", "AUoccur_actual", "=", "AUoccur_actual", ".", "transpose", "(", "(", "1", ",", "0", ")", ")", "\n", "AUoccur_pred", "=", "AUoccur_pred", ".", "transpose", "(", "(", "1", ",", "0", ")", ")", "\n", "\n", "f1score_arr", "=", "np", ".", "zeros", "(", "AUoccur_actual", ".", "shape", "[", "0", "]", ")", "\n", "acc_arr", "=", "np", ".", "zeros", "(", "AUoccur_actual", ".", "shape", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "AUoccur_actual", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "curr_actual", "=", "AUoccur_actual", "[", "i", "]", "\n", "curr_pred", "=", "AUoccur_pred", "[", "i", "]", "\n", "\n", "new_curr_actual", "=", "curr_actual", "[", "curr_actual", "!=", "missing_label", "]", "\n", "new_curr_pred", "=", "curr_pred", "[", "curr_actual", "!=", "missing_label", "]", "\n", "\n", "f1score_arr", "[", "i", "]", "=", "f1_score", "(", "new_curr_actual", ",", "new_curr_pred", ")", "\n", "acc_arr", "[", "i", "]", "=", "accuracy_score", "(", "new_curr_actual", ",", "new_curr_pred", ")", "\n", "\n", "# landmarks", "\n", "", "errors", "=", "np", ".", "zeros", "(", "(", "GT_land", ".", "shape", "[", "0", "]", ",", "int", "(", "GT_land", ".", "shape", "[", "1", "]", "/", "2", ")", ")", ")", "\n", "mean_errors", "=", "np", ".", "zeros", "(", "GT_land", ".", "shape", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "GT_land", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "left_eye_x", "=", "GT_land", "[", "i", ",", "(", "20", "-", "1", ")", "*", "2", ":", "(", "26", "-", "1", ")", "*", "2", ":", "2", "]", "\n", "l_ocular_x", "=", "left_eye_x", ".", "mean", "(", ")", "\n", "left_eye_y", "=", "GT_land", "[", "i", ",", "(", "20", "-", "1", ")", "*", "2", "+", "1", ":", "(", "26", "-", "1", ")", "*", "2", "+", "1", ":", "2", "]", "\n", "l_ocular_y", "=", "left_eye_y", ".", "mean", "(", ")", "\n", "\n", "right_eye_x", "=", "GT_land", "[", "i", ",", "(", "26", "-", "1", ")", "*", "2", ":", "(", "32", "-", "1", ")", "*", "2", ":", "2", "]", "\n", "r_ocular_x", "=", "right_eye_x", ".", "mean", "(", ")", "\n", "right_eye_y", "=", "GT_land", "[", "i", ",", "(", "26", "-", "1", ")", "*", "2", "+", "1", ":", "(", "32", "-", "1", ")", "*", "2", "+", "1", ":", "2", "]", "\n", "r_ocular_y", "=", "right_eye_y", ".", "mean", "(", ")", "\n", "\n", "biocular", "=", "math", ".", "sqrt", "(", "(", "l_ocular_x", "-", "r_ocular_x", ")", "**", "2", "+", "(", "l_ocular_y", "-", "r_ocular_y", ")", "**", "2", ")", "\n", "\n", "for", "j", "in", "range", "(", "0", ",", "GT_land", ".", "shape", "[", "1", "]", ",", "2", ")", ":", "\n", "            ", "errors", "[", "i", ",", "int", "(", "j", "/", "2", ")", "]", "=", "math", ".", "sqrt", "(", "(", "GT_land", "[", "i", ",", "j", "]", "-", "pred_land", "[", "i", ",", "j", "]", ")", "**", "2", "+", "(", "\n", "GT_land", "[", "i", ",", "j", "+", "1", "]", "-", "pred_land", "[", "i", ",", "j", "+", "1", "]", ")", "**", "2", ")", "/", "biocular", "\n", "\n", "", "mean_errors", "[", "i", "]", "=", "errors", "[", "i", "]", ".", "mean", "(", ")", "\n", "", "mean_error", "=", "mean_errors", ".", "mean", "(", ")", "\n", "\n", "failure_ind", "=", "np", ".", "zeros", "(", "len", "(", "GT_land", ")", ")", "\n", "failure_ind", "[", "mean_errors", ">", "fail_threshold", "]", "=", "1", "\n", "failure_rate", "=", "failure_ind", ".", "sum", "(", ")", "/", "failure_ind", ".", "shape", "[", "0", "]", "\n", "\n", "return", "f1score_arr", ",", "acc_arr", ",", "mean_error", ",", "failure_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.AU_detection_evalv2": [[112, 211], ["enumerate", "torch.cat.data.numpy", "torch.cat.data.numpy", "torch.cat.data.numpy", "torch.cat.data.numpy", "torch.cat.data.numpy", "numpy.savetxt", "numpy.zeros", "numpy.zeros", "AUoccur_actual.transpose.transpose", "AUoccur_pred.transpose.transpose", "local_AUoccur_pred.transpose.transpose", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "range", "np.zeros.mean", "numpy.zeros", "region_learning", "align_net", "local_attention_refine", "local_au_net", "local_aus_output[].exp", "global_au_feat", "torch.cat", "torch.cat", "au_net", "aus_output[].exp", "sklearn.metrics.f1_score", "sklearn.metrics.accuracy_score", "sklearn.metrics.f1_score", "sklearn.metrics.accuracy_score", "left_eye_x.mean", "left_eye_y.mean", "right_eye_x.mean", "right_eye_y.mean", "math.sqrt", "range", "errors[].mean", "len", "np.zeros.sum", "aus_map.cuda.cuda", "aus_map.cuda.detach", "local_aus_output[].exp.data.cpu().float", "aus_output[].exp.data.cpu().float", "au.data.cpu().float", "align_output.data.cpu().float", "land.data.cpu().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "int", "input.cuda", "land.cuda", "au.cuda", "local_au_out_feat.detach", "math.sqrt", "local_aus_output[].exp.data.cpu", "aus_output[].exp.data.cpu", "au.data.cpu", "align_output.data.cpu", "land.data.cpu", "local_aus_output[].exp.data.cpu().float", "aus_output[].exp.data.cpu().float", "au.data.cpu().float", "align_output.data.cpu().float", "land.data.cpu().float", "int", "local_aus_output[].exp.data.cpu", "aus_output[].exp.data.cpu", "au.data.cpu", "align_output.data.cpu", "land.data.cpu"], "function", ["None"], ["", "def", "AU_detection_evalv2", "(", "loader", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "\n", "local_au_net", ",", "global_au_feat", ",", "au_net", ",", "use_gpu", "=", "True", ",", "fail_threshold", "=", "0.1", ")", ":", "\n", "    ", "missing_label", "=", "9", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "input", ",", "land", ",", "biocular", ",", "au", "=", "batch", "\n", "if", "use_gpu", ":", "\n", "            ", "input", ",", "land", ",", "au", "=", "input", ".", "cuda", "(", ")", ",", "land", ".", "cuda", "(", ")", ",", "au", ".", "cuda", "(", ")", "\n", "\n", "", "region_feat", "=", "region_learning", "(", "input", ")", "\n", "align_feat", ",", "align_output", ",", "aus_map", "=", "align_net", "(", "region_feat", ")", "\n", "if", "use_gpu", ":", "\n", "            ", "aus_map", "=", "aus_map", ".", "cuda", "(", ")", "\n", "", "output_aus_map", "=", "local_attention_refine", "(", "aus_map", ".", "detach", "(", ")", ")", "\n", "local_au_out_feat", ",", "local_aus_output", "=", "local_au_net", "(", "region_feat", ",", "output_aus_map", ")", "\n", "local_aus_output", "=", "(", "local_aus_output", "[", ":", ",", "1", ",", ":", "]", ")", ".", "exp", "(", ")", "\n", "global_au_out_feat", "=", "global_au_feat", "(", "region_feat", ")", "\n", "concat_au_feat", "=", "torch", ".", "cat", "(", "(", "align_feat", ",", "global_au_out_feat", ",", "local_au_out_feat", ".", "detach", "(", ")", ")", ",", "1", ")", "\n", "aus_output", "=", "au_net", "(", "concat_au_feat", ")", "\n", "aus_output", "=", "(", "aus_output", "[", ":", ",", "1", ",", ":", "]", ")", ".", "exp", "(", ")", "\n", "\n", "if", "i", "==", "0", ":", "\n", "            ", "all_local_output", "=", "local_aus_output", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "all_output", "=", "aus_output", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "all_au", "=", "au", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "all_pred_land", "=", "align_output", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "all_land", "=", "land", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "            ", "all_local_output", "=", "torch", ".", "cat", "(", "(", "all_local_output", ",", "local_aus_output", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "all_output", "=", "torch", ".", "cat", "(", "(", "all_output", ",", "aus_output", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "all_au", "=", "torch", ".", "cat", "(", "(", "all_au", ",", "au", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "all_pred_land", "=", "torch", ".", "cat", "(", "(", "all_pred_land", ",", "align_output", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "all_land", "=", "torch", ".", "cat", "(", "(", "all_land", ",", "land", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "\n", "", "", "AUoccur_pred_prob", "=", "all_output", ".", "data", ".", "numpy", "(", ")", "\n", "local_AUoccur_pred_prob", "=", "all_local_output", ".", "data", ".", "numpy", "(", ")", "\n", "AUoccur_actual", "=", "all_au", ".", "data", ".", "numpy", "(", ")", "\n", "pred_land", "=", "all_pred_land", ".", "data", ".", "numpy", "(", ")", "\n", "GT_land", "=", "all_land", ".", "data", ".", "numpy", "(", ")", "\n", "# np.savetxt('BP4D_part1_pred_land_49.txt', pred_land, fmt='%.4f', delimiter='\\t')", "\n", "np", ".", "savetxt", "(", "'B3D_val_predAUprob-2_all_.txt'", ",", "AUoccur_pred_prob", ",", "fmt", "=", "'%f'", ",", "\n", "delimiter", "=", "'\\t'", ")", "\n", "# AUs", "\n", "AUoccur_pred", "=", "np", ".", "zeros", "(", "AUoccur_pred_prob", ".", "shape", ")", "\n", "AUoccur_pred", "[", "AUoccur_pred_prob", "<", "0.5", "]", "=", "0", "\n", "AUoccur_pred", "[", "AUoccur_pred_prob", ">=", "0.5", "]", "=", "1", "\n", "local_AUoccur_pred", "=", "np", ".", "zeros", "(", "local_AUoccur_pred_prob", ".", "shape", ")", "\n", "local_AUoccur_pred", "[", "local_AUoccur_pred_prob", "<", "0.5", "]", "=", "0", "\n", "local_AUoccur_pred", "[", "local_AUoccur_pred_prob", ">=", "0.5", "]", "=", "1", "\n", "\n", "AUoccur_actual", "=", "AUoccur_actual", ".", "transpose", "(", "(", "1", ",", "0", ")", ")", "\n", "AUoccur_pred", "=", "AUoccur_pred", ".", "transpose", "(", "(", "1", ",", "0", ")", ")", "\n", "local_AUoccur_pred", "=", "local_AUoccur_pred", ".", "transpose", "(", "(", "1", ",", "0", ")", ")", "\n", "\n", "f1score_arr", "=", "np", ".", "zeros", "(", "AUoccur_actual", ".", "shape", "[", "0", "]", ")", "\n", "acc_arr", "=", "np", ".", "zeros", "(", "AUoccur_actual", ".", "shape", "[", "0", "]", ")", "\n", "local_f1score_arr", "=", "np", ".", "zeros", "(", "AUoccur_actual", ".", "shape", "[", "0", "]", ")", "\n", "local_acc_arr", "=", "np", ".", "zeros", "(", "AUoccur_actual", ".", "shape", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "AUoccur_actual", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "curr_actual", "=", "AUoccur_actual", "[", "i", "]", "\n", "curr_pred", "=", "AUoccur_pred", "[", "i", "]", "\n", "local_curr_pred", "=", "local_AUoccur_pred", "[", "i", "]", "\n", "\n", "new_curr_actual", "=", "curr_actual", "[", "curr_actual", "!=", "missing_label", "]", "\n", "new_curr_pred", "=", "curr_pred", "[", "curr_actual", "!=", "missing_label", "]", "\n", "local_new_curr_pred", "=", "local_curr_pred", "[", "curr_actual", "!=", "missing_label", "]", "\n", "\n", "f1score_arr", "[", "i", "]", "=", "f1_score", "(", "new_curr_actual", ",", "new_curr_pred", ")", "\n", "acc_arr", "[", "i", "]", "=", "accuracy_score", "(", "new_curr_actual", ",", "new_curr_pred", ")", "\n", "local_f1score_arr", "[", "i", "]", "=", "f1_score", "(", "new_curr_actual", ",", "local_new_curr_pred", ")", "\n", "local_acc_arr", "[", "i", "]", "=", "accuracy_score", "(", "new_curr_actual", ",", "local_new_curr_pred", ")", "\n", "\n", "# landmarks", "\n", "", "errors", "=", "np", ".", "zeros", "(", "(", "GT_land", ".", "shape", "[", "0", "]", ",", "int", "(", "GT_land", ".", "shape", "[", "1", "]", "/", "2", ")", ")", ")", "\n", "mean_errors", "=", "np", ".", "zeros", "(", "GT_land", ".", "shape", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "GT_land", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "left_eye_x", "=", "GT_land", "[", "i", ",", "(", "20", "-", "1", ")", "*", "2", ":", "(", "26", "-", "1", ")", "*", "2", ":", "2", "]", "\n", "l_ocular_x", "=", "left_eye_x", ".", "mean", "(", ")", "\n", "left_eye_y", "=", "GT_land", "[", "i", ",", "(", "20", "-", "1", ")", "*", "2", "+", "1", ":", "(", "26", "-", "1", ")", "*", "2", "+", "1", ":", "2", "]", "\n", "l_ocular_y", "=", "left_eye_y", ".", "mean", "(", ")", "\n", "\n", "right_eye_x", "=", "GT_land", "[", "i", ",", "(", "26", "-", "1", ")", "*", "2", ":", "(", "32", "-", "1", ")", "*", "2", ":", "2", "]", "\n", "r_ocular_x", "=", "right_eye_x", ".", "mean", "(", ")", "\n", "right_eye_y", "=", "GT_land", "[", "i", ",", "(", "26", "-", "1", ")", "*", "2", "+", "1", ":", "(", "32", "-", "1", ")", "*", "2", "+", "1", ":", "2", "]", "\n", "r_ocular_y", "=", "right_eye_y", ".", "mean", "(", ")", "\n", "\n", "biocular", "=", "math", ".", "sqrt", "(", "(", "l_ocular_x", "-", "r_ocular_x", ")", "**", "2", "+", "(", "l_ocular_y", "-", "r_ocular_y", ")", "**", "2", ")", "\n", "\n", "for", "j", "in", "range", "(", "0", ",", "GT_land", ".", "shape", "[", "1", "]", ",", "2", ")", ":", "\n", "            ", "errors", "[", "i", ",", "int", "(", "j", "/", "2", ")", "]", "=", "math", ".", "sqrt", "(", "(", "GT_land", "[", "i", ",", "j", "]", "-", "pred_land", "[", "i", ",", "j", "]", ")", "**", "2", "+", "(", "\n", "GT_land", "[", "i", ",", "j", "+", "1", "]", "-", "pred_land", "[", "i", ",", "j", "+", "1", "]", ")", "**", "2", ")", "/", "biocular", "\n", "\n", "", "mean_errors", "[", "i", "]", "=", "errors", "[", "i", "]", ".", "mean", "(", ")", "\n", "", "mean_error", "=", "mean_errors", ".", "mean", "(", ")", "\n", "\n", "failure_ind", "=", "np", ".", "zeros", "(", "len", "(", "GT_land", ")", ")", "\n", "failure_ind", "[", "mean_errors", ">", "fail_threshold", "]", "=", "1", "\n", "failure_rate", "=", "failure_ind", ".", "sum", "(", ")", "/", "failure_ind", ".", "shape", "[", "0", "]", "\n", "\n", "return", "local_f1score_arr", ",", "local_acc_arr", ",", "f1score_arr", ",", "acc_arr", ",", "mean_error", ",", "failure_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.vis_attention": [[213, 259], ["enumerate", "range", "region_learning", "align_net", "local_attention_refine", "util.save_img", "range", "range", "input.cuda.cuda", "aus_map.cuda.cuda", "aus_map.cuda.detach", "input.cuda.data.cpu().float", "spatial_attention.data.cpu().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "matplotlib.subplots", "ax.imshow", "ax.axis", "ax.axes.get_xaxis().set_visible", "ax.axes.get_yaxis().set_visible", "fig.savefig", "PIL.Image.open", "overlay.convert.resize", "background.convert.convert", "overlay.convert.convert", "PIL.Image.blend", "Image.blend.save", "input.cuda.data.cpu", "spatial_attention.data.cpu", "input.cuda.data.cpu().float", "spatial_attention.data.cpu().float", "str", "ax.axes.get_xaxis", "ax.axes.get_yaxis", "str", "str", "str", "input.cuda.data.cpu", "spatial_attention.data.cpu", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.save_img"], ["", "def", "vis_attention", "(", "loader", ",", "region_learning", ",", "align_net", ",", "local_attention_refine", ",", "write_path_prefix", ",", "net_name", ",", "epoch", ",", "alpha", "=", "0.5", ",", "use_gpu", "=", "True", ")", ":", "\n", "    ", "for", "i", ",", "batch", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "input", ",", "land", ",", "biocular", ",", "au", "=", "batch", "\n", "# if i > 1:", "\n", "#     break", "\n", "if", "use_gpu", ":", "\n", "            ", "input", "=", "input", ".", "cuda", "(", ")", "\n", "", "region_feat", "=", "region_learning", "(", "input", ")", "\n", "align_feat", ",", "align_output", ",", "aus_map", "=", "align_net", "(", "region_feat", ")", "\n", "if", "use_gpu", ":", "\n", "            ", "aus_map", "=", "aus_map", ".", "cuda", "(", ")", "\n", "", "output_aus_map", "=", "local_attention_refine", "(", "aus_map", ".", "detach", "(", ")", ")", "\n", "\n", "# aus_map is predefined, and output_aus_map is refined", "\n", "spatial_attention", "=", "output_aus_map", "#aus_map", "\n", "if", "i", "==", "0", ":", "\n", "            ", "all_input", "=", "input", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "all_spatial_attention", "=", "spatial_attention", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "            ", "all_input", "=", "torch", ".", "cat", "(", "(", "all_input", ",", "input", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "all_spatial_attention", "=", "torch", ".", "cat", "(", "(", "all_spatial_attention", ",", "spatial_attention", ".", "data", ".", "cpu", "(", ")", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "all_spatial_attention", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "background", "=", "save_img", "(", "all_input", "[", "i", "]", ",", "'input'", ",", "write_path_prefix", "+", "net_name", "+", "'/vis_map/'", "+", "str", "(", "epoch", ")", "+", "\n", "'/'", "+", "str", "(", "i", ")", "+", "'_'", ")", "\n", "for", "j", "in", "range", "(", "all_spatial_attention", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "# print(all_spatial_attention[i,j].max(), all_spatial_attention[i,j].min())", "\n", "# cax = ax.imshow(all_spatial_attention[i,j], cmap='jet', interpolation='bicubic')", "\n", "cax", "=", "ax", ".", "imshow", "(", "all_spatial_attention", "[", "i", ",", "j", "]", ",", "cmap", "=", "'jet'", ",", "interpolation", "=", "'bicubic'", ",", "vmin", "=", "0", ",", "vmax", "=", "1", ")", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "axes", ".", "get_xaxis", "(", ")", ".", "set_visible", "(", "False", ")", "\n", "ax", ".", "axes", ".", "get_yaxis", "(", ")", ".", "set_visible", "(", "False", ")", "\n", "#        cbar = fig.colorbar(cax)", "\n", "fig", ".", "savefig", "(", "write_path_prefix", "+", "net_name", "+", "'/vis_map/'", "+", "str", "(", "epoch", ")", "+", "\n", "'/'", "+", "str", "(", "i", ")", "+", "'_au_'", "+", "str", "(", "j", ")", "+", "'.png'", ",", "bbox_inches", "=", "'tight'", ",", "pad_inches", "=", "0", ")", "\n", "\n", "", "for", "j", "in", "range", "(", "all_spatial_attention", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "overlay", "=", "Image", ".", "open", "(", "write_path_prefix", "+", "net_name", "+", "'/vis_map/'", "+", "str", "(", "epoch", ")", "+", "\n", "'/'", "+", "str", "(", "i", ")", "+", "'_au_'", "+", "str", "(", "j", ")", "+", "'.png'", ")", "\n", "overlay", "=", "overlay", ".", "resize", "(", "background", ".", "size", ",", "Image", ".", "ANTIALIAS", ")", "\n", "background", "=", "background", ".", "convert", "(", "'RGBA'", ")", "\n", "overlay", "=", "overlay", ".", "convert", "(", "'RGBA'", ")", "\n", "new_img", "=", "Image", ".", "blend", "(", "background", ",", "overlay", ",", "alpha", ")", "\n", "new_img", ".", "save", "(", "write_path_prefix", "+", "net_name", "+", "'/overlay_vis_map/'", "+", "str", "(", "epoch", ")", "+", "\n", "'/'", "+", "str", "(", "i", ")", "+", "'_au_'", "+", "str", "(", "j", ")", "+", "'.png'", ",", "'PNG'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.dice_loss": [[261, 277], ["pred.contiguous().view", "target.contiguous().view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "pred.contiguous", "target.contiguous", "pred.contiguous().view.size"], "function", ["None"], ["", "", "", "def", "dice_loss", "(", "pred", ",", "target", ",", "smooth", "=", "1", ")", ":", "\n", "    ", "\"\"\"This definition generalize to real valued pred and target vector.\n    This should be differentiable.\n    pred: tensor with first dimension as batch\n    target: tensor with first dimension as batch\n    \"\"\"", "\n", "\n", "# have to use contiguous since they may from a torch.view op", "\n", "iflat", "=", "pred", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "tflat", "=", "target", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "intersection", "=", "(", "iflat", "*", "tflat", ")", ".", "sum", "(", ")", "\n", "\n", "A_sum", "=", "torch", ".", "sum", "(", "iflat", "*", "iflat", ")", "\n", "B_sum", "=", "torch", ".", "sum", "(", "tflat", "*", "tflat", ")", "\n", "\n", "return", "1", "-", "(", "(", "2.", "*", "intersection", "+", "smooth", ")", "/", "(", "A_sum", "+", "B_sum", "+", "smooth", ")", ")", "/", "iflat", ".", "size", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_softmax_loss": [[279, 298], ["torch.NLLLoss", "range", "input.size", "nn.NLLLoss.", "torch.unsqueeze", "torch.unsqueeze", "torch.cat.mean", "torch.cat.sum", "torch.cat", "torch.cat"], "function", ["None"], ["", "def", "au_softmax_loss", "(", "input", ",", "target", ",", "weight", "=", "None", ",", "size_average", "=", "True", ",", "reduce", "=", "True", ")", ":", "\n", "    ", "classify_loss", "=", "nn", ".", "NLLLoss", "(", "size_average", "=", "size_average", ",", "reduce", "=", "reduce", ")", "\n", "\n", "for", "i", "in", "range", "(", "input", ".", "size", "(", "2", ")", ")", ":", "\n", "        ", "t_input", "=", "input", "[", ":", ",", ":", ",", "i", "]", "\n", "t_target", "=", "target", "[", ":", ",", "i", "]", "\n", "t_loss", "=", "classify_loss", "(", "t_input", ",", "t_target", ")", "\n", "if", "weight", "is", "not", "None", ":", "\n", "            ", "t_loss", "=", "t_loss", "*", "weight", "[", "i", "]", "\n", "", "t_loss", "=", "torch", ".", "unsqueeze", "(", "t_loss", ",", "0", ")", "\n", "if", "i", "==", "0", ":", "\n", "            ", "loss", "=", "t_loss", "\n", "", "else", ":", "\n", "            ", "loss", "=", "torch", ".", "cat", "(", "(", "loss", ",", "t_loss", ")", ",", "0", ")", "\n", "\n", "", "", "if", "size_average", ":", "\n", "        ", "return", "loss", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "loss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.au_dice_loss": [[300, 320], ["range", "input.size", "input[].exp", "target[].float", "util.dice_loss", "torch.unsqueeze", "torch.unsqueeze", "torch.cat.mean", "torch.cat.sum", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.dice_loss"], ["", "", "def", "au_dice_loss", "(", "input", ",", "target", ",", "weight", "=", "None", ",", "smooth", "=", "1", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "input", ".", "size", "(", "2", ")", ")", ":", "\n", "# input is log_softmax, t_input is probability", "\n", "        ", "t_input", "=", "(", "input", "[", ":", ",", "1", ",", "i", "]", ")", ".", "exp", "(", ")", "\n", "t_target", "=", "(", "target", "[", ":", ",", "i", "]", ")", ".", "float", "(", ")", "\n", "# t_loss = 1 - float(2*torch.dot(t_input, t_target) + smooth)/\\", "\n", "#          (torch.dot(t_input, t_input)+torch.dot(t_target, t_target)+smooth)/t_input.size(0)", "\n", "t_loss", "=", "dice_loss", "(", "t_input", ",", "t_target", ",", "smooth", ")", "\n", "if", "weight", "is", "not", "None", ":", "\n", "            ", "t_loss", "=", "t_loss", "*", "weight", "[", "i", "]", "\n", "", "t_loss", "=", "torch", ".", "unsqueeze", "(", "t_loss", ",", "0", ")", "\n", "if", "i", "==", "0", ":", "\n", "            ", "loss", "=", "t_loss", "\n", "", "else", ":", "\n", "            ", "loss", "=", "torch", ".", "cat", "(", "(", "loss", ",", "t_loss", ")", ",", "0", ")", "\n", "\n", "", "", "if", "size_average", ":", "\n", "        ", "return", "loss", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "loss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.landmark_loss": [[322, 337], ["range", "input.size", "torch.unsqueeze", "torch.unsqueeze", "torch.cat.mean", "torch.cat.sum", "torch.sum", "torch.sum", "torch.cat", "torch.cat"], "function", ["None"], ["", "", "def", "landmark_loss", "(", "input", ",", "target", ",", "biocular", ",", "size_average", "=", "True", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "input", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "t_input", "=", "input", "[", "i", ",", ":", "]", "\n", "t_target", "=", "target", "[", "i", ",", ":", "]", "\n", "t_loss", "=", "torch", ".", "sum", "(", "(", "t_input", "-", "t_target", ")", "**", "2", ")", "/", "(", "2.0", "*", "biocular", "[", "i", "]", ")", "\n", "t_loss", "=", "torch", ".", "unsqueeze", "(", "t_loss", ",", "0", ")", "\n", "if", "i", "==", "0", ":", "\n", "            ", "loss", "=", "t_loss", "\n", "", "else", ":", "\n", "            ", "loss", "=", "torch", ".", "cat", "(", "(", "loss", ",", "t_loss", ")", ",", "0", ")", "\n", "\n", "", "", "if", "size_average", ":", "\n", "        ", "return", "loss", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "loss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.util.attention_refine_loss": [[339, 358], ["torch.BCELoss", "input.view.view", "target.view.view", "range", "torch.cat.sum", "input.view.size", "input.view.size", "target.view.size", "target.view.size", "input.view.size", "nn.BCELoss.", "torch.unsqueeze", "torch.unsqueeze", "torch.cat", "torch.cat"], "function", ["None"], ["", "", "def", "attention_refine_loss", "(", "input", ",", "target", ",", "size_average", "=", "True", ",", "reduce", "=", "True", ")", ":", "\n", "# loss is averaged over each point in the attention map,", "\n", "# note that Eq.(4) in our ECCV paper is to sum all the points,", "\n", "# change the value of lambda_refine can remove this difference.", "\n", "    ", "classify_loss", "=", "nn", ".", "BCELoss", "(", "size_average", "=", "size_average", ",", "reduce", "=", "reduce", ")", "\n", "\n", "input", "=", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "input", ".", "size", "(", "1", ")", ",", "-", "1", ")", "\n", "target", "=", "target", ".", "view", "(", "target", ".", "size", "(", "0", ")", ",", "target", ".", "size", "(", "1", ")", ",", "-", "1", ")", "\n", "for", "i", "in", "range", "(", "input", ".", "size", "(", "1", ")", ")", ":", "\n", "        ", "t_input", "=", "input", "[", ":", ",", "i", ",", ":", "]", "\n", "t_target", "=", "target", "[", ":", ",", "i", ",", ":", "]", "\n", "t_loss", "=", "classify_loss", "(", "t_input", ",", "t_target", ")", "\n", "t_loss", "=", "torch", ".", "unsqueeze", "(", "t_loss", ",", "0", ")", "\n", "if", "i", "==", "0", ":", "\n", "            ", "loss", "=", "t_loss", "\n", "", "else", ":", "\n", "            ", "loss", "=", "torch", ".", "cat", "(", "(", "loss", ",", "t_loss", ")", ",", "0", ")", "\n", "# sum losses of all AUs", "\n", "", "", "return", "loss", ".", "sum", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.PlaceCrop.__init__": [[14, 21], ["isinstance", "int", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "start_x", ",", "start_y", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "", "self", ".", "start_x", "=", "start_x", "\n", "self", ".", "start_y", "=", "start_y", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.PlaceCrop.__call__": [[22, 31], ["img.crop"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL.Image): Image to be cropped.\n        Returns:\n            PIL.Image: Cropped image.\n        \"\"\"", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "return", "img", ".", "crop", "(", "(", "self", ".", "start_x", ",", "self", ".", "start_y", ",", "self", ".", "start_x", "+", "tw", ",", "self", ".", "start_y", "+", "th", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.SetFlip.__init__": [[35, 37], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "flip", ")", ":", "\n", "        ", "self", ".", "flip", "=", "flip", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.SetFlip.__call__": [[38, 48], ["img.transpose.transpose.transpose"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL.Image): Image to be flipped.\n        Returns:\n            PIL.Image: Randomly flipped image.\n        \"\"\"", "\n", "if", "self", ".", "flip", ":", "\n", "            ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.land_transform.__init__": [[51, 54], ["flip_reflect.astype"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_size", ",", "flip_reflect", ")", ":", "\n", "        ", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "flip_reflect", "=", "flip_reflect", ".", "astype", "(", "int", ")", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.land_transform.__call__": [[55, 65], ["len", "len", "len", "len", "len", "len", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "land", ",", "flip", ",", "offset_x", ",", "offset_y", ")", ":", "\n", "        ", "land", "[", "0", ":", "len", "(", "land", ")", ":", "2", "]", "=", "land", "[", "0", ":", "len", "(", "land", ")", ":", "2", "]", "-", "offset_x", "\n", "land", "[", "1", ":", "len", "(", "land", ")", ":", "2", "]", "=", "land", "[", "1", ":", "len", "(", "land", ")", ":", "2", "]", "-", "offset_y", "\n", "# change the landmark orders when flipping", "\n", "if", "flip", ":", "\n", "            ", "land", "[", "0", ":", "len", "(", "land", ")", ":", "2", "]", "=", "self", ".", "img_size", "-", "1", "-", "land", "[", "0", ":", "len", "(", "land", ")", ":", "2", "]", "\n", "land", "[", "0", ":", "len", "(", "land", ")", ":", "2", "]", "=", "land", "[", "0", ":", "len", "(", "land", ")", ":", "2", "]", "[", "self", ".", "flip_reflect", "]", "\n", "land", "[", "1", ":", "len", "(", "land", ")", ":", "2", "]", "=", "land", "[", "1", ":", "len", "(", "land", ")", ":", "2", "]", "[", "self", ".", "flip_reflect", "]", "\n", "\n", "", "return", "land", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__init__": [[68, 70], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "crop_size", ")", ":", "\n", "        ", "self", ".", "crop_size", "=", "crop_size", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_train.__call__": [[71, 82], ["torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Compose.", "pre_process.PlaceCrop", "pre_process.SetFlip", "torchvision.transforms.ToTensor"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "flip", ",", "offset_x", ",", "offset_y", ")", ":", "\n", "        ", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "\n", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "PlaceCrop", "(", "self", ".", "crop_size", ",", "offset_x", ",", "offset_y", ")", ",", "\n", "SetFlip", "(", "flip", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "img", "=", "transform", "(", "img", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.None.pre_process.image_test": [[84, 92], ["torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor"], "function", ["None"], ["", "", "def", "image_test", "(", "crop_size", "=", "176", ")", ":", "\n", "    ", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "\n", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "\n", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "CenterCrop", "(", "crop_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", ""]], "home.repos.pwc.inspect_result.ZhiwenShao_PyTorch-JAANet.dataset.face_transform.align_face_49pts": [[7, 49], ["math.sqrt", "numpy.mat", "numpy.mat", "numpy.mat", "cv2.warpAffine", "numpy.ones", "numpy.reshape", "numpy.mat", "numpy.array", "numpy.reshape", "float", "float", "float", "float", "numpy.array", "len", "float", "float", "int", "int", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "max", "min", "len", "len"], "function", ["None"], ["def", "align_face_49pts", "(", "img", ",", "img_land", ",", "box_enlarge", ",", "img_size", ")", ":", "\n", "    ", "leftEye0", "=", "(", "img_land", "[", "2", "*", "19", "]", "+", "img_land", "[", "2", "*", "20", "]", "+", "img_land", "[", "2", "*", "21", "]", "+", "img_land", "[", "2", "*", "22", "]", "+", "img_land", "[", "2", "*", "23", "]", "+", "\n", "img_land", "[", "2", "*", "24", "]", ")", "/", "6.0", "\n", "leftEye1", "=", "(", "img_land", "[", "2", "*", "19", "+", "1", "]", "+", "img_land", "[", "2", "*", "20", "+", "1", "]", "+", "img_land", "[", "2", "*", "21", "+", "1", "]", "+", "img_land", "[", "2", "*", "22", "+", "1", "]", "+", "\n", "img_land", "[", "2", "*", "23", "+", "1", "]", "+", "img_land", "[", "2", "*", "24", "+", "1", "]", ")", "/", "6.0", "\n", "rightEye0", "=", "(", "img_land", "[", "2", "*", "25", "]", "+", "img_land", "[", "2", "*", "26", "]", "+", "img_land", "[", "2", "*", "27", "]", "+", "img_land", "[", "2", "*", "28", "]", "+", "img_land", "[", "2", "*", "29", "]", "+", "\n", "img_land", "[", "2", "*", "30", "]", ")", "/", "6.0", "\n", "rightEye1", "=", "(", "img_land", "[", "2", "*", "25", "+", "1", "]", "+", "img_land", "[", "2", "*", "26", "+", "1", "]", "+", "img_land", "[", "2", "*", "27", "+", "1", "]", "+", "img_land", "[", "2", "*", "28", "+", "1", "]", "+", "\n", "img_land", "[", "2", "*", "29", "+", "1", "]", "+", "img_land", "[", "2", "*", "30", "+", "1", "]", ")", "/", "6.0", "\n", "deltaX", "=", "(", "rightEye0", "-", "leftEye0", ")", "\n", "deltaY", "=", "(", "rightEye1", "-", "leftEye1", ")", "\n", "l", "=", "math", ".", "sqrt", "(", "deltaX", "*", "deltaX", "+", "deltaY", "*", "deltaY", ")", "\n", "sinVal", "=", "deltaY", "/", "l", "\n", "cosVal", "=", "deltaX", "/", "l", "\n", "mat1", "=", "np", ".", "mat", "(", "[", "[", "cosVal", ",", "sinVal", ",", "0", "]", ",", "[", "-", "sinVal", ",", "cosVal", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "\n", "mat2", "=", "np", ".", "mat", "(", "[", "[", "leftEye0", ",", "leftEye1", ",", "1", "]", ",", "[", "rightEye0", ",", "rightEye1", ",", "1", "]", ",", "[", "img_land", "[", "2", "*", "13", "]", ",", "img_land", "[", "2", "*", "13", "+", "1", "]", ",", "1", "]", ",", "\n", "[", "img_land", "[", "2", "*", "31", "]", ",", "img_land", "[", "2", "*", "31", "+", "1", "]", ",", "1", "]", ",", "[", "img_land", "[", "2", "*", "37", "]", ",", "img_land", "[", "2", "*", "37", "+", "1", "]", ",", "1", "]", "]", ")", "\n", "\n", "mat2", "=", "(", "mat1", "*", "mat2", ".", "T", ")", ".", "T", "\n", "\n", "cx", "=", "float", "(", "(", "max", "(", "mat2", "[", ":", ",", "0", "]", ")", "+", "min", "(", "mat2", "[", ":", ",", "0", "]", ")", ")", ")", "*", "0.5", "\n", "cy", "=", "float", "(", "(", "max", "(", "mat2", "[", ":", ",", "1", "]", ")", "+", "min", "(", "mat2", "[", ":", ",", "1", "]", ")", ")", ")", "*", "0.5", "\n", "\n", "if", "(", "float", "(", "max", "(", "mat2", "[", ":", ",", "0", "]", ")", "-", "min", "(", "mat2", "[", ":", ",", "0", "]", ")", ")", ">", "float", "(", "max", "(", "mat2", "[", ":", ",", "1", "]", ")", "-", "min", "(", "mat2", "[", ":", ",", "1", "]", ")", ")", ")", ":", "\n", "        ", "halfSize", "=", "0.5", "*", "box_enlarge", "*", "float", "(", "(", "max", "(", "mat2", "[", ":", ",", "0", "]", ")", "-", "min", "(", "mat2", "[", ":", ",", "0", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "halfSize", "=", "0.5", "*", "box_enlarge", "*", "float", "(", "(", "max", "(", "mat2", "[", ":", ",", "1", "]", ")", "-", "min", "(", "mat2", "[", ":", ",", "1", "]", ")", ")", ")", "\n", "\n", "", "scale", "=", "(", "img_size", "-", "1", ")", "/", "2.0", "/", "halfSize", "\n", "mat3", "=", "np", ".", "mat", "(", "[", "[", "scale", ",", "0", ",", "scale", "*", "(", "halfSize", "-", "cx", ")", "]", ",", "[", "0", ",", "scale", ",", "scale", "*", "(", "halfSize", "-", "cy", ")", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "mat", "=", "mat3", "*", "mat1", "\n", "\n", "aligned_img", "=", "cv2", ".", "warpAffine", "(", "img", ",", "mat", "[", "0", ":", "2", ",", ":", "]", ",", "(", "img_size", ",", "img_size", ")", ",", "cv2", ".", "INTER_LINEAR", ",", "borderValue", "=", "(", "128", ",", "128", ",", "128", ")", ")", "\n", "\n", "land_3d", "=", "np", ".", "ones", "(", "(", "int", "(", "len", "(", "img_land", ")", "/", "2", ")", ",", "3", ")", ")", "\n", "land_3d", "[", ":", ",", "0", ":", "2", "]", "=", "np", ".", "reshape", "(", "np", ".", "array", "(", "img_land", ")", ",", "(", "int", "(", "len", "(", "img_land", ")", "/", "2", ")", ",", "2", ")", ")", "\n", "mat_land_3d", "=", "np", ".", "mat", "(", "land_3d", ")", "\n", "new_land", "=", "np", ".", "array", "(", "(", "mat", "*", "mat_land_3d", ".", "T", ")", ".", "T", ")", "\n", "new_land", "=", "np", ".", "reshape", "(", "new_land", "[", ":", ",", "0", ":", "2", "]", ",", "len", "(", "img_land", ")", ")", "\n", "\n", "return", "aligned_img", ",", "new_land", "\n", "\n"]]}