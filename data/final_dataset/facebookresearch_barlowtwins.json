{"home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.BarlowTwins.__init__": [[188, 206], ["torch.nn.Module.__init__", "torchvision.models.resnet50", "torchvision.models.resnet50", "torchvision.models.resnet50", "torchvision.models.resnet50", "torch.nn.Identity", "range", "layers.append", "torch.nn.Sequential", "torch.nn.BatchNorm1d", "list", "layers.append", "layers.append", "layers.append", "torch.nn.Linear", "map", "len", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "args.projector.split"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.AverageMeter.__init__", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.hubconf.resnet50", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.hubconf.resnet50", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.hubconf.resnet50", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.hubconf.resnet50"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "backbone", "=", "torchvision", ".", "models", ".", "resnet50", "(", "zero_init_residual", "=", "True", ")", "\n", "self", ".", "backbone", ".", "fc", "=", "nn", ".", "Identity", "(", ")", "\n", "\n", "# projector", "\n", "sizes", "=", "[", "2048", "]", "+", "list", "(", "map", "(", "int", ",", "args", ".", "projector", ".", "split", "(", "'-'", ")", ")", ")", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "sizes", ")", "-", "2", ")", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "sizes", "[", "i", "]", ",", "sizes", "[", "i", "+", "1", "]", ",", "bias", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm1d", "(", "sizes", "[", "i", "+", "1", "]", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "sizes", "[", "-", "2", "]", ",", "sizes", "[", "-", "1", "]", ",", "bias", "=", "False", ")", ")", "\n", "self", ".", "projector", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "# normalization layer for the representations z1 and z2", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "sizes", "[", "-", "1", "]", ",", "affine", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.BarlowTwins.forward": [[207, 222], ["main.BarlowTwins.projector", "main.BarlowTwins.projector", "c.div_", "torch.distributed.all_reduce", "torch.diagonal().add_().pow_().sum", "off_diagonal().pow_().sum", "main.BarlowTwins.backbone", "main.BarlowTwins.backbone", "main.BarlowTwins.bn", "main.BarlowTwins.bn", "torch.diagonal().add_().pow_", "off_diagonal().pow_", "torch.diagonal().add_", "main.off_diagonal", "torch.diagonal"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.off_diagonal"], ["", "def", "forward", "(", "self", ",", "y1", ",", "y2", ")", ":", "\n", "        ", "z1", "=", "self", ".", "projector", "(", "self", ".", "backbone", "(", "y1", ")", ")", "\n", "z2", "=", "self", ".", "projector", "(", "self", ".", "backbone", "(", "y2", ")", ")", "\n", "\n", "# empirical cross-correlation matrix", "\n", "c", "=", "self", ".", "bn", "(", "z1", ")", ".", "T", "@", "self", ".", "bn", "(", "z2", ")", "\n", "\n", "# sum the cross-correlation matrix between all gpus", "\n", "c", ".", "div_", "(", "self", ".", "args", ".", "batch_size", ")", "\n", "torch", ".", "distributed", ".", "all_reduce", "(", "c", ")", "\n", "\n", "on_diag", "=", "torch", ".", "diagonal", "(", "c", ")", ".", "add_", "(", "-", "1", ")", ".", "pow_", "(", "2", ")", ".", "sum", "(", ")", "\n", "off_diag", "=", "off_diagonal", "(", "c", ")", ".", "pow_", "(", "2", ")", ".", "sum", "(", ")", "\n", "loss", "=", "on_diag", "+", "self", ".", "args", ".", "lambd", "*", "off_diag", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.LARS.__init__": [[225, 231], ["dict", "torch.optim.Optimizer.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "lr", ",", "weight_decay", "=", "0", ",", "momentum", "=", "0.9", ",", "eta", "=", "0.001", ",", "\n", "weight_decay_filter", "=", "False", ",", "lars_adaptation_filter", "=", "False", ")", ":", "\n", "        ", "defaults", "=", "dict", "(", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", ",", "momentum", "=", "momentum", ",", "\n", "eta", "=", "eta", ",", "weight_decay_filter", "=", "weight_decay_filter", ",", "\n", "lars_adaptation_filter", "=", "lars_adaptation_filter", ")", "\n", "super", "(", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.LARS.exclude_bias_and_norm": [[233, 235], ["None"], "methods", ["None"], ["", "def", "exclude_bias_and_norm", "(", "self", ",", "p", ")", ":", "\n", "        ", "return", "p", ".", "ndim", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.LARS.step": [[236, 264], ["torch.no_grad", "mu.mul_().add_", "p.add_", "dp.mul.mul.add", "torch.norm", "torch.norm", "torch.ones_like", "torch.where", "dp.mul.mul.mul", "torch.zeros_like", "main.LARS.exclude_bias_and_norm", "main.LARS.exclude_bias_and_norm", "torch.where", "mu.mul_"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.LARS.exclude_bias_and_norm", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.LARS.exclude_bias_and_norm"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "step", "(", "self", ")", ":", "\n", "        ", "for", "g", "in", "self", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "g", "[", "'params'", "]", ":", "\n", "                ", "dp", "=", "p", ".", "grad", "\n", "\n", "if", "dp", "is", "None", ":", "\n", "                    ", "continue", "\n", "\n", "", "if", "not", "g", "[", "'weight_decay_filter'", "]", "or", "not", "self", ".", "exclude_bias_and_norm", "(", "p", ")", ":", "\n", "                    ", "dp", "=", "dp", ".", "add", "(", "p", ",", "alpha", "=", "g", "[", "'weight_decay'", "]", ")", "\n", "\n", "", "if", "not", "g", "[", "'lars_adaptation_filter'", "]", "or", "not", "self", ".", "exclude_bias_and_norm", "(", "p", ")", ":", "\n", "                    ", "param_norm", "=", "torch", ".", "norm", "(", "p", ")", "\n", "update_norm", "=", "torch", ".", "norm", "(", "dp", ")", "\n", "one", "=", "torch", ".", "ones_like", "(", "param_norm", ")", "\n", "q", "=", "torch", ".", "where", "(", "param_norm", ">", "0.", ",", "\n", "torch", ".", "where", "(", "update_norm", ">", "0", ",", "\n", "(", "g", "[", "'eta'", "]", "*", "param_norm", "/", "update_norm", ")", ",", "one", ")", ",", "one", ")", "\n", "dp", "=", "dp", ".", "mul", "(", "q", ")", "\n", "\n", "", "param_state", "=", "self", ".", "state", "[", "p", "]", "\n", "if", "'mu'", "not", "in", "param_state", ":", "\n", "                    ", "param_state", "[", "'mu'", "]", "=", "torch", ".", "zeros_like", "(", "p", ")", "\n", "", "mu", "=", "param_state", "[", "'mu'", "]", "\n", "mu", ".", "mul_", "(", "g", "[", "'momentum'", "]", ")", ".", "add_", "(", "dp", ")", "\n", "\n", "p", ".", "add_", "(", "mu", ",", "alpha", "=", "-", "g", "[", "'lr'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.GaussianBlur.__init__": [[268, 270], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "p", ")", ":", "\n", "        ", "self", ".", "p", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.GaussianBlur.__call__": [[271, 277], ["random.random", "img.filter", "PIL.ImageFilter.GaussianBlur", "random.random"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p", ":", "\n", "            ", "sigma", "=", "random", ".", "random", "(", ")", "*", "1.9", "+", "0.1", "\n", "return", "img", ".", "filter", "(", "ImageFilter", ".", "GaussianBlur", "(", "sigma", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.Solarization.__init__": [[280, 282], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "p", ")", ":", "\n", "        ", "self", ".", "p", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.Solarization.__call__": [[283, 288], ["random.random", "PIL.ImageOps.solarize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p", ":", "\n", "            ", "return", "ImageOps", ".", "solarize", "(", "img", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.Transform.__init__": [[291, 321], ["torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.RandomResizedCrop", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.RandomApply", "torchvision.RandomApply", "torchvision.RandomGrayscale", "torchvision.RandomGrayscale", "main.GaussianBlur", "main.Solarization", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Normalize", "torchvision.RandomResizedCrop", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.RandomApply", "torchvision.RandomApply", "torchvision.RandomGrayscale", "torchvision.RandomGrayscale", "main.GaussianBlur", "main.Solarization", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Normalize", "torchvision.ColorJitter", "torchvision.ColorJitter", "torchvision.ColorJitter", "torchvision.ColorJitter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "interpolation", "=", "Image", ".", "BICUBIC", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "\n", "[", "transforms", ".", "ColorJitter", "(", "brightness", "=", "0.4", ",", "contrast", "=", "0.4", ",", "\n", "saturation", "=", "0.2", ",", "hue", "=", "0.1", ")", "]", ",", "\n", "p", "=", "0.8", "\n", ")", ",", "\n", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", ",", "\n", "GaussianBlur", "(", "p", "=", "1.0", ")", ",", "\n", "Solarization", "(", "p", "=", "0.0", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "self", ".", "transform_prime", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "interpolation", "=", "Image", ".", "BICUBIC", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "\n", "[", "transforms", ".", "ColorJitter", "(", "brightness", "=", "0.4", ",", "contrast", "=", "0.4", ",", "\n", "saturation", "=", "0.2", ",", "hue", "=", "0.1", ")", "]", ",", "\n", "p", "=", "0.8", "\n", ")", ",", "\n", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", ",", "\n", "GaussianBlur", "(", "p", "=", "0.1", ")", ",", "\n", "Solarization", "(", "p", "=", "0.2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.Transform.__call__": [[323, 327], ["main.Transform.transform", "main.Transform.transform_prime"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "y1", "=", "self", ".", "transform", "(", "x", ")", "\n", "y2", "=", "self", ".", "transform_prime", "(", "x", ")", "\n", "return", "y1", ",", "y2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.main": [[49, 71], ["parser.parse_args", "torch.cuda.device_count", "torch.multiprocessing.spawn", "signal.signal", "signal.signal", "subprocess.check_output", "os.getenv", "cmd.split", "subprocess.check_output.decode().splitlines", "int", "int", "os.getenv", "os.getenv", "subprocess.check_output.decode"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "args", ".", "ngpus_per_node", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "if", "'SLURM_JOB_ID'", "in", "os", ".", "environ", ":", "\n", "# single-node and multi-node distributed training on SLURM cluster", "\n", "# requeue job on SLURM preemption", "\n", "        ", "signal", ".", "signal", "(", "signal", ".", "SIGUSR1", ",", "handle_sigusr1", ")", "\n", "signal", ".", "signal", "(", "signal", ".", "SIGTERM", ",", "handle_sigterm", ")", "\n", "# find a common host name on all nodes", "\n", "# assume scontrol returns hosts in the same order on all nodes", "\n", "cmd", "=", "'scontrol show hostnames '", "+", "os", ".", "getenv", "(", "'SLURM_JOB_NODELIST'", ")", "\n", "stdout", "=", "subprocess", ".", "check_output", "(", "cmd", ".", "split", "(", ")", ")", "\n", "host_name", "=", "stdout", ".", "decode", "(", ")", ".", "splitlines", "(", ")", "[", "0", "]", "\n", "args", ".", "rank", "=", "int", "(", "os", ".", "getenv", "(", "'SLURM_NODEID'", ")", ")", "*", "args", ".", "ngpus_per_node", "\n", "args", ".", "world_size", "=", "int", "(", "os", ".", "getenv", "(", "'SLURM_NNODES'", ")", ")", "*", "args", ".", "ngpus_per_node", "\n", "args", ".", "dist_url", "=", "f'tcp://{host_name}:58472'", "\n", "", "else", ":", "\n", "# single-node distributed training", "\n", "        ", "args", ".", "rank", "=", "0", "\n", "args", ".", "dist_url", "=", "'tcp://localhost:58472'", "\n", "args", ".", "world_size", "=", "args", ".", "ngpus_per_node", "\n", "", "torch", ".", "multiprocessing", ".", "spawn", "(", "main_worker", ",", "(", "args", ",", ")", ",", "args", ".", "ngpus_per_node", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.main_worker": [[73, 153], ["torch.distributed.init_process_group", "torch.cuda.set_device", "BarlowTwins().cuda", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.nn.parallel.DistributedDataParallel", "main.LARS", "torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "time.time", "torch.cuda.amp.GradScaler", "range", "args.checkpoint_dir.mkdir", "open", "print", "print", "torch.load", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "LARS.load_state_dict", "main.Transform", "torch.utils.data.distributed.DistributedSampler.set_epoch", "enumerate", "torch.save", "main.BarlowTwins", "param_biases.append", "param_weights.append", "y1.cuda.cuda", "y2.cuda.cuda", "main.adjust_learning_rate", "LARS.zero_grad", "torch.cuda.amp.GradScaler.scale().backward", "torch.cuda.amp.GradScaler.step", "torch.cuda.amp.GradScaler.update", "dict", "torch.save", "torch.nn.parallel.DistributedDataParallel.module.backbone.state_dict", "torch.cuda.amp.autocast", "torch.nn.parallel.DistributedDataParallel.forward", "len", "torch.cuda.amp.GradScaler.scale", "dict", "print", "print", "torch.nn.parallel.DistributedDataParallel.state_dict", "LARS.state_dict", "json.dumps", "json.dumps", "model.forward.item", "int", "time.time"], "function", ["home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.adjust_learning_rate", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.LARS.step", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.BarlowTwins.forward"], ["", "def", "main_worker", "(", "gpu", ",", "args", ")", ":", "\n", "    ", "args", ".", "rank", "+=", "gpu", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "\n", "backend", "=", "'nccl'", ",", "init_method", "=", "args", ".", "dist_url", ",", "\n", "world_size", "=", "args", ".", "world_size", ",", "rank", "=", "args", ".", "rank", ")", "\n", "\n", "if", "args", ".", "rank", "==", "0", ":", "\n", "        ", "args", ".", "checkpoint_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "stats_file", "=", "open", "(", "args", ".", "checkpoint_dir", "/", "'stats.txt'", ",", "'a'", ",", "buffering", "=", "1", ")", "\n", "print", "(", "' '", ".", "join", "(", "sys", ".", "argv", ")", ")", "\n", "print", "(", "' '", ".", "join", "(", "sys", ".", "argv", ")", ",", "file", "=", "stats_file", ")", "\n", "\n", "", "torch", ".", "cuda", ".", "set_device", "(", "gpu", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "model", "=", "BarlowTwins", "(", "args", ")", ".", "cuda", "(", "gpu", ")", "\n", "model", "=", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "model", ")", "\n", "param_weights", "=", "[", "]", "\n", "param_biases", "=", "[", "]", "\n", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "if", "param", ".", "ndim", "==", "1", ":", "\n", "            ", "param_biases", ".", "append", "(", "param", ")", "\n", "", "else", ":", "\n", "            ", "param_weights", ".", "append", "(", "param", ")", "\n", "", "", "parameters", "=", "[", "{", "'params'", ":", "param_weights", "}", ",", "{", "'params'", ":", "param_biases", "}", "]", "\n", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "model", ",", "device_ids", "=", "[", "gpu", "]", ")", "\n", "optimizer", "=", "LARS", "(", "parameters", ",", "lr", "=", "0", ",", "weight_decay", "=", "args", ".", "weight_decay", ",", "\n", "weight_decay_filter", "=", "True", ",", "\n", "lars_adaptation_filter", "=", "True", ")", "\n", "\n", "# automatically resume from checkpoint if it exists", "\n", "if", "(", "args", ".", "checkpoint_dir", "/", "'checkpoint.pth'", ")", ".", "is_file", "(", ")", ":", "\n", "        ", "ckpt", "=", "torch", ".", "load", "(", "args", ".", "checkpoint_dir", "/", "'checkpoint.pth'", ",", "\n", "map_location", "=", "'cpu'", ")", "\n", "start_epoch", "=", "ckpt", "[", "'epoch'", "]", "\n", "model", ".", "load_state_dict", "(", "ckpt", "[", "'model'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer'", "]", ")", "\n", "", "else", ":", "\n", "        ", "start_epoch", "=", "0", "\n", "\n", "", "dataset", "=", "torchvision", ".", "datasets", ".", "ImageFolder", "(", "args", ".", "data", "/", "'train'", ",", "Transform", "(", ")", ")", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "dataset", ")", "\n", "assert", "args", ".", "batch_size", "%", "args", ".", "world_size", "==", "0", "\n", "per_device_batch_size", "=", "args", ".", "batch_size", "//", "args", ".", "world_size", "\n", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "per_device_batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "\n", "pin_memory", "=", "True", ",", "sampler", "=", "sampler", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "scaler", "=", "torch", ".", "cuda", ".", "amp", ".", "GradScaler", "(", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "        ", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "for", "step", ",", "(", "(", "y1", ",", "y2", ")", ",", "_", ")", "in", "enumerate", "(", "loader", ",", "start", "=", "epoch", "*", "len", "(", "loader", ")", ")", ":", "\n", "            ", "y1", "=", "y1", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "y2", "=", "y2", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "adjust_learning_rate", "(", "args", ",", "optimizer", ",", "loader", ",", "step", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "with", "torch", ".", "cuda", ".", "amp", ".", "autocast", "(", ")", ":", "\n", "                ", "loss", "=", "model", ".", "forward", "(", "y1", ",", "y2", ")", "\n", "", "scaler", ".", "scale", "(", "loss", ")", ".", "backward", "(", ")", "\n", "scaler", ".", "step", "(", "optimizer", ")", "\n", "scaler", ".", "update", "(", ")", "\n", "if", "step", "%", "args", ".", "print_freq", "==", "0", ":", "\n", "                ", "if", "args", ".", "rank", "==", "0", ":", "\n", "                    ", "stats", "=", "dict", "(", "epoch", "=", "epoch", ",", "step", "=", "step", ",", "\n", "lr_weights", "=", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "\n", "lr_biases", "=", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", ",", "\n", "loss", "=", "loss", ".", "item", "(", ")", ",", "\n", "time", "=", "int", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "print", "(", "json", ".", "dumps", "(", "stats", ")", ")", "\n", "print", "(", "json", ".", "dumps", "(", "stats", ")", ",", "file", "=", "stats_file", ")", "\n", "", "", "", "if", "args", ".", "rank", "==", "0", ":", "\n", "# save checkpoint", "\n", "            ", "state", "=", "dict", "(", "epoch", "=", "epoch", "+", "1", ",", "model", "=", "model", ".", "state_dict", "(", ")", ",", "\n", "optimizer", "=", "optimizer", ".", "state_dict", "(", ")", ")", "\n", "torch", ".", "save", "(", "state", ",", "args", ".", "checkpoint_dir", "/", "'checkpoint.pth'", ")", "\n", "", "", "if", "args", ".", "rank", "==", "0", ":", "\n", "# save final model", "\n", "        ", "torch", ".", "save", "(", "model", ".", "module", ".", "backbone", ".", "state_dict", "(", ")", ",", "\n", "args", ".", "checkpoint_dir", "/", "'resnet50.pth'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.adjust_learning_rate": [[155, 169], ["len", "len", "math.cos"], "function", ["None"], ["", "", "def", "adjust_learning_rate", "(", "args", ",", "optimizer", ",", "loader", ",", "step", ")", ":", "\n", "    ", "max_steps", "=", "args", ".", "epochs", "*", "len", "(", "loader", ")", "\n", "warmup_steps", "=", "10", "*", "len", "(", "loader", ")", "\n", "base_lr", "=", "args", ".", "batch_size", "/", "256", "\n", "if", "step", "<", "warmup_steps", ":", "\n", "        ", "lr", "=", "base_lr", "*", "step", "/", "warmup_steps", "\n", "", "else", ":", "\n", "        ", "step", "-=", "warmup_steps", "\n", "max_steps", "-=", "warmup_steps", "\n", "q", "=", "0.5", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "step", "/", "max_steps", ")", ")", "\n", "end_lr", "=", "base_lr", "*", "0.001", "\n", "lr", "=", "base_lr", "*", "q", "+", "end_lr", "*", "(", "1", "-", "q", ")", "\n", "", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "lr", "*", "args", ".", "learning_rate_weights", "\n", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", "=", "lr", "*", "args", ".", "learning_rate_biases", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.handle_sigusr1": [[171, 174], ["os.system", "exit", "os.getenv"], "function", ["None"], ["", "def", "handle_sigusr1", "(", "signum", ",", "frame", ")", ":", "\n", "    ", "os", ".", "system", "(", "f'scontrol requeue {os.getenv(\"SLURM_JOB_ID\")}'", ")", "\n", "exit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.handle_sigterm": [[176, 178], ["None"], "function", ["None"], ["", "def", "handle_sigterm", "(", "signum", ",", "frame", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.off_diagonal": [[180, 185], ["[].flatten", "[].view", "x.flatten"], "function", ["None"], ["", "def", "off_diagonal", "(", "x", ")", ":", "\n", "# return a flattened view of the off-diagonal elements of a square matrix", "\n", "    ", "n", ",", "m", "=", "x", ".", "shape", "\n", "assert", "n", "==", "m", "\n", "return", "x", ".", "flatten", "(", ")", "[", ":", "-", "1", "]", ".", "view", "(", "n", "-", "1", ",", "n", "+", "1", ")", "[", ":", ",", "1", ":", "]", ".", "flatten", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.AverageMeter.__init__": [[222, 226], ["evaluate.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "':f'", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.AverageMeter.reset": [[227, 232], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.AverageMeter.update": [[233, 238], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.AverageMeter.__str__": [[239, 242], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "'{name} {val'", "+", "self", ".", "fmt", "+", "'} ({avg'", "+", "self", ".", "fmt", "+", "'})'", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.main": [[51, 64], ["parser.parse_args", "torch.cuda.device_count", "torch.multiprocessing.spawn", "urllib.request.urlopen().readlines", "signal.signal", "signal.signal", "random.randrange", "urllib.request.urlopen"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "args", ".", "train_percent", "in", "{", "1", ",", "10", "}", ":", "\n", "        ", "args", ".", "train_files", "=", "urllib", ".", "request", ".", "urlopen", "(", "f'https://raw.githubusercontent.com/google-research/simclr/master/imagenet_subsets/{args.train_percent}percent.txt'", ")", ".", "readlines", "(", ")", "\n", "", "args", ".", "ngpus_per_node", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "if", "'SLURM_JOB_ID'", "in", "os", ".", "environ", ":", "\n", "        ", "signal", ".", "signal", "(", "signal", ".", "SIGUSR1", ",", "handle_sigusr1", ")", "\n", "signal", ".", "signal", "(", "signal", ".", "SIGTERM", ",", "handle_sigterm", ")", "\n", "# single-node distributed training", "\n", "", "args", ".", "rank", "=", "0", "\n", "args", ".", "dist_url", "=", "f'tcp://localhost:{random.randrange(49152, 65535)}'", "\n", "args", ".", "world_size", "=", "args", ".", "ngpus_per_node", "\n", "torch", ".", "multiprocessing", ".", "spawn", "(", "main_worker", ",", "(", "args", ",", ")", ",", "args", ".", "ngpus_per_node", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.main_worker": [[66, 209], ["torch.distributed.init_process_group", "torch.cuda.set_device", "torchvision.models.resnet50().cuda", "torch.load", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "torch.nn.parallel.DistributedDataParallel.fc.weight.data.normal_", "torch.nn.parallel.DistributedDataParallel.fc.bias.data.zero_", "torch.nn.parallel.DistributedDataParallel.named_parameters", "torch.nn.parallel.DistributedDataParallel", "torch.nn.CrossEntropyLoss().cuda", "torch.optim.SGD", "torch.optim.lr_scheduler.CosineAnnealingLR", "torchvision.transforms.Normalize", "torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "torch.utils.data.distributed.DistributedSampler", "dict", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "time.time", "range", "args.checkpoint_dir.mkdir", "open", "print", "print", "torch.nn.parallel.DistributedDataParallel.requires_grad_", "torch.nn.parallel.DistributedDataParallel.fc.requires_grad_", "dict", "param_groups.append", "torch.load", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "optim.SGD.load_state_dict", "optim.lr_scheduler.CosineAnnealingLR.load_state_dict", "argparse.Namespace", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torch.utils.data.distributed.DistributedSampler.set_epoch", "enumerate", "torch.nn.parallel.DistributedDataParallel.eval", "optim.lr_scheduler.CosineAnnealingLR.step", "torchvision.models.resnet50", "classifier_parameters.append", "model_parameters.append", "torch.nn.CrossEntropyLoss", "dict", "fname.decode().strip.decode().strip", "datasets.ImageFolder.samples.append", "torch.nn.parallel.DistributedDataParallel.train", "torch.nn.parallel.DistributedDataParallel.", "nn.CrossEntropyLoss().cuda.", "optim.SGD.zero_grad", "criterion.backward", "optim.SGD.step", "evaluate.AverageMeter", "evaluate.AverageMeter", "max", "max", "dict", "print", "print", "torch.load", "torch.nn.parallel.DistributedDataParallel.module.state_dict", "dict", "torch.save", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "fname.decode().strip.split", "torch.nn.parallel.DistributedDataParallel.eval", "images.cuda", "target.cuda", "torch.distributed.reduce", "torch.no_grad", "json.dumps", "json.dumps", "torch.equal", "fname.decode().strip.decode", "len", "criterion.div_", "dict", "print", "print", "torch.nn.parallel.DistributedDataParallel.", "evaluate.accuracy", "evaluate.AverageMeter.update", "evaluate.AverageMeter.update", "model_state_dict[].cpu", "torch.nn.parallel.DistributedDataParallel.state_dict", "optim.SGD.state_dict", "optim.lr_scheduler.CosineAnnealingLR.state_dict", "json.dumps", "json.dumps", "images.cuda", "target.cuda", "acc1[].item", "images.size", "acc5[].item", "images.size", "len", "criterion.item", "int", "time.time"], "function", ["home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.LARS.step", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.hubconf.resnet50", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.main.LARS.step", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.accuracy", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.AverageMeter.update"], ["", "def", "main_worker", "(", "gpu", ",", "args", ")", ":", "\n", "    ", "args", ".", "rank", "+=", "gpu", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "\n", "backend", "=", "'nccl'", ",", "init_method", "=", "args", ".", "dist_url", ",", "\n", "world_size", "=", "args", ".", "world_size", ",", "rank", "=", "args", ".", "rank", ")", "\n", "\n", "if", "args", ".", "rank", "==", "0", ":", "\n", "        ", "args", ".", "checkpoint_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "stats_file", "=", "open", "(", "args", ".", "checkpoint_dir", "/", "'stats.txt'", ",", "'a'", ",", "buffering", "=", "1", ")", "\n", "print", "(", "' '", ".", "join", "(", "sys", ".", "argv", ")", ")", "\n", "print", "(", "' '", ".", "join", "(", "sys", ".", "argv", ")", ",", "file", "=", "stats_file", ")", "\n", "\n", "", "torch", ".", "cuda", ".", "set_device", "(", "gpu", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "model", "=", "models", ".", "resnet50", "(", ")", ".", "cuda", "(", "gpu", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "pretrained", ",", "map_location", "=", "'cpu'", ")", "\n", "missing_keys", ",", "unexpected_keys", "=", "model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "assert", "missing_keys", "==", "[", "'fc.weight'", ",", "'fc.bias'", "]", "and", "unexpected_keys", "==", "[", "]", "\n", "model", ".", "fc", ".", "weight", ".", "data", ".", "normal_", "(", "mean", "=", "0.0", ",", "std", "=", "0.01", ")", "\n", "model", ".", "fc", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "if", "args", ".", "weights", "==", "'freeze'", ":", "\n", "        ", "model", ".", "requires_grad_", "(", "False", ")", "\n", "model", ".", "fc", ".", "requires_grad_", "(", "True", ")", "\n", "", "classifier_parameters", ",", "model_parameters", "=", "[", "]", ",", "[", "]", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "name", "in", "{", "'fc.weight'", ",", "'fc.bias'", "}", ":", "\n", "            ", "classifier_parameters", ".", "append", "(", "param", ")", "\n", "", "else", ":", "\n", "            ", "model_parameters", ".", "append", "(", "param", ")", "\n", "", "", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "model", ",", "device_ids", "=", "[", "gpu", "]", ")", "\n", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", "gpu", ")", "\n", "\n", "param_groups", "=", "[", "dict", "(", "params", "=", "classifier_parameters", ",", "lr", "=", "args", ".", "lr_classifier", ")", "]", "\n", "if", "args", ".", "weights", "==", "'finetune'", ":", "\n", "        ", "param_groups", ".", "append", "(", "dict", "(", "params", "=", "model_parameters", ",", "lr", "=", "args", ".", "lr_backbone", ")", ")", "\n", "", "optimizer", "=", "optim", ".", "SGD", "(", "param_groups", ",", "0", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "optimizer", ",", "args", ".", "epochs", ")", "\n", "\n", "# automatically resume from checkpoint if it exists", "\n", "if", "(", "args", ".", "checkpoint_dir", "/", "'checkpoint.pth'", ")", ".", "is_file", "(", ")", ":", "\n", "        ", "ckpt", "=", "torch", ".", "load", "(", "args", ".", "checkpoint_dir", "/", "'checkpoint.pth'", ",", "\n", "map_location", "=", "'cpu'", ")", "\n", "start_epoch", "=", "ckpt", "[", "'epoch'", "]", "\n", "best_acc", "=", "ckpt", "[", "'best_acc'", "]", "\n", "model", ".", "load_state_dict", "(", "ckpt", "[", "'model'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer'", "]", ")", "\n", "scheduler", ".", "load_state_dict", "(", "ckpt", "[", "'scheduler'", "]", ")", "\n", "", "else", ":", "\n", "        ", "start_epoch", "=", "0", "\n", "best_acc", "=", "argparse", ".", "Namespace", "(", "top1", "=", "0", ",", "top5", "=", "0", ")", "\n", "\n", "# Data loading code", "\n", "", "traindir", "=", "args", ".", "data", "/", "'train'", "\n", "valdir", "=", "args", ".", "data", "/", "'val'", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "train_dataset", "=", "datasets", ".", "ImageFolder", "(", "traindir", ",", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "val_dataset", "=", "datasets", ".", "ImageFolder", "(", "valdir", ",", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", ")", "\n", "\n", "if", "args", ".", "train_percent", "in", "{", "1", ",", "10", "}", ":", "\n", "        ", "train_dataset", ".", "samples", "=", "[", "]", "\n", "for", "fname", "in", "args", ".", "train_files", ":", "\n", "            ", "fname", "=", "fname", ".", "decode", "(", ")", ".", "strip", "(", ")", "\n", "cls", "=", "fname", ".", "split", "(", "'_'", ")", "[", "0", "]", "\n", "train_dataset", ".", "samples", ".", "append", "(", "\n", "(", "traindir", "/", "cls", "/", "fname", ",", "train_dataset", ".", "class_to_idx", "[", "cls", "]", ")", ")", "\n", "\n", "", "", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "train_dataset", ")", "\n", "kwargs", "=", "dict", "(", "batch_size", "=", "args", ".", "batch_size", "//", "args", ".", "world_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "sampler", "=", "train_sampler", ",", "**", "kwargs", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_dataset", ",", "**", "kwargs", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "# train", "\n", "        ", "if", "args", ".", "weights", "==", "'finetune'", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "", "elif", "args", ".", "weights", "==", "'freeze'", ":", "\n", "            ", "model", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", "\n", "", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "for", "step", ",", "(", "images", ",", "target", ")", "in", "enumerate", "(", "train_loader", ",", "start", "=", "epoch", "*", "len", "(", "train_loader", ")", ")", ":", "\n", "            ", "output", "=", "model", "(", "images", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "target", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "if", "step", "%", "args", ".", "print_freq", "==", "0", ":", "\n", "                ", "torch", ".", "distributed", ".", "reduce", "(", "loss", ".", "div_", "(", "args", ".", "world_size", ")", ",", "0", ")", "\n", "if", "args", ".", "rank", "==", "0", ":", "\n", "                    ", "pg", "=", "optimizer", ".", "param_groups", "\n", "lr_classifier", "=", "pg", "[", "0", "]", "[", "'lr'", "]", "\n", "lr_backbone", "=", "pg", "[", "1", "]", "[", "'lr'", "]", "if", "len", "(", "pg", ")", "==", "2", "else", "0", "\n", "stats", "=", "dict", "(", "epoch", "=", "epoch", ",", "step", "=", "step", ",", "lr_backbone", "=", "lr_backbone", ",", "\n", "lr_classifier", "=", "lr_classifier", ",", "loss", "=", "loss", ".", "item", "(", ")", ",", "\n", "time", "=", "int", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "print", "(", "json", ".", "dumps", "(", "stats", ")", ")", "\n", "print", "(", "json", ".", "dumps", "(", "stats", ")", ",", "file", "=", "stats_file", ")", "\n", "\n", "# evaluate", "\n", "", "", "", "model", ".", "eval", "(", ")", "\n", "if", "args", ".", "rank", "==", "0", ":", "\n", "            ", "top1", "=", "AverageMeter", "(", "'Acc@1'", ")", "\n", "top5", "=", "AverageMeter", "(", "'Acc@5'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "images", ",", "target", "in", "val_loader", ":", "\n", "                    ", "output", "=", "model", "(", "images", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", ")", "\n", "acc1", ",", "acc5", "=", "accuracy", "(", "output", ",", "target", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ".", "item", "(", ")", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "acc5", "[", "0", "]", ".", "item", "(", ")", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "", "", "best_acc", ".", "top1", "=", "max", "(", "best_acc", ".", "top1", ",", "top1", ".", "avg", ")", "\n", "best_acc", ".", "top5", "=", "max", "(", "best_acc", ".", "top5", ",", "top5", ".", "avg", ")", "\n", "stats", "=", "dict", "(", "epoch", "=", "epoch", ",", "acc1", "=", "top1", ".", "avg", ",", "acc5", "=", "top5", ".", "avg", ",", "best_acc1", "=", "best_acc", ".", "top1", ",", "best_acc5", "=", "best_acc", ".", "top5", ")", "\n", "print", "(", "json", ".", "dumps", "(", "stats", ")", ")", "\n", "print", "(", "json", ".", "dumps", "(", "stats", ")", ",", "file", "=", "stats_file", ")", "\n", "\n", "# sanity check", "\n", "", "if", "args", ".", "weights", "==", "'freeze'", ":", "\n", "            ", "reference_state_dict", "=", "torch", ".", "load", "(", "args", ".", "pretrained", ",", "map_location", "=", "'cpu'", ")", "\n", "model_state_dict", "=", "model", ".", "module", ".", "state_dict", "(", ")", "\n", "for", "k", "in", "reference_state_dict", ":", "\n", "                ", "assert", "torch", ".", "equal", "(", "model_state_dict", "[", "k", "]", ".", "cpu", "(", ")", ",", "reference_state_dict", "[", "k", "]", ")", ",", "k", "\n", "\n", "", "", "scheduler", ".", "step", "(", ")", "\n", "if", "args", ".", "rank", "==", "0", ":", "\n", "            ", "state", "=", "dict", "(", "\n", "epoch", "=", "epoch", "+", "1", ",", "best_acc", "=", "best_acc", ",", "model", "=", "model", ".", "state_dict", "(", ")", ",", "\n", "optimizer", "=", "optimizer", ".", "state_dict", "(", ")", ",", "scheduler", "=", "scheduler", ".", "state_dict", "(", ")", ")", "\n", "torch", ".", "save", "(", "state", ",", "args", ".", "checkpoint_dir", "/", "'checkpoint.pth'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.handle_sigusr1": [[211, 214], ["os.system", "exit", "os.getenv"], "function", ["None"], ["", "", "", "def", "handle_sigusr1", "(", "signum", ",", "frame", ")", ":", "\n", "    ", "os", ".", "system", "(", "f'scontrol requeue {os.getenv(\"SLURM_JOB_ID\")}'", ")", "\n", "exit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.handle_sigterm": [[216, 218], ["None"], "function", ["None"], ["", "def", "handle_sigterm", "(", "signum", ",", "frame", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.evaluate.accuracy": [[244, 259], ["torch.no_grad", "max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].reshape().float().sum", "res.append", "correct[].reshape().float().sum.mul_", "target.view", "correct[].reshape().float", "correct[].reshape"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the accuracy over the k top predictions for the specified values of k\"\"\"", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "reshape", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.hubconf.resnet50": [[13, 20], ["torchvision.models.resnet.resnet50", "torch.hub.load_state_dict_from_url", "torchvision.models.resnet.resnet50.load_state_dict"], "function", ["home.repos.pwc.inspect_result.facebookresearch_barlowtwins.None.hubconf.resnet50"], ["def", "resnet50", "(", "pretrained", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "_resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "url", "=", "'https://dl.fbaipublicfiles.com/barlowtwins/ep1000_bs2048_lrw0.2_lrb0.0048_lambd0.0051/resnet50.pth'", "\n", "state_dict", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "url", ",", "map_location", "=", "'cpu'", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "", "return", "model", "\n", "", ""]]}