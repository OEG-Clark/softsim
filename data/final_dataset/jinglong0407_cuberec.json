{"home.repos.pwc.inspect_result.jinglong0407_cuberec.code.world.cprint": [[70, 72], ["print"], "function", ["None"], ["def", "cprint", "(", "words", ":", "str", ")", ":", "\n", "    ", "print", "(", "f\"\\033[0;30;43m{words}\\033[0m\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.datapre.load_dat": [[14, 25], ["numpy.array", "open", "line[].split", "int", "entries[].split", "np.array.append", "int"], "function", ["None"], ["def", "load_dat", "(", "path", ")", ":", "\n", "    ", "res", "=", "[", "]", "\n", "with", "open", "(", "path", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "entries", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "'\\t'", ")", "\n", "parent", "=", "int", "(", "entries", "[", "0", "]", ")", "\n", "children", "=", "entries", "[", "1", "]", ".", "split", "(", "','", ")", "\n", "for", "child", "in", "children", ":", "\n", "                ", "res", ".", "append", "(", "[", "parent", ",", "int", "(", "child", ")", "]", ")", "\n", "", "", "", "res", "=", "np", ".", "array", "(", "res", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.__init__": [[21, 28], ["torch.nn.Module.__init__", "model.LightGCN.__init_weight"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.__init__", "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.__init_weight"], ["    ", "def", "__init__", "(", "self", ",", "\n", "config", ":", "dict", ",", "\n", "dataset", ":", "Dataset", ")", ":", "\n", "        ", "super", "(", "LightGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "dataset", ":", "dataloader", ".", "BasicDataset", "=", "dataset", "\n", "self", ".", "__init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.__init_weight": [[29, 84], ["torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "model.LightGCN.dataset.getSparseGraph", "print", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "world.cprint", "model.LightGCN.embedding_user.weight.data.copy_", "model.LightGCN.embedding_item.weight.data.copy_", "print", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.getSparseGraph", "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.world.cprint"], ["", "def", "__init_weight", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_users", "=", "self", ".", "dataset", ".", "n_users", "\n", "self", ".", "num_items", "=", "self", ".", "dataset", ".", "m_items", "\n", "self", ".", "latent_dim", "=", "self", ".", "config", "[", "'latent_dim_rec'", "]", "\n", "self", ".", "n_layers", "=", "self", ".", "config", "[", "'lightGCN_n_layers'", "]", "\n", "self", ".", "keep_prob", "=", "self", ".", "config", "[", "'keep_prob'", "]", "\n", "self", ".", "A_split", "=", "self", ".", "config", "[", "'A_split'", "]", "\n", "self", ".", "embedding_user", "=", "torch", ".", "nn", ".", "Embedding", "(", "\n", "num_embeddings", "=", "self", ".", "num_users", ",", "embedding_dim", "=", "self", ".", "latent_dim", ")", "\n", "self", ".", "embedding_item", "=", "torch", ".", "nn", ".", "Embedding", "(", "\n", "num_embeddings", "=", "self", ".", "num_items", ",", "embedding_dim", "=", "self", ".", "latent_dim", ")", "\n", "if", "self", ".", "config", "[", "'pretrain'", "]", "==", "0", ":", "\n", "            ", "nn", ".", "init", ".", "normal_", "(", "self", ".", "embedding_user", ".", "weight", ",", "std", "=", "0.1", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "embedding_item", ".", "weight", ",", "std", "=", "0.1", ")", "\n", "world", ".", "cprint", "(", "'use NORMAL distribution initilizer'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "embedding_user", ".", "weight", ".", "data", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "self", ".", "config", "[", "'user_emb'", "]", ")", ")", "\n", "self", ".", "embedding_item", ".", "weight", ".", "data", ".", "copy_", "(", "torch", ".", "from_numpy", "(", "self", ".", "config", "[", "'item_emb'", "]", ")", ")", "\n", "print", "(", "'use pretarined data'", ")", "\n", "", "self", ".", "f", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph", "(", ")", "\n", "print", "(", "f\"lgn is already to go(dropout:{self.config['dropout']})\"", ")", "\n", "\n", "\n", "# group layers", "\n", "if", "world", ".", "group_rep", "==", "'geometric'", ":", "\n", "            ", "self", ".", "wc", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "wo", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "False", ")", "\n", "", "elif", "world", ".", "group_rep", "==", "'attentive'", ":", "\n", "            ", "self", ".", "wc", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "wo", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "True", ")", "\n", "self", ".", "act_relu", "=", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "query", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "key", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "value", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "False", ")", "\n", "", "self", ".", "centers", "=", "None", "\n", "self", ".", "offsets", "=", "None", "\n", "\n", "# parameters for interactions", "\n", "self", ".", "phi", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", "\n", ")", "\n", "# psi MLP", "\n", "self", ".", "psi", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "latent_dim", ",", "self", ".", "latent_dim", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.__dropout_x": [[86, 96], ["x.size", "x.indices().t", "x.values", "random_index.int().bool.int().bool.int().bool", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "x.indices().t.t", "x.indices", "len", "random_index.int().bool.int().bool.int"], "methods", ["None"], ["", "def", "__dropout_x", "(", "self", ",", "x", ",", "keep_prob", ")", ":", "\n", "        ", "size", "=", "x", ".", "size", "(", ")", "\n", "index", "=", "x", ".", "indices", "(", ")", ".", "t", "(", ")", "\n", "values", "=", "x", ".", "values", "(", ")", "\n", "random_index", "=", "torch", ".", "rand", "(", "len", "(", "values", ")", ")", "+", "keep_prob", "\n", "random_index", "=", "random_index", ".", "int", "(", ")", ".", "bool", "(", ")", "\n", "index", "=", "index", "[", "random_index", "]", "\n", "values", "=", "values", "[", "random_index", "]", "/", "keep_prob", "\n", "g", "=", "torch", ".", "sparse", ".", "FloatTensor", "(", "index", ".", "t", "(", ")", ",", "values", ",", "size", ")", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.__dropout": [[97, 105], ["model.LightGCN.__dropout_x", "model.LightGCN.append", "model.LightGCN.__dropout_x"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.__dropout_x", "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.__dropout_x"], ["", "def", "__dropout", "(", "self", ",", "keep_prob", ")", ":", "\n", "        ", "if", "self", ".", "A_split", ":", "\n", "            ", "graph", "=", "[", "]", "\n", "for", "g", "in", "self", ".", "Graph", ":", "\n", "                ", "graph", ".", "append", "(", "self", ".", "__dropout_x", "(", "g", ",", "keep_prob", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "graph", "=", "self", ".", "__dropout_x", "(", "self", ".", "Graph", ",", "keep_prob", ")", "\n", "", "return", "graph", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.computer": [[106, 137], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.split", "torch.split", "torch.split", "torch.split", "torch.stack.append", "torch.stack.append", "print", "model.LightGCN.__dropout", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "len", "temp_emb.append", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.__dropout"], ["", "def", "computer", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        propagate methods for lightGCN\n        \"\"\"", "\n", "users_emb", "=", "self", ".", "embedding_user", ".", "weight", "\n", "items_emb", "=", "self", ".", "embedding_item", ".", "weight", "\n", "all_emb", "=", "torch", ".", "cat", "(", "[", "users_emb", ",", "items_emb", "]", ")", "\n", "embs", "=", "[", "all_emb", "]", "\n", "if", "self", ".", "config", "[", "'dropout'", "]", ":", "\n", "            ", "if", "self", ".", "training", ":", "\n", "                ", "print", "(", "\"droping\"", ")", "\n", "g_droped", "=", "self", ".", "__dropout", "(", "self", ".", "keep_prob", ")", "\n", "", "else", ":", "\n", "                ", "g_droped", "=", "self", ".", "Graph", "\n", "", "", "else", ":", "\n", "            ", "g_droped", "=", "self", ".", "Graph", "\n", "\n", "", "for", "layer", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "if", "self", ".", "A_split", ":", "\n", "                ", "temp_emb", "=", "[", "]", "\n", "for", "f", "in", "range", "(", "len", "(", "g_droped", ")", ")", ":", "\n", "                    ", "temp_emb", ".", "append", "(", "torch", ".", "sparse", ".", "mm", "(", "g_droped", "[", "f", "]", ",", "all_emb", ")", ")", "\n", "", "side_emb", "=", "torch", ".", "cat", "(", "temp_emb", ",", "dim", "=", "0", ")", "\n", "all_emb", "=", "side_emb", "\n", "", "else", ":", "\n", "                ", "all_emb", "=", "torch", ".", "sparse", ".", "mm", "(", "g_droped", ",", "all_emb", ")", "\n", "", "embs", ".", "append", "(", "all_emb", ")", "\n", "", "embs", "=", "torch", ".", "stack", "(", "embs", ",", "dim", "=", "1", ")", "\n", "light_out", "=", "torch", ".", "mean", "(", "embs", ",", "dim", "=", "1", ")", "\n", "users", ",", "items", "=", "torch", ".", "split", "(", "light_out", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "return", "users", ",", "items", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.getUsersRating": [[138, 144], ["model.LightGCN.computer", "model.LightGCN.f", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "users.long", "items_emb.t"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.computer"], ["", "def", "getUsersRating", "(", "self", ",", "users", ")", ":", "\n", "        ", "all_users", ",", "all_items", "=", "self", ".", "computer", "(", ")", "\n", "users_emb", "=", "all_users", "[", "users", ".", "long", "(", ")", "]", "\n", "items_emb", "=", "all_items", "\n", "rating", "=", "self", ".", "f", "(", "torch", ".", "matmul", "(", "users_emb", ",", "items_emb", ".", "t", "(", ")", ")", ")", "\n", "return", "rating", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.getEmbedding": [[145, 154], ["model.LightGCN.computer", "model.LightGCN.embedding_user", "model.LightGCN.embedding_item", "model.LightGCN.embedding_item"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.computer"], ["", "def", "getEmbedding", "(", "self", ",", "users", ",", "pos_items", ",", "neg_items", ")", ":", "\n", "        ", "all_users", ",", "all_items", "=", "self", ".", "computer", "(", ")", "\n", "users_emb", "=", "all_users", "[", "users", "]", "\n", "pos_emb", "=", "all_items", "[", "pos_items", "]", "\n", "neg_emb", "=", "all_items", "[", "neg_items", "]", "\n", "users_emb_ego", "=", "self", ".", "embedding_user", "(", "users", ")", "\n", "pos_emb_ego", "=", "self", ".", "embedding_item", "(", "pos_items", ")", "\n", "neg_emb_ego", "=", "self", ".", "embedding_item", "(", "neg_items", ")", "\n", "return", "users_emb", ",", "pos_emb", ",", "neg_emb", ",", "users_emb_ego", ",", "pos_emb_ego", ",", "neg_emb_ego", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.bpr_loss": [[155, 174], ["model.LightGCN.getEmbedding", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "users.long", "pos.long", "neg.long", "float", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.max", "torch.max", "torch.max", "torch.max", "len", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "negEmb0.norm().pow", "userEmb0.norm().pow", "posEmb0.norm().pow", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "negEmb0.norm", "userEmb0.norm", "posEmb0.norm"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.getEmbedding"], ["", "def", "bpr_loss", "(", "self", ",", "users", ",", "pos", ",", "neg", ")", ":", "\n", "        ", "(", "users_emb", ",", "pos_emb", ",", "neg_emb", ",", "\n", "userEmb0", ",", "posEmb0", ",", "negEmb0", ")", "=", "self", ".", "getEmbedding", "(", "users", ".", "long", "(", ")", ",", "pos", ".", "long", "(", ")", ",", "neg", ".", "long", "(", ")", ")", "\n", "reg_loss", "=", "(", "1", "/", "2", ")", "*", "(", "userEmb0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "\n", "posEmb0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "\n", "negEmb0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "/", "float", "(", "len", "(", "users", ")", ")", "\n", "\n", "\n", "pos_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "pos_emb", ")", "\n", "pos_scores", "=", "torch", ".", "sum", "(", "pos_scores", ",", "dim", "=", "1", ")", "\n", "neg_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "neg_emb", ")", "\n", "neg_scores", "=", "torch", ".", "sum", "(", "neg_scores", ",", "dim", "=", "1", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "neg_scores", "-", "pos_scores", ")", ")", "\n", "\n", "pos_dises", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "(", "users_emb", "-", "pos_emb", ")", "**", "2", ",", "dim", "=", "-", "1", ")", ")", "\n", "neg_dises", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "(", "users_emb", "-", "neg_emb", ")", "**", "2", ",", "dim", "=", "-", "1", ")", ")", "\n", "dis_loss", "=", "torch", ".", "mean", "(", "torch", ".", "max", "(", "-", "pos_dises", "+", "neg_dises", "+", "1", ",", "torch", ".", "zeros", "(", "pos_dises", ".", "shape", ")", ".", "to", "(", "world", ".", "device", ")", ")", ")", "\n", "\n", "return", "dis_loss", ",", "reg_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.forward": [[175, 182], ["model.LightGCN.computer", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.computer"], ["", "def", "forward", "(", "self", ",", "users", ",", "items", ")", ":", "\n", "        ", "all_users", ",", "all_items", "=", "self", ".", "computer", "(", ")", "\n", "users_emb", "=", "all_users", "[", "users", "]", "\n", "items_emb", "=", "all_items", "[", "items", "]", "\n", "inner_pro", "=", "torch", ".", "mul", "(", "users_emb", ",", "items_emb", ")", "\n", "gamma", "=", "torch", ".", "sum", "(", "inner_pro", ",", "dim", "=", "1", ")", "\n", "return", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.group_rep": [[184, 199], ["torch.empty().to", "torch.empty().to", "torch.empty().to", "torch.empty().to", "torch.empty().to", "torch.empty().to", "torch.empty().to", "torch.empty().to", "zip", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "rep", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.masked_select"], "methods", ["None"], ["", "def", "group_rep", "(", "self", ",", "members", ",", "masks", ",", "all_users", ")", ":", "\n", "        ", "centers", "=", "torch", ".", "empty", "(", "0", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "offsets", "=", "torch", ".", "empty", "(", "0", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "if", "world", ".", "group_rep", "==", "'geometric'", ":", "\n", "            ", "rep", "=", "self", ".", "geometric_rep", "\n", "", "elif", "world", ".", "group_rep", "==", "'attentive'", ":", "\n", "            ", "rep", "=", "self", ".", "attentive_rep", "\n", "", "for", "member", ",", "mask", "in", "zip", "(", "members", ",", "masks", ")", ":", "\n", "            ", "embedding_member", "=", "torch", ".", "index_select", "(", "all_users", ",", "0", ",", "torch", ".", "masked_select", "(", "member", ",", "mask", ")", ")", "\n", "center", ",", "offset", "=", "rep", "(", "embedding_member", ")", "\n", "center", "=", "torch", ".", "unsqueeze", "(", "center", ",", "dim", "=", "0", ")", "\n", "centers", "=", "torch", ".", "cat", "(", "(", "centers", ",", "center", ")", ",", "dim", "=", "0", ")", "\n", "offset", "=", "torch", ".", "unsqueeze", "(", "offset", ",", "dim", "=", "0", ")", "\n", "offsets", "=", "torch", ".", "cat", "(", "(", "offsets", ",", "offset", ")", ",", "dim", "=", "0", ")", "\n", "", "return", "(", "centers", ",", "offsets", ")", "\n", "", "def", "geometric_rep", "(", "self", ",", "embedding_member", ")", ":", "# for single group", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.geometric_rep": [[199, 205], ["model.LightGCN.wc", "model.LightGCN.wo", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min"], "methods", ["None"], ["", "def", "geometric_rep", "(", "self", ",", "embedding_member", ")", ":", "# for single group", "\n", "        ", "u_max", "=", "torch", ".", "max", "(", "embedding_member", ",", "dim", "=", "0", ")", ".", "values", "\n", "u_min", "=", "torch", ".", "min", "(", "embedding_member", ",", "dim", "=", "0", ")", ".", "values", "\n", "center", "=", "self", ".", "wc", "(", "(", "u_max", "+", "u_min", ")", "/", "2", ")", "\n", "offset", "=", "self", ".", "wo", "(", "(", "u_max", "-", "u_min", ")", "/", "2", ")", "\n", "return", "(", "center", ",", "offset", ")", "\n", "", "def", "attentive_rep", "(", "self", ",", "embedding_member", ")", ":", "# for single group", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.attentive_rep": [[205, 213], ["model.LightGCN.key", "torch.softmax", "torch.softmax", "model.LightGCN.value", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "model.LightGCN.wc", "model.LightGCN.act_relu", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "model.LightGCN.wo", "model.LightGCN.query", "math.sqrt"], "methods", ["None"], ["", "def", "attentive_rep", "(", "self", ",", "embedding_member", ")", ":", "# for single group", "\n", "        ", "key_user", "=", "self", ".", "key", "(", "embedding_member", ")", "\n", "key_user_query", "=", "F", ".", "softmax", "(", "self", ".", "query", "(", "key_user", ")", "/", "math", ".", "sqrt", "(", "self", ".", "latent_dim", ")", ",", "dim", "=", "-", "1", ")", "\n", "value_user", "=", "self", ".", "value", "(", "embedding_member", ")", "\n", "attn", "=", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "value_user", ".", "T", ",", "key_user_query", ")", ")", "\n", "center", "=", "self", ".", "wc", "(", "attn", ")", "\n", "offset", "=", "self", ".", "act_relu", "(", "self", ".", "wo", "(", "attn", ")", ")", "\n", "return", "(", "center", ",", "offset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.gi_scores": [[215, 228], ["torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.max", "torch.max", "torch.max", "torch.max", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "gi_scores", "(", "self", ",", "centers", ",", "offsets", ",", "items", ",", "all_items", ")", ":", "\n", "        ", "lower_left_s", "=", "centers", "-", "offsets", "\n", "upper_right_s", "=", "centers", "+", "offsets", "\n", "lower_left_s", "=", "torch", ".", "unsqueeze", "(", "lower_left_s", ",", "dim", "=", "1", ")", "\n", "upper_right_s", "=", "torch", ".", "unsqueeze", "(", "upper_right_s", ",", "dim", "=", "1", ")", "\n", "centers", "=", "torch", ".", "unsqueeze", "(", "centers", ",", "dim", "=", "1", ")", "\n", "embedding_items", "=", "all_items", "[", "items", "]", "\n", "dis_out", "=", "torch", ".", "max", "(", "embedding_items", "-", "upper_right_s", ",", "torch", ".", "zeros", "(", "embedding_items", ".", "shape", ")", ".", "to", "(", "world", ".", "device", ")", ")", "+", "torch", ".", "max", "(", "lower_left_s", "-", "embedding_items", ",", "torch", ".", "zeros", "(", "embedding_items", ".", "shape", ")", ".", "to", "(", "world", ".", "device", ")", ")", "\n", "dis_out", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "dis_out", "**", "2", ",", "dim", "=", "-", "1", ")", ")", "\n", "dis_in", "=", "centers", "-", "torch", ".", "min", "(", "upper_right_s", ",", "torch", ".", "max", "(", "lower_left_s", ",", "embedding_items", ")", ")", "\n", "dis_in", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "dis_in", "**", "2", ",", "dim", "=", "-", "1", ")", ")", "\n", "dises", "=", "dis_out", "+", "dis_in", "*", "0.5", "\n", "return", "dises", "\n", "", "def", "gi_loss", "(", "self", ",", "scores", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.gi_loss": [[228, 234], ["torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.max", "torch.max", "torch.max", "torch.max", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "gi_loss", "(", "self", ",", "scores", ")", ":", "\n", "        ", "pos", "=", "scores", "[", ":", ",", "0", ":", "1", "]", "\n", "neg", "=", "scores", "[", ":", ",", "1", ":", "]", "\n", "neg", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "mean", "(", "neg", ",", "dim", "=", "-", "1", ")", ",", "dim", "=", "-", "1", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "max", "(", "-", "pos", "+", "neg", "+", "1", ",", "torch", ".", "zeros", "(", "pos", ".", "shape", ")", ".", "to", "(", "world", ".", "device", ")", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.ssl_loss": [[236, 251], ["len", "torch.IntTensor().to", "torch.IntTensor().to", "torch.IntTensor().to", "torch.IntTensor().to", "torch.BoolTensor().to", "torch.BoolTensor().to", "torch.BoolTensor().to", "torch.BoolTensor().to", "torch.IntTensor().to", "torch.IntTensor().to", "torch.IntTensor().to", "torch.IntTensor().to", "torch.BoolTensor().to", "torch.BoolTensor().to", "torch.BoolTensor().to", "torch.BoolTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "model.LightGCN.group_rep", "model.LightGCN.group_rep", "model.LightGCN.interactions", "model.LightGCN.gi_scores", "model.LightGCN.gi_loss", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.BoolTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.group_rep", "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.group_rep", "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.interactions", "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.gi_scores", "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.gi_loss"], ["", "def", "ssl_loss", "(", "self", ",", "temp_groupids", ",", "ssl_data", ",", "all_users", ")", ":", "\n", "        ", "num_groupid", "=", "len", "(", "temp_groupids", ")", "\n", "ssl_loss", "=", "0", "\n", "for", "i", "in", "temp_groupids", ":", "\n", "            ", "group1s", "=", "torch", ".", "IntTensor", "(", "ssl_data", "[", "i", "]", "[", "0", "]", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "group1s_masks", "=", "torch", ".", "BoolTensor", "(", "ssl_data", "[", "i", "]", "[", "1", "]", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "group2s", "=", "torch", ".", "IntTensor", "(", "ssl_data", "[", "i", "]", "[", "2", "]", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "group2s_masks", "=", "torch", ".", "BoolTensor", "(", "ssl_data", "[", "i", "]", "[", "3", "]", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "com_users", "=", "torch", ".", "LongTensor", "(", "ssl_data", "[", "i", "]", "[", "4", "]", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "center1s", ",", "offset1s", "=", "self", ".", "group_rep", "(", "group1s", ",", "group1s_masks", ",", "all_users", ")", "\n", "center2s", ",", "offset2s", "=", "self", ".", "group_rep", "(", "group2s", ",", "group2s_masks", ",", "all_users", ")", "\n", "centers", ",", "offsets", "=", "self", ".", "interactions", "(", "center1s", ",", "offset1s", ",", "center2s", ",", "offset2s", ")", "\n", "scores", "=", "self", ".", "gi_scores", "(", "centers", ",", "offsets", ",", "com_users", ",", "all_users", ")", "\n", "ssl_loss", "+=", "self", ".", "gi_loss", "(", "scores", ")", "\n", "", "return", "ssl_loss", "/", "num_groupid", "\n", "", "def", "interactions", "(", "self", ",", "center1s", ",", "offset1s", ",", "center2s", ",", "offset2s", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.model.LightGCN.interactions": [[251, 265], ["torch.empty().to", "torch.empty().to", "torch.empty().to", "torch.empty().to", "torch.empty().to", "torch.empty().to", "torch.empty().to", "torch.empty().to", "zip", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.LightGCN.phi", "model.LightGCN.phi", "model.LightGCN.phi", "model.LightGCN.phi", "model.LightGCN.psi"], "methods", ["None"], ["", "def", "interactions", "(", "self", ",", "center1s", ",", "offset1s", ",", "center2s", ",", "offset2s", ")", ":", "\n", "        ", "centers", "=", "torch", ".", "empty", "(", "0", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "offsets", "=", "torch", ".", "empty", "(", "0", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "for", "center1", ",", "offset1", ",", "center2", ",", "offset2", "in", "zip", "(", "center1s", ",", "offset1s", ",", "center2s", ",", "offset2s", ")", ":", "\n", "            ", "a_den", "=", "torch", ".", "exp", "(", "self", ".", "phi", "(", "center1", ")", ")", "+", "torch", ".", "exp", "(", "self", ".", "phi", "(", "center2", ")", ")", "\n", "a1", "=", "torch", ".", "exp", "(", "self", ".", "phi", "(", "center1", ")", ")", "/", "a_den", "\n", "a2", "=", "torch", ".", "exp", "(", "self", ".", "phi", "(", "center2", ")", ")", "/", "a_den", "\n", "center", "=", "a1", "*", "center1", "+", "a2", "*", "center2", "\n", "offset", "=", "torch", ".", "min", "(", "offset1", ",", "offset2", ")", "*", "torch", ".", "sigmoid", "(", "self", ".", "psi", "(", "offset1", "+", "offset2", ")", ")", "\n", "center", "=", "torch", ".", "unsqueeze", "(", "center", ",", "dim", "=", "0", ")", "\n", "centers", "=", "torch", ".", "cat", "(", "(", "centers", ",", "center", ")", ",", "dim", "=", "0", ")", "\n", "offset", "=", "torch", ".", "unsqueeze", "(", "offset", ",", "dim", "=", "0", ")", "\n", "offsets", "=", "torch", ".", "cat", "(", "(", "offsets", ",", "offset", ")", ",", "dim", "=", "0", ")", "\n", "", "return", "(", "centers", ",", "offsets", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.__init__": [[27, 157], ["world.cprint", "print", "print", "numpy.vstack", "numpy_indexed.group_by().split", "numpy.array", "numpy.unique", "numpy.unique", "len", "len", "scipy.sparse.csr_matrix", "torch.IntTensor", "torch.BoolTensor", "print", "print", "print", "scipy.sparse.csr_matrix", "numpy.array().squeeze", "numpy.array().squeeze", "dataloader.Loader.getUserPosItems", "dataloader.Loader.__build_test", "print", "open", "pickle.load", "max", "max", "max", "train_groupids.append", "train_members.append", "train_masks.append", "test_members.append", "test_masks.append", "pn.append", "numpy.array.append", "pn.insert", "test_items.append", "open", "list", "numpy_indexed.group_by", "gvi[].append", "numpy.random.randint", "numpy.ones", "pickle.load", "numpy.ones", "numpy.array", "numpy.array", "range", "max", "max", "max", "max", "pn.append", "visited_items.append", "range", "len", "len", "dataloader.Loader.UserItemNet.sum", "dataloader.Loader.UserItemNet.sum"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.world.cprint", "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.getUserPosItems", "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.__build_test"], ["    ", "def", "__init__", "(", "self", ",", "config", "=", "world", ".", "config", ",", "path", "=", "\"../data\"", ")", ":", "\n", "# train or test", "\n", "        ", "cprint", "(", "f'loading [{path}]'", ")", "\n", "self", ".", "split", "=", "config", "[", "'A_split'", "]", "\n", "self", ".", "folds", "=", "config", "[", "'A_n_fold'", "]", "\n", "self", ".", "mode_dict", "=", "{", "'train'", ":", "0", ",", "\"test\"", ":", "1", "}", "\n", "self", ".", "mode", "=", "self", ".", "mode_dict", "[", "'train'", "]", "\n", "self", ".", "n_user", "=", "0", "\n", "self", ".", "m_item", "=", "0", "\n", "self", ".", "path", "=", "path", "\n", "trainUniqueUsers", ",", "trainItem", ",", "trainUser", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "testUniqueUsers", ",", "testItem", ",", "testUser", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "self", ".", "traindataSize", "=", "0", "\n", "self", ".", "testDataSize", "=", "0", "\n", "\n", "# import data", "\n", "with", "open", "(", "'../data/yelp_sum.pkl'", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "gi_train", ",", "gi_test", ",", "gu", ",", "members", ",", "masks", ",", "ui_train", ",", "ui_test", ",", "social", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "self", ".", "n_group", "=", "max", "(", "gu", "[", ":", ",", "0", "]", ")", "+", "1", "\n", "self", ".", "n_user", "=", "max", "(", "gu", "[", ":", ",", "1", "]", ")", "+", "1", "\n", "self", ".", "m_item", "=", "max", "(", "[", "max", "(", "gi_train", "[", ":", ",", "1", "]", ")", ",", "max", "(", "gi_test", "[", ":", ",", "1", "]", ")", ",", "max", "(", "ui_train", "[", ":", ",", "1", "]", ")", ",", "max", "(", "ui_test", "[", ":", ",", "1", "]", ")", "]", ")", "+", "1", "\n", "print", "(", "self", ".", "n_user", ")", "\n", "print", "(", "self", ".", "m_item", ")", "\n", "\n", "\n", "# group visited items - gvi", "\n", "gvi", "=", "{", "}", "\n", "gi", "=", "np", ".", "vstack", "(", "(", "gi_train", ",", "gi_test", ")", ")", "\n", "gi_g", "=", "gi", "[", ":", ",", "0", "]", "\n", "gi_classfied", "=", "npi", ".", "group_by", "(", "gi_g", ")", ".", "split", "(", "gi", ")", "\n", "for", "i", "in", "gi_classfied", ":", "\n", "            ", "group_id", "=", "i", "[", "0", "]", "[", "0", "]", "\n", "gvi", "[", "group_id", "]", "=", "[", "]", "\n", "for", "k", "in", "i", ":", "\n", "                ", "gvi", "[", "group_id", "]", ".", "append", "(", "k", "[", "1", "]", ")", "\n", "\n", "# group_train", "\n", "", "", "train_groupids", "=", "[", "]", "\n", "train_members", "=", "[", "]", "\n", "train_masks", "=", "[", "]", "\n", "for", "i", "in", "gi_train", "[", ":", ",", "0", "]", ":", "\n", "            ", "train_groupids", ".", "append", "(", "i", ")", "\n", "train_members", ".", "append", "(", "members", "[", "i", "]", ")", "\n", "train_masks", ".", "append", "(", "masks", "[", "i", "]", ")", "\n", "", "self", ".", "train_groupids", "=", "train_groupids", "\n", "self", ".", "train_members", "=", "train_members", "\n", "self", ".", "train_masks", "=", "train_masks", "\n", "\n", "# group_test - why not test-groupid?", "\n", "test_members", "=", "[", "]", "\n", "test_masks", "=", "[", "]", "\n", "for", "i", "in", "gi_test", "[", ":", ",", "0", "]", ":", "\n", "            ", "test_members", ".", "append", "(", "members", "[", "i", "]", ")", "\n", "test_masks", ".", "append", "(", "masks", "[", "i", "]", ")", "\n", "", "self", ".", "test_members", "=", "test_members", "\n", "self", ".", "test_masks", "=", "test_masks", "\n", "\n", "# generate negative items", "\n", "# train - the number of negative items is 5", "\n", "train_items", "=", "[", "]", "\n", "for", "i", "in", "gi_train", ":", "\n", "            ", "pn", "=", "[", "]", "\n", "pn", ".", "append", "(", "i", "[", "1", "]", ")", "\n", "index", "=", "0", "\n", "visited_items", "=", "gvi", "[", "i", "[", "0", "]", "]", "\n", "while", "index", "<", "5", ":", "\n", "                ", "neg", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "m_item", ")", "\n", "if", "neg", "not", "in", "visited_items", ":", "\n", "                    ", "pn", ".", "append", "(", "neg", ")", "\n", "visited_items", ".", "append", "(", "neg", ")", "\n", "index", "+=", "1", "\n", "", "", "train_items", ".", "append", "(", "pn", ")", "\n", "gvi", "[", "i", "[", "0", "]", "]", "=", "visited_items", "\n", "", "train_items", "=", "np", ".", "array", "(", "train_items", ")", "\n", "self", ".", "train_items", "=", "train_items", "\n", "#test", "\n", "test_items", "=", "[", "]", "\n", "for", "i", "in", "gi_test", ":", "\n", "            ", "visited_items", "=", "gvi", "[", "i", "[", "0", "]", "]", "\n", "pn", "=", "[", "i", "for", "i", "in", "range", "(", "self", ".", "m_item", ")", "if", "i", "not", "in", "visited_items", "]", "\n", "pn", ".", "insert", "(", "0", ",", "i", "[", "1", "]", ")", "\n", "test_items", ".", "append", "(", "pn", ")", "\n", "", "self", ".", "test_items", "=", "test_items", "\n", "\n", "\n", "# generate user data", "\n", "self", ".", "trainUniqueUser", "=", "np", ".", "unique", "(", "ui_train", "[", ":", ",", "0", "]", ")", "\n", "self", ".", "trainUser", "=", "ui_train", "[", ":", ",", "0", "]", "\n", "self", ".", "trainItem", "=", "ui_train", "[", ":", ",", "1", "]", "\n", "\n", "self", ".", "testUniqueUser", "=", "np", ".", "unique", "(", "ui_test", "[", ":", ",", "0", "]", ")", "\n", "self", ".", "testUser", "=", "ui_test", "[", ":", ",", "0", "]", "\n", "self", ".", "testItem", "=", "ui_test", "[", ":", ",", "1", "]", "\n", "\n", "self", ".", "traindataSize", "=", "len", "(", "ui_train", ")", "\n", "self", ".", "testDataSize", "=", "len", "(", "ui_test", ")", "\n", "\n", "# social", "\n", "self", ".", "social_u1", "=", "social", "[", ":", ",", "0", "]", "\n", "self", ".", "social_u2", "=", "social", "[", ":", ",", "1", "]", "\n", "self", ".", "socialNet", "=", "csr_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "self", ".", "social_u1", ")", ")", ",", "(", "self", ".", "social_u1", ",", "self", ".", "social_u2", ")", ")", ",", "shape", "=", "(", "self", ".", "n_user", ",", "self", ".", "n_user", ")", ")", "\n", "# group members", "\n", "self", ".", "members", "=", "torch", ".", "IntTensor", "(", "members", ")", "\n", "self", ".", "masks", "=", "torch", ".", "BoolTensor", "(", "masks", ")", "\n", "\n", "\n", "# generate SSL data", "\n", "\n", "# import SSL Data", "\n", "with", "open", "(", "'../data/ssl.pkl'", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "ssl_data", "=", "pickle", ".", "load", "(", "f", ")", "[", "0", "]", "\n", "\n", "", "self", ".", "Graph", "=", "None", "\n", "print", "(", "f\"{self.trainDataSize} interactions for training\"", ")", "\n", "print", "(", "f\"{self.testDataSize} interactions for testing\"", ")", "\n", "print", "(", "f\"{world.dataset} Sparsity : {(self.trainDataSize + self.testDataSize) / self.n_users / self.m_items}\"", ")", "\n", "\n", "# (users,items), bipartite graph", "\n", "self", ".", "UserItemNet", "=", "csr_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "self", ".", "trainUser", ")", ")", ",", "(", "self", ".", "trainUser", ",", "self", ".", "trainItem", ")", ")", ",", "\n", "shape", "=", "(", "self", ".", "n_user", ",", "self", ".", "m_item", ")", ")", "\n", "self", ".", "users_D", "=", "np", ".", "array", "(", "self", ".", "UserItemNet", ".", "sum", "(", "axis", "=", "1", ")", ")", ".", "squeeze", "(", ")", "\n", "self", ".", "users_D", "[", "self", ".", "users_D", "==", "0.", "]", "=", "1", "\n", "self", ".", "items_D", "=", "np", ".", "array", "(", "self", ".", "UserItemNet", ".", "sum", "(", "axis", "=", "0", ")", ")", ".", "squeeze", "(", ")", "\n", "self", ".", "items_D", "[", "self", ".", "items_D", "==", "0.", "]", "=", "1.", "\n", "# pre-calculate", "\n", "self", ".", "_allPos", "=", "self", ".", "getUserPosItems", "(", "list", "(", "range", "(", "self", ".", "n_user", ")", ")", ")", "\n", "self", ".", "__testDict", "=", "self", ".", "__build_test", "(", ")", "\n", "\n", "\n", "print", "(", "f\"{world.dataset} is ready to go\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.n_users": [[158, 161], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "n_users", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_user", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.m_items": [[162, 165], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "m_items", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "m_item", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.trainDataSize": [[166, 169], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "trainDataSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "traindataSize", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.testDict": [[170, 173], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "testDict", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__testDict", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.allPos": [[174, 177], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "allPos", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_allPos", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader._split_A_hat": [[178, 189], ["range", "A_fold.append", "dataloader.Loader._convert_sp_mat_to_sp_tensor().coalesce().to", "dataloader.Loader._convert_sp_mat_to_sp_tensor().coalesce", "dataloader.Loader._convert_sp_mat_to_sp_tensor"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader._convert_sp_mat_to_sp_tensor"], ["", "def", "_split_A_hat", "(", "self", ",", "A", ")", ":", "\n", "        ", "A_fold", "=", "[", "]", "\n", "fold_len", "=", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ")", "//", "self", ".", "folds", "\n", "for", "i_fold", "in", "range", "(", "self", ".", "folds", ")", ":", "\n", "            ", "start", "=", "i_fold", "*", "fold_len", "\n", "if", "i_fold", "==", "self", ".", "folds", "-", "1", ":", "\n", "                ", "end", "=", "self", ".", "n_users", "+", "self", ".", "m_items", "\n", "", "else", ":", "\n", "                ", "end", "=", "(", "i_fold", "+", "1", ")", "*", "fold_len", "\n", "", "A_fold", ".", "append", "(", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "A", "[", "start", ":", "end", "]", ")", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", ")", "\n", "", "return", "A_fold", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader._convert_sp_mat_to_sp_tensor": [[190, 197], ["X.tocoo().astype", "torch.Tensor().long", "torch.Tensor().long", "torch.stack", "torch.FloatTensor", "torch.sparse.FloatTensor", "torch.Size", "X.tocoo", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "_convert_sp_mat_to_sp_tensor", "(", "self", ",", "X", ")", ":", "\n", "        ", "coo", "=", "X", ".", "tocoo", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "row", "=", "torch", ".", "Tensor", "(", "coo", ".", "row", ")", ".", "long", "(", ")", "\n", "col", "=", "torch", ".", "Tensor", "(", "coo", ".", "col", ")", ".", "long", "(", ")", "\n", "index", "=", "torch", ".", "stack", "(", "[", "row", ",", "col", "]", ")", "\n", "data", "=", "torch", ".", "FloatTensor", "(", "coo", ".", "data", ")", "\n", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "index", ",", "data", ",", "torch", ".", "Size", "(", "coo", ".", "shape", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.getSparseGraph": [[198, 242], ["print", "scipy.load_npz", "print", "dataloader.Loader._split_A_hat", "print", "dataloader.Loader._convert_sp_mat_to_sp_tensor", "dataloader.Loader.Graph.coalesce().to", "print", "print", "time.time.time", "scipy.dok_matrix", "adj_mat.todok.todok.tolil", "dataloader.Loader.UserItemNet.tolil", "adj_mat.todok.todok.todok", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "time.time.time", "print", "scipy.save_npz", "adj_mat.todok.todok.sum", "dataloader.Loader.Graph.coalesce", "numpy.power", "numpy.isinf"], "methods", ["home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader._split_A_hat", "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph", "(", "self", ")", ":", "\n", "        ", "print", "(", "\"loading adjacency matrix\"", ")", "\n", "if", "self", ".", "Graph", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/s_pre_adj_mat.npz'", ")", "\n", "print", "(", "\"successfully loaded...\"", ")", "\n", "norm_adj", "=", "pre_adj_mat", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"generating adjacency matrix\"", ")", "\n", "s", "=", "time", "(", ")", "\n", "adj_mat", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat", "=", "adj_mat", ".", "tolil", "(", ")", "\n", "\n", "# ui", "\n", "R", "=", "self", ".", "UserItemNet", ".", "tolil", "(", ")", "\n", "adj_mat", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "\n", "# social", "\n", "# social = self.socialNet.tolil()", "\n", "# adj_mat[:self.n_users, :self.n_users] = social             ", "\n", "\n", "\n", "adj_mat", "=", "adj_mat", ".", "todok", "(", ")", "\n", "rowsum", "=", "np", ".", "array", "(", "adj_mat", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "end", "=", "time", "(", ")", "\n", "print", "(", "f\"costing {end-s}s, saved norm_mat...\"", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "\n", "", "if", "self", ".", "split", "==", "True", ":", "\n", "                ", "self", ".", "Graph", "=", "self", ".", "_split_A_hat", "(", "norm_adj", ")", "\n", "print", "(", "\"done split matrix\"", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "Graph", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph", "=", "self", ".", "Graph", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "\"don't split the matrix\"", ")", "\n", "", "", "return", "self", ".", "Graph", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.__build_test": [[243, 256], ["enumerate", "test_data.get", "test_data[].append"], "methods", ["None"], ["", "def", "__build_test", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        return:\n            dict: {user: [items]}\n        \"\"\"", "\n", "test_data", "=", "{", "}", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "self", ".", "testItem", ")", ":", "\n", "            ", "user", "=", "self", ".", "testUser", "[", "i", "]", "\n", "if", "test_data", ".", "get", "(", "user", ")", ":", "\n", "                ", "test_data", "[", "user", "]", ".", "append", "(", "item", ")", "\n", "", "else", ":", "\n", "                ", "test_data", "[", "user", "]", "=", "[", "item", "]", "\n", "", "", "return", "test_data", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.getUserItemFeedback": [[257, 268], ["numpy.array().astype().reshape", "numpy.array().astype", "numpy.array"], "methods", ["None"], ["", "def", "getUserItemFeedback", "(", "self", ",", "users", ",", "items", ")", ":", "\n", "        ", "\"\"\"\n        users:\n            shape [-1]\n        items:\n            shape [-1]\n        return:\n            feedback [-1]\n        \"\"\"", "\n", "# print(self.UserItemNet[users, items])", "\n", "return", "np", ".", "array", "(", "self", ".", "UserItemNet", "[", "users", ",", "items", "]", ")", ".", "astype", "(", "'uint8'", ")", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jinglong0407_cuberec.code.dataloader.Loader.getUserPosItems": [[269, 274], ["posItems.append", "dataloader.Loader.UserItemNet[].nonzero"], "methods", ["None"], ["", "def", "getUserPosItems", "(", "self", ",", "users", ")", ":", "\n", "        ", "posItems", "=", "[", "]", "\n", "for", "user", "in", "users", ":", "\n", "            ", "posItems", ".", "append", "(", "self", ".", "UserItemNet", "[", "user", "]", ".", "nonzero", "(", ")", "[", "1", "]", ")", "\n", "", "return", "posItems", "", "", "", ""]]}