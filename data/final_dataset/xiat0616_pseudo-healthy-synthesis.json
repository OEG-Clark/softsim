{"home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.__init__": [[14, 18], ["git.Repo"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "comet_exp", "=", "None", ")", ":", "\n", "        ", "self", ".", "log", "=", "None", "\n", "self", ".", "comet_exp", "=", "comet_exp", "\n", "self", ".", "repo", "=", "git", ".", "Repo", "(", "search_parent_directories", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.init_logging": [[19, 28], ["logging.basicConfig", "logging.getLogger().addHandler", "logging.getLogger", "run.experiment.log.debug", "run.experiment.log.info", "os.path.exists", "os.makedirs", "logging.StreamHandler", "config.items", "logging.getLogger"], "methods", ["None"], ["", "def", "init_logging", "(", "self", ",", "config", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "config", ".", "folder", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "config", ".", "folder", ")", "\n", "", "logging", ".", "basicConfig", "(", "filename", "=", "config", ".", "folder", "+", "\"/logfile.log\"", ",", "level", "=", "logging", ".", "DEBUG", ",", "format", "=", "\"%(asctime)s %(message)s\"", ")", "\n", "logging", ".", "getLogger", "(", ")", ".", "addHandler", "(", "logging", ".", "StreamHandler", "(", ")", ")", "\n", "\n", "self", ".", "log", "=", "logging", ".", "getLogger", "(", ")", "\n", "self", ".", "log", ".", "debug", "(", "config", ".", "items", "(", ")", ")", "\n", "self", ".", "log", ".", "info", "(", "\"---- Setting up experiment at \"", "+", "config", ".", "folder", "+", "\"----\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.get_conf": [[29, 36], ["importlib.import_module().get", "run.experiment.comet_exp.log_parameters", "easydict.EasyDict", "run.experiment.save_config", "importlib.import_module"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.configuration.exp_unsupervised.get", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.save_config"], ["", "def", "get_conf", "(", "self", ",", "args", ")", ":", "\n", "        ", "config_dict", "=", "importlib", ".", "import_module", "(", "\"configuration.\"", "+", "args", ".", "config", ")", ".", "get", "(", ")", "\n", "config_dict", "[", "\"git_hash\"", "]", "=", "self", ".", "repo", ".", "head", ".", "object", ".", "hexsha", "\n", "self", ".", "comet_exp", ".", "log_parameters", "(", "config_dict", ")", "\n", "config", "=", "EasyDict", "(", "config_dict", ")", "\n", "self", ".", "save_config", "(", "config", ")", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.save_config": [[37, 42], ["os.path.exists", "os.makedirs", "open", "json.dump", "dict", "conf.items"], "methods", ["None"], ["", "def", "save_config", "(", "self", ",", "conf", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "conf", ".", "folder", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "conf", ".", "folder", ")", "\n", "", "with", "open", "(", "conf", ".", "folder", "+", "\"/experiment_configuration.json\"", ",", "\"w\"", ")", "as", "outfile", ":", "\n", "            ", "json", ".", "dump", "(", "dict", "(", "conf", ".", "items", "(", ")", ")", ",", "outfile", ",", "sort_keys", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.get_executor": [[43, 55], ["model.build", "conf.model.split", "conf.model.split", "getattr", "conf.executor.split", "conf.executor.split", "getattr", "importlib.import_module", "importlib.import_module"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build"], ["", "", "def", "get_executor", "(", "self", ",", "conf", ")", ":", "\n", "# Initialize model", "\n", "        ", "module_name", "=", "conf", ".", "model", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "model_name", "=", "conf", ".", "model", ".", "split", "(", "'.'", ")", "[", "1", "]", "\n", "model", "=", "getattr", "(", "importlib", ".", "import_module", "(", "\"models.\"", "+", "module_name", ")", ",", "model_name", ")", "(", "conf", ")", "\n", "model", ".", "build", "(", ")", "\n", "\n", "# Initialize executor", "\n", "module_name", "=", "conf", ".", "executor", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "model_name", "=", "conf", ".", "executor", ".", "split", "(", "'.'", ")", "[", "1", "]", "\n", "executor", "=", "getattr", "(", "importlib", ".", "import_module", "(", "\"model_executor.\"", "+", "module_name", ")", ",", "model_name", ")", "(", "conf", ",", "model", ",", "self", ".", "comet_exp", ")", "\n", "return", "executor", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.read_console_parameters": [[56, 64], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "methods", ["None"], ["", "def", "read_console_parameters", "(", "self", ")", ":", "\n", "        ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--config\"", ",", "default", "=", "\"\"", ",", "help", "=", "\"The experiment configuration file\"", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--test\"", ",", "help", "=", "\"Evaluate the model on the test data\"", ",", "type", "=", "bool", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_dataset\"", ",", "help", "=", "\"Override default test dataset\"", ",", "choices", "=", "[", "\"cam_can\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--split\"", ",", "help", "=", "\"Data split to run\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--augment\"", ",", "help", "=", "\"Augment training data\"", ",", "type", "=", "bool", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.run": [[65, 71], ["run.experiment.read_console_parameters", "run.experiment.get_conf", "run.experiment.init_logging", "run.experiment.get_executor", "run.experiment.train"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.read_console_parameters", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.get_conf", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.init_logging", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.None.run.experiment.get_executor", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.train"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "args", "=", "self", ".", "read_console_parameters", "(", ")", "\n", "conf", "=", "self", ".", "get_conf", "(", "args", ")", "\n", "self", ".", "init_logging", "(", "conf", ")", "\n", "executor", "=", "self", ".", "get_executor", "(", "conf", ")", "\n", "executor", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.cost.l1_regularization": [[4, 6], ["keras.mean", "keras.abs"], "function", ["None"], ["def", "l1_regularization", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "return", "K", ".", "mean", "(", "K", ".", "abs", "(", "y_pred", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.cost.wasserstein_loss": [[7, 9], ["keras.mean"], "function", ["None"], ["", "def", "wasserstein_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "return", "K", ".", "mean", "(", "y_true", "*", "y_pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.cost.gradient_penalty_loss": [[10, 45], ["keras.square", "keras.sum", "keras.sqrt", "keras.mean", "keras.gradients", "keras.square", "numpy.arange", "len"], "function", ["None"], ["", "def", "gradient_penalty_loss", "(", "y_true", ",", "y_pred", ",", "averaged_samples", ",", "\n", "gradient_penalty_weight", ")", ":", "\n", "    ", "\"\"\"Calculates the gradient penalty loss for a batch of \"averaged\" samples.\n    In Improved WGANs, the 1-Lipschitz constraint is enforced by adding a term to the\n    loss function that penalizes the network if the gradient norm moves away from 1.\n    However, it is impossible to evaluate this function at all points in the input\n    space. The compromise used in the paper is to choose random points on the lines\n    between real and generated samples, and check the gradients at these points. Note\n    that it is the gradient w.r.t. the input averaged samples, not the weights of the\n    discriminator, that we're penalizing!\n    In order to evaluate the gradients, we must first run samples through the generator\n    and evaluate the loss. Then we get the gradients of the discriminator w.r.t. the\n    input averaged samples. The l2 norm and penalty can then be calculated for this\n    gradient.\n    Note that this loss function requires the original averaged samples as input, but\n    Keras only supports passing y_true and y_pred to loss functions. To get around this,\n    we make a partial() of the function with the averaged_samples argument, and use that\n    for model training.\"\"\"", "\n", "# first get the gradients:", "\n", "#   assuming: - that y_pred has dimensions (batch_size, 1)", "\n", "#             - averaged_samples has dimensions (batch_size, nbr_features)", "\n", "# gradients afterwards has dimension (batch_size, nbr_features), basically", "\n", "# a list of nbr_features-dimensional gradient vectors", "\n", "gradients", "=", "K", ".", "gradients", "(", "y_pred", ",", "averaged_samples", ")", "[", "0", "]", "\n", "# compute the euclidean norm by squaring ...", "\n", "gradients_sqr", "=", "K", ".", "square", "(", "gradients", ")", "\n", "#   ... summing over the rows ...", "\n", "gradients_sqr_sum", "=", "K", ".", "sum", "(", "gradients_sqr", ",", "\n", "axis", "=", "np", ".", "arange", "(", "1", ",", "len", "(", "gradients_sqr", ".", "shape", ")", ")", ")", "\n", "#   ... and sqrt", "\n", "gradient_l2_norm", "=", "K", ".", "sqrt", "(", "gradients_sqr_sum", ")", "\n", "# compute lambda * (1 - ||grad||)^2 still for each single sample", "\n", "gradient_penalty", "=", "gradient_penalty_weight", "*", "K", ".", "square", "(", "1", "-", "gradient_l2_norm", ")", "\n", "# return the mean as loss over all the batch samples", "\n", "return", "K", ".", "mean", "(", "gradient_penalty", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.cost.l1_regularization_loss": [[46, 57], ["keras.exp", "print", "keras.mean", "keras.mean", "keras.abs"], "function", ["None"], ["", "def", "l1_regularization_loss", "(", "y_true", ",", "y_pred", ",", "age_gap", ")", ":", "\n", "\n", "    ", "epsilon", "=", "K", ".", "exp", "(", "-", "age_gap", "/", "60", ")", "\n", "print", "(", "\"epsilon :\"", ",", "epsilon", ")", "\n", "# print(K.shape(epsilon))", "\n", "# print(epsilon)", "\n", "# # compute the euclidean norm by squaring ...", "\n", "# l1_loss = epsilon * K.abs(y_pred-y_true)", "\n", "l1_loss", "=", "epsilon", "*", "K", ".", "mean", "(", "K", ".", "abs", "(", "y_pred", "-", "y_true", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "\n", "return", "K", ".", "mean", "(", "l1_loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.cost.dice_coef": [[59, 64], ["keras.sum", "keras.sum", "keras.sum", "keras.abs", "keras.abs", "keras.abs"], "function", ["None"], ["", "def", "dice_coef", "(", "y_true", ",", "y_pred", ",", "smooth", "=", "0.1", ")", ":", "\n", "# Symbolically compute the intersection", "\n", "    ", "y_int", "=", "y_true", "*", "y_pred", "\n", "# Technically this is the negative of the Sorensen-Dice index. This is done for minimization purposes", "\n", "return", "(", "2", "*", "K", ".", "sum", "(", "K", ".", "abs", "(", "y_int", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "smooth", ")", "/", "(", "K", ".", "sum", "(", "K", ".", "abs", "(", "y_true", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "smooth", "+", "K", ".", "sum", "(", "K", ".", "abs", "(", "y_pred", ")", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.cost.dice_coef_loss": [[65, 67], ["cost.dice_coef"], "function", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.cost.dice_coef"], ["", "def", "dice_coef_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "return", "1", "-", "dice_coef", "(", "y_true", ",", "y_pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.tsne.Hbeta": [[19, 31], ["numpy.array", "numpy.exp", "sum", "numpy.log", "D.copy", "numpy.sum"], "function", ["None"], ["def", "Hbeta", "(", "D", "=", "np", ".", "array", "(", "[", "]", ")", ",", "beta", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"\n        Compute the perplexity and the P-row for a specific value of the\n        precision of a Gaussian distribution.\n    \"\"\"", "\n", "\n", "# Compute P-row and corresponding perplexity", "\n", "P", "=", "np", ".", "exp", "(", "-", "D", ".", "copy", "(", ")", "*", "beta", ")", "\n", "sumP", "=", "sum", "(", "P", ")", "\n", "H", "=", "np", ".", "log", "(", "sumP", ")", "+", "beta", "*", "np", ".", "sum", "(", "D", "*", "P", ")", "/", "sumP", "\n", "P", "=", "P", "/", "sumP", "\n", "return", "H", ",", "P", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.tsne.x2p": [[33, 91], ["numpy.array", "print", "numpy.sum", "numpy.add", "numpy.zeros", "numpy.ones", "numpy.log", "range", "print", "numpy.square", "tsne.Hbeta", "numpy.add", "print", "tsne.Hbeta", "numpy.mean", "numpy.abs", "beta[].copy", "beta[].copy", "numpy.sqrt", "numpy.dot", "numpy.concatenate", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.tsne.Hbeta", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.tsne.Hbeta"], ["", "def", "x2p", "(", "X", "=", "np", ".", "array", "(", "[", "]", ")", ",", "tol", "=", "1e-5", ",", "perplexity", "=", "30.0", ")", ":", "\n", "    ", "\"\"\"\n        Performs a binary search to get P-values in such a way that each\n        conditional Gaussian has the same perplexity.\n    \"\"\"", "\n", "\n", "# Initialize some variables", "\n", "print", "(", "\"Computing pairwise distances...\"", ")", "\n", "(", "n", ",", "d", ")", "=", "X", ".", "shape", "\n", "sum_X", "=", "np", ".", "sum", "(", "np", ".", "square", "(", "X", ")", ",", "1", ")", "\n", "D", "=", "np", ".", "add", "(", "np", ".", "add", "(", "-", "2", "*", "np", ".", "dot", "(", "X", ",", "X", ".", "T", ")", ",", "sum_X", ")", ".", "T", ",", "sum_X", ")", "\n", "P", "=", "np", ".", "zeros", "(", "(", "n", ",", "n", ")", ")", "\n", "beta", "=", "np", ".", "ones", "(", "(", "n", ",", "1", ")", ")", "\n", "logU", "=", "np", ".", "log", "(", "perplexity", ")", "\n", "\n", "# Loop over all datapoints", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\n", "# Print progress", "\n", "        ", "if", "i", "%", "500", "==", "0", ":", "\n", "            ", "print", "(", "\"Computing P-values for point %d of %d...\"", "%", "(", "i", ",", "n", ")", ")", "\n", "\n", "# Compute the Gaussian kernel and entropy for the current precision", "\n", "", "betamin", "=", "-", "np", ".", "inf", "\n", "betamax", "=", "np", ".", "inf", "\n", "Di", "=", "D", "[", "i", ",", "np", ".", "concatenate", "(", "(", "np", ".", "r_", "[", "0", ":", "i", "]", ",", "np", ".", "r_", "[", "i", "+", "1", ":", "n", "]", ")", ")", "]", "\n", "(", "H", ",", "thisP", ")", "=", "Hbeta", "(", "Di", ",", "beta", "[", "i", "]", ")", "\n", "\n", "# Evaluate whether the perplexity is within tolerance", "\n", "Hdiff", "=", "H", "-", "logU", "\n", "tries", "=", "0", "\n", "while", "np", ".", "abs", "(", "Hdiff", ")", ">", "tol", "and", "tries", "<", "50", ":", "\n", "\n", "# If not, increase or decrease precision", "\n", "            ", "if", "Hdiff", ">", "0", ":", "\n", "                ", "betamin", "=", "beta", "[", "i", "]", ".", "copy", "(", ")", "\n", "if", "betamax", "==", "np", ".", "inf", "or", "betamax", "==", "-", "np", ".", "inf", ":", "\n", "                    ", "beta", "[", "i", "]", "=", "beta", "[", "i", "]", "*", "2.", "\n", "", "else", ":", "\n", "                    ", "beta", "[", "i", "]", "=", "(", "beta", "[", "i", "]", "+", "betamax", ")", "/", "2.", "\n", "", "", "else", ":", "\n", "                ", "betamax", "=", "beta", "[", "i", "]", ".", "copy", "(", ")", "\n", "if", "betamin", "==", "np", ".", "inf", "or", "betamin", "==", "-", "np", ".", "inf", ":", "\n", "                    ", "beta", "[", "i", "]", "=", "beta", "[", "i", "]", "/", "2.", "\n", "", "else", ":", "\n", "                    ", "beta", "[", "i", "]", "=", "(", "beta", "[", "i", "]", "+", "betamin", ")", "/", "2.", "\n", "\n", "# Recompute the values", "\n", "", "", "(", "H", ",", "thisP", ")", "=", "Hbeta", "(", "Di", ",", "beta", "[", "i", "]", ")", "\n", "Hdiff", "=", "H", "-", "logU", "\n", "tries", "+=", "1", "\n", "\n", "# Set the final row of P", "\n", "", "P", "[", "i", ",", "np", ".", "concatenate", "(", "(", "np", ".", "r_", "[", "0", ":", "i", "]", ",", "np", ".", "r_", "[", "i", "+", "1", ":", "n", "]", ")", ")", "]", "=", "thisP", "\n", "\n", "# Return final P-matrix", "\n", "", "print", "(", "\"Mean value of sigma: %f\"", "%", "np", ".", "mean", "(", "np", ".", "sqrt", "(", "1", "/", "beta", ")", ")", ")", "\n", "return", "P", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.tsne.pca": [[93, 105], ["numpy.array", "print", "numpy.linalg.eig", "numpy.dot", "numpy.tile", "numpy.dot", "numpy.mean"], "function", ["None"], ["", "def", "pca", "(", "X", "=", "np", ".", "array", "(", "[", "]", ")", ",", "no_dims", "=", "50", ")", ":", "\n", "    ", "\"\"\"\n        Runs PCA on the NxD array X in order to reduce its dimensionality to\n        no_dims dimensions.\n    \"\"\"", "\n", "\n", "print", "(", "\"Preprocessing the data using PCA...\"", ")", "\n", "(", "n", ",", "d", ")", "=", "X", ".", "shape", "\n", "X", "=", "X", "-", "np", ".", "tile", "(", "np", ".", "mean", "(", "X", ",", "0", ")", ",", "(", "n", ",", "1", ")", ")", "\n", "(", "l", ",", "M", ")", "=", "np", ".", "linalg", ".", "eig", "(", "np", ".", "dot", "(", "X", ".", "T", ",", "X", ")", ")", "\n", "Y", "=", "np", ".", "dot", "(", "X", ",", "M", "[", ":", ",", "0", ":", "no_dims", "]", ")", "\n", "return", "Y", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.tsne.tsne": [[107, 181], ["numpy.array", "isinstance", "numpy.random.randn", "numpy.zeros", "numpy.zeros", "numpy.ones", "tsne.x2p", "numpy.maximum", "range", "print", "round", "print", "tsne.pca", "numpy.transpose", "numpy.sum", "numpy.sum", "numpy.maximum", "range", "numpy.square", "numpy.dot", "numpy.sum", "numpy.sum", "numpy.tile", "numpy.sum", "print", "numpy.add", "numpy.mean", "range", "range", "numpy.log", "numpy.add", "numpy.tile"], "function", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.tsne.x2p", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.tsne.pca"], ["", "def", "tsne", "(", "X", "=", "np", ".", "array", "(", "[", "]", ")", ",", "no_dims", "=", "2", ",", "initial_dims", "=", "50", ",", "perplexity", "=", "30.0", ")", ":", "\n", "    ", "\"\"\"\n        Runs t-SNE on the dataset in the NxD array X to reduce its\n        dimensionality to no_dims dimensions. The syntaxis of the function is\n        `Y = tsne.tsne(X, no_dims, perplexity), where X is an NxD NumPy array.\n    \"\"\"", "\n", "\n", "# Check inputs", "\n", "if", "isinstance", "(", "no_dims", ",", "float", ")", ":", "\n", "        ", "print", "(", "\"Error: array X should have type float.\"", ")", "\n", "return", "-", "1", "\n", "", "if", "round", "(", "no_dims", ")", "!=", "no_dims", ":", "\n", "        ", "print", "(", "\"Error: number of dimensions should be an integer.\"", ")", "\n", "return", "-", "1", "\n", "\n", "# Initialize variables", "\n", "", "X", "=", "pca", "(", "X", ",", "initial_dims", ")", ".", "real", "\n", "(", "n", ",", "d", ")", "=", "X", ".", "shape", "\n", "max_iter", "=", "1000", "\n", "initial_momentum", "=", "0.5", "\n", "final_momentum", "=", "0.8", "\n", "eta", "=", "500", "\n", "min_gain", "=", "0.01", "\n", "Y", "=", "np", ".", "random", ".", "randn", "(", "n", ",", "no_dims", ")", "\n", "dY", "=", "np", ".", "zeros", "(", "(", "n", ",", "no_dims", ")", ")", "\n", "iY", "=", "np", ".", "zeros", "(", "(", "n", ",", "no_dims", ")", ")", "\n", "gains", "=", "np", ".", "ones", "(", "(", "n", ",", "no_dims", ")", ")", "\n", "\n", "# Compute P-values", "\n", "P", "=", "x2p", "(", "X", ",", "1e-5", ",", "perplexity", ")", "\n", "P", "=", "P", "+", "np", ".", "transpose", "(", "P", ")", "\n", "P", "=", "P", "/", "np", ".", "sum", "(", "P", ")", "\n", "P", "=", "P", "*", "4.", "# early exaggeration", "\n", "P", "=", "np", ".", "maximum", "(", "P", ",", "1e-12", ")", "\n", "\n", "# Run iterations", "\n", "for", "iter", "in", "range", "(", "max_iter", ")", ":", "\n", "\n", "# Compute pairwise affinities", "\n", "        ", "sum_Y", "=", "np", ".", "sum", "(", "np", ".", "square", "(", "Y", ")", ",", "1", ")", "\n", "num", "=", "-", "2.", "*", "np", ".", "dot", "(", "Y", ",", "Y", ".", "T", ")", "\n", "num", "=", "1.", "/", "(", "1.", "+", "np", ".", "add", "(", "np", ".", "add", "(", "num", ",", "sum_Y", ")", ".", "T", ",", "sum_Y", ")", ")", "\n", "num", "[", "range", "(", "n", ")", ",", "range", "(", "n", ")", "]", "=", "0.", "\n", "Q", "=", "num", "/", "np", ".", "sum", "(", "num", ")", "\n", "Q", "=", "np", ".", "maximum", "(", "Q", ",", "1e-12", ")", "\n", "\n", "# Compute gradient", "\n", "PQ", "=", "P", "-", "Q", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "            ", "dY", "[", "i", ",", ":", "]", "=", "np", ".", "sum", "(", "np", ".", "tile", "(", "PQ", "[", ":", ",", "i", "]", "*", "num", "[", ":", ",", "i", "]", ",", "(", "no_dims", ",", "1", ")", ")", ".", "T", "*", "(", "Y", "[", "i", ",", ":", "]", "-", "Y", ")", ",", "0", ")", "\n", "\n", "# Perform the update", "\n", "", "if", "iter", "<", "20", ":", "\n", "            ", "momentum", "=", "initial_momentum", "\n", "", "else", ":", "\n", "            ", "momentum", "=", "final_momentum", "\n", "", "gains", "=", "(", "gains", "+", "0.2", ")", "*", "(", "(", "dY", ">", "0.", ")", "!=", "(", "iY", ">", "0.", ")", ")", "+", "(", "gains", "*", "0.8", ")", "*", "(", "(", "dY", ">", "0.", ")", "==", "(", "iY", ">", "0.", ")", ")", "\n", "gains", "[", "gains", "<", "min_gain", "]", "=", "min_gain", "\n", "iY", "=", "momentum", "*", "iY", "-", "eta", "*", "(", "gains", "*", "dY", ")", "\n", "Y", "=", "Y", "+", "iY", "\n", "Y", "=", "Y", "-", "np", ".", "tile", "(", "np", ".", "mean", "(", "Y", ",", "0", ")", ",", "(", "n", ",", "1", ")", ")", "\n", "\n", "# Compute current value of cost function", "\n", "if", "(", "iter", "+", "1", ")", "%", "10", "==", "0", ":", "\n", "            ", "C", "=", "np", ".", "sum", "(", "P", "*", "np", ".", "log", "(", "P", "/", "Q", ")", ")", "\n", "print", "(", "\"Iteration %d: error is %f\"", "%", "(", "iter", "+", "1", ",", "C", ")", ")", "\n", "\n", "# Stop lying about P-values", "\n", "", "if", "iter", "==", "100", ":", "\n", "            ", "P", "=", "P", "/", "4.", "\n", "\n", "# Return solution", "\n", "", "", "return", "Y", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.make_trainable.make_trainable": [[1, 10], ["make_trainable.make_trainable"], "function", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.make_trainable.make_trainable"], ["def", "make_trainable", "(", "model", ",", "val", ")", ":", "\n", "    ", "model", ".", "trainable", "=", "val", "\n", "for", "l", "in", "model", ".", "layers", ":", "\n", "        ", "try", ":", "\n", "            ", "for", "k", "in", "l", ".", "layers", ":", "\n", "                ", "make_trainable", "(", "k", ",", "val", ")", "\n", "", "", "except", ":", "\n", "            ", "pass", "\n", "", "l", ".", "trainable", "=", "val", "", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.get_model.get_model": [[1, 7], ["print"], "function", ["None"], ["def", "get_model", "(", "model", ",", "name", ")", ":", "\n", "    ", "for", "l", "in", "model", ".", "layers", ":", "\n", "        ", "if", "l", ".", "name", "==", "name", ":", "\n", "            ", "return", "l", "\n", "", "", "print", "(", "'Not found layer with name '", "+", "name", ")", "\n", "return", "None", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.__init__": [[18, 20], ["model_executor.basic_executor.Executor.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conf", ",", "model", "=", "None", ",", "comet_exp", "=", "None", ")", ":", "\n", "        ", "super", "(", "pseudo_healthy_semisupervised_executor", ",", "self", ")", ".", "__init__", "(", "conf", ",", "model", ",", "comet_exp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.init_train_data": [[21, 47], ["loader.data_loader.data_loader.data_loader.data_loader", "loader.data_loader.data_loader.data_loader.data_loader.load_data", "sklearn.model_selection.train_test_split", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "len", "int", "int", "int", "int", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.data_loader.data_loader.load_data"], ["", "def", "init_train_data", "(", "self", ")", ":", "\n", "        ", "loader", "=", "data_loader", "(", ")", "\n", "p_images", ",", "p_masks", ",", "h_images", ",", "h_masks", ",", "_", ",", "_", ",", "_", ",", "_", "=", "loader", ".", "load_data", "(", "\n", "dataset", "=", "self", ".", "conf", ".", "dataset", ",", "\n", "modality", "=", "self", ".", "conf", ".", "modality", ",", "\n", "split", "=", "self", ".", "conf", ".", "modality", ")", "\n", "\n", "p_images", "=", "p_images", "[", "0", ":", "int", "(", "(", "len", "(", "p_images", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "p_masks", "=", "p_masks", "[", "0", ":", "int", "(", "(", "len", "(", "p_masks", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "h_images", "=", "h_images", "[", "0", ":", "int", "(", "(", "len", "(", "h_images", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "h_masks", "=", "h_masks", "[", "0", ":", "int", "(", "(", "len", "(", "h_masks", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "\n", "# Split diseased data to paired and unpaired", "\n", "p_images_su", ",", "p_images_un", ",", "p_masks_su", ",", "p_masks_un", "=", "train_test_split", "(", "p_images", ",", "p_masks", ",", "\n", "test_size", "=", "self", ".", "conf", ".", "sup_ratio", ",", "\n", "random_state", "=", "1", ")", "\n", "\n", "\n", "self", ".", "p_images_su", "=", "np", ".", "expand_dims", "(", "p_images_su", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "p_masks_su", "=", "np", ".", "expand_dims", "(", "p_masks_su", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "p_images_un", "=", "np", ".", "expand_dims", "(", "p_images_un", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "p_masks_un", "=", "np", ".", "expand_dims", "(", "p_masks_un", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "h_images", "=", "np", ".", "expand_dims", "(", "h_images", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "h_masks", "=", "np", ".", "expand_dims", "(", "h_masks", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "conf", ".", "data_len", "=", "len", "(", "h_images", ")", "\n", "del", "p_images", ",", "p_masks", ",", "h_images", ",", "h_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.get_loss_names": [[48, 51], ["None"], "methods", ["None"], ["", "def", "get_loss_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"d_dis_pse_image_loss\"", ",", "\"d_dis_r_image_loss\"", ",", "\"d_gp_loss\"", ",", "\"d_dis_d_mask_loss\"", ",", "\n", "\"g_dis_pse_image_loss\"", ",", "\"g_rec_image_loss\"", ",", "\"g_dis_d_mask_loss\"", ",", "\"g_seg_mask_loss\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.train": [[52, 220], ["pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.init_train_data", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.get_datagen_params", "keras.preprocessing.image.ImageDataGenerator().flow", "keras.preprocessing.image.ImageDataGenerator().flow", "keras.preprocessing.image.ImageDataGenerator().flow", "keras.preprocessing.image.ImageDataGenerator().flow", "int", "keras.utils.Progbar", "callbacks.loss_callback.SaveLoss", "keras.callbacks.CSVLogger", "keras.callbacks.CSVLogger.on_train_begin", "callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.get_loss_names", "range", "numpy.ceil", "log.info", "range", "log.info", "keras.callbacks.CSVLogger.on_epoch_end", "callbacks.loss_callback.SaveLoss.on_epoch_end", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "print", "callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator", "next", "next", "next", "next", "numpy.ones", "numpy.zeros", "numpy.ones", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.model.G_d_to_h.predict", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.model.S_d_to_msk.predict", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.model.G_h_to_d.predict", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "epoch_loss[].append", "epoch_loss[].append", "epoch_loss[].append", "epoch_loss[].append", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.model.gan.fit", "numpy.mean", "numpy.mean", "numpy.mean", "epoch_loss[].append", "epoch_loss[].append", "epoch_loss[].append", "keras.utils.Progbar.update", "keras.utils.Progbar.update", "epoch_loss_list.append", "total_loss[].append", "epoch_loss_list.append", "total_loss[].append", "numpy.shape", "len", "numpy.asarray.append", "numpy.asarray.append", "len", "numpy.asarray.append", "numpy.asarray.append", "numpy.ones", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.model.train_self_rec.fit", "epoch_loss[].append", "epoch_loss[].append", "range", "range", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.model.pre_gan.fit", "numpy.mean", "numpy.mean", "epoch_loss[].append", "epoch_loss[].append", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.model.gan.fit", "numpy.mean", "numpy.mean", "numpy.mean", "epoch_loss[].append", "epoch_loss[].append", "epoch_loss[].append", "numpy.mean", "numpy.mean", "str", "numpy.mean", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.model.critic_model.fit", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "pseudo_healthy_semisupervised_executor.pseudo_healthy_semisupervised_executor.model.critic_model.fit", "numpy.mean", "numpy.mean", "tuple"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.init_train_data", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.get_datagen_params", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.get_loss_names", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "init_train_data", "(", ")", "\n", "# make genetrated data", "\n", "gen_dict", "=", "self", ".", "get_datagen_params", "(", ")", "\n", "p_gen_su", "=", "ImageDataGenerator", "(", "**", "gen_dict", ")", ".", "flow", "(", "x", "=", "self", ".", "p_images_su", ",", "y", "=", "self", ".", "p_masks_su", ",", "batch_size", "=", "self", ".", "conf", ".", "batch_size", ")", "\n", "p_gen_un", "=", "ImageDataGenerator", "(", "**", "gen_dict", ")", ".", "flow", "(", "x", "=", "self", ".", "p_images_un", ",", "batch_size", "=", "self", ".", "conf", ".", "batch_size", ")", "\n", "h_gen", "=", "ImageDataGenerator", "(", "**", "gen_dict", ")", ".", "flow", "(", "x", "=", "self", ".", "h_images", ",", "y", "=", "self", ".", "h_masks", ",", "batch_size", "=", "self", ".", "conf", ".", "batch_size", ")", "\n", "random_p_masks", "=", "ImageDataGenerator", "(", "**", "gen_dict", ")", ".", "flow", "(", "x", "=", "self", ".", "p_masks_un", ",", "batch_size", "=", "self", ".", "conf", ".", "batch_size", ")", "\n", "\n", "# initialize training", "\n", "batches", "=", "int", "(", "np", ".", "ceil", "(", "self", ".", "conf", ".", "data_len", "/", "self", ".", "conf", ".", "batch_size", ")", ")", "\n", "progress_bar", "=", "Progbar", "(", "target", "=", "batches", "*", "self", ".", "conf", ".", "batch_size", ")", "\n", "\n", "sl", "=", "SaveLoss", "(", "self", ".", "conf", ".", "folder", ")", "\n", "cl", "=", "CSVLogger", "(", "self", ".", "conf", ".", "folder", "+", "'/training.csv'", ")", "\n", "cl", ".", "on_train_begin", "(", ")", "\n", "img_clb", "=", "ImageCallback", "(", "self", ".", "conf", ",", "self", ".", "model", ",", "self", ".", "comet_exp", ")", "\n", "\n", "loss_names", "=", "self", ".", "get_loss_names", "(", ")", "\n", "total_loss", "=", "{", "n", ":", "[", "]", "for", "n", "in", "loss_names", "}", "\n", "\n", "# start training", "\n", "for", "epoch", "in", "range", "(", "self", ".", "conf", ".", "epochs", ")", ":", "\n", "            ", "log", ".", "info", "(", "\"Train epoch %d/%d\"", "%", "(", "epoch", ",", "self", ".", "conf", ".", "epochs", ")", ")", "\n", "epoch_loss", "=", "{", "n", ":", "[", "]", "for", "n", "in", "loss_names", "}", "\n", "epoch_loss_list", "=", "[", "]", "\n", "pool_to_print_p_img", ",", "pool_to_print_p_msk", ",", "pool_to_print_h_img", ",", "pool_to_print_h_msk", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "for", "batch", "in", "range", "(", "batches", ")", ":", "\n", "                ", "p_img_su", ",", "p_msk_su", "=", "next", "(", "p_gen_su", ")", "\n", "p_img_un", "=", "next", "(", "p_gen_un", ")", "\n", "h_img", ",", "h_msk", "=", "next", "(", "h_gen", ")", "\n", "r_p_msk", "=", "next", "(", "random_p_masks", ")", "\n", "\n", "if", "len", "(", "pool_to_print_p_img", ")", "<", "30", ":", "\n", "                    ", "pool_to_print_p_img", ".", "append", "(", "p_img_su", "[", "0", "]", ")", "\n", "pool_to_print_p_msk", ".", "append", "(", "p_msk_su", "[", "0", "]", ")", "\n", "\n", "\n", "", "if", "len", "(", "pool_to_print_h_img", ")", "<", "30", ":", "\n", "                    ", "pool_to_print_h_img", ".", "append", "(", "h_img", "[", "0", "]", ")", "\n", "pool_to_print_h_msk", ".", "append", "(", "h_msk", "[", "0", "]", ")", "\n", "\n", "# Adversarial ground truths", "\n", "", "real_pred", "=", "-", "np", ".", "ones", "(", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "fake_pred", "=", "np", ".", "ones", "(", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "dummy", "=", "np", ".", "zeros", "(", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "dummy_Img", "=", "np", ".", "ones", "(", "h_img", ".", "shape", ")", "\n", "\n", "if", "self", ".", "conf", ".", "self_rec", ":", "\n", "                    ", "h_test_sr", "=", "self", ".", "model", ".", "train_self_rec", ".", "fit", "(", "[", "h_img", ",", "h_msk", "]", ",", "[", "h_img", ",", "h_img", "]", ",", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "epoch_loss", "[", "\"test_self_rec_loss\"", "]", ".", "append", "(", "np", ".", "mean", "(", "h_test_sr", ".", "history", "[", "\"loss\"", "]", ")", ")", "\n", "", "else", ":", "\n", "                    ", "epoch_loss", "[", "\"test_self_rec_loss\"", "]", ".", "append", "(", "0", ")", "\n", "\n", "# ---------------------", "\n", "#  Train Discriminator", "\n", "# ---------------------", "\n", "# Get a group of synthetic msks and imgs", "\n", "", "cy1_pse_h_img", "=", "self", ".", "model", ".", "G_d_to_h", ".", "predict", "(", "p_img_su", ")", "\n", "cy1_seg_d_msk", "=", "self", ".", "model", ".", "S_d_to_msk", ".", "predict", "(", "p_img_su", ")", "\n", "cy2_fake_h_img", "=", "self", ".", "model", ".", "G_h_to_d", ".", "predict", "(", "[", "h_img", ",", "h_msk", "]", ")", "\n", "\n", "if", "epoch", "<", "25", ":", "\n", "                    ", "for", "_", "in", "range", "(", "self", ".", "conf", ".", "ncritic", "[", "0", "]", ")", ":", "\n", "                        ", "cy1_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy1_average", "=", "cy1_epsilon", "*", "h_img", "+", "(", "1", "-", "cy1_epsilon", ")", "*", "cy1_pse_h_img", "\n", "\n", "cy1_epsilon_msk", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy1_average_msk", "=", "cy1_epsilon_msk", "*", "r_p_msk", "+", "(", "1", "-", "cy1_epsilon", ")", "*", "cy1_seg_d_msk", "\n", "\n", "cy2_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy2_average", "=", "cy2_epsilon", "*", "h_img", "+", "(", "1", "-", "cy2_epsilon", ")", "*", "cy2_fake_h_img", "\n", "\n", "h_d", "=", "self", ".", "model", ".", "critic_model", ".", "fit", "(", "[", "h_img", ",", "cy1_pse_h_img", ",", "cy1_average", ",", "\n", "r_p_msk", ",", "cy1_seg_d_msk", ",", "cy1_average_msk", ",", "\n", "h_img", ",", "cy2_fake_h_img", ",", "cy2_average", "]", ",", "\n", "[", "real_pred", ",", "fake_pred", ",", "dummy", ",", "real_pred", ",", "fake_pred", ",", "dummy", ",", "\n", "real_pred", ",", "fake_pred", ",", "dummy", "]", ",", "\n", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "", "", "else", ":", "\n", "                    ", "for", "_", "in", "range", "(", "self", ".", "conf", ".", "ncritic", "[", "1", "]", ")", ":", "\n", "                        ", "cy1_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy1_average", "=", "cy1_epsilon", "*", "h_img", "+", "(", "1", "-", "cy1_epsilon", ")", "*", "cy1_pse_h_img", "\n", "\n", "cy1_epsilon_msk", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy1_average_msk", "=", "cy1_epsilon_msk", "*", "r_p_msk", "+", "(", "1", "-", "cy1_epsilon", ")", "*", "cy1_seg_d_msk", "\n", "\n", "cy2_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy2_average", "=", "cy2_epsilon", "*", "h_img", "+", "(", "1", "-", "cy2_epsilon", ")", "*", "cy2_fake_h_img", "\n", "\n", "h_d", "=", "self", ".", "model", ".", "critic_model", ".", "fit", "(", "[", "h_img", ",", "cy1_pse_h_img", ",", "cy1_average", ",", "\n", "r_p_msk", ",", "cy1_seg_d_msk", ",", "cy1_average_msk", ",", "\n", "h_img", ",", "cy2_fake_h_img", ",", "cy2_average", "]", ",", "\n", "[", "real_pred", ",", "fake_pred", ",", "dummy", ",", "real_pred", ",", "fake_pred", ",", "dummy", ",", "\n", "real_pred", ",", "fake_pred", ",", "dummy", "]", ",", "\n", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "# print(h_d.history)", "\n", "", "", "d_dis_pse_image_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'dis_cy1_I_pse_h_loss'", "]", ",", "h_d", ".", "history", "[", "'dis_cy2_I_pse_h_loss'", "]", "]", ")", "\n", "d_dis_r_image_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'dis_cy1_I_h_loss'", "]", ",", "h_d", ".", "history", "[", "'dis_cy2_I_h_loss'", "]", "]", ")", "\n", "d_dis_d_mask_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'dis_cy1_M_d_loss'", "]", ",", "h_d", ".", "history", "[", "'dis_cy1_M_seg_d_loss'", "]", "]", ")", "\n", "d_gp_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'gp_cy1_I_h_loss'", "]", ",", "h_d", ".", "history", "[", "'gp_cy2_I_h_loss'", "]", ",", "h_d", ".", "history", "[", "'gp_cy1_M_d_loss'", "]", "]", ")", "\n", "epoch_loss", "[", "'d_dis_pse_image_loss'", "]", ".", "append", "(", "d_dis_pse_image_loss", ")", "\n", "epoch_loss", "[", "'d_dis_r_image_loss'", "]", ".", "append", "(", "d_dis_r_image_loss", ")", "\n", "epoch_loss", "[", "'d_dis_d_mask_loss'", "]", ".", "append", "(", "d_dis_d_mask_loss", ")", "\n", "epoch_loss", "[", "'d_gp_loss'", "]", ".", "append", "(", "d_gp_loss", ")", "\n", "\n", "# -----------------------------", "\n", "#  Train Generator supversied", "\n", "# -----------------------------", "\n", "\n", "h_g", "=", "self", ".", "model", ".", "gan", ".", "fit", "(", "[", "p_img_su", ",", "h_img", ",", "h_msk", "]", ",", "[", "real_pred", ",", "p_msk_su", ",", "p_img_su", ",", "real_pred", ",", "h_img", ",", "h_msk", "]", ",", "\n", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "g_dis_pse_image_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'cy1_dis_I_pse_h_loss'", "]", ",", "h_g", ".", "history", "[", "'cy2_dis_I_pse_d_loss'", "]", "]", ")", "\n", "g_rec_image_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'cy2_I_rec_h_loss'", "]", ",", "h_g", ".", "history", "[", "'cy1_I_rec_d_loss'", "]", "]", ")", "\n", "g_seg_mask_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'cy1_M_seg_d_loss'", "]", ",", "h_g", ".", "history", "[", "'cy2_I_rec_h_loss'", "]", "]", ")", "\n", "epoch_loss", "[", "'g_dis_pse_image_loss'", "]", ".", "append", "(", "g_dis_pse_image_loss", ")", "\n", "epoch_loss", "[", "'g_rec_image_loss'", "]", ".", "append", "(", "g_rec_image_loss", ")", "\n", "epoch_loss", "[", "'g_seg_mask_loss'", "]", ".", "append", "(", "g_seg_mask_loss", ")", "\n", "\n", "progress_bar", ".", "update", "(", "(", "batch", "+", "1", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "\n", "\n", "# -----------------------------", "\n", "#  Train Generator unsupversied", "\n", "# -----------------------------", "\n", "if", "epoch", "<=", "self", ".", "conf", ".", "pre_epochs", ":", "\n", "                    ", "h_g", "=", "self", ".", "model", ".", "pre_gan", ".", "fit", "(", "[", "p_img_un", ",", "h_img", ",", "h_msk", "]", ",", "[", "real_pred", ",", "real_pred", ",", "real_pred", "]", ",", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "g_dis_pse_image_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'pre_dis_I_pse_h_loss'", "]", ",", "h_g", ".", "history", "[", "'pre_dis_I_fake_h_loss'", "]", "]", ")", "\n", "g_dis_d_mask_loss", "=", "np", ".", "mean", "(", "h_g", ".", "history", "[", "'pre_dis_M_seg_d_loss'", "]", ")", "\n", "epoch_loss", "[", "'g_dis_pse_image_loss'", "]", ".", "append", "(", "g_dis_pse_image_loss", ")", "\n", "epoch_loss", "[", "'g_dis_d_mask_loss'", "]", ".", "append", "(", "g_dis_d_mask_loss", ")", "\n", "# epoch_loss['g_dis_d_mask_loss'].append(0)", "\n", "\n", "", "if", "epoch", ">", "self", ".", "conf", ".", "pre_epochs", ":", "\n", "                    ", "h_g", "=", "self", ".", "model", ".", "gan", ".", "fit", "(", "[", "p_img_un", ",", "h_img", ",", "h_msk", "]", ",", "[", "real_pred", ",", "real_pred", ",", "p_img_un", ",", "real_pred", ",", "h_img", ",", "h_msk", "]", ",", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "g_dis_pse_image_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'cy1_dis_I_pse_h_loss'", "]", ",", "h_g", ".", "history", "[", "'cy2_dis_I_pse_d_loss'", "]", "]", ")", "\n", "g_rec_image_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'cy2_I_rec_h_loss'", "]", ",", "h_g", ".", "history", "[", "'cy1_I_rec_d_loss'", "]", "]", ")", "\n", "g_dis_d_mask_loss", "=", "np", ".", "mean", "(", "h_g", ".", "history", "[", "'cy1_dis_M_seg_d_loss'", "]", ")", "\n", "epoch_loss", "[", "'g_dis_pse_image_loss'", "]", ".", "append", "(", "g_dis_pse_image_loss", ")", "\n", "epoch_loss", "[", "'g_rec_image_loss'", "]", ".", "append", "(", "g_rec_image_loss", ")", "\n", "epoch_loss", "[", "'g_dis_d_mask_loss'", "]", ".", "append", "(", "g_dis_d_mask_loss", ")", "\n", "# print(h_g.history)", "\n", "# Plot the progress", "\n", "", "progress_bar", ".", "update", "(", "(", "batch", "+", "1", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "\n", "\n", "", "for", "n", "in", "loss_names", ":", "\n", "                ", "epoch_loss_list", ".", "append", "(", "(", "n", ",", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", ")", "\n", "total_loss", "[", "n", "]", ".", "append", "(", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", "\n", "\n", "", "for", "n", "in", "loss_names", ":", "\n", "                ", "epoch_loss_list", ".", "append", "(", "(", "n", ",", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", ")", "\n", "total_loss", "[", "n", "]", ".", "append", "(", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", "\n", "\n", "", "log", ".", "info", "(", "str", "(", "'Epoch %d/%d: '", "+", "', '", ".", "join", "(", "[", "l", "+", "' Loss = %.3f'", "for", "l", "in", "loss_names", "]", ")", ")", "%", "\n", "(", "(", "epoch", ",", "self", ".", "conf", ".", "epochs", ")", "+", "tuple", "(", "total_loss", "[", "l", "]", "[", "-", "1", "]", "for", "l", "in", "loss_names", ")", ")", ")", "\n", "logs", "=", "{", "l", ":", "total_loss", "[", "l", "]", "[", "-", "1", "]", "for", "l", "in", "loss_names", "}", "\n", "\n", "cl", ".", "model", "=", "self", ".", "model", ".", "D_pse_h", "\n", "cl", ".", "model", ".", "stop_training", "=", "False", "\n", "cl", ".", "on_epoch_end", "(", "epoch", ",", "logs", ")", "\n", "sl", ".", "on_epoch_end", "(", "epoch", ",", "logs", ")", "\n", "pool_to_print_p_img", "=", "np", ".", "asarray", "(", "pool_to_print_p_img", ")", "\n", "pool_to_print_p_msk", "=", "np", ".", "asarray", "(", "pool_to_print_p_msk", ")", "\n", "pool_to_print_h_img", "=", "np", ".", "asarray", "(", "pool_to_print_h_img", ")", "\n", "pool_to_print_h_msk", "=", "np", ".", "asarray", "(", "pool_to_print_h_msk", ")", "\n", "print", "(", "\"pool_to_print_p_img: \"", ",", "np", ".", "shape", "(", "pool_to_print_p_img", ")", ")", "\n", "img_clb", ".", "on_epoch_end", "(", "epoch", ",", "pool_to_print_p_img", ",", "pool_to_print_p_msk", ",", "\n", "pool_to_print_h_img", ",", "pool_to_print_h_msk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.__init__": [[16, 18], ["model_executor.basic_executor.Executor.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conf", ",", "model", "=", "None", ",", "comet_exp", "=", "None", ")", ":", "\n", "        ", "super", "(", "pseudo_healthy_unsupervised_executor", ",", "self", ")", ".", "__init__", "(", "conf", ",", "model", ",", "comet_exp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.init_train_data": [[19, 37], ["loader.data_loader.data_loader.data_loader.data_loader", "loader.data_loader.data_loader.data_loader.data_loader.load_data", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "len", "int", "int", "int", "int", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.data_loader.data_loader.load_data"], ["", "def", "init_train_data", "(", "self", ")", ":", "\n", "        ", "loader", "=", "data_loader", "(", ")", "\n", "p_images", ",", "p_masks", ",", "h_images", ",", "h_masks", ",", "_", ",", "_", ",", "_", ",", "_", "=", "loader", ".", "load_data", "(", "\n", "dataset", "=", "self", ".", "conf", ".", "dataset", ",", "\n", "modality", "=", "self", ".", "conf", ".", "modality", ",", "\n", "split", "=", "self", ".", "conf", ".", "modality", ")", "\n", "\n", "p_images", "=", "p_images", "[", "0", ":", "int", "(", "(", "len", "(", "p_images", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "p_masks", "=", "p_masks", "[", "0", ":", "int", "(", "(", "len", "(", "p_masks", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "h_images", "=", "h_images", "[", "0", ":", "int", "(", "(", "len", "(", "h_images", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "h_masks", "=", "h_masks", "[", "0", ":", "int", "(", "(", "len", "(", "h_masks", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "\n", "self", ".", "p_images", "=", "np", ".", "expand_dims", "(", "p_images", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "p_masks", "=", "np", ".", "expand_dims", "(", "p_masks", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "h_images", "=", "np", ".", "expand_dims", "(", "h_images", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "h_masks", "=", "np", ".", "expand_dims", "(", "h_masks", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "conf", ".", "data_len", "=", "len", "(", "h_images", ")", "\n", "del", "p_images", ",", "p_masks", ",", "h_images", ",", "h_masks", "\n", "", "def", "get_loss_names", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.get_loss_names": [[37, 41], ["None"], "methods", ["None"], ["", "def", "get_loss_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"d_dis_pse_image_loss\"", ",", "\"d_dis_r_image_loss\"", ",", "\"d_gp_loss\"", ",", "\"d_dis_d_mask_loss\"", ",", "\n", "\"g_dis_pse_image_loss\"", ",", "\"g_rec_image_loss\"", ",", "\"g_dis_d_mask_loss\"", ",", "\n", "\"test_self_rec_loss\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.train": [[42, 185], ["pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.init_train_data", "pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.get_datagen_params", "keras.preprocessing.image.ImageDataGenerator().flow", "keras.preprocessing.image.ImageDataGenerator().flow", "keras.preprocessing.image.ImageDataGenerator().flow", "int", "keras.utils.Progbar", "callbacks.loss_callback.SaveLoss", "keras.callbacks.CSVLogger", "keras.callbacks.CSVLogger.on_train_begin", "callbacks.image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup", "pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.get_loss_names", "range", "numpy.ceil", "log.info", "range", "log.info", "keras.callbacks.CSVLogger.on_epoch_end", "callbacks.loss_callback.SaveLoss.on_epoch_end", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "print", "callbacks.image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.on_epoch_end", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator", "next", "next", "next", "numpy.ones", "numpy.zeros", "numpy.ones", "pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.model.G_d_to_h.predict", "pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.model.S_d_to_msk.predict", "pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.model.G_h_to_d.predict", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "epoch_loss[].append", "epoch_loss[].append", "epoch_loss[].append", "epoch_loss[].append", "pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.model.gan.fit", "numpy.mean", "numpy.mean", "numpy.mean", "epoch_loss[].append", "epoch_loss[].append", "epoch_loss[].append", "keras.utils.Progbar.update", "epoch_loss_list.append", "total_loss[].append", "epoch_loss_list.append", "total_loss[].append", "numpy.shape", "len", "numpy.asarray.append", "numpy.asarray.append", "len", "numpy.asarray.append", "numpy.asarray.append", "numpy.ones", "pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.model.train_self_rec.fit", "epoch_loss[].append", "epoch_loss[].append", "range", "range", "numpy.mean", "numpy.mean", "str", "numpy.mean", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.model.critic_model.fit", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "pseudo_healthy_unsupervised_executor.pseudo_healthy_unsupervised_executor.model.critic_model.fit", "numpy.mean", "numpy.mean", "tuple"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.init_train_data", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.get_datagen_params", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.get_loss_names", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "init_train_data", "(", ")", "\n", "# make genetrated data", "\n", "gen_dict", "=", "self", ".", "get_datagen_params", "(", ")", "\n", "p_gen", "=", "ImageDataGenerator", "(", "**", "gen_dict", ")", ".", "flow", "(", "x", "=", "self", ".", "p_images", ",", "y", "=", "self", ".", "p_masks", ",", "batch_size", "=", "self", ".", "conf", ".", "batch_size", ")", "\n", "h_gen", "=", "ImageDataGenerator", "(", "**", "gen_dict", ")", ".", "flow", "(", "x", "=", "self", ".", "h_images", ",", "y", "=", "self", ".", "h_masks", ",", "batch_size", "=", "self", ".", "conf", ".", "batch_size", ")", "\n", "random_p_masks", "=", "ImageDataGenerator", "(", "**", "gen_dict", ")", ".", "flow", "(", "x", "=", "self", ".", "p_masks", ",", "batch_size", "=", "self", ".", "conf", ".", "batch_size", ")", "\n", "\n", "# initialize training", "\n", "batches", "=", "int", "(", "np", ".", "ceil", "(", "self", ".", "conf", ".", "data_len", "/", "self", ".", "conf", ".", "batch_size", ")", ")", "\n", "progress_bar", "=", "Progbar", "(", "target", "=", "batches", "*", "self", ".", "conf", ".", "batch_size", ")", "\n", "\n", "sl", "=", "SaveLoss", "(", "self", ".", "conf", ".", "folder", ")", "\n", "cl", "=", "CSVLogger", "(", "self", ".", "conf", ".", "folder", "+", "'/training.csv'", ")", "\n", "cl", ".", "on_train_begin", "(", ")", "\n", "img_clb", "=", "ImageCallback", "(", "self", ".", "conf", ",", "self", ".", "model", ",", "self", ".", "comet_exp", ")", "\n", "\n", "loss_names", "=", "self", ".", "get_loss_names", "(", ")", "\n", "total_loss", "=", "{", "n", ":", "[", "]", "for", "n", "in", "loss_names", "}", "\n", "\n", "# start training", "\n", "for", "epoch", "in", "range", "(", "self", ".", "conf", ".", "epochs", ")", ":", "\n", "            ", "log", ".", "info", "(", "\"Train epoch %d/%d\"", "%", "(", "epoch", ",", "self", ".", "conf", ".", "epochs", ")", ")", "\n", "epoch_loss", "=", "{", "n", ":", "[", "]", "for", "n", "in", "loss_names", "}", "\n", "epoch_loss_list", "=", "[", "]", "\n", "pool_to_print_p_img", ",", "pool_to_print_p_msk", ",", "pool_to_print_h_img", ",", "pool_to_print_h_msk", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "for", "batch", "in", "range", "(", "batches", ")", ":", "\n", "                ", "p_img", ",", "p_msk", "=", "next", "(", "p_gen", ")", "\n", "h_img", ",", "h_msk", "=", "next", "(", "h_gen", ")", "\n", "r_p_msk", "=", "next", "(", "random_p_masks", ")", "\n", "\n", "if", "len", "(", "pool_to_print_p_img", ")", "<", "30", ":", "\n", "                    ", "pool_to_print_p_img", ".", "append", "(", "p_img", "[", "0", "]", ")", "\n", "pool_to_print_p_msk", ".", "append", "(", "p_msk", "[", "0", "]", ")", "\n", "\n", "\n", "", "if", "len", "(", "pool_to_print_h_img", ")", "<", "30", ":", "\n", "                    ", "pool_to_print_h_img", ".", "append", "(", "h_img", "[", "0", "]", ")", "\n", "pool_to_print_h_msk", ".", "append", "(", "h_msk", "[", "0", "]", ")", "\n", "\n", "# Adversarial ground truths", "\n", "", "real_pred", "=", "-", "np", ".", "ones", "(", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "fake_pred", "=", "np", ".", "ones", "(", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "dummy", "=", "np", ".", "zeros", "(", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "dummy_Img", "=", "np", ".", "ones", "(", "h_img", ".", "shape", ")", "\n", "\n", "if", "self", ".", "conf", ".", "self_rec", ":", "\n", "                    ", "h_test_sr", "=", "self", ".", "model", ".", "train_self_rec", ".", "fit", "(", "[", "h_img", ",", "h_msk", "]", ",", "[", "h_img", ",", "h_img", "]", ",", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "epoch_loss", "[", "\"test_self_rec_loss\"", "]", ".", "append", "(", "np", ".", "mean", "(", "h_test_sr", ".", "history", "[", "\"loss\"", "]", ")", ")", "\n", "", "else", ":", "\n", "                    ", "epoch_loss", "[", "\"test_self_rec_loss\"", "]", ".", "append", "(", "0", ")", "\n", "\n", "# ---------------------", "\n", "#  Train Discriminator", "\n", "# ---------------------", "\n", "# Get a group of synthetic msks and imgs", "\n", "", "cy1_pse_h_img", "=", "self", ".", "model", ".", "G_d_to_h", ".", "predict", "(", "p_img", ")", "\n", "cy1_seg_d_msk", "=", "self", ".", "model", ".", "S_d_to_msk", ".", "predict", "(", "p_img", ")", "\n", "cy2_fake_h_img", "=", "self", ".", "model", ".", "G_h_to_d", ".", "predict", "(", "[", "h_img", ",", "h_msk", "]", ")", "\n", "\n", "if", "epoch", "<", "25", ":", "\n", "                    ", "for", "_", "in", "range", "(", "self", ".", "conf", ".", "ncritic", "[", "0", "]", ")", ":", "\n", "                        ", "cy1_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy1_average", "=", "cy1_epsilon", "*", "h_img", "+", "(", "1", "-", "cy1_epsilon", ")", "*", "cy1_pse_h_img", "\n", "\n", "cy1_epsilon_msk", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy1_average_msk", "=", "cy1_epsilon_msk", "*", "r_p_msk", "+", "(", "1", "-", "cy1_epsilon", ")", "*", "cy1_seg_d_msk", "\n", "\n", "cy2_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy2_average", "=", "cy2_epsilon", "*", "h_img", "+", "(", "1", "-", "cy2_epsilon", ")", "*", "cy2_fake_h_img", "\n", "\n", "h_d", "=", "self", ".", "model", ".", "critic_model", ".", "fit", "(", "[", "h_img", ",", "cy1_pse_h_img", ",", "cy1_average", ",", "\n", "r_p_msk", ",", "cy1_seg_d_msk", ",", "cy1_average_msk", ",", "\n", "h_img", ",", "cy2_fake_h_img", ",", "cy2_average", "]", ",", "\n", "[", "real_pred", ",", "fake_pred", ",", "dummy", ",", "real_pred", ",", "fake_pred", ",", "dummy", ",", "\n", "real_pred", ",", "fake_pred", ",", "dummy", "]", ",", "\n", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "", "", "else", ":", "\n", "                    ", "for", "_", "in", "range", "(", "self", ".", "conf", ".", "ncritic", "[", "1", "]", ")", ":", "\n", "                        ", "cy1_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy1_average", "=", "cy1_epsilon", "*", "h_img", "+", "(", "1", "-", "cy1_epsilon", ")", "*", "cy1_pse_h_img", "\n", "\n", "cy1_epsilon_msk", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy1_average_msk", "=", "cy1_epsilon_msk", "*", "r_p_msk", "+", "(", "1", "-", "cy1_epsilon", ")", "*", "cy1_seg_d_msk", "\n", "\n", "cy2_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy2_average", "=", "cy2_epsilon", "*", "h_img", "+", "(", "1", "-", "cy2_epsilon", ")", "*", "cy2_fake_h_img", "\n", "\n", "h_d", "=", "self", ".", "model", ".", "critic_model", ".", "fit", "(", "[", "h_img", ",", "cy1_pse_h_img", ",", "cy1_average", ",", "\n", "r_p_msk", ",", "cy1_seg_d_msk", ",", "cy1_average_msk", ",", "\n", "h_img", ",", "cy2_fake_h_img", ",", "cy2_average", "]", ",", "\n", "[", "real_pred", ",", "fake_pred", ",", "dummy", ",", "real_pred", ",", "fake_pred", ",", "dummy", ",", "\n", "real_pred", ",", "fake_pred", ",", "dummy", "]", ",", "\n", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "# print(h_d.history)", "\n", "", "", "d_dis_pse_image_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'dis_cy1_I_pse_h_loss'", "]", ",", "h_d", ".", "history", "[", "'dis_cy2_I_pse_h_loss'", "]", "]", ")", "\n", "d_dis_r_image_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'dis_cy1_I_h_loss'", "]", ",", "h_d", ".", "history", "[", "'dis_cy2_I_h_loss'", "]", "]", ")", "\n", "d_dis_d_mask_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'dis_cy1_M_d_loss'", "]", ",", "h_d", ".", "history", "[", "'dis_cy1_M_seg_d_loss'", "]", "]", ")", "\n", "d_gp_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'gp_cy1_I_h_loss'", "]", ",", "h_d", ".", "history", "[", "'gp_cy2_I_h_loss'", "]", ",", "h_d", ".", "history", "[", "'gp_cy1_M_d_loss'", "]", "]", ")", "\n", "epoch_loss", "[", "'d_dis_pse_image_loss'", "]", ".", "append", "(", "d_dis_pse_image_loss", ")", "\n", "epoch_loss", "[", "'d_dis_r_image_loss'", "]", ".", "append", "(", "d_dis_r_image_loss", ")", "\n", "epoch_loss", "[", "'d_dis_d_mask_loss'", "]", ".", "append", "(", "d_dis_d_mask_loss", ")", "\n", "epoch_loss", "[", "'d_gp_loss'", "]", ".", "append", "(", "d_gp_loss", ")", "\n", "\n", "# --------------------", "\n", "#  Train Generator", "\n", "# --------------------", "\n", "\n", "h_g", "=", "self", ".", "model", ".", "gan", ".", "fit", "(", "[", "p_img", ",", "h_img", ",", "h_msk", "]", ",", "[", "real_pred", ",", "real_pred", ",", "p_img", ",", "real_pred", ",", "h_img", ",", "h_msk", "]", ",", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "g_dis_pse_image_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'cy1_dis_I_pse_h_loss'", "]", ",", "h_g", ".", "history", "[", "'cy2_dis_I_pse_d_loss'", "]", "]", ")", "\n", "g_rec_image_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'cy2_I_rec_h_loss'", "]", ",", "h_g", ".", "history", "[", "'cy1_I_rec_d_loss'", "]", "]", ")", "\n", "g_dis_d_mask_loss", "=", "np", ".", "mean", "(", "h_g", ".", "history", "[", "'cy1_dis_M_seg_d_loss'", "]", ")", "\n", "epoch_loss", "[", "'g_dis_pse_image_loss'", "]", ".", "append", "(", "g_dis_pse_image_loss", ")", "\n", "epoch_loss", "[", "'g_rec_image_loss'", "]", ".", "append", "(", "g_rec_image_loss", ")", "\n", "epoch_loss", "[", "'g_dis_d_mask_loss'", "]", ".", "append", "(", "g_dis_d_mask_loss", ")", "\n", "# print(h_g.history)", "\n", "# Plot the progress", "\n", "progress_bar", ".", "update", "(", "(", "batch", "+", "1", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "\n", "\n", "", "for", "n", "in", "loss_names", ":", "\n", "                ", "epoch_loss_list", ".", "append", "(", "(", "n", ",", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", ")", "\n", "total_loss", "[", "n", "]", ".", "append", "(", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", "\n", "\n", "", "for", "n", "in", "loss_names", ":", "\n", "                ", "epoch_loss_list", ".", "append", "(", "(", "n", ",", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", ")", "\n", "total_loss", "[", "n", "]", ".", "append", "(", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", "\n", "\n", "", "log", ".", "info", "(", "str", "(", "'Epoch %d/%d: '", "+", "', '", ".", "join", "(", "[", "l", "+", "' Loss = %.3f'", "for", "l", "in", "loss_names", "]", ")", ")", "%", "\n", "(", "(", "epoch", ",", "self", ".", "conf", ".", "epochs", ")", "+", "tuple", "(", "total_loss", "[", "l", "]", "[", "-", "1", "]", "for", "l", "in", "loss_names", ")", ")", ")", "\n", "logs", "=", "{", "l", ":", "total_loss", "[", "l", "]", "[", "-", "1", "]", "for", "l", "in", "loss_names", "}", "\n", "\n", "cl", ".", "model", "=", "self", ".", "model", ".", "D_pse_h", "\n", "cl", ".", "model", ".", "stop_training", "=", "False", "\n", "cl", ".", "on_epoch_end", "(", "epoch", ",", "logs", ")", "\n", "sl", ".", "on_epoch_end", "(", "epoch", ",", "logs", ")", "\n", "pool_to_print_p_img", "=", "np", ".", "asarray", "(", "pool_to_print_p_img", ")", "\n", "pool_to_print_p_msk", "=", "np", ".", "asarray", "(", "pool_to_print_p_msk", ")", "\n", "pool_to_print_h_img", "=", "np", ".", "asarray", "(", "pool_to_print_h_img", ")", "\n", "pool_to_print_h_msk", "=", "np", ".", "asarray", "(", "pool_to_print_h_msk", ")", "\n", "print", "(", "\"pool_to_print_p_img: \"", ",", "np", ".", "shape", "(", "pool_to_print_p_img", ")", ")", "\n", "img_clb", ".", "on_epoch_end", "(", "epoch", ",", "pool_to_print_p_img", ",", "pool_to_print_p_msk", ",", "\n", "pool_to_print_h_img", ",", "pool_to_print_h_msk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.__init__": [[8, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "conf", ",", "model", ",", "comet_exp", "=", "None", ")", ":", "\n", "        ", "self", ".", "conf", "=", "conf", "\n", "self", ".", "model", "=", "model", "\n", "# self.loader = loader_BraTs(self.conf)", "\n", "self", ".", "epoch", "=", "0", "\n", "self", ".", "models_folder", "=", "self", ".", "conf", ".", "folder", "+", "\"/models\"", "\n", "self", ".", "train_data", "=", "None", "\n", "self", ".", "valid_data", "=", "None", "\n", "self", ".", "train_folder", "=", "None", "\n", "self", ".", "experiment", "=", "None", "\n", "self", ".", "comet_exp", "=", "comet_exp", "\n", "", "@", "abstractmethod", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.init_train_data": [[19, 22], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "init_train_data", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.get_loss_names": [[23, 26], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_loss_names", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.train": [[27, 30], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "train", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.test": [[31, 37], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "test", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Evaluate a model on the test data.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.validate": [[38, 41], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "validate", "(", "self", ",", "epoch_loss", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.stop_criterion": [[42, 44], ["None"], "methods", ["None"], ["", "def", "stop_criterion", "(", "self", ",", "es", ",", "logs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.get_datagen_params": [[45, 55], ["dict", "dict"], "methods", ["None"], ["", "def", "get_datagen_params", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Construct a dictionary of augmentations.\n        :return: a dictionary of augmentation parameters to use with a keras image processor\n        \"\"\"", "\n", "if", "self", ".", "conf", ".", "augment", ":", "\n", "            ", "return", "dict", "(", "horizontal_flip", "=", "True", ",", "vertical_flip", "=", "False", ",", "rotation_range", "=", "5", ",", "\n", "width_shift_range", "=", "0", ",", "height_shift_range", "=", "0", ")", "#fill_mode=\"constant\", cval=cval)", "\n", "", "else", ":", "\n", "            ", "return", "dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.__init__": [[18, 20], ["model_executor.basic_executor.Executor.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conf", ",", "model", "=", "None", ",", "comet_exp", "=", "None", ")", ":", "\n", "        ", "super", "(", "pseudo_healthy_supervised_executor", ",", "self", ")", ".", "__init__", "(", "conf", ",", "model", ",", "comet_exp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.init_train_data": [[21, 39], ["loader.data_loader.data_loader.data_loader.data_loader", "loader.data_loader.data_loader.data_loader.data_loader.load_data", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "len", "int", "int", "int", "int", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.data_loader.data_loader.load_data"], ["", "def", "init_train_data", "(", "self", ")", ":", "\n", "        ", "loader", "=", "data_loader", "(", ")", "\n", "p_images", ",", "p_masks", ",", "h_images", ",", "h_masks", ",", "_", ",", "_", ",", "_", ",", "_", "=", "loader", ".", "load_data", "(", "\n", "dataset", "=", "self", ".", "conf", ".", "dataset", ",", "\n", "modality", "=", "self", ".", "conf", ".", "modality", ",", "\n", "split", "=", "self", ".", "conf", ".", "modality", ")", "\n", "\n", "p_images", "=", "p_images", "[", "0", ":", "int", "(", "(", "len", "(", "p_images", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "p_masks", "=", "p_masks", "[", "0", ":", "int", "(", "(", "len", "(", "p_masks", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "h_images", "=", "h_images", "[", "0", ":", "int", "(", "(", "len", "(", "h_images", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "h_masks", "=", "h_masks", "[", "0", ":", "int", "(", "(", "len", "(", "h_masks", ")", "//", "self", ".", "conf", ".", "batch_size", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "]", "\n", "\n", "self", ".", "p_images", "=", "np", ".", "expand_dims", "(", "p_images", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "p_masks", "=", "np", ".", "expand_dims", "(", "p_masks", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "h_images", "=", "np", ".", "expand_dims", "(", "h_images", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "h_masks", "=", "np", ".", "expand_dims", "(", "h_masks", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "conf", ".", "data_len", "=", "len", "(", "h_images", ")", "\n", "del", "p_images", ",", "p_masks", ",", "h_images", ",", "h_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.get_loss_names": [[40, 43], ["None"], "methods", ["None"], ["", "def", "get_loss_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"d_dis_pse_image_loss\"", ",", "\"d_dis_r_image_loss\"", ",", "\"d_gp_loss\"", ",", "\n", "\"g_dis_pse_image_loss\"", ",", "\"g_rec_image_loss\"", ",", "\"g_seg_mask_loss\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.train": [[44, 168], ["pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.init_train_data", "pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.get_datagen_params", "keras.preprocessing.image.ImageDataGenerator().flow", "keras.preprocessing.image.ImageDataGenerator().flow", "int", "keras.utils.Progbar", "callbacks.loss_callback.SaveLoss", "keras.callbacks.CSVLogger", "keras.callbacks.CSVLogger.on_train_begin", "callbacks.image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup", "pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.get_loss_names", "range", "numpy.ceil", "log.info", "range", "log.info", "keras.callbacks.CSVLogger.on_epoch_end", "callbacks.loss_callback.SaveLoss.on_epoch_end", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "print", "callbacks.image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.on_epoch_end", "keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator", "next", "next", "numpy.ones", "numpy.zeros", "numpy.ones", "pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.model.G_d_to_h.predict", "pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.model.G_h_to_d.predict", "numpy.mean", "numpy.mean", "numpy.mean", "epoch_loss[].append", "epoch_loss[].append", "epoch_loss[].append", "pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.model.gan.fit", "numpy.mean", "numpy.mean", "numpy.mean", "epoch_loss[].append", "epoch_loss[].append", "epoch_loss[].append", "keras.utils.Progbar.update", "epoch_loss_list.append", "total_loss[].append", "epoch_loss_list.append", "total_loss[].append", "numpy.shape", "len", "numpy.asarray.append", "numpy.asarray.append", "len", "numpy.asarray.append", "numpy.asarray.append", "numpy.ones", "range", "range", "numpy.mean", "numpy.mean", "str", "numpy.random.uniform", "numpy.random.uniform", "pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.model.critic_model.fit", "numpy.random.uniform", "numpy.random.uniform", "pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.model.critic_model.fit", "numpy.mean", "numpy.mean", "tuple"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.init_train_data", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.basic_executor.Executor.get_datagen_params", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.model_executor.pseudo_healthy_supervised_executor.pseudo_healthy_supervised_executor.get_loss_names", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "init_train_data", "(", ")", "\n", "# make genetrated data", "\n", "gen_dict", "=", "self", ".", "get_datagen_params", "(", ")", "\n", "p_gen", "=", "ImageDataGenerator", "(", "**", "gen_dict", ")", ".", "flow", "(", "x", "=", "self", ".", "p_images", ",", "y", "=", "self", ".", "p_masks", ",", "batch_size", "=", "self", ".", "conf", ".", "batch_size", ")", "\n", "h_gen", "=", "ImageDataGenerator", "(", "**", "gen_dict", ")", ".", "flow", "(", "x", "=", "self", ".", "h_images", ",", "y", "=", "self", ".", "h_masks", ",", "batch_size", "=", "self", ".", "conf", ".", "batch_size", ")", "\n", "\n", "# initialize training", "\n", "batches", "=", "int", "(", "np", ".", "ceil", "(", "self", ".", "conf", ".", "data_len", "/", "self", ".", "conf", ".", "batch_size", ")", ")", "\n", "progress_bar", "=", "Progbar", "(", "target", "=", "batches", "*", "self", ".", "conf", ".", "batch_size", ")", "\n", "\n", "sl", "=", "SaveLoss", "(", "self", ".", "conf", ".", "folder", ")", "\n", "cl", "=", "CSVLogger", "(", "self", ".", "conf", ".", "folder", "+", "'/training.csv'", ")", "\n", "cl", ".", "on_train_begin", "(", ")", "\n", "img_clb", "=", "ImageCallback", "(", "self", ".", "conf", ",", "self", ".", "model", ",", "self", ".", "comet_exp", ")", "\n", "\n", "loss_names", "=", "self", ".", "get_loss_names", "(", ")", "\n", "total_loss", "=", "{", "n", ":", "[", "]", "for", "n", "in", "loss_names", "}", "\n", "\n", "# start training", "\n", "for", "epoch", "in", "range", "(", "self", ".", "conf", ".", "epochs", ")", ":", "\n", "            ", "log", ".", "info", "(", "\"Train epoch %d/%d\"", "%", "(", "epoch", ",", "self", ".", "conf", ".", "epochs", ")", ")", "\n", "epoch_loss", "=", "{", "n", ":", "[", "]", "for", "n", "in", "loss_names", "}", "\n", "epoch_loss_list", "=", "[", "]", "\n", "pool_to_print_p_img", ",", "pool_to_print_p_msk", ",", "pool_to_print_h_img", ",", "pool_to_print_h_msk", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "for", "batch", "in", "range", "(", "batches", ")", ":", "\n", "                ", "p_img", ",", "p_msk", "=", "next", "(", "p_gen", ")", "\n", "h_img", ",", "h_msk", "=", "next", "(", "h_gen", ")", "\n", "\n", "if", "len", "(", "pool_to_print_p_img", ")", "<", "30", ":", "\n", "                    ", "pool_to_print_p_img", ".", "append", "(", "p_img", "[", "0", "]", ")", "\n", "pool_to_print_p_msk", ".", "append", "(", "p_msk", "[", "0", "]", ")", "\n", "\n", "\n", "", "if", "len", "(", "pool_to_print_h_img", ")", "<", "30", ":", "\n", "                    ", "pool_to_print_h_img", ".", "append", "(", "h_img", "[", "0", "]", ")", "\n", "pool_to_print_h_msk", ".", "append", "(", "h_msk", "[", "0", "]", ")", "\n", "\n", "# Adversarial ground truths", "\n", "", "real_pred", "=", "-", "np", ".", "ones", "(", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "fake_pred", "=", "np", ".", "ones", "(", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "dummy", "=", "np", ".", "zeros", "(", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", "dummy_Img", "=", "np", ".", "ones", "(", "h_img", ".", "shape", ")", "\n", "\n", "# ---------------------", "\n", "#  Train Discriminator", "\n", "# ---------------------", "\n", "# Get a group of synthetic msks and imgs", "\n", "cy1_pse_h_img", "=", "self", ".", "model", ".", "G_d_to_h", ".", "predict", "(", "p_img", ")", "\n", "cy2_fake_h_img", "=", "self", ".", "model", ".", "G_h_to_d", ".", "predict", "(", "[", "h_img", ",", "h_msk", "]", ")", "\n", "\n", "if", "epoch", "<", "25", ":", "\n", "                    ", "for", "_", "in", "range", "(", "self", ".", "conf", ".", "ncritic", "[", "0", "]", ")", ":", "\n", "                        ", "cy1_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy1_average", "=", "cy1_epsilon", "*", "h_img", "+", "(", "1", "-", "cy1_epsilon", ")", "*", "cy1_pse_h_img", "\n", "\n", "cy2_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy2_average", "=", "cy2_epsilon", "*", "h_img", "+", "(", "1", "-", "cy2_epsilon", ")", "*", "cy2_fake_h_img", "\n", "\n", "h_d", "=", "self", ".", "model", ".", "critic_model", ".", "fit", "(", "[", "h_img", ",", "cy1_pse_h_img", ",", "cy1_average", ",", "\n", "h_img", ",", "cy2_fake_h_img", ",", "cy2_average", "]", ",", "\n", "[", "real_pred", ",", "fake_pred", ",", "dummy", ",", "real_pred", ",", "fake_pred", ",", "dummy", "]", ",", "\n", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "", "", "else", ":", "\n", "                    ", "for", "_", "in", "range", "(", "self", ".", "conf", ".", "ncritic", "[", "1", "]", ")", ":", "\n", "                        ", "cy1_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy1_average", "=", "cy1_epsilon", "*", "h_img", "+", "(", "1", "-", "cy1_epsilon", ")", "*", "cy1_pse_h_img", "\n", "\n", "cy2_epsilon", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "size", "=", "(", "h_img", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "cy2_average", "=", "cy2_epsilon", "*", "h_img", "+", "(", "1", "-", "cy2_epsilon", ")", "*", "cy2_fake_h_img", "\n", "\n", "h_d", "=", "self", ".", "model", ".", "critic_model", ".", "fit", "(", "[", "h_img", ",", "cy1_pse_h_img", ",", "cy1_average", ",", "\n", "h_img", ",", "cy2_fake_h_img", ",", "cy2_average", "]", ",", "\n", "[", "real_pred", ",", "fake_pred", ",", "dummy", ",", "real_pred", ",", "fake_pred", ",", "dummy", "]", ",", "\n", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "# print(h_d.history)", "\n", "", "", "d_dis_pse_image_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'dis_cy1_I_pse_h_loss'", "]", ",", "h_d", ".", "history", "[", "'dis_cy2_I_pse_h_loss'", "]", "]", ")", "\n", "d_dis_r_image_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'dis_cy1_I_h_loss'", "]", ",", "h_d", ".", "history", "[", "'dis_cy2_I_h_loss'", "]", "]", ")", "\n", "d_gp_loss", "=", "np", ".", "mean", "(", "[", "h_d", ".", "history", "[", "'gp_cy1_I_h_loss'", "]", ",", "h_d", ".", "history", "[", "'gp_cy2_I_h_loss'", "]", "]", ")", "\n", "epoch_loss", "[", "'d_dis_pse_image_loss'", "]", ".", "append", "(", "d_dis_pse_image_loss", ")", "\n", "epoch_loss", "[", "'d_dis_r_image_loss'", "]", ".", "append", "(", "d_dis_r_image_loss", ")", "\n", "epoch_loss", "[", "'d_gp_loss'", "]", ".", "append", "(", "d_gp_loss", ")", "\n", "\n", "# --------------------", "\n", "#  Train Generator", "\n", "# --------------------", "\n", "\n", "\n", "h_g", "=", "self", ".", "model", ".", "gan", ".", "fit", "(", "[", "p_img", ",", "h_img", ",", "h_msk", "]", ",", "[", "real_pred", ",", "p_msk", ",", "p_img", ",", "real_pred", ",", "h_img", ",", "h_msk", "]", ",", "\n", "epochs", "=", "1", ",", "verbose", "=", "0", ")", "\n", "g_dis_pse_image_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'cy1_dis_I_pse_h_loss'", "]", ",", "h_g", ".", "history", "[", "'cy2_dis_I_pse_d_loss'", "]", "]", ")", "\n", "g_rec_image_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'cy2_I_rec_h_loss'", "]", ",", "h_g", ".", "history", "[", "'cy1_I_rec_d_loss'", "]", "]", ")", "\n", "g_seg_mask_loss", "=", "np", ".", "mean", "(", "[", "h_g", ".", "history", "[", "'cy1_M_seg_d_loss'", "]", ",", "h_g", ".", "history", "[", "'cy2_I_rec_h_loss'", "]", "]", ")", "\n", "epoch_loss", "[", "'g_dis_pse_image_loss'", "]", ".", "append", "(", "g_dis_pse_image_loss", ")", "\n", "epoch_loss", "[", "'g_rec_image_loss'", "]", ".", "append", "(", "g_rec_image_loss", ")", "\n", "epoch_loss", "[", "'g_seg_mask_loss'", "]", ".", "append", "(", "g_seg_mask_loss", ")", "\n", "# print(h_g.history)", "\n", "# Plot the progress", "\n", "progress_bar", ".", "update", "(", "(", "batch", "+", "1", ")", "*", "self", ".", "conf", ".", "batch_size", ")", "\n", "\n", "", "for", "n", "in", "loss_names", ":", "\n", "                ", "epoch_loss_list", ".", "append", "(", "(", "n", ",", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", ")", "\n", "total_loss", "[", "n", "]", ".", "append", "(", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", "\n", "\n", "", "for", "n", "in", "loss_names", ":", "\n", "                ", "epoch_loss_list", ".", "append", "(", "(", "n", ",", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", ")", "\n", "total_loss", "[", "n", "]", ".", "append", "(", "np", ".", "mean", "(", "epoch_loss", "[", "n", "]", ")", ")", "\n", "\n", "", "log", ".", "info", "(", "str", "(", "'Epoch %d/%d: '", "+", "', '", ".", "join", "(", "[", "l", "+", "' Loss = %.3f'", "for", "l", "in", "loss_names", "]", ")", ")", "%", "\n", "(", "(", "epoch", ",", "self", ".", "conf", ".", "epochs", ")", "+", "tuple", "(", "total_loss", "[", "l", "]", "[", "-", "1", "]", "for", "l", "in", "loss_names", ")", ")", ")", "\n", "logs", "=", "{", "l", ":", "total_loss", "[", "l", "]", "[", "-", "1", "]", "for", "l", "in", "loss_names", "}", "\n", "\n", "cl", ".", "model", "=", "self", ".", "model", ".", "D_pse_h", "\n", "cl", ".", "model", ".", "stop_training", "=", "False", "\n", "cl", ".", "on_epoch_end", "(", "epoch", ",", "logs", ")", "\n", "sl", ".", "on_epoch_end", "(", "epoch", ",", "logs", ")", "\n", "pool_to_print_p_img", "=", "np", ".", "asarray", "(", "pool_to_print_p_img", ")", "\n", "pool_to_print_p_msk", "=", "np", ".", "asarray", "(", "pool_to_print_p_msk", ")", "\n", "pool_to_print_h_img", "=", "np", ".", "asarray", "(", "pool_to_print_h_img", ")", "\n", "pool_to_print_h_msk", "=", "np", ".", "asarray", "(", "pool_to_print_h_msk", ")", "\n", "print", "(", "\"pool_to_print_p_img: \"", ",", "np", ".", "shape", "(", "pool_to_print_p_img", ")", ")", "\n", "img_clb", ".", "on_epoch_end", "(", "epoch", ",", "pool_to_print_p_img", ",", "pool_to_print_p_msk", ",", "\n", "pool_to_print_h_img", ",", "pool_to_print_h_msk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block": [[13, 23], ["keras.layers.convolutional.Conv2D", "keras.layers.Activation", "keras.layers.convolutional.Conv2D", "keras.layers.Activation", "keras.layers.merge.Add", "keras.initializers.RandomNormal", "keras.initializers.RandomNormal"], "function", ["None"], ["def", "residual_block", "(", "l0", ",", "filters", ")", ":", "\n", "    ", "l", "=", "Conv2D", "(", "filters", "=", "filters", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", "\n", ")", "(", "l0", ")", "\n", "l", "=", "Activation", "(", "'relu'", ")", "(", "l", ")", "\n", "\n", "l", "=", "Conv2D", "(", "filters", "=", "filters", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "l", ")", "\n", "l", "=", "Activation", "(", "'relu'", ")", "(", "l", ")", "\n", "return", "Add", "(", ")", "(", "[", "l0", ",", "l", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn": [[24, 35], ["keras.layers.convolutional.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.convolutional.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.merge.Add", "keras.initializers.RandomNormal", "keras.initializers.RandomNormal"], "function", ["None"], ["", "def", "residual_block_bn", "(", "l0", ",", "filters", ")", ":", "\n", "    ", "l", "=", "Conv2D", "(", "filters", "=", "filters", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "l0", ")", "\n", "l", "=", "BatchNormalization", "(", ")", "(", "l", ")", "\n", "l", "=", "Activation", "(", "'relu'", ")", "(", "l", ")", "\n", "\n", "l", "=", "Conv2D", "(", "filters", "=", "filters", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "l", ")", "\n", "l", "=", "BatchNormalization", "(", ")", "(", "l", ")", "\n", "l", "=", "Activation", "(", "'relu'", ")", "(", "l", ")", "\n", "return", "Add", "(", ")", "(", "[", "l0", ",", "l", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.g_upsampling_bn": [[36, 44], ["keras.layers.UpSampling2D", "keras.layers.convolutional.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.initializers.RandomNormal"], "function", ["None"], ["", "def", "g_upsampling_bn", "(", "l0", ",", "filters", ")", ":", "\n", "    ", "l", "=", "UpSampling2D", "(", "size", "=", "2", ")", "(", "l0", ")", "\n", "l", "=", "Conv2D", "(", "filters", "=", "filters", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "l", ")", "\n", "l", "=", "BatchNormalization", "(", ")", "(", "l", ")", "\n", "l", "=", "Activation", "(", "'relu'", ")", "(", "l", ")", "\n", "\n", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.g_downsampling_bn": [[45, 54], ["keras.layers.convolutional.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.convolutional.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.initializers.RandomNormal", "keras.initializers.RandomNormal"], "function", ["None"], ["", "def", "g_downsampling_bn", "(", "l0", ",", "filters", ",", "kernal_size", "=", "3", ")", ":", "\n", "    ", "l", "=", "Conv2D", "(", "filters", ",", "kernel_size", "=", "kernal_size", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "l0", ")", "\n", "l", "=", "BatchNormalization", "(", ")", "(", "l", ")", "\n", "l", "=", "Activation", "(", "'relu'", ")", "(", "l", ")", "\n", "\n", "l", "=", "Conv2D", "(", "filters", ",", "kernel_size", "=", "kernal_size", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "l", ")", "\n", "l", "=", "BatchNormalization", "(", ")", "(", "l", ")", "\n", "l", "=", "Activation", "(", "'relu'", ")", "(", "l", ")", "\n", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.d_downsampling_bn": [[55, 60], ["keras.layers.convolutional.Conv2D", "keras.layers.BatchNormalization", "keras.layers.LeakyReLU", "keras.initializers.RandomNormal"], "function", ["None"], ["", "def", "d_downsampling_bn", "(", "l0", ",", "filters", ")", ":", "\n", "    ", "l", "=", "Conv2D", "(", "filters", "=", "filters", ",", "kernel_size", "=", "4", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "l0", ")", "\n", "l", "=", "BatchNormalization", "(", ")", "(", "l", ")", "\n", "l", "=", "LeakyReLU", "(", "0.2", ")", "(", "l", ")", "\n", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer_bn": [[61, 66], ["keras.layers.convolutional.Conv2D", "keras.layers.BatchNormalization", "keras.layers.LeakyReLU", "keras.initializers.RandomNormal"], "function", ["None"], ["", "def", "conv2D_layer_bn", "(", "l0", ",", "name", "=", "None", ",", "filters", "=", "32", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "activation", "=", "'relu'", ")", ":", "\n", "    ", "l", "=", "Conv2D", "(", "filters", "=", "filters", ",", "name", "=", "name", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "strides", ",", "padding", "=", "padding", ",", "\n", "activation", "=", "activation", ",", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "l0", ")", "\n", "l", "=", "BatchNormalization", "(", ")", "(", "l", ")", "\n", "return", "LeakyReLU", "(", "0.2", ")", "(", "l", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer": [[83, 88], ["keras.layers.convolutional.Conv2D"], "function", ["None"], ["", "def", "conv2D_layer", "(", "l0", ",", "name", "=", "None", ",", "filters", "=", "32", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "activation", "=", "'relu'", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ")", ":", "\n", "    ", "l", "=", "Conv2D", "(", "filters", "=", "filters", ",", "name", "=", "name", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "strides", ",", "padding", "=", "padding", ",", "\n", "activation", "=", "activation", ",", "kernel_initializer", "=", "kernel_initializer", ")", "(", "l0", ")", "\n", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.deconv2D_layer_bn": [[76, 82], ["keras.layers.convolutional.Conv2DTranspose", "keras.layers.BatchNormalization"], "function", ["None"], ["", "def", "deconv2D_layer_bn", "(", "l0", ",", "name", "=", "None", ",", "filters", "=", "32", ",", "kernel_size", "=", "3", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ",", "activation", "=", "'relu'", ",", "\n", "kernel_initializer", "=", "\"he_normal\"", ")", ":", "\n", "    ", "l", "=", "Conv2DTranspose", "(", "filters", "=", "filters", ",", "name", "=", "name", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "strides", ",", "padding", "=", "padding", ",", "\n", "activation", "=", "activation", ",", "kernel_initializer", "=", "kernel_initializer", ")", "(", "l0", ")", "\n", "l", "=", "BatchNormalization", "(", ")", "(", "l", ")", "\n", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.__init__": [[13, 21], ["keras.callbacks.Callback.__init__", "os.path.join", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["def", "__init__", "(", "self", ",", "conf", ",", "model", ",", "comet_exp", "=", "None", ")", ":", "\n", "        ", "super", "(", "ImageCallback_pseudo_healthy_sup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "folder", "=", "os", ".", "path", ".", "join", "(", "conf", ".", "folder", ",", "\"training_images\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "folder", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "folder", ")", "\n", "", "self", ".", "model", "=", "model", "\n", "self", ".", "comet_exp", "=", "comet_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.on_epoch_end": [[22, 117], ["image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.gan.save", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.critic_model.save", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.G_d_to_h.predict", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.S_d_to_msk.predict", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.G_h_to_d.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.savefig", "matplotlib.close", "matplotlib.close", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.G_h_to_d.predict", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.G_d_to_h.predict", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.S_d_to_msk.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.savefig", "matplotlib.close", "matplotlib.close", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_supervised.ImageCallback_pseudo_healthy_sup.model.D_pse_h.predict", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", "=", "None", ",", "p_img", "=", "None", ",", "p_msk", "=", "None", ",", "h_img", "=", "None", ",", "h_msk", "=", "None", ")", ":", "\n", "        ", "self", ".", "model", ".", "gan", ".", "save", "(", "self", ".", "folder", "+", "'/gan.h5df'", ")", "\n", "self", ".", "model", ".", "critic_model", ".", "save", "(", "self", ".", "folder", "+", "'/critic_model.h5df'", ")", "\n", "# Plot P_to_H images", "\n", "r", ",", "c", "=", "4", ",", "6", "\n", "\n", "pse_h_img", "=", "self", ".", "model", ".", "G_d_to_h", ".", "predict", "(", "p_img", ")", "\n", "seg_d_msk", "=", "self", ".", "model", ".", "S_d_to_msk", ".", "predict", "(", "p_img", ")", "\n", "rec_h_img", "=", "self", ".", "model", ".", "G_h_to_d", ".", "predict", "(", "[", "pse_h_img", ",", "seg_d_msk", "]", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "r", ")", ":", "\n", "            ", "axs", "[", "i", ",", "0", "]", ".", "set_title", "(", "\"p_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "[", "p_img", "[", "cnt", ":", "cnt", "+", "1", "]", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "1", "]", ".", "set_title", "(", "\"pse_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "pse_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "pse_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "pse_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "2", "]", ".", "set_title", "(", "\"seg_d_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "seg_d_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "seg_d_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "\n", "axs", "[", "i", ",", "3", "]", ".", "set_title", "(", "\"rec_d_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "rec_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "4", "]", ".", "set_title", "(", "\"r_p_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "5", "]", ".", "set_title", "(", "\"h_img \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "axis", "(", "\"off\"", ")", "\n", "cnt", "+=", "1", "\n", "\n", "", "fig", ".", "savefig", "(", "self", ".", "folder", "+", "\"/P_to_h_img_%d.png\"", "%", "epoch", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "# Plot H_to_P images", "\n", "r", ",", "c", "=", "4", ",", "6", "\n", "\n", "del", "pse_h_img", ",", "seg_d_msk", ",", "rec_h_img", "\n", "\n", "pse_d_img", "=", "self", ".", "model", ".", "G_h_to_d", ".", "predict", "(", "[", "h_img", ",", "h_msk", "]", ")", "\n", "rec_h_img", "=", "self", ".", "model", ".", "G_d_to_h", ".", "predict", "(", "pse_d_img", ")", "\n", "rec_h_msk", "=", "self", ".", "model", ".", "S_d_to_msk", ".", "predict", "(", "pse_d_img", ")", "\n", "\n", "plt", ".", "figure", "(", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "r", ")", ":", "\n", "            ", "axs", "[", "i", ",", "0", "]", ".", "set_title", "(", "\"h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "[", "h_img", "[", "cnt", ":", "cnt", "+", "1", "]", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "1", "]", ".", "set_title", "(", "\"h_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "2", "]", ".", "set_title", "(", "\"pse_d_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "pse_d_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "pse_d_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "pse_d_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "3", "]", ".", "set_title", "(", "\"rec_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "rec_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "4", "]", ".", "set_title", "(", "\"rec_h_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "5", "]", ".", "set_title", "(", "\"p_img \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "cnt", "+=", "1", "\n", "\n", "", "fig", ".", "savefig", "(", "self", ".", "folder", "+", "\"/h_to_p_img_%d.png\"", "%", "epoch", ")", "\n", "plt", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_proposed.ImageCallback.__init__": [[16, 24], ["keras.callbacks.Callback.__init__", "os.path.join", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["def", "__init__", "(", "self", ",", "conf", ",", "model", ",", "comet_exp", "=", "None", ")", ":", "\n", "        ", "super", "(", "ImageCallback", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "folder", "=", "os", ".", "path", ".", "join", "(", "conf", ".", "folder", ",", "\"training_images\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "folder", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "folder", ")", "\n", "", "self", ".", "model", "=", "model", "\n", "self", ".", "comet_exp", "=", "comet_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_proposed.ImageCallback.on_epoch_end": [[25, 110], ["image_call_back_proposed.ImageCallback.model.G_model.save", "image_call_back_proposed.ImageCallback.model.D_model.save", "image_call_back_proposed.ImageCallback.model.G_p_to_h.predict", "image_call_back_proposed.ImageCallback.model.S_p.predict", "image_call_back_proposed.ImageCallback.model.G_h_to_p.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.savefig", "matplotlib.close", "matplotlib.close", "image_call_back_proposed.ImageCallback.model.G_h_to_p.predict", "image_call_back_proposed.ImageCallback.model.G_p_to_h.predict", "image_call_back_proposed.ImageCallback.model.S_p.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.savefig", "matplotlib.close", "matplotlib.close", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "image_call_back_proposed.ImageCallback.comet_exp.log_figure", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "image_call_back_proposed.ImageCallback.model.D_pse.predict", "image_call_back_proposed.ImageCallback.model.D_pse.predict", "image_call_back_proposed.ImageCallback.model.D_pse.predict", "image_call_back_proposed.ImageCallback.model.D_pse.predict", "image_call_back_proposed.ImageCallback.model.D_pse.predict", "image_call_back_proposed.ImageCallback.model.D_pse.predict", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", "=", "None", ",", "p_img", "=", "None", ",", "p_msk", "=", "None", ",", "h_img", "=", "None", ",", "h_msk", "=", "None", ")", ":", "\n", "        ", "self", ".", "model", ".", "G_model", ".", "save", "(", "self", ".", "folder", "+", "'/G_model.h5df'", ")", "\n", "self", ".", "model", ".", "D_model", ".", "save", "(", "self", ".", "folder", "+", "'/D_model.h5df'", ")", "\n", "# Plot P_to_H images", "\n", "r", ",", "c", "=", "2", ",", "5", "\n", "\n", "pse_h_img", "=", "self", ".", "model", ".", "G_p_to_h", ".", "predict", "(", "p_img", ")", "\n", "seg_p_msk", "=", "self", ".", "model", ".", "S_p", ".", "predict", "(", "p_img", ")", "\n", "rec_h_img", "=", "self", ".", "model", ".", "G_h_to_p", ".", "predict", "(", "[", "pse_h_img", ",", "seg_p_msk", "]", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "r", ")", ":", "\n", "            ", "axs", "[", "i", ",", "0", "]", ".", "set_title", "(", "\"p_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse", ".", "predict", "(", "[", "p_img", "[", "cnt", ":", "cnt", "+", "1", "]", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "1", "]", ".", "set_title", "(", "\"pse_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse", ".", "predict", "(", "pse_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "pse_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "pse_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "2", "]", ".", "set_title", "(", "\"seg_p_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "seg_p_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "seg_p_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "3", "]", ".", "set_title", "(", "\"r_p_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "4", "]", ".", "set_title", "(", "\"rec_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse", ".", "predict", "(", "rec_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "axis", "(", "\"off\"", ")", "\n", "cnt", "+=", "1", "\n", "\n", "", "fig", ".", "savefig", "(", "self", ".", "folder", "+", "\"/P_to_h_img_%d.png\"", "%", "epoch", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "# Plot H_to_P images", "\n", "r", ",", "c", "=", "4", ",", "5", "\n", "\n", "pse_d_img", "=", "self", ".", "model", ".", "G_h_to_p", ".", "predict", "(", "[", "h_img", ",", "h_msk", "]", ")", "\n", "rec_h_img", "=", "self", ".", "model", ".", "G_p_to_h", ".", "predict", "(", "pse_h_img", ")", "\n", "rec_h_msk", "=", "self", ".", "model", ".", "S_p", ".", "predict", "(", "pse_h_img", ")", "\n", "\n", "plt", ".", "figure", "(", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "r", ")", ":", "\n", "            ", "axs", "[", "i", ",", "0", "]", ".", "set_title", "(", "\"h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse", ".", "predict", "(", "[", "h_img", "[", "cnt", ":", "cnt", "+", "1", "]", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "1", "]", ".", "set_title", "(", "\"h_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "2", "]", ".", "set_title", "(", "\"pse_d_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse", ".", "predict", "(", "pse_d_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "pse_d_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "pse_d_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "3", "]", ".", "set_title", "(", "\"rec_h_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "4", "]", ".", "set_title", "(", "\"rec_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse", ".", "predict", "(", "rec_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "axis", "(", "\"off\"", ")", "\n", "cnt", "+=", "1", "\n", "\n", "", "fig", ".", "savefig", "(", "self", ".", "folder", "+", "\"/h_to_p_img_%d.png\"", "%", "epoch", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "\n", "if", "self", ".", "comet_exp", "is", "not", "None", ":", "\n", "            ", "self", ".", "comet_exp", ".", "log_figure", "(", "figure_name", "=", "'/h_to_p_img_%d.png'", "%", "epoch", ",", "figure", "=", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_proposed.ImageCallback_cycleGAN.__init__": [[113, 121], ["keras.callbacks.Callback.__init__", "os.path.join", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["def", "__init__", "(", "self", ",", "conf", ",", "model", ",", "comet_exp", "=", "None", ")", ":", "\n", "        ", "super", "(", "ImageCallback_cycleGAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "folder", "=", "os", ".", "path", ".", "join", "(", "conf", ".", "folder", ",", "\"training_images\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "folder", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "folder", ")", "\n", "", "self", ".", "model", "=", "model", "\n", "self", ".", "comet_exp", "=", "comet_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_proposed.ImageCallback_cycleGAN.on_epoch_end": [[122, 206], ["image_call_back_proposed.ImageCallback_cycleGAN.model.G_model.save", "image_call_back_proposed.ImageCallback_cycleGAN.model.D_model.save", "image_call_back_proposed.ImageCallback_cycleGAN.model.G_p_to_h.predict", "image_call_back_proposed.ImageCallback_cycleGAN.model.G_h_to_p.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.savefig", "matplotlib.close", "matplotlib.close", "image_call_back_proposed.ImageCallback_cycleGAN.model.G_h_to_p.predict", "image_call_back_proposed.ImageCallback_cycleGAN.model.G_p_to_h.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.savefig", "matplotlib.close", "matplotlib.close", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "image_call_back_proposed.ImageCallback_cycleGAN.comet_exp.log_figure", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "image_call_back_proposed.ImageCallback_cycleGAN.model.D_pse_h.predict", "image_call_back_proposed.ImageCallback_cycleGAN.model.D_pse_h.predict", "image_call_back_proposed.ImageCallback_cycleGAN.model.D_pse_h.predict", "image_call_back_proposed.ImageCallback_cycleGAN.model.D_pse_h.predict", "image_call_back_proposed.ImageCallback_cycleGAN.model.D_pse_d.predict", "image_call_back_proposed.ImageCallback_cycleGAN.model.D_pse_d.predict", "image_call_back_proposed.ImageCallback_cycleGAN.model.D_pse_d.predict", "image_call_back_proposed.ImageCallback_cycleGAN.model.D_pse_d.predict", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", "=", "None", ",", "p_img", "=", "None", ",", "p_msk", "=", "None", ",", "h_img", "=", "None", ",", "h_msk", "=", "None", ")", ":", "\n", "        ", "self", ".", "model", ".", "G_model", ".", "save", "(", "self", ".", "folder", "+", "'/G_model.h5df'", ")", "\n", "self", ".", "model", ".", "D_model", ".", "save", "(", "self", ".", "folder", "+", "'/D_model.h5df'", ")", "\n", "# Plot P_to_H images", "\n", "r", ",", "c", "=", "4", ",", "5", "\n", "\n", "pse_h_img", "=", "self", ".", "model", ".", "G_p_to_h", ".", "predict", "(", "p_img", ")", "\n", "rec_h_img", "=", "self", ".", "model", ".", "G_h_to_p", ".", "predict", "(", "pse_h_img", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "r", ")", ":", "\n", "            ", "axs", "[", "i", ",", "0", "]", ".", "set_title", "(", "\"p_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "[", "p_img", "[", "cnt", ":", "cnt", "+", "1", "]", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "1", "]", ".", "set_title", "(", "\"pse_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "pse_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "pse_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "pse_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "2", "]", ".", "set_title", "(", "\"r_p_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "3", "]", ".", "set_title", "(", "\"rec_d_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "rec_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "4", "]", ".", "set_title", "(", "\"h_img disc: %1.f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "axis", "(", "\"off\"", ")", "\n", "cnt", "+=", "1", "\n", "\n", "", "fig", ".", "savefig", "(", "self", ".", "folder", "+", "\"/P_to_h_img_%d.png\"", "%", "epoch", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "# Plot H_to_P images", "\n", "r", ",", "c", "=", "4", ",", "5", "\n", "\n", "pse_d_img", "=", "self", ".", "model", ".", "G_h_to_p", ".", "predict", "(", "h_img", ")", "\n", "rec_h_img", "=", "self", ".", "model", ".", "G_p_to_h", ".", "predict", "(", "pse_d_img", ")", "\n", "\n", "plt", ".", "figure", "(", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "r", ")", ":", "\n", "            ", "axs", "[", "i", ",", "0", "]", ".", "set_title", "(", "\"h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_d", ".", "predict", "(", "[", "h_img", "[", "cnt", ":", "cnt", "+", "1", "]", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "1", "]", ".", "set_title", "(", "\"h_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "2", "]", ".", "set_title", "(", "\"pse_d_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_d", ".", "predict", "(", "pse_d_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "pse_d_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "pse_d_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "3", "]", ".", "set_title", "(", "\"rec_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_d", ".", "predict", "(", "rec_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "4", "]", ".", "set_title", "(", "\"p_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_d", ".", "predict", "(", "p_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "cnt", "+=", "1", "\n", "\n", "", "fig", ".", "savefig", "(", "self", ".", "folder", "+", "\"/h_to_p_img_%d.png\"", "%", "epoch", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "\n", "if", "self", ".", "comet_exp", "is", "not", "None", ":", "\n", "            ", "self", ".", "comet_exp", ".", "log_figure", "(", "figure_name", "=", "'/h_to_p_img_%d.png'", "%", "epoch", ",", "figure", "=", "fig", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.__init__": [[13, 21], ["keras.callbacks.Callback.__init__", "os.path.join", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["def", "__init__", "(", "self", ",", "conf", ",", "model", ",", "comet_exp", "=", "None", ")", ":", "\n", "        ", "super", "(", "ImageCallback_pseudo_healthy_unsup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "folder", "=", "os", ".", "path", ".", "join", "(", "conf", ".", "folder", ",", "\"training_images\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "folder", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "folder", ")", "\n", "", "self", ".", "model", "=", "model", "\n", "self", ".", "comet_exp", "=", "comet_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.on_epoch_end": [[22, 117], ["image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.gan.save", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.critic_model.save", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.G_d_to_h.predict", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.S_d_to_msk.predict", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.G_h_to_d.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.savefig", "matplotlib.close", "matplotlib.close", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.G_h_to_d.predict", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.G_d_to_h.predict", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.S_d_to_msk.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.savefig", "matplotlib.close", "matplotlib.close", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_unsupervised.ImageCallback_pseudo_healthy_unsup.model.D_pse_h.predict", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", "=", "None", ",", "p_img", "=", "None", ",", "p_msk", "=", "None", ",", "h_img", "=", "None", ",", "h_msk", "=", "None", ")", ":", "\n", "        ", "self", ".", "model", ".", "gan", ".", "save", "(", "self", ".", "folder", "+", "'/gan.h5df'", ")", "\n", "self", ".", "model", ".", "critic_model", ".", "save", "(", "self", ".", "folder", "+", "'/critic_model.h5df'", ")", "\n", "# Plot P_to_H images", "\n", "r", ",", "c", "=", "4", ",", "6", "\n", "\n", "pse_h_img", "=", "self", ".", "model", ".", "G_d_to_h", ".", "predict", "(", "p_img", ")", "\n", "seg_d_msk", "=", "self", ".", "model", ".", "S_d_to_msk", ".", "predict", "(", "p_img", ")", "\n", "rec_h_img", "=", "self", ".", "model", ".", "G_h_to_d", ".", "predict", "(", "[", "pse_h_img", ",", "seg_d_msk", "]", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "r", ")", ":", "\n", "            ", "axs", "[", "i", ",", "0", "]", ".", "set_title", "(", "\"p_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "[", "p_img", "[", "cnt", ":", "cnt", "+", "1", "]", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "1", "]", ".", "set_title", "(", "\"pse_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "pse_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "pse_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "pse_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "2", "]", ".", "set_title", "(", "\"seg_d_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "seg_d_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "seg_d_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "\n", "axs", "[", "i", ",", "3", "]", ".", "set_title", "(", "\"rec_d_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "rec_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "4", "]", ".", "set_title", "(", "\"r_p_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "5", "]", ".", "set_title", "(", "\"h_img \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "axis", "(", "\"off\"", ")", "\n", "cnt", "+=", "1", "\n", "\n", "", "fig", ".", "savefig", "(", "self", ".", "folder", "+", "\"/P_to_h_img_%d.png\"", "%", "epoch", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "# Plot H_to_P images", "\n", "r", ",", "c", "=", "4", ",", "6", "\n", "\n", "del", "pse_h_img", ",", "seg_d_msk", ",", "rec_h_img", "\n", "\n", "pse_d_img", "=", "self", ".", "model", ".", "G_h_to_d", ".", "predict", "(", "[", "h_img", ",", "h_msk", "]", ")", "\n", "rec_h_img", "=", "self", ".", "model", ".", "G_d_to_h", ".", "predict", "(", "pse_d_img", ")", "\n", "rec_h_msk", "=", "self", ".", "model", ".", "S_d_to_msk", ".", "predict", "(", "pse_d_img", ")", "\n", "\n", "plt", ".", "figure", "(", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "r", ")", ":", "\n", "            ", "axs", "[", "i", ",", "0", "]", ".", "set_title", "(", "\"h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "[", "h_img", "[", "cnt", ":", "cnt", "+", "1", "]", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "1", "]", ".", "set_title", "(", "\"h_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "2", "]", ".", "set_title", "(", "\"pse_d_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "pse_d_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "pse_d_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "pse_d_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "3", "]", ".", "set_title", "(", "\"rec_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "rec_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "4", "]", ".", "set_title", "(", "\"rec_h_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "5", "]", ".", "set_title", "(", "\"p_img \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "cnt", "+=", "1", "\n", "\n", "", "fig", ".", "savefig", "(", "self", ".", "folder", "+", "\"/h_to_p_img_%d.png\"", "%", "epoch", ")", "\n", "plt", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.loss_callback.SaveLoss.__init__": [[11, 16], ["keras.callbacks.Callback.__init__", "dict"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["    ", "def", "__init__", "(", "self", ",", "folder", ",", "scale", "=", "\"linear\"", ")", ":", "\n", "        ", "super", "(", "SaveLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "folder", "=", "folder", "\n", "self", ".", "values", "=", "dict", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.loss_callback.SaveLoss.on_epoch_end": [[17, 40], ["matplotlib.figure", "matplotlib.figure", "matplotlib.suptitle", "matplotlib.suptitle", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.legend", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "len", "loss_callback.SaveLoss.values[].append", "range", "os.path.join", "len", "matplotlib.plot", "matplotlib.plot", "matplotlib.semilogy", "matplotlib.semilogy"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", ",", "logs", "=", "None", ")", ":", "\n", "        ", "if", "logs", "is", "None", ":", "return", "\n", "\n", "if", "len", "(", "self", ".", "values", ")", "==", "0", ":", "\n", "            ", "for", "k", "in", "logs", ":", "\n", "                ", "self", ".", "values", "[", "k", "]", "=", "[", "]", "\n", "\n", "", "", "for", "k", "in", "logs", ":", "\n", "            ", "self", ".", "values", "[", "k", "]", ".", "append", "(", "logs", "[", "k", "]", ")", "\n", "\n", "", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "suptitle", "(", "\"Training loss\"", ",", "fontsize", "=", "16", ")", "\n", "for", "k", "in", "self", ".", "values", ":", "\n", "            ", "epochs", "=", "range", "(", "len", "(", "self", ".", "values", "[", "k", "]", ")", ")", "\n", "if", "self", ".", "scale", "==", "\"linear\"", ":", "\n", "                ", "plt", ".", "plot", "(", "epochs", ",", "self", ".", "values", "[", "k", "]", ",", "label", "=", "k", ")", "\n", "", "elif", "self", ".", "scale", "==", "\"log\"", ":", "\n", "                ", "plt", ".", "semilogy", "(", "epochs", ",", "self", ".", "values", "[", "k", "]", ",", "label", "=", "k", ")", "\n", "", "", "plt", ".", "xlabel", "(", "\"Epochs\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Loss\"", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "\"best\"", ")", "\n", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "self", ".", "folder", ",", "\"training_loss.png\"", ")", ")", "\n", "plt", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.__init__": [[13, 21], ["keras.callbacks.Callback.__init__", "os.path.join", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["def", "__init__", "(", "self", ",", "conf", ",", "model", ",", "comet_exp", "=", "None", ")", ":", "\n", "        ", "super", "(", "ImageCallback_pseudo_healthy_semisup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "folder", "=", "os", ".", "path", ".", "join", "(", "conf", ".", "folder", ",", "\"training_images\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "folder", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "folder", ")", "\n", "", "self", ".", "model", "=", "model", "\n", "self", ".", "comet_exp", "=", "comet_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.callbacks.image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.on_epoch_end": [[22, 117], ["image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.gan.save", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.critic_model.save", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.G_d_to_h.predict", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.S_d_to_msk.predict", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.G_h_to_d.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.savefig", "matplotlib.close", "matplotlib.close", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.G_h_to_d.predict", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.G_d_to_h.predict", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.S_d_to_msk.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.subplots", "matplotlib.subplots", "range", "fig.savefig", "matplotlib.close", "matplotlib.close", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "axs[].set_title", "axs[].imshow", "axs[].axis", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.D_pse_h.predict", "image_call_back_pseudo_healthy_semisupervised.ImageCallback_pseudo_healthy_semisup.model.D_pse_h.predict", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "epoch", "=", "None", ",", "p_img", "=", "None", ",", "p_msk", "=", "None", ",", "h_img", "=", "None", ",", "h_msk", "=", "None", ")", ":", "\n", "        ", "self", ".", "model", ".", "gan", ".", "save", "(", "self", ".", "folder", "+", "'/gan.h5df'", ")", "\n", "self", ".", "model", ".", "critic_model", ".", "save", "(", "self", ".", "folder", "+", "'/critic_model.h5df'", ")", "\n", "# Plot P_to_H images", "\n", "r", ",", "c", "=", "4", ",", "6", "\n", "\n", "pse_h_img", "=", "self", ".", "model", ".", "G_d_to_h", ".", "predict", "(", "p_img", ")", "\n", "seg_d_msk", "=", "self", ".", "model", ".", "S_d_to_msk", ".", "predict", "(", "p_img", ")", "\n", "rec_h_img", "=", "self", ".", "model", ".", "G_h_to_d", ".", "predict", "(", "[", "pse_h_img", ",", "seg_d_msk", "]", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "r", ")", ":", "\n", "            ", "axs", "[", "i", ",", "0", "]", ".", "set_title", "(", "\"p_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "[", "p_img", "[", "cnt", ":", "cnt", "+", "1", "]", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "1", "]", ".", "set_title", "(", "\"pse_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "pse_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "pse_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "pse_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "2", "]", ".", "set_title", "(", "\"seg_d_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "seg_d_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "seg_d_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "\n", "axs", "[", "i", ",", "3", "]", ".", "set_title", "(", "\"rec_d_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "rec_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "4", "]", ".", "set_title", "(", "\"r_p_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "5", "]", ".", "set_title", "(", "\"h_img \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "axis", "(", "\"off\"", ")", "\n", "cnt", "+=", "1", "\n", "\n", "", "fig", ".", "savefig", "(", "self", ".", "folder", "+", "\"/P_to_h_img_%d.png\"", "%", "epoch", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "# Plot H_to_P images", "\n", "r", ",", "c", "=", "4", ",", "6", "\n", "\n", "del", "pse_h_img", ",", "seg_d_msk", ",", "rec_h_img", "\n", "\n", "pse_d_img", "=", "self", ".", "model", ".", "G_h_to_d", ".", "predict", "(", "[", "h_img", ",", "h_msk", "]", ")", "\n", "rec_h_img", "=", "self", ".", "model", ".", "G_d_to_h", ".", "predict", "(", "pse_d_img", ")", "\n", "rec_h_msk", "=", "self", ".", "model", ".", "S_d_to_msk", ".", "predict", "(", "pse_d_img", ")", "\n", "\n", "plt", ".", "figure", "(", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "r", ")", ":", "\n", "            ", "axs", "[", "i", ",", "0", "]", ".", "set_title", "(", "\"h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "[", "h_img", "[", "cnt", ":", "cnt", "+", "1", "]", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "0", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "1", "]", ".", "set_title", "(", "\"h_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "h_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "h_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "1", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "2", "]", ".", "set_title", "(", "\"pse_d_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "pse_d_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "pse_d_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "pse_d_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "2", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "3", "]", ".", "set_title", "(", "\"rec_h_img disc: %.1f\"", "%", "np", ".", "mean", "(", "self", ".", "model", ".", "D_pse_h", ".", "predict", "(", "rec_h_img", "[", "cnt", ":", "cnt", "+", "1", "]", ")", ")", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "3", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "4", "]", ".", "set_title", "(", "\"rec_h_msk \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "rec_h_msk", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "rec_h_msk", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "4", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "axs", "[", "i", ",", "5", "]", ".", "set_title", "(", "\"p_img \"", ",", "size", "=", "6", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "imshow", "(", "np", ".", "concatenate", "(", "[", "p_img", "[", "cnt", ",", ":", ",", ":", ",", "j", "]", "for", "j", "in", "range", "(", "p_img", ".", "shape", "[", "-", "1", "]", ")", "]", ",", "axis", "=", "1", ")", ",", "\n", "cmap", "=", "\"gray\"", ")", "\n", "axs", "[", "i", ",", "5", "]", ".", "axis", "(", "\"off\"", ")", "\n", "\n", "cnt", "+=", "1", "\n", "\n", "", "fig", ".", "savefig", "(", "self", ".", "folder", "+", "\"/h_to_p_img_%d.png\"", "%", "epoch", ")", "\n", "plt", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.configuration.exp_semisupervised.get": [[89, 95], ["None"], "function", ["None"], ["def", "get", "(", ")", ":", "\n", "# shp = params[\"input_shape\"]", "\n", "# ratio = params[\"image_downsample\"]", "\n", "# shp = (int(shp[0] / ratio), int(shp[1] / ratio), shp[2])", "\n", "# params[\"input_shape\"] = shp", "\n", "    ", "return", "EXPERIMENT_PARAMS", "\n", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.configuration.exp_supervised.get": [[89, 95], ["None"], "function", ["None"], ["def", "get", "(", ")", ":", "\n", "# shp = params[\"input_shape\"]", "\n", "# ratio = params[\"image_downsample\"]", "\n", "# shp = (int(shp[0] / ratio), int(shp[1] / ratio), shp[2])", "\n", "# params[\"input_shape\"] = shp", "\n", "    ", "return", "EXPERIMENT_PARAMS", "\n", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.configuration.exp_unsupervised.get": [[89, 95], ["None"], "function", ["None"], ["def", "get", "(", ")", ":", "\n", "# shp = params[\"input_shape\"]", "\n", "# ratio = params[\"image_downsample\"]", "\n", "# shp = (int(shp[0] / ratio), int(shp[1] / ratio), shp[2])", "\n", "# params[\"input_shape\"] = shp", "\n", "    ", "return", "EXPERIMENT_PARAMS", "\n", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.basenet.BaseNet.__init__": [[13, 16], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "conf", ")", ":", "\n", "        ", "self", ".", "model", "=", "None", "\n", "self", ".", "conf", "=", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.basenet.BaseNet.build": [[17, 20], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "build", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.basenet.BaseNet.save_models": [[21, 24], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "save_models", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.basenet.BaseNet.load_models": [[25, 28], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "load_models", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_supervised.pseudo_healthy_supervised.__init__": [[37, 40], ["models.basenet.BaseNet.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["def", "__init__", "(", "self", ",", "conf", ")", ":", "\n", "        ", "super", "(", "pseudo_healthy_supervised", ",", "self", ")", ".", "__init__", "(", "conf", ")", "\n", "self", ".", "conf", "=", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_supervised.pseudo_healthy_supervised.build": [[41, 148], ["models.generators.generator_P_to_H.generator_P_to_H", "models.generators.generator_P_to_H.generator_P_to_H.build", "log.info", "pseudo_healthy_supervised.pseudo_healthy_supervised.G_d_to_h.summary", "models.generators.mask_segmentor.mask_segmentor", "models.generators.mask_segmentor.mask_segmentor.build", "log.info", "pseudo_healthy_supervised.pseudo_healthy_supervised.S_d_to_msk.summary", "models.generators.generator_H_to_P.generator_H_to_P", "models.generators.generator_H_to_P.generator_H_to_P.build", "log.info", "pseudo_healthy_supervised.pseudo_healthy_supervised.G_h_to_d.summary", "models.discriminators.discriminator_image.critic_2D_pse_h", "models.discriminators.discriminator_image.critic_2D_pse_h.build", "log.info", "pseudo_healthy_supervised.pseudo_healthy_supervised.D_pse_h.summary", "keras.Input", "pseudo_healthy_supervised.pseudo_healthy_supervised.G_d_to_h", "pseudo_healthy_supervised.pseudo_healthy_supervised.S_d_to_msk", "keras.Input", "keras.Input", "pseudo_healthy_supervised.pseudo_healthy_supervised.G_h_to_d", "keras.Model", "pseudo_healthy_supervised.pseudo_healthy_supervised.gan.compile", "pseudo_healthy_supervised.pseudo_healthy_supervised.gan.summary", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "functools.partial", "functools.partial", "keras.Model", "pseudo_healthy_supervised.pseudo_healthy_supervised.critic_model.compile", "print", "pseudo_healthy_supervised.pseudo_healthy_supervised.critic_model.summary", "print", "pseudo_healthy_supervised.pseudo_healthy_supervised.gan.summary", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.G_h_to_d", "keras.layers.Activation", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.G_d_to_h", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.S_d_to_msk", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_supervised.pseudo_healthy_supervised.D_pse_h", "keras.optimizers.Adam", "keras.optimizers.Adam"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build"], ["", "def", "build", "(", "self", ")", ":", "\n", "# Build G_d_to_h", "\n", "        ", "G_d_to_h", "=", "generator_P_to_H", "(", "self", ".", "conf", ".", "gen_params_p_to_h", ")", "\n", "G_d_to_h", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Generator from pathological to healthy\"", ")", "\n", "self", ".", "G_d_to_h", "=", "G_d_to_h", ".", "model", "\n", "self", ".", "G_d_to_h", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "# Build pathology segmentor", "\n", "S_d_to_msk", "=", "mask_segmentor", "(", "self", ".", "conf", ".", "seg_params", ")", "\n", "S_d_to_msk", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Pathology segmentor\"", ")", "\n", "self", ".", "S_d_to_msk", "=", "S_d_to_msk", ".", "model", "\n", "self", ".", "S_d_to_msk", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "# Build G_h_to_d", "\n", "G_h_to_d", "=", "generator_H_to_P", "(", "self", ".", "conf", ".", "gen_params_h_to_p", ")", "\n", "G_h_to_d", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Generator from pathological to healthy\"", ")", "\n", "self", ".", "G_h_to_d", "=", "G_h_to_d", ".", "model", "\n", "self", ".", "G_h_to_d", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "# Build D_pse_h", "\n", "D_pse_h", "=", "critic_2D_pse_h", "(", "self", ".", "conf", ".", "D_pse_h_params", ")", "\n", "D_pse_h", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Pseudo healthy discriminator\"", ")", "\n", "self", ".", "D_pse_h", "=", "D_pse_h", ".", "model", "\n", "self", ".", "D_pse_h", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "#=============================== Build G model =====================================", "\n", "self", ".", "D_pse_h", ".", "trainable", "=", "False", "\n", "# Cycle 1: p to h to p", "\n", "cy1_I_p", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_I_pse_h", "=", "self", ".", "G_d_to_h", "(", "cy1_I_p", ")", "\n", "cy1_M_seg_d", "=", "self", ".", "S_d_to_msk", "(", "cy1_I_p", ")", "\n", "\n", "cy1_I_rec_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_I_rec_d'", ")", "(", "self", ".", "G_h_to_d", "(", "[", "cy1_I_pse_h", ",", "cy1_M_seg_d", "]", ")", ")", "\n", "cy1_M_seg_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_M_seg_d'", ")", "(", "cy1_M_seg_d", ")", "\n", "cy1_dis_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_dis_I_pse_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy1_I_pse_h", ")", ")", "\n", "\n", "# Cycle 2: h to h to h", "\n", "cy2_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_M_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_I_pse_h", "=", "self", ".", "G_h_to_d", "(", "[", "cy2_I_h", ",", "cy2_M_h", "]", ")", "\n", "\n", "cy2_dis_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_dis_I_pse_d'", ")", "(", "self", ".", "D_pse_h", "(", "cy2_I_pse_h", ")", ")", "\n", "cy2_I_rec_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_I_rec_h'", ")", "(", "self", ".", "G_d_to_h", "(", "cy2_I_pse_h", ")", ")", "\n", "cy2_M_rec_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_M_rec_h'", ")", "(", "self", ".", "S_d_to_msk", "(", "cy2_I_pse_h", ")", ")", "\n", "\n", "self", ".", "gan", "=", "Model", "(", "inputs", "=", "[", "cy1_I_p", ",", "cy2_I_h", ",", "cy2_M_h", "]", ",", "outputs", "=", "[", "cy1_dis_I_pse_h", ",", "cy1_M_seg_d", ",", "cy1_I_rec_d", ",", "cy2_dis_I_pse_h", ",", "cy2_I_rec_h", ",", "cy2_M_rec_h", "]", ")", "\n", "self", ".", "gan", ".", "compile", "(", "loss", "=", "{", "'cy1_dis_I_pse_h'", ":", "wasserstein_loss", ",", "'cy1_M_seg_d'", ":", "dice_coef_loss", ",", "'cy1_I_rec_d'", ":", "\"MAE\"", ",", "\n", "'cy2_dis_I_pse_d'", ":", "wasserstein_loss", ",", "'cy2_I_rec_h'", ":", "\"MAE\"", ",", "'cy2_M_rec_h'", ":", "\"MAE\"", "}", ",", "\n", "loss_weights", "=", "[", "2", ",", "10", ",", "20", ",", "1", ",", "10", ",", "10", "]", ",", "\n", "optimizer", "=", "Adam", "(", "lr", "=", "self", ".", "conf", ".", "lr", ",", "decay", "=", "self", ".", "conf", ".", "decay", ")", ")", "\n", "self", ".", "gan", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "#=============================== Build D model ======================================", "\n", "self", ".", "D_pse_h", ".", "trainable", "=", "True", "\n", "# Cycle 1: p to h to p", "\n", "cy1_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_I_pse_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_average_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "\n", "cy2_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_I_pse_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_average_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "\n", "dis_cy1_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy1_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy1_I_h", ")", ")", "\n", "dis_cy1_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy1_I_pse_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy1_I_pse_h", ")", ")", "\n", "gp_cy1_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'gp_cy1_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "[", "cy1_average_I_h", "]", ")", ")", "\n", "\n", "dis_cy2_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy2_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy2_I_h", ")", ")", "\n", "dis_cy2_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy2_I_pse_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy2_I_pse_h", ")", ")", "\n", "gp_cy2_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'gp_cy2_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "[", "cy2_average_I_h", "]", ")", ")", "\n", "# Gradient penalty loss", "\n", "cy1_partial_gp_loss", "=", "partial", "(", "gradient_penalty_loss", ",", "\n", "averaged_samples", "=", "cy1_average_I_h", ",", "\n", "gradient_penalty_weight", "=", "self", ".", "conf", ".", "gp_weight", ")", "\n", "cy2_partial_gp_loss", "=", "partial", "(", "gradient_penalty_loss", ",", "\n", "averaged_samples", "=", "cy2_average_I_h", ",", "\n", "gradient_penalty_weight", "=", "self", ".", "conf", ".", "gp_weight", ")", "\n", "# Function need names or Keras will throw an error", "\n", "cy1_partial_gp_loss", ".", "__name__", "=", "'cy1_gradient_penalty'", "\n", "cy2_partial_gp_loss", ".", "__name__", "=", "'cy2_gradient_penalty'", "\n", "\n", "self", ".", "critic_model", "=", "Model", "(", "inputs", "=", "[", "cy1_I_h", ",", "cy1_I_pse_h", ",", "cy1_average_I_h", ",", "\n", "cy2_I_h", ",", "cy2_I_pse_h", ",", "cy2_average_I_h", "]", ",", "\n", "outputs", "=", "[", "dis_cy1_I_h", ",", "dis_cy1_I_pse_h", ",", "gp_cy1_I_h", ",", "\n", "dis_cy2_I_h", ",", "dis_cy2_I_pse_h", ",", "gp_cy2_I_h", "]", ")", "\n", "\n", "self", ".", "critic_model", ".", "compile", "(", "optimizer", "=", "Adam", "(", "lr", "=", "self", ".", "conf", ".", "lr", ",", "decay", "=", "self", ".", "conf", ".", "decay", ")", ",", "\n", "loss", "=", "{", "'dis_cy1_I_h'", ":", "wasserstein_loss", ",", "\n", "'dis_cy1_I_pse_h'", ":", "wasserstein_loss", ",", "\n", "'gp_cy1_I_h'", ":", "cy1_partial_gp_loss", ",", "\n", "'dis_cy2_I_h'", ":", "wasserstein_loss", ",", "\n", "'dis_cy2_I_pse_h'", ":", "wasserstein_loss", ",", "\n", "'gp_cy2_I_h'", ":", "cy2_partial_gp_loss", "\n", "}", ")", "\n", "print", "(", "\"Critic model:    \"", ")", "\n", "self", ".", "critic_model", ".", "summary", "(", ")", "\n", "\n", "print", "(", "\"Generative model:     \"", ")", "\n", "self", ".", "gan", ".", "summary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_supervised.pseudo_healthy_supervised.load_models": [[149, 153], ["os.path.exists", "log.info", "pseudo_healthy_supervised.pseudo_healthy_supervised.gan.load_weights"], "methods", ["None"], ["", "def", "load_models", "(", "self", ",", "dir", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "dir", ")", ":", "\n", "            ", "log", ".", "info", "(", "\"Loading trained model from file\"", ")", "\n", "self", ".", "gan", ".", "load_weights", "(", "dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_supervised.pseudo_healthy_supervised.save_models": [[154, 157], ["log.debug", "pseudo_healthy_supervised.pseudo_healthy_supervised.gan.save_weights"], "methods", ["None"], ["", "", "def", "save_models", "(", "self", ",", "dir", ")", ":", "\n", "        ", "log", ".", "debug", "(", "\"Saving trained model\"", ")", "\n", "self", ".", "gan", ".", "save_weights", "(", "dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.__init__": [[38, 41], ["models.basenet.BaseNet.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["def", "__init__", "(", "self", ",", "conf", ")", ":", "\n", "        ", "super", "(", "pseudo_healthy_unsupervised", ",", "self", ")", ".", "__init__", "(", "conf", ")", "\n", "self", ".", "conf", "=", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.build": [[42, 177], ["models.generators.generator_P_to_H.generator_P_to_H", "models.generators.generator_P_to_H.generator_P_to_H.build", "log.info", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.G_d_to_h.summary", "models.generators.mask_segmentor.mask_segmentor", "models.generators.mask_segmentor.mask_segmentor.build", "log.info", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.S_d_to_msk.summary", "models.generators.generator_H_to_P.generator_H_to_P", "models.generators.generator_H_to_P.generator_H_to_P.build", "log.info", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.G_h_to_d.summary", "models.discriminators.discriminator_image.critic_2D_pse_h", "models.discriminators.discriminator_image.critic_2D_pse_h.build", "log.info", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_pse_h.summary", "models.discriminators.discriminatior_mask.critic_2D_mask", "models.discriminators.discriminatior_mask.critic_2D_mask.build", "log.info", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_msk_d.summary", "keras.Input", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.G_d_to_h", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.S_d_to_msk", "keras.Input", "keras.Input", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.G_h_to_d", "keras.Model", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.gan.compile", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.gan.summary", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "functools.partial", "functools.partial", "functools.partial", "keras.Model", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.critic_model.compile", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.G_h_to_d", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_msk_d", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.G_d_to_h", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.S_d_to_msk", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_msk_d", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_msk_d", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_msk_d", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.D_pse_h", "keras.optimizers.Adam", "keras.optimizers.Adam"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build"], ["", "def", "build", "(", "self", ")", ":", "\n", "# Build G_d_to_h", "\n", "        ", "G_d_to_h", "=", "generator_P_to_H", "(", "self", ".", "conf", ".", "gen_params_p_to_h", ")", "\n", "G_d_to_h", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Generator from pathological to healthy\"", ")", "\n", "self", ".", "G_d_to_h", "=", "G_d_to_h", ".", "model", "\n", "self", ".", "G_d_to_h", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "# Build pathology segmentor", "\n", "S_d_to_msk", "=", "mask_segmentor", "(", "self", ".", "conf", ".", "seg_params", ")", "\n", "S_d_to_msk", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Pathology segmentor\"", ")", "\n", "self", ".", "S_d_to_msk", "=", "S_d_to_msk", ".", "model", "\n", "self", ".", "S_d_to_msk", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "# Build G_h_to_d", "\n", "G_h_to_d", "=", "generator_H_to_P", "(", "self", ".", "conf", ".", "gen_params_h_to_p", ")", "\n", "G_h_to_d", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Generator from pathological to healthy\"", ")", "\n", "self", ".", "G_h_to_d", "=", "G_h_to_d", ".", "model", "\n", "self", ".", "G_h_to_d", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "# Build D_pse_h", "\n", "D_pse_h", "=", "critic_2D_pse_h", "(", "self", ".", "conf", ".", "D_pse_h_params", ")", "\n", "D_pse_h", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Pseudo healthy discriminator\"", ")", "\n", "self", ".", "D_pse_h", "=", "D_pse_h", ".", "model", "\n", "self", ".", "D_pse_h", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "\n", "# Build D_msk_d", "\n", "D_msk_d", "=", "critic_2D_mask", "(", "self", ".", "conf", ".", "D_msk_d_params", ")", "\n", "D_msk_d", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Mask for discriminator\"", ")", "\n", "self", ".", "D_msk_d", "=", "D_msk_d", ".", "model", "\n", "self", ".", "D_msk_d", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "#=============================== Build G model =====================================", "\n", "self", ".", "D_pse_h", ".", "trainable", "=", "False", "\n", "self", ".", "D_msk_d", ".", "trainable", "=", "False", "\n", "\n", "# Cycle 1: p to h to p", "\n", "cy1_I_p", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_I_pse_h", "=", "self", ".", "G_d_to_h", "(", "cy1_I_p", ")", "\n", "cy1_M_seg_d", "=", "self", ".", "S_d_to_msk", "(", "cy1_I_p", ")", "\n", "\n", "cy1_I_rec_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_I_rec_d'", ")", "(", "self", ".", "G_h_to_d", "(", "[", "cy1_I_pse_h", ",", "cy1_M_seg_d", "]", ")", ")", "\n", "\n", "cy1_dis_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_dis_I_pse_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy1_I_pse_h", ")", ")", "\n", "cy1_dis_M_seg_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_dis_M_seg_d'", ")", "(", "self", ".", "D_msk_d", "(", "cy1_M_seg_d", ")", ")", "\n", "\n", "# Cycle 2: h to h to h", "\n", "cy2_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_M_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_I_pse_h", "=", "self", ".", "G_h_to_d", "(", "[", "cy2_I_h", ",", "cy2_M_h", "]", ")", "\n", "\n", "cy2_dis_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_dis_I_pse_d'", ")", "(", "self", ".", "D_pse_h", "(", "cy2_I_pse_h", ")", ")", "\n", "cy2_I_rec_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_I_rec_h'", ")", "(", "self", ".", "G_d_to_h", "(", "cy2_I_pse_h", ")", ")", "\n", "cy2_M_rec_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_M_rec_h'", ")", "(", "self", ".", "S_d_to_msk", "(", "cy2_I_pse_h", ")", ")", "\n", "\n", "self", ".", "gan", "=", "Model", "(", "inputs", "=", "[", "cy1_I_p", ",", "cy2_I_h", ",", "cy2_M_h", "]", ",", "outputs", "=", "[", "cy1_dis_I_pse_h", ",", "cy1_dis_M_seg_d", ",", "cy1_I_rec_d", ",", "cy2_dis_I_pse_h", ",", "cy2_I_rec_h", ",", "cy2_M_rec_h", "]", ")", "\n", "self", ".", "gan", ".", "compile", "(", "loss", "=", "{", "'cy1_dis_I_pse_h'", ":", "wasserstein_loss", ",", "'cy1_dis_M_seg_d'", ":", "wasserstein_loss", ",", "'cy1_I_rec_d'", ":", "\"MAE\"", ",", "\n", "'cy2_dis_I_pse_d'", ":", "wasserstein_loss", ",", "'cy2_I_rec_h'", ":", "\"MAE\"", ",", "'cy2_M_rec_h'", ":", "\"MAE\"", "}", ",", "\n", "loss_weights", "=", "[", "2", ",", "1", ",", "20", ",", "1", ",", "10", ",", "10", "]", ",", "\n", "optimizer", "=", "Adam", "(", "lr", "=", "self", ".", "conf", ".", "lr", ",", "decay", "=", "self", ".", "conf", ".", "decay", ")", ")", "\n", "self", ".", "gan", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "#=============================== Build D model ======================================", "\n", "\n", "self", ".", "D_pse_h", ".", "trainable", "=", "True", "\n", "self", ".", "D_msk_d", ".", "trainable", "=", "True", "\n", "\n", "# Cycle 1: p to h to p", "\n", "cy1_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_I_pse_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_average_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "\n", "cy1_M_d", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_M_seg_d", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_average_M_d", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "\n", "cy2_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_I_pse_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_average_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "\n", "\n", "dis_cy1_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy1_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy1_I_h", ")", ")", "\n", "dis_cy1_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy1_I_pse_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy1_I_pse_h", ")", ")", "\n", "gp_cy1_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'gp_cy1_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "[", "cy1_average_I_h", "]", ")", ")", "\n", "\n", "dis_cy1_M_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy1_M_d'", ")", "(", "self", ".", "D_msk_d", "(", "cy1_M_d", ")", ")", "\n", "dis_cy1_M_seg_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy1_M_seg_d'", ")", "(", "self", ".", "D_msk_d", "(", "cy1_M_seg_d", ")", ")", "\n", "gp_cy1_M_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'gp_cy1_M_d'", ")", "(", "self", ".", "D_msk_d", "(", "[", "cy1_average_M_d", "]", ")", ")", "\n", "\n", "dis_cy2_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy2_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy2_I_h", ")", ")", "\n", "dis_cy2_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy2_I_pse_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy2_I_pse_h", ")", ")", "\n", "gp_cy2_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'gp_cy2_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "[", "cy2_average_I_h", "]", ")", ")", "\n", "# Gradient penalty loss", "\n", "cy1_partial_gp_loss", "=", "partial", "(", "gradient_penalty_loss", ",", "\n", "averaged_samples", "=", "cy1_average_I_h", ",", "\n", "gradient_penalty_weight", "=", "self", ".", "conf", ".", "gp_weight", ")", "\n", "cy2_partial_gp_loss", "=", "partial", "(", "gradient_penalty_loss", ",", "\n", "averaged_samples", "=", "cy2_average_I_h", ",", "\n", "gradient_penalty_weight", "=", "self", ".", "conf", ".", "gp_weight", ")", "\n", "cy1_partial_gp_loss_mask", "=", "partial", "(", "gradient_penalty_loss", ",", "\n", "averaged_samples", "=", "cy1_average_M_d", ",", "\n", "gradient_penalty_weight", "=", "self", ".", "conf", ".", "gp_weight", ")", "\n", "\n", "# Function need names or Keras will throw an error", "\n", "cy1_partial_gp_loss", ".", "__name__", "=", "'cy1_gradient_penalty'", "\n", "cy2_partial_gp_loss", ".", "__name__", "=", "'cy2_gradient_penalty'", "\n", "cy1_partial_gp_loss_mask", ".", "__name__", "=", "'cy1_gradient_penalty_mask'", "\n", "\n", "self", ".", "critic_model", "=", "Model", "(", "inputs", "=", "[", "cy1_I_h", ",", "cy1_I_pse_h", ",", "cy1_average_I_h", ",", "\n", "cy1_M_d", ",", "cy1_M_seg_d", ",", "cy1_average_M_d", ",", "\n", "cy2_I_h", ",", "cy2_I_pse_h", ",", "cy2_average_I_h", "]", ",", "\n", "outputs", "=", "[", "dis_cy1_I_h", ",", "dis_cy1_I_pse_h", ",", "gp_cy1_I_h", ",", "\n", "dis_cy1_M_d", ",", "dis_cy1_M_seg_d", ",", "gp_cy1_M_d", ",", "\n", "dis_cy2_I_h", ",", "dis_cy2_I_pse_h", ",", "gp_cy2_I_h", "]", ")", "\n", "\n", "self", ".", "critic_model", ".", "compile", "(", "optimizer", "=", "Adam", "(", "lr", "=", "self", ".", "conf", ".", "lr", ",", "decay", "=", "self", ".", "conf", ".", "decay", ")", ",", "\n", "loss", "=", "{", "'dis_cy1_I_h'", ":", "wasserstein_loss", ",", "\n", "'dis_cy1_I_pse_h'", ":", "wasserstein_loss", ",", "\n", "'gp_cy1_I_h'", ":", "cy1_partial_gp_loss", ",", "\n", "'dis_cy1_M_d'", ":", "wasserstein_loss", ",", "\n", "'dis_cy1_M_seg_d'", ":", "wasserstein_loss", ",", "\n", "'gp_cy1_M_d'", ":", "cy1_partial_gp_loss_mask", ",", "\n", "'dis_cy2_I_h'", ":", "wasserstein_loss", ",", "\n", "'dis_cy2_I_pse_h'", ":", "wasserstein_loss", ",", "\n", "'gp_cy2_I_h'", ":", "cy2_partial_gp_loss", "\n", "}", ")", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.load_models": [[179, 183], ["os.path.exists", "log.info", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.gan.load_weights"], "methods", ["None"], ["", "def", "load_models", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "conf", ".", "folder", "+", "\"/MIDL_model\"", ")", ":", "\n", "            ", "log", ".", "info", "(", "\"Loading trained model from file\"", ")", "\n", "self", ".", "gan", ".", "load_weights", "(", "self", ".", "conf", ".", "folder", "+", "\"/MIDL_model\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.save_models": [[184, 187], ["log.debug", "pseudo_healthy_unsupervised.pseudo_healthy_unsupervised.gan.save_weights"], "methods", ["None"], ["", "", "def", "save_models", "(", "self", ")", ":", "\n", "        ", "log", ".", "debug", "(", "\"Saving trained model\"", ")", "\n", "self", ".", "gan", ".", "save_weights", "(", "self", ".", "conf", ".", "folder", "+", "\"/MIDL_model\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.__init__": [[38, 41], ["models.basenet.BaseNet.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["def", "__init__", "(", "self", ",", "conf", ")", ":", "\n", "        ", "super", "(", "pseudo_healthy_semisupervised", ",", "self", ")", ".", "__init__", "(", "conf", ")", "\n", "self", ".", "conf", "=", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.build": [[42, 204], ["models.generators.generator_P_to_H.generator_P_to_H", "models.generators.generator_P_to_H.generator_P_to_H.build", "log.info", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.G_d_to_h.summary", "models.generators.mask_segmentor.mask_segmentor", "models.generators.mask_segmentor.mask_segmentor.build", "log.info", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.S_d_to_msk.summary", "models.generators.generator_H_to_P.generator_H_to_P", "models.generators.generator_H_to_P.generator_H_to_P.build", "log.info", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.G_h_to_d.summary", "models.discriminators.discriminator_image.critic_2D_pse_h", "models.discriminators.discriminator_image.critic_2D_pse_h.build", "log.info", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h.summary", "models.discriminators.discriminatior_mask.critic_2D_mask", "models.discriminators.discriminatior_mask.critic_2D_mask.build", "log.info", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_msk_d.summary", "keras.Input", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.G_d_to_h", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.S_d_to_msk", "keras.Input", "keras.Input", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.G_h_to_d", "keras.Model", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.gan_sup.compile", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.gan_sup.summary", "keras.Input", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.G_d_to_h", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.S_d_to_msk", "keras.Input", "keras.Input", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.G_h_to_d", "keras.Model", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.gan_unsup.compile", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.gan_unsup.summary", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "keras.Input", "functools.partial", "functools.partial", "functools.partial", "keras.Model", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.critic_model.compile", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.G_h_to_d", "keras.layers.Activation", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.G_d_to_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.S_d_to_msk", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.G_h_to_d", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_msk_d", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.G_d_to_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.S_d_to_msk", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_msk_d", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_msk_d", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_msk_d", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h", "keras.layers.Activation", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.D_pse_h", "keras.optimizers.Adam", "keras.optimizers.Adam", "keras.optimizers.Adam"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build"], ["", "def", "build", "(", "self", ")", ":", "\n", "# Build G_d_to_h", "\n", "        ", "G_d_to_h", "=", "generator_P_to_H", "(", "self", ".", "conf", ".", "gen_params_p_to_h", ")", "\n", "G_d_to_h", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Generator from pathological to healthy\"", ")", "\n", "self", ".", "G_d_to_h", "=", "G_d_to_h", ".", "model", "\n", "self", ".", "G_d_to_h", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "# Build pathology segmentor", "\n", "S_d_to_msk", "=", "mask_segmentor", "(", "self", ".", "conf", ".", "seg_params", ")", "\n", "S_d_to_msk", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Pathology segmentor\"", ")", "\n", "self", ".", "S_d_to_msk", "=", "S_d_to_msk", ".", "model", "\n", "self", ".", "S_d_to_msk", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "# Build G_h_to_d", "\n", "G_h_to_d", "=", "generator_H_to_P", "(", "self", ".", "conf", ".", "gen_params_h_to_p", ")", "\n", "G_h_to_d", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Generator from pathological to healthy\"", ")", "\n", "self", ".", "G_h_to_d", "=", "G_h_to_d", ".", "model", "\n", "self", ".", "G_h_to_d", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "# Build D_pse_h", "\n", "D_pse_h", "=", "critic_2D_pse_h", "(", "self", ".", "conf", ".", "D_pse_h_params", ")", "\n", "D_pse_h", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Pseudo healthy discriminator\"", ")", "\n", "self", ".", "D_pse_h", "=", "D_pse_h", ".", "model", "\n", "self", ".", "D_pse_h", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "# Build D_msk_d", "\n", "D_msk_d", "=", "critic_2D_mask", "(", "self", ".", "conf", ".", "D_msk_d_params", ")", "\n", "D_msk_d", ".", "build", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Mask for discriminator\"", ")", "\n", "self", ".", "D_msk_d", "=", "D_msk_d", ".", "model", "\n", "self", ".", "D_msk_d", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "#=============================== Build G model supervised =====================================", "\n", "self", ".", "D_pse_h", ".", "trainable", "=", "False", "\n", "# Cycle 1: p to h to p", "\n", "cy1_I_p", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_I_pse_h", "=", "self", ".", "G_d_to_h", "(", "cy1_I_p", ")", "\n", "cy1_M_seg_d", "=", "self", ".", "S_d_to_msk", "(", "cy1_I_p", ")", "\n", "\n", "cy1_I_rec_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_I_rec_d'", ")", "(", "self", ".", "G_h_to_d", "(", "[", "cy1_I_pse_h", ",", "cy1_M_seg_d", "]", ")", ")", "\n", "cy1_M_seg_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_M_seg_d'", ")", "(", "cy1_M_seg_d", ")", "\n", "cy1_dis_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_dis_I_pse_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy1_I_pse_h", ")", ")", "\n", "\n", "# Cycle 2: h to h to h", "\n", "cy2_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_M_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_I_pse_h", "=", "self", ".", "G_h_to_d", "(", "[", "cy2_I_h", ",", "cy2_M_h", "]", ")", "\n", "\n", "cy2_dis_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_dis_I_pse_d'", ")", "(", "self", ".", "D_pse_h", "(", "cy2_I_pse_h", ")", ")", "\n", "cy2_I_rec_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_I_rec_h'", ")", "(", "self", ".", "G_d_to_h", "(", "cy2_I_pse_h", ")", ")", "\n", "cy2_M_rec_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_M_rec_h'", ")", "(", "self", ".", "S_d_to_msk", "(", "cy2_I_pse_h", ")", ")", "\n", "\n", "self", ".", "gan_sup", "=", "Model", "(", "inputs", "=", "[", "cy1_I_p", ",", "cy2_I_h", ",", "cy2_M_h", "]", ",", "outputs", "=", "[", "cy1_dis_I_pse_h", ",", "cy1_M_seg_d", ",", "cy1_I_rec_d", ",", "cy2_dis_I_pse_h", ",", "cy2_I_rec_h", ",", "cy2_M_rec_h", "]", ")", "\n", "self", ".", "gan_sup", ".", "compile", "(", "loss", "=", "{", "'cy1_dis_I_pse_h'", ":", "wasserstein_loss", ",", "'cy1_M_seg_d'", ":", "dice_coef_loss", ",", "'cy1_I_rec_d'", ":", "\"MAE\"", ",", "\n", "'cy2_dis_I_pse_d'", ":", "wasserstein_loss", ",", "'cy2_I_rec_h'", ":", "\"MAE\"", ",", "'cy2_M_rec_h'", ":", "\"MAE\"", "}", ",", "\n", "loss_weights", "=", "[", "2", ",", "10", ",", "20", ",", "1", ",", "10", ",", "10", "]", ",", "\n", "optimizer", "=", "Adam", "(", "lr", "=", "self", ".", "conf", ".", "lr", ",", "decay", "=", "self", ".", "conf", ".", "decay", ")", ")", "\n", "self", ".", "gan_sup", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "\n", "#=============================== Build G model unsupervised =====================================", "\n", "self", ".", "D_pse_h", ".", "trainable", "=", "False", "\n", "self", ".", "D_msk_d", ".", "trainable", "=", "False", "\n", "\n", "# Cycle 1: p to h to p", "\n", "cy1_I_p", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_I_pse_h", "=", "self", ".", "G_d_to_h", "(", "cy1_I_p", ")", "\n", "cy1_M_seg_d", "=", "self", ".", "S_d_to_msk", "(", "cy1_I_p", ")", "\n", "\n", "cy1_I_rec_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_I_rec_d'", ")", "(", "self", ".", "G_h_to_d", "(", "[", "cy1_I_pse_h", ",", "cy1_M_seg_d", "]", ")", ")", "\n", "\n", "cy1_dis_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_dis_I_pse_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy1_I_pse_h", ")", ")", "\n", "cy1_dis_M_seg_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy1_dis_M_seg_d'", ")", "(", "self", ".", "D_msk_d", "(", "cy1_M_seg_d", ")", ")", "\n", "\n", "# Cycle 2: h to h to h", "\n", "cy2_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_M_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_I_pse_h", "=", "self", ".", "G_h_to_d", "(", "[", "cy2_I_h", ",", "cy2_M_h", "]", ")", "\n", "\n", "cy2_dis_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_dis_I_pse_d'", ")", "(", "self", ".", "D_pse_h", "(", "cy2_I_pse_h", ")", ")", "\n", "cy2_I_rec_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_I_rec_h'", ")", "(", "self", ".", "G_d_to_h", "(", "cy2_I_pse_h", ")", ")", "\n", "cy2_M_rec_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'cy2_M_rec_h'", ")", "(", "self", ".", "S_d_to_msk", "(", "cy2_I_pse_h", ")", ")", "\n", "\n", "self", ".", "gan_unsup", "=", "Model", "(", "inputs", "=", "[", "cy1_I_p", ",", "cy2_I_h", ",", "cy2_M_h", "]", ",", "outputs", "=", "[", "cy1_dis_I_pse_h", ",", "cy1_dis_M_seg_d", ",", "cy1_I_rec_d", ",", "cy2_dis_I_pse_h", ",", "cy2_I_rec_h", ",", "cy2_M_rec_h", "]", ")", "\n", "self", ".", "gan_unsup", ".", "compile", "(", "loss", "=", "{", "'cy1_dis_I_pse_h'", ":", "wasserstein_loss", ",", "'cy1_dis_M_seg_d'", ":", "wasserstein_loss", ",", "'cy1_I_rec_d'", ":", "\"MAE\"", ",", "\n", "'cy2_dis_I_pse_d'", ":", "wasserstein_loss", ",", "'cy2_I_rec_h'", ":", "\"MAE\"", ",", "'cy2_M_rec_h'", ":", "\"MAE\"", "}", ",", "\n", "loss_weights", "=", "[", "2", ",", "1", ",", "20", ",", "1", ",", "10", ",", "10", "]", ",", "\n", "optimizer", "=", "Adam", "(", "lr", "=", "self", ".", "conf", ".", "lr", ",", "decay", "=", "self", ".", "conf", ".", "decay", ")", ")", "\n", "self", ".", "gan_unsup", ".", "summary", "(", "print_fn", "=", "log", ".", "info", ")", "\n", "#=============================== Build D model ======================================", "\n", "\n", "self", ".", "D_pse_h", ".", "trainable", "=", "True", "\n", "self", ".", "D_msk_d", ".", "trainable", "=", "True", "\n", "\n", "# Cycle 1: p to h to p", "\n", "cy1_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_I_pse_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_average_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "\n", "cy1_M_d", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_M_seg_d", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy1_average_M_d", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "\n", "cy2_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_I_pse_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "cy2_average_I_h", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "\n", "\n", "dis_cy1_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy1_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy1_I_h", ")", ")", "\n", "dis_cy1_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy1_I_pse_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy1_I_pse_h", ")", ")", "\n", "gp_cy1_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'gp_cy1_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "[", "cy1_average_I_h", "]", ")", ")", "\n", "\n", "dis_cy1_M_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy1_M_d'", ")", "(", "self", ".", "D_msk_d", "(", "cy1_M_d", ")", ")", "\n", "dis_cy1_M_seg_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy1_M_seg_d'", ")", "(", "self", ".", "D_msk_d", "(", "cy1_M_seg_d", ")", ")", "\n", "gp_cy1_M_d", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'gp_cy1_M_d'", ")", "(", "self", ".", "D_msk_d", "(", "[", "cy1_average_M_d", "]", ")", ")", "\n", "\n", "dis_cy2_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy2_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy2_I_h", ")", ")", "\n", "dis_cy2_I_pse_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'dis_cy2_I_pse_h'", ")", "(", "self", ".", "D_pse_h", "(", "cy2_I_pse_h", ")", ")", "\n", "gp_cy2_I_h", "=", "Activation", "(", "activation", "=", "'linear'", ",", "name", "=", "'gp_cy2_I_h'", ")", "(", "self", ".", "D_pse_h", "(", "[", "cy2_average_I_h", "]", ")", ")", "\n", "# Gradient penalty loss", "\n", "cy1_partial_gp_loss", "=", "partial", "(", "gradient_penalty_loss", ",", "\n", "averaged_samples", "=", "cy1_average_I_h", ",", "\n", "gradient_penalty_weight", "=", "self", ".", "conf", ".", "gp_weight", ")", "\n", "cy2_partial_gp_loss", "=", "partial", "(", "gradient_penalty_loss", ",", "\n", "averaged_samples", "=", "cy2_average_I_h", ",", "\n", "gradient_penalty_weight", "=", "self", ".", "conf", ".", "gp_weight", ")", "\n", "cy1_partial_gp_loss_mask", "=", "partial", "(", "gradient_penalty_loss", ",", "\n", "averaged_samples", "=", "cy1_average_M_d", ",", "\n", "gradient_penalty_weight", "=", "self", ".", "conf", ".", "gp_weight", ")", "\n", "\n", "# Function need names or Keras will throw an error", "\n", "cy1_partial_gp_loss", ".", "__name__", "=", "'cy1_gradient_penalty'", "\n", "cy2_partial_gp_loss", ".", "__name__", "=", "'cy2_gradient_penalty'", "\n", "cy1_partial_gp_loss_mask", ".", "__name__", "=", "'cy1_gradient_penalty_mask'", "\n", "\n", "self", ".", "critic_model", "=", "Model", "(", "inputs", "=", "[", "cy1_I_h", ",", "cy1_I_pse_h", ",", "cy1_average_I_h", ",", "\n", "cy1_M_d", ",", "cy1_M_seg_d", ",", "cy1_average_M_d", ",", "\n", "cy2_I_h", ",", "cy2_I_pse_h", ",", "cy2_average_I_h", "]", ",", "\n", "outputs", "=", "[", "dis_cy1_I_h", ",", "dis_cy1_I_pse_h", ",", "gp_cy1_I_h", ",", "\n", "dis_cy1_M_d", ",", "dis_cy1_M_seg_d", ",", "gp_cy1_M_d", ",", "\n", "dis_cy2_I_h", ",", "dis_cy2_I_pse_h", ",", "gp_cy2_I_h", "]", ")", "\n", "\n", "self", ".", "critic_model", ".", "compile", "(", "optimizer", "=", "Adam", "(", "lr", "=", "self", ".", "conf", ".", "lr", ",", "decay", "=", "self", ".", "conf", ".", "decay", ")", ",", "\n", "loss", "=", "{", "'dis_cy1_I_h'", ":", "wasserstein_loss", ",", "\n", "'dis_cy1_I_pse_h'", ":", "wasserstein_loss", ",", "\n", "'gp_cy1_I_h'", ":", "cy1_partial_gp_loss", ",", "\n", "'dis_cy1_M_d'", ":", "wasserstein_loss", ",", "\n", "'dis_cy1_M_seg_d'", ":", "wasserstein_loss", ",", "\n", "'gp_cy1_M_d'", ":", "cy1_partial_gp_loss_mask", ",", "\n", "'dis_cy2_I_h'", ":", "wasserstein_loss", ",", "\n", "'dis_cy2_I_pse_h'", ":", "wasserstein_loss", ",", "\n", "'gp_cy2_I_h'", ":", "cy2_partial_gp_loss", "\n", "}", ")", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.load_models": [[206, 210], ["os.path.exists", "log.info", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.gan.load_weights"], "methods", ["None"], ["", "def", "load_models", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "conf", ".", "folder", "+", "\"/MIDL_model\"", ")", ":", "\n", "            ", "log", ".", "info", "(", "\"Loading trained model from file\"", ")", "\n", "self", ".", "gan", ".", "load_weights", "(", "self", ".", "conf", ".", "folder", "+", "\"/MIDL_model\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.models.pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.save_models": [[211, 214], ["log.debug", "pseudo_healthy_semisupervised.pseudo_healthy_semisupervised.gan.save_weights"], "methods", ["None"], ["", "", "def", "save_models", "(", "self", ")", ":", "\n", "        ", "log", ".", "debug", "(", "\"Saving trained model\"", ")", "\n", "self", ".", "gan", ".", "save_weights", "(", "self", ".", "conf", ".", "folder", "+", "\"/MIDL_model\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.discriminators.discriminator_image.critic_2D_pse_h.__init__": [[9, 11], ["models.basenet.BaseNet.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conf", ")", ":", "\n", "        ", "super", "(", "critic_2D_pse_h", ",", "self", ")", ".", "__init__", "(", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.discriminators.discriminator_image.critic_2D_pse_h.build": [[12, 67], ["keras.layers.Input", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "keras.models.Model", "keras.layers.MaxPool2D", "keras.layers.MaxPool2D", "keras.layers.MaxPool2D", "keras.layers.MaxPool2D", "keras.layers.Concatenate", "keras.layers.GlobalAveragePooling2D"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer"], ["", "def", "build", "(", "self", ",", "_subname", "=", "None", ")", ":", "\n", "        ", "inp_shape", "=", "self", ".", "conf", ".", "input_shape", "\n", "f", "=", "self", ".", "conf", ".", "filters", "\n", "name", "=", "self", ".", "conf", ".", "name", "+", "_subname", "if", "_subname", "else", "self", ".", "conf", ".", "name", "\n", "\n", "d_input", "=", "Input", "(", "inp_shape", ")", "\n", "\n", "# (batch size, 160, 208, 1)", "\n", "conv1_1", "=", "conv2D_layer", "(", "d_input", ",", "name", "=", "\"conv1_1\"", ",", "filters", "=", "f", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "pool1", "=", "MaxPool2D", "(", ")", "(", "conv1_1", ")", "# (batch size, 80, 104, filters)", "\n", "\n", "# (batch size, 80, 104, filters)", "\n", "conv2_1", "=", "conv2D_layer", "(", "pool1", ",", "name", "=", "\"conv2_1\"", ",", "filters", "=", "f", "*", "2", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "pool2", "=", "MaxPool2D", "(", ")", "(", "conv2_1", ")", "# (batch size, 40, 52, filters*2)", "\n", "\n", "#  (batch size, 40, 52, filters*2)", "\n", "conv3_1", "=", "conv2D_layer", "(", "pool2", ",", "name", "=", "\"conv3_1\"", ",", "filters", "=", "f", "*", "4", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "conv3_2", "=", "conv2D_layer", "(", "conv3_1", ",", "name", "=", "\"conv3_2\"", ",", "filters", "=", "f", "*", "4", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "pool3", "=", "MaxPool2D", "(", ")", "(", "conv3_2", ")", "# (batch size, 20, 26, filters*4)", "\n", "\n", "# (batch size, 20, 26, filters*4)", "\n", "conv4_1", "=", "conv2D_layer", "(", "pool3", ",", "name", "=", "\"conv4_1\"", ",", "filters", "=", "f", "*", "8", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "conv4_2", "=", "conv2D_layer", "(", "conv4_1", ",", "name", "=", "\"conv4_2\"", ",", "filters", "=", "f", "*", "8", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "pool4", "=", "MaxPool2D", "(", ")", "(", "conv4_2", ")", "\n", "# (batch size, 10, 13, filters*8)", "\n", "# =============================================================================================================", "\n", "\n", "mid1_1", "=", "conv2D_layer", "(", "pool4", ",", "name", "=", "\"mid1_1\"", ",", "filters", "=", "f", "*", "8", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "# (batch size, 10, 13, 32)", "\n", "mid1_2", "=", "conv2D_layer", "(", "mid1_1", ",", "name", "=", "\"mid1_2\"", ",", "filters", "=", "f", "*", "8", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "# (batch size, 10, 13, 32+f*8)", "\n", "mid_concat1", "=", "Concatenate", "(", ")", "(", "[", "pool4", ",", "mid1_2", "]", ")", "\n", "# =============================================================================================================", "\n", "conv5_1", "=", "conv2D_layer", "(", "mid_concat1", ",", "name", "=", "\"conv5_1\"", ",", "filters", "=", "f", "*", "16", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "conv5_2", "=", "conv2D_layer", "(", "conv5_1", ",", "name", "=", "\"conv5_2\"", ",", "filters", "=", "f", "*", "16", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "\n", "# (batch size, 10, 13, filters*16)", "\n", "convD_1", "=", "conv2D_layer", "(", "conv5_2", ",", "name", "=", "\"convD_1\"", ",", "filters", "=", "f", "*", "16", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "convD_2", "=", "conv2D_layer", "(", "convD_1", ",", "name", "=", "\"convD_2\"", ",", "filters", "=", "1", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'linear'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "# (batch size, 10, 13, filters*16)", "\n", "averagePool", "=", "GlobalAveragePooling2D", "(", ")", "(", "convD_2", ")", "\n", "\n", "self", ".", "model", "=", "Model", "(", "[", "d_input", "]", ",", "averagePool", ",", "name", "=", "name", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.discriminators.discriminatior_mask.critic_2D_mask.__init__": [[9, 11], ["models.basenet.BaseNet.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conf", ")", ":", "\n", "        ", "super", "(", "critic_2D_mask", ",", "self", ")", ".", "__init__", "(", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.discriminators.discriminatior_mask.critic_2D_mask.build": [[12, 67], ["keras.layers.Input", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "layers.layer.conv2D_layer", "keras.models.Model", "keras.layers.MaxPool2D", "keras.layers.MaxPool2D", "keras.layers.MaxPool2D", "keras.layers.MaxPool2D", "keras.layers.Concatenate", "keras.layers.GlobalAveragePooling2D"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer"], ["", "def", "build", "(", "self", ",", "_subname", "=", "None", ")", ":", "\n", "        ", "inp_shape", "=", "self", ".", "conf", ".", "input_shape", "\n", "f", "=", "self", ".", "conf", ".", "filters", "\n", "name", "=", "self", ".", "conf", ".", "name", "+", "_subname", "if", "_subname", "else", "self", ".", "conf", ".", "name", "\n", "\n", "d_input", "=", "Input", "(", "inp_shape", ")", "\n", "\n", "# (batch size, 160, 208, 1)", "\n", "conv1_1", "=", "conv2D_layer", "(", "d_input", ",", "name", "=", "\"conv1_1\"", ",", "filters", "=", "f", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "pool1", "=", "MaxPool2D", "(", ")", "(", "conv1_1", ")", "# (batch size, 80, 104, filters)", "\n", "\n", "# (batch size, 80, 104, filters)", "\n", "conv2_1", "=", "conv2D_layer", "(", "pool1", ",", "name", "=", "\"conv2_1\"", ",", "filters", "=", "f", "*", "2", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "pool2", "=", "MaxPool2D", "(", ")", "(", "conv2_1", ")", "# (batch size, 40, 52, filters*2)", "\n", "\n", "#  (batch size, 40, 52, filters*2)", "\n", "conv3_1", "=", "conv2D_layer", "(", "pool2", ",", "name", "=", "\"conv3_1\"", ",", "filters", "=", "f", "*", "4", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "conv3_2", "=", "conv2D_layer", "(", "conv3_1", ",", "name", "=", "\"conv3_2\"", ",", "filters", "=", "f", "*", "4", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "pool3", "=", "MaxPool2D", "(", ")", "(", "conv3_2", ")", "# (batch size, 20, 26, filters*4)", "\n", "\n", "# (batch size, 20, 26, filters*4)", "\n", "conv4_1", "=", "conv2D_layer", "(", "pool3", ",", "name", "=", "\"conv4_1\"", ",", "filters", "=", "f", "*", "8", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "conv4_2", "=", "conv2D_layer", "(", "conv4_1", ",", "name", "=", "\"conv4_2\"", ",", "filters", "=", "f", "*", "8", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "pool4", "=", "MaxPool2D", "(", ")", "(", "conv4_2", ")", "\n", "# (batch size, 10, 13, filters*8)", "\n", "# =============================================================================================================", "\n", "\n", "mid1_1", "=", "conv2D_layer", "(", "pool4", ",", "name", "=", "\"mid1_1\"", ",", "filters", "=", "f", "*", "8", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "# (batch size, 10, 13, 32)", "\n", "mid1_2", "=", "conv2D_layer", "(", "mid1_1", ",", "name", "=", "\"mid1_2\"", ",", "filters", "=", "f", "*", "8", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "# (batch size, 10, 13, 32+f*8)", "\n", "mid_concat1", "=", "Concatenate", "(", ")", "(", "[", "pool4", ",", "mid1_2", "]", ")", "\n", "# =============================================================================================================", "\n", "conv5_1", "=", "conv2D_layer", "(", "mid_concat1", ",", "name", "=", "\"conv5_1\"", ",", "filters", "=", "f", "*", "16", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "conv5_2", "=", "conv2D_layer", "(", "conv5_1", ",", "name", "=", "\"conv5_2\"", ",", "filters", "=", "f", "*", "16", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "\n", "# (batch size, 10, 13, filters*16)", "\n", "convD_1", "=", "conv2D_layer", "(", "conv5_2", ",", "name", "=", "\"convD_1\"", ",", "filters", "=", "f", "*", "16", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "convD_2", "=", "conv2D_layer", "(", "convD_1", ",", "name", "=", "\"convD_2\"", ",", "filters", "=", "1", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'linear'", ",", "kernel_initializer", "=", "\"he_normal\"", ")", "\n", "# (batch size, 10, 13, filters*16)", "\n", "averagePool", "=", "GlobalAveragePooling2D", "(", ")", "(", "convD_2", ")", "\n", "\n", "self", ".", "model", "=", "Model", "(", "[", "d_input", "]", ",", "averagePool", ",", "name", "=", "name", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_H_to_P.generator_H_to_P.__init__": [[10, 12], ["models.basenet.BaseNet.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conf", ")", ":", "\n", "        ", "super", "(", "generator_H_to_P", ",", "self", ")", ".", "__init__", "(", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_H_to_P.generator_H_to_P.build": [[13, 66], ["keras.layers.Input", "keras.layers.Input", "layers.layer.conv2D_layer_bn", "layers.layer.conv2D_layer_bn", "layers.layer.g_downsampling_bn", "layers.layer.g_downsampling_bn", "layers.layer.residual_block_bn", "layers.layer.residual_block_bn", "layers.layer.residual_block_bn", "layers.layer.residual_block_bn", "layers.layer.residual_block_bn", "layers.layer.residual_block_bn", "layers.layer.g_upsampling_bn", "layers.layer.conv2D_layer_bn", "layers.layer.g_upsampling_bn", "layers.layer.conv2D_layer_bn", "keras.models.Model", "generator_H_to_P.generator_H_to_P.model.summary", "keras.layers.Concatenate", "keras.layers.Concatenate", "keras.layers.Concatenate", "keras.layers.Conv2D", "keras.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.g_downsampling_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.g_downsampling_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.g_upsampling_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.g_upsampling_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer_bn"], ["", "def", "build", "(", "self", ",", "_subname", "=", "None", ")", ":", "\n", "        ", "f", "=", "self", ".", "conf", ".", "filters", "\n", "name", "=", "self", ".", "conf", ".", "name", "+", "_subname", "if", "_subname", "else", "self", ".", "conf", ".", "name", "\n", "g_image", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "g_mask", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "\n", "# g_input has the shape of (160, 208, 2)", "\n", "g_input", "=", "Concatenate", "(", "-", "1", ")", "(", "[", "g_image", ",", "g_mask", "]", ")", "\n", "\n", "# (batch_size, 208, 160, 1)", "\n", "conv1_1", "=", "conv2D_layer_bn", "(", "g_input", ",", "name", "=", "None", ",", "filters", "=", "32", ",", "kernel_size", "=", "7", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ")", "\n", "conv1_1", "=", "conv2D_layer_bn", "(", "conv1_1", ",", "name", "=", "None", ",", "filters", "=", "32", ",", "kernel_size", "=", "7", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ")", "\n", "# (batch_size, 208, 160, 32)", "\n", "conv2_1", "=", "g_downsampling_bn", "(", "conv1_1", ",", "filters", "=", "f", "*", "2", ")", "\n", "# (batch_size, 104, 80, 64)", "\n", "conv3_1", "=", "g_downsampling_bn", "(", "conv2_1", ",", "filters", "=", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "# ========== residual part ====================================", "\n", "res_1_1", "=", "residual_block_bn", "(", "conv3_1", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "res_1_2", "=", "residual_block_bn", "(", "res_1_1", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "res_1_3", "=", "residual_block_bn", "(", "res_1_2", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "res_1_4", "=", "residual_block_bn", "(", "res_1_3", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "res_1_5", "=", "residual_block_bn", "(", "res_1_4", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "res_1_6", "=", "residual_block_bn", "(", "res_1_5", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "# ========== residual part end ================================", "\n", "conv4_1", "=", "g_upsampling_bn", "(", "res_1_6", ",", "f", "*", "4", ")", "\n", "# (batch_size, 104, 80, 128)", "\n", "concat_1", "=", "Concatenate", "(", ")", "(", "[", "conv4_1", ",", "conv2_1", "]", ")", "\n", "# (batch_size, 104, 80, 192)", "\n", "conv4_2", "=", "conv2D_layer_bn", "(", "concat_1", ",", "name", "=", "\"conv4_2\"", ",", "filters", "=", "f", "*", "2", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ")", "\n", "# (batch_size, 104, 80, 64)", "\n", "conv5_1", "=", "g_upsampling_bn", "(", "conv4_2", ",", "f", "*", "2", ")", "\n", "# (batch_size, 208, 160, 64)", "\n", "concat_2", "=", "Concatenate", "(", ")", "(", "[", "conv5_1", ",", "conv1_1", "]", ")", "\n", "# (batch_size, 208, 160, 96)", "\n", "conv5_2", "=", "conv2D_layer_bn", "(", "concat_2", ",", "name", "=", "\"conv5_1\"", ",", "filters", "=", "f", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ")", "\n", "# (batch_size, 208, 160, 32)", "\n", "conv5_3", "=", "Conv2D", "(", "filters", "=", "1", ",", "name", "=", "\"conv5_3\"", ",", "kernel_size", "=", "7", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "activation", "=", "\"relu\"", ")", "(", "conv5_2", ")", "\n", "# (batch_size, 208, 160, 1)", "\n", "g_output", "=", "Activation", "(", "self", ".", "conf", ".", "G_activation", ")", "(", "conv5_3", ")", "\n", "# (batch_size, 208, 160, 1)", "\n", "self", ".", "model", "=", "Model", "(", "inputs", "=", "[", "g_image", ",", "g_mask", "]", ",", "outputs", "=", "g_output", ",", "name", "=", "name", ")", "\n", "self", ".", "model", ".", "summary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.mask_segmentor.__init__": [[77, 80], ["models.basenet.BaseNet.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["def", "__init__", "(", "self", ",", "conf", ")", ":", "\n", "        ", "super", "(", "mask_segmentor", ",", "self", ")", ".", "__init__", "(", "conf", ")", "\n", "self", ".", "conf", "=", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.mask_segmentor.build": [[81, 93], ["mask_segmentor.Unet", "mask_segmentor.mask_segmentor.model.summary", "mask_segmentor.mask_segmentor.model.compile", "keras.optimizers.Adam", "print"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.Unet"], ["", "def", "build", "(", "self", ",", "_subname", "=", "None", ")", ":", "\n", "        ", "f", "=", "self", ".", "conf", ".", "filters", "\n", "name", "=", "self", ".", "conf", ".", "name", "+", "_subname", "if", "_subname", "else", "self", ".", "conf", ".", "name", "\n", "# (batch_size, 208, 160, 1)", "\n", "self", ".", "model", "=", "Unet", "(", "self", ".", "conf", ".", "input_shape", ",", "out_ch", "=", "1", ",", "start_ch", "=", "f", ",", "depth", "=", "4", ",", "inc_rate", "=", "2.", ",", "activation", "=", "'relu'", ",", "\n", "dropout", "=", "0.3", ",", "batchnorm", "=", "True", ",", "maxpool", "=", "True", ",", "upconv", "=", "True", ",", "residual", "=", "True", ",", "name", "=", "name", ")", "\n", "\n", "try", ":", "\n", "            ", "self", ".", "model", ".", "compile", "(", "Adam", "(", "lr", "=", "self", ".", "conf", ".", "lr", ",", "beta_1", "=", "self", ".", "conf", ".", "beta1", ",", "decay", "=", "self", ".", "conf", ".", "decay", ")", ",", "loss", "=", "dice_coef_loss", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "\"Unet not compiled\"", ")", "\n", "", "self", ".", "model", ".", "summary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.dice_loss_for_testing": [[31, 36], ["numpy.sum", "numpy.sum", "numpy.sum", "numpy.abs", "numpy.abs", "numpy.abs"], "function", ["None"], ["def", "dice_loss_for_testing", "(", "y_pred", ",", "y_true", ",", "smooth", "=", "1", ")", ":", "\n", "    ", "y_int", "=", "y_true", "*", "y_pred", "\n", "# Technically this is the negative of the Sorensen-Dice index. This is done for minimization purposes", "\n", "dice_score", "=", "(", "2", "*", "np", ".", "sum", "(", "np", ".", "abs", "(", "y_int", ")", ")", "+", "smooth", ")", "/", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "y_true", ")", ")", "+", "smooth", "+", "np", ".", "sum", "(", "np", ".", "abs", "(", "y_pred", ")", ")", ")", "\n", "return", "1", "-", "dice_score", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.mixed_loss": [[37, 39], ["keras.binary_crossentropy", "utils.dice_coef_loss"], "function", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.utils.cost.dice_coef_loss"], ["", "def", "mixed_loss", "(", "y_pred", ",", "y_true", ")", ":", "\n", "    ", "return", "K", ".", "binary_crossentropy", "(", "y_pred", ",", "y_true", ")", "+", "utils", ".", "dice_coef_loss", "(", "y_pred", ",", "y_true", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.conv_block": [[40, 47], ["keras.layers.Conv2D", "keras.layers.Conv2D", "keras.layers.BatchNormalization", "keras.layers.Dropout", "keras.layers.BatchNormalization", "keras.layers.Concatenate", "keras.initializers.RandomNormal", "keras.initializers.RandomNormal"], "function", ["None"], ["", "def", "conv_block", "(", "m", ",", "dim", ",", "acti", ",", "bn", ",", "res", ",", "do", "=", "0", ")", ":", "\n", "    ", "n", "=", "Conv2D", "(", "dim", ",", "3", ",", "activation", "=", "acti", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "m", ")", "\n", "n", "=", "BatchNormalization", "(", ")", "(", "n", ")", "if", "bn", "else", "n", "\n", "n", "=", "Dropout", "(", "do", ")", "(", "n", ")", "if", "do", "else", "n", "\n", "n", "=", "Conv2D", "(", "dim", ",", "3", ",", "activation", "=", "acti", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "n", ")", "\n", "n", "=", "BatchNormalization", "(", ")", "(", "n", ")", "if", "bn", "else", "n", "\n", "return", "Concatenate", "(", ")", "(", "[", "m", ",", "n", "]", ")", "if", "res", "else", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.level_block": [[48, 65], ["mask_segmentor.conv_block", "mask_segmentor.level_block", "mask_segmentor.conv_block", "mask_segmentor.conv_block", "int", "keras.layers.Concatenate", "keras.layers.MaxPooling2D", "keras.layers.Conv2D", "keras.layers.UpSampling2D", "keras.layers.Conv2D", "keras.layers.LeakyReLU", "keras.layers.Conv2DTranspose", "keras.layers.LeakyReLU", "keras.initializers.RandomNormal", "keras.initializers.RandomNormal"], "function", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.conv_block", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.level_block", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.conv_block", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.conv_block"], ["", "def", "level_block", "(", "m", ",", "dim", ",", "depth", ",", "inc", ",", "acti", ",", "do", ",", "bn", ",", "mp", ",", "up", ",", "res", ")", ":", "\n", "\t", "if", "depth", ">", "0", ":", "\n", "         ", "n", "=", "conv_block", "(", "m", ",", "dim", ",", "acti", ",", "bn", ",", "res", ")", "\n", "m", "=", "MaxPooling2D", "(", ")", "(", "n", ")", "if", "mp", "else", "Conv2D", "(", "dim", ",", "3", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ")", "(", "n", ")", "\n", "m", "=", "level_block", "(", "m", ",", "int", "(", "inc", "*", "dim", ")", ",", "depth", "-", "1", ",", "inc", ",", "acti", ",", "do", ",", "bn", ",", "mp", ",", "up", ",", "res", ")", "\n", "if", "up", ":", "\n", "             ", "m", "=", "UpSampling2D", "(", ")", "(", "m", ")", "\n", "m", "=", "Conv2D", "(", "dim", ",", "2", ",", "activation", "=", "acti", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "m", ")", "\n", "m", "=", "LeakyReLU", "(", "0.1", ")", "(", "m", ")", "\n", "", "else", ":", "\n", "             ", "m", "=", "Conv2DTranspose", "(", "dim", ",", "3", ",", "strides", "=", "2", ",", "activation", "=", "acti", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "RandomNormal", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.02", ")", ")", "(", "m", ")", "\n", "m", "=", "LeakyReLU", "(", "0.1", ")", "(", "m", ")", "\n", "", "n", "=", "Concatenate", "(", ")", "(", "[", "n", ",", "m", "]", ")", "\n", "m", "=", "conv_block", "(", "n", ",", "dim", ",", "acti", ",", "bn", ",", "res", ")", "\n", "", "else", ":", "\n", "\t\t", "m", "=", "conv_block", "(", "m", ",", "dim", ",", "acti", ",", "bn", ",", "res", ",", "do", ")", "\n", "", "return", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.Unet": [[66, 72], ["keras.models.Input", "mask_segmentor.level_block", "keras.models.Model", "keras.layers.Conv2D"], "function", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.mask_segmentor.level_block"], ["", "def", "Unet", "(", "img_shape", ",", "out_ch", "=", "1", ",", "start_ch", "=", "64", ",", "depth", "=", "4", ",", "inc_rate", "=", "2.", ",", "activation", "=", "'linear'", ",", "\n", "dropout", "=", "0.5", ",", "batchnorm", "=", "True", ",", "maxpool", "=", "True", ",", "upconv", "=", "True", ",", "residual", "=", "True", ",", "name", "=", "None", ")", ":", "\n", "    ", "i", "=", "Input", "(", "shape", "=", "img_shape", ")", "\n", "o", "=", "level_block", "(", "i", ",", "start_ch", ",", "depth", ",", "inc_rate", ",", "activation", ",", "dropout", ",", "batchnorm", ",", "maxpool", ",", "upconv", ",", "residual", ")", "\n", "o", "=", "Conv2D", "(", "out_ch", ",", "1", ",", "activation", "=", "'sigmoid'", ")", "(", "o", ")", "\n", "return", "Model", "(", "inputs", "=", "i", ",", "outputs", "=", "o", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.__init__": [[10, 12], ["models.basenet.BaseNet.__init__"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conf", ")", ":", "\n", "        ", "super", "(", "generator_P_to_H", ",", "self", ")", ".", "__init__", "(", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.generators.generator_P_to_H.generator_P_to_H.build": [[13, 63], ["keras.layers.Input", "layers.layer.conv2D_layer_bn", "layers.layer.conv2D_layer_bn", "layers.layer.g_downsampling_bn", "layers.layer.g_downsampling_bn", "layers.layer.residual_block_bn", "layers.layer.residual_block_bn", "layers.layer.residual_block_bn", "layers.layer.residual_block_bn", "layers.layer.residual_block_bn", "layers.layer.residual_block_bn", "layers.layer.g_upsampling_bn", "layers.layer.conv2D_layer_bn", "layers.layer.g_upsampling_bn", "layers.layer.conv2D_layer_bn", "keras.models.Model", "generator_P_to_H.generator_P_to_H.model.summary", "keras.layers.Concatenate", "keras.layers.Concatenate", "keras.layers.Conv2D", "keras.layers.Activation"], "methods", ["home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.g_downsampling_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.g_downsampling_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.residual_block_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.g_upsampling_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.g_upsampling_bn", "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.layers.layer.conv2D_layer_bn"], ["", "def", "build", "(", "self", ",", "_subname", "=", "None", ")", ":", "\n", "        ", "f", "=", "self", ".", "conf", ".", "filters", "\n", "name", "=", "self", ".", "conf", ".", "name", "+", "_subname", "if", "_subname", "else", "self", ".", "conf", ".", "name", "\n", "g_input", "=", "Input", "(", "shape", "=", "self", ".", "conf", ".", "input_shape", ")", "\n", "\n", "# (batch_size, 208, 160, 1)", "\n", "conv1_1", "=", "conv2D_layer_bn", "(", "g_input", ",", "name", "=", "None", ",", "filters", "=", "32", ",", "kernel_size", "=", "7", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ")", "\n", "conv1_1", "=", "conv2D_layer_bn", "(", "conv1_1", ",", "name", "=", "None", ",", "filters", "=", "32", ",", "kernel_size", "=", "7", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ")", "\n", "# (batch_size, 208, 160, 32)", "\n", "conv2_1", "=", "g_downsampling_bn", "(", "conv1_1", ",", "filters", "=", "f", "*", "2", ")", "\n", "# (batch_size, 104, 80, 64)", "\n", "conv3_1", "=", "g_downsampling_bn", "(", "conv2_1", ",", "filters", "=", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "# ========== residual part ====================================", "\n", "res_1_1", "=", "residual_block_bn", "(", "conv3_1", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "res_1_2", "=", "residual_block_bn", "(", "res_1_1", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "res_1_3", "=", "residual_block_bn", "(", "res_1_2", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "res_1_4", "=", "residual_block_bn", "(", "res_1_3", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "res_1_5", "=", "residual_block_bn", "(", "res_1_4", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "res_1_6", "=", "residual_block_bn", "(", "res_1_5", ",", "f", "*", "4", ")", "\n", "# (batch_size, 52, 40, 128)", "\n", "# ========== residual part end ================================", "\n", "conv4_1", "=", "g_upsampling_bn", "(", "res_1_6", ",", "f", "*", "4", ")", "\n", "# (batch_size, 104, 80, 128)", "\n", "concat_1", "=", "Concatenate", "(", ")", "(", "[", "conv4_1", ",", "conv2_1", "]", ")", "\n", "# (batch_size, 104, 80, 192)", "\n", "conv4_2", "=", "conv2D_layer_bn", "(", "concat_1", ",", "name", "=", "\"conv4_2\"", ",", "filters", "=", "f", "*", "2", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ")", "\n", "# (batch_size, 104, 80, 64)", "\n", "conv5_1", "=", "g_upsampling_bn", "(", "conv4_2", ",", "f", "*", "2", ")", "\n", "# (batch_size, 208, 160, 64)", "\n", "concat_2", "=", "Concatenate", "(", ")", "(", "[", "conv5_1", ",", "conv1_1", "]", ")", "\n", "# (batch_size, 208, 160, 96)", "\n", "conv5_2", "=", "conv2D_layer_bn", "(", "concat_2", ",", "name", "=", "\"conv5_1\"", ",", "filters", "=", "f", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "'same'", ",", "\n", "activation", "=", "'relu'", ")", "\n", "# (batch_size, 208, 160, 32)", "\n", "conv5_3", "=", "Conv2D", "(", "filters", "=", "1", ",", "name", "=", "\"conv5_3\"", ",", "kernel_size", "=", "7", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "activation", "=", "\"relu\"", ")", "(", "conv5_2", ")", "\n", "# (batch_size, 208, 160, 1)", "\n", "g_output", "=", "Activation", "(", "self", ".", "conf", ".", "G_activation", ")", "(", "conv5_3", ")", "\n", "# (batch_size, 208, 160, 1)", "\n", "\n", "self", ".", "model", "=", "Model", "(", "inputs", "=", "g_input", ",", "outputs", "=", "g_output", ",", "name", "=", "name", ")", "\n", "self", ".", "model", ".", "summary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.basic_loader.Loader.__init__": [[10, 13], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "conf", "=", "None", ")", ":", "\n", "# super.__init__()", "\n", "        ", "pass", "", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.data_loader.data_loader.__init__": [[8, 10], ["os.path.abspath"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "data_folder", "=", "os", ".", "path", ".", "abspath", "(", "'dataset'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.data_loader.data_loader.load_data": [[11, 50], ["numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load"], "methods", ["None"], ["", "def", "load_data", "(", "self", ",", "dataset", "=", "\"isles\"", ",", "modality", "=", "\"flair\"", ",", "split", "=", "\"1\"", ")", ":", "\n", "        ", "\"\"\"\n        load data given modality and split\n        \"\"\"", "\n", "if", "modality", "==", "\"brats\"", ":", "\n", "            ", "unhealthy_images_tr", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/unhealthy_image_training.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "unhealthy_masks_tr", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/unhealthy_mask_training.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "healthy_images_tr", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/camcan/%s/%s/healthy_image_training.npy'", "%", "(", "modality", ",", "split", ")", ",", "allow_pickle", "=", "True", ")", "\n", "healthy_masks_tr", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/camcan/%s/%s/healthy_mask_training.npy'", "%", "(", "modality", ",", "split", ")", ",", "allow_pickle", "=", "True", ")", "\n", "\n", "unhealthy_images_va", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/unhealthy_image_validation.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "unhealthy_masks_va", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/unhealthy_mask_validation.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "healthy_images_va", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/camcan/%s/%s/healthy_image_validation.npy'", "%", "(", "modality", ",", "split", ")", ",", "allow_pickle", "=", "True", ")", "\n", "healthy_masks_va", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/camcan/%s/%s/healthy_mask_validation.npy'", "%", "(", "modality", ",", "split", ")", ",", "allow_pickle", "=", "True", ")", "\n", "\n", "", "if", "modality", "==", "\"isles\"", ":", "\n", "            ", "unhealthy_images_tr", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/unhealthy_image_training.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "unhealthy_masks_tr", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/unhealthy_mask_training.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "healthy_images_tr", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/healthy_image_training.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "healthy_masks_tr", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/healthy_mask_training.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "\n", "unhealthy_images_va", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/unhealthy_image_validation.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "unhealthy_masks_va", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/unhealthy_mask_validation.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "healthy_images_va", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/healthy_image_validation.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "healthy_masks_va", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "\"/%s/%s/%s/healthy_mask_validation.npy\"", "%", "(", "dataset", ",", "modality", ",", "split", ")", ",", "\n", "allow_pickle", "=", "True", ")", "\n", "\n", "", "return", "unhealthy_images_tr", ",", "unhealthy_masks_tr", ",", "healthy_images_tr", ",", "healthy_masks_tr", ",", "unhealthy_images_va", ",", "unhealthy_masks_va", ",", "healthy_images_va", ",", "healthy_masks_va", "", "", "", ""]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.__init__": [[10, 13], ["os.path.abspath"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "conf", ")", ":", "\n", "        ", "self", ".", "data_folder", "=", "os", ".", "path", ".", "abspath", "(", "'dataset'", ")", "\n", "self", ".", "conf", "=", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.load_BraTs_data": [[15, 57], ["print", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.min"], "methods", ["None"], ["", "def", "load_BraTs_data", "(", "self", ",", "dataset", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Load all data and age labels\n        Generate age ordinal vectors\n        :return: all data and age labels\n        \"\"\"", "\n", "# Load data from saved numpy arrays", "\n", "if", "self", ".", "conf", ".", "modality", "==", "\"flair\"", ":", "\n", "            ", "unhealthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/unhealthy_flair_BraTs.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "unhealthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/unhealthy_mask_BraTs.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "healthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/healthy_flair_BraTs.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "healthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/healthy_mask_BraTs.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "\n", "# print(np.shape(unhealthy_masks))", "\n", "# print(np.shape(unhealthy_images))", "\n", "", "if", "self", ".", "conf", ".", "modality", "==", "\"t2\"", ":", "\n", "            ", "unhealthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/unhealthy_t2_training.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "unhealthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/unhealthy_t2_mask_training.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "healthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/healthy_t2_training.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "healthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/healthy_t2_mask_training.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "\n", "# unhealthy_images_te = np.load(self.data_folder + '/BraTs_t2/unhealthy_t2_testing.npy')", "\n", "# unhealthy_masks_te = np.load(self.data_folder + '/BraTs_t2/unhealthy_t2_mask_testing.npy')", "\n", "# healthy_images_te = np.load(self.data_folder + '/BraTs_t2/healthy_t2_testing.npy')", "\n", "# healthy_masks_te = np.load(self.data_folder + '/BraTs_t2/healthy_t2_mask_testing.npy')", "\n", "\n", "unhealthy_images", "=", "np", ".", "concatenate", "(", "unhealthy_images", ",", "axis", "=", "0", ")", "\n", "unhealthy_masks", "=", "np", ".", "concatenate", "(", "unhealthy_masks", ",", "axis", "=", "0", ")", "\n", "healthy_images", "=", "np", ".", "concatenate", "(", "healthy_images", ",", "axis", "=", "0", ")", "\n", "healthy_masks", "=", "np", ".", "concatenate", "(", "healthy_masks", ",", "axis", "=", "0", ")", "\n", "\n", "# unhealthy_images_te = np.concatenate(unhealthy_images_te, axis=0)", "\n", "# unhealthy_masks_te = np.concatenate(unhealthy_masks_te, axis=0)", "\n", "# healthy_images_te = np.concatenate(healthy_images_te, axis=0)", "\n", "# healthy_masks_te = np.concatenate(healthy_masks_te, axis=0)", "\n", "\n", "", "print", "(", "np", ".", "min", "(", "unhealthy_images", ")", ")", "\n", "\n", "try", ":", "\n", "            ", "return", "unhealthy_images", ",", "unhealthy_masks", ",", "healthy_images", ",", "healthy_masks", ",", "unhealthy_images_te", ",", "unhealthy_masks_te", ",", "healthy_images_te", ",", "healthy_masks_te", "\n", "", "except", ":", "\n", "            ", "return", "unhealthy_images", ",", "unhealthy_masks", ",", "healthy_images", ",", "healthy_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.load_previous_data": [[58, 83], ["numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load"], "methods", ["None"], ["", "", "def", "load_previous_data", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "conf", ".", "modality", "==", "\"flair\"", ":", "\n", "            ", "unhealthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/unhealthy_flair_training.npy'", ",", "encoding", "=", "\"latin1\"", ",", "allow_pickle", "=", "True", ")", "\n", "unhealthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/unhealthy_mask_training.npy'", ",", "encoding", "=", "\"latin1\"", ",", "allow_pickle", "=", "True", ")", "\n", "healthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/healthy_flair_training.npy'", ",", "encoding", "=", "\"latin1\"", ",", "allow_pickle", "=", "True", ")", "\n", "healthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/healthy_mask_training.npy'", ",", "encoding", "=", "\"latin1\"", ",", "allow_pickle", "=", "True", ")", "\n", "", "if", "self", ".", "conf", ".", "modality", "==", "\"t2\"", ":", "\n", "            ", "unhealthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/unhealthy_t2_training.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "unhealthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/unhealthy_t2_mask_training.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "healthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/healthy_t2_training.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "healthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/healthy_t2_mask_training.npy'", ",", "allow_pickle", "=", "True", ")", "\n", "\n", "", "unhealthy_images", "=", "np", ".", "concatenate", "(", "unhealthy_images", ",", "axis", "=", "0", ")", "\n", "unhealthy_masks", "=", "np", ".", "concatenate", "(", "unhealthy_masks", ",", "axis", "=", "0", ")", "\n", "healthy_images", "=", "np", ".", "concatenate", "(", "healthy_images", ",", "axis", "=", "0", ")", "\n", "healthy_masks", "=", "np", ".", "concatenate", "(", "healthy_masks", ",", "axis", "=", "0", ")", "\n", "# print(np.shape(unhealthy_masks))", "\n", "#healthy_images", "\n", "# print(np.min(unhealthy_images))", "\n", "# print(np.mean(unhealthy_masks))", "\n", "#", "\n", "# print(np.shape(healthy_masks))", "\n", "# print(np.mean(healthy_images))", "\n", "\n", "return", "unhealthy_images", ",", "unhealthy_masks", ",", "healthy_images", ",", "healthy_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.load_BraTs_data_for_Unet": [[84, 126], ["print", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.min"], "methods", ["None"], ["", "def", "load_BraTs_data_for_Unet", "(", "self", ",", "dataset", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Load all data and age labels\n        Generate age ordinal vectors\n        :return: all data and age labels\n        \"\"\"", "\n", "# Load data from saved numpy arrays", "\n", "if", "self", ".", "conf", ".", "modality", "==", "\"flair\"", ":", "\n", "            ", "unhealthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/unhealthy_flair_BraTs.npy'", ")", "\n", "unhealthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/unhealthy_mask_BraTs.npy'", ")", "\n", "healthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/healthy_flair_BraTs.npy'", ")", "\n", "healthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs/healthy_mask_BraTs.npy'", ")", "\n", "\n", "# print(np.shape(unhealthy_masks))", "\n", "# print(np.shape(unhealthy_images))", "\n", "", "if", "self", ".", "conf", ".", "modality", "==", "\"t2\"", ":", "\n", "            ", "unhealthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/unhealthy_t2_training.npy'", ")", "\n", "unhealthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/unhealthy_t2_mask_training.npy'", ")", "\n", "healthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/healthy_t2_training.npy'", ")", "\n", "healthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/healthy_t2_mask_training.npy'", ")", "\n", "\n", "unhealthy_images_te", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/unhealthy_t2_testing.npy'", ")", "\n", "unhealthy_masks_te", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/unhealthy_t2_mask_testing.npy'", ")", "\n", "healthy_images_te", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/healthy_t2_testing.npy'", ")", "\n", "healthy_masks_te", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/healthy_t2_mask_testing.npy'", ")", "\n", "\n", "unhealthy_images", "=", "np", ".", "concatenate", "(", "unhealthy_images", ",", "axis", "=", "0", ")", "\n", "unhealthy_masks", "=", "np", ".", "concatenate", "(", "unhealthy_masks", ",", "axis", "=", "0", ")", "\n", "healthy_images", "=", "np", ".", "concatenate", "(", "healthy_images", ",", "axis", "=", "0", ")", "\n", "healthy_masks", "=", "np", ".", "concatenate", "(", "healthy_masks", ",", "axis", "=", "0", ")", "\n", "\n", "unhealthy_images_te", "=", "np", ".", "concatenate", "(", "unhealthy_images_te", ",", "axis", "=", "0", ")", "\n", "unhealthy_masks_te", "=", "np", ".", "concatenate", "(", "unhealthy_masks_te", ",", "axis", "=", "0", ")", "\n", "healthy_images_te", "=", "np", ".", "concatenate", "(", "healthy_images_te", ",", "axis", "=", "0", ")", "\n", "healthy_masks_te", "=", "np", ".", "concatenate", "(", "healthy_masks_te", ",", "axis", "=", "0", ")", "\n", "\n", "", "print", "(", "np", ".", "min", "(", "unhealthy_images", ")", ")", "\n", "\n", "try", ":", "\n", "            ", "return", "unhealthy_images", ",", "unhealthy_masks", ",", "healthy_images", ",", "healthy_masks", ",", "unhealthy_images_te", ",", "unhealthy_masks_te", ",", "healthy_images_te", ",", "healthy_masks_te", "\n", "", "except", ":", "\n", "            ", "return", "unhealthy_images", ",", "unhealthy_masks", ",", "healthy_images", ",", "healthy_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.load_cam_and_brats_t2_data": [[128, 147], ["numpy.load", "numpy.load", "numpy.load", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.zeros", "print", "print", "print", "print", "numpy.swapaxes", "numpy.shape", "numpy.shape", "numpy.max", "numpy.min", "numpy.shape", "numpy.max", "numpy.min", "numpy.shape", "numpy.max", "numpy.min", "numpy.shape", "numpy.max", "numpy.min", "numpy.swapaxes", "numpy.swapaxes"], "methods", ["None"], ["", "", "def", "load_cam_and_brats_t2_data", "(", "self", ")", ":", "\n", "# data_dir ='dataset'", "\n", "        ", "unhealthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/unhealthy_t2_training.npy'", ")", "\n", "unhealthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/unhealthy_t2_mask_training.npy'", ")", "\n", "\n", "healthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/Cam_t2/camcan_imgs_t2.npy'", ")", "\n", "\n", "\n", "unhealthy_images", "=", "np", ".", "concatenate", "(", "unhealthy_images", ",", "axis", "=", "0", ")", "\n", "unhealthy_masks", "=", "np", ".", "concatenate", "(", "unhealthy_masks", ",", "axis", "=", "0", ")", "\n", "healthy_images", "=", "np", ".", "concatenate", "(", "np", ".", "swapaxes", "(", "np", ".", "swapaxes", "(", "np", ".", "swapaxes", "(", "healthy_images", ",", "2", ",", "3", ")", ",", "1", ",", "2", ")", ",", "2", ",", "3", ")", ",", "axis", "=", "0", ")", "\n", "healthy_masks", "=", "np", ".", "zeros", "(", "np", ".", "shape", "(", "healthy_images", ")", ")", "\n", "\n", "print", "(", "np", ".", "shape", "(", "unhealthy_images", ")", ",", "np", ".", "max", "(", "unhealthy_images", ")", ",", "np", ".", "min", "(", "unhealthy_images", ")", ")", "\n", "print", "(", "np", ".", "shape", "(", "unhealthy_masks", ")", ",", "np", ".", "max", "(", "unhealthy_masks", ")", ",", "np", ".", "min", "(", "unhealthy_masks", ")", ")", "\n", "print", "(", "np", ".", "shape", "(", "healthy_images", ")", ",", "np", ".", "max", "(", "healthy_images", ")", ",", "np", ".", "min", "(", "healthy_images", ")", ")", "\n", "print", "(", "np", ".", "shape", "(", "healthy_masks", ")", ",", "np", ".", "max", "(", "healthy_masks", ")", ",", "np", ".", "min", "(", "healthy_masks", ")", ")", "\n", "\n", "return", "unhealthy_images", ",", "unhealthy_masks", ",", "healthy_images", ",", "healthy_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.xiat0616_pseudo-healthy-synthesis.loader.loader_BraTs.loader_BraTs.load_data_for_deformation_classifier": [[148, 164], ["numpy.load", "numpy.load", "numpy.load", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.zeros", "print", "print", "print", "print", "numpy.swapaxes", "numpy.shape", "numpy.shape", "numpy.max", "numpy.min", "numpy.shape", "numpy.max", "numpy.min", "numpy.shape", "numpy.max", "numpy.min", "numpy.shape", "numpy.max", "numpy.min", "numpy.swapaxes", "numpy.swapaxes"], "methods", ["None"], ["", "def", "load_data_for_deformation_classifier", "(", "self", ")", ":", "\n", "        ", "unhealthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/healthy_t2_training.npy'", ")", "\n", "unhealthy_masks", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/BraTs_t2/healthy_t2_mask_training.npy'", ")", "\n", "healthy_images", "=", "np", ".", "load", "(", "self", ".", "data_folder", "+", "'/Cam_t2/camcan_imgs_t2.npy'", ")", "\n", "\n", "unhealthy_images", "=", "np", ".", "concatenate", "(", "unhealthy_images", ",", "axis", "=", "0", ")", "\n", "unhealthy_masks", "=", "np", ".", "concatenate", "(", "unhealthy_masks", ",", "axis", "=", "0", ")", "\n", "healthy_images", "=", "np", ".", "concatenate", "(", "np", ".", "swapaxes", "(", "np", ".", "swapaxes", "(", "np", ".", "swapaxes", "(", "healthy_images", ",", "2", ",", "3", ")", ",", "1", ",", "2", ")", ",", "2", ",", "3", ")", ",", "axis", "=", "0", ")", "\n", "healthy_masks", "=", "np", ".", "zeros", "(", "np", ".", "shape", "(", "healthy_images", ")", ")", "\n", "\n", "print", "(", "np", ".", "shape", "(", "unhealthy_images", ")", ",", "np", ".", "max", "(", "unhealthy_images", ")", ",", "np", ".", "min", "(", "unhealthy_images", ")", ")", "\n", "print", "(", "np", ".", "shape", "(", "unhealthy_masks", ")", ",", "np", ".", "max", "(", "unhealthy_masks", ")", ",", "np", ".", "min", "(", "unhealthy_masks", ")", ")", "\n", "print", "(", "np", ".", "shape", "(", "healthy_images", ")", ",", "np", ".", "max", "(", "healthy_images", ")", ",", "np", ".", "min", "(", "healthy_images", ")", ")", "\n", "print", "(", "np", ".", "shape", "(", "healthy_masks", ")", ",", "np", ".", "max", "(", "healthy_masks", ")", ",", "np", ".", "min", "(", "healthy_masks", ")", ")", "\n", "\n", "return", "unhealthy_images", ",", "unhealthy_masks", ",", "healthy_images", ",", "healthy_masks", "\n", "", "", "if", "__name__", "==", "'__main__'", ":", "\n"]]}