{"home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.options.TrainOptions.__init__": [[4, 39], ["argparse.ArgumentParser", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument", "options.TrainOptions.parser.add_argument"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "# data loader related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dataroot'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "'path of data'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--phase'", ",", "type", "=", "str", ",", "default", "=", "'train'", ",", "help", "=", "'phase for dataloading'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'batch size'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resize_size'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'resized image size for training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--crop_size'", ",", "type", "=", "int", ",", "default", "=", "216", ",", "help", "=", "'cropped image size for training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--input_dim_a'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of input channels for domain A'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--input_dim_b'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of input channels for domain B'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--nThreads'", ",", "type", "=", "int", ",", "default", "=", "8", ",", "help", "=", "'# of threads for data loader'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--no_flip'", ",", "action", "=", "'store_true'", ",", "help", "=", "'specified if no flipping'", ")", "\n", "\n", "# ouptput related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--name'", ",", "type", "=", "str", ",", "default", "=", "'trial'", ",", "help", "=", "'folder name to save outputs'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--display_dir'", ",", "type", "=", "str", ",", "default", "=", "'../logs'", ",", "help", "=", "'path for saving display results'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--result_dir'", ",", "type", "=", "str", ",", "default", "=", "'../results'", ",", "help", "=", "'path for saving result images and models'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--display_freq'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'freq (iteration) of display'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--img_save_freq'", ",", "type", "=", "int", ",", "default", "=", "5", ",", "help", "=", "'freq (epoch) of saving images'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--model_save_freq'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "'freq (epoch) of saving models'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--no_display_img'", ",", "action", "=", "'store_true'", ",", "help", "=", "'specified if no dispaly'", ")", "\n", "\n", "# training related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--no_ms'", ",", "action", "=", "'store_true'", ",", "help", "=", "'disable mode seeking regularization'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--concat'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'concatenate attribute features for translation, set 0 for using feature-wise transform'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dis_scale'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'scale of discriminator'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dis_norm'", ",", "type", "=", "str", ",", "default", "=", "'None'", ",", "help", "=", "'normalization layer in discriminator [None, Instance]'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dis_spectral_norm'", ",", "action", "=", "'store_true'", ",", "help", "=", "'use spectral normalization in discriminator'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--lr_policy'", ",", "type", "=", "str", ",", "default", "=", "'lambda'", ",", "help", "=", "'type of learn rate decay'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--n_ep'", ",", "type", "=", "int", ",", "default", "=", "1200", ",", "help", "=", "'number of epochs'", ")", "# 400 * d_iter", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--n_ep_decay'", ",", "type", "=", "int", ",", "default", "=", "600", ",", "help", "=", "'epoch start decay learning rate, set -1 if no decay'", ")", "# 200 * d_iter", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resume'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'specified the dir of saved models for resume the training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--d_iter'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of iterations for updating content discriminator'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--gpu'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'gpu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.options.TrainOptions.parse": [[40, 47], ["options.TrainOptions.parser.parse_args", "vars", "print", "sorted", "vars.items", "print", "str", "str"], "methods", ["None"], ["", "def", "parse", "(", "self", ")", ":", "\n", "    ", "self", ".", "opt", "=", "self", ".", "parser", ".", "parse_args", "(", ")", "\n", "args", "=", "vars", "(", "self", ".", "opt", ")", "\n", "print", "(", "'\\n--- load options ---'", ")", "\n", "for", "name", ",", "value", "in", "sorted", "(", "args", ".", "items", "(", ")", ")", ":", "\n", "      ", "print", "(", "'%s: %s'", "%", "(", "str", "(", "name", ")", ",", "str", "(", "value", ")", ")", ")", "\n", "", "return", "self", ".", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.options.TestOptions.__init__": [[49, 72], ["argparse.ArgumentParser", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument", "options.TestOptions.parser.add_argument"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "# data loader related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--dataroot'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "'path of data'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--phase'", ",", "type", "=", "str", ",", "default", "=", "'test'", ",", "help", "=", "'phase for dataloading'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resize_size'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'resized image size for training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--crop_size'", ",", "type", "=", "int", ",", "default", "=", "216", ",", "help", "=", "'cropped image size for training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--nThreads'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "help", "=", "'for data loader'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--input_dim_a'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of input channels for domain A'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--input_dim_b'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of input channels for domain B'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--a2b'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'translation direction, 1 for a2b, 0 for b2a'", ")", "\n", "\n", "# ouptput related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--num'", ",", "type", "=", "int", ",", "default", "=", "5", ",", "help", "=", "'number of outputs per image'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--name'", ",", "type", "=", "str", ",", "default", "=", "'trial'", ",", "help", "=", "'folder name to save outputs'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--result_dir'", ",", "type", "=", "str", ",", "default", "=", "'../outputs'", ",", "help", "=", "'path for saving result images and models'", ")", "\n", "\n", "# model related", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--concat'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'concatenate attribute features for translation, set 0 for using feature-wise transform'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--no_ms'", ",", "action", "=", "'store_true'", ",", "help", "=", "'disable mode seeking regularization'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--resume'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "'specified the dir of saved models for resume the training'", ")", "\n", "self", ".", "parser", ".", "add_argument", "(", "'--gpu'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'gpu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.options.TestOptions.parse": [[73, 84], ["options.TestOptions.parser.parse_args", "vars", "print", "sorted", "vars.items", "print", "str", "str"], "methods", ["None"], ["", "def", "parse", "(", "self", ")", ":", "\n", "    ", "self", ".", "opt", "=", "self", ".", "parser", ".", "parse_args", "(", ")", "\n", "args", "=", "vars", "(", "self", ".", "opt", ")", "\n", "print", "(", "'\\n--- load options ---'", ")", "\n", "for", "name", ",", "value", "in", "sorted", "(", "args", ".", "items", "(", ")", ")", ":", "\n", "      ", "print", "(", "'%s: %s'", "%", "(", "str", "(", "name", ")", ",", "str", "(", "value", ")", ")", ")", "\n", "# set irrelevant options", "\n", "", "self", ".", "opt", ".", "dis_scale", "=", "3", "\n", "self", ".", "opt", ".", "dis_norm", "=", "'None'", "\n", "self", ".", "opt", ".", "dis_spectral_norm", "=", "False", "\n", "return", "self", ".", "opt", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis_content.__init__": [[12, 21], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", "Dis_content", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "'Instance'", ")", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "'Instance'", ")", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "'Instance'", ")", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "256", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis_content.forward": [[22, 28], ["networks.Dis_content.model", "out.view.view.view", "outs.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "out", "=", "self", ".", "model", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ")", "\n", "outs", "=", "[", "]", "\n", "outs", ".", "append", "(", "out", ")", "\n", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MultiScaleDis.__init__": [[30, 37], ["torch.Module.__init__", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "networks.MultiScaleDis.Diss.append", "networks.MultiScaleDis._make_net"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis._make_net"], ["  ", "def", "__init__", "(", "self", ",", "input_dim", ",", "n_scale", "=", "3", ",", "n_layer", "=", "4", ",", "norm", "=", "'None'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "super", "(", "MultiScaleDis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "ch", "=", "64", "\n", "self", ".", "downsample", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "count_include_pad", "=", "False", ")", "\n", "self", ".", "Diss", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "n_scale", ")", ":", "\n", "      ", "self", ".", "Diss", ".", "append", "(", "self", ".", "_make_net", "(", "ch", ",", "input_dim", ",", "n_layer", ",", "norm", ",", "sn", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MultiScaleDis._make_net": [[38, 50], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "networks.spectral_norm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.spectral_norm"], ["", "", "def", "_make_net", "(", "self", ",", "ch", ",", "input_dim", ",", "n_layer", ",", "norm", ",", "sn", ")", ":", "\n", "    ", "model", "=", "[", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "input_dim", ",", "ch", ",", "4", ",", "2", ",", "1", ",", "norm", ",", "sn", ")", "]", "\n", "tch", "=", "ch", "\n", "for", "_", "in", "range", "(", "1", ",", "n_layer", ")", ":", "\n", "      ", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "4", ",", "2", ",", "1", ",", "norm", ",", "sn", ")", "]", "\n", "tch", "*=", "2", "\n", "", "if", "sn", ":", "\n", "      ", "model", "+=", "[", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "1", ",", "1", ",", "0", ")", ")", "]", "\n", "", "else", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "1", ",", "1", ",", "0", ")", "]", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MultiScaleDis.forward": [[51, 57], ["outs.append", "networks.MultiScaleDis.downsample", "networks.Dis"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "outs", "=", "[", "]", "\n", "for", "Dis", "in", "self", ".", "Diss", ":", "\n", "      ", "outs", ".", "append", "(", "Dis", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "return", "outs", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.__init__": [[59, 64], ["torch.Module.__init__", "networks.Dis._make_net"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis._make_net"], ["  ", "def", "__init__", "(", "self", ",", "input_dim", ",", "norm", "=", "'None'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "super", "(", "Dis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "ch", "=", "64", "\n", "n_layer", "=", "6", "\n", "self", ".", "model", "=", "self", ".", "_make_net", "(", "ch", ",", "input_dim", ",", "n_layer", ",", "norm", ",", "sn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis._make_net": [[65, 79], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "networks.spectral_norm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.spectral_norm"], ["", "def", "_make_net", "(", "self", ",", "ch", ",", "input_dim", ",", "n_layer", ",", "norm", ",", "sn", ")", ":", "\n", "    ", "model", "=", "[", "]", "\n", "model", "+=", "[", "LeakyReLUConv2d", "(", "input_dim", ",", "ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "norm", ",", "sn", "=", "sn", ")", "]", "#16", "\n", "tch", "=", "ch", "\n", "for", "i", "in", "range", "(", "1", ",", "n_layer", "-", "1", ")", ":", "\n", "      ", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "norm", ",", "sn", "=", "sn", ")", "]", "# 8", "\n", "tch", "*=", "2", "\n", "", "model", "+=", "[", "LeakyReLUConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "norm", "=", "'None'", ",", "sn", "=", "sn", ")", "]", "# 2", "\n", "tch", "*=", "2", "\n", "if", "sn", ":", "\n", "      ", "model", "+=", "[", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", "]", "# 1", "\n", "", "else", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Conv2d", "(", "tch", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "# 1", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda": [[80, 82], ["networks.Dis.model.cuda"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda"], ["", "def", "cuda", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "model", ".", "cuda", "(", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.forward": [[83, 89], ["networks.Dis.model", "out_A.view.view.view", "outs_A.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_A", ")", ":", "\n", "    ", "out_A", "=", "self", ".", "model", "(", "x_A", ")", "\n", "out_A", "=", "out_A", ".", "view", "(", "-", "1", ")", "\n", "outs_A", "=", "[", "]", "\n", "outs_A", ".", "append", "(", "out_A", ")", "\n", "return", "outs_A", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_content.__init__": [[94, 122], ["torch.Module.__init__", "range", "range", "range", "range", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.LeakyReLUConv2d", "networks.LeakyReLUConv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.ReLUINSConv2d", "networks.INSResBlock", "networks.ReLUINSConv2d", "networks.INSResBlock", "networks.INSResBlock", "networks.GaussianNoiseLayer"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", "input_dim_a", ",", "input_dim_b", ")", ":", "\n", "    ", "super", "(", "E_content", ",", "self", ")", ".", "__init__", "(", ")", "\n", "encA_c", "=", "[", "]", "\n", "tch", "=", "64", "\n", "encA_c", "+=", "[", "LeakyReLUConv2d", "(", "input_dim_a", ",", "tch", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ")", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "3", ")", ":", "\n", "      ", "encA_c", "+=", "[", "ReLUINSConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "\n", "tch", "*=", "2", "\n", "", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "      ", "encA_c", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "\n", "", "encB_c", "=", "[", "]", "\n", "tch", "=", "64", "\n", "encB_c", "+=", "[", "LeakyReLUConv2d", "(", "input_dim_b", ",", "tch", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ")", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "3", ")", ":", "\n", "      ", "encB_c", "+=", "[", "ReLUINSConv2d", "(", "tch", ",", "tch", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "]", "\n", "tch", "*=", "2", "\n", "", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "      ", "encB_c", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "\n", "", "enc_share", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "1", ")", ":", "\n", "      ", "enc_share", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "enc_share", "+=", "[", "GaussianNoiseLayer", "(", ")", "]", "\n", "self", ".", "conv_share", "=", "nn", ".", "Sequential", "(", "*", "enc_share", ")", "\n", "\n", "", "self", ".", "convA", "=", "nn", ".", "Sequential", "(", "*", "encA_c", ")", "\n", "self", ".", "convB", "=", "nn", ".", "Sequential", "(", "*", "encB_c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_content.forward": [[123, 129], ["networks.E_content.convA", "networks.E_content.convB", "networks.E_content.conv_share", "networks.E_content.conv_share"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xa", ",", "xb", ")", ":", "\n", "    ", "outputA", "=", "self", ".", "convA", "(", "xa", ")", "\n", "outputB", "=", "self", ".", "convB", "(", "xb", ")", "\n", "outputA", "=", "self", ".", "conv_share", "(", "outputA", ")", "\n", "outputB", "=", "self", ".", "conv_share", "(", "outputB", ")", "\n", "return", "outputA", ",", "outputB", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_content.forward_a": [[130, 134], ["networks.E_content.convA", "networks.E_content.conv_share"], "methods", ["None"], ["", "def", "forward_a", "(", "self", ",", "xa", ")", ":", "\n", "    ", "outputA", "=", "self", ".", "convA", "(", "xa", ")", "\n", "outputA", "=", "self", ".", "conv_share", "(", "outputA", ")", "\n", "return", "outputA", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_content.forward_b": [[135, 139], ["networks.E_content.convB", "networks.E_content.conv_share"], "methods", ["None"], ["", "def", "forward_b", "(", "self", ",", "xb", ")", ":", "\n", "    ", "outputB", "=", "self", ".", "convB", "(", "xb", ")", "\n", "outputB", "=", "self", ".", "conv_share", "(", "outputB", ")", "\n", "return", "outputB", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_attr.__init__": [[141, 181], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", "input_dim_a", ",", "input_dim_b", ",", "output_nc", "=", "8", ")", ":", "\n", "    ", "super", "(", "E_attr", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dim", "=", "64", "\n", "self", ".", "model_a", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReflectionPad2d", "(", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "input_dim_a", ",", "dim", ",", "7", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", ",", "dim", "*", "2", ",", "4", ",", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", "*", "2", ",", "dim", "*", "4", ",", "4", ",", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", "*", "4", ",", "dim", "*", "4", ",", "4", ",", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", "*", "4", ",", "dim", "*", "4", ",", "4", ",", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", "*", "4", ",", "output_nc", ",", "1", ",", "1", ",", "0", ")", ")", "\n", "self", ".", "model_b", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReflectionPad2d", "(", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "input_dim_b", ",", "dim", ",", "7", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", ",", "dim", "*", "2", ",", "4", ",", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", "*", "2", ",", "dim", "*", "4", ",", "4", ",", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", "*", "4", ",", "dim", "*", "4", ",", "4", ",", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", "*", "4", ",", "dim", "*", "4", ",", "4", ",", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", "*", "4", ",", "output_nc", ",", "1", ",", "1", ",", "0", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_attr.forward": [[182, 188], ["networks.E_attr.model_a", "networks.E_attr.model_b", "networks.E_attr.view", "networks.E_attr.view", "networks.E_attr.size", "networks.E_attr.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xa", ",", "xb", ")", ":", "\n", "    ", "xa", "=", "self", ".", "model_a", "(", "xa", ")", "\n", "xb", "=", "self", ".", "model_b", "(", "xb", ")", "\n", "output_A", "=", "xa", ".", "view", "(", "xa", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "output_B", "=", "xb", ".", "view", "(", "xb", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "output_A", ",", "output_B", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_attr.forward_a": [[189, 193], ["networks.E_attr.model_a", "networks.E_attr.view", "networks.E_attr.size"], "methods", ["None"], ["", "def", "forward_a", "(", "self", ",", "xa", ")", ":", "\n", "    ", "xa", "=", "self", ".", "model_a", "(", "xa", ")", "\n", "output_A", "=", "xa", ".", "view", "(", "xa", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "output_A", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_attr.forward_b": [[194, 198], ["networks.E_attr.model_b", "networks.E_attr.view", "networks.E_attr.size"], "methods", ["None"], ["", "def", "forward_b", "(", "self", ",", "xb", ")", ":", "\n", "    ", "xb", "=", "self", ".", "model_b", "(", "xb", ")", "\n", "output_B", "=", "xb", ".", "view", "(", "xb", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "output_B", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_attr_concat.__init__": [[200, 228], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "nl_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "nl_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "min", "min", "networks.BasicBlock", "min", "min", "networks.BasicBlock", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", "input_dim_a", ",", "input_dim_b", ",", "output_nc", "=", "8", ",", "norm_layer", "=", "None", ",", "nl_layer", "=", "None", ")", ":", "\n", "    ", "super", "(", "E_attr_concat", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "ndf", "=", "64", "\n", "n_blocks", "=", "4", "\n", "max_ndf", "=", "4", "\n", "\n", "conv_layers_A", "=", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", "]", "\n", "conv_layers_A", "+=", "[", "nn", ".", "Conv2d", "(", "input_dim_a", ",", "ndf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "for", "n", "in", "range", "(", "1", ",", "n_blocks", ")", ":", "\n", "      ", "input_ndf", "=", "ndf", "*", "min", "(", "max_ndf", ",", "n", ")", "# 2**(n-1)", "\n", "output_ndf", "=", "ndf", "*", "min", "(", "max_ndf", ",", "n", "+", "1", ")", "# 2**n", "\n", "conv_layers_A", "+=", "[", "BasicBlock", "(", "input_ndf", ",", "output_ndf", ",", "norm_layer", ",", "nl_layer", ")", "]", "\n", "", "conv_layers_A", "+=", "[", "nl_layer", "(", ")", ",", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "]", "# AvgPool2d(13)", "\n", "self", ".", "fc_A", "=", "nn", ".", "Sequential", "(", "*", "[", "nn", ".", "Linear", "(", "output_ndf", ",", "output_nc", ")", "]", ")", "\n", "self", ".", "fcVar_A", "=", "nn", ".", "Sequential", "(", "*", "[", "nn", ".", "Linear", "(", "output_ndf", ",", "output_nc", ")", "]", ")", "\n", "self", ".", "conv_A", "=", "nn", ".", "Sequential", "(", "*", "conv_layers_A", ")", "\n", "\n", "conv_layers_B", "=", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", "]", "\n", "conv_layers_B", "+=", "[", "nn", ".", "Conv2d", "(", "input_dim_b", ",", "ndf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "for", "n", "in", "range", "(", "1", ",", "n_blocks", ")", ":", "\n", "      ", "input_ndf", "=", "ndf", "*", "min", "(", "max_ndf", ",", "n", ")", "# 2**(n-1)", "\n", "output_ndf", "=", "ndf", "*", "min", "(", "max_ndf", ",", "n", "+", "1", ")", "# 2**n", "\n", "conv_layers_B", "+=", "[", "BasicBlock", "(", "input_ndf", ",", "output_ndf", ",", "norm_layer", ",", "nl_layer", ")", "]", "\n", "", "conv_layers_B", "+=", "[", "nl_layer", "(", ")", ",", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "]", "# AvgPool2d(13)", "\n", "self", ".", "fc_B", "=", "nn", ".", "Sequential", "(", "*", "[", "nn", ".", "Linear", "(", "output_ndf", ",", "output_nc", ")", "]", ")", "\n", "self", ".", "fcVar_B", "=", "nn", ".", "Sequential", "(", "*", "[", "nn", ".", "Linear", "(", "output_ndf", ",", "output_nc", ")", "]", ")", "\n", "self", ".", "conv_B", "=", "nn", ".", "Sequential", "(", "*", "conv_layers_B", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_attr_concat.forward": [[229, 239], ["networks.E_attr_concat.conv_A", "networks.E_attr_concat.view", "networks.E_attr_concat.fc_A", "networks.E_attr_concat.fcVar_A", "networks.E_attr_concat.conv_B", "networks.E_attr_concat.view", "networks.E_attr_concat.fc_B", "networks.E_attr_concat.fcVar_B", "xa.size", "xb.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xa", ",", "xb", ")", ":", "\n", "    ", "x_conv_A", "=", "self", ".", "conv_A", "(", "xa", ")", "\n", "conv_flat_A", "=", "x_conv_A", ".", "view", "(", "xa", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "output_A", "=", "self", ".", "fc_A", "(", "conv_flat_A", ")", "\n", "outputVar_A", "=", "self", ".", "fcVar_A", "(", "conv_flat_A", ")", "\n", "x_conv_B", "=", "self", ".", "conv_B", "(", "xb", ")", "\n", "conv_flat_B", "=", "x_conv_B", ".", "view", "(", "xb", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "output_B", "=", "self", ".", "fc_B", "(", "conv_flat_B", ")", "\n", "outputVar_B", "=", "self", ".", "fcVar_B", "(", "conv_flat_B", ")", "\n", "return", "output_A", ",", "outputVar_A", ",", "output_B", ",", "outputVar_B", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_attr_concat.forward_a": [[240, 246], ["networks.E_attr_concat.conv_A", "networks.E_attr_concat.view", "networks.E_attr_concat.fc_A", "networks.E_attr_concat.fcVar_A", "xa.size"], "methods", ["None"], ["", "def", "forward_a", "(", "self", ",", "xa", ")", ":", "\n", "    ", "x_conv_A", "=", "self", ".", "conv_A", "(", "xa", ")", "\n", "conv_flat_A", "=", "x_conv_A", ".", "view", "(", "xa", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "output_A", "=", "self", ".", "fc_A", "(", "conv_flat_A", ")", "\n", "outputVar_A", "=", "self", ".", "fcVar_A", "(", "conv_flat_A", ")", "\n", "return", "output_A", ",", "outputVar_A", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.E_attr_concat.forward_b": [[247, 253], ["networks.E_attr_concat.conv_B", "networks.E_attr_concat.view", "networks.E_attr_concat.fc_B", "networks.E_attr_concat.fcVar_B", "xb.size"], "methods", ["None"], ["", "def", "forward_b", "(", "self", ",", "xb", ")", ":", "\n", "    ", "x_conv_B", "=", "self", ".", "conv_B", "(", "xb", ")", "\n", "conv_flat_B", "=", "x_conv_B", ".", "view", "(", "xb", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "output_B", "=", "self", ".", "fc_B", "(", "conv_flat_B", ")", "\n", "outputVar_B", "=", "self", ".", "fcVar_B", "(", "conv_flat_B", ")", "\n", "return", "output_B", ",", "outputVar_B", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G.__init__": [[258, 306], ["torch.Module.__init__", "networks.MisINSResBlock", "networks.MisINSResBlock", "networks.MisINSResBlock", "networks.MisINSResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.MisINSResBlock", "networks.MisINSResBlock", "networks.MisINSResBlock", "networks.MisINSResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.ReLUINSConvTranspose2d", "networks.ReLUINSConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "networks.ReLUINSConvTranspose2d", "networks.ReLUINSConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", "output_dim_a", ",", "output_dim_b", ",", "nz", ")", ":", "\n", "    ", "super", "(", "G", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nz", "=", "nz", "\n", "ini_tch", "=", "256", "\n", "tch_add", "=", "ini_tch", "\n", "tch", "=", "ini_tch", "\n", "self", ".", "tch_add", "=", "tch_add", "\n", "self", ".", "decA1", "=", "MisINSResBlock", "(", "tch", ",", "tch_add", ")", "\n", "self", ".", "decA2", "=", "MisINSResBlock", "(", "tch", ",", "tch_add", ")", "\n", "self", ".", "decA3", "=", "MisINSResBlock", "(", "tch", ",", "tch_add", ")", "\n", "self", ".", "decA4", "=", "MisINSResBlock", "(", "tch", ",", "tch_add", ")", "\n", "\n", "decA5", "=", "[", "]", "\n", "decA5", "+=", "[", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "]", "\n", "tch", "=", "tch", "//", "2", "\n", "decA5", "+=", "[", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "]", "\n", "tch", "=", "tch", "//", "2", "\n", "decA5", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "tch", ",", "output_dim_a", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "decA5", "+=", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "self", ".", "decA5", "=", "nn", ".", "Sequential", "(", "*", "decA5", ")", "\n", "\n", "tch", "=", "ini_tch", "\n", "self", ".", "decB1", "=", "MisINSResBlock", "(", "tch", ",", "tch_add", ")", "\n", "self", ".", "decB2", "=", "MisINSResBlock", "(", "tch", ",", "tch_add", ")", "\n", "self", ".", "decB3", "=", "MisINSResBlock", "(", "tch", ",", "tch_add", ")", "\n", "self", ".", "decB4", "=", "MisINSResBlock", "(", "tch", ",", "tch_add", ")", "\n", "decB5", "=", "[", "]", "\n", "decB5", "+=", "[", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "]", "\n", "tch", "=", "tch", "//", "2", "\n", "decB5", "+=", "[", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "]", "\n", "tch", "=", "tch", "//", "2", "\n", "decB5", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "tch", ",", "output_dim_b", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "\n", "decB5", "+=", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "self", ".", "decB5", "=", "nn", ".", "Sequential", "(", "*", "decB5", ")", "\n", "\n", "self", ".", "mlpA", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "8", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "tch_add", "*", "4", ")", ")", "\n", "self", ".", "mlpB", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "8", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "tch_add", "*", "4", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G.forward_a": [[307, 317], ["networks.G.mlpA", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "networks.G.decA1", "networks.G.decA2", "networks.G.decA3", "networks.G.decA4", "networks.G.decA5", "z1.contiguous", "z2.contiguous", "z3.contiguous", "z4.contiguous"], "methods", ["None"], ["", "def", "forward_a", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "    ", "z", "=", "self", ".", "mlpA", "(", "z", ")", "\n", "z1", ",", "z2", ",", "z3", ",", "z4", "=", "torch", ".", "split", "(", "z", ",", "self", ".", "tch_add", ",", "dim", "=", "1", ")", "\n", "z1", ",", "z2", ",", "z3", ",", "z4", "=", "z1", ".", "contiguous", "(", ")", ",", "z2", ".", "contiguous", "(", ")", ",", "z3", ".", "contiguous", "(", ")", ",", "z4", ".", "contiguous", "(", ")", "\n", "out1", "=", "self", ".", "decA1", "(", "x", ",", "z1", ")", "\n", "out2", "=", "self", ".", "decA2", "(", "out1", ",", "z2", ")", "\n", "out3", "=", "self", ".", "decA3", "(", "out2", ",", "z3", ")", "\n", "out4", "=", "self", ".", "decA4", "(", "out3", ",", "z4", ")", "\n", "out", "=", "self", ".", "decA5", "(", "out4", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G.forward_b": [[318, 328], ["networks.G.mlpB", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "networks.G.decB1", "networks.G.decB2", "networks.G.decB3", "networks.G.decB4", "networks.G.decB5", "z1.contiguous", "z2.contiguous", "z3.contiguous", "z4.contiguous"], "methods", ["None"], ["", "def", "forward_b", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "    ", "z", "=", "self", ".", "mlpB", "(", "z", ")", "\n", "z1", ",", "z2", ",", "z3", ",", "z4", "=", "torch", ".", "split", "(", "z", ",", "self", ".", "tch_add", ",", "dim", "=", "1", ")", "\n", "z1", ",", "z2", ",", "z3", ",", "z4", "=", "z1", ".", "contiguous", "(", ")", ",", "z2", ".", "contiguous", "(", ")", ",", "z3", ".", "contiguous", "(", ")", ",", "z4", ".", "contiguous", "(", ")", "\n", "out1", "=", "self", ".", "decB1", "(", "x", ",", "z1", ")", "\n", "out2", "=", "self", ".", "decB2", "(", "out1", ",", "z2", ")", "\n", "out3", "=", "self", ".", "decB3", "(", "out2", ",", "z3", ")", "\n", "out4", "=", "self", ".", "decB4", "(", "out3", ",", "z4", ")", "\n", "out", "=", "self", ".", "decB5", "(", "out4", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.__init__": [[330, 370], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "networks.ReLUINSConvTranspose2d", "networks.ReLUINSConvTranspose2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "networks.ReLUINSConvTranspose2d", "networks.ReLUINSConvTranspose2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.INSResBlock", "networks.INSResBlock", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "networks.INSResBlock", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", "output_dim_a", ",", "output_dim_b", ",", "nz", ")", ":", "\n", "    ", "super", "(", "G_concat", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nz", "=", "nz", "\n", "tch", "=", "256", "\n", "dec_share", "=", "[", "]", "\n", "dec_share", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "self", ".", "dec_share", "=", "nn", ".", "Sequential", "(", "*", "dec_share", ")", "\n", "tch", "=", "256", "+", "self", ".", "nz", "\n", "decA1", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "      ", "decA1", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decA2", "=", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "\n", "tch", "=", "tch", "//", "2", "\n", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decA3", "=", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "\n", "tch", "=", "tch", "//", "2", "\n", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decA4", "=", "[", "nn", ".", "ConvTranspose2d", "(", "tch", ",", "output_dim_a", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "+", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "self", ".", "decA1", "=", "nn", ".", "Sequential", "(", "*", "decA1", ")", "\n", "self", ".", "decA2", "=", "nn", ".", "Sequential", "(", "*", "[", "decA2", "]", ")", "\n", "self", ".", "decA3", "=", "nn", ".", "Sequential", "(", "*", "[", "decA3", "]", ")", "\n", "self", ".", "decA4", "=", "nn", ".", "Sequential", "(", "*", "decA4", ")", "\n", "\n", "tch", "=", "256", "+", "self", ".", "nz", "\n", "decB1", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "      ", "decB1", "+=", "[", "INSResBlock", "(", "tch", ",", "tch", ")", "]", "\n", "", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decB2", "=", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "\n", "tch", "=", "tch", "//", "2", "\n", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decB3", "=", "ReLUINSConvTranspose2d", "(", "tch", ",", "tch", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "output_padding", "=", "1", ")", "\n", "tch", "=", "tch", "//", "2", "\n", "tch", "=", "tch", "+", "self", ".", "nz", "\n", "decB4", "=", "[", "nn", ".", "ConvTranspose2d", "(", "tch", ",", "output_dim_b", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "]", "+", "[", "nn", ".", "Tanh", "(", ")", "]", "\n", "self", ".", "decB1", "=", "nn", ".", "Sequential", "(", "*", "decB1", ")", "\n", "self", ".", "decB2", "=", "nn", ".", "Sequential", "(", "*", "[", "decB2", "]", ")", "\n", "self", ".", "decB3", "=", "nn", ".", "Sequential", "(", "*", "[", "decB3", "]", ")", "\n", "self", ".", "decB4", "=", "nn", ".", "Sequential", "(", "*", "decB4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_a": [[371, 386], ["networks.G_concat.dec_share", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decA1", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decA2", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decA3", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decA4", "z.size", "z.size", "x.size", "x.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.view", "z.view", "z.view", "z.view", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size"], "methods", ["None"], ["", "def", "forward_a", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "    ", "out0", "=", "self", ".", "dec_share", "(", "x", ")", "\n", "z_img", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "x_and_z", "=", "torch", ".", "cat", "(", "[", "out0", ",", "z_img", "]", ",", "1", ")", "\n", "out1", "=", "self", ".", "decA1", "(", "x_and_z", ")", "\n", "z_img2", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out1", ".", "size", "(", "2", ")", ",", "out1", ".", "size", "(", "3", ")", ")", "\n", "x_and_z2", "=", "torch", ".", "cat", "(", "[", "out1", ",", "z_img2", "]", ",", "1", ")", "\n", "out2", "=", "self", ".", "decA2", "(", "x_and_z2", ")", "\n", "z_img3", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out2", ".", "size", "(", "2", ")", ",", "out2", ".", "size", "(", "3", ")", ")", "\n", "x_and_z3", "=", "torch", ".", "cat", "(", "[", "out2", ",", "z_img3", "]", ",", "1", ")", "\n", "out3", "=", "self", ".", "decA3", "(", "x_and_z3", ")", "\n", "z_img4", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out3", ".", "size", "(", "2", ")", ",", "out3", ".", "size", "(", "3", ")", ")", "\n", "x_and_z4", "=", "torch", ".", "cat", "(", "[", "out3", ",", "z_img4", "]", ",", "1", ")", "\n", "out4", "=", "self", ".", "decA4", "(", "x_and_z4", ")", "\n", "return", "out4", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_b": [[387, 402], ["networks.G_concat.dec_share", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decB1", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decB2", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decB3", "z.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.G_concat.decB4", "z.size", "z.size", "x.size", "x.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.size", "z.size", "networks.G_concat.size", "networks.G_concat.size", "z.view", "z.view", "z.view", "z.view", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size", "z.size"], "methods", ["None"], ["", "def", "forward_b", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "    ", "out0", "=", "self", ".", "dec_share", "(", "x", ")", "\n", "z_img", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "x_and_z", "=", "torch", ".", "cat", "(", "[", "out0", ",", "z_img", "]", ",", "1", ")", "\n", "out1", "=", "self", ".", "decB1", "(", "x_and_z", ")", "\n", "z_img2", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out1", ".", "size", "(", "2", ")", ",", "out1", ".", "size", "(", "3", ")", ")", "\n", "x_and_z2", "=", "torch", ".", "cat", "(", "[", "out1", ",", "z_img2", "]", ",", "1", ")", "\n", "out2", "=", "self", ".", "decB2", "(", "x_and_z2", ")", "\n", "z_img3", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out2", ".", "size", "(", "2", ")", ",", "out2", ".", "size", "(", "3", ")", ")", "\n", "x_and_z3", "=", "torch", ".", "cat", "(", "[", "out2", ",", "z_img3", "]", ",", "1", ")", "\n", "out3", "=", "self", ".", "decB3", "(", "x_and_z3", ")", "\n", "z_img4", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "out3", ".", "size", "(", "2", ")", ",", "out3", ".", "size", "(", "3", ")", ")", "\n", "x_and_z4", "=", "torch", ".", "cat", "(", "[", "out3", ",", "z_img4", "]", ",", "1", ")", "\n", "out4", "=", "self", ".", "decB4", "(", "x_and_z4", ")", "\n", "return", "out4", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.LayerNorm.__init__": [[465, 473], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_out", ",", "eps", "=", "1e-5", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "LayerNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_out", "=", "n_out", "\n", "self", ".", "affine", "=", "affine", "\n", "if", "self", ".", "affine", ":", "\n", "      ", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "n_out", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "n_out", ",", "1", ",", "1", ")", ")", "\n", "", "return", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.LayerNorm.forward": [[473, 479], ["x.size", "torch.layer_norm", "torch.layer_norm", "torch.layer_norm", "torch.layer_norm", "torch.layer_norm", "torch.layer_norm", "networks.LayerNorm.weight.expand", "networks.LayerNorm.bias.expand"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "normalized_shape", "=", "x", ".", "size", "(", ")", "[", "1", ":", "]", "\n", "if", "self", ".", "affine", ":", "\n", "      ", "return", "F", ".", "layer_norm", "(", "x", ",", "normalized_shape", ",", "self", ".", "weight", ".", "expand", "(", "normalized_shape", ")", ",", "self", ".", "bias", ".", "expand", "(", "normalized_shape", ")", ")", "\n", "", "else", ":", "\n", "      ", "return", "F", ".", "layer_norm", "(", "x", ",", "normalized_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.BasicBlock.__init__": [[481, 494], ["torch.Module.__init__", "networks.conv3x3", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.meanpoolConv", "nl_layer", "nl_layer", "networks.convMeanpool", "norm_layer", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.conv3x3", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.meanpoolConv", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.convMeanpool"], ["  ", "def", "__init__", "(", "self", ",", "inplanes", ",", "outplanes", ",", "norm_layer", "=", "None", ",", "nl_layer", "=", "None", ")", ":", "\n", "    ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "[", "]", "\n", "if", "norm_layer", "is", "not", "None", ":", "\n", "      ", "layers", "+=", "[", "norm_layer", "(", "inplanes", ")", "]", "\n", "", "layers", "+=", "[", "nl_layer", "(", ")", "]", "\n", "layers", "+=", "conv3x3", "(", "inplanes", ",", "inplanes", ")", "\n", "if", "norm_layer", "is", "not", "None", ":", "\n", "      ", "layers", "+=", "[", "norm_layer", "(", "inplanes", ")", "]", "\n", "", "layers", "+=", "[", "nl_layer", "(", ")", "]", "\n", "layers", "+=", "[", "convMeanpool", "(", "inplanes", ",", "outplanes", ")", "]", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "shortcut", "=", "meanpoolConv", "(", "inplanes", ",", "outplanes", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.BasicBlock.forward": [[494, 497], ["networks.BasicBlock.conv", "networks.BasicBlock.shortcut"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "out", "=", "self", ".", "conv", "(", "x", ")", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.LeakyReLUConv2d.__init__": [[499, 512], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.LeakyReLUConv2d.model.apply", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "networks.spectral_norm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.spectral_norm"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ",", "norm", "=", "'None'", ",", "sn", "=", "False", ")", ":", "\n", "    ", "super", "(", "LeakyReLUConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "ReflectionPad2d", "(", "padding", ")", "]", "\n", "if", "sn", ":", "\n", "      ", "model", "+=", "[", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ")", "]", "\n", "", "else", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "", "if", "'norm'", "==", "'Instance'", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "n_out", ",", "affine", "=", "False", ")", "]", "\n", "", "model", "+=", "[", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "#elif == 'Group'", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.LeakyReLUConv2d.forward": [[513, 515], ["networks.LeakyReLUConv2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.ReLUINSConv2d.__init__": [[517, 526], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.ReLUINSConv2d.model.apply", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ")", ":", "\n", "    ", "super", "(", "ReLUINSConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "ReflectionPad2d", "(", "padding", ")", "]", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "n_out", ",", "affine", "=", "False", ")", "]", "\n", "model", "+=", "[", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.ReLUINSConv2d.forward": [[526, 528], ["networks.ReLUINSConv2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.INSResBlock.conv3x3": [[530, 532], ["torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["  ", "def", "conv3x3", "(", "self", ",", "inplanes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "nn", ".", "Conv2d", "(", "inplanes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ")", "]", "\n", "", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.INSResBlock.__init__": [[532, 544], ["torch.Module.__init__", "networks.INSResBlock.conv3x3", "networks.INSResBlock.conv3x3", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.INSResBlock.model.apply", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.conv3x3", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.conv3x3", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply"], ["", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "    ", "super", "(", "INSResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "self", ".", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "planes", ")", "]", "\n", "model", "+=", "[", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "model", "+=", "self", ".", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "model", "+=", "[", "nn", ".", "InstanceNorm2d", "(", "planes", ")", "]", "\n", "if", "dropout", ">", "0", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "]", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.INSResBlock.forward": [[544, 549], ["networks.INSResBlock.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "out", "=", "self", ".", "model", "(", "x", ")", "\n", "out", "+=", "residual", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MisINSResBlock.conv3x3": [[551, 553], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["  ", "def", "conv3x3", "(", "self", ",", "dim_in", ",", "dim_out", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ")", ")", "\n", "", "def", "conv1x1", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MisINSResBlock.conv1x1": [[553, 555], ["torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["", "def", "conv1x1", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "", "def", "__init__", "(", "self", ",", "dim", ",", "dim_extra", ",", "stride", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MisINSResBlock.__init__": [[555, 582], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.MisINSResBlock.model.apply", "networks.MisINSResBlock.conv1.apply", "networks.MisINSResBlock.conv2.apply", "networks.MisINSResBlock.blk1.apply", "networks.MisINSResBlock.blk2.apply", "networks.MisINSResBlock.conv3x3", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "networks.MisINSResBlock.conv3x3", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "networks.MisINSResBlock.conv1x1", "torch.ReLU", "torch.ReLU", "torch.ReLU", "networks.MisINSResBlock.conv1x1", "torch.ReLU", "torch.ReLU", "torch.ReLU", "networks.MisINSResBlock.conv1x1", "torch.ReLU", "torch.ReLU", "torch.ReLU", "networks.MisINSResBlock.conv1x1", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.conv3x3", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.conv3x3", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MisINSResBlock.conv1x1", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MisINSResBlock.conv1x1", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MisINSResBlock.conv1x1", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MisINSResBlock.conv1x1"], ["", "def", "__init__", "(", "self", ",", "dim", ",", "dim_extra", ",", "stride", "=", "1", ",", "dropout", "=", "0.0", ")", ":", "\n", "    ", "super", "(", "MisINSResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "conv3x3", "(", "dim", ",", "dim", ",", "stride", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "dim", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "conv3x3", "(", "dim", ",", "dim", ",", "stride", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "dim", ")", ")", "\n", "self", ".", "blk1", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "conv1x1", "(", "dim", "+", "dim_extra", ",", "dim", "+", "dim_extra", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "self", ".", "conv1x1", "(", "dim", "+", "dim_extra", ",", "dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ")", "\n", "self", ".", "blk2", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "conv1x1", "(", "dim", "+", "dim_extra", ",", "dim", "+", "dim_extra", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "self", ".", "conv1x1", "(", "dim", "+", "dim_extra", ",", "dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ")", "\n", "model", "=", "[", "]", "\n", "if", "dropout", ">", "0", ":", "\n", "      ", "model", "+=", "[", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "]", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "conv1", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "conv2", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "blk1", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "self", ".", "blk2", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "z", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.MisINSResBlock.forward": [[582, 591], ["z.view().expand", "networks.MisINSResBlock.conv1", "networks.MisINSResBlock.blk1", "networks.MisINSResBlock.conv2", "networks.MisINSResBlock.blk2", "z.size", "z.size", "x.size", "x.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "z.view", "z.size", "z.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "z_expand", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ".", "expand", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "o1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "o2", "=", "self", ".", "blk1", "(", "torch", ".", "cat", "(", "[", "o1", ",", "z_expand", "]", ",", "dim", "=", "1", ")", ")", "\n", "o3", "=", "self", ".", "conv2", "(", "o2", ")", "\n", "out", "=", "self", ".", "blk2", "(", "torch", ".", "cat", "(", "[", "o3", ",", "z_expand", "]", ",", "dim", "=", "1", ")", ")", "\n", "out", "+=", "residual", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.GaussianNoiseLayer.__init__": [[593, 595], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__"], ["  ", "def", "__init__", "(", "self", ",", ")", ":", "\n", "    ", "super", "(", "GaussianNoiseLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.GaussianNoiseLayer.forward": [[595, 600], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "x.get_device", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "x.size"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "training", "==", "False", ":", "\n", "      ", "return", "x", "\n", "", "noise", "=", "Variable", "(", "torch", ".", "randn", "(", "x", ".", "size", "(", ")", ")", ".", "cuda", "(", "x", ".", "get_device", "(", ")", ")", ")", "\n", "return", "x", "+", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.ReLUINSConvTranspose2d.__init__": [[602, 610], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "networks.ReLUINSConvTranspose2d.model.apply", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "networks.LayerNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply"], ["  ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "output_padding", ")", ":", "\n", "    ", "super", "(", "ReLUINSConvTranspose2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "nn", ".", "ConvTranspose2d", "(", "n_in", ",", "n_out", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "output_padding", "=", "output_padding", ",", "bias", "=", "True", ")", "]", "\n", "model", "+=", "[", "LayerNorm", "(", "n_out", ")", "]", "\n", "model", "+=", "[", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "model", ".", "apply", "(", "gaussian_weights_init", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.ReLUINSConvTranspose2d.forward": [[610, 612], ["networks.ReLUINSConvTranspose2d.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.__init__": [[619, 627], ["ValueError"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "name", "=", "'weight'", ",", "n_power_iterations", "=", "1", ",", "dim", "=", "0", ",", "eps", "=", "1e-12", ")", ":", "\n", "    ", "self", ".", "name", "=", "name", "\n", "self", ".", "dim", "=", "dim", "\n", "if", "n_power_iterations", "<=", "0", ":", "\n", "      ", "raise", "ValueError", "(", "'Expected n_power_iterations to be positive, but '", "\n", "'got n_power_iterations={}'", ".", "format", "(", "n_power_iterations", ")", ")", "\n", "", "self", ".", "n_power_iterations", "=", "n_power_iterations", "\n", "self", ".", "eps", "=", "eps", "\n", "", "def", "compute_weight", "(", "self", ",", "module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.compute_weight": [[627, 644], ["getattr", "getattr", "weight_mat.permute.permute.size", "weight_mat.permute.permute.reshape", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "weight_mat.permute.permute.permute", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "weight_mat.permute.permute.t", "range", "weight_mat.permute.permute.dim"], "methods", ["None"], ["", "def", "compute_weight", "(", "self", ",", "module", ")", ":", "\n", "    ", "weight", "=", "getattr", "(", "module", ",", "self", ".", "name", "+", "'_orig'", ")", "\n", "u", "=", "getattr", "(", "module", ",", "self", ".", "name", "+", "'_u'", ")", "\n", "weight_mat", "=", "weight", "\n", "if", "self", ".", "dim", "!=", "0", ":", "\n", "# permute dim to front", "\n", "      ", "weight_mat", "=", "weight_mat", ".", "permute", "(", "self", ".", "dim", ",", "\n", "*", "[", "d", "for", "d", "in", "range", "(", "weight_mat", ".", "dim", "(", ")", ")", "if", "d", "!=", "self", ".", "dim", "]", ")", "\n", "", "height", "=", "weight_mat", ".", "size", "(", "0", ")", "\n", "weight_mat", "=", "weight_mat", ".", "reshape", "(", "height", ",", "-", "1", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "for", "_", "in", "range", "(", "self", ".", "n_power_iterations", ")", ":", "\n", "        ", "v", "=", "F", ".", "normalize", "(", "torch", ".", "matmul", "(", "weight_mat", ".", "t", "(", ")", ",", "u", ")", ",", "dim", "=", "0", ",", "eps", "=", "self", ".", "eps", ")", "\n", "u", "=", "F", ".", "normalize", "(", "torch", ".", "matmul", "(", "weight_mat", ",", "v", ")", ",", "dim", "=", "0", ",", "eps", "=", "self", ".", "eps", ")", "\n", "", "", "sigma", "=", "torch", ".", "dot", "(", "u", ",", "torch", ".", "matmul", "(", "weight_mat", ",", "v", ")", ")", "\n", "weight", "=", "weight", "/", "sigma", "\n", "return", "weight", ",", "u", "\n", "", "def", "remove", "(", "self", ",", "module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.remove": [[644, 650], ["getattr", "delattr", "delattr", "delattr", "module.register_parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter"], "methods", ["None"], ["", "def", "remove", "(", "self", ",", "module", ")", ":", "\n", "    ", "weight", "=", "getattr", "(", "module", ",", "self", ".", "name", ")", "\n", "delattr", "(", "module", ",", "self", ".", "name", ")", "\n", "delattr", "(", "module", ",", "self", ".", "name", "+", "'_u'", ")", "\n", "delattr", "(", "module", ",", "self", ".", "name", "+", "'_orig'", ")", "\n", "module", ".", "register_parameter", "(", "self", ".", "name", ",", "torch", ".", "nn", ".", "Parameter", "(", "weight", ")", ")", "\n", "", "def", "__call__", "(", "self", ",", "module", ",", "inputs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.__call__": [[650, 658], ["networks.SpectralNorm.compute_weight", "setattr", "setattr", "getattr().detach_().requires_grad_", "getattr", "getattr().detach_", "getattr"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.compute_weight"], ["", "def", "__call__", "(", "self", ",", "module", ",", "inputs", ")", ":", "\n", "    ", "if", "module", ".", "training", ":", "\n", "      ", "weight", ",", "u", "=", "self", ".", "compute_weight", "(", "module", ")", "\n", "setattr", "(", "module", ",", "self", ".", "name", ",", "weight", ")", "\n", "setattr", "(", "module", ",", "self", ".", "name", "+", "'_u'", ",", "u", ")", "\n", "", "else", ":", "\n", "      ", "r_g", "=", "getattr", "(", "module", ",", "self", ".", "name", "+", "'_orig'", ")", ".", "requires_grad", "\n", "getattr", "(", "module", ",", "self", ".", "name", ")", ".", "detach_", "(", ")", ".", "requires_grad_", "(", "r_g", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply": [[659, 671], ["networks.SpectralNorm", "weight.size", "torch.normalize", "torch.normalize", "torch.normalize", "delattr", "module.register_parameter", "module.register_buffer", "module.register_buffer", "module.register_forward_pre_hook", "weight.new_empty().normal_", "weight.new_empty"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "apply", "(", "module", ",", "name", ",", "n_power_iterations", ",", "dim", ",", "eps", ")", ":", "\n", "    ", "fn", "=", "SpectralNorm", "(", "name", ",", "n_power_iterations", ",", "dim", ",", "eps", ")", "\n", "weight", "=", "module", ".", "_parameters", "[", "name", "]", "\n", "height", "=", "weight", ".", "size", "(", "dim", ")", "\n", "u", "=", "F", ".", "normalize", "(", "weight", ".", "new_empty", "(", "height", ")", ".", "normal_", "(", "0", ",", "1", ")", ",", "dim", "=", "0", ",", "eps", "=", "fn", ".", "eps", ")", "\n", "delattr", "(", "module", ",", "fn", ".", "name", ")", "\n", "module", ".", "register_parameter", "(", "fn", ".", "name", "+", "\"_orig\"", ",", "weight", ")", "\n", "module", ".", "register_buffer", "(", "fn", ".", "name", ",", "weight", ".", "data", ")", "\n", "module", ".", "register_buffer", "(", "fn", ".", "name", "+", "\"_u\"", ",", "u", ")", "\n", "module", ".", "register_forward_pre_hook", "(", "fn", ")", "\n", "return", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_scheduler": [[406, 417], ["torch.optim.lr_scheduler.LambdaLR", "torch.optim.lr_scheduler.StepLR", "NotImplementedError", "max", "float"], "function", ["None"], ["", "", "def", "get_scheduler", "(", "optimizer", ",", "opts", ",", "cur_ep", "=", "-", "1", ")", ":", "\n", "  ", "if", "opts", ".", "lr_policy", "==", "'lambda'", ":", "\n", "    ", "def", "lambda_rule", "(", "ep", ")", ":", "\n", "      ", "lr_l", "=", "1.0", "-", "max", "(", "0", ",", "ep", "-", "opts", ".", "n_ep_decay", ")", "/", "float", "(", "opts", ".", "n_ep", "-", "opts", ".", "n_ep_decay", "+", "1", ")", "\n", "return", "lr_l", "\n", "", "scheduler", "=", "lr_scheduler", ".", "LambdaLR", "(", "optimizer", ",", "lr_lambda", "=", "lambda_rule", ",", "last_epoch", "=", "cur_ep", ")", "\n", "", "elif", "opts", ".", "lr_policy", "==", "'step'", ":", "\n", "    ", "scheduler", "=", "lr_scheduler", ".", "StepLR", "(", "optimizer", ",", "step_size", "=", "opts", ".", "n_ep_decay", ",", "gamma", "=", "0.1", ",", "last_epoch", "=", "cur_ep", ")", "\n", "", "else", ":", "\n", "    ", "return", "NotImplementedError", "(", "'no such learn rate policy'", ")", "\n", "", "return", "scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.meanpoolConv": [[418, 423], ["torch.Sequential", "torch.AvgPool2d", "torch.Conv2d"], "function", ["None"], ["", "def", "meanpoolConv", "(", "inplanes", ",", "outplanes", ")", ":", "\n", "  ", "sequence", "=", "[", "]", "\n", "sequence", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "sequence", "+=", "[", "nn", ".", "Conv2d", "(", "inplanes", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "sequence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.convMeanpool": [[424, 429], ["networks.conv3x3", "torch.Sequential", "torch.AvgPool2d"], "function", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.conv3x3"], ["", "def", "convMeanpool", "(", "inplanes", ",", "outplanes", ")", ":", "\n", "  ", "sequence", "=", "[", "]", "\n", "sequence", "+=", "conv3x3", "(", "inplanes", ",", "outplanes", ")", "\n", "sequence", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "sequence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_norm_layer": [[430, 440], ["functools.partial", "functools.partial", "NotImplementedError"], "function", ["None"], ["", "def", "get_norm_layer", "(", "layer_type", "=", "'instance'", ")", ":", "\n", "  ", "if", "layer_type", "==", "'batch'", ":", "\n", "    ", "norm_layer", "=", "functools", ".", "partial", "(", "nn", ".", "BatchNorm2d", ",", "affine", "=", "True", ")", "\n", "", "elif", "layer_type", "==", "'instance'", ":", "\n", "    ", "norm_layer", "=", "functools", ".", "partial", "(", "nn", ".", "InstanceNorm2d", ",", "affine", "=", "False", ")", "\n", "", "elif", "layer_type", "==", "'none'", ":", "\n", "    ", "norm_layer", "=", "None", "\n", "", "else", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'normalization layer [%s] is not found'", "%", "layer_type", ")", "\n", "", "return", "norm_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_non_linearity": [[441, 451], ["functools.partial", "functools.partial", "functools.partial", "NotImplementedError"], "function", ["None"], ["", "def", "get_non_linearity", "(", "layer_type", "=", "'relu'", ")", ":", "\n", "  ", "if", "layer_type", "==", "'relu'", ":", "\n", "    ", "nl_layer", "=", "functools", ".", "partial", "(", "nn", ".", "ReLU", ",", "inplace", "=", "True", ")", "\n", "", "elif", "layer_type", "==", "'lrelu'", ":", "\n", "    ", "nl_layer", "=", "functools", ".", "partial", "(", "nn", ".", "LeakyReLU", ",", "negative_slope", "=", "0.2", ",", "inplace", "=", "False", ")", "\n", "", "elif", "layer_type", "==", "'elu'", ":", "\n", "    ", "nl_layer", "=", "functools", ".", "partial", "(", "nn", ".", "ELU", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'nonlinearity activitation [%s] is not found'", "%", "layer_type", ")", "\n", "", "return", "nl_layer", "\n", "", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.conv3x3": [[451, 453], ["torch.ReflectionPad2d", "torch.Conv2d"], "function", ["None"], ["", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ")", ":", "\n", "  ", "return", "[", "nn", ".", "ReflectionPad2d", "(", "1", ")", ",", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.gaussian_weights_init": [[454, 458], ["m.weight.data.normal_", "classname.find", "classname.find"], "function", ["None"], ["", "def", "gaussian_weights_init", "(", "m", ")", ":", "\n", "  ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", "and", "classname", ".", "find", "(", "'Conv'", ")", "==", "0", ":", "\n", "    ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.spectral_norm": [[672, 682], ["networks.SpectralNorm.apply", "isinstance"], "function", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply"], ["", "", "def", "spectral_norm", "(", "module", ",", "name", "=", "'weight'", ",", "n_power_iterations", "=", "1", ",", "eps", "=", "1e-12", ",", "dim", "=", "None", ")", ":", "\n", "  ", "if", "dim", "is", "None", ":", "\n", "    ", "if", "isinstance", "(", "module", ",", "(", "torch", ".", "nn", ".", "ConvTranspose1d", ",", "\n", "torch", ".", "nn", ".", "ConvTranspose2d", ",", "\n", "torch", ".", "nn", ".", "ConvTranspose3d", ")", ")", ":", "\n", "      ", "dim", "=", "1", "\n", "", "else", ":", "\n", "      ", "dim", "=", "0", "\n", "", "", "SpectralNorm", ".", "apply", "(", "module", ",", "name", ",", "n_power_iterations", ",", "dim", ",", "eps", ")", "\n", "return", "module", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.remove_spectral_norm": [[683, 690], ["module._forward_pre_hooks.items", "ValueError", "isinstance", "hook.remove"], "function", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.remove"], ["", "def", "remove_spectral_norm", "(", "module", ",", "name", "=", "'weight'", ")", ":", "\n", "  ", "for", "k", ",", "hook", "in", "module", ".", "_forward_pre_hooks", ".", "items", "(", ")", ":", "\n", "    ", "if", "isinstance", "(", "hook", ",", "SpectralNorm", ")", "and", "hook", ".", "name", "==", "name", ":", "\n", "      ", "hook", ".", "remove", "(", "module", ")", "\n", "del", "module", ".", "_forward_pre_hooks", "[", "k", "]", "\n", "return", "module", "\n", "", "", "raise", "ValueError", "(", "\"spectral_norm of '{}' not found in {}\"", ".", "format", "(", "name", ",", "module", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.test_transfer.main": [[8, 57], ["options.TestOptions", "options.TestOptions.parse", "print", "dataset.dataset_single", "dataset.dataset_single", "print", "model.DRIT", "model.DRIT.setgpu", "model.DRIT.resume", "model.DRIT.eval", "os.path.join", "print", "enumerate", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "os.path.exists", "os.mkdir", "print", "img1.cuda.cuda", "enumerate", "saver.save_imgs", "img2.cuda.cuda", "imgs.append", "names.append", "os.path.join", "len", "torch.no_grad", "model.DRIT.test_forward_transfer", "model.DRIT.test_forward_transfer"], "function", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.options.TestOptions.parse", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.setgpu", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.resume", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.save_imgs", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.test_forward_transfer", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.test_forward_transfer"], ["def", "main", "(", ")", ":", "\n", "# parse options", "\n", "  ", "parser", "=", "TestOptions", "(", ")", "\n", "opts", "=", "parser", ".", "parse", "(", ")", "\n", "\n", "# data loader", "\n", "print", "(", "'\\n--- load dataset ---'", ")", "\n", "datasetA", "=", "dataset_single", "(", "opts", ",", "'A'", ",", "opts", ".", "input_dim_a", ")", "\n", "datasetB", "=", "dataset_single", "(", "opts", ",", "'B'", ",", "opts", ".", "input_dim_b", ")", "\n", "if", "opts", ".", "a2b", ":", "\n", "    ", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "datasetA", ",", "batch_size", "=", "1", ",", "num_workers", "=", "opts", ".", "nThreads", ")", "\n", "loader_attr", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "datasetB", ",", "batch_size", "=", "1", ",", "num_workers", "=", "opts", ".", "nThreads", ",", "shuffle", "=", "True", ")", "\n", "", "else", ":", "\n", "    ", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "datasetB", ",", "batch_size", "=", "1", ",", "num_workers", "=", "opts", ".", "nThreads", ")", "\n", "loader_attr", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "datasetA", ",", "batch_size", "=", "1", ",", "num_workers", "=", "opts", ".", "nThreads", ",", "shuffle", "=", "True", ")", "\n", "\n", "# model", "\n", "", "print", "(", "'\\n--- load model ---'", ")", "\n", "model", "=", "DRIT", "(", "opts", ")", "\n", "model", ".", "setgpu", "(", "opts", ".", "gpu", ")", "\n", "model", ".", "resume", "(", "opts", ".", "resume", ",", "train", "=", "False", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "# directory", "\n", "result_dir", "=", "os", ".", "path", ".", "join", "(", "opts", ".", "result_dir", ",", "opts", ".", "name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_dir", ")", ":", "\n", "    ", "os", ".", "mkdir", "(", "result_dir", ")", "\n", "\n", "# test", "\n", "", "print", "(", "'\\n--- testing ---'", ")", "\n", "for", "idx1", ",", "img1", "in", "enumerate", "(", "loader", ")", ":", "\n", "    ", "print", "(", "'{}/{}'", ".", "format", "(", "idx1", ",", "len", "(", "loader", ")", ")", ")", "\n", "img1", "=", "img1", ".", "cuda", "(", ")", "\n", "imgs", "=", "[", "img1", "]", "\n", "names", "=", "[", "'input'", "]", "\n", "for", "idx2", ",", "img2", "in", "enumerate", "(", "loader_attr", ")", ":", "\n", "      ", "if", "idx2", "==", "opts", ".", "num", ":", "\n", "        ", "break", "\n", "", "img2", "=", "img2", ".", "cuda", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "if", "opts", ".", "a2b", ":", "\n", "          ", "img", "=", "model", ".", "test_forward_transfer", "(", "img1", ",", "img2", ",", "a2b", "=", "True", ")", "\n", "", "else", ":", "\n", "          ", "img", "=", "model", ".", "test_forward_transfer", "(", "img2", ",", "img1", ",", "a2b", "=", "False", ")", "\n", "", "", "imgs", ".", "append", "(", "img", ")", "\n", "names", ".", "append", "(", "'output_{}'", ".", "format", "(", "idx2", ")", ")", "\n", "", "save_imgs", "(", "imgs", ",", "names", ",", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'{}'", ".", "format", "(", "idx1", ")", ")", ")", "\n", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.train.main": [[7, 76], ["options.TrainOptions", "options.TrainOptions.parse", "print", "dataset.dataset_unpair", "torch.utils.data.DataLoader", "print", "model.DRIT", "model.DRIT.setgpu", "model.DRIT.set_scheduler", "print", "saver.Saver", "print", "range", "model.DRIT.initialize", "model.DRIT.resume", "enumerate", "saver.Saver.write_img", "saver.Saver.write_model", "images_a.cuda().detach.cuda().detach", "images_b.cuda().detach.cuda().detach", "print", "model.DRIT.update_lr", "model.DRIT.update_D_content", "model.DRIT.update_D", "model.DRIT.update_EG", "saver.Saver.write_display", "saver.Saver.write_img", "saver.Saver.write_model", "images_a.cuda().detach.size", "images_b.cuda().detach.size", "images_a.cuda().detach.cuda", "images_b.cuda().detach.cuda", "len"], "function", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.options.TestOptions.parse", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.setgpu", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.set_scheduler", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.initialize", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.resume", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.write_img", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.write_model", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.update_lr", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.update_D_content", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.update_D", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.update_EG", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.write_display", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.write_img", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.write_model", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda"], ["def", "main", "(", ")", ":", "\n", "# parse options", "\n", "  ", "parser", "=", "TrainOptions", "(", ")", "\n", "opts", "=", "parser", ".", "parse", "(", ")", "\n", "\n", "# daita loader", "\n", "print", "(", "'\\n--- load dataset ---'", ")", "\n", "dataset", "=", "dataset_unpair", "(", "opts", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "opts", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "opts", ".", "nThreads", ")", "\n", "\n", "# model", "\n", "print", "(", "'\\n--- load model ---'", ")", "\n", "model", "=", "DRIT", "(", "opts", ")", "\n", "model", ".", "setgpu", "(", "opts", ".", "gpu", ")", "\n", "if", "opts", ".", "resume", "is", "None", ":", "\n", "    ", "model", ".", "initialize", "(", ")", "\n", "ep0", "=", "-", "1", "\n", "total_it", "=", "0", "\n", "", "else", ":", "\n", "    ", "ep0", ",", "total_it", "=", "model", ".", "resume", "(", "opts", ".", "resume", ")", "\n", "", "model", ".", "set_scheduler", "(", "opts", ",", "last_ep", "=", "ep0", ")", "\n", "ep0", "+=", "1", "\n", "print", "(", "'start the training at epoch %d'", "%", "(", "ep0", ")", ")", "\n", "\n", "# saver for display and output", "\n", "saver", "=", "Saver", "(", "opts", ")", "\n", "\n", "# train", "\n", "print", "(", "'\\n--- train ---'", ")", "\n", "max_it", "=", "500000", "\n", "for", "ep", "in", "range", "(", "ep0", ",", "opts", ".", "n_ep", ")", ":", "\n", "    ", "for", "it", ",", "(", "images_a", ",", "images_b", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "      ", "if", "images_a", ".", "size", "(", "0", ")", "!=", "opts", ".", "batch_size", "or", "images_b", ".", "size", "(", "0", ")", "!=", "opts", ".", "batch_size", ":", "\n", "        ", "continue", "\n", "\n", "# input data", "\n", "", "images_a", "=", "images_a", ".", "cuda", "(", "opts", ".", "gpu", ")", ".", "detach", "(", ")", "\n", "images_b", "=", "images_b", ".", "cuda", "(", "opts", ".", "gpu", ")", ".", "detach", "(", ")", "\n", "\n", "# update model", "\n", "if", "(", "it", "+", "1", ")", "%", "opts", ".", "d_iter", "!=", "0", "and", "it", "<", "len", "(", "train_loader", ")", "-", "2", ":", "\n", "        ", "model", ".", "update_D_content", "(", "images_a", ",", "images_b", ")", "\n", "continue", "\n", "", "else", ":", "\n", "        ", "model", ".", "update_D", "(", "images_a", ",", "images_b", ")", "\n", "model", ".", "update_EG", "(", ")", "\n", "\n", "# save to display file", "\n", "", "if", "not", "opts", ".", "no_display_img", ":", "\n", "        ", "saver", ".", "write_display", "(", "total_it", ",", "model", ")", "\n", "\n", "", "print", "(", "'total_it: %d (ep %d, it %d), lr %08f'", "%", "(", "total_it", ",", "ep", ",", "it", ",", "model", ".", "gen_opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", ")", "\n", "total_it", "+=", "1", "\n", "if", "total_it", ">=", "max_it", ":", "\n", "        ", "saver", ".", "write_img", "(", "-", "1", ",", "model", ")", "\n", "saver", ".", "write_model", "(", "-", "1", ",", "model", ")", "\n", "break", "\n", "\n", "# decay learning rate", "\n", "", "", "if", "opts", ".", "n_ep_decay", ">", "-", "1", ":", "\n", "      ", "model", ".", "update_lr", "(", ")", "\n", "\n", "# save result image", "\n", "", "saver", ".", "write_img", "(", "ep", ",", "model", ")", "\n", "\n", "# Save network weights", "\n", "saver", ".", "write_model", "(", "ep", ",", "total_it", ",", "model", ")", "\n", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_single.__init__": [[8, 23], ["os.listdir", "len", "transforms.append", "transforms.append", "transforms.append", "torchvision.transforms.Compose", "print", "os.path.join", "os.path.join", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "opts", ",", "setname", ",", "input_dim", ")", ":", "\n", "    ", "self", ".", "dataroot", "=", "opts", ".", "dataroot", "\n", "images", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "opts", ".", "phase", "+", "setname", ")", ")", "\n", "self", ".", "img", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "opts", ".", "phase", "+", "setname", ",", "x", ")", "for", "x", "in", "images", "]", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "img", ")", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "\n", "# setup image transformation", "\n", "transforms", "=", "[", "Resize", "(", "(", "opts", ".", "resize_size", ",", "opts", ".", "resize_size", ")", ",", "Image", ".", "BICUBIC", ")", "]", "\n", "transforms", ".", "append", "(", "CenterCrop", "(", "opts", ".", "crop_size", ")", ")", "\n", "transforms", ".", "append", "(", "ToTensor", "(", ")", ")", "\n", "transforms", ".", "append", "(", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", ")", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "print", "(", "'%s: %d images'", "%", "(", "setname", ",", "self", ".", "size", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_single.__getitem__": [[24, 27], ["dataset.dataset_single.load_img"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_unpair.load_img"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "data", "=", "self", ".", "load_img", "(", "self", ".", "img", "[", "index", "]", ",", "self", ".", "input_dim", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_single.load_img": [[28, 35], ["PIL.Image.open().convert", "dataset.dataset_single.transforms", "img.unsqueeze.unsqueeze.unsqueeze", "PIL.Image.open"], "methods", ["None"], ["", "def", "load_img", "(", "self", ",", "img_name", ",", "input_dim", ")", ":", "\n", "    ", "img", "=", "Image", ".", "open", "(", "img_name", ")", ".", "convert", "(", "'RGB'", ")", "\n", "img", "=", "self", ".", "transforms", "(", "img", ")", "\n", "if", "input_dim", "==", "1", ":", "\n", "      ", "img", "=", "img", "[", "0", ",", "...", "]", "*", "0.299", "+", "img", "[", "1", ",", "...", "]", "*", "0.587", "+", "img", "[", "2", ",", "...", "]", "*", "0.114", "\n", "img", "=", "img", ".", "unsqueeze", "(", "0", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_single.__len__": [[36, 38], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_unpair.__init__": [[40, 70], ["os.listdir", "os.listdir", "len", "len", "max", "transforms.append", "transforms.append", "torchvision.transforms.Compose", "print", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torchvision.transforms.Resize", "transforms.append", "transforms.append", "transforms.append", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.RandomCrop", "torchvision.transforms.CenterCrop", "torchvision.transforms.RandomHorizontalFlip"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "opts", ")", ":", "\n", "    ", "self", ".", "dataroot", "=", "opts", ".", "dataroot", "\n", "\n", "# A", "\n", "images_A", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "opts", ".", "phase", "+", "'A'", ")", ")", "\n", "self", ".", "A", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "opts", ".", "phase", "+", "'A'", ",", "x", ")", "for", "x", "in", "images_A", "]", "\n", "\n", "# B", "\n", "images_B", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "opts", ".", "phase", "+", "'B'", ")", ")", "\n", "self", ".", "B", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "dataroot", ",", "opts", ".", "phase", "+", "'B'", ",", "x", ")", "for", "x", "in", "images_B", "]", "\n", "\n", "self", ".", "A_size", "=", "len", "(", "self", ".", "A", ")", "\n", "self", ".", "B_size", "=", "len", "(", "self", ".", "B", ")", "\n", "self", ".", "dataset_size", "=", "max", "(", "self", ".", "A_size", ",", "self", ".", "B_size", ")", "\n", "self", ".", "input_dim_A", "=", "opts", ".", "input_dim_a", "\n", "self", ".", "input_dim_B", "=", "opts", ".", "input_dim_b", "\n", "\n", "# setup image transformation", "\n", "transforms", "=", "[", "Resize", "(", "(", "opts", ".", "resize_size", ",", "opts", ".", "resize_size", ")", ",", "Image", ".", "BICUBIC", ")", "]", "\n", "if", "opts", ".", "phase", "==", "'train'", ":", "\n", "      ", "transforms", ".", "append", "(", "RandomCrop", "(", "opts", ".", "crop_size", ")", ")", "\n", "", "else", ":", "\n", "      ", "transforms", ".", "append", "(", "CenterCrop", "(", "opts", ".", "crop_size", ")", ")", "\n", "", "if", "not", "opts", ".", "no_flip", ":", "\n", "      ", "transforms", ".", "append", "(", "RandomHorizontalFlip", "(", ")", ")", "\n", "", "transforms", ".", "append", "(", "ToTensor", "(", ")", ")", "\n", "transforms", ".", "append", "(", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", ")", "\n", "self", ".", "transforms", "=", "Compose", "(", "transforms", ")", "\n", "print", "(", "'A: %d, B: %d images'", "%", "(", "self", ".", "A_size", ",", "self", ".", "B_size", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_unpair.__getitem__": [[71, 79], ["dataset.dataset_unpair.load_img", "dataset.dataset_unpair.load_img", "dataset.dataset_unpair.load_img", "dataset.dataset_unpair.load_img", "random.randint", "random.randint"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_unpair.load_img", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_unpair.load_img", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_unpair.load_img", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_unpair.load_img"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "if", "self", ".", "dataset_size", "==", "self", ".", "A_size", ":", "\n", "      ", "data_A", "=", "self", ".", "load_img", "(", "self", ".", "A", "[", "index", "]", ",", "self", ".", "input_dim_A", ")", "\n", "data_B", "=", "self", ".", "load_img", "(", "self", ".", "B", "[", "random", ".", "randint", "(", "0", ",", "self", ".", "B_size", "-", "1", ")", "]", ",", "self", ".", "input_dim_B", ")", "\n", "", "else", ":", "\n", "      ", "data_A", "=", "self", ".", "load_img", "(", "self", ".", "A", "[", "random", ".", "randint", "(", "0", ",", "self", ".", "A_size", "-", "1", ")", "]", ",", "self", ".", "input_dim_A", ")", "\n", "data_B", "=", "self", ".", "load_img", "(", "self", ".", "B", "[", "index", "]", ",", "self", ".", "input_dim_B", ")", "\n", "", "return", "data_A", ",", "data_B", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_unpair.load_img": [[80, 87], ["PIL.Image.open().convert", "dataset.dataset_unpair.transforms", "img.unsqueeze.unsqueeze.unsqueeze", "PIL.Image.open"], "methods", ["None"], ["", "def", "load_img", "(", "self", ",", "img_name", ",", "input_dim", ")", ":", "\n", "    ", "img", "=", "Image", ".", "open", "(", "img_name", ")", ".", "convert", "(", "'RGB'", ")", "\n", "img", "=", "self", ".", "transforms", "(", "img", ")", "\n", "if", "input_dim", "==", "1", ":", "\n", "      ", "img", "=", "img", "[", "0", ",", "...", "]", "*", "0.299", "+", "img", "[", "1", ",", "...", "]", "*", "0.587", "+", "img", "[", "2", ",", "...", "]", "*", "0.114", "\n", "img", "=", "img", ".", "unsqueeze", "(", "0", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.dataset.dataset_unpair.__len__": [[88, 90], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "dataset_size", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.test.main": [[8, 48], ["options.TestOptions", "options.TestOptions.parse", "print", "torch.utils.data.DataLoader", "print", "model.DRIT", "model.DRIT.setgpu", "model.DRIT.resume", "model.DRIT.eval", "os.path.join", "print", "enumerate", "dataset.dataset_single", "dataset.dataset_single", "os.path.exists", "os.mkdir", "print", "img1.cuda.cuda", "range", "saver.save_imgs", "imgs.append", "names.append", "os.path.join", "len", "torch.no_grad", "model.DRIT.test_forward"], "function", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.options.TestOptions.parse", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.setgpu", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.resume", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.save_imgs", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.test_forward"], ["def", "main", "(", ")", ":", "\n", "# parse options", "\n", "  ", "parser", "=", "TestOptions", "(", ")", "\n", "opts", "=", "parser", ".", "parse", "(", ")", "\n", "\n", "# data loader", "\n", "print", "(", "'\\n--- load dataset ---'", ")", "\n", "if", "opts", ".", "a2b", ":", "\n", "    ", "dataset", "=", "dataset_single", "(", "opts", ",", "'A'", ",", "opts", ".", "input_dim_a", ")", "\n", "", "else", ":", "\n", "    ", "dataset", "=", "dataset_single", "(", "opts", ",", "'B'", ",", "opts", ".", "input_dim_b", ")", "\n", "", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "num_workers", "=", "opts", ".", "nThreads", ")", "\n", "\n", "# model", "\n", "print", "(", "'\\n--- load model ---'", ")", "\n", "model", "=", "DRIT", "(", "opts", ")", "\n", "model", ".", "setgpu", "(", "opts", ".", "gpu", ")", "\n", "model", ".", "resume", "(", "opts", ".", "resume", ",", "train", "=", "False", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "# directory", "\n", "result_dir", "=", "os", ".", "path", ".", "join", "(", "opts", ".", "result_dir", ",", "opts", ".", "name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_dir", ")", ":", "\n", "    ", "os", ".", "mkdir", "(", "result_dir", ")", "\n", "\n", "# test", "\n", "", "print", "(", "'\\n--- testing ---'", ")", "\n", "for", "idx1", ",", "img1", "in", "enumerate", "(", "loader", ")", ":", "\n", "    ", "print", "(", "'{}/{}'", ".", "format", "(", "idx1", ",", "len", "(", "loader", ")", ")", ")", "\n", "img1", "=", "img1", ".", "cuda", "(", ")", "\n", "imgs", "=", "[", "img1", "]", "\n", "names", "=", "[", "'input'", "]", "\n", "for", "idx2", "in", "range", "(", "opts", ".", "num", ")", ":", "\n", "      ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "img", "=", "model", ".", "test_forward", "(", "img1", ",", "a2b", "=", "opts", ".", "a2b", ")", "\n", "", "imgs", ".", "append", "(", "img", ")", "\n", "names", ".", "append", "(", "'output_{}'", ".", "format", "(", "idx2", ")", ")", "\n", "", "save_imgs", "(", "imgs", ",", "names", ",", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'{}'", ".", "format", "(", "idx1", ")", ")", ")", "\n", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.__init__": [[6, 55], ["torch.Module.__init__", "networks.Dis_content", "networks.E_content", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "networks.MultiScaleDis", "networks.MultiScaleDis", "networks.MultiScaleDis", "networks.MultiScaleDis", "networks.Dis", "networks.Dis", "networks.Dis", "networks.Dis", "networks.E_attr_concat", "networks.E_attr", "networks.G_concat", "networks.G", "model.DRIT.disA.parameters", "model.DRIT.disB.parameters", "model.DRIT.disA2.parameters", "model.DRIT.disB2.parameters", "model.DRIT.disContent.parameters", "model.DRIT.enc_c.parameters", "model.DRIT.enc_a.parameters", "model.DRIT.gen.parameters", "networks.get_non_linearity"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_non_linearity"], ["  ", "def", "__init__", "(", "self", ",", "opts", ")", ":", "\n", "    ", "super", "(", "DRIT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# parameters", "\n", "lr", "=", "0.0001", "\n", "lr_dcontent", "=", "lr", "/", "2.5", "\n", "self", ".", "nz", "=", "8", "\n", "self", ".", "concat", "=", "opts", ".", "concat", "\n", "self", ".", "no_ms", "=", "opts", ".", "no_ms", "\n", "\n", "# discriminators", "\n", "if", "opts", ".", "dis_scale", ">", "1", ":", "\n", "      ", "self", ".", "disA", "=", "networks", ".", "MultiScaleDis", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "dis_scale", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disB", "=", "networks", ".", "MultiScaleDis", "(", "opts", ".", "input_dim_b", ",", "opts", ".", "dis_scale", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disA2", "=", "networks", ".", "MultiScaleDis", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "dis_scale", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disB2", "=", "networks", ".", "MultiScaleDis", "(", "opts", ".", "input_dim_b", ",", "opts", ".", "dis_scale", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "disA", "=", "networks", ".", "Dis", "(", "opts", ".", "input_dim_a", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disB", "=", "networks", ".", "Dis", "(", "opts", ".", "input_dim_b", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disA2", "=", "networks", ".", "Dis", "(", "opts", ".", "input_dim_a", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "self", ".", "disB2", "=", "networks", ".", "Dis", "(", "opts", ".", "input_dim_b", ",", "norm", "=", "opts", ".", "dis_norm", ",", "sn", "=", "opts", ".", "dis_spectral_norm", ")", "\n", "", "self", ".", "disContent", "=", "networks", ".", "Dis_content", "(", ")", "\n", "\n", "# encoders", "\n", "self", ".", "enc_c", "=", "networks", ".", "E_content", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "input_dim_b", ")", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "enc_a", "=", "networks", ".", "E_attr_concat", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "input_dim_b", ",", "self", ".", "nz", ",", "norm_layer", "=", "None", ",", "nl_layer", "=", "networks", ".", "get_non_linearity", "(", "layer_type", "=", "'lrelu'", ")", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "enc_a", "=", "networks", ".", "E_attr", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "input_dim_b", ",", "self", ".", "nz", ")", "\n", "\n", "# generator", "\n", "", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "gen", "=", "networks", ".", "G_concat", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "input_dim_b", ",", "nz", "=", "self", ".", "nz", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "gen", "=", "networks", ".", "G", "(", "opts", ".", "input_dim_a", ",", "opts", ".", "input_dim_b", ",", "nz", "=", "self", ".", "nz", ")", "\n", "\n", "# optimizers", "\n", "", "self", ".", "disA_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "disA", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "disB_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "disB", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "disA2_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "disA2", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "disB2_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "disB2", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "disContent_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "disContent", ".", "parameters", "(", ")", ",", "lr", "=", "lr_dcontent", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "enc_c_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "enc_c", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "enc_a_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "enc_a", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "self", ".", "gen_opt", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "gen", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "weight_decay", "=", "0.0001", ")", "\n", "\n", "# Setup the loss function for training", "\n", "self", ".", "criterionL1", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.initialize": [[56, 65], ["model.DRIT.disA.apply", "model.DRIT.disB.apply", "model.DRIT.disA2.apply", "model.DRIT.disB2.apply", "model.DRIT.disContent.apply", "model.DRIT.gen.apply", "model.DRIT.enc_c.apply", "model.DRIT.enc_a.apply"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.SpectralNorm.apply"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "    ", "self", ".", "disA", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "disB", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "disA2", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "disB2", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "disContent", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "gen", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "enc_c", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "self", ".", "enc_a", ".", "apply", "(", "networks", ".", "gaussian_weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.set_scheduler": [[66, 75], ["networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler", "networks.get_scheduler"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_scheduler", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_scheduler", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_scheduler", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_scheduler", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_scheduler", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_scheduler", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_scheduler", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.get_scheduler"], ["", "def", "set_scheduler", "(", "self", ",", "opts", ",", "last_ep", "=", "0", ")", ":", "\n", "    ", "self", ".", "disA_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "disA_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "disB_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "disB_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "disA2_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "disA2_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "disB2_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "disB2_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "disContent_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "disContent_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "enc_c_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "enc_c_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "enc_a_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "enc_a_opt", ",", "opts", ",", "last_ep", ")", "\n", "self", ".", "gen_sch", "=", "networks", ".", "get_scheduler", "(", "self", ".", "gen_opt", ",", "opts", ",", "last_ep", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.setgpu": [[76, 86], ["model.DRIT.disA.cuda", "model.DRIT.disB.cuda", "model.DRIT.disA2.cuda", "model.DRIT.disB2.cuda", "model.DRIT.disContent.cuda", "model.DRIT.enc_c.cuda", "model.DRIT.enc_a.cuda", "model.DRIT.gen.cuda"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda"], ["", "def", "setgpu", "(", "self", ",", "gpu", ")", ":", "\n", "    ", "self", ".", "gpu", "=", "gpu", "\n", "self", ".", "disA", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "disB", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "disA2", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "disB2", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "disContent", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "enc_c", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "enc_a", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "self", ".", "gen", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.get_z_random": [[87, 90], ["torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda"], ["", "def", "get_z_random", "(", "self", ",", "batchSize", ",", "nz", ",", "random_type", "=", "'gauss'", ")", ":", "\n", "    ", "z", "=", "torch", ".", "randn", "(", "batchSize", ",", "nz", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.test_forward": [[91, 100], ["model.DRIT.get_z_random", "image.size", "model.DRIT.enc_c.forward_a", "model.DRIT.gen.forward_b", "model.DRIT.enc_c.forward_b", "model.DRIT.gen.forward_a"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.get_z_random", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_a", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_b", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_b", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_a"], ["", "def", "test_forward", "(", "self", ",", "image", ",", "a2b", "=", "True", ")", ":", "\n", "    ", "self", ".", "z_random", "=", "self", ".", "get_z_random", "(", "image", ".", "size", "(", "0", ")", ",", "self", ".", "nz", ",", "'gauss'", ")", "\n", "if", "a2b", ":", "\n", "        ", "self", ".", "z_content", "=", "self", ".", "enc_c", ".", "forward_a", "(", "image", ")", "\n", "output", "=", "self", ".", "gen", ".", "forward_b", "(", "self", ".", "z_content", ",", "self", ".", "z_random", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "z_content", "=", "self", ".", "enc_c", ".", "forward_b", "(", "image", ")", "\n", "output", "=", "self", ".", "gen", ".", "forward_a", "(", "self", ".", "z_content", ",", "self", ".", "z_random", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.test_forward_transfer": [[101, 118], ["model.DRIT.enc_c.forward", "model.DRIT.enc_a.forward", "model.DRIT.logvar_a.mul().exp_", "model.DRIT.get_z_random", "model.DRIT.mul().add_", "model.DRIT.logvar_b.mul().exp_", "model.DRIT.get_z_random", "model.DRIT.mul().add_", "model.DRIT.enc_a.forward", "model.DRIT.gen.forward_b", "model.DRIT.gen.forward_a", "model.DRIT.size", "model.DRIT.size", "model.DRIT.size", "model.DRIT.size", "model.DRIT.logvar_a.mul", "model.DRIT.mul", "model.DRIT.logvar_b.mul", "model.DRIT.mul"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.get_z_random", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.get_z_random", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_b", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_a"], ["", "def", "test_forward_transfer", "(", "self", ",", "image_a", ",", "image_b", ",", "a2b", "=", "True", ")", ":", "\n", "    ", "self", ".", "z_content_a", ",", "self", ".", "z_content_b", "=", "self", ".", "enc_c", ".", "forward", "(", "image_a", ",", "image_b", ")", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "mu_a", ",", "self", ".", "logvar_a", ",", "self", ".", "mu_b", ",", "self", ".", "logvar_b", "=", "self", ".", "enc_a", ".", "forward", "(", "image_a", ",", "image_b", ")", "\n", "std_a", "=", "self", ".", "logvar_a", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps", "=", "self", ".", "get_z_random", "(", "std_a", ".", "size", "(", "0", ")", ",", "std_a", ".", "size", "(", "1", ")", ",", "'gauss'", ")", "\n", "self", ".", "z_attr_a", "=", "eps", ".", "mul", "(", "std_a", ")", ".", "add_", "(", "self", ".", "mu_a", ")", "\n", "std_b", "=", "self", ".", "logvar_b", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps", "=", "self", ".", "get_z_random", "(", "std_b", ".", "size", "(", "0", ")", ",", "std_b", ".", "size", "(", "1", ")", ",", "'gauss'", ")", "\n", "self", ".", "z_attr_b", "=", "eps", ".", "mul", "(", "std_b", ")", ".", "add_", "(", "self", ".", "mu_b", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "z_attr_a", ",", "self", ".", "z_attr_b", "=", "self", ".", "enc_a", ".", "forward", "(", "image_a", ",", "image_b", ")", "\n", "", "if", "a2b", ":", "\n", "      ", "output", "=", "self", ".", "gen", ".", "forward_b", "(", "self", ".", "z_content_a", ",", "self", ".", "z_attr_b", ")", "\n", "", "else", ":", "\n", "      ", "output", "=", "self", ".", "gen", ".", "forward_a", "(", "self", ".", "z_content_b", ",", "self", ".", "z_attr_a", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward": [[119, 199], ["model.DRIT.enc_c.forward", "model.DRIT.get_z_random", "model.DRIT.enc_c.forward", "model.DRIT.gen.forward_a", "model.DRIT.gen.forward_b", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.DRIT.enc_a.forward", "model.DRIT.logvar_a.mul().exp_", "model.DRIT.get_z_random", "model.DRIT.mul().add_", "model.DRIT.logvar_b.mul().exp_", "model.DRIT.get_z_random", "model.DRIT.mul().add_", "model.DRIT.enc_a.forward", "model.DRIT.real_A_encoded.size", "model.DRIT.get_z_random", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.DRIT.gen.forward_a", "model.DRIT.gen.forward_b", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.DRIT.gen.forward_a", "model.DRIT.gen.forward_b", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "model.DRIT.enc_a.forward", "model.DRIT.logvar_recon_a.mul().exp_", "model.DRIT.get_z_random", "model.DRIT.mul().add_", "model.DRIT.logvar_recon_b.mul().exp_", "model.DRIT.get_z_random", "model.DRIT.mul().add_", "model.DRIT.enc_a.forward", "model.DRIT.enc_a.forward", "model.DRIT.enc_a.forward", "model.DRIT.size", "model.DRIT.size", "model.DRIT.size", "model.DRIT.size", "model.DRIT.real_A_encoded.size", "model.DRIT.z_content_a.size", "model.DRIT.z_content_a.size", "model.DRIT.z_content_a.size", "model.DRIT.z_content_a.size", "model.DRIT.size", "model.DRIT.size", "model.DRIT.size", "model.DRIT.size", "model.DRIT.real_A_encoded[].detach().cpu", "model.DRIT.fake_B_encoded[].detach().cpu", "model.DRIT.fake_B_random[].detach().cpu", "model.DRIT.fake_AA_encoded[].detach().cpu", "model.DRIT.fake_A_recon[].detach().cpu", "model.DRIT.real_B_encoded[].detach().cpu", "model.DRIT.fake_A_encoded[].detach().cpu", "model.DRIT.fake_A_random[].detach().cpu", "model.DRIT.fake_BB_encoded[].detach().cpu", "model.DRIT.fake_B_recon[].detach().cpu", "model.DRIT.logvar_a.mul", "model.DRIT.mul", "model.DRIT.logvar_b.mul", "model.DRIT.mul", "model.DRIT.logvar_recon_a.mul", "model.DRIT.mul", "model.DRIT.logvar_recon_b.mul", "model.DRIT.mul", "model.DRIT.real_A_encoded[].detach", "model.DRIT.fake_B_encoded[].detach", "model.DRIT.fake_B_random[].detach", "model.DRIT.fake_AA_encoded[].detach", "model.DRIT.fake_A_recon[].detach", "model.DRIT.real_B_encoded[].detach", "model.DRIT.fake_A_encoded[].detach", "model.DRIT.fake_A_random[].detach", "model.DRIT.fake_BB_encoded[].detach", "model.DRIT.fake_B_recon[].detach"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.get_z_random", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_a", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_b", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.get_z_random", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.get_z_random", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.get_z_random", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_a", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_b", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_a", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.G_concat.forward_b", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.get_z_random", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.get_z_random", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward"], ["", "def", "forward", "(", "self", ")", ":", "\n", "# input images", "\n", "    ", "half_size", "=", "1", "\n", "real_A", "=", "self", ".", "input_A", "\n", "real_B", "=", "self", ".", "input_B", "\n", "self", ".", "real_A_encoded", "=", "real_A", "[", "0", ":", "half_size", "]", "\n", "self", ".", "real_A_random", "=", "real_A", "[", "half_size", ":", "]", "\n", "self", ".", "real_B_encoded", "=", "real_B", "[", "0", ":", "half_size", "]", "\n", "self", ".", "real_B_random", "=", "real_B", "[", "half_size", ":", "]", "\n", "\n", "# get encoded z_c", "\n", "self", ".", "z_content_a", ",", "self", ".", "z_content_b", "=", "self", ".", "enc_c", ".", "forward", "(", "self", ".", "real_A_encoded", ",", "self", ".", "real_B_encoded", ")", "\n", "\n", "# get encoded z_a", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "mu_a", ",", "self", ".", "logvar_a", ",", "self", ".", "mu_b", ",", "self", ".", "logvar_b", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "real_A_encoded", ",", "self", ".", "real_B_encoded", ")", "\n", "std_a", "=", "self", ".", "logvar_a", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps_a", "=", "self", ".", "get_z_random", "(", "std_a", ".", "size", "(", "0", ")", ",", "std_a", ".", "size", "(", "1", ")", ",", "'gauss'", ")", "\n", "self", ".", "z_attr_a", "=", "eps_a", ".", "mul", "(", "std_a", ")", ".", "add_", "(", "self", ".", "mu_a", ")", "\n", "std_b", "=", "self", ".", "logvar_b", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps_b", "=", "self", ".", "get_z_random", "(", "std_b", ".", "size", "(", "0", ")", ",", "std_b", ".", "size", "(", "1", ")", ",", "'gauss'", ")", "\n", "self", ".", "z_attr_b", "=", "eps_b", ".", "mul", "(", "std_b", ")", ".", "add_", "(", "self", ".", "mu_b", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "z_attr_a", ",", "self", ".", "z_attr_b", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "real_A_encoded", ",", "self", ".", "real_B_encoded", ")", "\n", "\n", "# get random z_a", "\n", "", "self", ".", "z_random", "=", "self", ".", "get_z_random", "(", "self", ".", "real_A_encoded", ".", "size", "(", "0", ")", ",", "self", ".", "nz", ",", "'gauss'", ")", "\n", "if", "not", "self", ".", "no_ms", ":", "\n", "      ", "self", ".", "z_random2", "=", "self", ".", "get_z_random", "(", "self", ".", "real_A_encoded", ".", "size", "(", "0", ")", ",", "self", ".", "nz", ",", "'gauss'", ")", "\n", "\n", "# first cross translation", "\n", "", "if", "not", "self", ".", "no_ms", ":", "\n", "      ", "input_content_forA", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_content_b", ",", "self", ".", "z_content_a", ",", "self", ".", "z_content_b", ",", "self", ".", "z_content_b", ")", ",", "0", ")", "\n", "input_content_forB", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_content_a", ",", "self", ".", "z_content_b", ",", "self", ".", "z_content_a", ",", "self", ".", "z_content_a", ")", ",", "0", ")", "\n", "input_attr_forA", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_attr_a", ",", "self", ".", "z_attr_a", ",", "self", ".", "z_random", ",", "self", ".", "z_random2", ")", ",", "0", ")", "\n", "input_attr_forB", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_attr_b", ",", "self", ".", "z_attr_b", ",", "self", ".", "z_random", ",", "self", ".", "z_random2", ")", ",", "0", ")", "\n", "output_fakeA", "=", "self", ".", "gen", ".", "forward_a", "(", "input_content_forA", ",", "input_attr_forA", ")", "\n", "output_fakeB", "=", "self", ".", "gen", ".", "forward_b", "(", "input_content_forB", ",", "input_attr_forB", ")", "\n", "self", ".", "fake_A_encoded", ",", "self", ".", "fake_AA_encoded", ",", "self", ".", "fake_A_random", ",", "self", ".", "fake_A_random2", "=", "torch", ".", "split", "(", "output_fakeA", ",", "self", ".", "z_content_a", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "self", ".", "fake_B_encoded", ",", "self", ".", "fake_BB_encoded", ",", "self", ".", "fake_B_random", ",", "self", ".", "fake_B_random2", "=", "torch", ".", "split", "(", "output_fakeB", ",", "self", ".", "z_content_a", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "      ", "input_content_forA", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_content_b", ",", "self", ".", "z_content_a", ",", "self", ".", "z_content_b", ")", ",", "0", ")", "\n", "input_content_forB", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_content_a", ",", "self", ".", "z_content_b", ",", "self", ".", "z_content_a", ")", ",", "0", ")", "\n", "input_attr_forA", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_attr_a", ",", "self", ".", "z_attr_a", ",", "self", ".", "z_random", ")", ",", "0", ")", "\n", "input_attr_forB", "=", "torch", ".", "cat", "(", "(", "self", ".", "z_attr_b", ",", "self", ".", "z_attr_b", ",", "self", ".", "z_random", ")", ",", "0", ")", "\n", "output_fakeA", "=", "self", ".", "gen", ".", "forward_a", "(", "input_content_forA", ",", "input_attr_forA", ")", "\n", "output_fakeB", "=", "self", ".", "gen", ".", "forward_b", "(", "input_content_forB", ",", "input_attr_forB", ")", "\n", "self", ".", "fake_A_encoded", ",", "self", ".", "fake_AA_encoded", ",", "self", ".", "fake_A_random", "=", "torch", ".", "split", "(", "output_fakeA", ",", "self", ".", "z_content_a", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "self", ".", "fake_B_encoded", ",", "self", ".", "fake_BB_encoded", ",", "self", ".", "fake_B_random", "=", "torch", ".", "split", "(", "output_fakeB", ",", "self", ".", "z_content_a", ".", "size", "(", "0", ")", ",", "dim", "=", "0", ")", "\n", "\n", "# get reconstructed encoded z_c", "\n", "", "self", ".", "z_content_recon_b", ",", "self", ".", "z_content_recon_a", "=", "self", ".", "enc_c", ".", "forward", "(", "self", ".", "fake_A_encoded", ",", "self", ".", "fake_B_encoded", ")", "\n", "\n", "# get reconstructed encoded z_a", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "mu_recon_a", ",", "self", ".", "logvar_recon_a", ",", "self", ".", "mu_recon_b", ",", "self", ".", "logvar_recon_b", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "fake_A_encoded", ",", "self", ".", "fake_B_encoded", ")", "\n", "std_a", "=", "self", ".", "logvar_recon_a", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps_a", "=", "self", ".", "get_z_random", "(", "std_a", ".", "size", "(", "0", ")", ",", "std_a", ".", "size", "(", "1", ")", ",", "'gauss'", ")", "\n", "self", ".", "z_attr_recon_a", "=", "eps_a", ".", "mul", "(", "std_a", ")", ".", "add_", "(", "self", ".", "mu_recon_a", ")", "\n", "std_b", "=", "self", ".", "logvar_recon_b", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps_b", "=", "self", ".", "get_z_random", "(", "std_b", ".", "size", "(", "0", ")", ",", "std_b", ".", "size", "(", "1", ")", ",", "'gauss'", ")", "\n", "self", ".", "z_attr_recon_b", "=", "eps_b", ".", "mul", "(", "std_b", ")", ".", "add_", "(", "self", ".", "mu_recon_b", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "z_attr_recon_a", ",", "self", ".", "z_attr_recon_b", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "fake_A_encoded", ",", "self", ".", "fake_B_encoded", ")", "\n", "\n", "# second cross translation", "\n", "", "self", ".", "fake_A_recon", "=", "self", ".", "gen", ".", "forward_a", "(", "self", ".", "z_content_recon_a", ",", "self", ".", "z_attr_recon_a", ")", "\n", "self", ".", "fake_B_recon", "=", "self", ".", "gen", ".", "forward_b", "(", "self", ".", "z_content_recon_b", ",", "self", ".", "z_attr_recon_b", ")", "\n", "\n", "# for display", "\n", "self", ".", "image_display", "=", "torch", ".", "cat", "(", "(", "self", ".", "real_A_encoded", "[", "0", ":", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "self", ".", "fake_B_encoded", "[", "0", ":", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "self", ".", "fake_B_random", "[", "0", ":", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "self", ".", "fake_AA_encoded", "[", "0", ":", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "self", ".", "fake_A_recon", "[", "0", ":", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "self", ".", "real_B_encoded", "[", "0", ":", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "self", ".", "fake_A_encoded", "[", "0", ":", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "self", ".", "fake_A_random", "[", "0", ":", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "self", ".", "fake_BB_encoded", "[", "0", ":", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "self", ".", "fake_B_recon", "[", "0", ":", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", ",", "dim", "=", "0", ")", "\n", "\n", "# for latent regression", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "self", ".", "mu2_a", ",", "_", ",", "self", ".", "mu2_b", ",", "_", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "fake_A_random", ",", "self", ".", "fake_B_random", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "z_attr_random_a", ",", "self", ".", "z_attr_random_b", "=", "self", ".", "enc_a", ".", "forward", "(", "self", ".", "fake_A_random", ",", "self", ".", "fake_B_random", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward_content": [[200, 206], ["model.DRIT.enc_c.forward"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward"], ["", "", "def", "forward_content", "(", "self", ")", ":", "\n", "    ", "half_size", "=", "1", "\n", "self", ".", "real_A_encoded", "=", "self", ".", "input_A", "[", "0", ":", "half_size", "]", "\n", "self", ".", "real_B_encoded", "=", "self", ".", "input_B", "[", "0", ":", "half_size", "]", "\n", "# get encoded z_c", "\n", "self", ".", "z_content_a", ",", "self", ".", "z_content_b", "=", "self", ".", "enc_c", ".", "forward", "(", "self", ".", "real_A_encoded", ",", "self", ".", "real_B_encoded", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.update_D_content": [[207, 216], ["model.DRIT.forward_content", "model.DRIT.disContent_opt.zero_grad", "model.DRIT.backward_contentD", "model.DRIT.item", "torch.utils.clip_grad_norm_", "torch.utils.clip_grad_norm_", "model.DRIT.disContent_opt.step", "model.DRIT.disContent.parameters"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward_content", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_contentD"], ["", "def", "update_D_content", "(", "self", ",", "image_a", ",", "image_b", ")", ":", "\n", "    ", "self", ".", "input_A", "=", "image_a", "\n", "self", ".", "input_B", "=", "image_b", "\n", "self", ".", "forward_content", "(", ")", "\n", "self", ".", "disContent_opt", ".", "zero_grad", "(", ")", "\n", "loss_D_Content", "=", "self", ".", "backward_contentD", "(", "self", ".", "z_content_a", ",", "self", ".", "z_content_b", ")", "\n", "self", ".", "disContent_loss", "=", "loss_D_Content", ".", "item", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "disContent", ".", "parameters", "(", ")", ",", "5", ")", "\n", "self", ".", "disContent_opt", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.update_D": [[217, 258], ["model.DRIT.forward", "model.DRIT.disA_opt.zero_grad", "model.DRIT.backward_D", "model.DRIT.item", "model.DRIT.disA_opt.step", "model.DRIT.disA2_opt.zero_grad", "model.DRIT.backward_D", "model.DRIT.item", "model.DRIT.disA2_opt.step", "model.DRIT.disB_opt.zero_grad", "model.DRIT.backward_D", "model.DRIT.item", "model.DRIT.disB_opt.step", "model.DRIT.disB2_opt.zero_grad", "model.DRIT.backward_D", "model.DRIT.item", "model.DRIT.disB2_opt.step", "model.DRIT.disContent_opt.zero_grad", "model.DRIT.backward_contentD", "model.DRIT.item", "torch.utils.clip_grad_norm_", "torch.utils.clip_grad_norm_", "model.DRIT.disContent_opt.step", "model.DRIT.backward_D", "model.DRIT.item", "model.DRIT.backward_D", "model.DRIT.item", "model.DRIT.disContent.parameters"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_D", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_D", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_D", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_D", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_contentD", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_D", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_D"], ["", "def", "update_D", "(", "self", ",", "image_a", ",", "image_b", ")", ":", "\n", "    ", "self", ".", "input_A", "=", "image_a", "\n", "self", ".", "input_B", "=", "image_b", "\n", "self", ".", "forward", "(", ")", "\n", "\n", "# update disA", "\n", "self", ".", "disA_opt", ".", "zero_grad", "(", ")", "\n", "loss_D1_A", "=", "self", ".", "backward_D", "(", "self", ".", "disA", ",", "self", ".", "real_A_encoded", ",", "self", ".", "fake_A_encoded", ")", "\n", "self", ".", "disA_loss", "=", "loss_D1_A", ".", "item", "(", ")", "\n", "self", ".", "disA_opt", ".", "step", "(", ")", "\n", "\n", "# update disA2", "\n", "self", ".", "disA2_opt", ".", "zero_grad", "(", ")", "\n", "loss_D2_A", "=", "self", ".", "backward_D", "(", "self", ".", "disA2", ",", "self", ".", "real_A_random", ",", "self", ".", "fake_A_random", ")", "\n", "self", ".", "disA2_loss", "=", "loss_D2_A", ".", "item", "(", ")", "\n", "if", "not", "self", ".", "no_ms", ":", "\n", "      ", "loss_D2_A2", "=", "self", ".", "backward_D", "(", "self", ".", "disA2", ",", "self", ".", "real_A_random", ",", "self", ".", "fake_A_random2", ")", "\n", "self", ".", "disA2_loss", "+=", "loss_D2_A2", ".", "item", "(", ")", "\n", "", "self", ".", "disA2_opt", ".", "step", "(", ")", "\n", "\n", "# update disB", "\n", "self", ".", "disB_opt", ".", "zero_grad", "(", ")", "\n", "loss_D1_B", "=", "self", ".", "backward_D", "(", "self", ".", "disB", ",", "self", ".", "real_B_encoded", ",", "self", ".", "fake_B_encoded", ")", "\n", "self", ".", "disB_loss", "=", "loss_D1_B", ".", "item", "(", ")", "\n", "self", ".", "disB_opt", ".", "step", "(", ")", "\n", "\n", "# update disB2", "\n", "self", ".", "disB2_opt", ".", "zero_grad", "(", ")", "\n", "loss_D2_B", "=", "self", ".", "backward_D", "(", "self", ".", "disB2", ",", "self", ".", "real_B_random", ",", "self", ".", "fake_B_random", ")", "\n", "self", ".", "disB2_loss", "=", "loss_D2_B", ".", "item", "(", ")", "\n", "if", "not", "self", ".", "no_ms", ":", "\n", "      ", "loss_D2_B2", "=", "self", ".", "backward_D", "(", "self", ".", "disB2", ",", "self", ".", "real_B_random", ",", "self", ".", "fake_B_random2", ")", "\n", "self", ".", "disB2_loss", "+=", "loss_D2_B2", ".", "item", "(", ")", "\n", "", "self", ".", "disB2_opt", ".", "step", "(", ")", "\n", "\n", "# update disContent", "\n", "self", ".", "disContent_opt", ".", "zero_grad", "(", ")", "\n", "loss_D_Content", "=", "self", ".", "backward_contentD", "(", "self", ".", "z_content_a", ",", "self", ".", "z_content_b", ")", "\n", "self", ".", "disContent_loss", "=", "loss_D_Content", ".", "item", "(", ")", "\n", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "disContent", ".", "parameters", "(", ")", ",", "5", ")", "\n", "self", ".", "disContent_opt", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_D": [[259, 273], ["netD.forward", "netD.forward", "enumerate", "loss_D.backward", "fake.detach", "zip", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda"], ["", "def", "backward_D", "(", "self", ",", "netD", ",", "real", ",", "fake", ")", ":", "\n", "    ", "pred_fake", "=", "netD", ".", "forward", "(", "fake", ".", "detach", "(", ")", ")", "\n", "pred_real", "=", "netD", ".", "forward", "(", "real", ")", "\n", "loss_D", "=", "0", "\n", "for", "it", ",", "(", "out_a", ",", "out_b", ")", "in", "enumerate", "(", "zip", "(", "pred_fake", ",", "pred_real", ")", ")", ":", "\n", "      ", "out_fake", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_a", ")", "\n", "out_real", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_b", ")", "\n", "all0", "=", "torch", ".", "zeros_like", "(", "out_fake", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "all1", "=", "torch", ".", "ones_like", "(", "out_real", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "ad_fake_loss", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake", ",", "all0", ")", "\n", "ad_true_loss", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_real", ",", "all1", ")", "\n", "loss_D", "+=", "ad_true_loss", "+", "ad_fake_loss", "\n", "", "loss_D", ".", "backward", "(", ")", "\n", "return", "loss_D", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_contentD": [[274, 287], ["model.DRIT.disContent.forward", "model.DRIT.disContent.forward", "enumerate", "loss_D.backward", "imageA.detach", "imageB.detach", "zip", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.functional.sigmoid.size", "torch.functional.sigmoid.size"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda"], ["", "def", "backward_contentD", "(", "self", ",", "imageA", ",", "imageB", ")", ":", "\n", "    ", "pred_fake", "=", "self", ".", "disContent", ".", "forward", "(", "imageA", ".", "detach", "(", ")", ")", "\n", "pred_real", "=", "self", ".", "disContent", ".", "forward", "(", "imageB", ".", "detach", "(", ")", ")", "\n", "for", "it", ",", "(", "out_a", ",", "out_b", ")", "in", "enumerate", "(", "zip", "(", "pred_fake", ",", "pred_real", ")", ")", ":", "\n", "      ", "out_fake", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_a", ")", "\n", "out_real", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_b", ")", "\n", "all1", "=", "torch", ".", "ones", "(", "(", "out_real", ".", "size", "(", "0", ")", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "all0", "=", "torch", ".", "zeros", "(", "(", "out_fake", ".", "size", "(", "0", ")", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "ad_true_loss", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_real", ",", "all1", ")", "\n", "ad_fake_loss", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "out_fake", ",", "all0", ")", "\n", "", "loss_D", "=", "ad_true_loss", "+", "ad_fake_loss", "\n", "loss_D", ".", "backward", "(", ")", "\n", "return", "loss_D", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.update_EG": [[288, 304], ["model.DRIT.enc_c_opt.zero_grad", "model.DRIT.enc_a_opt.zero_grad", "model.DRIT.gen_opt.zero_grad", "model.DRIT.backward_EG", "model.DRIT.enc_c_opt.step", "model.DRIT.enc_a_opt.step", "model.DRIT.gen_opt.step", "model.DRIT.enc_c_opt.zero_grad", "model.DRIT.gen_opt.zero_grad", "model.DRIT.backward_G_alone", "model.DRIT.enc_c_opt.step", "model.DRIT.gen_opt.step"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_EG", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_alone"], ["", "def", "update_EG", "(", "self", ")", ":", "\n", "# update G, Ec, Ea", "\n", "    ", "self", ".", "enc_c_opt", ".", "zero_grad", "(", ")", "\n", "self", ".", "enc_a_opt", ".", "zero_grad", "(", ")", "\n", "self", ".", "gen_opt", ".", "zero_grad", "(", ")", "\n", "self", ".", "backward_EG", "(", ")", "\n", "self", ".", "enc_c_opt", ".", "step", "(", ")", "\n", "self", ".", "enc_a_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "\n", "# update G, Ec", "\n", "self", ".", "enc_c_opt", ".", "zero_grad", "(", ")", "\n", "self", ".", "gen_opt", ".", "zero_grad", "(", ")", "\n", "self", ".", "backward_G_alone", "(", ")", "\n", "self", ".", "enc_c_opt", ".", "step", "(", ")", "\n", "self", ".", "gen_opt", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_EG": [[305, 356], ["model.DRIT.backward_G_GAN_content", "model.DRIT.backward_G_GAN_content", "model.DRIT.backward_G_GAN", "model.DRIT.backward_G_GAN", "loss_G.backward", "model.DRIT.item", "model.DRIT.item", "model.DRIT.item", "model.DRIT.item", "loss_kl_za_a.item", "loss_kl_za_b.item", "loss_kl_zc_a.item", "loss_kl_zc_b.item", "loss_G_L1_A.item", "loss_G_L1_B.item", "loss_G_L1_AA.item", "loss_G_L1_BB.item", "loss_G.item", "model.DRIT.mu_a.pow().add_().mul_().add_().add_", "model.DRIT.mu_b.pow().add_().mul_().add_().add_", "model.DRIT._l2_regularize", "model.DRIT._l2_regularize", "model.DRIT.criterionL1", "model.DRIT.criterionL1", "model.DRIT.criterionL1", "model.DRIT.criterionL1", "torch.sum().mul_", "torch.sum().mul_", "torch.sum().mul_", "torch.sum().mul_", "torch.sum().mul_", "torch.sum().mul_", "torch.sum().mul_", "torch.sum().mul_", "model.DRIT._l2_regularize", "model.DRIT._l2_regularize", "model.DRIT.mu_a.pow().add_().mul_().add_", "model.DRIT.mu_b.pow().add_().mul_().add_", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "model.DRIT.mu_a.pow().add_().mul_", "model.DRIT.mu_b.pow().add_().mul_", "model.DRIT.mu_a.pow().add_", "model.DRIT.mu_b.pow().add_", "model.DRIT.logvar_a.exp", "model.DRIT.logvar_b.exp", "model.DRIT.mu_a.pow", "model.DRIT.mu_b.pow"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_GAN_content", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_GAN_content", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_GAN", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_GAN", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT._l2_regularize", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT._l2_regularize", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT._l2_regularize", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT._l2_regularize"], ["", "def", "backward_EG", "(", "self", ")", ":", "\n", "# content Ladv for generator", "\n", "    ", "loss_G_GAN_Acontent", "=", "self", ".", "backward_G_GAN_content", "(", "self", ".", "z_content_a", ")", "\n", "loss_G_GAN_Bcontent", "=", "self", ".", "backward_G_GAN_content", "(", "self", ".", "z_content_b", ")", "\n", "\n", "# Ladv for generator", "\n", "loss_G_GAN_A", "=", "self", ".", "backward_G_GAN", "(", "self", ".", "fake_A_encoded", ",", "self", ".", "disA", ")", "\n", "loss_G_GAN_B", "=", "self", ".", "backward_G_GAN", "(", "self", ".", "fake_B_encoded", ",", "self", ".", "disB", ")", "\n", "\n", "# KL loss - z_a", "\n", "if", "self", ".", "concat", ":", "\n", "      ", "kl_element_a", "=", "self", ".", "mu_a", ".", "pow", "(", "2", ")", ".", "add_", "(", "self", ".", "logvar_a", ".", "exp", "(", ")", ")", ".", "mul_", "(", "-", "1", ")", ".", "add_", "(", "1", ")", ".", "add_", "(", "self", ".", "logvar_a", ")", "\n", "loss_kl_za_a", "=", "torch", ".", "sum", "(", "kl_element_a", ")", ".", "mul_", "(", "-", "0.5", ")", "*", "0.01", "\n", "kl_element_b", "=", "self", ".", "mu_b", ".", "pow", "(", "2", ")", ".", "add_", "(", "self", ".", "logvar_b", ".", "exp", "(", ")", ")", ".", "mul_", "(", "-", "1", ")", ".", "add_", "(", "1", ")", ".", "add_", "(", "self", ".", "logvar_b", ")", "\n", "loss_kl_za_b", "=", "torch", ".", "sum", "(", "kl_element_b", ")", ".", "mul_", "(", "-", "0.5", ")", "*", "0.01", "\n", "", "else", ":", "\n", "      ", "loss_kl_za_a", "=", "self", ".", "_l2_regularize", "(", "self", ".", "z_attr_a", ")", "*", "0.01", "\n", "loss_kl_za_b", "=", "self", ".", "_l2_regularize", "(", "self", ".", "z_attr_b", ")", "*", "0.01", "\n", "\n", "# KL loss - z_c", "\n", "", "loss_kl_zc_a", "=", "self", ".", "_l2_regularize", "(", "self", ".", "z_content_a", ")", "*", "0.01", "\n", "loss_kl_zc_b", "=", "self", ".", "_l2_regularize", "(", "self", ".", "z_content_b", ")", "*", "0.01", "\n", "\n", "# cross cycle consistency loss", "\n", "loss_G_L1_A", "=", "self", ".", "criterionL1", "(", "self", ".", "fake_A_recon", ",", "self", ".", "real_A_encoded", ")", "*", "10", "\n", "loss_G_L1_B", "=", "self", ".", "criterionL1", "(", "self", ".", "fake_B_recon", ",", "self", ".", "real_B_encoded", ")", "*", "10", "\n", "loss_G_L1_AA", "=", "self", ".", "criterionL1", "(", "self", ".", "fake_AA_encoded", ",", "self", ".", "real_A_encoded", ")", "*", "10", "\n", "loss_G_L1_BB", "=", "self", ".", "criterionL1", "(", "self", ".", "fake_BB_encoded", ",", "self", ".", "real_B_encoded", ")", "*", "10", "\n", "\n", "loss_G", "=", "loss_G_GAN_A", "+", "loss_G_GAN_B", "+", "loss_G_GAN_Acontent", "+", "loss_G_GAN_Bcontent", "+", "loss_G_L1_AA", "+", "loss_G_L1_BB", "+", "loss_G_L1_A", "+", "loss_G_L1_B", "+", "loss_kl_zc_a", "+", "loss_kl_zc_b", "+", "loss_kl_za_a", "+", "loss_kl_za_b", "\n", "\n", "loss_G", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "\n", "self", ".", "gan_loss_a", "=", "loss_G_GAN_A", ".", "item", "(", ")", "\n", "self", ".", "gan_loss_b", "=", "loss_G_GAN_B", ".", "item", "(", ")", "\n", "self", ".", "gan_loss_acontent", "=", "loss_G_GAN_Acontent", ".", "item", "(", ")", "\n", "self", ".", "gan_loss_bcontent", "=", "loss_G_GAN_Bcontent", ".", "item", "(", ")", "\n", "self", ".", "kl_loss_za_a", "=", "loss_kl_za_a", ".", "item", "(", ")", "\n", "self", ".", "kl_loss_za_b", "=", "loss_kl_za_b", ".", "item", "(", ")", "\n", "self", ".", "kl_loss_zc_a", "=", "loss_kl_zc_a", ".", "item", "(", ")", "\n", "self", ".", "kl_loss_zc_b", "=", "loss_kl_zc_b", ".", "item", "(", ")", "\n", "self", ".", "l1_recon_A_loss", "=", "loss_G_L1_A", ".", "item", "(", ")", "\n", "self", ".", "l1_recon_B_loss", "=", "loss_G_L1_B", ".", "item", "(", ")", "\n", "self", ".", "l1_recon_AA_loss", "=", "loss_G_L1_AA", ".", "item", "(", ")", "\n", "self", ".", "l1_recon_BB_loss", "=", "loss_G_L1_BB", ".", "item", "(", ")", "\n", "self", ".", "G_loss", "=", "loss_G", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_GAN_content": [[357, 364], ["model.DRIT.disContent.forward", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.functional.sigmoid.size"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda"], ["", "def", "backward_G_GAN_content", "(", "self", ",", "data", ")", ":", "\n", "    ", "outs", "=", "self", ".", "disContent", ".", "forward", "(", "data", ")", "\n", "for", "out", "in", "outs", ":", "\n", "      ", "outputs_fake", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out", ")", "\n", "all_half", "=", "0.5", "*", "torch", ".", "ones", "(", "(", "outputs_fake", ".", "size", "(", "0", ")", ")", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "ad_loss", "=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_fake", ",", "all_half", ")", "\n", "", "return", "ad_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_GAN": [[365, 373], ["netD.forward", "torch.functional.sigmoid", "torch.functional.sigmoid", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.ones_like().cuda", "torch.functional.binary_cross_entropy", "torch.functional.binary_cross_entropy", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.forward", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.networks.Dis.cuda"], ["", "def", "backward_G_GAN", "(", "self", ",", "fake", ",", "netD", "=", "None", ")", ":", "\n", "    ", "outs_fake", "=", "netD", ".", "forward", "(", "fake", ")", "\n", "loss_G", "=", "0", "\n", "for", "out_a", "in", "outs_fake", ":", "\n", "      ", "outputs_fake", "=", "nn", ".", "functional", ".", "sigmoid", "(", "out_a", ")", "\n", "all_ones", "=", "torch", ".", "ones_like", "(", "outputs_fake", ")", ".", "cuda", "(", "self", ".", "gpu", ")", "\n", "loss_G", "+=", "nn", ".", "functional", ".", "binary_cross_entropy", "(", "outputs_fake", ",", "all_ones", ")", "\n", "", "return", "loss_G", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_alone": [[374, 412], ["model.DRIT.backward_G_GAN", "model.DRIT.backward_G_GAN", "loss_z_L1.backward", "loss_z_L1_a.item", "loss_z_L1_b.item", "model.DRIT.backward_G_GAN", "model.DRIT.backward_G_GAN", "loss_lz_AB.item", "loss_lz_BA.item", "model.DRIT.item", "model.DRIT.item", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model.DRIT.item", "model.DRIT.item", "model.DRIT.item", "model.DRIT.item", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_GAN", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_GAN", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_GAN", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.backward_G_GAN"], ["", "def", "backward_G_alone", "(", "self", ")", ":", "\n", "# Ladv for generator", "\n", "    ", "loss_G_GAN2_A", "=", "self", ".", "backward_G_GAN", "(", "self", ".", "fake_A_random", ",", "self", ".", "disA2", ")", "\n", "loss_G_GAN2_B", "=", "self", ".", "backward_G_GAN", "(", "self", ".", "fake_B_random", ",", "self", ".", "disB2", ")", "\n", "if", "not", "self", ".", "no_ms", ":", "\n", "      ", "loss_G_GAN2_A2", "=", "self", ".", "backward_G_GAN", "(", "self", ".", "fake_A_random2", ",", "self", ".", "disA2", ")", "\n", "loss_G_GAN2_B2", "=", "self", ".", "backward_G_GAN", "(", "self", ".", "fake_B_random2", ",", "self", ".", "disB2", ")", "\n", "\n", "# mode seeking loss for A-->B and B-->A", "\n", "", "if", "not", "self", ".", "no_ms", ":", "\n", "      ", "lz_AB", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "fake_B_random2", "-", "self", ".", "fake_B_random", ")", ")", "/", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "z_random2", "-", "self", ".", "z_random", ")", ")", "\n", "lz_BA", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "fake_A_random2", "-", "self", ".", "fake_A_random", ")", ")", "/", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "z_random2", "-", "self", ".", "z_random", ")", ")", "\n", "eps", "=", "1", "*", "1e-5", "\n", "loss_lz_AB", "=", "1", "/", "(", "lz_AB", "+", "eps", ")", "\n", "loss_lz_BA", "=", "1", "/", "(", "lz_BA", "+", "eps", ")", "\n", "# latent regression loss", "\n", "", "if", "self", ".", "concat", ":", "\n", "      ", "loss_z_L1_a", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "mu2_a", "-", "self", ".", "z_random", ")", ")", "*", "10", "\n", "loss_z_L1_b", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "mu2_b", "-", "self", ".", "z_random", ")", ")", "*", "10", "\n", "", "else", ":", "\n", "      ", "loss_z_L1_a", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "z_attr_random_a", "-", "self", ".", "z_random", ")", ")", "*", "10", "\n", "loss_z_L1_b", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "z_attr_random_b", "-", "self", ".", "z_random", ")", ")", "*", "10", "\n", "\n", "", "loss_z_L1", "=", "loss_z_L1_a", "+", "loss_z_L1_b", "+", "loss_G_GAN2_A", "+", "loss_G_GAN2_B", "\n", "if", "not", "self", ".", "no_ms", ":", "\n", "      ", "loss_z_L1", "+=", "(", "loss_G_GAN2_A2", "+", "loss_G_GAN2_B2", ")", "\n", "loss_z_L1", "+=", "(", "loss_lz_AB", "+", "loss_lz_BA", ")", "\n", "", "loss_z_L1", ".", "backward", "(", ")", "\n", "self", ".", "l1_recon_z_loss_a", "=", "loss_z_L1_a", ".", "item", "(", ")", "\n", "self", ".", "l1_recon_z_loss_b", "=", "loss_z_L1_b", ".", "item", "(", ")", "\n", "if", "not", "self", ".", "no_ms", ":", "\n", "      ", "self", ".", "gan2_loss_a", "=", "loss_G_GAN2_A", ".", "item", "(", ")", "+", "loss_G_GAN2_A2", ".", "item", "(", ")", "\n", "self", ".", "gan2_loss_b", "=", "loss_G_GAN2_B", ".", "item", "(", ")", "+", "loss_G_GAN2_B2", ".", "item", "(", ")", "\n", "self", ".", "lz_AB", "=", "loss_lz_AB", ".", "item", "(", ")", "\n", "self", ".", "lz_BA", "=", "loss_lz_BA", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "gan2_loss_a", "=", "loss_G_GAN2_A", ".", "item", "(", ")", "\n", "self", ".", "gan2_loss_b", "=", "loss_G_GAN2_B", ".", "item", "(", ")", "\n", "", "", "def", "update_lr", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.update_lr": [[412, 421], ["model.DRIT.disA_sch.step", "model.DRIT.disB_sch.step", "model.DRIT.disA2_sch.step", "model.DRIT.disB2_sch.step", "model.DRIT.disContent_sch.step", "model.DRIT.enc_c_sch.step", "model.DRIT.enc_a_sch.step", "model.DRIT.gen_sch.step"], "methods", ["None"], ["", "", "def", "update_lr", "(", "self", ")", ":", "\n", "    ", "self", ".", "disA_sch", ".", "step", "(", ")", "\n", "self", ".", "disB_sch", ".", "step", "(", ")", "\n", "self", ".", "disA2_sch", ".", "step", "(", ")", "\n", "self", ".", "disB2_sch", ".", "step", "(", ")", "\n", "self", ".", "disContent_sch", ".", "step", "(", ")", "\n", "self", ".", "enc_c_sch", ".", "step", "(", ")", "\n", "self", ".", "enc_a_sch", ".", "step", "(", ")", "\n", "self", ".", "gen_sch", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT._l2_regularize": [[422, 426], ["torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "_l2_regularize", "(", "self", ",", "mu", ")", ":", "\n", "    ", "mu_2", "=", "torch", ".", "pow", "(", "mu", ",", "2", ")", "\n", "encoding_loss", "=", "torch", ".", "mean", "(", "mu_2", ")", "\n", "return", "encoding_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.resume": [[427, 450], ["torch.load", "torch.load", "torch.load", "torch.load", "model.DRIT.enc_c.load_state_dict", "model.DRIT.enc_a.load_state_dict", "model.DRIT.gen.load_state_dict", "model.DRIT.disA.load_state_dict", "model.DRIT.disA2.load_state_dict", "model.DRIT.disB.load_state_dict", "model.DRIT.disB2.load_state_dict", "model.DRIT.disContent.load_state_dict", "model.DRIT.disA_opt.load_state_dict", "model.DRIT.disA2_opt.load_state_dict", "model.DRIT.disB_opt.load_state_dict", "model.DRIT.disB2_opt.load_state_dict", "model.DRIT.disContent_opt.load_state_dict", "model.DRIT.enc_c_opt.load_state_dict", "model.DRIT.enc_a_opt.load_state_dict", "model.DRIT.gen_opt.load_state_dict"], "methods", ["None"], ["", "def", "resume", "(", "self", ",", "model_dir", ",", "train", "=", "True", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "model_dir", ")", "\n", "# weight", "\n", "if", "train", ":", "\n", "      ", "self", ".", "disA", ".", "load_state_dict", "(", "checkpoint", "[", "'disA'", "]", ")", "\n", "self", ".", "disA2", ".", "load_state_dict", "(", "checkpoint", "[", "'disA2'", "]", ")", "\n", "self", ".", "disB", ".", "load_state_dict", "(", "checkpoint", "[", "'disB'", "]", ")", "\n", "self", ".", "disB2", ".", "load_state_dict", "(", "checkpoint", "[", "'disB2'", "]", ")", "\n", "self", ".", "disContent", ".", "load_state_dict", "(", "checkpoint", "[", "'disContent'", "]", ")", "\n", "", "self", ".", "enc_c", ".", "load_state_dict", "(", "checkpoint", "[", "'enc_c'", "]", ")", "\n", "self", ".", "enc_a", ".", "load_state_dict", "(", "checkpoint", "[", "'enc_a'", "]", ")", "\n", "self", ".", "gen", ".", "load_state_dict", "(", "checkpoint", "[", "'gen'", "]", ")", "\n", "# optimizer", "\n", "if", "train", ":", "\n", "      ", "self", ".", "disA_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'disA_opt'", "]", ")", "\n", "self", ".", "disA2_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'disA2_opt'", "]", ")", "\n", "self", ".", "disB_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'disB_opt'", "]", ")", "\n", "self", ".", "disB2_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'disB2_opt'", "]", ")", "\n", "self", ".", "disContent_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'disContent_opt'", "]", ")", "\n", "self", ".", "enc_c_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'enc_c_opt'", "]", ")", "\n", "self", ".", "enc_a_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'enc_a_opt'", "]", ")", "\n", "self", ".", "gen_opt", ".", "load_state_dict", "(", "checkpoint", "[", "'gen_opt'", "]", ")", "\n", "", "return", "checkpoint", "[", "'ep'", "]", ",", "checkpoint", "[", "'total_it'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.save": [[451, 474], ["torch.save", "torch.save", "torch.save", "torch.save", "model.DRIT.disA.state_dict", "model.DRIT.disA2.state_dict", "model.DRIT.disB.state_dict", "model.DRIT.disB2.state_dict", "model.DRIT.disContent.state_dict", "model.DRIT.enc_c.state_dict", "model.DRIT.enc_a.state_dict", "model.DRIT.gen.state_dict", "model.DRIT.disA_opt.state_dict", "model.DRIT.disA2_opt.state_dict", "model.DRIT.disB_opt.state_dict", "model.DRIT.disB2_opt.state_dict", "model.DRIT.disContent_opt.state_dict", "model.DRIT.enc_c_opt.state_dict", "model.DRIT.enc_a_opt.state_dict", "model.DRIT.gen_opt.state_dict"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.save", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.save", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.save", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.save"], ["", "def", "save", "(", "self", ",", "filename", ",", "ep", ",", "total_it", ")", ":", "\n", "    ", "state", "=", "{", "\n", "'disA'", ":", "self", ".", "disA", ".", "state_dict", "(", ")", ",", "\n", "'disA2'", ":", "self", ".", "disA2", ".", "state_dict", "(", ")", ",", "\n", "'disB'", ":", "self", ".", "disB", ".", "state_dict", "(", ")", ",", "\n", "'disB2'", ":", "self", ".", "disB2", ".", "state_dict", "(", ")", ",", "\n", "'disContent'", ":", "self", ".", "disContent", ".", "state_dict", "(", ")", ",", "\n", "'enc_c'", ":", "self", ".", "enc_c", ".", "state_dict", "(", ")", ",", "\n", "'enc_a'", ":", "self", ".", "enc_a", ".", "state_dict", "(", ")", ",", "\n", "'gen'", ":", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "\n", "'disA_opt'", ":", "self", ".", "disA_opt", ".", "state_dict", "(", ")", ",", "\n", "'disA2_opt'", ":", "self", ".", "disA2_opt", ".", "state_dict", "(", ")", ",", "\n", "'disB_opt'", ":", "self", ".", "disB_opt", ".", "state_dict", "(", ")", ",", "\n", "'disB2_opt'", ":", "self", ".", "disB2_opt", ".", "state_dict", "(", ")", ",", "\n", "'disContent_opt'", ":", "self", ".", "disContent_opt", ".", "state_dict", "(", ")", ",", "\n", "'enc_c_opt'", ":", "self", ".", "enc_c_opt", ".", "state_dict", "(", ")", ",", "\n", "'enc_a_opt'", ":", "self", ".", "enc_a_opt", ".", "state_dict", "(", ")", ",", "\n", "'gen_opt'", ":", "self", ".", "gen_opt", ".", "state_dict", "(", ")", ",", "\n", "'ep'", ":", "ep", ",", "\n", "'total_it'", ":", "total_it", "\n", "}", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.assemble_outputs": [[475, 489], ["model.DRIT.normalize_image().detach", "model.DRIT.normalize_image().detach", "model.DRIT.normalize_image().detach", "model.DRIT.normalize_image().detach", "model.DRIT.normalize_image().detach", "model.DRIT.normalize_image().detach", "model.DRIT.normalize_image().detach", "model.DRIT.normalize_image().detach", "model.DRIT.normalize_image().detach", "model.DRIT.normalize_image().detach", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.DRIT.normalize_image", "model.DRIT.normalize_image", "model.DRIT.normalize_image", "model.DRIT.normalize_image", "model.DRIT.normalize_image", "model.DRIT.normalize_image", "model.DRIT.normalize_image", "model.DRIT.normalize_image", "model.DRIT.normalize_image", "model.DRIT.normalize_image"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image"], ["", "def", "assemble_outputs", "(", "self", ")", ":", "\n", "    ", "images_a", "=", "self", ".", "normalize_image", "(", "self", ".", "real_A_encoded", ")", ".", "detach", "(", ")", "\n", "images_b", "=", "self", ".", "normalize_image", "(", "self", ".", "real_B_encoded", ")", ".", "detach", "(", ")", "\n", "images_a1", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_A_encoded", ")", ".", "detach", "(", ")", "\n", "images_a2", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_A_random", ")", ".", "detach", "(", ")", "\n", "images_a3", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_A_recon", ")", ".", "detach", "(", ")", "\n", "images_a4", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_AA_encoded", ")", ".", "detach", "(", ")", "\n", "images_b1", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_B_encoded", ")", ".", "detach", "(", ")", "\n", "images_b2", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_B_random", ")", ".", "detach", "(", ")", "\n", "images_b3", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_B_recon", ")", ".", "detach", "(", ")", "\n", "images_b4", "=", "self", ".", "normalize_image", "(", "self", ".", "fake_BB_encoded", ")", ".", "detach", "(", ")", "\n", "row1", "=", "torch", ".", "cat", "(", "(", "images_a", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_b1", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_b2", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_a4", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_a3", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "row2", "=", "torch", ".", "cat", "(", "(", "images_b", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_a1", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_a2", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_b4", "[", "0", ":", "1", ",", ":", ":", "]", ",", "images_b3", "[", "0", ":", "1", ",", ":", ":", "]", ")", ",", "3", ")", "\n", "return", "torch", ".", "cat", "(", "(", "row1", ",", "row2", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.normalize_image": [[490, 492], ["None"], "methods", ["None"], ["", "def", "normalize_image", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.__init__": [[25, 43], ["os.path.join", "os.path.join", "os.path.join", "tensorboardX.SummaryWriter", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "opts", ")", ":", "\n", "    ", "self", ".", "display_dir", "=", "os", ".", "path", ".", "join", "(", "opts", ".", "display_dir", ",", "opts", ".", "name", ")", "\n", "self", ".", "model_dir", "=", "os", ".", "path", ".", "join", "(", "opts", ".", "result_dir", ",", "opts", ".", "name", ")", "\n", "self", ".", "image_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "model_dir", ",", "'images'", ")", "\n", "self", ".", "display_freq", "=", "opts", ".", "display_freq", "\n", "self", ".", "img_save_freq", "=", "opts", ".", "img_save_freq", "\n", "self", ".", "model_save_freq", "=", "opts", ".", "model_save_freq", "\n", "\n", "# make directory", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "display_dir", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "self", ".", "display_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "model_dir", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "self", ".", "model_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "image_dir", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "self", ".", "image_dir", ")", "\n", "\n", "# create tensorboard writer", "\n", "", "self", ".", "writer", "=", "SummaryWriter", "(", "logdir", "=", "self", ".", "display_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.write_display": [[45, 54], ["saver.Saver.writer.add_image", "saver.Saver.writer.add_scalar", "dir", "getattr", "torchvision.utils.make_grid", "callable", "attr.startswith", "getattr", "model.image_display.size"], "methods", ["None"], ["", "def", "write_display", "(", "self", ",", "total_it", ",", "model", ")", ":", "\n", "    ", "if", "(", "total_it", "+", "1", ")", "%", "self", ".", "display_freq", "==", "0", ":", "\n", "# write loss", "\n", "      ", "members", "=", "[", "attr", "for", "attr", "in", "dir", "(", "model", ")", "if", "not", "callable", "(", "getattr", "(", "model", ",", "attr", ")", ")", "and", "not", "attr", ".", "startswith", "(", "\"__\"", ")", "and", "'loss'", "in", "attr", "]", "\n", "for", "m", "in", "members", ":", "\n", "        ", "self", ".", "writer", ".", "add_scalar", "(", "m", ",", "getattr", "(", "model", ",", "m", ")", ",", "total_it", ")", "\n", "# write img", "\n", "", "image_dis", "=", "torchvision", ".", "utils", ".", "make_grid", "(", "model", ".", "image_display", ",", "nrow", "=", "model", ".", "image_display", ".", "size", "(", "0", ")", "//", "2", ")", "/", "2", "+", "0.5", "\n", "self", ".", "writer", ".", "add_image", "(", "'Image'", ",", "image_dis", ",", "total_it", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.write_img": [[56, 65], ["model.assemble_outputs", "torchvision.utils.save_image", "model.assemble_outputs", "torchvision.utils.save_image"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.assemble_outputs", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.assemble_outputs"], ["", "", "def", "write_img", "(", "self", ",", "ep", ",", "model", ")", ":", "\n", "    ", "if", "(", "ep", "+", "1", ")", "%", "self", ".", "img_save_freq", "==", "0", ":", "\n", "      ", "assembled_images", "=", "model", ".", "assemble_outputs", "(", ")", "\n", "img_filename", "=", "'%s/gen_%05d.jpg'", "%", "(", "self", ".", "image_dir", ",", "ep", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "assembled_images", "/", "2", "+", "0.5", ",", "img_filename", ",", "nrow", "=", "1", ")", "\n", "", "elif", "ep", "==", "-", "1", ":", "\n", "      ", "assembled_images", "=", "model", ".", "assemble_outputs", "(", ")", "\n", "img_filename", "=", "'%s/gen_last.jpg'", "%", "(", "self", ".", "image_dir", ",", "ep", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "assembled_images", "/", "2", "+", "0.5", ",", "img_filename", ",", "nrow", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.Saver.write_model": [[67, 73], ["print", "model.save", "model.save"], "methods", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.save", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.save"], ["", "", "def", "write_model", "(", "self", ",", "ep", ",", "total_it", ",", "model", ")", ":", "\n", "    ", "if", "(", "ep", "+", "1", ")", "%", "self", ".", "model_save_freq", "==", "0", ":", "\n", "      ", "print", "(", "'--- save the model @ ep %d ---'", "%", "(", "ep", ")", ")", "\n", "model", ".", "save", "(", "'%s/%05d.pth'", "%", "(", "self", ".", "model_dir", ",", "ep", ")", ",", "ep", ",", "total_it", ")", "\n", "", "elif", "ep", "==", "-", "1", ":", "\n", "      ", "model", ".", "save", "(", "'%s/last.pth'", "%", "self", ".", "model_dir", ",", "ep", ",", "total_it", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.tensor2img": [[8, 14], ["img[].cpu().float().numpy", "np.tile.astype", "numpy.tile", "img[].cpu().float", "numpy.transpose", "img[].cpu"], "function", ["None"], ["def", "tensor2img", "(", "img", ")", ":", "\n", "  ", "img", "=", "img", "[", "0", "]", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", "\n", "if", "img", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "    ", "img", "=", "np", ".", "tile", "(", "img", ",", "(", "3", ",", "1", ",", "1", ")", ")", "\n", "", "img", "=", "(", "np", ".", "transpose", "(", "img", ",", "(", "1", ",", "2", ",", "0", ")", ")", "+", "1", ")", "/", "2.0", "*", "255.0", "\n", "return", "img", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.save_imgs": [[16, 23], ["zip", "os.path.exists", "os.mkdir", "saver.tensor2img", "PIL.Image.fromarray", "Image.fromarray.save", "os.path.join"], "function", ["home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.saver.tensor2img", "home.repos.pwc.inspect_result.HsinYingLee_DRIT.src.model.DRIT.save"], ["", "def", "save_imgs", "(", "imgs", ",", "names", ",", "path", ")", ":", "\n", "  ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "    ", "os", ".", "mkdir", "(", "path", ")", "\n", "", "for", "img", ",", "name", "in", "zip", "(", "imgs", ",", "names", ")", ":", "\n", "    ", "img", "=", "tensor2img", "(", "img", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "path", ",", "name", "+", "'.png'", ")", ")", "\n", "\n"]]}