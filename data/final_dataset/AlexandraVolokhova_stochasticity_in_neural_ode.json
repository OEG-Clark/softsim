{"home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.norm.__init__": [[9, 12], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "norm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.norm.forward": [[13, 15], ["models.norm.layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "layer", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.DownSamplingBlock.__init__": [[18, 22], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.norm"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ")", ":", "\n", "        ", "super", "(", "DownSamplingBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm", "(", "in_planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.DownSamplingBlock.forward": [[23, 25], ["models.DownSamplingBlock.conv1", "torch.relu", "torch.relu", "torch.relu", "models.DownSamplingBlock.bn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ConcatConv2d.__init__": [[28, 32], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "ksize", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ConcatConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_layer", "=", "nn", ".", "Conv2d", "(", "\n", "dim_in", "+", "1", ",", "dim_out", ",", "kernel_size", "=", "ksize", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ConcatConv2d.forward": [[34, 38], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.ConcatConv2d._layer", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "t", ",", "x", ")", ":", "\n", "        ", "tt", "=", "torch", ".", "ones_like", "(", "x", "[", ":", ",", ":", "1", ",", ":", ",", ":", "]", ")", "*", "t", "\n", "ttx", "=", "torch", ".", "cat", "(", "[", "tt", ",", "x", "]", ",", "1", ")", "\n", "return", "self", ".", "_layer", "(", "ttx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODEfunc.__init__": [[41, 52], ["torch.Module.__init__", "models.ConcatConv2d", "models.ConcatConv2d", "models.norm", "models.norm"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["    ", "def", "__init__", "(", "self", ",", "planes", ",", "args", ",", "ksize", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ODEfunc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "ConcatConv2d", "(", "planes", ",", "planes", ",", "\n", "ksize", "=", "ksize", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv2", "=", "ConcatConv2d", "(", "planes", ",", "planes", ",", "\n", "ksize", "=", "ksize", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "self", ".", "nfe", "=", "0", "\n", "self", ".", "norm", "=", "args", ".", "norm", "\n", "if", "self", ".", "norm", ":", "\n", "            ", "self", ".", "bn1", "=", "norm", "(", "planes", ")", "\n", "self", ".", "bn2", "=", "norm", "(", "planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODEfunc.forward": [[54, 67], ["models.ODEfunc.conv1", "torch.relu", "torch.relu", "torch.relu", "models.ODEfunc.conv2", "models.ODEfunc.bn1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "models.ODEfunc.bn2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "t", ",", "x", ")", ":", "\n", "        ", "self", ".", "nfe", "+=", "1", "\n", "if", "self", ".", "norm", ":", "\n", "            ", "out", "=", "self", ".", "bn1", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ",", "inplace", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "F", ".", "relu", "(", "x", ",", "inplace", "=", "False", ")", "\n", "", "out", "=", "self", ".", "conv1", "(", "t", ",", "out", ")", "\n", "if", "self", ".", "norm", ":", "\n", "            ", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "", "out", "=", "F", ".", "relu", "(", "out", ",", "inplace", "=", "True", ")", "\n", "out", "=", "self", ".", "conv2", "(", "t", ",", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResBlock.__init__": [[70, 80], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.norm", "models.norm"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["    ", "def", "__init__", "(", "self", ",", "planes", ",", "args", ",", "ksize", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "\n", "kernel_size", "=", "ksize", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "\n", "kernel_size", "=", "ksize", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "self", ".", "norm", "=", "args", ".", "norm", "\n", "if", "self", ".", "norm", ":", "\n", "            ", "self", ".", "bn1", "=", "norm", "(", "planes", ")", "\n", "self", ".", "bn2", "=", "norm", "(", "planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResBlock.forward": [[82, 95], ["models.ResBlock.conv1", "torch.relu", "torch.relu", "torch.relu", "models.ResBlock.conv2", "models.ResBlock.bn1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "models.ResBlock.bn2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "x", "\n", "if", "self", ".", "norm", ":", "\n", "            ", "out", "=", "self", ".", "bn1", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ",", "inplace", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "F", ".", "relu", "(", "x", ",", "inplace", "=", "False", ")", "\n", "", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "if", "self", ".", "norm", ":", "\n", "            ", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "", "out", "=", "F", ".", "relu", "(", "out", ",", "inplace", "=", "True", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "return", "out", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODEBlock.__init__": [[98, 123], ["torch.Module.__init__", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "dict", "models.ODEBlock.solver_options.update", "Exception", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "Exception"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.update"], ["    ", "def", "__init__", "(", "self", ",", "odefunc", ",", "time_interval", ",", "args", ")", ":", "\n", "        ", "super", "(", "ODEBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "solver_options", "=", "None", "\n", "self", ".", "odefunc", "=", "odefunc", "\n", "self", ".", "solver_method", "=", "args", ".", "solver_method", "\n", "self", ".", "n_steps", "=", "args", ".", "n_steps", "\n", "if", "solver_options", "is", "None", ":", "\n", "            ", "solver_options", "=", "dict", "(", ")", "\n", "", "self", ".", "solver_options", "=", "solver_options", "\n", "self", ".", "time_interval", "=", "torch", ".", "tensor", "(", "time_interval", ")", ".", "float", "(", ")", "\n", "self", ".", "tol", "=", "args", ".", "tol", "\n", "self", ".", "stoch_type", "=", "args", ".", "stoch_type", "\n", "self", ".", "stoch_coeff", "=", "args", ".", "stoch_coeff", "\n", "if", "self", ".", "n_steps", ":", "\n", "            ", "if", "self", ".", "solver_method", "not", "in", "[", "'rk4'", ",", "'explicit_adams'", ",", "'fixed_adams'", ",", "'midpoint'", ",", "'euler'", "]", ":", "\n", "                ", "raise", "Exception", "(", "\"argument n_steps is useless if you use {}\"", ".", "format", "(", "self", ".", "solver_method", ")", ")", "\n", "", "step_size", "=", "(", "time_interval", "[", "1", "]", "-", "time_interval", "[", "0", "]", ")", "/", "self", ".", "n_steps", "\n", "self", ".", "solver_options", ".", "update", "(", "{", "'step_size'", ":", "step_size", "}", ")", "\n", "", "if", "self", ".", "stoch_type", "==", "'sde'", "and", "self", ".", "n_steps", "is", "None", ":", "\n", "            ", "raise", "Exception", "(", "'Stoch type is sde and n_steps is None, provide n_steps or change stoch_type'", ")", "\n", "\n", "", "if", "args", ".", "adjoint", ":", "\n", "            ", "self", ".", "odeint", "=", "odeint_adjoint", "\n", "", "else", ":", "\n", "            ", "self", ".", "odeint", "=", "odeint", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODEBlock.forward": [[124, 140], ["models.ODEBlock.time_interval.type_as", "models.ODEBlock.odeint", "models.ODEBlock.solver_options.update", "models.ODEBlock.odeint", "models.ODEBlock.solver_options.update", "models.ODEBlock.odeint"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.odeint.odeint", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.odeint.odeint", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.odeint.odeint"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "self", ".", "time_interval", "=", "self", ".", "time_interval", ".", "type_as", "(", "x", ")", "\n", "if", "self", ".", "stoch_type", "is", "None", ":", "\n", "            ", "out", "=", "self", ".", "odeint", "(", "self", ".", "odefunc", ",", "x", ",", "self", ".", "time_interval", ",", "rtol", "=", "self", ".", "tol", ",", "atol", "=", "self", ".", "tol", ",", "\n", "method", "=", "self", ".", "solver_method", ",", "options", "=", "self", ".", "solver_options", ")", "\n", "", "elif", "self", ".", "stoch_type", "==", "'sde'", ":", "\n", "            ", "self", ".", "solver_options", ".", "update", "(", "{", "'k'", ":", "self", ".", "stoch_coeff", "}", ")", "\n", "out", "=", "self", ".", "odeint", "(", "self", ".", "odefunc", ",", "x", ",", "self", ".", "time_interval", ",", "rtol", "=", "self", ".", "tol", ",", "atol", "=", "self", ".", "tol", ",", "\n", "method", "=", "'stoch_rk4'", ",", "options", "=", "self", ".", "solver_options", ")", "\n", "", "elif", "self", ".", "stoch_type", "==", "'after_step'", ":", "\n", "            ", "self", ".", "solver_options", ".", "update", "(", "{", "'k'", ":", "self", ".", "stoch_coeff", "}", ")", "\n", "out", "=", "self", ".", "odeint", "(", "self", ".", "odefunc", ",", "x", ",", "self", ".", "time_interval", ",", "rtol", "=", "self", ".", "tol", ",", "atol", "=", "self", ".", "tol", ",", "\n", "method", "=", "'rk4_noise_after_step'", ",", "options", "=", "self", ".", "solver_options", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "return", "out", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODEBlock.set_n_steps": [[141, 148], ["models.ODEBlock.time_interval.numpy", "models.ODEBlock.solver_options.update", "dict"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.update"], ["", "def", "set_n_steps", "(", "self", ",", "n_steps", ")", ":", "\n", "        ", "self", ".", "n_steps", "=", "n_steps", "\n", "time_interval", "=", "self", ".", "time_interval", ".", "numpy", "(", ")", "\n", "step_size", "=", "(", "time_interval", "[", "1", "]", "-", "time_interval", "[", "0", "]", ")", "/", "n_steps", "\n", "if", "not", "self", ".", "solver_options", ":", "\n", "            ", "self", ".", "solver_options", "=", "dict", "(", ")", "\n", "", "self", ".", "solver_options", ".", "update", "(", "{", "'step_size'", ":", "step_size", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODEBlock.set_solver_method": [[149, 151], ["None"], "methods", ["None"], ["", "def", "set_solver_method", "(", "self", ",", "method", ")", ":", "\n", "        ", "self", ".", "solver_method", "=", "method", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODEBlock.nfe": [[156, 159], ["None"], "methods", ["None"], ["", "@", "nfe", ".", "setter", "\n", "def", "nfe", "(", "self", ",", "value", ")", ":", "\n", "        ", "self", ".", "odefunc", ".", "nfe", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.Flatten.__init__": [[162, 164], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.Flatten.forward": [[165, 168], ["torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.prod().item", "x.view", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shape", "=", "torch", ".", "prod", "(", "torch", ".", "tensor", "(", "x", ".", "shape", "[", "1", ":", "]", ")", ")", ".", "item", "(", ")", "\n", "return", "x", ".", "view", "(", "-", "1", ",", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar100.__init__": [[171, 185], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.norm", "models.ODENet_cifar100._make_ode_blocks", "models.DownSamplingBlock", "models.ODENet_cifar100._make_ode_blocks", "models.DownSamplingBlock", "models.ODENet_cifar100._make_ode_blocks", "models.DownSamplingBlock", "models.ODENet_cifar100._make_ode_blocks", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "models.Flatten", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "num_classes", "=", "100", ")", ":", "\n", "        ", "super", "(", "ODENet_cifar100", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm", "(", "64", ")", "\n", "self", ".", "ode1", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "64", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "down1", "=", "DownSamplingBlock", "(", "64", ",", "128", ")", "\n", "self", ".", "ode2", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "128", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "down2", "=", "DownSamplingBlock", "(", "128", ",", "256", ")", "\n", "self", ".", "ode3", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "256", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "down3", "=", "DownSamplingBlock", "(", "256", ",", "512", ")", "\n", "self", ".", "ode4", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "512", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "avg", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar100.forward": [[186, 195], ["torch.relu", "torch.relu", "torch.relu", "models.ODENet_cifar100.down1", "models.ODENet_cifar100.down2", "models.ODENet_cifar100.down3", "models.ODENet_cifar100.avg", "models.ODENet_cifar100.fc", "models.ODENet_cifar100.bn1", "models.ODENet_cifar100.ode1", "models.ODENet_cifar100.ode2", "models.ODENet_cifar100.ode3", "models.ODENet_cifar100.ode4", "models.ODENet_cifar100.flatten", "models.ODENet_cifar100.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ",", "inplace", "=", "True", ")", "\n", "# out = self.conv1(x)", "\n", "out", "=", "self", ".", "down1", "(", "self", ".", "ode1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "down2", "(", "self", ".", "ode2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "down3", "(", "self", ".", "ode3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "avg", "(", "self", ".", "ode4", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc", "(", "self", ".", "flatten", "(", "out", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar100._make_ode_blocks": [[196, 202], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "blocks.append", "models.ODEBlock", "models.ODEfunc"], "methods", ["None"], ["", "def", "_make_ode_blocks", "(", "self", ",", "args", ",", "planes", ",", "n_blocks", "=", "2", ")", ":", "\n", "        ", "blocks", "=", "[", "]", "\n", "for", "time_interval", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "blocks", ".", "append", "(", "ODEBlock", "(", "\n", "ODEfunc", "(", "planes", "=", "planes", ",", "args", "=", "args", ")", ",", "[", "time_interval", ",", "time_interval", "+", "1", "]", ",", "args", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar100.get_nfe": [[203, 209], ["numpy.mean", "nfe.append"], "methods", ["None"], ["", "def", "get_nfe", "(", "self", ")", ":", "\n", "        ", "nfe", "=", "[", "]", "\n", "for", "seq", "in", "[", "self", ".", "ode1", ",", "self", ".", "ode2", ",", "self", ".", "ode3", "]", ":", "\n", "            ", "for", "block", "in", "seq", ":", "\n", "                ", "nfe", ".", "append", "(", "block", ".", "nfe", ")", "\n", "", "", "return", "np", ".", "mean", "(", "nfe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar100.set_nfe": [[210, 214], ["None"], "methods", ["None"], ["", "def", "set_nfe", "(", "self", ",", "value", ")", ":", "\n", "        ", "for", "seq", "in", "[", "self", ".", "ode1", ",", "self", ".", "ode2", ",", "self", ".", "ode3", "]", ":", "\n", "            ", "for", "block", "in", "seq", ":", "\n", "                ", "block", ".", "nfe", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar100.set_stoch_type": [[215, 219], ["None"], "methods", ["None"], ["", "", "", "def", "set_stoch_type", "(", "self", ",", "stoch_type", ")", ":", "\n", "        ", "for", "seq", "in", "[", "self", ".", "ode1", ",", "self", ".", "ode2", ",", "self", ".", "ode3", ",", "self", ".", "ode4", "]", ":", "\n", "            ", "for", "block", "in", "seq", ":", "\n", "                ", "block", ".", "stoch_type", "=", "stoch_type", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_cifar100.__init__": [[222, 236], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.norm", "models.ResNet_cifar100._make_res_blocks", "models.DownSamplingBlock", "models.ResNet_cifar100._make_res_blocks", "models.DownSamplingBlock", "models.ResNet_cifar100._make_res_blocks", "models.DownSamplingBlock", "models.ResNet_cifar100._make_res_blocks", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "models.Flatten", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "num_classes", "=", "100", ")", ":", "\n", "        ", "super", "(", "ResNet_cifar100", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm", "(", "64", ")", "\n", "self", ".", "res1", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "64", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "down1", "=", "DownSamplingBlock", "(", "64", ",", "128", ")", "\n", "self", ".", "res2", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "128", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "down2", "=", "DownSamplingBlock", "(", "128", ",", "256", ")", "\n", "self", ".", "res3", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "256", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "down3", "=", "DownSamplingBlock", "(", "256", ",", "512", ")", "\n", "self", ".", "res4", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "512", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "avg", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_cifar100.forward": [[238, 246], ["torch.relu", "torch.relu", "torch.relu", "models.ResNet_cifar100.down1", "models.ResNet_cifar100.down2", "models.ResNet_cifar100.down3", "models.ResNet_cifar100.avg", "models.ResNet_cifar100.fc", "models.ResNet_cifar100.bn1", "models.ResNet_cifar100.res1", "models.ResNet_cifar100.res2", "models.ResNet_cifar100.res3", "models.ResNet_cifar100.res4", "models.ResNet_cifar100.flatten", "models.ResNet_cifar100.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out", "=", "self", ".", "down1", "(", "self", ".", "res1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "down2", "(", "self", ".", "res2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "down3", "(", "self", ".", "res3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "avg", "(", "self", ".", "res4", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc", "(", "self", ".", "flatten", "(", "out", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_cifar100._make_res_blocks": [[247, 252], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "blocks.append", "models.ResBlock"], "methods", ["None"], ["", "def", "_make_res_blocks", "(", "self", ",", "args", ",", "planes", ",", "n_blocks", "=", "2", ")", ":", "\n", "        ", "blocks", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "blocks", ".", "append", "(", "ResBlock", "(", "planes", "=", "planes", ",", "args", "=", "args", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_cifar10.__init__": [[255, 267], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.norm", "models.ResNet_cifar10._make_res_blocks", "models.DownSamplingBlock", "models.ResNet_cifar10._make_res_blocks", "models.DownSamplingBlock", "models.ResNet_cifar10._make_res_blocks", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "models.Flatten", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet_cifar10", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm", "(", "16", ")", "\n", "self", ".", "res1", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "16", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "down1", "=", "DownSamplingBlock", "(", "16", ",", "32", ")", "\n", "self", ".", "res2", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "32", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "down2", "=", "DownSamplingBlock", "(", "32", ",", "64", ")", "\n", "self", ".", "res3", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "64", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "avg", "=", "nn", ".", "AvgPool2d", "(", "8", ")", "\n", "self", ".", "flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "64", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_cifar10.forward": [[268, 275], ["torch.relu", "torch.relu", "torch.relu", "models.ResNet_cifar10.down1", "models.ResNet_cifar10.down2", "models.ResNet_cifar10.avg", "models.ResNet_cifar10.fc", "models.ResNet_cifar10.bn1", "models.ResNet_cifar10.res1", "models.ResNet_cifar10.res2", "models.ResNet_cifar10.res3", "models.ResNet_cifar10.flatten", "models.ResNet_cifar10.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out", "=", "self", ".", "down1", "(", "self", ".", "res1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "down2", "(", "self", ".", "res2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "avg", "(", "self", ".", "res3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc", "(", "self", ".", "flatten", "(", "out", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_cifar10._make_res_blocks": [[276, 281], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "blocks.append", "models.ResBlock"], "methods", ["None"], ["", "def", "_make_res_blocks", "(", "self", ",", "args", ",", "planes", ",", "n_blocks", "=", "2", ")", ":", "\n", "        ", "blocks", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "blocks", ".", "append", "(", "ResBlock", "(", "planes", "=", "planes", ",", "args", "=", "args", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar10.__init__": [[283, 295], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "models.ODENet_cifar10._make_ode_blocks", "models.DownSamplingBlock", "models.ODENet_cifar10._make_ode_blocks", "models.DownSamplingBlock", "models.ODENet_cifar10._make_ode_blocks", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "models.Flatten", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ODENet_cifar10", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "ode1", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "16", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "down1", "=", "DownSamplingBlock", "(", "16", ",", "32", ")", "\n", "self", ".", "ode2", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "32", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "down2", "=", "DownSamplingBlock", "(", "32", ",", "64", ")", "\n", "self", ".", "ode3", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "64", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "avg", "=", "nn", ".", "AvgPool2d", "(", "8", ")", "\n", "self", ".", "flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "64", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar10.forward": [[296, 303], ["torch.relu", "torch.relu", "torch.relu", "models.ODENet_cifar10.down1", "models.ODENet_cifar10.down2", "models.ODENet_cifar10.avg", "models.ODENet_cifar10.fc", "models.ODENet_cifar10.bn1", "models.ODENet_cifar10.ode1", "models.ODENet_cifar10.ode2", "models.ODENet_cifar10.ode3", "models.ODENet_cifar10.flatten", "models.ODENet_cifar10.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out", "=", "self", ".", "down1", "(", "self", ".", "ode1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "down2", "(", "self", ".", "ode2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "avg", "(", "self", ".", "ode3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc", "(", "self", ".", "flatten", "(", "out", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar10._make_ode_blocks": [[304, 310], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "blocks.append", "models.ODEBlock", "models.ODEfunc"], "methods", ["None"], ["", "def", "_make_ode_blocks", "(", "self", ",", "args", ",", "planes", ",", "n_blocks", "=", "2", ")", ":", "\n", "        ", "blocks", "=", "[", "]", "\n", "for", "time_interval", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "blocks", ".", "append", "(", "ODEBlock", "(", "\n", "ODEfunc", "(", "planes", "=", "planes", ",", "args", "=", "args", ")", ",", "[", "time_interval", ",", "time_interval", "+", "1", "]", ",", "args", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar10.get_nfe": [[311, 317], ["numpy.mean", "nfe.append"], "methods", ["None"], ["", "def", "get_nfe", "(", "self", ")", ":", "\n", "        ", "nfe", "=", "[", "]", "\n", "for", "seq", "in", "[", "self", ".", "ode1", ",", "self", ".", "ode2", ",", "self", ".", "ode3", "]", ":", "\n", "            ", "for", "block", "in", "seq", ":", "\n", "                ", "nfe", ".", "append", "(", "block", ".", "nfe", ")", "\n", "", "", "return", "np", ".", "mean", "(", "nfe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar10.set_nfe": [[318, 322], ["None"], "methods", ["None"], ["", "def", "set_nfe", "(", "self", ",", "value", ")", ":", "\n", "        ", "for", "seq", "in", "[", "self", ".", "ode1", ",", "self", ".", "ode2", ",", "self", ".", "ode3", "]", ":", "\n", "            ", "for", "block", "in", "seq", ":", "\n", "                ", "block", ".", "nfe", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_cifar10.set_stoch_type": [[323, 327], ["None"], "methods", ["None"], ["", "", "", "def", "set_stoch_type", "(", "self", ",", "stoch_type", ")", ":", "\n", "        ", "for", "seq", "in", "[", "self", ".", "ode1", ",", "self", ".", "ode2", ",", "self", ".", "ode3", "]", ":", "\n", "            ", "for", "block", "in", "seq", ":", "\n", "                ", "block", ".", "stoch_type", "=", "stoch_type", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet.__init__": [[329, 347], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.ResNet_tinyimagenet._make_res_blocks", "models.DownSamplingBlock", "models.ResNet_tinyimagenet._make_res_blocks", "models.DownSamplingBlock", "models.ResNet_tinyimagenet._make_res_blocks", "models.DownSamplingBlock", "models.ResNet_tinyimagenet._make_res_blocks", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "models.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "ResNet_tinyimagenet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pre", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "res1", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "64", ",", "n_blocks", "=", "3", ")", "\n", "self", ".", "down1", "=", "DownSamplingBlock", "(", "64", ",", "128", ")", "\n", "self", ".", "res2", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "128", ",", "n_blocks", "=", "3", ")", "\n", "self", ".", "down2", "=", "DownSamplingBlock", "(", "128", ",", "256", ")", "\n", "self", ".", "res3", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "256", ",", "n_blocks", "=", "5", ")", "\n", "self", ".", "down3", "=", "DownSamplingBlock", "(", "256", ",", "512", ")", "\n", "self", ".", "res4", "=", "self", ".", "_make_res_blocks", "(", "args", ",", "512", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "avg", "=", "nn", ".", "AvgPool2d", "(", "2", ")", "\n", "self", ".", "flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", ",", "200", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet.forward": [[348, 356], ["models.ResNet_tinyimagenet.pre", "models.ResNet_tinyimagenet.down1", "models.ResNet_tinyimagenet.down2", "models.ResNet_tinyimagenet.down3", "models.ResNet_tinyimagenet.avg", "models.ResNet_tinyimagenet.fc", "models.ResNet_tinyimagenet.res1", "models.ResNet_tinyimagenet.res2", "models.ResNet_tinyimagenet.res3", "models.ResNet_tinyimagenet.res4", "models.ResNet_tinyimagenet.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "pre", "(", "x", ")", "\n", "out", "=", "self", ".", "down1", "(", "self", ".", "res1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "down2", "(", "self", ".", "res2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "down3", "(", "self", ".", "res3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "avg", "(", "self", ".", "res4", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc", "(", "self", ".", "flatten", "(", "out", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ResNet_tinyimagenet._make_res_blocks": [[357, 362], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "blocks.append", "models.ResBlock"], "methods", ["None"], ["", "def", "_make_res_blocks", "(", "self", ",", "args", ",", "planes", ",", "n_blocks", "=", "2", ")", ":", "\n", "        ", "blocks", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "blocks", ".", "append", "(", "ResBlock", "(", "planes", "=", "planes", ",", "args", "=", "args", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet.__init__": [[364, 382], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.ODENet_tinyimagenet._make_ode_blocks", "models.DownSamplingBlock", "models.ODENet_tinyimagenet._make_ode_blocks", "models.DownSamplingBlock", "models.ODENet_tinyimagenet._make_ode_blocks", "models.DownSamplingBlock", "models.ODENet_tinyimagenet._make_ode_blocks", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "models.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "ODENet_tinyimagenet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pre", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "ode1", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "64", ",", "n_blocks", "=", "3", ")", "\n", "self", ".", "down1", "=", "DownSamplingBlock", "(", "64", ",", "128", ")", "\n", "self", ".", "ode2", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "128", ",", "n_blocks", "=", "3", ")", "\n", "self", ".", "down2", "=", "DownSamplingBlock", "(", "128", ",", "256", ")", "\n", "self", ".", "ode3", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "256", ",", "n_blocks", "=", "5", ")", "\n", "self", ".", "down3", "=", "DownSamplingBlock", "(", "256", ",", "512", ")", "\n", "self", ".", "ode4", "=", "self", ".", "_make_ode_blocks", "(", "args", ",", "512", ",", "n_blocks", "=", "2", ")", "\n", "self", ".", "avg", "=", "nn", ".", "AvgPool2d", "(", "2", ")", "\n", "self", ".", "flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", ",", "200", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet.forward": [[383, 391], ["models.ODENet_tinyimagenet.pre", "models.ODENet_tinyimagenet.down1", "models.ODENet_tinyimagenet.down2", "models.ODENet_tinyimagenet.down3", "models.ODENet_tinyimagenet.avg", "models.ODENet_tinyimagenet.fc", "models.ODENet_tinyimagenet.ode1", "models.ODENet_tinyimagenet.ode2", "models.ODENet_tinyimagenet.ode3", "models.ODENet_tinyimagenet.ode4", "models.ODENet_tinyimagenet.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "pre", "(", "x", ")", "\n", "out", "=", "self", ".", "down1", "(", "self", ".", "ode1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "down2", "(", "self", ".", "ode2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "down3", "(", "self", ".", "ode3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "avg", "(", "self", ".", "ode4", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc", "(", "self", ".", "flatten", "(", "out", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet._make_ode_blocks": [[392, 398], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "blocks.append", "models.ODEBlock", "models.ODEfunc"], "methods", ["None"], ["", "def", "_make_ode_blocks", "(", "self", ",", "args", ",", "planes", ",", "n_blocks", "=", "2", ")", ":", "\n", "        ", "blocks", "=", "[", "]", "\n", "for", "time_interval", "in", "range", "(", "n_blocks", ")", ":", "\n", "            ", "blocks", ".", "append", "(", "ODEBlock", "(", "\n", "ODEfunc", "(", "planes", "=", "planes", ",", "args", "=", "args", ")", ",", "[", "time_interval", ",", "time_interval", "+", "1", "]", ",", "args", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet.get_nfe": [[399, 405], ["numpy.mean", "nfe.append"], "methods", ["None"], ["", "def", "get_nfe", "(", "self", ")", ":", "\n", "        ", "nfe", "=", "[", "]", "\n", "for", "seq", "in", "[", "self", ".", "ode1", ",", "self", ".", "ode2", ",", "self", ".", "ode3", ",", "self", ".", "ode4", "]", ":", "\n", "            ", "for", "block", "in", "seq", ":", "\n", "                ", "nfe", ".", "append", "(", "block", ".", "nfe", ")", "\n", "", "", "return", "np", ".", "mean", "(", "nfe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet.set_nfe": [[406, 410], ["None"], "methods", ["None"], ["", "def", "set_nfe", "(", "self", ",", "value", ")", ":", "\n", "        ", "for", "seq", "in", "[", "self", ".", "ode1", ",", "self", ".", "ode2", ",", "self", ".", "ode3", ",", "self", ".", "ode4", "]", ":", "\n", "            ", "for", "block", "in", "seq", ":", "\n", "                ", "block", ".", "nfe", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet.set_stoch_type": [[411, 415], ["None"], "methods", ["None"], ["", "", "", "def", "set_stoch_type", "(", "self", ",", "stoch_type", ")", ":", "\n", "        ", "for", "seq", "in", "[", "self", ".", "ode1", ",", "self", ".", "ode2", ",", "self", ".", "ode3", ",", "self", ".", "ode4", "]", ":", "\n", "            ", "for", "block", "in", "seq", ":", "\n", "                ", "block", ".", "stoch_type", "=", "stoch_type", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.logger.Logger.__init__": [[14, 41], ["collections.OrderedDict", "time.gmtime.gmtime", "dict", "os.path.exists", "os.makedirs", "print", "sys.stdout.flush", "chr", "sys.argv[].split", "map", "open", "f.write", "f.flush", "random.randint", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", "=", "'name'", ",", "fmt", "=", "None", ",", "base", "=", "'./logs'", ")", ":", "\n", "        ", "self", ".", "handler", "=", "True", "\n", "self", ".", "scalar_metrics", "=", "OrderedDict", "(", ")", "\n", "self", ".", "fmt", "=", "fmt", "if", "fmt", "else", "dict", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "base", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "base", ")", "\n", "\n", "", "time", "=", "gmtime", "(", ")", "\n", "hash", "=", "''", ".", "join", "(", "[", "chr", "(", "random", ".", "randint", "(", "97", ",", "122", ")", ")", "for", "_", "in", "range", "(", "3", ")", "]", ")", "\n", "fname", "=", "'-'", ".", "join", "(", "sys", ".", "argv", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "3", ":", "]", ")", "\n", "# self.path = '%s/%s-%s-%s-%s' % (base, fname, name, hash, strftime('%m-%d-%H:%M', time))", "\n", "self", ".", "path", "=", "'%s/%s'", "%", "(", "base", ",", "name", ")", "\n", "\n", "self", ".", "logs", "=", "self", ".", "path", "+", "'.csv'", "\n", "self", ".", "output", "=", "self", ".", "path", "+", "'.out'", "\n", "\n", "def", "prin", "(", "*", "args", ")", ":", "\n", "            ", "str_to_write", "=", "' '", ".", "join", "(", "map", "(", "str", ",", "args", ")", ")", "\n", "with", "open", "(", "self", ".", "output", ",", "'a'", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "str_to_write", "+", "'\\n'", ")", "\n", "f", ".", "flush", "(", ")", "\n", "\n", "", "print", "(", "str_to_write", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "", "self", ".", "print", "=", "prin", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.logger.Logger.add_scalar": [[42, 46], ["None"], "methods", ["None"], ["", "def", "add_scalar", "(", "self", ",", "t", ",", "key", ",", "value", ")", ":", "\n", "        ", "if", "key", "not", "in", "self", ".", "scalar_metrics", ":", "\n", "            ", "self", ".", "scalar_metrics", "[", "key", "]", "=", "[", "]", "\n", "", "self", ".", "scalar_metrics", "[", "key", "]", "+=", "[", "(", "t", ",", "value", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.logger.Logger.iter_info": [[47, 60], ["list", "int", "logger.Logger.scalar_metrics.keys", "numpy.max", "logger.Logger.print", "logger.Logger.print", "tabulate.tabulate.tabulate", "tabulate.tabulate.tabulate().split", "tabulate.tabulate.tabulate"], "methods", ["None"], ["", "def", "iter_info", "(", "self", ",", "order", "=", "None", ")", ":", "\n", "        ", "names", "=", "list", "(", "self", ".", "scalar_metrics", ".", "keys", "(", ")", ")", "\n", "if", "order", ":", "\n", "            ", "names", "=", "order", "\n", "", "values", "=", "[", "self", ".", "scalar_metrics", "[", "name", "]", "[", "-", "1", "]", "[", "1", "]", "for", "name", "in", "names", "]", "\n", "t", "=", "int", "(", "np", ".", "max", "(", "[", "self", ".", "scalar_metrics", "[", "name", "]", "[", "-", "1", "]", "[", "0", "]", "for", "name", "in", "names", "]", ")", ")", "\n", "fmt", "=", "[", "'%s'", "]", "+", "[", "self", ".", "fmt", "[", "name", "]", "if", "name", "in", "self", ".", "fmt", "else", "'.3f'", "for", "name", "in", "names", "]", "\n", "\n", "if", "self", ".", "handler", ":", "\n", "            ", "self", ".", "handler", "=", "False", "\n", "self", ".", "print", "(", "tabulate", "(", "[", "[", "t", "]", "+", "values", "]", ",", "[", "'epoch'", "]", "+", "names", ",", "floatfmt", "=", "fmt", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "print", "(", "tabulate", "(", "[", "[", "t", "]", "+", "values", "]", ",", "[", "'epoch'", "]", "+", "names", ",", "tablefmt", "=", "'plain'", ",", "floatfmt", "=", "fmt", ")", ".", "split", "(", "'\\n'", ")", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.logger.Logger.save": [[61, 70], ["logger.Logger.scalar_metrics.keys", "result.join.join.to_csv", "pandas.DataFrame().set_index", "pandas.DataFrame().set_index", "result.join.join.join", "pandas.DataFrame", "pandas.DataFrame"], "methods", ["None"], ["", "", "def", "save", "(", "self", ")", ":", "\n", "        ", "result", "=", "None", "\n", "for", "key", "in", "self", ".", "scalar_metrics", ".", "keys", "(", ")", ":", "\n", "            ", "if", "result", "is", "None", ":", "\n", "                ", "result", "=", "DataFrame", "(", "self", ".", "scalar_metrics", "[", "key", "]", ",", "columns", "=", "[", "'t'", ",", "key", "]", ")", ".", "set_index", "(", "'t'", ")", "\n", "", "else", ":", "\n", "                ", "df", "=", "DataFrame", "(", "self", ".", "scalar_metrics", "[", "key", "]", ",", "columns", "=", "[", "'t'", ",", "key", "]", ")", ".", "set_index", "(", "'t'", ")", "\n", "result", "=", "result", ".", "join", "(", "df", ",", "how", "=", "'outer'", ")", "\n", "", "", "result", ".", "to_csv", "(", "self", ".", "logs", ")", "\n", "# self.print('The log/output/model have been saved to: ' + self.path + ' + .csv/.out/.cpt')", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.__init__": [[206, 208], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.reset": [[209, 213], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "N", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.update": [[214, 218], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ")", ":", "\n", "        ", "self", ".", "N", "+=", "1", "\n", "self", ".", "sum", "+=", "val", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.WarmUpLR.__init__": [[276, 279], ["torch.optim.lr_scheduler._LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["def", "__init__", "(", "self", ",", "optimizer", ",", "total_iters", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "total_iters", "=", "total_iters", "\n", "super", "(", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.WarmUpLR.get_lr": [[280, 285], ["None"], "methods", ["None"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "\"\"\"we will use the first m batches, and set the learning\n        rate to base_lr * m / total_iters\n        \"\"\"", "\n", "return", "[", "base_lr", "*", "self", ".", "last_epoch", "/", "(", "self", ".", "total_iters", "+", "1e-8", ")", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp": [[7, 11], ["isinstance", "x.detach().cpu().numpy", "x.detach().cpu", "x.detach"], "function", ["None"], ["def", "tonp", "(", "x", ")", ":", "\n", "    ", "if", "isinstance", "(", "x", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "return", "x", "\n", "", "return", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.zero_nfe": [[13, 22], ["hasattr", "hasattr", "model.modules", "Exception", "hasattr"], "function", ["None"], ["", "def", "zero_nfe", "(", "model", ")", ":", "\n", "    ", "if", "hasattr", "(", "model", ",", "'nfe'", ")", ":", "\n", "        ", "model", ".", "nfe", "=", "0", "\n", "", "elif", "hasattr", "(", "model", ",", "'modules'", ")", ":", "\n", "        ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "hasattr", "(", "m", ",", "'nfe'", ")", ":", "\n", "                ", "m", ".", "nfe", "=", "0", "\n", "", "", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"nfe attr not found\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_nfe": [[24, 35], ["hasattr", "hasattr", "model.modules", "Exception", "hasattr"], "function", ["None"], ["", "", "def", "get_nfe", "(", "model", ")", ":", "\n", "    ", "if", "hasattr", "(", "model", ",", "'nfe'", ")", ":", "\n", "        ", "return", "model", ".", "nfe", "\n", "", "elif", "hasattr", "(", "model", ",", "'modules'", ")", ":", "\n", "        ", "nfe", "=", "0", "\n", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "hasattr", "(", "m", ",", "'nfe'", ")", ":", "\n", "                ", "nfe", "+=", "m", ".", "nfe", "\n", "", "", "return", "nfe", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"nfe attr not found\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_n_samples": [[37, 42], ["hasattr", "len", "len"], "function", ["None"], ["", "", "def", "get_n_samples", "(", "data_loader", ")", ":", "\n", "    ", "if", "hasattr", "(", "data_loader", ".", "sampler", ",", "'indices'", ")", ":", "\n", "        ", "return", "len", "(", "data_loader", ".", "sampler", ".", "indices", ")", "\n", "", "else", ":", "\n", "        ", "return", "len", "(", "data_loader", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_classification_metrics": [[44, 63], ["utils.AverageMeter", "utils.get_n_samples", "x.to.to", "y.to.to", "model", "torch.softmax().argmax", "numpy.sum", "model.set_nfe", "torch.cross_entropy().item", "x.to.size", "utils.AverageMeter.update", "torch.softmax", "utils.tonp", "utils.tonp", "model.get_nfe", "torch.cross_entropy"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_n_samples", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.models.ODENet_tinyimagenet.set_nfe", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_nfe"], ["", "", "def", "get_classification_metrics", "(", "model", ",", "data_loader", ",", "device", ",", "ode_flag", ")", ":", "\n", "    ", "loss", "=", "0.", "\n", "accuracy", "=", "0.", "\n", "nfe", "=", "AverageMeter", "(", ")", "\n", "n_samples", "=", "get_n_samples", "(", "data_loader", ")", "\n", "for", "x", ",", "y", "in", "data_loader", ":", "\n", "        ", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "y", "=", "y", ".", "to", "(", "device", ")", "\n", "if", "ode_flag", ":", "\n", "            ", "model", ".", "set_nfe", "(", "0", ")", "\n", "", "logits", "=", "model", "(", "x", ")", "\n", "loss", "+=", "F", ".", "cross_entropy", "(", "logits", ",", "y", ")", ".", "item", "(", ")", "*", "x", ".", "size", "(", "0", ")", "\n", "prediction", "=", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", ".", "argmax", "(", "dim", "=", "1", ")", "\n", "accuracy", "+=", "np", ".", "sum", "(", "tonp", "(", "prediction", ")", "==", "tonp", "(", "y", ")", ")", "\n", "if", "ode_flag", ":", "\n", "            ", "nfe", ".", "update", "(", "model", ".", "get_nfe", "(", ")", ")", "\n", "", "", "accuracy", "/=", "n_samples", "\n", "loss", "/=", "n_samples", "\n", "return", "loss", ",", "accuracy", ",", "nfe", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_accuracy": [[65, 75], ["utils.get_n_samples", "x.to.to", "utils.zero_nfe", "model", "torch.softmax().argmax", "numpy.sum", "torch.softmax", "utils.tonp", "utils.tonp"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_n_samples", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.zero_nfe", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp"], ["", "def", "get_accuracy", "(", "model", ",", "data_loader", ",", "device", ")", ":", "\n", "    ", "accuracy", "=", "0.", "\n", "for", "x", ",", "y", "in", "data_loader", ":", "\n", "        ", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "zero_nfe", "(", "model", ")", "\n", "logits", "=", "model", "(", "x", ")", "\n", "prediction", "=", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", ".", "argmax", "(", "dim", "=", "1", ")", "\n", "accuracy", "+=", "np", ".", "sum", "(", "tonp", "(", "prediction", ")", "==", "tonp", "(", "y", ")", ")", "\n", "", "n_samples", "=", "get_n_samples", "(", "data_loader", ")", "\n", "return", "accuracy", "/", "n_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.visualize_points": [[79, 85], ["matplotlib.scatter", "matplotlib.grid", "c.append"], "function", ["None"], ["", "def", "visualize_points", "(", "x", ",", "y", ",", "alpha", "=", "1.", ",", "colors", "=", "(", "'red'", ",", "'green'", ")", ")", ":", "\n", "    ", "c", "=", "[", "]", "\n", "for", "i", "in", "y", ":", "\n", "        ", "c", ".", "append", "(", "colors", "[", "i", "]", ")", "\n", "", "plt", ".", "scatter", "(", "x", "[", ":", ",", "0", "]", ",", "x", "[", ":", ",", "1", "]", ",", "color", "=", "c", ",", "alpha", "=", "alpha", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.visualize_data": [[87, 100], ["matplotlib.figure", "enumerate", "matplotlib.suptitle", "zip", "matplotlib.subplot", "utils.visualize_points", "matplotlib.xlabel", "data.tensors[].numpy", "data.tensors[].numpy", "len"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.visualize_points"], ["", "def", "visualize_data", "(", "train", ",", "val", ",", "test", ",", "args", ")", ":", "\n", "    ", "\"\"\"train, val, test are TensorDatasets consist of x and y Tensors\"\"\"", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "9", "*", "3", ",", "8", ")", ")", "\n", "for", "i", ",", "(", "data", ",", "name", ")", "in", "enumerate", "(", "zip", "(", "[", "train", ",", "val", ",", "test", "]", ",", "[", "'train'", ",", "'val'", ",", "'test'", "]", ")", ")", ":", "\n", "        ", "plt", ".", "subplot", "(", "1", ",", "3", ",", "1", "+", "i", ")", "\n", "visualize_points", "(", "data", ".", "tensors", "[", "0", "]", ".", "numpy", "(", ")", ",", "data", ".", "tensors", "[", "1", "]", ".", "numpy", "(", ")", ")", "\n", "title", "=", "\"{}, {} samples\"", ".", "format", "(", "name", ",", "len", "(", "data", ")", ")", "\n", "plt", ".", "xlabel", "(", "title", ",", "size", "=", "15", ")", "\n", "\n", "", "title", "=", "\"n_samples: {}\\nmu_1: {}, mu_2: {}\\nstd_1: {}, std_2: {}\"", ".", "format", "(", "args", ".", "n_samples", ",", "\n", "args", ".", "mu_1", ",", "args", ".", "mu_2", ",", "\n", "args", ".", "std_1", ",", "args", ".", "std_2", ")", "\n", "plt", ".", "suptitle", "(", "title", ",", "size", "=", "17", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_boundaries": [[102, 111], ["xmax.append", "xmin.append", "ymax.append", "ymin.append", "min", "max", "min", "max", "tensor[].max().item", "tensor[].min().item", "tensor[].max().item", "tensor[].min().item", "tensor[].max", "tensor[].min", "tensor[].max", "tensor[].min"], "function", ["None"], ["", "def", "get_boundaries", "(", "tensors", ")", ":", "\n", "    ", "\"\"\"tensors is list of 2D Tensors\"\"\"", "\n", "xmax", ",", "xmin", ",", "ymax", ",", "ymin", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "tensor", "in", "tensors", ":", "\n", "        ", "xmax", ".", "append", "(", "tensor", "[", ":", ",", "0", "]", ".", "max", "(", ")", ".", "item", "(", ")", ")", "\n", "xmin", ".", "append", "(", "tensor", "[", ":", ",", "0", "]", ".", "min", "(", ")", ".", "item", "(", ")", ")", "\n", "ymax", ".", "append", "(", "tensor", "[", ":", ",", "1", "]", ".", "max", "(", ")", ".", "item", "(", ")", ")", "\n", "ymin", ".", "append", "(", "tensor", "[", ":", ",", "1", "]", ".", "min", "(", ")", ".", "item", "(", ")", ")", "\n", "", "return", "min", "(", "xmin", ")", ",", "max", "(", "xmax", ")", ",", "min", "(", "ymin", ")", ",", "max", "(", "ymax", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_endpoints": [[113, 122], ["numpy.vstack", "numpy.hstack", "np.vstack.append", "np.hstack.append", "utils.tonp", "utils.tonp"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp"], ["", "def", "get_endpoints", "(", "model", ",", "dataloader", ")", ":", "\n", "    ", "endpoints", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "dataloader", ":", "\n", "        ", "endpoints", ".", "append", "(", "tonp", "(", "model", "[", "0", "]", "(", "x", ")", ")", ")", "\n", "labels", ".", "append", "(", "tonp", "(", "y", ")", ")", "\n", "", "endpoints", "=", "np", ".", "vstack", "(", "endpoints", ")", "\n", "labels", "=", "np", ".", "hstack", "(", "labels", ")", "\n", "return", "endpoints", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.plot_dividing_curve_and_endpoints": [[124, 165], ["utils.get_boundaries", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "model", "tonp().reshape", "len", "matplotlib.figure", "enumerate", "dict", "loaders.items", "utils.get_boundaries", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "tonp().reshape", "enumerate", "numpy.vstack", "torch.FloatTensor().to", "torch.FloatTensor().to", "loaders.items", "matplotlib.subplot", "utils.visualize_points", "matplotlib.contourf", "matplotlib.title", "dict.update", "numpy.vstack", "torch.FloatTensor().to", "torch.FloatTensor().to", "dict.items", "matplotlib.subplot", "utils.visualize_points", "matplotlib.contourf", "matplotlib.title", "matplotlib.suptitle", "utils.tonp", "utils.tonp", "utils.tonp", "utils.tonp", "loaders.values", "X.flatten", "Y.flatten", "torch.FloatTensor", "torch.FloatTensor", "torch.softmax().argmax", "utils.get_endpoints", "dict.values", "X.flatten", "Y.flatten", "torch.FloatTensor", "torch.FloatTensor", "torch.softmax().argmax", "torch.softmax", "torch.softmax"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_boundaries", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_boundaries", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.visualize_points", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.visualize_points", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_endpoints"], ["", "def", "plot_dividing_curve_and_endpoints", "(", "model", ",", "loaders", ",", "device", ",", "npts", "=", "100", ",", "title", "=", "None", ")", ":", "\n", "    ", "\"\"\"loaders is dict like {'dataset_name': dataset_loader}\"\"\"", "\n", "# plot dividing curve in data space", "\n", "xmin", ",", "xmax", ",", "ymin", ",", "ymax", "=", "get_boundaries", "(", "[", "l", ".", "dataset", ".", "tensors", "[", "0", "]", "for", "l", "in", "loaders", ".", "values", "(", ")", "]", ")", "\n", "ratio", "=", "1.1", "\n", "_x", "=", "np", ".", "linspace", "(", "xmin", "*", "ratio", ",", "xmax", "*", "ratio", ",", "npts", ")", "\n", "_y", "=", "np", ".", "linspace", "(", "ymin", "*", "ratio", ",", "ymax", "*", "ratio", ",", "npts", ")", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "_x", ",", "_y", ")", "\n", "grid", "=", "np", ".", "vstack", "(", "[", "X", ".", "flatten", "(", ")", ",", "Y", ".", "flatten", "(", ")", "]", ")", ".", "T", "\n", "logits", "=", "model", "(", "torch", ".", "FloatTensor", "(", "grid", ")", ".", "to", "(", "device", ")", ")", "\n", "p", "=", "tonp", "(", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", ".", "argmax", "(", "dim", "=", "1", ")", ")", ".", "reshape", "(", "(", "npts", ",", "npts", ")", ")", "\n", "\n", "n_plots", "=", "len", "(", "loaders", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "8", "*", "n_plots", ",", "12", ")", ")", "\n", "for", "i", ",", "(", "name", ",", "loader", ")", "in", "enumerate", "(", "loaders", ".", "items", "(", ")", ")", ":", "\n", "        ", "plt", ".", "subplot", "(", "2", ",", "n_plots", ",", "i", "+", "1", ")", "\n", "visualize_points", "(", "tonp", "(", "loader", ".", "dataset", ".", "tensors", "[", "0", "]", ")", ",", "\n", "tonp", "(", "loader", ".", "dataset", ".", "tensors", "[", "1", "]", ")", ",", "alpha", "=", "0.6", ")", "\n", "plt", ".", "contourf", "(", "X", ",", "Y", ",", "p", ",", "alpha", "=", ".15", ")", "\n", "plt", ".", "title", "(", "name", ",", "size", "=", "15", ")", "\n", "\n", "# plot endpoints of ODE and dividing curve in trasformed space", "\n", "", "endpoints", "=", "dict", "(", ")", "\n", "for", "data_name", ",", "loader", "in", "loaders", ".", "items", "(", ")", ":", "\n", "        ", "endpoints", ".", "update", "(", "{", "\n", "data_name", ":", "get_endpoints", "(", "model", ",", "loader", ")", "\n", "}", ")", "\n", "", "xmin", ",", "xmax", ",", "ymin", ",", "ymax", "=", "get_boundaries", "(", "[", "x", "[", "0", "]", "for", "x", "in", "endpoints", ".", "values", "(", ")", "]", ")", "\n", "_x", "=", "np", ".", "linspace", "(", "xmin", "*", "ratio", ",", "xmax", "*", "ratio", ",", "npts", ")", "\n", "_y", "=", "np", ".", "linspace", "(", "ymin", "*", "ratio", ",", "ymax", "*", "ratio", ",", "npts", ")", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "_x", ",", "_y", ")", "\n", "grid", "=", "np", ".", "vstack", "(", "[", "X", ".", "flatten", "(", ")", ",", "Y", ".", "flatten", "(", ")", "]", ")", ".", "T", "\n", "logits", "=", "model", "[", "-", "1", "]", "(", "torch", ".", "FloatTensor", "(", "grid", ")", ".", "to", "(", "device", ")", ")", "\n", "p", "=", "tonp", "(", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", ".", "argmax", "(", "dim", "=", "1", ")", ")", ".", "reshape", "(", "(", "npts", ",", "npts", ")", ")", "\n", "for", "i", ",", "(", "data_name", ",", "points_and_labels", ")", "in", "enumerate", "(", "endpoints", ".", "items", "(", ")", ")", ":", "\n", "        ", "plt", ".", "subplot", "(", "2", ",", "3", ",", "i", "+", "4", ")", "\n", "visualize_points", "(", "*", "points_and_labels", ",", "alpha", "=", "0.6", ")", "\n", "plt", ".", "contourf", "(", "X", ",", "Y", ",", "p", ",", "alpha", "=", ".15", ")", "\n", "plt", ".", "title", "(", "data_name", ",", "size", "=", "15", ")", "\n", "", "if", "title", ":", "\n", "        ", "plt", ".", "suptitle", "(", "title", ",", "size", "=", "17", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.plot_metrics": [[167, 203], ["matplotlib.figure", "matplotlib.subplot", "utils.plot_metrics.plot"], "function", ["None"], ["", "", "def", "plot_metrics", "(", "logs", ",", "nfe_flag", ")", ":", "\n", "    ", "def", "get_epoch_and_log", "(", "log", ")", ":", "\n", "        ", "arr", "=", "np", ".", "array", "(", "log", ")", "\n", "return", "arr", "[", ":", ",", "0", "]", ",", "arr", "[", ":", ",", "1", "]", "\n", "\n", "", "def", "plot", "(", "log_name", ")", ":", "\n", "        ", "epoch", ",", "log", "=", "get_epoch_and_log", "(", "logs", "[", "log_name", "]", ")", "\n", "label", "=", "''", "\n", "if", "log", "[", "-", "1", "]", "is", "not", "None", ":", "\n", "            ", "label", "=", "'{0}: {1:.4f}'", ".", "format", "(", "log_name", ",", "log", "[", "-", "1", "]", ")", "\n", "", "plt", ".", "plot", "(", "epoch", ",", "log", ",", "label", "=", "label", ")", "\n", "\n", "", "plt", ".", "figure", "(", "figsize", "=", "(", "18", ",", "6", ")", ")", "\n", "plt", ".", "subplot", "(", "1", ",", "3", ",", "1", ")", "\n", "plot", "(", "'train.loss'", ")", "\n", "plot", "(", "'val.loss'", ")", "\n", "plt", ".", "grid", "(", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "ylabel", "(", "'loss'", ",", "size", "=", "15", ")", "\n", "plt", ".", "xlabel", "(", "'epoch'", ",", "size", "=", "15", ")", "\n", "plt", ".", "subplot", "(", "1", ",", "3", ",", "2", ")", "\n", "plot", "(", "'train.acc'", ")", "\n", "plot", "(", "'val.acc'", ")", "\n", "plt", ".", "grid", "(", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "ylabel", "(", "'accuracy'", ",", "size", "=", "15", ")", "\n", "plt", ".", "xlabel", "(", "'epoch'", ",", "size", "=", "15", ")", "\n", "plt", ".", "subplot", "(", "1", ",", "3", ",", "3", ")", "\n", "if", "nfe_flag", ":", "\n", "        ", "plot", "(", "'train.forward_nfe'", ")", "\n", "plot", "(", "'train.backward_nfe'", ")", "\n", "plot", "(", "'val.forward_nfe'", ")", "\n", "plt", ".", "grid", "(", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "ylabel", "(", "'number of function evaluation'", ",", "size", "=", "15", ")", "\n", "plt", ".", "xlabel", "(", "'epoch'", ",", "size", "=", "15", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.ensamble_probs": [[220, 224], ["probs.mean().argmax", "numpy.sum", "probs.mean", "utils.tonp"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp"], ["", "", "def", "ensamble_probs", "(", "probs", ",", "y", ")", ":", "\n", "    ", "ens_prediction", "=", "probs", ".", "mean", "(", "dim", "=", "2", ")", ".", "argmax", "(", "dim", "=", "1", ")", "\n", "ens_acc", "=", "np", ".", "sum", "(", "tonp", "(", "ens_prediction", ")", "==", "y", ")", "\n", "return", "ens_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.ensamble_logits": [[225, 230], ["logits.mean", "torch.softmax().argmax", "numpy.sum", "torch.softmax", "utils.tonp"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp"], ["", "def", "ensamble_logits", "(", "logits", ",", "y", ")", ":", "\n", "    ", "ens_logits", "=", "logits", ".", "mean", "(", "dim", "=", "2", ")", "\n", "predictions", "=", "F", ".", "softmax", "(", "ens_logits", ")", ".", "argmax", "(", "dim", "=", "1", ")", "\n", "ens_acc", "=", "np", ".", "sum", "(", "tonp", "(", "predictions", ")", "==", "y", ")", "\n", "return", "ens_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_ensamble_metrics": [[232, 267], ["utils.get_n_samples", "dict", "dict", "ens_acc.keys", "x.to.to", "utils.tonp", "range", "torch.stack", "torch.stack", "torch.softmax", "all_acc.append", "range", "numpy.sum", "dict.update", "dict.update", "range", "torch.stack.append", "numpy.sum", "model", "utils.ensamble_logits", "all_acc[].mean", "all_acc[].std", "utils.tonp", "utils.ensamble_probs", "F.softmax.argmax"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.get_n_samples", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.ensamble_logits", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.tonp", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils.ensamble_probs"], ["", "def", "get_ensamble_metrics", "(", "model", ",", "data_loader", ",", "n_estimators", ",", "device", ",", "to_ensamble", "=", "'probs'", ")", ":", "\n", "    ", "n_samples", "=", "get_n_samples", "(", "data_loader", ")", "\n", "if", "n_samples", "==", "0", ":", "\n", "        ", "return", "None", ",", "None", ",", "None", "\n", "", "ens_acc", "=", "{", "i", ":", "0.", "for", "i", "in", "range", "(", "1", ",", "n_estimators", "+", "1", ")", "}", "\n", "all_acc", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "data_loader", ":", "\n", "        ", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "y", "=", "tonp", "(", "y", ")", "\n", "logits", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_estimators", ")", ":", "\n", "            ", "logits", ".", "append", "(", "model", "(", "x", ")", ")", "\n", "", "logits", "=", "torch", ".", "stack", "(", "logits", ",", "dim", "=", "2", ")", "\n", "probs", "=", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "all_acc", ".", "append", "(", "np", ".", "sum", "(", "tonp", "(", "probs", ".", "argmax", "(", "dim", "=", "1", ")", ")", "==", "y", "[", ":", ",", "np", ".", "newaxis", "]", ",", "axis", "=", "0", ")", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "n_estimators", "+", "1", ")", ":", "\n", "            ", "if", "to_ensamble", "==", "'logits'", ":", "\n", "                ", "ens_acc", "[", "i", "]", "+=", "ensamble_logits", "(", "logits", "[", ":", ",", ":", ",", ":", "i", "]", ",", "y", ")", "\n", "", "elif", "to_ensamble", "==", "'probs'", ":", "\n", "               ", "ens_acc", "[", "i", "]", "+=", "ensamble_probs", "(", "probs", "[", ":", ",", ":", ",", ":", "i", "]", ",", "y", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "", "", "all_acc", "=", "np", ".", "sum", "(", "all_acc", ",", "axis", "=", "0", ")", "/", "n_samples", "\n", "mean_acc", "=", "dict", "(", ")", "\n", "std_acc", "=", "dict", "(", ")", "\n", "for", "n_estimators", "in", "ens_acc", ".", "keys", "(", ")", ":", "\n", "        ", "ens_acc", "[", "n_estimators", "]", "/=", "n_samples", "\n", "mean_acc", ".", "update", "(", "{", "\n", "n_estimators", ":", "all_acc", "[", ":", "n_estimators", "]", ".", "mean", "(", ")", "\n", "}", ")", "\n", "std_acc", ".", "update", "(", "{", "\n", "n_estimators", ":", "all_acc", "[", ":", "n_estimators", "]", ".", "std", "(", ")", "\n", "}", ")", "\n", "", "return", "ens_acc", ",", "mean_acc", ",", "std_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils_data.get_gauss2d_data": [[15, 22], ["sklearn.datasets.make_blobs"], "function", ["None"], ["def", "get_gauss2d_data", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "data", "==", "\"crossed_gaussians\"", ":", "\n", "        ", "data", "=", "make_blobs", "(", "n_samples", "=", "args", ".", "n_samples", ",", "n_features", "=", "2", ",", "centers", "=", "[", "args", ".", "mu_1", ",", "args", ".", "mu_2", "]", ",", "\n", "cluster_std", "=", "[", "args", ".", "std_1", ",", "args", ".", "std_2", "]", ",", "random_state", "=", "args", ".", "data_seed", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils_data.get_gauss2d_loaders": [[24, 42], ["utils_data.get_gauss2d_data", "sklearn.model_selection.train_test_split", "sklearn.model_selection.train_test_split", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.FloatTensor", "torch.FloatTensor", "torch.LongTensor", "torch.LongTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.LongTensor", "torch.LongTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.LongTensor", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils_data.get_gauss2d_data"], ["", "def", "get_gauss2d_loaders", "(", "args", ")", ":", "\n", "    ", "x", ",", "y", "=", "get_gauss2d_data", "(", "args", ")", "\n", "train_x", ",", "test_x", ",", "train_y", ",", "test_y", "=", "train_test_split", "(", "x", ",", "y", ",", "train_size", "=", "args", ".", "train_size", ",", "random_state", "=", "args", ".", "data_seed", ")", "\n", "test_x", ",", "val_x", ",", "test_y", ",", "val_y", "=", "train_test_split", "(", "test_x", ",", "test_y", ",", "test_size", "=", "0.5", ",", "random_state", "=", "args", ".", "data_seed", ")", "\n", "trainset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "torch", ".", "FloatTensor", "(", "train_x", ")", ",", "\n", "torch", ".", "LongTensor", "(", "train_y", ")", ")", "\n", "valset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "torch", ".", "FloatTensor", "(", "val_x", ")", ",", "\n", "torch", ".", "LongTensor", "(", "val_y", ")", ")", "\n", "testset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "torch", ".", "FloatTensor", "(", "test_x", ")", ",", "\n", "torch", ".", "LongTensor", "(", "test_y", ")", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "train_bs", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "1", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "valset", ",", "batch_size", "=", "args", ".", "val_bs", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "1", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "batch_size", "=", "args", ".", "test_bs", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "1", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "return", "train_loader", ",", "val_loader", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils_data.get_cifar100_loaders": [[44, 100], ["torchvision.Compose", "os.path.join", "torchvision.CIFAR100", "torchvision.CIFAR100", "torchvision.CIFAR100", "len", "list", "int", "numpy.random.shuffle", "torch.utils.data.SubsetRandomSampler", "torch.utils.data.SubsetRandomSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.Compose", "torchvision.Compose", "range", "numpy.floor", "print", "torchvision.ToTensor", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.ToTensor"], "function", ["None"], ["", "def", "get_cifar100_loaders", "(", "batch_size", "=", "128", ",", "test_batch_size", "=", "1000", ",", "val_size", "=", "0.2", ",", "data_root", "=", "DATA_ROOT", ",", "limit", "=", "None", ",", "\n", "verbose", "=", "False", ",", "augmentation", "=", "True", ")", ":", "\n", "    ", "if", "augmentation", ":", "\n", "        ", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "        ", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "", "test_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "data_root", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'cifar100'", ")", "\n", "train_dataset", "=", "datasets", ".", "CIFAR100", "(", "\n", "root", "=", "data_root", ",", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "transform", "=", "train_transform", ",", "\n", ")", "\n", "val_dataset", "=", "datasets", ".", "CIFAR100", "(", "\n", "root", "=", "data_root", ",", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "transform", "=", "test_transform", ",", "\n", ")", "\n", "test_dataset", "=", "datasets", ".", "CIFAR100", "(", "\n", "root", "=", "data_root", ",", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "transform", "=", "test_transform", ",", "\n", ")", "\n", "\n", "num_train", "=", "len", "(", "train_dataset", ")", "\n", "if", "limit", ":", "\n", "        ", "num_train", "=", "limit", "\n", "", "indices", "=", "list", "(", "range", "(", "num_train", ")", ")", "\n", "split", "=", "int", "(", "np", ".", "floor", "(", "val_size", "*", "num_train", ")", ")", "\n", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "\"train size: {}\\nsplit: {}\\n\"", ".", "format", "(", "num_train", ",", "split", ")", ")", "\n", "# random_seed = 30", "\n", "#     # np.random.seed(random_seed)", "\n", "", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "\n", "train_idx", ",", "valid_idx", "=", "indices", "[", "split", ":", "]", ",", "indices", "[", ":", "split", "]", "\n", "train_sampler", "=", "SubsetRandomSampler", "(", "train_idx", ")", "\n", "valid_sampler", "=", "SubsetRandomSampler", "(", "valid_idx", ")", "\n", "\n", "train_loader", "=", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "sampler", "=", "train_sampler", ",", "num_workers", "=", "4", "\n", ")", "\n", "valid_loader", "=", "DataLoader", "(", "\n", "val_dataset", ",", "batch_size", "=", "test_batch_size", ",", "sampler", "=", "valid_sampler", ",", "num_workers", "=", "4", "\n", ")", "\n", "test_loader", "=", "DataLoader", "(", "\n", "test_dataset", ",", "batch_size", "=", "test_batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "4", "\n", ")", "\n", "\n", "return", "train_loader", ",", "valid_loader", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils_data.get_cifar10_loaders": [[102, 158], ["torchvision.Compose", "os.path.join", "torchvision.CIFAR10", "torchvision.CIFAR10", "torchvision.CIFAR10", "len", "list", "int", "numpy.random.shuffle", "torch.utils.data.SubsetRandomSampler", "torch.utils.data.SubsetRandomSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.Compose", "torchvision.Compose", "range", "numpy.floor", "print", "torchvision.ToTensor", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.ToTensor"], "function", ["None"], ["", "def", "get_cifar10_loaders", "(", "batch_size", "=", "128", ",", "test_batch_size", "=", "1000", ",", "val_size", "=", "0.2", ",", "data_root", "=", "DATA_ROOT", ",", "limit", "=", "None", ",", "\n", "verbose", "=", "False", ",", "augmentation", "=", "True", ")", ":", "\n", "    ", "if", "augmentation", ":", "\n", "        ", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "        ", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "", "test_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "data_root", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'cifar10'", ")", "\n", "train_dataset", "=", "datasets", ".", "CIFAR10", "(", "\n", "root", "=", "data_root", ",", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "transform", "=", "train_transform", ",", "\n", ")", "\n", "val_dataset", "=", "datasets", ".", "CIFAR10", "(", "\n", "root", "=", "data_root", ",", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "transform", "=", "test_transform", ",", "\n", ")", "\n", "test_dataset", "=", "datasets", ".", "CIFAR10", "(", "\n", "root", "=", "data_root", ",", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "transform", "=", "test_transform", ",", "\n", ")", "\n", "\n", "num_train", "=", "len", "(", "train_dataset", ")", "\n", "if", "limit", ":", "\n", "        ", "num_train", "=", "limit", "\n", "", "indices", "=", "list", "(", "range", "(", "num_train", ")", ")", "\n", "split", "=", "int", "(", "np", ".", "floor", "(", "val_size", "*", "num_train", ")", ")", "\n", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "\"train size: {}\\nsplit: {}\\n\"", ".", "format", "(", "num_train", ",", "split", ")", ")", "\n", "# random_seed = 30", "\n", "#     # np.random.seed(random_seed)", "\n", "", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "\n", "train_idx", ",", "valid_idx", "=", "indices", "[", "split", ":", "]", ",", "indices", "[", ":", "split", "]", "\n", "train_sampler", "=", "SubsetRandomSampler", "(", "train_idx", ")", "\n", "valid_sampler", "=", "SubsetRandomSampler", "(", "valid_idx", ")", "\n", "\n", "train_loader", "=", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "sampler", "=", "train_sampler", ",", "num_workers", "=", "4", "\n", ")", "\n", "valid_loader", "=", "DataLoader", "(", "\n", "val_dataset", ",", "batch_size", "=", "test_batch_size", ",", "sampler", "=", "valid_sampler", ",", "num_workers", "=", "4", "\n", ")", "\n", "test_loader", "=", "DataLoader", "(", "\n", "test_dataset", ",", "batch_size", "=", "test_batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "4", "\n", ")", "\n", "\n", "return", "train_loader", ",", "valid_loader", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.None.utils_data.get_tiny_imagenet_loaders": [[159, 210], ["torchvision.Compose", "os.path.join", "torchvision.ImageFolder", "torchvision.ImageFolder", "torchvision.ImageFolder", "len", "list", "int", "numpy.random.shuffle", "torch.utils.data.SubsetRandomSampler", "torch.utils.data.SubsetRandomSampler", "torch.utils.data.SubsetRandomSampler", "torch.utils.data.SubsetRandomSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.Compose", "torchvision.Compose", "os.path.join", "os.path.join", "os.path.join", "range", "numpy.floor", "print", "torchvision.ToTensor", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.ToTensor"], "function", ["None"], ["", "def", "get_tiny_imagenet_loaders", "(", "train_batch_size", "=", "128", ",", "test_batch_size", "=", "128", ",", "data_root", "=", "DATA_ROOT", ",", "\n", "augmentation", "=", "True", ",", "num_workers", "=", "0", ",", "val_size", "=", "0.2", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "if", "augmentation", ":", "\n", "        ", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "64", ",", "padding", "=", "8", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "        ", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "", "test_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "data_transforms", "=", "{", "\n", "'train'", ":", "train_transform", ",", "\n", "'val'", ":", "test_transform", ",", "\n", "'test'", ":", "test_transform", "\n", "}", "\n", "data_dir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'tiny-imagenet-200'", ")", "\n", "paths", "=", "{", "\n", "'train'", ":", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'train'", ")", ",", "\n", "'val'", ":", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'val'", ")", ",", "\n", "'test'", ":", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'test'", ")", "\n", "}", "\n", "train_dataset", "=", "datasets", ".", "ImageFolder", "(", "paths", "[", "'train'", "]", ",", "data_transforms", "[", "'train'", "]", ")", "\n", "val_dataset", "=", "datasets", ".", "ImageFolder", "(", "paths", "[", "'train'", "]", ",", "data_transforms", "[", "'val'", "]", ")", "\n", "test_dataset", "=", "datasets", ".", "ImageFolder", "(", "paths", "[", "'val'", "]", ",", "data_transforms", "[", "'test'", "]", ")", "\n", "\n", "num_train", "=", "len", "(", "train_dataset", ")", "\n", "indices", "=", "list", "(", "range", "(", "num_train", ")", ")", "\n", "split", "=", "int", "(", "np", ".", "floor", "(", "val_size", "*", "num_train", ")", ")", "\n", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "\"train size: {}\\nsplit: {}\\n\"", ".", "format", "(", "num_train", ",", "split", ")", ")", "\n", "", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "\n", "train_idx", ",", "val_idx", "=", "indices", "[", "split", ":", "]", ",", "indices", "[", ":", "split", "]", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "SubsetRandomSampler", "(", "train_idx", ")", "\n", "val_sampler", "=", "torch", ".", "utils", ".", "data", ".", "SubsetRandomSampler", "(", "val_idx", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "train_batch_size", ",", "sampler", "=", "train_sampler", ",", "\n", "num_workers", "=", "num_workers", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_dataset", ",", "batch_size", "=", "test_batch_size", ",", "sampler", "=", "val_sampler", ",", "\n", "num_workers", "=", "num_workers", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "test_batch_size", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "num_workers", ")", "\n", "\n", "return", "train_loader", ",", "val_loader", ",", "test_loader", "\n", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.interp._interp_fit": [[5, 36], ["tuple", "tuple", "tuple", "tuple", "misc._dot_product", "misc._dot_product", "misc._dot_product", "zip", "zip", "zip"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._dot_product", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._dot_product", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._dot_product"], ["def", "_interp_fit", "(", "y0", ",", "y1", ",", "y_mid", ",", "f0", ",", "f1", ",", "dt", ")", ":", "\n", "    ", "\"\"\"Fit coefficients for 4th order polynomial interpolation.\n\n    Args:\n        y0: function value at the start of the interval.\n        y1: function value at the end of the interval.\n        y_mid: function value at the mid-point of the interval.\n        f0: derivative value at the start of the interval.\n        f1: derivative value at the end of the interval.\n        dt: width of the interval.\n\n    Returns:\n        List of coefficients `[a, b, c, d, e]` for interpolating with the polynomial\n        `p = a * x ** 4 + b * x ** 3 + c * x ** 2 + d * x + e` for values of `x`\n        between 0 (start of interval) and 1 (end of interval).\n    \"\"\"", "\n", "a", "=", "tuple", "(", "\n", "_dot_product", "(", "[", "-", "2", "*", "dt", ",", "2", "*", "dt", ",", "-", "8", ",", "-", "8", ",", "16", "]", ",", "[", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "]", ")", "\n", "for", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "in", "zip", "(", "f0", ",", "f1", ",", "y0", ",", "y1", ",", "y_mid", ")", "\n", ")", "\n", "b", "=", "tuple", "(", "\n", "_dot_product", "(", "[", "5", "*", "dt", ",", "-", "3", "*", "dt", ",", "18", ",", "14", ",", "-", "32", "]", ",", "[", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "]", ")", "\n", "for", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "in", "zip", "(", "f0", ",", "f1", ",", "y0", ",", "y1", ",", "y_mid", ")", "\n", ")", "\n", "c", "=", "tuple", "(", "\n", "_dot_product", "(", "[", "-", "4", "*", "dt", ",", "dt", ",", "-", "11", ",", "-", "5", ",", "16", "]", ",", "[", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "]", ")", "\n", "for", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "in", "zip", "(", "f0", ",", "f1", ",", "y0", ",", "y1", ",", "y_mid", ")", "\n", ")", "\n", "d", "=", "tuple", "(", "dt", "*", "f0_", "for", "f0_", "in", "f0", ")", "\n", "e", "=", "y0", "\n", "return", "[", "a", ",", "b", ",", "c", ",", "d", ",", "e", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.interp._interp_evaluate": [[38, 66], ["misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "range", "tuple", "torch.tensor().type().to", "len", "xs.append", "misc._dot_product", "torch.tensor().type", "reversed", "zip", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._dot_product"], ["", "def", "_interp_evaluate", "(", "coefficients", ",", "t0", ",", "t1", ",", "t", ")", ":", "\n", "    ", "\"\"\"Evaluate polynomial interpolation at the given time point.\n\n    Args:\n        coefficients: list of Tensor coefficients as created by `interp_fit`.\n        t0: scalar float64 Tensor giving the start of the interval.\n        t1: scalar float64 Tensor giving the end of the interval.\n        t: scalar float64 Tensor giving the desired interpolation point.\n\n    Returns:\n        Polynomial interpolation of the coefficients at time `t`.\n    \"\"\"", "\n", "\n", "dtype", "=", "coefficients", "[", "0", "]", "[", "0", "]", ".", "dtype", "\n", "device", "=", "coefficients", "[", "0", "]", "[", "0", "]", ".", "device", "\n", "\n", "t0", "=", "_convert_to_tensor", "(", "t0", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "t1", "=", "_convert_to_tensor", "(", "t1", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "t", "=", "_convert_to_tensor", "(", "t", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "\n", "assert", "(", "t0", "<=", "t", ")", "&", "(", "t", "<=", "t1", ")", ",", "'invalid interpolation, fails `t0 <= t <= t1`: {}, {}, {}'", ".", "format", "(", "t0", ",", "t", ",", "t1", ")", "\n", "x", "=", "(", "(", "t", "-", "t0", ")", "/", "(", "t1", "-", "t0", ")", ")", ".", "type", "(", "dtype", ")", ".", "to", "(", "device", ")", "\n", "\n", "xs", "=", "[", "torch", ".", "tensor", "(", "1", ")", ".", "type", "(", "dtype", ")", ".", "to", "(", "device", ")", ",", "x", "]", "\n", "for", "_", "in", "range", "(", "2", ",", "len", "(", "coefficients", ")", ")", ":", "\n", "        ", "xs", ".", "append", "(", "xs", "[", "-", "1", "]", "*", "x", ")", "\n", "\n", "", "return", "tuple", "(", "_dot_product", "(", "coefficients_", ",", "reversed", "(", "xs", ")", ")", "for", "coefficients_", "in", "zip", "(", "*", "coefficients", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.rk_common._runge_kutta_step": [[23, 63], ["misc._convert_to_tensor", "misc._convert_to_tensor", "tuple", "zip", "tuple", "tuple", "map", "tuple", "tuple", "tuple", "misc._scaled_dot_product", "k_.append", "misc._scaled_dot_product", "zip", "zip", "misc._scaled_dot_product", "zip", "func"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._scaled_dot_product", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._scaled_dot_product", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._scaled_dot_product"], ["", "def", "_runge_kutta_step", "(", "func", ",", "y0", ",", "f0", ",", "t0", ",", "dt", ",", "tableau", ")", ":", "\n", "    ", "\"\"\"Take an arbitrary Runge-Kutta step and estimate error.\n\n    Args:\n        func: Function to evaluate like `func(t, y)` to compute the time derivative\n            of `y`.\n        y0: Tensor initial value for the state.\n        f0: Tensor initial value for the derivative, computed from `func(t0, y0)`.\n        t0: float64 scalar Tensor giving the initial time.\n        dt: float64 scalar Tensor giving the size of the desired time step.\n        tableau: optional _ButcherTableau describing how to take the Runge-Kutta\n            step.\n        name: optional name for the operation.\n\n    Returns:\n        Tuple `(y1, f1, y1_error, k)` giving the estimated function value after\n        the Runge-Kutta step at `t1 = t0 + dt`, the derivative of the state at `t1`,\n        estimated error at `t1`, and a list of Runge-Kutta coefficients `k` used for\n        calculating these terms.\n    \"\"\"", "\n", "dtype", "=", "y0", "[", "0", "]", ".", "dtype", "\n", "device", "=", "y0", "[", "0", "]", ".", "device", "\n", "\n", "t0", "=", "_convert_to_tensor", "(", "t0", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "dt", "=", "_convert_to_tensor", "(", "dt", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "\n", "k", "=", "tuple", "(", "map", "(", "lambda", "x", ":", "[", "x", "]", ",", "f0", ")", ")", "\n", "for", "alpha_i", ",", "beta_i", "in", "zip", "(", "tableau", ".", "alpha", ",", "tableau", ".", "beta", ")", ":", "\n", "        ", "ti", "=", "t0", "+", "alpha_i", "*", "dt", "\n", "yi", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "beta_i", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "tuple", "(", "k_", ".", "append", "(", "f_", ")", "for", "k_", ",", "f_", "in", "zip", "(", "k", ",", "func", "(", "ti", ",", "yi", ")", ")", ")", "\n", "\n", "", "if", "not", "(", "tableau", ".", "c_sol", "[", "-", "1", "]", "==", "0", "and", "tableau", ".", "c_sol", "[", ":", "-", "1", "]", "==", "tableau", ".", "beta", "[", "-", "1", "]", ")", ":", "\n", "# This property (true for Dormand-Prince) lets us save a few FLOPs.", "\n", "        ", "yi", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "tableau", ".", "c_sol", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "\n", "", "y1", "=", "yi", "\n", "f1", "=", "tuple", "(", "k_", "[", "-", "1", "]", "for", "k_", "in", "k", ")", "\n", "y1_error", "=", "tuple", "(", "_scaled_dot_product", "(", "dt", ",", "tableau", ".", "c_error", ",", "k_", ")", "for", "k_", "in", "k", ")", "\n", "return", "(", "y1", ",", "f1", ",", "y1_error", ",", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.rk_common.rk4_step_func": [[65, 71], ["func", "func", "func", "tuple", "func", "tuple", "tuple", "tuple", "zip", "zip", "zip", "zip"], "function", ["None"], ["", "def", "rk4_step_func", "(", "func", ",", "t", ",", "dt", ",", "y", ",", "k1", "=", "None", ")", ":", "\n", "    ", "if", "k1", "is", "None", ":", "k1", "=", "func", "(", "t", ",", "y", ")", "\n", "k2", "=", "func", "(", "t", "+", "dt", "/", "2", ",", "tuple", "(", "y_", "+", "dt", "*", "k1_", "/", "2", "for", "y_", ",", "k1_", "in", "zip", "(", "y", ",", "k1", ")", ")", ")", "\n", "k3", "=", "func", "(", "t", "+", "dt", "/", "2", ",", "tuple", "(", "y_", "+", "dt", "*", "k2_", "/", "2", "for", "y_", ",", "k2_", "in", "zip", "(", "y", ",", "k2", ")", ")", ")", "\n", "k4", "=", "func", "(", "t", "+", "dt", ",", "tuple", "(", "y_", "+", "dt", "*", "k3_", "for", "y_", ",", "k3_", "in", "zip", "(", "y", ",", "k3", ")", ")", ")", "\n", "return", "tuple", "(", "(", "k1_", "+", "2", "*", "k2_", "+", "2", "*", "k3_", "+", "k4_", ")", "*", "(", "dt", "/", "6", ")", "for", "k1_", ",", "k2_", ",", "k3_", ",", "k4_", "in", "zip", "(", "k1", ",", "k2", ",", "k3", ",", "k4", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.rk_common.rk4_alt_step_func": [[73, 80], ["func", "func", "func", "tuple", "func", "tuple", "tuple", "tuple", "zip", "zip", "zip", "zip"], "function", ["None"], ["", "def", "rk4_alt_step_func", "(", "func", ",", "t", ",", "dt", ",", "y", ",", "k1", "=", "None", ")", ":", "\n", "    ", "\"\"\"Smaller error with slightly more compute.\"\"\"", "\n", "if", "k1", "is", "None", ":", "k1", "=", "func", "(", "t", ",", "y", ")", "\n", "k2", "=", "func", "(", "t", "+", "dt", "/", "3", ",", "tuple", "(", "y_", "+", "dt", "*", "k1_", "/", "3", "for", "y_", ",", "k1_", "in", "zip", "(", "y", ",", "k1", ")", ")", ")", "\n", "k3", "=", "func", "(", "t", "+", "dt", "*", "2", "/", "3", ",", "tuple", "(", "y_", "+", "dt", "*", "(", "k1_", "/", "-", "3", "+", "k2_", ")", "for", "y_", ",", "k1_", ",", "k2_", "in", "zip", "(", "y", ",", "k1", ",", "k2", ")", ")", ")", "\n", "k4", "=", "func", "(", "t", "+", "dt", ",", "tuple", "(", "y_", "+", "dt", "*", "(", "k1_", "-", "k2_", "+", "k3_", ")", "for", "y_", ",", "k1_", ",", "k2_", ",", "k3_", "in", "zip", "(", "y", ",", "k1", ",", "k2", ",", "k3", ")", ")", ")", "\n", "return", "tuple", "(", "(", "k1_", "+", "3", "*", "k2_", "+", "3", "*", "k3_", "+", "k4_", ")", "*", "(", "dt", "/", "8", ")", "for", "k1_", ",", "k2_", ",", "k3_", ",", "k4_", "in", "zip", "(", "k1", ",", "k2", ",", "k3", ",", "k4", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.rk_common.stoch_rk4_step_func": [[82, 89], ["func", "func", "func", "tuple", "torch.randn_like", "func", "tuple", "tuple", "tuple", "zip", "zip", "zip", "zip"], "function", ["None"], ["", "def", "stoch_rk4_step_func", "(", "func", ",", "t", ",", "dt", ",", "y", ",", "k1", "=", "None", ",", "k", "=", "1.0", ")", ":", "\n", "    ", "W", "=", "k", "*", "dt", "**", "0.5", "*", "torch", ".", "randn_like", "(", "y", "[", "0", "]", ")", "\n", "if", "k1", "is", "None", ":", "k1", "=", "func", "(", "t", ",", "y", ")", "\n", "k2", "=", "func", "(", "t", "+", "dt", "/", "2", ",", "tuple", "(", "y_", "+", "dt", "*", "k1_", "/", "2", "+", "W", "/", "2", "for", "y_", ",", "k1_", "in", "zip", "(", "y", ",", "k1", ")", ")", ")", "\n", "k3", "=", "func", "(", "t", "+", "dt", "/", "2", ",", "tuple", "(", "y_", "+", "dt", "*", "k2_", "/", "2", "+", "W", "/", "2", "for", "y_", ",", "k2_", "in", "zip", "(", "y", ",", "k2", ")", ")", ")", "\n", "k4", "=", "func", "(", "t", "+", "dt", ",", "tuple", "(", "y_", "+", "dt", "*", "k3_", "+", "W", "for", "y_", ",", "k3_", "in", "zip", "(", "y", ",", "k3", ")", ")", ")", "\n", "return", "tuple", "(", "(", "k1_", "+", "2", "*", "k2_", "+", "2", "*", "k3_", "+", "k4_", ")", "*", "(", "dt", "/", "6", ")", "+", "W", "for", "k1_", ",", "k2_", ",", "k3_", ",", "k4_", "in", "zip", "(", "k1", ",", "k2", ",", "k3", ",", "k4", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_adams.AdamsBashforthMoulton.__init__": [[153, 165], ["solvers.FixedGridODESolver.__init__", "int", "collections.deque", "min"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", "=", "1e-3", ",", "atol", "=", "1e-4", ",", "implicit", "=", "True", ",", "max_iters", "=", "_MAX_ITERS", ",", "max_order", "=", "_MAX_ORDER", ",", "**", "kwargs", "\n", ")", ":", "\n", "        ", "super", "(", "AdamsBashforthMoulton", ",", "self", ")", ".", "__init__", "(", "func", ",", "y0", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "rtol", "=", "rtol", "\n", "self", ".", "atol", "=", "atol", "\n", "self", ".", "implicit", "=", "implicit", "\n", "self", ".", "max_iters", "=", "max_iters", "\n", "self", ".", "max_order", "=", "int", "(", "min", "(", "max_order", ",", "_MAX_ORDER", ")", ")", "\n", "self", ".", "prev_f", "=", "collections", ".", "deque", "(", "maxlen", "=", "self", ".", "max_order", "-", "1", ")", "\n", "self", ".", "prev_t", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_adams.AdamsBashforthMoulton._update_history": [[166, 170], ["fixed_adams.AdamsBashforthMoulton.prev_f.appendleft"], "methods", ["None"], ["", "def", "_update_history", "(", "self", ",", "t", ",", "f", ")", ":", "\n", "        ", "if", "self", ".", "prev_t", "is", "None", "or", "self", ".", "prev_t", "!=", "t", ":", "\n", "            ", "self", ".", "prev_f", ".", "appendleft", "(", "f", ")", "\n", "self", ".", "prev_t", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_adams.AdamsBashforthMoulton.step_func": [[171, 202], ["fixed_adams.AdamsBashforthMoulton._update_history", "min", "func", "len", "rk_common.rk4_alt_step_func", "tuple", "tuple", "range", "fixed_adams.AdamsBashforthMoulton._update_history", "func", "tuple", "misc._has_converged", "print", "fixed_adams.AdamsBashforthMoulton.prev_f.pop", "misc._scaled_dot_product", "zip", "tuple", "misc._scaled_dot_product", "zip", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_adams.AdamsBashforthMoulton._update_history", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.rk_common.rk4_alt_step_func", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_adams.AdamsBashforthMoulton._update_history", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._has_converged", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._scaled_dot_product", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._scaled_dot_product"], ["", "", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "self", ".", "_update_history", "(", "t", ",", "func", "(", "t", ",", "y", ")", ")", "\n", "order", "=", "min", "(", "len", "(", "self", ".", "prev_f", ")", ",", "self", ".", "max_order", "-", "1", ")", "\n", "if", "order", "<", "_MIN_ORDER", "-", "1", ":", "\n", "# Compute using RK4.", "\n", "            ", "dy", "=", "rk_common", ".", "rk4_alt_step_func", "(", "func", ",", "t", ",", "dt", ",", "y", ",", "k1", "=", "self", ".", "prev_f", "[", "0", "]", ")", "\n", "return", "dy", "\n", "", "else", ":", "\n", "# Adams-Bashforth predictor.", "\n", "            ", "bashforth_coeffs", "=", "_BASHFORTH_COEFFICIENTS", "[", "order", "]", "\n", "ab_div", "=", "_DIVISOR", "[", "order", "]", "\n", "dy", "=", "tuple", "(", "dt", "*", "_scaled_dot_product", "(", "1", "/", "ab_div", ",", "bashforth_coeffs", ",", "f_", ")", "for", "f_", "in", "zip", "(", "*", "self", ".", "prev_f", ")", ")", "\n", "\n", "# Adams-Moulton corrector.", "\n", "if", "self", ".", "implicit", ":", "\n", "                ", "moulton_coeffs", "=", "_MOULTON_COEFFICIENTS", "[", "order", "+", "1", "]", "\n", "am_div", "=", "_DIVISOR", "[", "order", "+", "1", "]", "\n", "delta", "=", "tuple", "(", "dt", "*", "_scaled_dot_product", "(", "1", "/", "am_div", ",", "moulton_coeffs", "[", "1", ":", "]", ",", "f_", ")", "for", "f_", "in", "zip", "(", "*", "self", ".", "prev_f", ")", ")", "\n", "converged", "=", "False", "\n", "for", "_", "in", "range", "(", "self", ".", "max_iters", ")", ":", "\n", "                    ", "dy_old", "=", "dy", "\n", "f", "=", "func", "(", "t", "+", "dt", ",", "tuple", "(", "y_", "+", "dy_", "for", "y_", ",", "dy_", "in", "zip", "(", "y", ",", "dy", ")", ")", ")", "\n", "dy", "=", "tuple", "(", "dt", "*", "(", "moulton_coeffs", "[", "0", "]", "/", "am_div", ")", "*", "f_", "+", "delta_", "for", "f_", ",", "delta_", "in", "zip", "(", "f", ",", "delta", ")", ")", "\n", "converged", "=", "_has_converged", "(", "dy_old", ",", "dy", ",", "self", ".", "rtol", ",", "self", ".", "atol", ")", "\n", "if", "converged", ":", "\n", "                        ", "break", "\n", "", "", "if", "not", "converged", ":", "\n", "                    ", "print", "(", "'Warning: Functional iteration did not converge. Solution may be incorrect.'", ",", "file", "=", "sys", ".", "stderr", ")", "\n", "self", ".", "prev_f", ".", "pop", "(", ")", "\n", "", "self", ".", "_update_history", "(", "t", ",", "f", ")", "\n", "", "return", "dy", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_adams.AdamsBashforthMoulton.order": [[203, 206], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "return", "4", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_adams.AdamsBashforth.__init__": [[210, 212], ["fixed_adams.AdamsBashforthMoulton.__init__"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["    ", "def", "__init__", "(", "self", ",", "func", ",", "y0", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "AdamsBashforth", ",", "self", ")", ".", "__init__", "(", "func", ",", "y0", ",", "implicit", "=", "False", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.dopri5.Dopri5Solver.__init__": [[60, 76], ["misc._handle_unused_kwargs", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._is_iterable", "misc._is_iterable", "len", "len"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_iterable", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_iterable"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", ",", "atol", ",", "first_step", "=", "None", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "max_num_steps", "=", "2", "**", "31", "-", "1", ",", "\n", "**", "unused_kwargs", "\n", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "rtol", "=", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "atol", "=", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "first_step", "=", "first_step", "\n", "self", ".", "safety", "=", "_convert_to_tensor", "(", "safety", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "ifactor", "=", "_convert_to_tensor", "(", "ifactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "dfactor", "=", "_convert_to_tensor", "(", "dfactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "max_num_steps", "=", "_convert_to_tensor", "(", "max_num_steps", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.dopri5.Dopri5Solver.before_integrate": [[77, 84], ["dopri5.Dopri5Solver.func", "rk_common._RungeKuttaState", "t[].type_as", "misc._select_initial_step().to", "misc._convert_to_tensor", "misc._select_initial_step"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._select_initial_step"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "f0", "=", "self", ".", "func", "(", "t", "[", "0", "]", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", ",", "self", ".", "y0", ")", "\n", "if", "self", ".", "first_step", "is", "None", ":", "\n", "            ", "first_step", "=", "_select_initial_step", "(", "self", ".", "func", ",", "t", "[", "0", "]", ",", "self", ".", "y0", ",", "4", ",", "self", ".", "rtol", "[", "0", "]", ",", "self", ".", "atol", "[", "0", "]", ",", "f0", "=", "f0", ")", ".", "to", "(", "t", ")", "\n", "", "else", ":", "\n", "            ", "first_step", "=", "_convert_to_tensor", "(", "0.01", ",", "dtype", "=", "t", ".", "dtype", ",", "device", "=", "t", ".", "device", ")", "\n", "", "self", ".", "rk_state", "=", "_RungeKuttaState", "(", "self", ".", "y0", ",", "f0", ",", "t", "[", "0", "]", ",", "t", "[", "0", "]", ",", "first_step", ",", "interp_coeff", "=", "[", "self", ".", "y0", "]", "*", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.dopri5.Dopri5Solver.advance": [[85, 93], ["interp._interp_evaluate", "dopri5.Dopri5Solver._adaptive_dopri5_step"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.interp._interp_evaluate", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.dopri5.Dopri5Solver._adaptive_dopri5_step"], ["", "def", "advance", "(", "self", ",", "next_t", ")", ":", "\n", "        ", "\"\"\"Interpolate through the next time point, integrating as necessary.\"\"\"", "\n", "n_steps", "=", "0", "\n", "while", "next_t", ">", "self", ".", "rk_state", ".", "t1", ":", "\n", "            ", "assert", "n_steps", "<", "self", ".", "max_num_steps", ",", "'max_num_steps exceeded ({}>={})'", ".", "format", "(", "n_steps", ",", "self", ".", "max_num_steps", ")", "\n", "self", ".", "rk_state", "=", "self", ".", "_adaptive_dopri5_step", "(", "self", ".", "rk_state", ")", "\n", "n_steps", "+=", "1", "\n", "", "return", "_interp_evaluate", "(", "self", ".", "rk_state", ".", "interp_coeff", ",", "self", ".", "rk_state", ".", "t0", ",", "self", ".", "rk_state", ".", "t1", ",", "next_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.dopri5.Dopri5Solver._adaptive_dopri5_step": [[94, 123], ["rk_common._runge_kutta_step", "misc._compute_error_ratio", "misc._optimal_step_size", "rk_common._RungeKuttaState", "dt.item", "misc._is_finite", "dopri5._interp_fit_dopri5", "torch.abs", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.rk_common._runge_kutta_step", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_finite", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.dopri5._interp_fit_dopri5"], ["", "def", "_adaptive_dopri5_step", "(", "self", ",", "rk_state", ")", ":", "\n", "        ", "\"\"\"Take an adaptive Runge-Kutta step to integrate the ODE.\"\"\"", "\n", "y0", ",", "f0", ",", "_", ",", "t0", ",", "dt", ",", "interp_coeff", "=", "rk_state", "\n", "########################################################", "\n", "#                      Assertions                      #", "\n", "########################################################", "\n", "assert", "t0", "+", "dt", ">", "t0", ",", "'underflow in dt {}'", ".", "format", "(", "dt", ".", "item", "(", ")", ")", "\n", "for", "y0_", "in", "y0", ":", "\n", "            ", "assert", "_is_finite", "(", "torch", ".", "abs", "(", "y0_", ")", ")", ",", "'non-finite values in state `y`: {}'", ".", "format", "(", "y0_", ")", "\n", "", "y1", ",", "f1", ",", "y1_error", ",", "k", "=", "_runge_kutta_step", "(", "self", ".", "func", ",", "y0", ",", "f0", ",", "t0", ",", "dt", ",", "tableau", "=", "_DORMAND_PRINCE_SHAMPINE_TABLEAU", ")", "\n", "\n", "########################################################", "\n", "#                     Error Ratio                      #", "\n", "########################################################", "\n", "mean_sq_error_ratio", "=", "_compute_error_ratio", "(", "y1_error", ",", "atol", "=", "self", ".", "atol", ",", "rtol", "=", "self", ".", "rtol", ",", "y0", "=", "y0", ",", "y1", "=", "y1", ")", "\n", "accept_step", "=", "(", "torch", ".", "tensor", "(", "mean_sq_error_ratio", ")", "<=", "1", ")", ".", "all", "(", ")", "\n", "\n", "########################################################", "\n", "#                   Update RK State                    #", "\n", "########################################################", "\n", "y_next", "=", "y1", "if", "accept_step", "else", "y0", "\n", "f_next", "=", "f1", "if", "accept_step", "else", "f0", "\n", "t_next", "=", "t0", "+", "dt", "if", "accept_step", "else", "t0", "\n", "interp_coeff", "=", "_interp_fit_dopri5", "(", "y0", ",", "y1", ",", "k", ",", "dt", ")", "if", "accept_step", "else", "interp_coeff", "\n", "dt_next", "=", "_optimal_step_size", "(", "\n", "dt", ",", "mean_sq_error_ratio", ",", "safety", "=", "self", ".", "safety", ",", "ifactor", "=", "self", ".", "ifactor", ",", "dfactor", "=", "self", ".", "dfactor", ",", "order", "=", "5", "\n", ")", "\n", "rk_state", "=", "_RungeKuttaState", "(", "y_next", ",", "f_next", ",", "t0", ",", "t_next", ",", "dt_next", ",", "interp_coeff", ")", "\n", "return", "rk_state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.dopri5._interp_fit_dopri5": [[39, 46], ["dt.type_as.type_as", "tuple", "tuple", "tuple", "interp._interp_fit", "misc._scaled_dot_product", "zip"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.interp._interp_fit", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._scaled_dot_product"], ["def", "_interp_fit_dopri5", "(", "y0", ",", "y1", ",", "k", ",", "dt", ",", "tableau", "=", "_DORMAND_PRINCE_SHAMPINE_TABLEAU", ")", ":", "\n", "    ", "\"\"\"Fit an interpolating polynomial to the results of a Runge-Kutta step.\"\"\"", "\n", "dt", "=", "dt", ".", "type_as", "(", "y0", "[", "0", "]", ")", "\n", "y_mid", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "DPS_C_MID", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "f0", "=", "tuple", "(", "k_", "[", "0", "]", "for", "k_", "in", "k", ")", "\n", "f1", "=", "tuple", "(", "k_", "[", "-", "1", "]", "for", "k_", "in", "k", ")", "\n", "return", "_interp_fit", "(", "y0", ",", "y1", ",", "y_mid", ",", "f0", ",", "f1", ",", "dt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.dopri5._abs_square": [[48, 50], ["torch.mul"], "function", ["None"], ["", "def", "_abs_square", "(", "x", ")", ":", "\n", "    ", "return", "torch", ".", "mul", "(", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.dopri5._ta_append": [[52, 56], ["list_of_tensors.append"], "function", ["None"], ["", "def", "_ta_append", "(", "list_of_tensors", ",", "value", ")", ":", "\n", "    ", "\"\"\"Append a value to the end of a list of PyTorch tensors.\"\"\"", "\n", "list_of_tensors", ".", "append", "(", "value", ")", "\n", "return", "list_of_tensors", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.hamiltonianint.HamiltonianInt.forward": [[17, 34], ["x.clone().detach.clone().detach.clone().detach", "p.clone().detach.clone().detach.clone().detach", "ctx.save_for_backward", "torch.no_grad", "range", "x.clone().detach.clone().detach.clone", "p.clone().detach.clone().detach.clone", "len", "range"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "*", "args", ")", ":", "\n", "        ", "potfunc", ",", "kinfunc", ",", "x", ",", "p", ",", "time", ",", "n_steps", "=", "args", "[", "-", "6", "]", ",", "args", "[", "-", "5", "]", ",", "args", "[", "-", "4", "]", ",", "args", "[", "-", "3", "]", ",", "args", "[", "-", "2", "]", ",", "args", "[", "-", "1", "]", "\n", "#TODO: make adequate time grid with step_size instead of n_steps", "\n", "step_size", "=", "(", "time", "[", "1", "]", "-", "time", "[", "0", "]", ")", "/", "n_steps", "\n", "ctx", ".", "potfunc", ",", "ctx", ".", "kinfunc", ",", "ctx", ".", "time", ",", "ctx", ".", "n_steps", ",", "ctx", ".", "step_size", "=", "potfunc", ",", "kinfunc", ",", "time", ",", "n_steps", ",", "step_size", "\n", "x", "=", "x", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "p", "=", "p", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "nblock", "in", "range", "(", "len", "(", "potfunc", ")", ")", ":", "\n", "                ", "for", "t", "in", "range", "(", "n_steps", ")", ":", "\n", "                    ", "x", "+=", "step_size", "*", "kinfunc", "[", "nblock", "]", "(", "0", ",", "p", ")", "/", "2", "\n", "p", "+=", "step_size", "*", "potfunc", "[", "nblock", "]", "(", "0", ",", "x", ")", "\n", "x", "+=", "step_size", "*", "kinfunc", "[", "nblock", "]", "(", "0", ",", "p", ")", "/", "2", "\n", "", "", "", "ctx", ".", "save_for_backward", "(", "x", ",", "p", ")", "\n", "return", "x", ",", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.hamiltonianint.HamiltonianInt.backward": [[35, 71], ["p.detach_", "p.requires_grad_", "range", "range", "len", "range", "len", "potfunc[].parameters", "kinfunc[].parameters", "x.detach_", "torch.autograd.set_grad_enabled", "x.backward", "x.detach_", "p.requires_grad_", "x.requires_grad_", "torch.autograd.set_grad_enabled", "p.backward", "p.detach_", "x.requires_grad_", "p.requires_grad_", "torch.autograd.set_grad_enabled", "x.backward"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adjoint.OdeintAdjointMethod.backward"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "*", "grad_outputs", ")", ":", "\n", "        ", "x", ",", "p", "=", "ctx", ".", "saved_tensors", "\n", "x", ".", "grad", "=", "-", "1", "*", "grad_outputs", "[", "0", "]", "\n", "p", ".", "grad", "=", "-", "1", "*", "grad_outputs", "[", "1", "]", "\n", "p", ".", "detach_", "(", ")", "\n", "p", ".", "requires_grad_", "(", "True", ")", "\n", "potfunc", ",", "kinfunc", ",", "time", ",", "n_steps", ",", "step_size", "=", "ctx", ".", "potfunc", ",", "ctx", ".", "kinfunc", ",", "ctx", ".", "time", ",", "ctx", ".", "n_steps", ",", "ctx", ".", "step_size", "\n", "for", "nblock", "in", "range", "(", "len", "(", "potfunc", ")", ")", ":", "\n", "            ", "for", "t", "in", "range", "(", "n_steps", ")", ":", "\n", "                ", "x", ".", "detach_", "(", ")", "\n", "torch", ".", "autograd", ".", "set_grad_enabled", "(", "True", ")", "\n", "x", "-=", "step_size", "*", "kinfunc", "[", "-", "nblock", "-", "1", "]", "(", "0", ",", "p", ")", "/", "2", "\n", "x", ".", "backward", "(", "-", "1", "*", "x", ".", "grad", ")", "\n", "\n", "x", ".", "detach_", "(", ")", "\n", "p", ".", "requires_grad_", "(", "False", ")", "\n", "x", ".", "requires_grad_", "(", "True", ")", "\n", "torch", ".", "autograd", ".", "set_grad_enabled", "(", "True", ")", "\n", "p", "-=", "step_size", "*", "potfunc", "[", "-", "nblock", "-", "1", "]", "(", "0", ",", "x", ")", "\n", "p", ".", "backward", "(", "-", "1", "*", "p", ".", "grad", ")", "\n", "\n", "p", ".", "detach_", "(", ")", "\n", "x", ".", "requires_grad_", "(", "False", ")", "\n", "p", ".", "requires_grad_", "(", "True", ")", "\n", "torch", ".", "autograd", ".", "set_grad_enabled", "(", "True", ")", "\n", "x", "-=", "step_size", "*", "kinfunc", "[", "-", "nblock", "-", "1", "]", "(", "0", ",", "p", ")", "/", "2", "\n", "x", ".", "backward", "(", "-", "1", "*", "x", ".", "grad", ")", "\n", "\n", "", "", "for", "nblock", "in", "range", "(", "len", "(", "potfunc", ")", ")", ":", "\n", "            ", "for", "param", "in", "potfunc", "[", "nblock", "]", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "grad", "*=", "-", "1", "\n", "", "for", "param", "in", "kinfunc", "[", "nblock", "]", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "grad", "*=", "-", "1", "\n", "\n", "", "", "return", "None", ",", "None", ",", "-", "1", "*", "x", ".", "grad", ",", "-", "1", "*", "p", ".", "grad", ",", "None", ",", "None", "", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.hamiltonianint.hamiltonianint": [[4, 9], ["fixed_grid.LeapFrog", "fixed_grid.LeapFrog.integrate"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver.integrate"], ["def", "hamiltonianint", "(", "pot_energy", ",", "kin_energy", ",", "x0", ",", "p0", ",", "t", ",", "step_size", "=", "1.0", ")", ":", "\n", "\n", "    ", "solver", "=", "LeapFrog", "(", "(", "pot_energy", ",", "kin_energy", ")", ",", "(", "x0", ",", "p0", ")", ",", "step_size", ")", "\n", "solution", "=", "solver", ".", "integrate", "(", "t", ")", "\n", "return", "solution", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.hamiltonianint.hamiltonianint_block": [[10, 14], ["HamiltonianInt.apply"], "function", ["None"], ["", "def", "hamiltonianint_block", "(", "pot_energy", ",", "kin_energy", ",", "x0", ",", "p0", ",", "t", ",", "n_steps", ")", ":", "\n", "\n", "    ", "x", "=", "HamiltonianInt", ".", "apply", "(", "pot_energy", ",", "kin_energy", ",", "x0", ",", "p0", ",", "t", ",", "n_steps", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5.Tsit5Solver.__init__": [[68, 84], ["misc._handle_unused_kwargs", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", ",", "atol", ",", "first_step", "=", "None", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "max_num_steps", "=", "2", "**", "31", "-", "1", ",", "\n", "**", "unused_kwargs", "\n", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "rtol", "=", "rtol", "\n", "self", ".", "atol", "=", "atol", "\n", "self", ".", "first_step", "=", "first_step", "\n", "self", ".", "safety", "=", "_convert_to_tensor", "(", "safety", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "ifactor", "=", "_convert_to_tensor", "(", "ifactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "dfactor", "=", "_convert_to_tensor", "(", "dfactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "max_num_steps", "=", "_convert_to_tensor", "(", "max_num_steps", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5.Tsit5Solver.before_integrate": [[85, 94], ["rk_common._RungeKuttaState", "misc._select_initial_step().to", "misc._convert_to_tensor", "tsit5.Tsit5Solver.func", "tuple", "t[].type_as", "map", "misc._select_initial_step"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._select_initial_step"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "if", "self", ".", "first_step", "is", "None", ":", "\n", "            ", "first_step", "=", "_select_initial_step", "(", "self", ".", "func", ",", "t", "[", "0", "]", ",", "self", ".", "y0", ",", "4", ",", "self", ".", "rtol", ",", "self", ".", "atol", ")", ".", "to", "(", "t", ")", "\n", "", "else", ":", "\n", "            ", "first_step", "=", "_convert_to_tensor", "(", "0.01", ",", "dtype", "=", "t", ".", "dtype", ",", "device", "=", "t", ".", "device", ")", "\n", "", "self", ".", "rk_state", "=", "_RungeKuttaState", "(", "\n", "self", ".", "y0", ",", "\n", "self", ".", "func", "(", "t", "[", "0", "]", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", ",", "self", ".", "y0", ")", ",", "t", "[", "0", "]", ",", "t", "[", "0", "]", ",", "first_step", ",", "\n", "tuple", "(", "map", "(", "lambda", "x", ":", "[", "x", "]", "*", "7", ",", "self", ".", "y0", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5.Tsit5Solver.advance": [[96, 104], ["tsit5._interp_eval_tsit5", "tsit5.Tsit5Solver._adaptive_tsit5_step"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5._interp_eval_tsit5", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5.Tsit5Solver._adaptive_tsit5_step"], ["", "def", "advance", "(", "self", ",", "next_t", ")", ":", "\n", "        ", "\"\"\"Interpolate through the next time point, integrating as necessary.\"\"\"", "\n", "n_steps", "=", "0", "\n", "while", "next_t", ">", "self", ".", "rk_state", ".", "t1", ":", "\n", "            ", "assert", "n_steps", "<", "self", ".", "max_num_steps", ",", "'max_num_steps exceeded ({}>={})'", ".", "format", "(", "n_steps", ",", "self", ".", "max_num_steps", ")", "\n", "self", ".", "rk_state", "=", "self", ".", "_adaptive_tsit5_step", "(", "self", ".", "rk_state", ")", "\n", "n_steps", "+=", "1", "\n", "", "return", "_interp_eval_tsit5", "(", "self", ".", "rk_state", ".", "t0", ",", "self", ".", "rk_state", ".", "t1", ",", "self", ".", "rk_state", ".", "interp_coeff", ",", "next_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5.Tsit5Solver._adaptive_tsit5_step": [[105, 140], ["rk_common._runge_kutta_step", "tuple", "tuple", "tuple", "tsit5._optimal_step_size", "rk_common._RungeKuttaState", "dt.item", "misc._is_finite", "sum", "sum", "torch.abs", "torch.mul", "zip", "zip", "torch.sum", "sq_error_ratio_.numel", "torch.max", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.rk_common._runge_kutta_step", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_finite"], ["", "def", "_adaptive_tsit5_step", "(", "self", ",", "rk_state", ")", ":", "\n", "        ", "\"\"\"Take an adaptive Runge-Kutta step to integrate the ODE.\"\"\"", "\n", "y0", ",", "f0", ",", "_", ",", "t0", ",", "dt", ",", "_", "=", "rk_state", "\n", "########################################################", "\n", "#                      Assertions                      #", "\n", "########################################################", "\n", "assert", "t0", "+", "dt", ">", "t0", ",", "'underflow in dt {}'", ".", "format", "(", "dt", ".", "item", "(", ")", ")", "\n", "for", "y0_", "in", "y0", ":", "\n", "            ", "assert", "_is_finite", "(", "torch", ".", "abs", "(", "y0_", ")", ")", ",", "'non-finite values in state `y`: {}'", ".", "format", "(", "y0_", ")", "\n", "", "y1", ",", "f1", ",", "y1_error", ",", "k", "=", "_runge_kutta_step", "(", "self", ".", "func", ",", "y0", ",", "f0", ",", "t0", ",", "dt", ",", "tableau", "=", "_TSITOURAS_TABLEAU", ")", "\n", "\n", "########################################################", "\n", "#                     Error Ratio                      #", "\n", "########################################################", "\n", "error_tol", "=", "tuple", "(", "self", ".", "atol", "+", "self", ".", "rtol", "*", "torch", ".", "max", "(", "torch", ".", "abs", "(", "y0_", ")", ",", "torch", ".", "abs", "(", "y1_", ")", ")", "for", "y0_", ",", "y1_", "in", "zip", "(", "y0", ",", "y1", ")", ")", "\n", "tensor_error_ratio", "=", "tuple", "(", "y1_error_", "/", "error_tol_", "for", "y1_error_", ",", "error_tol_", "in", "zip", "(", "y1_error", ",", "error_tol", ")", ")", "\n", "sq_error_ratio", "=", "tuple", "(", "\n", "torch", ".", "mul", "(", "tensor_error_ratio_", ",", "tensor_error_ratio_", ")", "for", "tensor_error_ratio_", "in", "tensor_error_ratio", "\n", ")", "\n", "mean_error_ratio", "=", "(", "\n", "sum", "(", "torch", ".", "sum", "(", "sq_error_ratio_", ")", "for", "sq_error_ratio_", "in", "sq_error_ratio", ")", "/", "\n", "sum", "(", "sq_error_ratio_", ".", "numel", "(", ")", "for", "sq_error_ratio_", "in", "sq_error_ratio", ")", "\n", ")", "\n", "accept_step", "=", "mean_error_ratio", "<=", "1", "\n", "\n", "########################################################", "\n", "#                   Update RK State                    #", "\n", "########################################################", "\n", "y_next", "=", "y1", "if", "accept_step", "else", "y0", "\n", "f_next", "=", "f1", "if", "accept_step", "else", "f0", "\n", "t_next", "=", "t0", "+", "dt", "if", "accept_step", "else", "t0", "\n", "dt_next", "=", "_optimal_step_size", "(", "dt", ",", "mean_error_ratio", ",", "self", ".", "safety", ",", "self", ".", "ifactor", ",", "self", ".", "dfactor", ")", "\n", "k_next", "=", "k", "if", "accept_step", "else", "self", ".", "rk_state", ".", "interp_coeff", "\n", "rk_state", "=", "_RungeKuttaState", "(", "y_next", ",", "f_next", ",", "t0", ",", "t_next", ",", "dt_next", ",", "k_next", ")", "\n", "return", "rk_state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5._interp_coeff_tsit5": [[30, 40], ["float"], "function", ["None"], ["def", "_interp_coeff_tsit5", "(", "t0", ",", "dt", ",", "eval_t", ")", ":", "\n", "    ", "t", "=", "float", "(", "(", "eval_t", "-", "t0", ")", "/", "dt", ")", "\n", "b1", "=", "-", "1.0530884977290216", "*", "t", "*", "(", "t", "-", "1.3299890189751412", ")", "*", "(", "t", "**", "2", "-", "1.4364028541716351", "*", "t", "+", "0.7139816917074209", ")", "\n", "b2", "=", "0.1017", "*", "t", "**", "2", "*", "(", "t", "**", "2", "-", "2.1966568338249754", "*", "t", "+", "1.2949852507374631", ")", "\n", "b3", "=", "2.490627285651252793", "*", "t", "**", "2", "*", "(", "t", "**", "2", "-", "2.38535645472061657", "*", "t", "+", "1.57803468208092486", ")", "\n", "b4", "=", "-", "16.54810288924490272", "*", "(", "t", "-", "1.21712927295533244", ")", "*", "(", "t", "-", "0.61620406037800089", ")", "*", "t", "**", "2", "\n", "b5", "=", "47.37952196281928122", "*", "(", "t", "-", "1.203071208372362603", ")", "*", "(", "t", "-", "0.658047292653547382", ")", "*", "t", "**", "2", "\n", "b6", "=", "-", "34.87065786149660974", "*", "(", "t", "-", "1.2", ")", "*", "(", "t", "-", "0.666666666666666667", ")", "*", "t", "**", "2", "\n", "b7", "=", "2.5", "*", "(", "t", "-", "1", ")", "*", "(", "t", "-", "0.6", ")", "*", "t", "**", "2", "\n", "return", "[", "b1", ",", "b2", ",", "b3", ",", "b4", ",", "b5", ",", "b6", ",", "b7", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5._interp_eval_tsit5": [[42, 48], ["tuple", "tsit5._interp_coeff_tsit5", "tuple", "misc._scaled_dot_product", "zip"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5._interp_coeff_tsit5", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._scaled_dot_product"], ["", "def", "_interp_eval_tsit5", "(", "t0", ",", "t1", ",", "k", ",", "eval_t", ")", ":", "\n", "    ", "dt", "=", "t1", "-", "t0", "\n", "y0", "=", "tuple", "(", "k_", "[", "0", "]", "for", "k_", "in", "k", ")", "\n", "interp_coeff", "=", "_interp_coeff_tsit5", "(", "t0", ",", "dt", ",", "eval_t", ")", "\n", "y_t", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "interp_coeff", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "return", "y_t", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5._optimal_step_size": [[50, 60], ["torch.sqrt().type_as", "torch.tensor().type_as", "torch.max", "misc._convert_to_tensor", "torch.min", "torch.sqrt", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor"], ["", "def", "_optimal_step_size", "(", "last_step", ",", "mean_error_ratio", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "order", "=", "5", ")", ":", "\n", "    ", "\"\"\"Calculate the optimal size for the next Runge-Kutta step.\"\"\"", "\n", "if", "mean_error_ratio", "==", "0", ":", "\n", "        ", "return", "last_step", "*", "ifactor", "\n", "", "if", "mean_error_ratio", "<", "1", ":", "\n", "        ", "dfactor", "=", "_convert_to_tensor", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "mean_error_ratio", ".", "device", ")", "\n", "", "error_ratio", "=", "torch", ".", "sqrt", "(", "mean_error_ratio", ")", ".", "type_as", "(", "last_step", ")", "\n", "exponent", "=", "torch", ".", "tensor", "(", "1", "/", "order", ")", ".", "type_as", "(", "last_step", ")", "\n", "factor", "=", "torch", ".", "max", "(", "1", "/", "ifactor", ",", "torch", ".", "min", "(", "error_ratio", "**", "exponent", "/", "safety", ",", "1", "/", "dfactor", ")", ")", "\n", "return", "last_step", "/", "factor", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.tsit5._abs_square": [[62, 64], ["torch.mul"], "function", ["None"], ["", "def", "_abs_square", "(", "x", ")", ":", "\n", "    ", "return", "torch", ".", "mul", "(", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.odeint.odeint": [[22, 79], ["misc._check_inputs", "solver.integrate", "ValueError"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._check_inputs", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver.integrate"], ["def", "odeint", "(", "func", ",", "y0", ",", "t", ",", "rtol", "=", "1e-7", ",", "atol", "=", "1e-9", ",", "method", "=", "None", ",", "options", "=", "None", ")", ":", "\n", "    ", "\"\"\"Integrate a system of ordinary differential equations.\n\n    Solves the initial value problem for a non-stiff system of first order ODEs:\n        ```\n        dy/dt = func(t, y), y(t[0]) = y0\n        ```\n    where y is a Tensor of any shape.\n\n    Output dtypes and numerical precision are based on the dtypes of the inputs `y0`.\n\n    Args:\n        func: Function that maps a Tensor holding the state `y` and a scalar Tensor\n            `t` into a Tensor of state derivatives with respect to time.\n        y0: N-D Tensor giving starting value of `y` at time point `t[0]`. May\n            have any floating point or complex dtype.\n        t: 1-D Tensor holding a sequence of time points for which to solve for\n            `y`. The initial time point should be the first element of this sequence,\n            and each time must be larger than the previous time. May have any floating\n            point dtype. Converted to a Tensor with float64 dtype.\n        rtol: optional float64 Tensor specifying an upper bound on relative error,\n            per element of `y`.\n        atol: optional float64 Tensor specifying an upper bound on absolute error,\n            per element of `y`.\n        method: optional string indicating the integration method to use.\n        options: optional dict of configuring options for the indicated integration\n            method. Can only be provided if a `method` is explicitly set.\n        name: Optional name for this operation.\n\n    Returns:\n        y: Tensor, where the first dimension corresponds to different\n            time points. Contains the solved value of y for each desired time point in\n            `t`, with the initial value `y0` being the first element along the first\n            dimension.\n\n    Raises:\n        ValueError: if an invalid `method` is provided.\n        TypeError: if `options` is supplied without `method`, or if `t` or `y0` has\n            an invalid dtype.\n    \"\"\"", "\n", "\n", "tensor_input", ",", "func", ",", "y0", ",", "t", "=", "_check_inputs", "(", "func", ",", "y0", ",", "t", ")", "\n", "\n", "if", "options", "is", "None", ":", "\n", "        ", "options", "=", "{", "}", "\n", "", "elif", "method", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "'cannot supply `options` without specifying `method`'", ")", "\n", "\n", "", "if", "method", "is", "None", ":", "\n", "        ", "method", "=", "'dopri5'", "\n", "\n", "", "solver", "=", "SOLVERS", "[", "method", "]", "(", "func", ",", "y0", ",", "rtol", "=", "rtol", ",", "atol", "=", "atol", ",", "**", "options", ")", "\n", "solution", "=", "solver", ".", "integrate", "(", "t", ")", "\n", "\n", "if", "tensor_input", ":", "\n", "        ", "solution", "=", "solution", "[", "0", "]", "\n", "", "return", "solution", "\n", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adjoint.OdeintAdjointMethod.forward": [[9, 21], ["ctx.save_for_backward", "len", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "odeint"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.odeint.odeint"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "*", "args", ")", ":", "\n", "        ", "assert", "len", "(", "args", ")", ">=", "8", ",", "'Internal error: all arguments required.'", "\n", "y0", ",", "func", ",", "t", ",", "flat_params", ",", "rtol", ",", "atol", ",", "method", ",", "options", "=", "args", "[", ":", "-", "7", "]", ",", "args", "[", "-", "7", "]", ",", "args", "[", "-", "6", "]", ",", "args", "[", "-", "5", "]", ",", "args", "[", "-", "4", "]", ",", "args", "[", "-", "3", "]", ",", "args", "[", "-", "2", "]", ",", "args", "[", "-", "1", "]", "\n", "\n", "ctx", ".", "func", ",", "ctx", ".", "rtol", ",", "ctx", ".", "atol", ",", "ctx", ".", "method", ",", "ctx", ".", "options", "=", "func", ",", "rtol", ",", "atol", ",", "method", ",", "options", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "ans", "=", "odeint", "(", "func", ",", "y0", ",", "t", ",", "rtol", "=", "rtol", ",", "atol", "=", "atol", ",", "method", "=", "method", ",", "options", "=", "options", ")", "\n", "", "ctx", ".", "save_for_backward", "(", "t", ",", "flat_params", ",", "*", "ans", ")", "\n", "return", "ans", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adjoint.OdeintAdjointMethod.backward": [[22, 103], ["tuple", "len", "tuple", "func.parameters", "tuple", "misc._flatten_convert_none_to_zeros", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "tuple", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "range", "torch.cat.append", "torch.cat.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "t.to().detach().requires_grad_.to().detach().requires_grad_.to().detach().requires_grad_", "tuple", "func", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "len", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "tuple", "tuple", "func", "sum", "torch.cat.append", "torch.cat.append", "odeint", "tuple", "tuple", "tuple", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor().to.numel", "torch.tensor().to.numel", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len", "len", "t.to().detach().requires_grad_.to().detach().requires_grad_.to().detach", "y_.detach().requires_grad_", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "zip", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.dot().reshape", "torch.dot().reshape", "torch.dot().reshape", "torch.dot().reshape", "zip", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "zip", "t.to().detach().requires_grad_.to().detach().requires_grad_.to", "y_.detach", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "len", "func_i_.reshape", "grad_output_i_.reshape"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._flatten_convert_none_to_zeros", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.odeint.odeint"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "*", "grad_output", ")", ":", "\n", "\n", "        ", "t", ",", "flat_params", ",", "*", "ans", "=", "ctx", ".", "saved_tensors", "\n", "ans", "=", "tuple", "(", "ans", ")", "\n", "func", ",", "rtol", ",", "atol", ",", "method", ",", "options", "=", "ctx", ".", "func", ",", "ctx", ".", "rtol", ",", "ctx", ".", "atol", ",", "ctx", ".", "method", ",", "ctx", ".", "options", "\n", "n_tensors", "=", "len", "(", "ans", ")", "\n", "f_params", "=", "tuple", "(", "func", ".", "parameters", "(", ")", ")", "\n", "\n", "# TODO: use a nn.Module and call odeint_adjoint to implement higher order derivatives.", "\n", "def", "augmented_dynamics", "(", "t", ",", "y_aug", ")", ":", "\n", "# Dynamics of the original system augmented with", "\n", "# the adjoint wrt y, and an integrator wrt t and args.", "\n", "            ", "y", ",", "adj_y", "=", "y_aug", "[", ":", "n_tensors", "]", ",", "y_aug", "[", "n_tensors", ":", "2", "*", "n_tensors", "]", "# Ignore adj_time and adj_params.", "\n", "\n", "with", "torch", ".", "set_grad_enabled", "(", "True", ")", ":", "\n", "                ", "t", "=", "t", ".", "to", "(", "y", "[", "0", "]", ".", "device", ")", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "y", "=", "tuple", "(", "y_", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "for", "y_", "in", "y", ")", "\n", "func_eval", "=", "func", "(", "t", ",", "y", ")", "\n", "vjp_t", ",", "*", "vjp_y_and_params", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "func_eval", ",", "(", "t", ",", ")", "+", "y", "+", "f_params", ",", "\n", "tuple", "(", "-", "adj_y_", "for", "adj_y_", "in", "adj_y", ")", ",", "allow_unused", "=", "True", ",", "retain_graph", "=", "True", "\n", ")", "\n", "", "vjp_y", "=", "vjp_y_and_params", "[", ":", "n_tensors", "]", "\n", "vjp_params", "=", "vjp_y_and_params", "[", "n_tensors", ":", "]", "\n", "\n", "# autograd.grad returns None if no gradient, set to zero.", "\n", "vjp_t", "=", "torch", ".", "zeros_like", "(", "t", ")", "if", "vjp_t", "is", "None", "else", "vjp_t", "\n", "vjp_y", "=", "tuple", "(", "torch", ".", "zeros_like", "(", "y_", ")", "if", "vjp_y_", "is", "None", "else", "vjp_y_", "for", "vjp_y_", ",", "y_", "in", "zip", "(", "vjp_y", ",", "y", ")", ")", "\n", "vjp_params", "=", "_flatten_convert_none_to_zeros", "(", "vjp_params", ",", "f_params", ")", "\n", "\n", "if", "len", "(", "f_params", ")", "==", "0", ":", "\n", "                ", "vjp_params", "=", "torch", ".", "tensor", "(", "0.", ")", ".", "to", "(", "vjp_y", "[", "0", "]", ")", "\n", "", "return", "(", "*", "func_eval", ",", "*", "vjp_y", ",", "vjp_t", ",", "vjp_params", ")", "\n", "\n", "", "T", "=", "ans", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "adj_y", "=", "tuple", "(", "grad_output_", "[", "-", "1", "]", "for", "grad_output_", "in", "grad_output", ")", "\n", "adj_params", "=", "torch", ".", "zeros_like", "(", "flat_params", ")", "\n", "adj_time", "=", "torch", ".", "tensor", "(", "0.", ")", ".", "to", "(", "t", ")", "\n", "time_vjps", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "T", "-", "1", ",", "0", ",", "-", "1", ")", ":", "\n", "\n", "                ", "ans_i", "=", "tuple", "(", "ans_", "[", "i", "]", "for", "ans_", "in", "ans", ")", "\n", "grad_output_i", "=", "tuple", "(", "grad_output_", "[", "i", "]", "for", "grad_output_", "in", "grad_output", ")", "\n", "func_i", "=", "func", "(", "t", "[", "i", "]", ",", "ans_i", ")", "\n", "\n", "# Compute the effect of moving the current time measurement point.", "\n", "dLd_cur_t", "=", "sum", "(", "\n", "torch", ".", "dot", "(", "func_i_", ".", "reshape", "(", "-", "1", ")", ",", "grad_output_i_", ".", "reshape", "(", "-", "1", ")", ")", ".", "reshape", "(", "1", ")", "\n", "for", "func_i_", ",", "grad_output_i_", "in", "zip", "(", "func_i", ",", "grad_output_i", ")", "\n", ")", "\n", "adj_time", "=", "adj_time", "-", "dLd_cur_t", "\n", "time_vjps", ".", "append", "(", "dLd_cur_t", ")", "\n", "\n", "# Run the augmented system backwards in time.", "\n", "if", "adj_params", ".", "numel", "(", ")", "==", "0", ":", "\n", "                    ", "adj_params", "=", "torch", ".", "tensor", "(", "0.", ")", ".", "to", "(", "adj_y", "[", "0", "]", ")", "\n", "", "aug_y0", "=", "(", "*", "ans_i", ",", "*", "adj_y", ",", "adj_time", ",", "adj_params", ")", "\n", "aug_ans", "=", "odeint", "(", "\n", "augmented_dynamics", ",", "aug_y0", ",", "\n", "torch", ".", "tensor", "(", "[", "t", "[", "i", "]", ",", "t", "[", "i", "-", "1", "]", "]", ")", ",", "rtol", "=", "rtol", ",", "atol", "=", "atol", ",", "method", "=", "method", ",", "options", "=", "options", "\n", ")", "\n", "\n", "# Unpack aug_ans.", "\n", "adj_y", "=", "aug_ans", "[", "n_tensors", ":", "2", "*", "n_tensors", "]", "\n", "adj_time", "=", "aug_ans", "[", "2", "*", "n_tensors", "]", "\n", "adj_params", "=", "aug_ans", "[", "2", "*", "n_tensors", "+", "1", "]", "\n", "\n", "adj_y", "=", "tuple", "(", "adj_y_", "[", "1", "]", "if", "len", "(", "adj_y_", ")", ">", "0", "else", "adj_y_", "for", "adj_y_", "in", "adj_y", ")", "\n", "if", "len", "(", "adj_time", ")", ">", "0", ":", "adj_time", "=", "adj_time", "[", "1", "]", "\n", "if", "len", "(", "adj_params", ")", ">", "0", ":", "adj_params", "=", "adj_params", "[", "1", "]", "\n", "\n", "adj_y", "=", "tuple", "(", "adj_y_", "+", "grad_output_", "[", "i", "-", "1", "]", "for", "adj_y_", ",", "grad_output_", "in", "zip", "(", "adj_y", ",", "grad_output", ")", ")", "\n", "\n", "del", "aug_y0", ",", "aug_ans", "\n", "\n", "", "time_vjps", ".", "append", "(", "adj_time", ")", "\n", "time_vjps", "=", "torch", ".", "cat", "(", "time_vjps", "[", ":", ":", "-", "1", "]", ")", "\n", "\n", "return", "(", "*", "adj_y", ",", "None", ",", "time_vjps", ",", "adj_params", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adjoint.odeint_adjoint": [[105, 134], ["torch.is_tensor", "torch.is_tensor", "misc._flatten", "OdeintAdjointMethod.apply", "isinstance", "ValueError", "TupleFunc", "TupleFunc.parameters", "super().__init__", "adjoint..base_func"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._flatten", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["", "", "", "def", "odeint_adjoint", "(", "func", ",", "y0", ",", "t", ",", "rtol", "=", "1e-6", ",", "atol", "=", "1e-12", ",", "method", "=", "None", ",", "options", "=", "None", ")", ":", "\n", "\n", "# We need this in order to access the variables inside this module,", "\n", "# since we have no other way of getting variables along the execution path.", "\n", "    ", "if", "not", "isinstance", "(", "func", ",", "nn", ".", "Module", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'func is required to be an instance of nn.Module.'", ")", "\n", "\n", "", "tensor_input", "=", "False", "\n", "if", "torch", ".", "is_tensor", "(", "y0", ")", ":", "\n", "\n", "        ", "class", "TupleFunc", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "            ", "def", "__init__", "(", "self", ",", "base_func", ")", ":", "\n", "                ", "super", "(", "TupleFunc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_func", "=", "base_func", "\n", "\n", "", "def", "forward", "(", "self", ",", "t", ",", "y", ")", ":", "\n", "                ", "return", "(", "self", ".", "base_func", "(", "t", ",", "y", "[", "0", "]", ")", ",", ")", "\n", "\n", "", "", "tensor_input", "=", "True", "\n", "y0", "=", "(", "y0", ",", ")", "\n", "func", "=", "TupleFunc", "(", "func", ")", "\n", "\n", "", "flat_params", "=", "_flatten", "(", "func", ".", "parameters", "(", ")", ")", "\n", "ys", "=", "OdeintAdjointMethod", ".", "apply", "(", "*", "y0", ",", "func", ",", "t", ",", "flat_params", ",", "rtol", ",", "atol", ",", "method", ",", "options", ")", "\n", "\n", "if", "tensor_input", ":", "\n", "        ", "ys", "=", "ys", "[", "0", "]", "\n", "", "return", "ys", "\n", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_grid.Euler.step_func": [[9, 11], ["tuple", "func"], "methods", ["None"], ["    ", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "return", "tuple", "(", "dt", "*", "f_", "for", "f_", "in", "func", "(", "t", ",", "y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_grid.Euler.order": [[12, 15], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_grid.Midpoint.step_func": [[19, 22], ["tuple", "tuple", "zip", "func", "func"], "methods", ["None"], ["    ", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "y_mid", "=", "tuple", "(", "y_", "+", "f_", "*", "dt", "/", "2", "for", "y_", ",", "f_", "in", "zip", "(", "y", ",", "func", "(", "t", ",", "y", ")", ")", ")", "\n", "return", "tuple", "(", "dt", "*", "f_", "for", "f_", "in", "func", "(", "t", "+", "dt", "/", "2", ",", "y_mid", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_grid.Midpoint.order": [[23, 26], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "return", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_grid.RK4.step_func": [[30, 32], ["rk_common.rk4_alt_step_func"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.rk_common.rk4_alt_step_func"], ["    ", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "return", "rk_common", ".", "rk4_alt_step_func", "(", "func", ",", "t", ",", "dt", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_grid.RK4.order": [[33, 36], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "return", "4", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_grid.stoch_RK4.step_func": [[39, 41], ["rk_common.stoch_rk4_step_func"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.rk_common.stoch_rk4_step_func"], ["    ", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "return", "rk_common", ".", "stoch_rk4_step_func", "(", "func", ",", "t", ",", "dt", ",", "y", ",", "k", "=", "self", ".", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_grid.stoch_RK4.order": [[42, 45], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "return", "4", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_grid.RK4_noise_after_step.step_func": [[48, 51], ["rk_common.rk4_alt_step_func", "tuple", "torch.randn_like"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.rk_common.rk4_alt_step_func"], ["    ", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "next_y", "=", "rk_common", ".", "rk4_alt_step_func", "(", "func", ",", "t", ",", "dt", ",", "y", ")", "\n", "return", "tuple", "(", "y_", "+", "self", ".", "k", "*", "torch", ".", "randn_like", "(", "y_", ")", "for", "y_", "in", "next_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.fixed_grid.RK4_noise_after_step.order": [[52, 55], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "return", "4", "", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.AdaptiveStepsizeODESolver.__init__": [[9, 17], ["misc._handle_unused_kwargs"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._handle_unused_kwargs"], ["def", "__init__", "(", "self", ",", "func", ",", "y0", ",", "atol", ",", "rtol", ",", "**", "unused_kwargs", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "atol", "=", "atol", "\n", "self", ".", "rtol", "=", "rtol", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.AdaptiveStepsizeODESolver.before_integrate": [[18, 20], ["None"], "methods", ["None"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.AdaptiveStepsizeODESolver.advance": [[21, 24], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "advance", "(", "self", ",", "next_t", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.AdaptiveStepsizeODESolver.integrate": [[25, 34], ["misc._assert_increasing", "t.to.to.to", "solvers.AdaptiveStepsizeODESolver.before_integrate", "range", "tuple", "len", "solvers.AdaptiveStepsizeODESolver.advance", "solution.append", "map", "tuple", "zip"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._assert_increasing", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.VariableCoefficientAdamsBashforth.before_integrate", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.VariableCoefficientAdamsBashforth.advance"], ["", "def", "integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "_assert_increasing", "(", "t", ")", "\n", "solution", "=", "[", "self", ".", "y0", "]", "\n", "t", "=", "t", ".", "to", "(", "self", ".", "y0", "[", "0", "]", ".", "device", ",", "torch", ".", "float64", ")", "\n", "self", ".", "before_integrate", "(", "t", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "t", ")", ")", ":", "\n", "            ", "y", "=", "self", ".", "advance", "(", "t", "[", "i", "]", ")", "\n", "solution", ".", "append", "(", "y", ")", "\n", "", "return", "tuple", "(", "map", "(", "torch", ".", "stack", ",", "tuple", "(", "zip", "(", "*", "solution", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver.__init__": [[39, 55], ["unused_kwargs.pop", "unused_kwargs.pop", "misc._handle_unused_kwargs", "solvers.FixedGridODESolver._grid_constructor_from_step_size", "ValueError"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver._grid_constructor_from_step_size"], ["def", "__init__", "(", "self", ",", "func", ",", "y0", ",", "step_size", "=", "None", ",", "k", "=", "None", ",", "grid_constructor", "=", "None", ",", "**", "unused_kwargs", ")", ":", "\n", "        ", "unused_kwargs", ".", "pop", "(", "'rtol'", ",", "None", ")", "\n", "unused_kwargs", ".", "pop", "(", "'atol'", ",", "None", ")", "\n", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "if", "k", "is", "not", "None", ":", "\n", "            ", "self", ".", "k", "=", "k", "\n", "", "if", "step_size", "is", "not", "None", "and", "grid_constructor", "is", "None", ":", "\n", "            ", "self", ".", "grid_constructor", "=", "self", ".", "_grid_constructor_from_step_size", "(", "step_size", ")", "\n", "", "elif", "grid_constructor", "is", "None", ":", "\n", "            ", "self", ".", "grid_constructor", "=", "lambda", "f", ",", "y0", ",", "t", ":", "t", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"step_size and grid_constructor are exclusive arguments.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver._grid_constructor_from_step_size": [[56, 70], ["torch.ceil().item", "torch.ceil", "torch.arange().to", "torch.arange"], "methods", ["None"], ["", "", "def", "_grid_constructor_from_step_size", "(", "self", ",", "step_size", ")", ":", "\n", "\n", "        ", "def", "_grid_constructor", "(", "func", ",", "y0", ",", "t", ")", ":", "\n", "            ", "start_time", "=", "t", "[", "0", "]", "\n", "end_time", "=", "t", "[", "-", "1", "]", "\n", "\n", "niters", "=", "torch", ".", "ceil", "(", "(", "end_time", "-", "start_time", ")", "/", "step_size", "+", "1", ")", ".", "item", "(", ")", "\n", "t_infer", "=", "torch", ".", "arange", "(", "0", ",", "niters", ")", ".", "to", "(", "t", ")", "*", "step_size", "+", "start_time", "\n", "if", "t_infer", "[", "-", "1", "]", ">", "t", "[", "-", "1", "]", ":", "\n", "                ", "t_infer", "[", "-", "1", "]", "=", "t", "[", "-", "1", "]", "\n", "\n", "", "return", "t_infer", "\n", "\n", "", "return", "_grid_constructor", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver.order": [[71, 75], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "abc", ".", "abstractmethod", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver.step_func": [[76, 79], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver.integrate": [[80, 100], ["misc._assert_increasing", "t.type_as.type_as.type_as", "solvers.FixedGridODESolver.grid_constructor", "time_grid.to.to.to", "zip", "tuple", "solvers.FixedGridODESolver.step_func", "tuple", "map", "solution.append", "tuple", "len", "solvers.FixedGridODESolver._linear_interp", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._assert_increasing", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver.step_func", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver._linear_interp"], ["", "def", "integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "_assert_increasing", "(", "t", ")", "\n", "t", "=", "t", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", "\n", "time_grid", "=", "self", ".", "grid_constructor", "(", "self", ".", "func", ",", "self", ".", "y0", ",", "t", ")", "\n", "assert", "time_grid", "[", "0", "]", "==", "t", "[", "0", "]", "and", "time_grid", "[", "-", "1", "]", "==", "t", "[", "-", "1", "]", "\n", "time_grid", "=", "time_grid", ".", "to", "(", "self", ".", "y0", "[", "0", "]", ")", "\n", "\n", "solution", "=", "[", "self", ".", "y0", "]", "\n", "\n", "j", "=", "1", "\n", "y0", "=", "self", ".", "y0", "\n", "for", "t0", ",", "t1", "in", "zip", "(", "time_grid", "[", ":", "-", "1", "]", ",", "time_grid", "[", "1", ":", "]", ")", ":", "\n", "            ", "dy", "=", "self", ".", "step_func", "(", "self", ".", "func", ",", "t0", ",", "t1", "-", "t0", ",", "y0", ")", "\n", "y1", "=", "tuple", "(", "y0_", "+", "dy_", "for", "y0_", ",", "dy_", "in", "zip", "(", "y0", ",", "dy", ")", ")", "\n", "y0", "=", "y1", "\n", "while", "j", "<", "len", "(", "t", ")", "and", "t1", ">=", "t", "[", "j", "]", ":", "\n", "                ", "solution", ".", "append", "(", "self", ".", "_linear_interp", "(", "t0", ",", "t1", ",", "y0", ",", "y1", ",", "t", "[", "j", "]", ")", ")", "\n", "j", "+=", "1", "\n", "\n", "", "", "return", "tuple", "(", "map", "(", "torch", ".", "stack", ",", "tuple", "(", "zip", "(", "*", "solution", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.solvers.FixedGridODESolver._linear_interp": [[101, 109], ["tuple", "tuple", "t0.to", "t1.to", "t.to", "zip", "zip"], "methods", ["None"], ["", "def", "_linear_interp", "(", "self", ",", "t0", ",", "t1", ",", "y0", ",", "y1", ",", "t", ")", ":", "\n", "        ", "if", "t", "==", "t0", ":", "\n", "            ", "return", "y0", "\n", "", "if", "t", "==", "t1", ":", "\n", "            ", "return", "y1", "\n", "", "t0", ",", "t1", ",", "t", "=", "t0", ".", "to", "(", "y0", "[", "0", "]", ")", ",", "t1", ".", "to", "(", "y0", "[", "0", "]", ")", ",", "t", ".", "to", "(", "y0", "[", "0", "]", ")", "\n", "slope", "=", "tuple", "(", "(", "y1_", "-", "y0_", ")", "/", "(", "t1", "-", "t0", ")", "for", "y0_", ",", "y1_", ",", "in", "zip", "(", "y0", ",", "y1", ")", ")", "\n", "return", "tuple", "(", "y0_", "+", "slope_", "*", "(", "t", "-", "t0", ")", "for", "y0_", ",", "slope_", "in", "zip", "(", "y0", ",", "slope", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._flatten": [[5, 8], ["p.contiguous().view", "torch.cat", "torch.tensor", "len", "p.contiguous"], "function", ["None"], ["def", "_flatten", "(", "sequence", ")", ":", "\n", "    ", "flat", "=", "[", "p", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "for", "p", "in", "sequence", "]", "\n", "return", "torch", ".", "cat", "(", "flat", ")", "if", "len", "(", "flat", ")", ">", "0", "else", "torch", ".", "tensor", "(", "[", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._flatten_convert_none_to_zeros": [[10, 16], ["torch.cat", "torch.tensor", "p.contiguous().view", "torch.zeros_like().view", "zip", "len", "p.contiguous", "torch.zeros_like"], "function", ["None"], ["", "def", "_flatten_convert_none_to_zeros", "(", "sequence", ",", "like_sequence", ")", ":", "\n", "    ", "flat", "=", "[", "\n", "p", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "if", "p", "is", "not", "None", "else", "torch", ".", "zeros_like", "(", "q", ")", ".", "view", "(", "-", "1", ")", "\n", "for", "p", ",", "q", "in", "zip", "(", "sequence", ",", "like_sequence", ")", "\n", "]", "\n", "return", "torch", ".", "cat", "(", "flat", ")", "if", "len", "(", "flat", ")", ">", "0", "else", "torch", ".", "tensor", "(", "[", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._possibly_nonzero": [[18, 20], ["isinstance"], "function", ["None"], ["", "def", "_possibly_nonzero", "(", "x", ")", ":", "\n", "    ", "return", "isinstance", "(", "x", ",", "torch", ".", "Tensor", ")", "or", "x", "!=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._scaled_dot_product": [[22, 26], ["sum", "zip", "misc._possibly_nonzero", "misc._possibly_nonzero"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._possibly_nonzero", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._possibly_nonzero"], ["", "def", "_scaled_dot_product", "(", "scale", ",", "xs", ",", "ys", ")", ":", "\n", "    ", "\"\"\"Calculate a scaled, vector inner product between lists of Tensors.\"\"\"", "\n", "# Using _possibly_nonzero lets us avoid wasted computation.", "\n", "return", "sum", "(", "[", "(", "scale", "*", "x", ")", "*", "y", "for", "x", ",", "y", "in", "zip", "(", "xs", ",", "ys", ")", "if", "_possibly_nonzero", "(", "x", ")", "or", "_possibly_nonzero", "(", "y", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._dot_product": [[28, 31], ["sum", "zip"], "function", ["None"], ["", "def", "_dot_product", "(", "xs", ",", "ys", ")", ":", "\n", "    ", "\"\"\"Calculate the vector inner product between two lists of Tensors.\"\"\"", "\n", "return", "sum", "(", "[", "x", "*", "y", "for", "x", ",", "y", "in", "zip", "(", "xs", ",", "ys", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._has_converged": [[33, 38], ["tuple", "tuple", "all", "torch.abs", "zip", "zip", "zip", "torch.max", "torch.abs", "torch.abs"], "function", ["None"], ["", "def", "_has_converged", "(", "y0", ",", "y1", ",", "rtol", ",", "atol", ")", ":", "\n", "    ", "\"\"\"Checks that each element is within the error tolerance.\"\"\"", "\n", "error_tol", "=", "tuple", "(", "atol", "+", "rtol", "*", "torch", ".", "max", "(", "torch", ".", "abs", "(", "y0_", ")", ",", "torch", ".", "abs", "(", "y1_", ")", ")", "for", "y0_", ",", "y1_", "in", "zip", "(", "y0", ",", "y1", ")", ")", "\n", "error", "=", "tuple", "(", "torch", ".", "abs", "(", "y0_", "-", "y1_", ")", "for", "y0_", ",", "y1_", "in", "zip", "(", "y0", ",", "y1", ")", ")", "\n", "return", "all", "(", "(", "error_", "<", "error_tol_", ")", ".", "all", "(", ")", "for", "error_", ",", "error_tol_", "in", "zip", "(", "error", ",", "error_tol", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor": [[40, 48], ["isinstance", "torch.tensor", "a.to.type", "a.to.to"], "function", ["None"], ["", "def", "_convert_to_tensor", "(", "a", ",", "dtype", "=", "None", ",", "device", "=", "None", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "a", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "a", "=", "torch", ".", "tensor", "(", "a", ")", "\n", "", "if", "dtype", "is", "not", "None", ":", "\n", "        ", "a", "=", "a", ".", "type", "(", "dtype", ")", "\n", "", "if", "device", "is", "not", "None", ":", "\n", "        ", "a", "=", "a", ".", "to", "(", "device", ")", "\n", "", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_finite": [[50, 53], ["torch.isnan", "_check.any", "float", "float"], "function", ["None"], ["", "def", "_is_finite", "(", "tensor", ")", ":", "\n", "    ", "_check", "=", "(", "tensor", "==", "float", "(", "'inf'", ")", ")", "+", "(", "tensor", "==", "float", "(", "'-inf'", ")", ")", "+", "torch", ".", "isnan", "(", "tensor", ")", "\n", "return", "not", "_check", ".", "any", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._decreasing": [[55, 57], ["None"], "function", ["None"], ["", "def", "_decreasing", "(", "t", ")", ":", "\n", "    ", "return", "(", "t", "[", "1", ":", "]", "<", "t", "[", ":", "-", "1", "]", ")", ".", "all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._assert_increasing": [[59, 61], ["None"], "function", ["None"], ["", "def", "_assert_increasing", "(", "t", ")", ":", "\n", "    ", "assert", "(", "t", "[", "1", ":", "]", ">", "t", "[", ":", "-", "1", "]", ")", ".", "all", "(", ")", ",", "'t must be strictly increasing or decrasing'", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_iterable": [[63, 69], ["iter"], "function", ["None"], ["", "def", "_is_iterable", "(", "inputs", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "iter", "(", "inputs", ")", "\n", "return", "True", "\n", "", "except", "TypeError", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._norm": [[71, 77], ["torch.is_tensor", "torch.sqrt", "x.norm", "x.numel", "sum", "sum", "x_.numel", "x_.norm"], "function", ["None"], ["", "", "def", "_norm", "(", "x", ")", ":", "\n", "    ", "\"\"\"Compute RMS norm.\"\"\"", "\n", "if", "torch", ".", "is_tensor", "(", "x", ")", ":", "\n", "        ", "return", "x", ".", "norm", "(", ")", "/", "(", "x", ".", "numel", "(", ")", "**", "0.5", ")", "\n", "", "else", ":", "\n", "        ", "return", "torch", ".", "sqrt", "(", "sum", "(", "x_", ".", "norm", "(", ")", "**", "2", "for", "x_", "in", "x", ")", "/", "sum", "(", "x_", ".", "numel", "(", ")", "for", "x_", "in", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._handle_unused_kwargs": [[79, 82], ["len", "warnings.warn"], "function", ["None"], ["", "", "def", "_handle_unused_kwargs", "(", "solver", ",", "unused_kwargs", ")", ":", "\n", "    ", "if", "len", "(", "unused_kwargs", ")", ">", "0", ":", "\n", "        ", "warnings", ".", "warn", "(", "'{}: Unexpected arguments {}'", ".", "format", "(", "solver", ".", "__class__", ".", "__name__", ",", "unused_kwargs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._select_initial_step": [[84, 144], ["t0.to.to", "tuple", "tuple", "tuple", "tuple", "fun", "tuple", "torch.min", "fun", "misc._is_iterable", "misc._is_iterable", "torch.tensor().to", "torch.max", "len", "len", "misc._norm", "misc._norm", "max().item", "max().item", "max", "max().item", "max().item", "torch.tensor().to", "zip", "zip", "zip", "torch.tensor", "zip", "misc._norm", "zip", "max", "float", "torch.abs", "max", "max", "max", "max", "torch.tensor", "zip"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_iterable", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_iterable", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._norm", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._norm", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._norm"], ["", "", "def", "_select_initial_step", "(", "fun", ",", "t0", ",", "y0", ",", "order", ",", "rtol", ",", "atol", ",", "f0", "=", "None", ")", ":", "\n", "    ", "\"\"\"Empirically select a good initial step.\n\n    The algorithm is described in [1]_.\n\n    Parameters\n    ----------\n    fun : callable\n        Right-hand side of the system.\n    t0 : float\n        Initial value of the independent variable.\n    y0 : ndarray, shape (n,)\n        Initial value of the dependent variable.\n    direction : float\n        Integration direction.\n    order : float\n        Method order.\n    rtol : float\n        Desired relative tolerance.\n    atol : float\n        Desired absolute tolerance.\n\n    Returns\n    -------\n    h_abs : float\n        Absolute value of the suggested initial step.\n\n    References\n    ----------\n    .. [1] E. Hairer, S. P. Norsett G. Wanner, \"Solving Ordinary Differential\n           Equations I: Nonstiff Problems\", Sec. II.4.\n    \"\"\"", "\n", "t0", "=", "t0", ".", "to", "(", "y0", "[", "0", "]", ")", "\n", "if", "f0", "is", "None", ":", "\n", "        ", "f0", "=", "fun", "(", "t0", ",", "y0", ")", "\n", "\n", "", "rtol", "=", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "atol", "=", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "\n", "scale", "=", "tuple", "(", "atol_", "+", "torch", ".", "abs", "(", "y0_", ")", "*", "rtol_", "for", "y0_", ",", "atol_", ",", "rtol_", "in", "zip", "(", "y0", ",", "atol", ",", "rtol", ")", ")", "\n", "\n", "d0", "=", "tuple", "(", "_norm", "(", "y0_", "/", "scale_", ")", "for", "y0_", ",", "scale_", "in", "zip", "(", "y0", ",", "scale", ")", ")", "\n", "d1", "=", "tuple", "(", "_norm", "(", "f0_", "/", "scale_", ")", "for", "f0_", ",", "scale_", "in", "zip", "(", "f0", ",", "scale", ")", ")", "\n", "\n", "if", "max", "(", "d0", ")", ".", "item", "(", ")", "<", "1e-5", "or", "max", "(", "d1", ")", ".", "item", "(", ")", "<", "1e-5", ":", "\n", "        ", "h0", "=", "torch", ".", "tensor", "(", "1e-6", ")", ".", "to", "(", "t0", ")", "\n", "", "else", ":", "\n", "        ", "h0", "=", "0.01", "*", "max", "(", "d0_", "/", "d1_", "for", "d0_", ",", "d1_", "in", "zip", "(", "d0", ",", "d1", ")", ")", "\n", "\n", "", "y1", "=", "tuple", "(", "y0_", "+", "h0", "*", "f0_", "for", "y0_", ",", "f0_", "in", "zip", "(", "y0", ",", "f0", ")", ")", "\n", "f1", "=", "fun", "(", "t0", "+", "h0", ",", "y1", ")", "\n", "\n", "d2", "=", "tuple", "(", "_norm", "(", "(", "f1_", "-", "f0_", ")", "/", "scale_", ")", "/", "h0", "for", "f1_", ",", "f0_", ",", "scale_", "in", "zip", "(", "f1", ",", "f0", ",", "scale", ")", ")", "\n", "\n", "if", "max", "(", "d1", ")", ".", "item", "(", ")", "<=", "1e-15", "and", "max", "(", "d2", ")", ".", "item", "(", ")", "<=", "1e-15", ":", "\n", "        ", "h1", "=", "torch", ".", "max", "(", "torch", ".", "tensor", "(", "1e-6", ")", ".", "to", "(", "h0", ")", ",", "h0", "*", "1e-3", ")", "\n", "", "else", ":", "\n", "        ", "h1", "=", "(", "0.01", "/", "max", "(", "d1", "+", "d2", ")", ")", "**", "(", "1.", "/", "float", "(", "order", "+", "1", ")", ")", "\n", "\n", "", "return", "torch", ".", "min", "(", "100", "*", "h0", ",", "h1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._compute_error_ratio": [[146, 158], ["tuple", "tuple", "tuple", "misc._is_iterable", "misc._is_iterable", "torch.mean", "len", "len", "zip", "zip", "torch.max", "torch.abs", "torch.abs"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_iterable", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_iterable"], ["", "def", "_compute_error_ratio", "(", "error_estimate", ",", "error_tol", "=", "None", ",", "rtol", "=", "None", ",", "atol", "=", "None", ",", "y0", "=", "None", ",", "y1", "=", "None", ")", ":", "\n", "    ", "if", "error_tol", "is", "None", ":", "\n", "        ", "assert", "rtol", "is", "not", "None", "and", "atol", "is", "not", "None", "and", "y0", "is", "not", "None", "and", "y1", "is", "not", "None", "\n", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "error_tol", "=", "tuple", "(", "\n", "atol_", "+", "rtol_", "*", "torch", ".", "max", "(", "torch", ".", "abs", "(", "y0_", ")", ",", "torch", ".", "abs", "(", "y1_", ")", ")", "\n", "for", "atol_", ",", "rtol_", ",", "y0_", ",", "y1_", "in", "zip", "(", "atol", ",", "rtol", ",", "y0", ",", "y1", ")", "\n", ")", "\n", "", "error_ratio", "=", "tuple", "(", "error_estimate_", "/", "error_tol_", "for", "error_estimate_", ",", "error_tol_", "in", "zip", "(", "error_estimate", ",", "error_tol", ")", ")", "\n", "mean_sq_error_ratio", "=", "tuple", "(", "torch", ".", "mean", "(", "error_ratio_", "*", "error_ratio_", ")", "for", "error_ratio_", "in", "error_ratio", ")", "\n", "return", "mean_sq_error_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._optimal_step_size": [[160, 171], ["max", "torch.sqrt().to", "torch.tensor().to", "torch.max", "misc._convert_to_tensor", "torch.min", "torch.sqrt", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor"], ["", "def", "_optimal_step_size", "(", "last_step", ",", "mean_error_ratio", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "order", "=", "5", ")", ":", "\n", "    ", "\"\"\"Calculate the optimal size for the next step.\"\"\"", "\n", "mean_error_ratio", "=", "max", "(", "mean_error_ratio", ")", "# Compute step size based on highest ratio.", "\n", "if", "mean_error_ratio", "==", "0", ":", "\n", "        ", "return", "last_step", "*", "ifactor", "\n", "", "if", "mean_error_ratio", "<", "1", ":", "\n", "        ", "dfactor", "=", "_convert_to_tensor", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "mean_error_ratio", ".", "device", ")", "\n", "", "error_ratio", "=", "torch", ".", "sqrt", "(", "mean_error_ratio", ")", ".", "to", "(", "last_step", ")", "\n", "exponent", "=", "torch", ".", "tensor", "(", "1", "/", "order", ")", ".", "to", "(", "last_step", ")", "\n", "factor", "=", "torch", ".", "max", "(", "1", "/", "ifactor", ",", "torch", ".", "min", "(", "error_ratio", "**", "exponent", "/", "safety", ",", "1", "/", "dfactor", ")", ")", "\n", "return", "last_step", "/", "factor", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._check_inputs": [[173, 196], ["torch.is_tensor", "isinstance", "misc._decreasing", "torch.is_tensor", "torch.is_floating_point", "TypeError", "type", "tuple", "torch.is_floating_point", "TypeError", "_base_nontuple_func_", "t.type", "y0_.type", "_base_reverse_func"], "function", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._decreasing"], ["", "def", "_check_inputs", "(", "func", ",", "y0", ",", "t", ")", ":", "\n", "    ", "tensor_input", "=", "False", "\n", "if", "torch", ".", "is_tensor", "(", "y0", ")", ":", "\n", "        ", "tensor_input", "=", "True", "\n", "y0", "=", "(", "y0", ",", ")", "\n", "_base_nontuple_func_", "=", "func", "\n", "func", "=", "lambda", "t", ",", "y", ":", "(", "_base_nontuple_func_", "(", "t", ",", "y", "[", "0", "]", ")", ",", ")", "\n", "", "assert", "isinstance", "(", "y0", ",", "tuple", ")", ",", "'y0 must be either a torch.Tensor or a tuple'", "\n", "for", "y0_", "in", "y0", ":", "\n", "        ", "assert", "torch", ".", "is_tensor", "(", "y0_", ")", ",", "'each element must be a torch.Tensor but received {}'", ".", "format", "(", "type", "(", "y0_", ")", ")", "\n", "\n", "", "if", "_decreasing", "(", "t", ")", ":", "\n", "        ", "t", "=", "-", "t", "\n", "_base_reverse_func", "=", "func", "\n", "func", "=", "lambda", "t", ",", "y", ":", "tuple", "(", "-", "f_", "for", "f_", "in", "_base_reverse_func", "(", "-", "t", ",", "y", ")", ")", "\n", "\n", "", "for", "y0_", "in", "y0", ":", "\n", "        ", "if", "not", "torch", ".", "is_floating_point", "(", "y0_", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'`y0` must be a floating point Tensor but is a {}'", ".", "format", "(", "y0_", ".", "type", "(", ")", ")", ")", "\n", "", "", "if", "not", "torch", ".", "is_floating_point", "(", "t", ")", ":", "\n", "        ", "raise", "TypeError", "(", "'`t` must be a floating point Tensor but is a {}'", ".", "format", "(", "t", ".", "type", "(", ")", ")", ")", "\n", "\n", "", "return", "tensor_input", ",", "func", ",", "y0", ",", "t", "\n", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.VariableCoefficientAdamsBashforth.__init__": [[63, 79], ["misc._handle_unused_kwargs", "int", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._is_iterable", "misc._is_iterable", "max", "len", "len", "min"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_iterable", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._is_iterable"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", ",", "atol", ",", "implicit", "=", "True", ",", "max_order", "=", "_MAX_ORDER", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "\n", "**", "unused_kwargs", "\n", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "rtol", "=", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "atol", "=", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "implicit", "=", "implicit", "\n", "self", ".", "max_order", "=", "int", "(", "max", "(", "_MIN_ORDER", ",", "min", "(", "max_order", ",", "_MAX_ORDER", ")", ")", ")", "\n", "self", ".", "safety", "=", "_convert_to_tensor", "(", "safety", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "ifactor", "=", "_convert_to_tensor", "(", "ifactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "dfactor", "=", "_convert_to_tensor", "(", "dfactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.VariableCoefficientAdamsBashforth.before_integrate": [[80, 93], ["collections.deque", "collections.deque", "collections.deque", "adams.VariableCoefficientAdamsBashforth.func", "collections.deque.appendleft", "collections.deque.appendleft", "collections.deque.appendleft", "misc._select_initial_step().to", "adams._VCABMState", "t0.type_as", "misc._select_initial_step"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._select_initial_step"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "prev_f", "=", "collections", ".", "deque", "(", "maxlen", "=", "self", ".", "max_order", "+", "1", ")", "\n", "prev_t", "=", "collections", ".", "deque", "(", "maxlen", "=", "self", ".", "max_order", "+", "1", ")", "\n", "phi", "=", "collections", ".", "deque", "(", "maxlen", "=", "self", ".", "max_order", ")", "\n", "\n", "t0", "=", "t", "[", "0", "]", "\n", "f0", "=", "self", ".", "func", "(", "t0", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", ",", "self", ".", "y0", ")", "\n", "prev_t", ".", "appendleft", "(", "t0", ")", "\n", "prev_f", ".", "appendleft", "(", "f0", ")", "\n", "phi", ".", "appendleft", "(", "f0", ")", "\n", "first_step", "=", "_select_initial_step", "(", "self", ".", "func", ",", "t", "[", "0", "]", ",", "self", ".", "y0", ",", "2", ",", "self", ".", "rtol", "[", "0", "]", ",", "self", ".", "atol", "[", "0", "]", ",", "f0", "=", "f0", ")", ".", "to", "(", "t", ")", "\n", "\n", "self", ".", "vcabm_state", "=", "_VCABMState", "(", "self", ".", "y0", ",", "prev_f", ",", "prev_t", ",", "next_t", "=", "t", "[", "0", "]", "+", "first_step", ",", "phi", "=", "phi", ",", "order", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.VariableCoefficientAdamsBashforth.advance": [[94, 100], ["misc._convert_to_tensor().to", "adams.VariableCoefficientAdamsBashforth._adaptive_adams_step", "misc._convert_to_tensor"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.VariableCoefficientAdamsBashforth._adaptive_adams_step", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._convert_to_tensor"], ["", "def", "advance", "(", "self", ",", "final_t", ")", ":", "\n", "        ", "final_t", "=", "_convert_to_tensor", "(", "final_t", ")", ".", "to", "(", "self", ".", "vcabm_state", ".", "prev_t", "[", "0", "]", ")", "\n", "while", "final_t", ">", "self", ".", "vcabm_state", ".", "prev_t", "[", "0", "]", ":", "\n", "            ", "self", ".", "vcabm_state", "=", "self", ".", "_adaptive_adams_step", "(", "self", ".", "vcabm_state", ",", "final_t", ")", "\n", "", "assert", "final_t", "==", "self", ".", "vcabm_state", ".", "prev_t", "[", "0", "]", "\n", "return", "self", ".", "vcabm_state", ".", "y_n", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.VariableCoefficientAdamsBashforth._adaptive_adams_step": [[101, 171], ["dt.to", "adams.g_and_explicit_phi", "g.to.to.to", "tuple", "adams.VariableCoefficientAdamsBashforth.func", "adams.compute_implicit_phi", "tuple", "tuple", "tuple", "misc._compute_error_ratio", "adams.VariableCoefficientAdamsBashforth.func", "adams.compute_implicit_phi", "prev_f.appendleft", "prev_t.appendleft", "adams._VCABMState", "next_t.to", "misc._optimal_step_size", "adams._VCABMState", "next_t.to", "min", "misc._compute_error_ratio", "misc._compute_error_ratio", "misc._optimal_step_size", "len", "tuple", "tuple", "min", "max", "misc._scaled_dot_product", "zip", "zip", "zip", "torch.tensor", "misc._compute_error_ratio", "tuple", "torch.max", "tuple", "max", "max", "zip", "torch.abs", "torch.abs", "max", "max"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.g_and_explicit_phi", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.compute_implicit_phi", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.compute_implicit_phi", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._scaled_dot_product", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.misc._compute_error_ratio"], ["", "def", "_adaptive_adams_step", "(", "self", ",", "vcabm_state", ",", "final_t", ")", ":", "\n", "        ", "y0", ",", "prev_f", ",", "prev_t", ",", "next_t", ",", "prev_phi", ",", "order", "=", "vcabm_state", "\n", "if", "next_t", ">", "final_t", ":", "\n", "            ", "next_t", "=", "final_t", "\n", "", "dt", "=", "(", "next_t", "-", "prev_t", "[", "0", "]", ")", "\n", "dt_cast", "=", "dt", ".", "to", "(", "y0", "[", "0", "]", ")", "\n", "\n", "# Explicit predictor step.", "\n", "g", ",", "phi", "=", "g_and_explicit_phi", "(", "prev_t", ",", "next_t", ",", "prev_phi", ",", "order", ")", "\n", "g", "=", "g", ".", "to", "(", "y0", "[", "0", "]", ")", "\n", "p_next", "=", "tuple", "(", "\n", "y0_", "+", "_scaled_dot_product", "(", "dt_cast", ",", "g", "[", ":", "max", "(", "1", ",", "order", "-", "1", ")", "]", ",", "phi_", "[", ":", "max", "(", "1", ",", "order", "-", "1", ")", "]", ")", "\n", "for", "y0_", ",", "phi_", "in", "zip", "(", "y0", ",", "tuple", "(", "zip", "(", "*", "phi", ")", ")", ")", "\n", ")", "\n", "\n", "# Update phi to implicit.", "\n", "next_f0", "=", "self", ".", "func", "(", "next_t", ".", "to", "(", "p_next", "[", "0", "]", ")", ",", "p_next", ")", "\n", "implicit_phi_p", "=", "compute_implicit_phi", "(", "phi", ",", "next_f0", ",", "order", "+", "1", ")", "\n", "\n", "# Implicit corrector step.", "\n", "y_next", "=", "tuple", "(", "\n", "p_next_", "+", "dt_cast", "*", "g", "[", "order", "-", "1", "]", "*", "iphi_", "for", "p_next_", ",", "iphi_", "in", "zip", "(", "p_next", ",", "implicit_phi_p", "[", "order", "-", "1", "]", ")", "\n", ")", "\n", "\n", "# Error estimation.", "\n", "tolerance", "=", "tuple", "(", "\n", "atol_", "+", "rtol_", "*", "torch", ".", "max", "(", "torch", ".", "abs", "(", "y0_", ")", ",", "torch", ".", "abs", "(", "y1_", ")", ")", "\n", "for", "atol_", ",", "rtol_", ",", "y0_", ",", "y1_", "in", "zip", "(", "self", ".", "atol", ",", "self", ".", "rtol", ",", "y0", ",", "y_next", ")", "\n", ")", "\n", "local_error", "=", "tuple", "(", "dt_cast", "*", "(", "g", "[", "order", "]", "-", "g", "[", "order", "-", "1", "]", ")", "*", "iphi_", "for", "iphi_", "in", "implicit_phi_p", "[", "order", "]", ")", "\n", "error_k", "=", "_compute_error_ratio", "(", "local_error", ",", "tolerance", ")", "\n", "accept_step", "=", "(", "torch", ".", "tensor", "(", "error_k", ")", "<=", "1", ")", ".", "all", "(", ")", "\n", "\n", "if", "not", "accept_step", ":", "\n", "# Retry with adjusted step size if step is rejected.", "\n", "            ", "dt_next", "=", "_optimal_step_size", "(", "dt", ",", "error_k", ",", "self", ".", "safety", ",", "self", ".", "ifactor", ",", "self", ".", "dfactor", ",", "order", "=", "order", ")", "\n", "return", "_VCABMState", "(", "y0", ",", "prev_f", ",", "prev_t", ",", "prev_t", "[", "0", "]", "+", "dt_next", ",", "prev_phi", ",", "order", "=", "order", ")", "\n", "\n", "# We accept the step. Evaluate f and update phi.", "\n", "", "next_f0", "=", "self", ".", "func", "(", "next_t", ".", "to", "(", "p_next", "[", "0", "]", ")", ",", "y_next", ")", "\n", "implicit_phi", "=", "compute_implicit_phi", "(", "phi", ",", "next_f0", ",", "order", "+", "2", ")", "\n", "\n", "next_order", "=", "order", "\n", "\n", "if", "len", "(", "prev_t", ")", "<=", "4", "or", "order", "<", "3", ":", "\n", "            ", "next_order", "=", "min", "(", "order", "+", "1", ",", "3", ",", "self", ".", "max_order", ")", "\n", "", "else", ":", "\n", "            ", "error_km1", "=", "_compute_error_ratio", "(", "\n", "tuple", "(", "dt_cast", "*", "(", "g", "[", "order", "-", "1", "]", "-", "g", "[", "order", "-", "2", "]", ")", "*", "iphi_", "for", "iphi_", "in", "implicit_phi_p", "[", "order", "-", "1", "]", ")", ",", "tolerance", "\n", ")", "\n", "error_km2", "=", "_compute_error_ratio", "(", "\n", "tuple", "(", "dt_cast", "*", "(", "g", "[", "order", "-", "2", "]", "-", "g", "[", "order", "-", "3", "]", ")", "*", "iphi_", "for", "iphi_", "in", "implicit_phi_p", "[", "order", "-", "2", "]", ")", ",", "tolerance", "\n", ")", "\n", "if", "min", "(", "error_km1", "+", "error_km2", ")", "<", "max", "(", "error_k", ")", ":", "\n", "                ", "next_order", "=", "order", "-", "1", "\n", "", "elif", "order", "<", "self", ".", "max_order", ":", "\n", "                ", "error_kp1", "=", "_compute_error_ratio", "(", "\n", "tuple", "(", "dt_cast", "*", "gamma_star", "[", "order", "]", "*", "iphi_", "for", "iphi_", "in", "implicit_phi_p", "[", "order", "]", ")", ",", "tolerance", "\n", ")", "\n", "if", "max", "(", "error_kp1", ")", "<", "max", "(", "error_k", ")", ":", "\n", "                    ", "next_order", "=", "order", "+", "1", "\n", "\n", "# Keep step size constant if increasing order. Else use adaptive step size.", "\n", "", "", "", "dt_next", "=", "dt", "if", "next_order", ">", "order", "else", "_optimal_step_size", "(", "\n", "dt", ",", "error_k", ",", "self", ".", "safety", ",", "self", ".", "ifactor", ",", "self", ".", "dfactor", ",", "order", "=", "order", "+", "1", "\n", ")", "\n", "\n", "prev_f", ".", "appendleft", "(", "next_f0", ")", "\n", "prev_t", ".", "appendleft", "(", "next_t", ")", "\n", "return", "_VCABMState", "(", "p_next", ",", "prev_f", ",", "prev_t", ",", "next_t", "+", "dt_next", ",", "implicit_phi", ",", "order", "=", "next_order", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.g_and_explicit_phi": [[26, 50], ["torch.empty().to", "collections.deque", "torch.tensor().to", "collections.deque.append", "range", "torch.arange().to", "torch.tensor().to.to", "collections.deque.append", "torch.empty", "torch.tensor", "tuple", "torch.arange"], "function", ["None"], ["", "def", "g_and_explicit_phi", "(", "prev_t", ",", "next_t", ",", "implicit_phi", ",", "k", ")", ":", "\n", "    ", "curr_t", "=", "prev_t", "[", "0", "]", "\n", "dt", "=", "next_t", "-", "prev_t", "[", "0", "]", "\n", "\n", "g", "=", "torch", ".", "empty", "(", "k", "+", "1", ")", ".", "to", "(", "prev_t", "[", "0", "]", ")", "\n", "explicit_phi", "=", "collections", ".", "deque", "(", "maxlen", "=", "k", ")", "\n", "beta", "=", "torch", ".", "tensor", "(", "1", ")", ".", "to", "(", "prev_t", "[", "0", "]", ")", "\n", "\n", "g", "[", "0", "]", "=", "1", "\n", "c", "=", "1", "/", "torch", ".", "arange", "(", "1", ",", "k", "+", "2", ")", ".", "to", "(", "prev_t", "[", "0", "]", ")", "\n", "explicit_phi", ".", "append", "(", "implicit_phi", "[", "0", "]", ")", "\n", "\n", "for", "j", "in", "range", "(", "1", ",", "k", ")", ":", "\n", "        ", "beta", "=", "(", "next_t", "-", "prev_t", "[", "j", "-", "1", "]", ")", "/", "(", "curr_t", "-", "prev_t", "[", "j", "]", ")", "*", "beta", "\n", "beat_cast", "=", "beta", ".", "to", "(", "implicit_phi", "[", "j", "]", "[", "0", "]", ")", "\n", "explicit_phi", ".", "append", "(", "tuple", "(", "iphi_", "*", "beat_cast", "for", "iphi_", "in", "implicit_phi", "[", "j", "]", ")", ")", "\n", "\n", "c", "=", "c", "[", ":", "-", "1", "]", "-", "c", "[", "1", ":", "]", "if", "j", "==", "1", "else", "c", "[", ":", "-", "1", "]", "-", "c", "[", "1", ":", "]", "*", "dt", "/", "(", "next_t", "-", "prev_t", "[", "j", "-", "1", "]", ")", "\n", "g", "[", "j", "]", "=", "c", "[", "0", "]", "\n", "\n", "", "c", "=", "c", "[", ":", "-", "1", "]", "-", "c", "[", "1", ":", "]", "*", "dt", "/", "(", "next_t", "-", "prev_t", "[", "k", "-", "1", "]", ")", "\n", "g", "[", "k", "]", "=", "c", "[", "0", "]", "\n", "\n", "return", "g", ",", "explicit_phi", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode._impl.adams.compute_implicit_phi": [[52, 59], ["min", "collections.deque", "collections.deque.append", "range", "collections.deque.append", "len", "tuple", "zip"], "function", ["None"], ["", "def", "compute_implicit_phi", "(", "explicit_phi", ",", "f_n", ",", "k", ")", ":", "\n", "    ", "k", "=", "min", "(", "len", "(", "explicit_phi", ")", "+", "1", ",", "k", ")", "\n", "implicit_phi", "=", "collections", ".", "deque", "(", "maxlen", "=", "k", ")", "\n", "implicit_phi", ".", "append", "(", "f_n", ")", "\n", "for", "j", "in", "range", "(", "1", ",", "k", ")", ":", "\n", "        ", "implicit_phi", ".", "append", "(", "tuple", "(", "iphi_", "-", "ephi_", "for", "iphi_", ",", "ephi_", "in", "zip", "(", "implicit_phi", "[", "j", "-", "1", "]", ",", "explicit_phi", "[", "j", "-", "1", "]", ")", ")", ")", "\n", "", "return", "implicit_phi", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.__init__": [[62, 78], ["configargparse.ArgumentParser.__init__", "pathlib.Path", "pathlib.Path", "parser.ParserWithRoot.register", "filelock.FileLock", "ValueError", "pathlib.Path.is_absolute", "ValueError", "pathlib.Path.exists", "ValueError", "getattr().mkdir", "str", "getattr"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "root", "=", "None", ",", "zfill", "=", "6", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "if", "root", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "'Root directory is not specified'", ")", "\n", "", "root", "=", "pathlib", ".", "Path", "(", "root", ")", "\n", "if", "not", "root", ".", "is_absolute", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "root", ",", "'Root directory is not absolute path'", ")", "\n", "", "if", "not", "root", ".", "exists", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "root", ",", "'Root directory does not exist'", ")", "\n", "", "self", ".", "root", "=", "pathlib", ".", "Path", "(", "root", ")", "\n", "self", ".", "zfill", "=", "zfill", "\n", "self", ".", "register", "(", "'type'", ",", "bool", ",", "str2bool", ")", "\n", "for", "directory", "in", "RESERVED_DIRECTORIES", ":", "\n", "            ", "getattr", "(", "self", ",", "directory", ")", ".", "mkdir", "(", "exist_ok", "=", "True", ")", "\n", "", "self", ".", "lock", "=", "FileLock", "(", "str", "(", "self", ".", "root", "/", "'lock'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.runs": [[79, 82], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "runs", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root", "/", "'runs'", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.marked": [[83, 86], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "marked", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root", "/", "'marked'", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.index": [[87, 90], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "index", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root", "/", "'index'", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.tmp": [[91, 94], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "tmp", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root", "/", "'tmp'", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.max_ex": [[95, 102], ["itertools.chain", "parser.ParserWithRoot.runs.iterdir", "parser.ParserWithRoot.tmp.iterdir", "int", "directory.name.split"], "methods", ["None"], ["", "def", "max_ex", "(", "self", ")", ":", "\n", "        ", "max_num", "=", "0", "\n", "for", "directory", "in", "itertools", ".", "chain", "(", "self", ".", "runs", ".", "iterdir", "(", ")", ",", "self", ".", "tmp", ".", "iterdir", "(", ")", ")", ":", "\n", "            ", "num", "=", "int", "(", "directory", ".", "name", ".", "split", "(", "'-'", ",", "1", ")", "[", "0", "]", ")", "\n", "if", "num", ">", "max_num", ":", "\n", "                ", "max_num", "=", "num", "\n", "", "", "return", "max_num", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.num_ex": [[103, 105], ["len", "list", "parser.ParserWithRoot.runs.iterdir"], "methods", ["None"], ["", "def", "num_ex", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "list", "(", "self", ".", "runs", ".", "iterdir", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.next_ex": [[106, 108], ["parser.ParserWithRoot.max_ex"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.max_ex"], ["", "def", "next_ex", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "max_ex", "(", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.next_ex_str": [[109, 111], ["str().zfill", "str", "parser.ParserWithRoot.next_ex"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.next_ex"], ["", "def", "next_ex_str", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "next_ex", "(", ")", ")", ".", "zfill", "(", "self", ".", "zfill", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ExParser.__init__": [[135, 148], ["os.path.join", "parser.ParserWithRoot.__init__", "parser.ExParser.add_argument", "parser.ExParser.add_argument", "str"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__"], ["def", "__init__", "(", "self", ",", "*", "args", ",", "zfill", "=", "6", ",", "file", "=", "None", ",", "\n", "args_for_setting_config_path", "=", "(", "'--config'", ",", ")", ",", "\n", "automark", "=", "(", ")", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "root", "=", "os", ".", "path", ".", "join", "(", "os", ".", "environ", "[", "'EXMAN_PATH'", "]", ",", "(", "'exman-'", "+", "str", "(", "file", ")", ")", ")", "\n", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "root", "=", "root", ",", "zfill", "=", "zfill", ",", "\n", "args_for_setting_config_path", "=", "args_for_setting_config_path", ",", "\n", "config_file_parser_class", "=", "configargparse", ".", "YAMLConfigFileParser", ",", "\n", "ignore_unknown_config_file_keys", "=", "True", ",", "\n", "**", "kwargs", ")", "\n", "self", ".", "automark", "=", "automark", "\n", "self", ".", "add_argument", "(", "'--tmp'", ",", "action", "=", "'store_true'", ")", "\n", "self", ".", "add_argument", "(", "'--status'", ",", "default", "=", "'fail'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ExParser._initialize_dir": [[149, 167], ["datetime.datetime.now", "parser.ExParser.next_ex_str", "DIR_FORMAT.format", "absroot.mkdir", "parser.ExParser._initialize_dir", "datetime.datetime.now.strftime", "pathlib.Path", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ParserWithRoot.next_ex_str", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ExParser._initialize_dir"], ["", "def", "_initialize_dir", "(", "self", ",", "tmp", ")", ":", "\n", "        ", "try", ":", "\n", "# with self.lock:  # different processes can make it same time, this is needed to avoid collision", "\n", "            ", "time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "num", "=", "self", ".", "next_ex_str", "(", ")", "\n", "name", "=", "DIR_FORMAT", ".", "format", "(", "num", "=", "num", ",", "time", "=", "time", ".", "strftime", "(", "TIME_FORMAT_DIR", ")", ")", "\n", "if", "tmp", ":", "\n", "                ", "absroot", "=", "self", ".", "tmp", "/", "name", "\n", "relroot", "=", "pathlib", ".", "Path", "(", "'tmp'", ")", "/", "name", "\n", "", "else", ":", "\n", "                ", "absroot", "=", "self", ".", "runs", "/", "name", "\n", "relroot", "=", "pathlib", ".", "Path", "(", "'runs'", ")", "/", "name", "\n", "# this process now safely owns root directory", "\n", "# raises FileExistsError on fail", "\n", "", "absroot", ".", "mkdir", "(", ")", "\n", "", "except", "FileExistsError", ":", "# shit still happens", "\n", "            ", "return", "self", ".", "_initialize_dir", "(", "tmp", ")", "\n", "", "return", "absroot", ",", "relroot", ",", "name", ",", "time", ",", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ExParser.parse_known_args": [[168, 195], ["super().parse_known_args", "parser.ExParser._initialize_dir", "pathlib.Path", "print", "parser.ExParser.yaml_params_path.open", "args.__dict__.copy", "yaml.dump", "yaml.dump", "yaml.dump", "yaml.dump", "print", "print", "parser.ExParser.yaml_params_path.read_text", "parser.yaml_file", "symlink.symlink_to", "print", "pathlib.Path", "pathlib.Path", "pathlib.Path.mkdir", "print", "int", "time.strftime", "itertools.chain.from_iterable", "pathlib.Path", "str", "len", "getattr"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ExParser.parse_known_args", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ExParser._initialize_dir", "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.yaml_file"], ["", "def", "parse_known_args", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "args", ",", "argv", "=", "super", "(", ")", ".", "parse_known_args", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "absroot", ",", "relroot", ",", "name", ",", "time", ",", "num", "=", "self", ".", "_initialize_dir", "(", "args", ".", "tmp", ")", "\n", "args", ".", "root", "=", "absroot", "\n", "self", ".", "yaml_params_path", "=", "args", ".", "root", "/", "PARAMS_FILE", "\n", "rel_yaml_params_path", "=", "pathlib", ".", "Path", "(", "'..'", ",", "'runs'", ",", "name", ",", "PARAMS_FILE", ")", "\n", "with", "self", ".", "yaml_params_path", ".", "open", "(", "'a'", ")", "as", "f", ":", "\n", "            ", "self", ".", "dumpd", "=", "args", ".", "__dict__", ".", "copy", "(", ")", "\n", "#    dumpd['root'] = relroot", "\n", "yaml", ".", "dump", "(", "self", ".", "dumpd", ",", "f", ",", "default_flow_style", "=", "False", ")", "\n", "print", "(", "\"\\ntime: '{}'\"", ".", "format", "(", "time", ".", "strftime", "(", "TIME_FORMAT", ")", ")", ",", "file", "=", "f", ")", "\n", "print", "(", "\"id:\"", ",", "int", "(", "num", ")", ",", "file", "=", "f", ")", "\n", "", "print", "(", "self", ".", "yaml_params_path", ".", "read_text", "(", ")", ")", "\n", "symlink", "=", "self", ".", "index", "/", "yaml_file", "(", "name", ")", "\n", "if", "not", "args", ".", "tmp", ":", "\n", "            ", "symlink", ".", "symlink_to", "(", "rel_yaml_params_path", ")", "\n", "print", "(", "'Created symlink from'", ",", "symlink", ",", "'->'", ",", "rel_yaml_params_path", ")", "\n", "", "if", "self", ".", "automark", "and", "not", "args", ".", "tmp", ":", "\n", "            ", "automark_path_part", "=", "pathlib", ".", "Path", "(", "*", "itertools", ".", "chain", ".", "from_iterable", "(", "\n", "(", "mark", ",", "str", "(", "getattr", "(", "args", ",", "mark", ",", "''", ")", ")", ")", "\n", "for", "mark", "in", "self", ".", "automark", ")", ")", "\n", "markpath", "=", "pathlib", ".", "Path", "(", "self", ".", "marked", ",", "automark_path_part", ")", "\n", "markpath", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "relpathmark", "=", "pathlib", ".", "Path", "(", "'..'", ",", "*", "(", "[", "'..'", "]", "*", "len", "(", "automark_path_part", ".", "parts", ")", ")", ")", "/", "'runs'", "/", "name", "\n", "(", "markpath", "/", "name", ")", ".", "symlink_to", "(", "relpathmark", ",", "target_is_directory", "=", "True", ")", "\n", "print", "(", "'Created symlink from'", ",", "markpath", "/", "name", ",", "'->'", ",", "relpathmark", ")", "\n", "", "return", "args", ",", "argv", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.ExParser.done": [[196, 201], ["print", "parser.ExParser.yaml_params_path.open", "yaml.dump", "yaml.dump", "yaml.dump", "yaml.dump"], "methods", ["None"], ["", "def", "done", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Success.'", ")", "\n", "self", ".", "dumpd", "[", "'status'", "]", "=", "'done'", "\n", "with", "self", ".", "yaml_params_path", ".", "open", "(", "'a'", ")", "as", "f", ":", "\n", "            ", "yaml", ".", "dump", "(", "self", ".", "dumpd", ",", "f", ",", "default_flow_style", "=", "False", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.yaml_file": [[29, 31], ["None"], "function", ["None"], ["def", "yaml_file", "(", "name", ")", ":", "\n", "    ", "return", "name", "+", "'.'", "+", "EXT", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.simpleroot": [[33, 35], ["pathlib.Path", "os.path.dirname", "os.path.abspath"], "function", ["None"], ["", "def", "simpleroot", "(", "__file__", ")", ":", "\n", "    ", "return", "pathlib", ".", "Path", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", ")", "/", "FOLDER_DEFAULT", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.represent_as_str": [[37, 39], ["yaml.representer.Representer.represent_str", "yaml.representer.Representer.represent_str", "tostr"], "function", ["None"], ["", "def", "represent_as_str", "(", "self", ",", "data", ",", "tostr", "=", "str", ")", ":", "\n", "    ", "return", "yaml", ".", "representer", ".", "Representer", ".", "represent_str", "(", "self", ",", "tostr", "(", "data", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.register_str_converter": [[41, 44], ["yaml.add_representer", "yaml.add_representer", "functools.partial", "pathlib.PosixPath", "pathlib.WindowsPath"], "function", ["None"], ["", "def", "register_str_converter", "(", "*", "types", ",", "tostr", "=", "str", ")", ":", "\n", "    ", "for", "T", "in", "types", ":", "\n", "        ", "yaml", ".", "add_representer", "(", "T", ",", "functools", ".", "partial", "(", "represent_as_str", ",", "tostr", "=", "tostr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.parser.str2bool": [[49, 59], ["s.lower", "s.lower", "argparse.ArgumentTypeError", "str"], "function", ["None"], ["def", "str2bool", "(", "s", ")", ":", "\n", "    ", "true", "=", "(", "'true'", ",", "'t'", ",", "'yes'", ",", "'y'", ",", "'on'", ",", "'1'", ")", "\n", "false", "=", "(", "'false'", ",", "'f'", ",", "'no'", ",", "'n'", ",", "'off'", ",", "'0'", ")", "\n", "\n", "if", "s", ".", "lower", "(", ")", "in", "true", ":", "\n", "        ", "return", "True", "\n", "", "elif", "s", ".", "lower", "(", ")", "in", "false", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "raise", "argparse", ".", "ArgumentTypeError", "(", "s", ",", "'bool argument should be one of {}'", ".", "format", "(", "str", "(", "true", "+", "false", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.__init__": [[44, 46], ["pathlib.Path"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ")", ":", "\n", "        ", "self", ".", "root", "=", "pathlib", ".", "Path", "(", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.index": [[47, 50], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "index", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root", "/", "'index'", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.marked": [[51, 54], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "marked", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root", "/", "'marked'", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.info": [[55, 83], ["source.iterdir", "source.glob", "configargparse.YAMLConfigFileParser().parse", "any", "pandas.DataFrame.from_records().apply().sort_values().assign().reset_index", "pandas.DataFrame.from_records().apply().sort_values().assign().reset_index.columns.tolist", "pd.DataFrame.from_records().apply().sort_values().assign().reset_index.columns.tolist.insert", "pandas.DataFrame.from_records().apply().sort_values().assign().reset_index.reindex", "cfg.open", "pandas.Series", "pd.DataFrame.from_records().apply().sort_values().assign().reset_index.columns.tolist.pop", "KeyError", "configargparse.YAMLConfigFileParser", "isinstance", "converter.convert_series", "pandas.DataFrame.from_records().apply().sort_values().assign", "pd.DataFrame.from_records().apply().sort_values().assign().reset_index.columns.tolist.index", "converter.convert_series", "pandas.DataFrame.from_records().apply().sort_values", "_.root.apply", "pandas.DataFrame.from_records().apply", "pandas.DataFrame.from_records", "index.Index.info.convert_column"], "methods", ["home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.Index.index"], ["", "def", "info", "(", "self", ",", "source", "=", "None", ")", ":", "\n", "        ", "if", "source", "is", "None", ":", "\n", "            ", "source", "=", "self", ".", "index", "\n", "files", "=", "source", ".", "iterdir", "(", ")", "\n", "", "else", ":", "\n", "            ", "source", "=", "self", ".", "marked", "/", "source", "\n", "files", "=", "source", ".", "glob", "(", "'**/*/'", "+", "parser", ".", "PARAMS_FILE", ")", "\n", "\n", "", "def", "get_dict", "(", "cfg", ")", ":", "\n", "            ", "return", "configargparse", ".", "YAMLConfigFileParser", "(", ")", ".", "parse", "(", "cfg", ".", "open", "(", "'r'", ")", ")", "\n", "\n", "", "def", "convert_column", "(", "col", ")", ":", "\n", "            ", "if", "any", "(", "isinstance", "(", "v", ",", "str", ")", "for", "v", "in", "converter", ".", "convert_series", "(", "col", ")", ")", ":", "\n", "                ", "return", "col", "\n", "", "else", ":", "\n", "                ", "return", "pd", ".", "Series", "(", "converter", ".", "convert_series", "(", "col", ")", ",", "name", "=", "col", ".", "name", ",", "index", "=", "col", ".", "index", ")", "\n", "", "", "try", ":", "\n", "            ", "df", "=", "(", "pd", ".", "DataFrame", "\n", ".", "from_records", "(", "(", "get_dict", "(", "c", ")", "for", "c", "in", "files", ")", ")", "\n", ".", "apply", "(", "lambda", "s", ":", "convert_column", "(", "s", ")", ")", "\n", ".", "sort_values", "(", "'id'", ")", "\n", ".", "assign", "(", "root", "=", "lambda", "_", ":", "_", ".", "root", ".", "apply", "(", "self", ".", "root", ".", "__truediv__", ")", ")", "\n", ".", "reset_index", "(", "drop", "=", "True", ")", ")", "\n", "cols", "=", "df", ".", "columns", ".", "tolist", "(", ")", "\n", "cols", ".", "insert", "(", "0", ",", "cols", ".", "pop", "(", "cols", ".", "index", "(", "'id'", ")", ")", ")", "\n", "return", "df", ".", "reindex", "(", "columns", "=", "cols", ")", "\n", "", "except", "FileNotFoundError", "as", "e", ":", "\n", "            ", "raise", "KeyError", "(", "source", ".", "name", ")", "from", "e", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.only_value_error": [[14, 22], ["functools.wraps", "conv"], "function", ["None"], ["def", "only_value_error", "(", "conv", ")", ":", "\n", "    ", "@", "functools", ".", "wraps", "(", "conv", ")", "\n", "def", "new_conv", "(", "value", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "conv", "(", "value", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "raise", "ValueError", "from", "e", "\n", "", "", "return", "new_conv", "\n", "\n"]], "home.repos.pwc.inspect_result.AlexandraVolokhova_stochasticity_in_neural_ode.myexman.index.none2none": [[24, 29], ["None"], "function", ["None"], ["", "def", "none2none", "(", "none", ")", ":", "\n", "    ", "if", "none", "is", "None", ":", "\n", "        ", "return", "None", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "\n"]]}