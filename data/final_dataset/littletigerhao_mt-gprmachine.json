{"home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.__init__": [[17, 22], ["gpflow.ci_utils.ci_niter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "X_train", ",", "Y_train", ",", "n_iter", ",", "n_task", ")", ":", "\n", "        ", "self", ".", "X_train", "=", "X_train", "# list of training X used in GPR", "\n", "self", ".", "Y_train", "=", "Y_train", "# list of training Y used in GPR", "\n", "self", ".", "n_iter", "=", "ci_niter", "(", "n_iter", ")", "\n", "self", ".", "n_task", "=", "n_task", "\n", "#===========================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.set_init_kernel": [[24, 29], ["numpy.random.seed", "numpy.random.uniform", "numpy.shape"], "methods", ["None"], ["", "def", "set_init_kernel", "(", "self", ",", "lower", ",", "upper", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", ")", "\n", "x_dim", "=", "np", ".", "shape", "(", "self", ".", "X_train", "[", "0", "]", ")", "[", "1", "]", "\n", "lsv", "=", "np", ".", "random", ".", "uniform", "(", "lower", ",", "upper", ",", "x_dim", ")", "\n", "return", "x_dim", ",", "lsv", "\n", "#===========================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.augment_xy": [[31, 46], ["numpy.zeros", "numpy.hstack", "numpy.hstack", "range", "numpy.asarray().reshape", "numpy.vstack", "numpy.vstack", "numpy.asarray", "numpy.hstack", "numpy.hstack"], "methods", ["None"], ["", "def", "augment_xy", "(", "self", ")", ":", "\n", "        ", "X_task", "=", "self", ".", "X_train", "[", "0", "]", "\n", "Y_task", "=", "self", ".", "Y_train", "[", "0", "]", "\n", "n_train", "=", "X_task", ".", "shape", "[", "0", "]", "\n", "mark", "=", "np", ".", "zeros", "(", "(", "n_train", ",", "1", ")", ")", "\n", "X_augmented", "=", "np", ".", "hstack", "(", "(", "X_task", ",", "mark", ")", ")", "\n", "Y_augmented", "=", "np", ".", "hstack", "(", "(", "Y_task", ",", "mark", ")", ")", "\n", "for", "a", "in", "range", "(", "1", ",", "self", ".", "n_task", ")", ":", "\n", "            ", "X_task", "=", "self", ".", "X_train", "[", "a", "]", "\n", "Y_task", "=", "self", ".", "Y_train", "[", "a", "]", "\n", "n_train", "=", "X_task", ".", "shape", "[", "0", "]", "\n", "mark", "=", "np", ".", "asarray", "(", "[", "a", "]", "*", "n_train", ")", ".", "reshape", "(", "n_train", ",", "1", ")", "\n", "X_augmented", "=", "np", ".", "vstack", "(", "(", "X_augmented", ",", "np", ".", "hstack", "(", "(", "X_task", ",", "mark", ")", ")", ")", ")", "\n", "Y_augmented", "=", "np", ".", "vstack", "(", "(", "Y_augmented", ",", "np", ".", "hstack", "(", "(", "Y_task", ",", "mark", ")", ")", ")", ")", "\n", "", "return", "X_augmented", ",", "Y_augmented", "\n", "#===========================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.build_model": [[48, 68], ["len", "MultiGPRModeller.MultiGPR.set_init_kernel", "gpflow.kernels.Matern52", "gpflow.kernels.Matern32", "gpflow.kernels.RBF", "gpflow.kernels.White", "gpflow.kernels.Coregion", "gpflow.likelihoods.SwitchedLikelihood", "MultiGPRModeller.MultiGPR.augment_xy", "gpflow.models.VGP", "gpflow.likelihoods.Gaussian", "range", "range"], "methods", ["home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.set_init_kernel", "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.augment_xy"], ["", "def", "build_model", "(", "self", ",", "k_low", ",", "k_up", ")", ":", "\n", "        ", "output_dim", "=", "len", "(", "self", ".", "X_train", ")", "\n", "x_dim", ",", "lsv", "=", "self", ".", "set_init_kernel", "(", "k_low", ",", "k_up", ")", "\n", "dim_idx_list", "=", "[", "idx", "for", "idx", "in", "range", "(", "x_dim", ")", "]", "\n", "kernel_1", "=", "gpf", ".", "kernels", ".", "Matern52", "(", "active_dims", "=", "dim_idx_list", ",", "lengthscales", "=", "lsv", ")", "\n", "kernel_2", "=", "gpf", ".", "kernels", ".", "Matern32", "(", "active_dims", "=", "dim_idx_list", ",", "lengthscales", "=", "lsv", ")", "\n", "kernel_3", "=", "gpf", ".", "kernels", ".", "RBF", "(", "active_dims", "=", "dim_idx_list", ",", "lengthscales", "=", "lsv", ")", "\n", "kernel_4", "=", "gpf", ".", "kernels", ".", "White", "(", ")", "\n", "base_kernel", "=", "kernel_1", "+", "kernel_2", "+", "kernel_3", "+", "kernel_4", "\n", "coregion_kernel", "=", "gpf", ".", "kernels", ".", "Coregion", "(", "output_dim", "=", "output_dim", ",", "\n", "rank", "=", "output_dim", ",", "\n", "active_dims", "=", "[", "x_dim", "]", ")", "\n", "kernel", "=", "base_kernel", "*", "coregion_kernel", "\n", "likelihood_list", "=", "[", "gpf", ".", "likelihoods", ".", "Gaussian", "(", ")", "for", "_", "in", "range", "(", "output_dim", ")", "]", "\n", "likelihood", "=", "gpf", ".", "likelihoods", ".", "SwitchedLikelihood", "(", "likelihood_list", ")", "\n", "X_augmented", ",", "Y_augmented", "=", "self", ".", "augment_xy", "(", ")", "\n", "self", ".", "model", "=", "gpf", ".", "models", ".", "VGP", "(", "(", "X_augmented", ",", "Y_augmented", ")", ",", "\n", "kernel", "=", "kernel", ",", "\n", "likelihood", "=", "likelihood", ")", "\n", "self", ".", "coreg_kernel", "=", "coregion_kernel", "\n", "#print(self.model.trainable_parameters)", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.optimizing": [[71, 76], ["gpflow.optimizers.Scipy().minimize", "gpflow.optimizers.Scipy", "dict"], "methods", ["None"], ["", "def", "optimizing", "(", "self", ")", ":", "\n", "        ", "gpf", ".", "optimizers", ".", "Scipy", "(", ")", ".", "minimize", "(", "self", ".", "model", ".", "training_loss", ",", "\n", "self", ".", "model", ".", "trainable_variables", ",", "\n", "options", "=", "dict", "(", "disp", "=", "False", ",", "maxiter", "=", "self", ".", "n_iter", ")", ",", "\n", "method", "=", "\"L-BFGS-B\"", ")", "\n", "#===========================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.predicting": [[78, 90], ["range", "numpy.asarray().reshape", "numpy.hstack", "MultiGPRModeller.MultiGPR.model.predict_f", "MultiGPRModeller.MultiGPR.mu.append", "MultiGPRModeller.MultiGPR.var.append", "mu.numpy().reshape", "var.numpy().reshape", "numpy.asarray", "mu.numpy", "var.numpy"], "methods", ["None"], ["", "def", "predicting", "(", "self", ",", "X_test", ")", ":", "\n", "        ", "self", ".", "mu", "=", "[", "]", "\n", "self", ".", "var", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "self", ".", "n_task", ")", ":", "\n", "            ", "x_test", "=", "X_test", "[", "t", "]", "\n", "n_test", "=", "x_test", ".", "shape", "[", "0", "]", "\n", "mark", "=", "np", ".", "asarray", "(", "[", "t", "]", "*", "n_test", ")", ".", "reshape", "(", "(", "n_test", ",", "1", ")", ")", "\n", "X_augmented", "=", "np", ".", "hstack", "(", "(", "x_test", ",", "mark", ")", ")", "\n", "#=======================================================================", "\n", "mu", ",", "var", "=", "self", ".", "model", ".", "predict_f", "(", "X_augmented", ")", "\n", "self", ".", "mu", ".", "append", "(", "mu", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", ")", "\n", "self", ".", "var", ".", "append", "(", "var", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", ")", "\n", "#===============================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.TrainingPredicting": [[92, 125], ["print", "range", "MultiGPRModeller.calculate_mean", "print", "print", "range", "MultiGPRModeller.MultiGPR", "MultiGPRModeller.MultiGPR.build_model", "MultiGPRModeller.MultiGPR.optimizing", "MultiGPRModeller.MultiGPR.predicting", "range", "X_Train.append", "Y_Train.append", "X_Test.append", "len", "mu_list.append", "var_list.append", "mu_list.append", "var_list.append"], "function", ["home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.calculate_mean", "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.build_model", "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.optimizing", "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.MultiGPR.predicting"], ["", "", "", "def", "TrainingPredicting", "(", "X_train", ",", "Y_train", ",", "n_test", ",", "n_task", ",", "n_iter", ",", "k_low_list", ",", "k_up_list", ")", ":", "\n", "    ", "mu_list", "=", "[", "]", "\n", "var_list", "=", "[", "]", "\n", "n_train", "=", "X_train", ".", "shape", "[", "0", "]", "\n", "print", "(", "'==='", "*", "25", ")", "\n", "for", "g", "in", "range", "(", "0", ",", "n_test", ")", ":", "\n", "        ", "print", "(", "'    >>> Training process is now running for group %d in total of %d ...'", "%", "(", "g", "+", "1", ",", "n_test", ")", ")", "\n", "X_Train", "=", "[", "]", "\n", "Y_Train", "=", "[", "]", "\n", "X_Test", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "n_task", ")", ":", "\n", "            ", "X_task", "=", "X_train", "[", ":", "n_train", "-", "g", "-", "t", "-", "1", ",", ":", "]", "\n", "X_Train", ".", "append", "(", "X_task", ")", "\n", "Y_task", "=", "Y_train", "[", "g", "+", "t", "+", "1", ":", ",", ":", "]", "\n", "Y_Train", ".", "append", "(", "Y_task", ")", "\n", "X_test", "=", "X_train", "[", "n_train", "-", "g", "-", "t", "-", "1", ":", ",", ":", "]", "\n", "X_Test", ".", "append", "(", "X_test", ")", "\n", "", "k_low", "=", "k_low_list", "[", "g", "]", "\n", "k_up", "=", "k_up_list", "[", "g", "]", "\n", "gpr_model", "=", "MultiGPR", "(", "X_Train", ",", "Y_Train", ",", "n_iter", ",", "n_task", ")", "\n", "gpr_model", ".", "build_model", "(", "k_low", ",", "k_up", ")", "\n", "gpr_model", ".", "optimizing", "(", ")", "\n", "gpr_model", ".", "predicting", "(", "X_Test", ")", "\n", "for", "t", "in", "range", "(", "n_task", ")", ":", "\n", "            ", "if", "len", "(", "gpr_model", ".", "mu", "[", "t", "]", ")", "<=", "n_test", ":", "\n", "                ", "mu_list", ".", "append", "(", "gpr_model", ".", "mu", "[", "t", "]", ")", "\n", "var_list", ".", "append", "(", "gpr_model", ".", "var", "[", "t", "]", ")", "\n", "", "else", ":", "\n", "                ", "mu_list", ".", "append", "(", "gpr_model", ".", "mu", "[", "t", "]", "[", ":", "n_test", "]", ")", "\n", "var_list", ".", "append", "(", "gpr_model", ".", "var", "[", "t", "]", "[", ":", "n_test", "]", ")", "\n", "", "", "", "mean_MU", ",", "mean_VAR", "=", "calculate_mean", "(", "n_test", ",", "mu_list", ",", "var_list", ")", "\n", "print", "(", "'==='", "*", "25", ")", "\n", "return", "mu_list", ",", "var_list", ",", "mean_MU", ",", "mean_VAR", "\n", "#===============================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.MultiGPRModeller.calculate_mean": [[127, 155], ["range", "numpy.asarray", "numpy.asarray", "range", "len", "len", "list", "list", "mean_MU.append", "mean_VAR.append", "numpy.asarray", "numpy.asarray", "numpy.asarray", "np.asarray.append", "np.asarray.append", "np.asarray.append", "np.asarray.append", "list.remove", "list.remove", "numpy.average", "numpy.average", "numpy.hstack", "numpy.hstack", "numpy.asarray", "numpy.asarray", "range"], "function", ["None"], ["", "def", "calculate_mean", "(", "n_test", ",", "mu_list", ",", "var_list", ")", ":", "\n", "    ", "MU", "=", "[", "]", "\n", "VAR", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "mu_list", ")", ")", ":", "\n", "        ", "current_mu", "=", "mu_list", "[", "i", "]", "\n", "current_var", "=", "var_list", "[", "i", "]", "\n", "n_mu_var", "=", "len", "(", "current_mu", ")", "\n", "if", "n_mu_var", "<", "n_test", ":", "\n", "            ", "expent_temp", "=", "np", ".", "asarray", "(", "[", "'None'", "for", "_", "in", "range", "(", "n_test", "-", "n_mu_var", ")", "]", ")", "\n", "MU", ".", "append", "(", "np", ".", "hstack", "(", "(", "current_mu", ",", "expent_temp", ")", ")", ")", "\n", "VAR", ".", "append", "(", "np", ".", "hstack", "(", "(", "current_var", ",", "expent_temp", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "MU", ".", "append", "(", "current_mu", "[", ":", "n_test", "]", ")", "\n", "VAR", ".", "append", "(", "current_var", "[", ":", "n_test", "]", ")", "\n", "", "", "MU", "=", "np", ".", "asarray", "(", "MU", ")", "\n", "VAR", "=", "np", ".", "asarray", "(", "VAR", ")", "\n", "mean_MU", "=", "[", "]", "\n", "mean_VAR", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "n_test", ")", ":", "\n", "        ", "p_mu", "=", "list", "(", "MU", "[", ":", ",", "t", "]", ")", "\n", "while", "'None'", "in", "p_mu", ":", "\n", "            ", "p_mu", ".", "remove", "(", "'None'", ")", "\n", "", "p_var", "=", "list", "(", "VAR", "[", ":", ",", "t", "]", ")", "\n", "while", "'None'", "in", "p_var", ":", "\n", "            ", "p_var", ".", "remove", "(", "'None'", ")", "\n", "", "mean_MU", ".", "append", "(", "np", ".", "average", "(", "np", ".", "asarray", "(", "p_mu", ",", "dtype", "=", "float", ")", ")", ")", "\n", "mean_VAR", ".", "append", "(", "np", ".", "average", "(", "np", ".", "asarray", "(", "p_var", ",", "dtype", "=", "float", ")", ")", ")", "\n", "", "return", "np", ".", "asarray", "(", "mean_MU", ")", ",", "np", ".", "asarray", "(", "mean_VAR", ")", "\n", "#===============================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.ResultSaver.SaveResults": [[11, 30], ["list", "list", "list", "open", "open", "zip", "open.close", "open.close", "str", "open.write", "open.write", "open.write", "str", "str", "str", "str", "numpy.sqrt", "str", "str", "str"], "function", ["None"], ["def", "SaveResults", "(", "Y_train", ",", "Y_test", ",", "Y_pred", ",", "performance", ",", "result_dir", ",", "target", ",", "n_train", ",", "n_test", ",", "MU_list", ",", "mean_VAR", ")", ":", "\n", "#===========================================================================", "\n", "    ", "YTr", "=", "list", "(", "Y_train", ")", "\n", "YTe", "=", "list", "(", "Y_test", ")", "\n", "YPr", "=", "list", "(", "Y_pred", ")", "\n", "mae", "=", "performance", "[", "0", "]", "\n", "rmse", "=", "performance", "[", "1", "]", "\n", "pcc", "=", "performance", "[", "2", "]", "\n", "result_name", "=", "result_dir", "+", "'/'", "+", "target", "+", "'_'", "+", "str", "(", "mae", ")", "+", "'_'", "+", "str", "(", "rmse", ")", "+", "'_'", "+", "str", "(", "pcc", ")", "\n", "result_txt", "=", "open", "(", "result_name", "+", "'.txt'", ",", "'w'", ")", "\n", "result_var", "=", "open", "(", "result_name", "+", "'.var'", ",", "'w'", ")", "\n", "for", "y", "in", "YTr", ":", "\n", "        ", "result_txt", ".", "write", "(", "str", "(", "y", "[", "0", "]", ")", "+", "'\\t'", "+", "str", "(", "y", "[", "0", "]", ")", "+", "'\\n'", ")", "\n", "", "for", "y", ",", "ypr", "in", "zip", "(", "YTe", ",", "YPr", ")", ":", "\n", "        ", "result_txt", ".", "write", "(", "str", "(", "y", ")", "+", "'\\t'", "+", "str", "(", "ypr", ")", "+", "'\\n'", ")", "\n", "", "result_txt", ".", "close", "(", ")", "\n", "for", "var", "in", "mean_VAR", ":", "\n", "        ", "result_var", ".", "write", "(", "str", "(", "np", ".", "sqrt", "(", "var", ")", ")", "+", "'\\n'", ")", "\n", "", "result_var", ".", "close", "(", ")", "\n", "#===============================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.ResultEvaluator.RMSE": [[12, 15], ["numpy.sqrt", "round"], "function", ["None"], ["def", "RMSE", "(", "Y_test", ",", "pred_Y", ")", ":", "\n", "    ", "rmse", "=", "np", ".", "sqrt", "(", "(", "(", "pred_Y", "-", "Y_test", ")", "**", "2", ")", ".", "mean", "(", ")", ")", "\n", "return", "round", "(", "rmse", ",", "4", ")", "\n", "#===============================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.ResultEvaluator.MAE": [[17, 22], ["abs", "round", "sum", "len"], "function", ["None"], ["", "def", "MAE", "(", "Y_test", ",", "pred_Y", ")", ":", "\n", "    ", "error", "=", "pred_Y", "-", "Y_test", "\n", "abs_error", "=", "abs", "(", "error", ")", "\n", "mae", "=", "sum", "(", "abs_error", ")", "/", "len", "(", "abs_error", ")", "\n", "return", "round", "(", "mae", ",", "4", ")", "\n", "#===============================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.ResultEvaluator.PCC": [[24, 27], ["numpy.corrcoef", "round"], "function", ["None"], ["", "def", "PCC", "(", "Y_test", ",", "pred_Y", ")", ":", "\n", "    ", "pcc", "=", "np", ".", "corrcoef", "(", "Y_test", ",", "pred_Y", ")", "\n", "return", "round", "(", "pcc", "[", "0", ",", "1", "]", ",", "4", ")", "\n", "#===============================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.ResultEvaluator.PerformanceEvaluation": [[29, 41], ["numpy.asarray", "ResultEvaluator.MAE", "ResultEvaluator.RMSE", "ResultEvaluator.PCC"], "function", ["home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.ResultEvaluator.MAE", "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.ResultEvaluator.RMSE", "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.ResultEvaluator.PCC"], ["", "def", "PerformanceEvaluation", "(", "Y_test", ",", "pred_Y", ")", ":", "\n", "#===========================================================================", "\n", "    ", "'''\n        This function is for evaluating the performence of the method.\n    '''", "\n", "#===========================================================================", "\n", "pred_Y", "=", "np", ".", "asarray", "(", "pred_Y", ")", "\n", "mae", "=", "MAE", "(", "Y_test", ",", "pred_Y", ")", "\n", "rmse", "=", "RMSE", "(", "Y_test", ",", "pred_Y", ")", "\n", "pcc", "=", "PCC", "(", "Y_test", ",", "pred_Y", ")", "\n", "#===========================================================================", "\n", "return", "[", "mae", ",", "rmse", ",", "pcc", "]", "\n", "#===============================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.DataProcesser.DataProcesser.__init__": [[17, 21], ["target.split", "int", "target.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "target", ")", ":", "\n", "        ", "self", ".", "target", "=", "target", "\n", "self", ".", "name", "=", "target", ".", "split", "(", "'_'", ")", "[", "0", "]", "\n", "self", ".", "t_indx", "=", "int", "(", "target", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ")", "-", "1", "\n", "#===========================================================================", "\n"]], "home.repos.pwc.inspect_result.littletigerhao_mt-gprmachine.ProgramCodes.DataProcesser.DataProcesser.load_data": [[22, 59], ["numpy.random.uniform", "sklearn.MinMaxScaler", "sklearn.MinMaxScaler.fit", "sklearn.MinMaxScaler.transform", "DataProcesser.DataProcesser.X_train[].reshape", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.loadtxt", "numpy.append", "numpy.append", "numpy.append", "numpy.append", "numpy.append", "numpy.shape", "os.getcwd().split", "numpy.shape", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "os.getcwd"], "methods", ["None"], ["", "def", "load_data", "(", "self", ",", "n_start", ",", "n_train", ",", "n_test", ",", "noise_level", "=", "0", ")", ":", "\n", "        ", "self", ".", "noise_level", "=", "noise_level", "\n", "file_path", "=", "os", ".", "getcwd", "(", ")", ".", "split", "(", "'/ProgramCodes'", ")", "[", "0", "]", "+", "'/SourceFiles'", "\n", "data_file", "=", "file_path", "+", "'/'", "+", "self", ".", "name", "+", "'.txt'", "\n", "#-----------------------------------------------------------------------", "\n", "if", "self", ".", "name", "==", "'Pendulum'", ":", "\n", "            ", "data", "=", "np", ".", "loadtxt", "(", "data_file", ")", "\n", "X", "=", "data", "\n", "", "if", "self", ".", "name", "==", "'Lorentz'", ":", "\n", "            ", "data", "=", "np", ".", "loadtxt", "(", "data_file", ")", "\n", "X", "=", "data", "\n", "", "if", "self", ".", "name", "==", "'Typhoon'", ":", "\n", "            ", "data", "=", "np", ".", "loadtxt", "(", "data_file", ")", "\n", "X", "=", "data", "\n", "", "if", "self", ".", "name", "==", "'Plankton'", ":", "\n", "            ", "data", "=", "np", ".", "loadtxt", "(", "data_file", ")", "\n", "X", "=", "data", "\n", "", "if", "self", ".", "name", "==", "'OceanT'", ":", "\n", "            ", "data", "=", "np", ".", "loadtxt", "(", "data_file", ")", "\n", "X", "=", "data", "\n", "n_col", "=", "np", ".", "shape", "(", "X", ")", "[", "1", "]", "\n", "X1", "=", "np", ".", "append", "(", "X", "[", "1", ":", ",", "]", ",", "np", ".", "zeros", "(", "(", "1", ",", "n_col", ")", ")", ",", "axis", "=", "0", ")", "\n", "X2", "=", "np", ".", "append", "(", "X", "[", "2", ":", ",", "]", ",", "np", ".", "zeros", "(", "(", "2", ",", "n_col", ")", ")", ",", "axis", "=", "0", ")", "\n", "X3", "=", "np", ".", "append", "(", "X", "[", "3", ":", ",", "]", ",", "np", ".", "zeros", "(", "(", "3", ",", "n_col", ")", ")", ",", "axis", "=", "0", ")", "\n", "X4", "=", "np", ".", "append", "(", "X", "[", "4", ":", ",", "]", ",", "np", ".", "zeros", "(", "(", "4", ",", "n_col", ")", ")", ",", "axis", "=", "0", ")", "\n", "X5", "=", "np", ".", "append", "(", "X", "[", "5", ":", ",", "]", ",", "np", ".", "zeros", "(", "(", "5", ",", "n_col", ")", ")", ",", "axis", "=", "0", ")", "\n", "X", "=", "(", "X", "+", "X1", "+", "X2", "+", "X3", "+", "X4", "+", "X5", ")", "/", "6", "\n", "#-----------------------------------------------------------------------", "\n", "", "X", "+=", "np", ".", "random", ".", "uniform", "(", "0", ",", "self", ".", "noise_level", ",", "np", ".", "shape", "(", "X", ")", ")", "\n", "scaler", "=", "pp", ".", "MinMaxScaler", "(", ")", "\n", "scaler", ".", "fit", "(", "X", ")", "\n", "X", "=", "scaler", ".", "transform", "(", "X", ")", "\n", "#=======================================================================", "\n", "self", ".", "scaler", "=", "scaler", "\n", "self", ".", "X_train", "=", "X", "[", "n_start", ":", "n_start", "+", "n_train", ",", ":", "]", "\n", "self", ".", "Y_train", "=", "self", ".", "X_train", "[", ":", ",", "self", ".", "t_indx", "]", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "self", ".", "Y_test", "=", "X", "[", "n_start", "+", "n_train", ":", "n_start", "+", "n_train", "+", "n_test", ",", "self", ".", "t_indx", "]", "\n", "#===========================================================================", "\n"]]}