{"home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate.FeatureMaker.__init__": [[87, 93], ["dict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "metadata", ",", "label_column", "=", "'label'", ",", "label_type", "=", "'int'", ",", "sample", "=", "50000", ")", ":", "\n", "        ", "self", ".", "columns", "=", "metadata", "[", "'columns'", "]", "\n", "self", ".", "label_column", "=", "label_column", "\n", "self", ".", "label_type", "=", "label_type", "\n", "self", ".", "sample", "=", "sample", "\n", "self", ".", "encoders", "=", "dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate.FeatureMaker.make_features": [[94, 145], ["data.copy.copy.copy", "numpy.random.shuffle", "enumerate", "numpy.column_stack", "numpy.column_stack.append", "col.reshape.reshape.astype", "numpy.log", "col.reshape.reshape.astype", "numpy.maximum", "evaluate.FeatureMaker.encoders.get", "col.reshape.reshape.reshape", "sklearn.preprocessing.OneHotEncoder.transform", "sklearn.preprocessing.OneHotEncoder", "sklearn.preprocessing.OneHotEncoder.fit_transform"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.transform"], ["", "def", "make_features", "(", "self", ",", "data", ")", ":", "\n", "\n", "        ", "data", "=", "data", ".", "copy", "(", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "data", ")", "\n", "data", "=", "data", "[", ":", "self", ".", "sample", "]", "\n", "\n", "features", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "\n", "for", "index", ",", "cinfo", "in", "enumerate", "(", "self", ".", "columns", ")", ":", "\n", "            ", "col", "=", "data", "[", ":", ",", "index", "]", "\n", "if", "cinfo", "[", "'name'", "]", "==", "self", ".", "label_column", ":", "\n", "                ", "if", "self", ".", "label_type", "==", "'int'", ":", "\n", "                    ", "labels", "=", "col", ".", "astype", "(", "int", ")", "\n", "", "elif", "self", ".", "label_type", "==", "'float'", ":", "\n", "                    ", "labels", "=", "col", ".", "astype", "(", "float", ")", "\n", "", "else", ":", "\n", "                    ", "assert", "0", ",", "'unkown label type'", "\n", "", "continue", "\n", "\n", "", "if", "cinfo", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "                ", "cmin", "=", "cinfo", "[", "'min'", "]", "\n", "cmax", "=", "cinfo", "[", "'max'", "]", "\n", "if", "cmin", ">=", "0", "and", "cmax", ">=", "1e3", ":", "\n", "                    ", "feature", "=", "np", ".", "log", "(", "np", ".", "maximum", "(", "col", ",", "1e-2", ")", ")", "\n", "\n", "", "else", ":", "\n", "                    ", "feature", "=", "(", "col", "-", "cmin", ")", "/", "(", "cmax", "-", "cmin", ")", "\n", "\n", "", "", "elif", "cinfo", "[", "'type'", "]", "==", "ORDINAL", ":", "\n", "                ", "feature", "=", "col", "\n", "\n", "", "else", ":", "\n", "                ", "if", "cinfo", "[", "'size'", "]", "<=", "2", ":", "\n", "                    ", "feature", "=", "col", "\n", "\n", "", "else", ":", "\n", "                    ", "encoder", "=", "self", ".", "encoders", ".", "get", "(", "index", ")", "\n", "col", "=", "col", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "if", "encoder", ":", "\n", "                        ", "feature", "=", "encoder", ".", "transform", "(", "col", ")", "\n", "", "else", ":", "\n", "                        ", "encoder", "=", "OneHotEncoder", "(", "sparse", "=", "False", ",", "handle_unknown", "=", "'ignore'", ")", "\n", "self", ".", "encoders", "[", "index", "]", "=", "encoder", "\n", "feature", "=", "encoder", ".", "fit_transform", "(", "col", ")", "\n", "\n", "", "", "", "features", ".", "append", "(", "feature", ")", "\n", "\n", "", "features", "=", "np", ".", "column_stack", "(", "features", ")", "\n", "\n", "return", "features", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._prepare_ml_problem": [[147, 156], ["evaluate.FeatureMaker", "evaluate.FeatureMaker.make_features", "evaluate.FeatureMaker.make_features"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate.FeatureMaker.make_features", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate.FeatureMaker.make_features"], ["", "", "def", "_prepare_ml_problem", "(", "train", ",", "test", ",", "metadata", ",", "clustering", "=", "False", ")", ":", "\n", "    ", "fm", "=", "FeatureMaker", "(", "metadata", ")", "\n", "x_train", ",", "y_train", "=", "fm", ".", "make_features", "(", "train", ")", "\n", "x_test", ",", "y_test", "=", "fm", ".", "make_features", "(", "test", ")", "\n", "if", "clustering", ":", "\n", "        ", "model", "=", "_MODELS", "[", "\"clustering\"", "]", "\n", "", "else", ":", "\n", "        ", "model", "=", "_MODELS", "[", "metadata", "[", "'problem_type'", "]", "]", "\n", "", "return", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._evaluate_multi_classification": [[158, 210], ["evaluate._prepare_ml_problem", "pandas.DataFrame", "model_spec.get", "model_class", "numpy.unique", "sklearn.metrics.classification_report", "numpy.sum", "f1.append", "sklearn.metrics.accuracy_score", "sklearn.metrics.f1_score", "sklearn.metrics.f1_score", "performance.append", "dict", "len", "model_class.fit", "model_class.predict", "list", "list", "len", "sklearn.metrics.classification_report.keys", "len", "map", "len"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._prepare_ml_problem", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit"], ["", "def", "_evaluate_multi_classification", "(", "train", ",", "test", ",", "metadata", ")", ":", "\n", "\n", "    ", "\"\"\"Score classifiers using f1 score and the given train and test data.\n\n    Args:\n        x_train(numpy.ndarray):\n        y_train(numpy.ndarray):\n        x_test(numpy.ndarray):\n        y_test(numpy):\n        classifiers(list):\n\n    Returns:\n        pandas.DataFrame\n    \"\"\"", "\n", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "classifiers", "=", "_prepare_ml_problem", "(", "train", ",", "test", ",", "metadata", ")", "\n", "\n", "performance", "=", "[", "]", "\n", "f1", "=", "[", "]", "\n", "for", "model_spec", "in", "classifiers", ":", "\n", "        ", "model_class", "=", "model_spec", "[", "'class'", "]", "\n", "model_kwargs", "=", "model_spec", ".", "get", "(", "'kwargs'", ",", "dict", "(", ")", ")", "\n", "model_repr", "=", "model_class", ".", "__name__", "\n", "model", "=", "model_class", "(", "**", "model_kwargs", ")", "\n", "\n", "unique_labels", "=", "np", ".", "unique", "(", "y_train", ")", "\n", "if", "len", "(", "unique_labels", ")", "==", "1", ":", "\n", "            ", "pred", "=", "[", "unique_labels", "[", "0", "]", "]", "*", "len", "(", "x_test", ")", "\n", "", "else", ":", "\n", "            ", "model", ".", "fit", "(", "x_train", ",", "y_train", ")", "\n", "pred", "=", "model", ".", "predict", "(", "x_test", ")", "\n", "\n", "", "report", "=", "classification_report", "(", "y_test", ",", "pred", ",", "output_dict", "=", "True", ")", "\n", "classes", "=", "list", "(", "report", ".", "keys", "(", ")", ")", "[", ":", "-", "3", "]", "\n", "proportion", "=", "[", "report", "[", "i", "]", "[", "'support'", "]", "/", "len", "(", "y_test", ")", "for", "i", "in", "classes", "]", "\n", "weighted_f1", "=", "np", ".", "sum", "(", "list", "(", "map", "(", "lambda", "i", ",", "prop", ":", "report", "[", "i", "]", "[", "'f1-score'", "]", "*", "(", "1", "-", "prop", ")", "/", "(", "len", "(", "classes", ")", "-", "1", ")", ",", "classes", ",", "proportion", ")", ")", ")", "\n", "\n", "f1", ".", "append", "(", "[", "report", "[", "c", "]", "[", "'f1-score'", "]", "for", "c", "in", "classes", "]", ")", "\n", "acc", "=", "accuracy_score", "(", "y_test", ",", "pred", ")", "\n", "macro_f1", "=", "f1_score", "(", "y_test", ",", "pred", ",", "average", "=", "'macro'", ")", "\n", "micro_f1", "=", "f1_score", "(", "y_test", ",", "pred", ",", "average", "=", "'micro'", ")", "\n", "\n", "performance", ".", "append", "(", "\n", "{", "\n", "\"name\"", ":", "model_repr", ",", "\n", "\"accuracy\"", ":", "acc", ",", "\n", "'weighted_f1'", ":", "weighted_f1", ",", "\n", "\"macro_f1\"", ":", "macro_f1", ",", "\n", "\"micro_f1\"", ":", "micro_f1", "\n", "}", "\n", ")", "\n", "\n", "", "return", "pd", ".", "DataFrame", "(", "performance", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._evaluate_binary_classification": [[212, 275], ["evaluate._prepare_ml_problem", "pandas.DataFrame", "model_spec.get", "model_class", "numpy.unique", "sklearn.metrics.accuracy_score", "sklearn.metrics.f1_score", "sklearn.metrics.f1_score", "sklearn.metrics.classification_report", "f1.append", "sklearn.metrics.matthews_corrcoef", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "range", "sklearn.metrics.roc_auc_score", "performance.append", "dict", "len", "numpy.array", "model_class.fit", "model_class.predict", "model_class.predict_proba", "list", "set", "set", "numpy.hstack", "len", "sklearn.metrics.classification_report.keys", "range", "tmp.append", "numpy.eye", "len", "tmp.append", "numpy.array", "tmp.append"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._prepare_ml_problem", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit"], ["", "def", "_evaluate_binary_classification", "(", "train", ",", "test", ",", "metadata", ")", ":", "\n", "\n", "    ", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "classifiers", "=", "_prepare_ml_problem", "(", "train", ",", "test", ",", "metadata", ")", "\n", "performance", "=", "[", "]", "\n", "f1", "=", "[", "]", "\n", "for", "model_spec", "in", "classifiers", ":", "\n", "        ", "model_class", "=", "model_spec", "[", "'class'", "]", "\n", "model_kwargs", "=", "model_spec", ".", "get", "(", "'kwargs'", ",", "dict", "(", ")", ")", "\n", "model_repr", "=", "model_class", ".", "__name__", "\n", "model", "=", "model_class", "(", "**", "model_kwargs", ")", "\n", "\n", "unique_labels", "=", "np", ".", "unique", "(", "y_train", ")", "\n", "if", "len", "(", "unique_labels", ")", "==", "1", ":", "\n", "            ", "pred", "=", "[", "unique_labels", "[", "0", "]", "]", "*", "len", "(", "x_test", ")", "\n", "pred_prob", "=", "np", ".", "array", "(", "[", "1.", "]", "*", "len", "(", "x_test", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "model", ".", "fit", "(", "x_train", ",", "y_train", ")", "\n", "pred", "=", "model", ".", "predict", "(", "x_test", ")", "\n", "pred_prob", "=", "model", ".", "predict_proba", "(", "x_test", ")", "\n", "\n", "\n", "", "acc", "=", "accuracy_score", "(", "y_test", ",", "pred", ")", "\n", "binary_f1", "=", "f1_score", "(", "y_test", ",", "pred", ",", "average", "=", "'binary'", ")", "\n", "macro_f1", "=", "f1_score", "(", "y_test", ",", "pred", ",", "average", "=", "'macro'", ")", "\n", "report", "=", "classification_report", "(", "y_test", ",", "pred", ",", "output_dict", "=", "True", ")", "\n", "classes", "=", "list", "(", "report", ".", "keys", "(", ")", ")", "[", ":", "-", "3", "]", "\n", "\n", "f1", ".", "append", "(", "[", "report", "[", "c", "]", "[", "'f1-score'", "]", "for", "c", "in", "classes", "]", ")", "\n", "\n", "mcc", "=", "matthews_corrcoef", "(", "y_test", ",", "pred", ")", "\n", "\n", "precision", "=", "precision_score", "(", "y_test", ",", "pred", ",", "average", "=", "'binary'", ")", "\n", "recall", "=", "recall_score", "(", "y_test", ",", "pred", ",", "average", "=", "'binary'", ")", "\n", "size", "=", "[", "a", "[", "\"size\"", "]", "for", "a", "in", "metadata", "[", "\"columns\"", "]", "if", "a", "[", "\"name\"", "]", "==", "\"label\"", "]", "[", "0", "]", "\n", "rest_label", "=", "set", "(", "range", "(", "size", ")", ")", "-", "set", "(", "unique_labels", ")", "\n", "tmp", "=", "[", "]", "\n", "j", "=", "0", "\n", "for", "i", "in", "range", "(", "size", ")", ":", "\n", "            ", "if", "i", "in", "rest_label", ":", "\n", "                ", "tmp", ".", "append", "(", "np", ".", "array", "(", "[", "0", "]", "*", "y_test", ".", "shape", "[", "0", "]", ")", "[", ":", ",", "np", ".", "newaxis", "]", ")", "\n", "", "else", ":", "\n", "                ", "try", ":", "\n", "                    ", "tmp", ".", "append", "(", "pred_prob", "[", ":", ",", "[", "j", "]", "]", ")", "\n", "", "except", ":", "\n", "                    ", "tmp", ".", "append", "(", "pred_prob", "[", ":", ",", "np", ".", "newaxis", "]", ")", "\n", "", "j", "+=", "1", "\n", "", "", "roc_auc", "=", "roc_auc_score", "(", "np", ".", "eye", "(", "size", ")", "[", "y_test", "]", ",", "np", ".", "hstack", "(", "tmp", ")", ")", "\n", "\n", "performance", ".", "append", "(", "\n", "{", "\n", "\"name\"", ":", "model_repr", ",", "\n", "\"accuracy\"", ":", "acc", ",", "\n", "\"binary_f1\"", ":", "binary_f1", ",", "\n", "\"macro_f1\"", ":", "macro_f1", ",", "\n", "\"matthews_corrcoef\"", ":", "mcc", ",", "\n", "\"precision\"", ":", "precision", ",", "\n", "\"recall\"", ":", "recall", ",", "\n", "\"roc_auc\"", ":", "roc_auc", "\n", "}", "\n", ")", "\n", "\n", "", "return", "pd", ".", "DataFrame", "(", "performance", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._evaluate_regression": [[276, 310], ["evaluate._prepare_ml_problem", "numpy.log", "numpy.log", "pandas.DataFrame", "numpy.clip", "numpy.clip", "model_spec.get", "model_class", "model_class.fit", "model_class.predict", "sklearn.metrics.r2_score", "sklearn.metrics.explained_variance_score", "sklearn.metrics.mean_squared_error", "sklearn.metrics.mean_absolute_error", "performance.append", "dict"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._prepare_ml_problem", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit"], ["", "def", "_evaluate_regression", "(", "train", ",", "test", ",", "metadata", ")", ":", "\n", "\n", "    ", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "regressors", "=", "_prepare_ml_problem", "(", "train", ",", "test", ",", "metadata", ")", "\n", "\n", "performance", "=", "[", "]", "\n", "y_train", "=", "np", ".", "log", "(", "np", ".", "clip", "(", "y_train", ",", "1", ",", "20000", ")", ")", "\n", "y_test", "=", "np", ".", "log", "(", "np", ".", "clip", "(", "y_test", ",", "1", ",", "20000", ")", ")", "\n", "for", "model_spec", "in", "regressors", ":", "\n", "        ", "model_class", "=", "model_spec", "[", "'class'", "]", "\n", "model_kwargs", "=", "model_spec", ".", "get", "(", "'kwargs'", ",", "dict", "(", ")", ")", "\n", "model_repr", "=", "model_class", ".", "__name__", "\n", "model", "=", "model_class", "(", "**", "model_kwargs", ")", "\n", "\n", "model", ".", "fit", "(", "x_train", ",", "y_train", ")", "\n", "pred", "=", "model", ".", "predict", "(", "x_test", ")", "\n", "\n", "r2", "=", "r2_score", "(", "y_test", ",", "pred", ")", "\n", "explained_variance", "=", "explained_variance_score", "(", "y_test", ",", "pred", ")", "\n", "mean_squared", "=", "mean_squared_error", "(", "y_test", ",", "pred", ")", "\n", "mean_absolute", "=", "mean_absolute_error", "(", "y_test", ",", "pred", ")", "\n", "\n", "\n", "\n", "performance", ".", "append", "(", "\n", "{", "\n", "\"name\"", ":", "model_repr", ",", "\n", "\"r2\"", ":", "r2", ",", "\n", "\"explained_variance\"", ":", "explained_variance", ",", "\n", "\"mean_squared_error\"", ":", "mean_squared", ",", "\n", "\"mean_absolute_error\"", ":", "mean_absolute", "\n", "}", "\n", ")", "\n", "\n", "", "return", "pd", ".", "DataFrame", "(", "performance", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._evaluate_gmm_likelihood": [[311, 328], ["list", "pandas.DataFrame", "sklearn.mixture.GaussianMixture", "sklearn.mixture.GaussianMixture.fit", "sklearn.mixture.GaussianMixture.score", "sklearn.mixture.GaussianMixture.fit", "sklearn.mixture.GaussianMixture.score", "list.append", "repr"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit"], ["", "def", "_evaluate_gmm_likelihood", "(", "train", ",", "test", ",", "metadata", ",", "components", "=", "[", "10", ",", "30", "]", ")", ":", "\n", "    ", "results", "=", "list", "(", ")", "\n", "for", "n_components", "in", "components", ":", "\n", "        ", "gmm", "=", "GaussianMixture", "(", "n_components", ",", "covariance_type", "=", "'diag'", ")", "\n", "gmm", ".", "fit", "(", "test", ")", "\n", "l1", "=", "gmm", ".", "score", "(", "train", ")", "\n", "\n", "gmm", ".", "fit", "(", "train", ")", "\n", "l2", "=", "gmm", ".", "score", "(", "test", ")", "\n", "\n", "results", ".", "append", "(", "{", "\n", "\"name\"", ":", "repr", "(", "gmm", ")", ",", "\n", "\"syn_likelihood\"", ":", "l1", ",", "\n", "\"test_likelihood\"", ":", "l2", ",", "\n", "}", ")", "\n", "\n", "", "return", "pd", ".", "DataFrame", "(", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._mapper": [[329, 339], ["enumerate", "data_t.append", "row_t.append", "int"], "function", ["None"], ["", "def", "_mapper", "(", "data", ",", "metadata", ")", ":", "\n", "    ", "data_t", "=", "[", "]", "\n", "for", "row", "in", "data", ":", "\n", "        ", "row_t", "=", "[", "]", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "metadata", "[", "'columns'", "]", ")", ":", "\n", "            ", "row_t", ".", "append", "(", "info", "[", "'i2s'", "]", "[", "int", "(", "row", "[", "id_", "]", ")", "]", ")", "\n", "\n", "", "data_t", ".", "append", "(", "row_t", ")", "\n", "\n", "", "return", "data_t", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._evaluate_bayesian_likelihood": [[340, 370], ["json.dumps", "pomegranate.BayesianNetwork.from_json", "evaluate._mapper", "evaluate._mapper", "numpy.mean", "pomegranate.BayesianNetwork.from_structure", "numpy.mean", "pandas.DataFrame", "numpy.log", "numpy.log", "prob.append", "prob.append", "BayesianNetwork.from_json.probability", "prob.append", "numpy.asarray", "BayesianNetwork.from_structure.probability", "prob.append", "numpy.asarray"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._mapper", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._mapper"], ["", "def", "_evaluate_bayesian_likelihood", "(", "train", ",", "test", ",", "metadata", ")", ":", "\n", "    ", "structure_json", "=", "json", ".", "dumps", "(", "metadata", "[", "'structure'", "]", ")", "\n", "bn1", "=", "BayesianNetwork", ".", "from_json", "(", "structure_json", ")", "\n", "\n", "train_mapped", "=", "_mapper", "(", "train", ",", "metadata", ")", "\n", "test_mapped", "=", "_mapper", "(", "test", ",", "metadata", ")", "\n", "prob", "=", "[", "]", "\n", "for", "item", "in", "train_mapped", ":", "\n", "        ", "try", ":", "\n", "            ", "prob", ".", "append", "(", "bn1", ".", "probability", "(", "item", ")", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "prob", ".", "append", "(", "1e-8", ")", "\n", "\n", "", "", "l1", "=", "np", ".", "mean", "(", "np", ".", "log", "(", "np", ".", "asarray", "(", "prob", ")", "+", "1e-8", ")", ")", "\n", "\n", "bn2", "=", "BayesianNetwork", ".", "from_structure", "(", "train_mapped", ",", "bn1", ".", "structure", ")", "\n", "prob", "=", "[", "]", "\n", "\n", "for", "item", "in", "test_mapped", ":", "\n", "        ", "try", ":", "\n", "            ", "prob", ".", "append", "(", "bn2", ".", "probability", "(", "item", ")", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "prob", ".", "append", "(", "1e-8", ")", "\n", "\n", "", "", "l2", "=", "np", ".", "mean", "(", "np", ".", "log", "(", "np", ".", "asarray", "(", "prob", ")", "+", "1e-8", ")", ")", "\n", "\n", "return", "pd", ".", "DataFrame", "(", "[", "{", "\n", "\"name\"", ":", "\"Bayesian Likelihood\"", ",", "\n", "\"syn_likelihood\"", ":", "l1", ",", "\n", "\"test_likelihood\"", ":", "l2", ",", "\n", "}", "]", ")", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._evaluate_cluster": [[373, 409], ["evaluate._prepare_ml_problem", "numpy.unique", "range", "pandas.DataFrame", "model_class", "len", "result.append", "model_class.fit", "model_class.predict", "result.append", "numpy.mean", "len", "x_train.astype.astype", "model_class.fit", "x_test.astype.astype", "model_class.predict", "sklearn.metrics.silhouette_score", "result.append"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate._prepare_ml_problem", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit"], ["", "def", "_evaluate_cluster", "(", "train", ",", "test", ",", "metadata", ")", ":", "\n", "\n", "    ", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "kmeans", "=", "_prepare_ml_problem", "(", "train", ",", "test", ",", "metadata", ",", "clustering", "=", "True", ")", "\n", "\n", "\n", "model_class", "=", "kmeans", "[", "0", "]", "[", "'class'", "]", "\n", "model_repr", "=", "model_class", ".", "__name__", "\n", "unique_labels", "=", "np", ".", "unique", "(", "y_train", ")", "\n", "num_columns", "=", "metadata", "[", "'columns'", "]", "[", "-", "1", "]", "[", "\"size\"", "]", "\n", "\n", "result", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "        ", "model", "=", "model_class", "(", "n_clusters", "=", "num_columns", "*", "(", "i", "+", "1", ")", ")", "\n", "\n", "if", "len", "(", "unique_labels", ")", "==", "1", ":", "\n", "            ", "result", ".", "append", "(", "[", "unique_labels", "[", "0", "]", "]", "*", "len", "(", "x_test", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "try", ":", "\n", "                ", "model", ".", "fit", "(", "x_train", ")", "\n", "predicted_label", "=", "model", ".", "predict", "(", "x_test", ")", "\n", "", "except", ":", "\n", "                ", "x_train", "=", "x_train", ".", "astype", "(", "np", ".", "float32", ")", "\n", "model", ".", "fit", "(", "x_train", ")", "\n", "\n", "x_test", "=", "x_test", ".", "astype", "(", "np", ".", "float32", ")", "\n", "predicted_label", "=", "model", ".", "predict", "(", "x_test", ")", "\n", "", "try", ":", "\n", "                ", "result", ".", "append", "(", "silhouette_score", "(", "x_test", ",", "predicted_label", ",", "metric", "=", "'euclidean'", ",", "sample_size", "=", "100", ")", ")", "\n", "", "except", ":", "\n", "                ", "result", ".", "append", "(", "0", ")", "\n", "\n", "\n", "", "", "", "return", "pd", ".", "DataFrame", "(", "[", "{", "\n", "\"name\"", ":", "model_repr", ",", "\n", "\"silhouette_score\"", ":", "np", ".", "mean", "(", "result", ")", ",", "\n", "}", "]", ")", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate.compute_scores": [[421, 435], ["pandas.DataFrame", "pandas.DataFrame", "range", "pd.concat.groupby().mean", "pandas.concat", "evaluator", "pandas.concat", "pd.concat.groupby"], "function", ["None"], ["def", "compute_scores", "(", "test", ",", "synthesized_data", ",", "metadata", ")", ":", "\n", "    ", "result", "=", "pd", ".", "DataFrame", "(", ")", "\n", "\n", "for", "evaluator", "in", "_EVALUATORS", "[", "metadata", "[", "'problem_type'", "]", "]", ":", "\n", "        ", "scores", "=", "pd", ".", "DataFrame", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "            ", "score", "=", "evaluator", "(", "synthesized_data", ",", "test", ",", "metadata", ")", "\n", "score", "[", "'test_iter'", "]", "=", "i", "\n", "scores", "=", "pd", ".", "concat", "(", "[", "scores", ",", "score", "]", ",", "ignore_index", "=", "True", ")", "\n", "", "scores", "=", "scores", ".", "groupby", "(", "[", "'test_iter'", "]", ")", ".", "mean", "(", ")", "\n", "result", "=", "pd", ".", "concat", "(", "[", "result", ",", "scores", "]", ",", "axis", "=", "1", ")", "\n", "\n", "", "return", "result", "\n", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.data._load_json": [[13, 16], ["open", "json.load"], "function", ["None"], ["def", "_load_json", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ")", "as", "json_file", ":", "\n", "        ", "return", "json", ".", "load", "(", "json_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.data._load_file": [[18, 24], ["os.path.join", "numpy.np.load", "data._load_json"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.data._load_json"], ["", "", "def", "_load_file", "(", "filename", ",", "loader", ")", ":", "\n", "    ", "local_path", "=", "os", ".", "path", ".", "join", "(", "DATA_PATH", ",", "filename", ")", "\n", "\n", "if", "loader", "==", "np", ".", "load", ":", "\n", "        ", "return", "loader", "(", "local_path", ",", "allow_pickle", "=", "True", ")", "\n", "", "return", "loader", "(", "local_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.data._get_columns": [[26, 36], ["list", "list", "enumerate", "list.append", "list.append"], "function", ["None"], ["", "def", "_get_columns", "(", "metadata", ")", ":", "\n", "    ", "categorical_columns", "=", "list", "(", ")", "\n", "ordinal_columns", "=", "list", "(", ")", "\n", "for", "column_idx", ",", "column", "in", "enumerate", "(", "metadata", "[", "'columns'", "]", ")", ":", "\n", "        ", "if", "column", "[", "'type'", "]", "==", "CATEGORICAL", ":", "\n", "            ", "categorical_columns", ".", "append", "(", "column_idx", ")", "\n", "", "elif", "column", "[", "'type'", "]", "==", "ORDINAL", ":", "\n", "            ", "ordinal_columns", ".", "append", "(", "column_idx", ")", "\n", "\n", "", "", "return", "categorical_columns", ",", "ordinal_columns", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.data.load_dataset": [[38, 51], ["LOGGER.info", "data._load_file", "data._load_file", "data._get_columns"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.data._load_file", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.data._load_file", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.data._get_columns"], ["", "def", "load_dataset", "(", "name", ",", "benchmark", "=", "False", ")", ":", "\n", "    ", "LOGGER", ".", "info", "(", "'Loading dataset %s'", ",", "name", ")", "\n", "data", "=", "_load_file", "(", "name", "+", "'.npz'", ",", "np", ".", "load", ")", "\n", "meta", "=", "_load_file", "(", "name", "+", "'.json'", ",", "_load_json", ")", "\n", "\n", "categorical_columns", ",", "ordinal_columns", "=", "_get_columns", "(", "meta", ")", "\n", "\n", "train", "=", "data", "[", "'train'", "]", "\n", "test", "=", "data", "[", "'test'", "]", "\n", "if", "benchmark", ":", "\n", "        ", "return", "train", ",", "test", ",", "meta", ",", "categorical_columns", ",", "ordinal_columns", "\n", "\n", "", "return", "train", ",", "categorical_columns", ",", "ordinal_columns", "\n", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark.TqdmLogger.write": [[31, 33], ["buf.strip"], "methods", ["None"], ["def", "write", "(", "self", ",", "buf", ")", ":", "\n", "        ", "self", ".", "_buffer", "=", "buf", ".", "strip", "(", "'\\r\\n\\t '", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark.TqdmLogger.flush": [[34, 36], ["LOGGER.info"], "methods", ["None"], ["", "def", "flush", "(", "self", ")", ":", "\n", "        ", "LOGGER", ".", "info", "(", "self", ".", "_buffer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._used_memory": [[38, 41], ["psutil.Process", "humanfriendly.format_size", "os.getpid", "psutil.Process.memory_info"], "function", ["None"], ["", "", "def", "_used_memory", "(", ")", ":", "\n", "    ", "process", "=", "psutil", ".", "Process", "(", "os", ".", "getpid", "(", ")", ")", "\n", "return", "humanfriendly", ".", "format_size", "(", "process", ".", "memory_info", "(", ")", ".", "rss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._score_synthesizer_on_dataset": [[43, 64], ["LOGGER.info", "octgan.data.load_dataset", "synthesizer", "octgan.evaluate.compute_scores", "LOGGER.info", "benchmark._used_memory", "isinstance", "issubclass", "LOGGER.exception", "benchmark._used_memory", "synthesizer"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.data.load_dataset", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.evaluate.compute_scores", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._used_memory", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._used_memory"], ["", "def", "_score_synthesizer_on_dataset", "(", "name", ",", "synthesizer", ",", "iteration", ",", "args", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "LOGGER", ".", "info", "(", "'Evaluating %s on dataset %s; iteration %s; %s'", ",", "\n", "name", ",", "args", ".", "dataset_name", ",", "iteration", ",", "_used_memory", "(", ")", ")", "\n", "\n", "train", ",", "test", ",", "meta", ",", "categoricals", ",", "ordinals", "=", "load_dataset", "(", "args", ".", "dataset_name", ",", "benchmark", "=", "True", ")", "\n", "if", "isinstance", "(", "synthesizer", ",", "type", ")", "and", "issubclass", "(", "synthesizer", ",", "BaseSynthesizer", ")", ":", "\n", "            ", "synthesizer", "=", "synthesizer", "(", "dataset_name", "=", "args", ".", "dataset_name", ",", "args", "=", "args", ")", ".", "fit_sample", "\n", "\n", "", "synthesized", "=", "synthesizer", "(", "train", ",", "categoricals", ",", "ordinals", ")", "\n", "scores", "=", "compute_scores", "(", "test", ",", "synthesized", ",", "meta", ")", "\n", "\n", "return", "scores", "\n", "\n", "", "except", "Exception", ":", "\n", "        ", "LOGGER", ".", "exception", "(", "'Error running %s on dataset %s; iteration %s'", ",", "\n", "name", ",", "args", ".", "dataset_name", ",", "iteration", ")", "\n", "\n", "", "finally", ":", "\n", "        ", "LOGGER", ".", "info", "(", "'Finished %s on dataset %s; iteration %s; %s'", ",", "\n", "name", ",", "args", ".", "dataset_name", ",", "iteration", ",", "_used_memory", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._score_synthesizer_on_dataset_args": [[66, 68], ["benchmark._score_synthesizer_on_dataset"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._score_synthesizer_on_dataset"], ["", "", "def", "_score_synthesizer_on_dataset_args", "(", "args", ")", ":", "\n", "    ", "return", "_score_synthesizer_on_dataset", "(", "*", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._get_synthesizer_name": [[70, 91], ["isinstance"], "function", ["None"], ["", "def", "_get_synthesizer_name", "(", "synthesizer", ")", ":", "\n", "    ", "\"\"\"Get the name of the synthesizer function or class.\n\n    If the given synthesizer is a function, return its name.\n    If it is a method, return the name of the class to which\n    the method belongs.\n\n    Args:\n        synthesizer (function or method):\n            The synthesizer function or method.\n\n    Returns:\n        str:\n            Name of the function or the class to which the method belongs.\n    \"\"\"", "\n", "if", "isinstance", "(", "synthesizer", ",", "types", ".", "MethodType", ")", ":", "\n", "        ", "synthesizer_name", "=", "synthesizer", ".", "__self__", ".", "__class__", ".", "__name__", "\n", "", "else", ":", "\n", "        ", "synthesizer_name", "=", "synthesizer", ".", "__name__", "\n", "\n", "", "return", "synthesizer_name", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._get_synthesizers": [[93, 123], ["callable", "isinstance", "benchmark._get_synthesizer_name", "benchmark._get_synthesizer_name", "isinstance", "TypeError"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._get_synthesizer_name", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._get_synthesizer_name"], ["", "def", "_get_synthesizers", "(", "synthesizers", ")", ":", "\n", "    ", "\"\"\"Get the dict of synthesizers from the input value.\n\n    If the input is a synthesizer or an iterable of synthesizers, get their names\n    and put them on a dict.\n\n    Args:\n        synthesizers (function, class, list, tuple or dict):\n            A synthesizer (function or method or class) or an iterable of synthesizers\n            or a dict containing synthesizer names as keys and synthesizers as values.\n\n    Returns:\n        dict[str, function]:\n            dict containing synthesizer names as keys and function as values.\n\n    Raises:\n        TypeError:\n            if neither a synthesizer or an iterable or a dict is passed.\n    \"\"\"", "\n", "if", "callable", "(", "synthesizers", ")", ":", "\n", "        ", "synthesizers", "=", "{", "_get_synthesizer_name", "(", "synthesizers", ")", ":", "synthesizers", "}", "\n", "", "if", "isinstance", "(", "synthesizers", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "synthesizers", "=", "{", "\n", "_get_synthesizer_name", "(", "synthesizer", ")", ":", "synthesizer", "\n", "for", "synthesizer", "in", "synthesizers", "\n", "}", "\n", "", "elif", "not", "isinstance", "(", "synthesizers", ",", "dict", ")", ":", "\n", "        ", "raise", "TypeError", "(", "'`synthesizers` can only be a function, a class, a list or a dict'", ")", "\n", "\n", "", "return", "synthesizers", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark.run": [[125, 156], ["list", "tqdm.tqdm", "octgan.results.make_leaderboard", "benchmark._get_synthesizers", "_get_synthesizers.items", "range", "map", "multiprocessing.Pool", "mp.Pool.imap_unordered", "range", "list.append", "multiprocessing.cpu_count", "len", "benchmark.TqdmLogger", "list.append"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.results.make_leaderboard", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.benchmark._get_synthesizers"], ["", "def", "run", "(", "synthesizers", "=", "None", ",", "iterations", "=", "1", ",", "workers", "=", "1", ",", "output_path", "=", "None", ",", "arguments", "=", "None", ")", ":", "\n", "    ", "\"\"\"Run the octgan benchmark and return a leaderboard.\"\"\"", "\n", "\n", "scorer_args", "=", "list", "(", ")", "\n", "\n", "if", "synthesizers", "!=", "None", ":", "\n", "        ", "synthesizers", "=", "_get_synthesizers", "(", "synthesizers", ")", "\n", "\n", "for", "synthesizer_name", ",", "synthesizer", "in", "synthesizers", ".", "items", "(", ")", ":", "\n", "            ", "for", "iteration", "in", "range", "(", "iterations", ")", ":", "\n", "                ", "args", "=", "(", "synthesizer_name", ",", "synthesizer", ",", "iteration", ",", "arguments", ")", "\n", "scorer_args", ".", "append", "(", "args", ")", "\n", "\n", "", "", "", "else", ":", "\n", "        ", "for", "iteration", "in", "range", "(", "iterations", ")", ":", "\n", "            ", "args", "=", "(", "\"benchmark\"", ",", "None", ",", "iteration", ",", "arguments", ")", "\n", "scorer_args", ".", "append", "(", "args", ")", "\n", "\n", "", "", "if", "workers", "in", "(", "0", ",", "1", ")", ":", "\n", "        ", "scores", "=", "map", "(", "_score_synthesizer_on_dataset_args", ",", "scorer_args", ")", "\n", "", "else", ":", "\n", "        ", "pool", "=", "mp", ".", "Pool", "(", "mp", ".", "cpu_count", "(", ")", ")", "\n", "scores", "=", "pool", ".", "imap_unordered", "(", "_score_synthesizer_on_dataset_args", ",", "scorer_args", ")", "\n", "\n", "", "scores", "=", "tqdm", ".", "tqdm", "(", "scores", ",", "total", "=", "len", "(", "scorer_args", ")", ",", "file", "=", "TqdmLogger", "(", ")", ")", "\n", "\n", "\n", "return", "make_leaderboard", "(", "\n", "scores", ",", "\n", "output_path", "=", "output_path", ",", "\n", "args", "=", "arguments", "\n", ")", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.save.make_dir": [[4, 9], ["os.makedirs", "os.makedirs"], "function", ["None"], ["def", "make_dir", "(", ")", ":", "\n", "    ", "path", "=", "'./result/'", "\n", "os", ".", "makedirs", "(", "path", ")", "\n", "for", "i", "in", "[", "'/csv'", ",", "'/logs'", ",", "'/model'", "]", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", "+", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.save.save_model": [[10, 20], ["generator.state_dict", "torch.save", "os.path.exists", "save.make_dir"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.save.make_dir"], ["", "", "def", "save_model", "(", "generator", ",", "epoch", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "'./result/'", ")", ":", "\n", "        ", "make_dir", "(", ")", "\n", "\n", "", "PATH", "=", "\"./result/model/\"", "\n", "\n", "model_dict", "=", "generator", ".", "state_dict", "(", ")", "\n", "\n", "PATH", "+=", "\"{}.pth\"", ".", "format", "(", "epoch", ")", "\n", "torch", ".", "save", "(", "model_dict", ",", "PATH", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.octgan.results.make_leaderboard": [[4, 35], ["scores.drop.mean", "isinstance", "os.path.isdir", "pandas.concat", "scores.drop.drop", "os.makedirs", "scores.mean.to_csv", "pandas.read_csv", "os.path.dirname", "os.path.join", "os.listdir", "os.path.realpath"], "function", ["None"], ["def", "make_leaderboard", "(", "scores", ",", "output_path", "=", "None", ",", "args", "=", "None", ")", ":", "\n", "    ", "\"\"\"Make a leaderboard out of individual synthesizer scores.\n    Args:\n        scores (list):\n            List of DataFrames with scores or paths to CSV files.\n        output_path (str):\n            If an ``output_path`` is given, the generated leaderboard will be stored in the\n            indicated path as a CSV file. The given path must be a complete path including\n            the ``.csv`` filename.\n    Returns:\n        pandas.DataFrame or None:\n            If not ``output_path`` is given, a table containing one row per synthesizer and\n            one column for each dataset and metric is returned. Otherwise, there is no output.\n    \"\"\"", "\n", "if", "isinstance", "(", "scores", ",", "str", ")", "and", "os", ".", "path", ".", "isdir", "(", "scores", ")", ":", "\n", "        ", "scores", "=", "[", "\n", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "scores", ",", "path", ")", ",", "index_col", "=", "0", ")", "\n", "for", "path", "in", "os", ".", "listdir", "(", "scores", ")", "\n", "]", "\n", "", "try", ":", "\n", "        ", "scores", "=", "pd", ".", "concat", "(", "scores", ",", "ignore_index", "=", "True", ")", "\n", "scores", "=", "scores", ".", "drop", "(", "[", "'distance'", ",", "'iteration'", ",", "'name'", "]", ",", "axis", "=", "1", ",", "errors", "=", "'ignore'", ")", "\n", "", "except", ":", "\n", "        ", "return", "scores", "\n", "", "leaderboard", "=", "scores", ".", "mean", "(", ")", "\n", "\n", "if", "output_path", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "output_path", ")", ")", ",", "exist_ok", "=", "True", ")", "\n", "leaderboard", ".", "to_csv", "(", "output_path", ")", "\n", "\n", "", "return", "leaderboard", "\n", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.octgan.OCTGANSynthesizer.__init__": [[14, 29], ["torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dataset_name", ",", "\n", "args", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "self", ".", "embedding_dim", "=", "args", ".", "embedding_dim", "\n", "self", ".", "gen_dim", "=", "args", ".", "gen_dim", "\n", "self", ".", "dis_dim", "=", "args", ".", "dis_dim", "\n", "self", ".", "lr", "=", "args", ".", "lr", "\n", "\n", "self", ".", "l2scale", "=", "args", ".", "l2scale", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "self", ".", "epochs", "=", "args", ".", "epochs", "\n", "self", ".", "num_split", "=", "args", ".", "num_split", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.octgan.OCTGANSynthesizer.odetime": [[30, 33], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "range"], "methods", ["None"], ["", "def", "odetime", "(", "self", ",", "num_split", ")", ":", "\n", "        ", "return", "[", "torch", ".", "tensor", "(", "[", "1", "/", "num_split", "*", "i", "]", ",", "dtype", "=", "torch", ".", "float32", ",", "requires_grad", "=", "True", ",", "device", "=", "'cuda'", ")", "for", "\n", "i", "in", "range", "(", "1", ",", "num_split", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.octgan.OCTGANSynthesizer.fit": [[35, 168], ["octgan.OCTGANSynthesizer.copy", "octgan.synthesizers.transformers.BGMTransformer", "octgan.OCTGANSynthesizer.transformer.fit", "octgan.OCTGANSynthesizer.transformer.transform", "Sampler", "Cond", "octgan.synthesizers.networks.Generator", "torch.DataParallel().to", "torch.DataParallel().to", "torch.DataParallel().to", "torch.DataParallel().to", "octgan.synthesizers.networks.Discriminator", "torch.DataParallel().to", "torch.DataParallel().to", "torch.DataParallel().to", "torch.DataParallel().to", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "octgan.OCTGANSynthesizer.odetime", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "len", "octgan.OCTGANSynthesizer.generator.parameters", "torch.DataParallel().to.parameters", "len", "print", "range", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "octgan.OCTGANSynthesizer.cond_generator.sample", "octgan.OCTGANSynthesizer.generator", "apply_activate", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.DataParallel().to.", "torch.DataParallel().to.", "calc_gradient_penalty", "torch.Adam.zero_grad", "torch.Adam.zero_grad", "loss_d.backward", "torch.Adam.step", "torch.Adam.step", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "octgan.OCTGANSynthesizer.cond_generator.sample", "octgan.OCTGANSynthesizer.generator", "apply_activate", "torch.Adam.zero_grad", "loss_g.backward", "torch.Adam.step", "len", "Sampler.sample", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "numpy.arange", "numpy.random.shuffle", "Sampler.sample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.DataParallel().to.", "torch.DataParallel().to.", "cond_loss", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "len", "all_time[].clamp_", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "Sampler.sample.astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "all_time[].item", "len", "all_time[].item"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.transform", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.octgan.OCTGANSynthesizer.odetime", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.apply_activate", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.calc_gradient_penalty", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.apply_activate", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.cond_loss"], ["", "def", "fit", "(", "self", ",", "train_data", ",", "categorical_columns", ",", "ordinal_columns", ")", ":", "\n", "\n", "        ", "self", ".", "train", "=", "train_data", ".", "copy", "(", ")", "\n", "self", ".", "transformer", "=", "BGMTransformer", "(", ")", "\n", "self", ".", "transformer", ".", "fit", "(", "train_data", ",", "categorical_columns", ",", "ordinal_columns", ")", "\n", "train_data", "=", "self", ".", "transformer", ".", "transform", "(", "train_data", ")", "\n", "\n", "if", "len", "(", "train_data", ")", "<=", "self", ".", "batch_size", ":", "\n", "            ", "self", ".", "batch_size", "=", "(", "len", "(", "train_data", ")", "//", "10", ")", "*", "10", "\n", "\n", "", "data_sampler", "=", "Sampler", "(", "train_data", ",", "self", ".", "transformer", ".", "output_info", ")", "\n", "\n", "data_dim", "=", "self", ".", "transformer", ".", "output_dim", "\n", "self", ".", "cond_generator", "=", "Cond", "(", "train_data", ",", "self", ".", "transformer", ".", "output_info", ")", "\n", "\n", "self", ".", "generator", "=", "Generator", "(", "\n", "self", ".", "embedding_dim", "+", "self", ".", "cond_generator", ".", "n_opt", ",", "\n", "self", ".", "gen_dim", ",", "\n", "data_dim", ")", "\n", "self", ".", "generator", "=", "nn", ".", "DataParallel", "(", "self", ".", "generator", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "discriminator", "=", "Discriminator", "(", "\n", "data_dim", "+", "self", ".", "cond_generator", ".", "n_opt", ",", "\n", "self", ".", "dis_dim", ",", "self", ".", "num_split", ")", "\n", "discriminator", "=", "nn", ".", "DataParallel", "(", "discriminator", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "optimizerG", "=", "optim", ".", "Adam", "(", "self", ".", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.9", ")", ",", "weight_decay", "=", "self", ".", "l2scale", ")", "\n", "optimizerD", "=", "optim", ".", "Adam", "(", "discriminator", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.9", ")", ")", "\n", "\n", "all_time", "=", "self", ".", "odetime", "(", "self", ".", "num_split", ")", "\n", "optimizerT", "=", "optim", ".", "Adam", "(", "\n", "all_time", ",", "lr", "=", "2e-4", ",", "betas", "=", "(", "0.5", ",", "0.9", ")", ")", "\n", "\n", "assert", "self", ".", "batch_size", "%", "2", "==", "0", "\n", "mean", "=", "torch", ".", "zeros", "(", "self", ".", "batch_size", ",", "self", ".", "embedding_dim", ",", "device", "=", "self", ".", "device", ")", "\n", "std", "=", "mean", "+", "1", "\n", "\n", "steps_per_epoch", "=", "len", "(", "train_data", ")", "//", "self", ".", "batch_size", "\n", "\n", "iter", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "epochs", ")", ":", "\n", "            ", "print", "(", "\"epoch\"", ",", "i", ")", "\n", "for", "id_", "in", "range", "(", "steps_per_epoch", ")", ":", "\n", "\n", "                ", "iter", "+=", "1", "\n", "fakez", "=", "torch", ".", "normal", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "\n", "condvec", "=", "self", ".", "cond_generator", ".", "sample", "(", "self", ".", "batch_size", ")", "\n", "if", "condvec", "is", "None", ":", "\n", "                    ", "c1", ",", "m1", ",", "col", ",", "opt", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "real", "=", "data_sampler", ".", "sample", "(", "self", ".", "batch_size", ",", "col", ",", "opt", ")", "\n", "", "else", ":", "\n", "                    ", "c1", ",", "m1", ",", "col", ",", "opt", "=", "condvec", "\n", "c1", "=", "torch", ".", "from_numpy", "(", "c1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "m1", "=", "torch", ".", "from_numpy", "(", "m1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "fakez", "=", "torch", ".", "cat", "(", "[", "fakez", ",", "c1", "]", ",", "dim", "=", "1", ")", "\n", "\n", "perm", "=", "np", ".", "arange", "(", "self", ".", "batch_size", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "perm", ")", "\n", "real", "=", "data_sampler", ".", "sample", "(", "self", ".", "batch_size", ",", "col", "[", "perm", "]", ",", "opt", "[", "perm", "]", ")", "\n", "c2", "=", "c1", "[", "perm", "]", "\n", "\n", "", "fake", "=", "self", ".", "generator", "(", "fakez", ")", "\n", "fakeact", "=", "apply_activate", "(", "fake", ",", "self", ".", "transformer", ".", "output_info", ")", "\n", "\n", "real", "=", "torch", ".", "from_numpy", "(", "real", ".", "astype", "(", "'float32'", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "if", "c1", "is", "not", "None", ":", "\n", "                    ", "fake_cat", "=", "torch", ".", "cat", "(", "[", "fakeact", ",", "c1", "]", ",", "dim", "=", "1", ")", "\n", "real_cat", "=", "torch", ".", "cat", "(", "[", "real", ",", "c2", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "                    ", "real_cat", "=", "real", "\n", "fake_cat", "=", "fake", "\n", "\n", "######## update discriminator #########", "\n", "", "y_fake", "=", "discriminator", "(", "[", "fake_cat", ",", "all_time", "]", ")", "\n", "y_real", "=", "discriminator", "(", "[", "real_cat", ",", "all_time", "]", ")", "\n", "\n", "loss_d", "=", "-", "(", "torch", ".", "mean", "(", "y_real", ")", "-", "torch", ".", "mean", "(", "y_fake", ")", ")", "\n", "pen", "=", "calc_gradient_penalty", "(", "discriminator", ",", "real_cat", ",", "fake_cat", ",", "all_time", ",", "self", ".", "device", ",", "lambda_", "=", "10", ")", "\n", "\n", "loss_d", "=", "loss_d", "+", "pen", "\n", "optimizerD", ".", "zero_grad", "(", ")", "\n", "optimizerT", ".", "zero_grad", "(", ")", "\n", "\n", "loss_d", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "optimizerD", ".", "step", "(", ")", "\n", "optimizerT", ".", "step", "(", ")", "\n", "\n", "# clipping time points t.", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "for", "j", "in", "range", "(", "len", "(", "all_time", ")", ")", ":", "\n", "                        ", "if", "j", "==", "0", ":", "\n", "                            ", "start", "=", "0", "+", "0.00001", "\n", "", "else", ":", "\n", "                            ", "start", "=", "all_time", "[", "j", "-", "1", "]", ".", "item", "(", ")", "+", "0.00001", "\n", "\n", "", "if", "j", "==", "len", "(", "all_time", ")", "-", "1", ":", "\n", "                            ", "end", "=", "1", "-", "0.00001", "\n", "", "else", ":", "\n", "                            ", "end", "=", "all_time", "[", "j", "+", "1", "]", ".", "item", "(", ")", "-", "0.00001", "\n", "", "all_time", "[", "j", "]", "=", "all_time", "[", "j", "]", ".", "clamp_", "(", "min", "=", "start", ",", "max", "=", "end", ")", "\n", "\n", "######### update generator ##########", "\n", "", "", "fakez", "=", "torch", ".", "normal", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "\n", "condvec", "=", "self", ".", "cond_generator", ".", "sample", "(", "self", ".", "batch_size", ")", "\n", "\n", "if", "condvec", "is", "None", ":", "\n", "                    ", "c1", ",", "m1", ",", "col", ",", "opt", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "", "else", ":", "\n", "                    ", "c1", ",", "m1", ",", "col", ",", "opt", "=", "condvec", "\n", "c1", "=", "torch", ".", "from_numpy", "(", "c1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "m1", "=", "torch", ".", "from_numpy", "(", "m1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "fakez", "=", "torch", ".", "cat", "(", "[", "fakez", ",", "c1", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "fake", "=", "self", ".", "generator", "(", "fakez", ")", "\n", "fakeact", "=", "apply_activate", "(", "fake", ",", "self", ".", "transformer", ".", "output_info", ")", "\n", "\n", "if", "c1", "is", "not", "None", ":", "\n", "                    ", "y_fake", "=", "discriminator", "(", "[", "torch", ".", "cat", "(", "[", "fakeact", ",", "c1", "]", ",", "dim", "=", "1", ")", ",", "all_time", "]", ")", "\n", "", "else", ":", "\n", "                    ", "y_fake", "=", "discriminator", "(", "[", "fakeact", ",", "all_time", "]", ")", "\n", "\n", "", "if", "condvec", "is", "None", ":", "\n", "                    ", "cross_entropy", "=", "0", "\n", "", "else", ":", "\n", "                    ", "cross_entropy", "=", "cond_loss", "(", "fake", ",", "self", ".", "transformer", ".", "output_info", ",", "c1", ",", "m1", ")", "\n", "\n", "", "loss_g", "=", "-", "torch", ".", "mean", "(", "y_fake", ")", "+", "cross_entropy", "\n", "\n", "optimizerG", ".", "zero_grad", "(", ")", "\n", "loss_g", ".", "backward", "(", ")", "\n", "optimizerG", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.octgan.OCTGANSynthesizer.sample": [[170, 196], ["octgan.OCTGANSynthesizer.generator.eval", "range", "numpy.concatenate", "octgan.OCTGANSynthesizer.transformer.inverse_transform", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "octgan.OCTGANSynthesizer.cond_generator.sample_zero", "octgan.OCTGANSynthesizer.generator", "apply_activate", "numpy.concatenate.append", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "apply_activate.detach().cpu().numpy", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "apply_activate.detach().cpu", "apply_activate.detach"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.inverse_transform", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.Cond.sample_zero", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.apply_activate"], ["", "", "", "def", "sample", "(", "self", ",", "n", ")", ":", "\n", "\n", "        ", "self", ".", "generator", ".", "eval", "(", ")", "\n", "output_info", "=", "self", ".", "transformer", ".", "output_info", "\n", "steps", "=", "n", "//", "self", ".", "batch_size", "+", "1", "\n", "data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "steps", ")", ":", "\n", "            ", "mean", "=", "torch", ".", "zeros", "(", "self", ".", "batch_size", ",", "self", ".", "embedding_dim", ")", "\n", "std", "=", "mean", "+", "1", "\n", "fakez", "=", "torch", ".", "normal", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "condvec", "=", "self", ".", "cond_generator", ".", "sample_zero", "(", "self", ".", "batch_size", ")", "\n", "if", "condvec", "is", "None", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "c1", "=", "condvec", "\n", "c1", "=", "torch", ".", "from_numpy", "(", "c1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "fakez", "=", "torch", ".", "cat", "(", "[", "fakez", ",", "c1", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "fake", "=", "self", ".", "generator", "(", "fakez", ")", "\n", "fakeact", "=", "apply_activate", "(", "fake", ",", "output_info", ")", "\n", "data", ".", "append", "(", "fakeact", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "data", "=", "np", ".", "concatenate", "(", "data", ",", "axis", "=", "0", ")", "\n", "data", "=", "data", "[", ":", "n", "]", "\n", "return", "self", ".", "transformer", ".", "inverse_transform", "(", "data", ",", "None", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.base.BaseSynthesizer.__init__": [[6, 9], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset_name", ",", "args", ")", ":", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "self", ".", "args", "=", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.base.BaseSynthesizer.fit": [[10, 12], ["tuple", "tuple"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.base.BaseSynthesizer.sample": [[13, 15], ["None"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "samples", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.base.BaseSynthesizer.fit_sample": [[16, 22], ["tuple", "tuple", "base.BaseSynthesizer.fit", "base.BaseSynthesizer.sample"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample"], ["", "def", "fit_sample", "(", "self", ",", "data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "\n", "        ", "self", ".", "fit", "(", "data", ",", "categorical_columns", ",", "ordinal_columns", ")", "\n", "num", "=", "data", ".", "shape", "[", "0", "]", "\n", "\n", "return", "self", ".", "sample", "(", "num", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Discriminator.__init__": [[13, 28], ["torch.nn.Module.__init__", "list", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "dis_dims", ",", "pack", "=", "10", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dim", "=", "input_dim", "*", "pack", "\n", "self", ".", "pack", "=", "pack", "\n", "self", ".", "packdim", "=", "dim", "\n", "seq", "=", "[", "]", "\n", "for", "item", "in", "list", "(", "dis_dims", ")", ":", "\n", "            ", "seq", "+=", "[", "\n", "Linear", "(", "dim", ",", "item", ")", ",", "\n", "LeakyReLU", "(", "0.2", ")", ",", "\n", "Dropout", "(", "0.5", ")", "\n", "]", "\n", "dim", "=", "item", "\n", "", "seq", "+=", "[", "Linear", "(", "dim", ",", "1", ")", "]", "\n", "self", ".", "seq", "=", "Sequential", "(", "*", "seq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Discriminator.forward": [[29, 32], ["ctgan.Discriminator.seq", "input.view", "input.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "assert", "input", ".", "size", "(", ")", "[", "0", "]", "%", "self", ".", "pack", "==", "0", "\n", "return", "self", ".", "seq", "(", "input", ".", "view", "(", "-", "1", ",", "self", ".", "packdim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Residual.__init__": [[35, 40], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "i", ",", "o", ")", ":", "\n", "        ", "super", "(", "Residual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "Linear", "(", "i", ",", "o", ")", "\n", "self", ".", "bn", "=", "BatchNorm1d", "(", "o", ")", "\n", "self", ".", "relu", "=", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Residual.forward": [[41, 46], ["ctgan.Residual.fc", "ctgan.Residual.bn", "ctgan.Residual.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "fc", "(", "input", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "torch", ".", "cat", "(", "[", "out", ",", "input", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Generator.__init__": [[49, 60], ["torch.nn.Module.__init__", "list", "seq.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "ctgan.Residual"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "gen_dims", ",", "data_dim", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dim", "=", "embedding_dim", "\n", "seq", "=", "[", "]", "\n", "for", "item", "in", "list", "(", "gen_dims", ")", ":", "\n", "            ", "seq", "+=", "[", "\n", "Residual", "(", "dim", ",", "item", ")", "\n", "]", "\n", "dim", "+=", "item", "\n", "", "seq", ".", "append", "(", "Linear", "(", "dim", ",", "data_dim", ")", ")", "\n", "self", ".", "seq", "=", "Sequential", "(", "*", "seq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Generator.forward": [[61, 64], ["ctgan.Generator.seq"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "data", "=", "self", ".", "seq", "(", "input", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Cond.__init__": [[89, 144], ["numpy.zeros", "numpy.asarray", "max", "ctgan.Cond.model.append", "numpy.sum", "numpy.log", "ctgan.Cond.interval.append", "numpy.argmax", "numpy.sum"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "output_info", ")", ":", "\n", "        ", "self", ".", "model", "=", "[", "]", "\n", "\n", "st", "=", "0", "\n", "skip", "=", "False", "\n", "max_interval", "=", "0", "\n", "counter", "=", "0", "\n", "for", "item", "in", "output_info", ":", "\n", "            ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "                ", "st", "+=", "item", "[", "0", "]", "\n", "skip", "=", "True", "\n", "continue", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "                ", "if", "skip", ":", "\n", "                    ", "skip", "=", "False", "\n", "st", "+=", "item", "[", "0", "]", "\n", "continue", "\n", "\n", "", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "max_interval", "=", "max", "(", "max_interval", ",", "ed", "-", "st", ")", "\n", "counter", "+=", "1", "\n", "self", ".", "model", ".", "append", "(", "np", ".", "argmax", "(", "data", "[", ":", ",", "st", ":", "ed", "]", ",", "axis", "=", "-", "1", ")", ")", "\n", "st", "=", "ed", "\n", "", "else", ":", "\n", "                ", "assert", "0", "\n", "", "", "assert", "st", "==", "data", ".", "shape", "[", "1", "]", "\n", "\n", "self", ".", "interval", "=", "[", "]", "\n", "self", ".", "n_col", "=", "0", "\n", "self", ".", "n_opt", "=", "0", "\n", "skip", "=", "False", "\n", "st", "=", "0", "\n", "self", ".", "p", "=", "np", ".", "zeros", "(", "(", "counter", ",", "max_interval", ")", ")", "\n", "for", "item", "in", "output_info", ":", "\n", "            ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "                ", "skip", "=", "True", "\n", "st", "+=", "item", "[", "0", "]", "\n", "continue", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "                ", "if", "skip", ":", "\n", "                    ", "st", "+=", "item", "[", "0", "]", "\n", "skip", "=", "False", "\n", "continue", "\n", "", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "tmp", "=", "np", ".", "sum", "(", "data", "[", ":", ",", "st", ":", "ed", "]", ",", "axis", "=", "0", ")", "\n", "tmp", "=", "np", ".", "log", "(", "tmp", "+", "1", ")", "\n", "tmp", "=", "tmp", "/", "np", ".", "sum", "(", "tmp", ")", "\n", "self", ".", "p", "[", "self", ".", "n_col", ",", ":", "item", "[", "0", "]", "]", "=", "tmp", "\n", "self", ".", "interval", ".", "append", "(", "(", "self", ".", "n_opt", ",", "item", "[", "0", "]", ")", ")", "\n", "self", ".", "n_opt", "+=", "item", "[", "0", "]", "\n", "self", ".", "n_col", "+=", "1", "\n", "st", "=", "ed", "\n", "", "else", ":", "\n", "                ", "assert", "0", "\n", "", "", "self", ".", "interval", "=", "np", ".", "asarray", "(", "self", ".", "interval", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Cond.sample": [[145, 159], ["numpy.random.choice", "numpy.zeros", "numpy.zeros", "ctgan.random_choice_prob_index", "numpy.arange", "numpy.arange", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.random_choice_prob_index"], ["", "def", "sample", "(", "self", ",", "batch", ")", ":", "\n", "        ", "if", "self", ".", "n_col", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "batch", "=", "batch", "\n", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "n_col", ")", ",", "batch", ")", "\n", "\n", "vec1", "=", "np", ".", "zeros", "(", "(", "batch", ",", "self", ".", "n_opt", ")", ",", "dtype", "=", "'float32'", ")", "\n", "mask1", "=", "np", ".", "zeros", "(", "(", "batch", ",", "self", ".", "n_col", ")", ",", "dtype", "=", "'float32'", ")", "\n", "mask1", "[", "np", ".", "arange", "(", "batch", ")", ",", "idx", "]", "=", "1", "\n", "opt1prime", "=", "random_choice_prob_index", "(", "self", ".", "p", "[", "idx", "]", ")", "\n", "opt1", "=", "self", ".", "interval", "[", "idx", ",", "0", "]", "+", "opt1prime", "\n", "vec1", "[", "np", ".", "arange", "(", "batch", ")", ",", "opt1", "]", "=", "1", "\n", "\n", "return", "vec1", ",", "mask1", ",", "idx", ",", "opt1prime", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Cond.sample_zero": [[160, 170], ["numpy.zeros", "numpy.random.choice", "range", "numpy.arange", "int", "numpy.random.choice"], "methods", ["None"], ["", "def", "sample_zero", "(", "self", ",", "batch", ")", ":", "\n", "        ", "if", "self", ".", "n_col", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "vec", "=", "np", ".", "zeros", "(", "(", "batch", ",", "self", ".", "n_opt", ")", ",", "dtype", "=", "'float32'", ")", "\n", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "n_col", ")", ",", "batch", ")", "\n", "for", "i", "in", "range", "(", "batch", ")", ":", "\n", "            ", "col", "=", "idx", "[", "i", "]", "\n", "pick", "=", "int", "(", "np", ".", "random", ".", "choice", "(", "self", ".", "model", "[", "col", "]", ")", ")", "\n", "vec", "[", "i", ",", "pick", "+", "self", ".", "interval", "[", "col", ",", "0", "]", "]", "=", "1", "\n", "", "return", "vec", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Sampler.__init__": [[209, 235], ["object.__init__", "len", "range", "ctgan.Sampler.model.append", "tmp.append", "numpy.nonzero"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["def", "__init__", "(", "self", ",", "data", ",", "output_info", ")", ":", "\n", "        ", "super", "(", "Sampler", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "model", "=", "[", "]", "\n", "self", ".", "n", "=", "len", "(", "data", ")", "\n", "\n", "st", "=", "0", "\n", "skip", "=", "False", "\n", "for", "item", "in", "output_info", ":", "\n", "            ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "                ", "st", "+=", "item", "[", "0", "]", "\n", "skip", "=", "True", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "                ", "if", "skip", ":", "\n", "                    ", "skip", "=", "False", "\n", "st", "+=", "item", "[", "0", "]", "\n", "continue", "\n", "", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "tmp", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "item", "[", "0", "]", ")", ":", "\n", "                    ", "tmp", ".", "append", "(", "np", ".", "nonzero", "(", "data", "[", ":", ",", "st", "+", "j", "]", ")", "[", "0", "]", ")", "\n", "", "self", ".", "model", ".", "append", "(", "tmp", ")", "\n", "st", "=", "ed", "\n", "", "else", ":", "\n", "                ", "assert", "0", "\n", "", "", "assert", "st", "==", "data", ".", "shape", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.Sampler.sample": [[236, 244], ["zip", "numpy.random.choice", "numpy.random.choice.append", "numpy.arange", "numpy.random.choice"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "n", ",", "col", ",", "opt", ")", ":", "\n", "        ", "if", "col", "is", "None", ":", "\n", "            ", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "n", ")", ",", "n", ")", "\n", "return", "self", ".", "data", "[", "idx", "]", "\n", "", "idx", "=", "[", "]", "\n", "for", "c", ",", "o", "in", "zip", "(", "col", ",", "opt", ")", ":", "\n", "            ", "idx", ".", "append", "(", "np", ".", "random", ".", "choice", "(", "self", ".", "model", "[", "c", "]", "[", "o", "]", ")", ")", "\n", "", "return", "self", ".", "data", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.CTGANSynthesizer.__init__": [[266, 281], ["torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dataset_name", ",", "\n", "args", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "self", ".", "embedding_dim", "=", "args", ".", "embedding_dim", "\n", "self", ".", "gen_dim", "=", "args", ".", "gen_dim", "\n", "self", ".", "dis_dim", "=", "args", ".", "dis_dim", "\n", "self", ".", "lr", "=", "args", ".", "lr", "\n", "\n", "self", ".", "l2scale", "=", "args", ".", "l2scale", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "self", ".", "epochs", "=", "args", ".", "epochs", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "self", ".", "scores_max", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.CTGANSynthesizer.fit": [[282, 387], ["tuple", "tuple", "octgan.synthesizers.transformers.BGMTransformer", "ctgan.CTGANSynthesizer.transformer.fit", "ctgan.CTGANSynthesizer.transformer.transform", "ctgan.Sampler", "ctgan.Cond", "Generator().to", "Discriminator().to", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "ctgan.CTGANSynthesizer.generator.parameters", "Discriminator().to.parameters", "len", "len", "print", "range", "ctgan.Generator", "ctgan.Discriminator", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "ctgan.CTGANSynthesizer.cond_generator.sample", "ctgan.CTGANSynthesizer.generator", "ctgan.apply_activate", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "Discriminator().to.", "Discriminator().to.", "ctgan.calc_gradient_penalty", "torch.Adam.zero_grad", "calc_gradient_penalty.backward", "loss_d.backward", "torch.Adam.step", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "ctgan.CTGANSynthesizer.cond_generator.sample", "ctgan.CTGANSynthesizer.generator", "ctgan.apply_activate", "torch.Adam.zero_grad", "loss_g.backward", "torch.Adam.step", "len", "ctgan.Sampler.sample", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "numpy.arange", "numpy.random.shuffle", "ctgan.Sampler.sample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Discriminator().to.", "Discriminator().to.", "ctgan.cond_loss", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "ctgan.Sampler.sample", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.transform", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.apply_activate", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.calc_gradient_penalty", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.apply_activate", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.cond_loss", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample"], ["", "def", "fit", "(", "self", ",", "train_data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "\n", "        ", "self", ".", "transformer", "=", "BGMTransformer", "(", ")", "\n", "self", ".", "transformer", ".", "fit", "(", "train_data", ",", "categorical_columns", ",", "ordinal_columns", ")", "\n", "train_data", "=", "self", ".", "transformer", ".", "transform", "(", "train_data", ")", "\n", "\n", "\n", "data_sampler", "=", "Sampler", "(", "train_data", ",", "self", ".", "transformer", ".", "output_info", ")", "\n", "data_dim", "=", "self", ".", "transformer", ".", "output_dim", "\n", "self", ".", "cond_generator", "=", "Cond", "(", "train_data", ",", "self", ".", "transformer", ".", "output_info", ")", "\n", "\n", "self", ".", "generator", "=", "Generator", "(", "\n", "self", ".", "embedding_dim", "+", "self", ".", "cond_generator", ".", "n_opt", ",", "\n", "self", ".", "gen_dim", ",", "\n", "data_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "discriminator", "=", "Discriminator", "(", "\n", "data_dim", "+", "self", ".", "cond_generator", ".", "n_opt", ",", "\n", "self", ".", "dis_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "optimizerG", "=", "optim", ".", "Adam", "(", "\n", "self", ".", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.9", ")", ",", "weight_decay", "=", "self", ".", "l2scale", ")", "\n", "optimizerD", "=", "optim", ".", "Adam", "(", "discriminator", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.9", ")", ")", "\n", "\n", "if", "len", "(", "train_data", ")", "<=", "self", ".", "batch_size", ":", "\n", "            ", "self", ".", "batch_size", "=", "(", "len", "(", "train_data", ")", "//", "10", ")", "*", "10", "\n", "\n", "", "assert", "self", ".", "batch_size", "%", "2", "==", "0", "\n", "mean", "=", "torch", ".", "zeros", "(", "self", ".", "batch_size", ",", "self", ".", "embedding_dim", ",", "device", "=", "self", ".", "device", ")", "\n", "std", "=", "mean", "+", "1", "\n", "\n", "steps_per_epoch", "=", "len", "(", "train_data", ")", "//", "self", ".", "batch_size", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "epochs", ")", ":", "\n", "            ", "print", "(", "i", ")", "\n", "for", "id_", "in", "range", "(", "steps_per_epoch", ")", ":", "\n", "                ", "fakez", "=", "torch", ".", "normal", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "\n", "\n", "condvec", "=", "self", ".", "cond_generator", ".", "sample", "(", "self", ".", "batch_size", ")", "\n", "if", "condvec", "is", "None", ":", "\n", "                    ", "c1", ",", "m1", ",", "col", ",", "opt", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "real", "=", "data_sampler", ".", "sample", "(", "self", ".", "batch_size", ",", "col", ",", "opt", ")", "\n", "", "else", ":", "\n", "                    ", "c1", ",", "m1", ",", "col", ",", "opt", "=", "condvec", "\n", "c1", "=", "torch", ".", "from_numpy", "(", "c1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "m1", "=", "torch", ".", "from_numpy", "(", "m1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "fakez", "=", "torch", ".", "cat", "(", "[", "fakez", ",", "c1", "]", ",", "dim", "=", "1", ")", "\n", "\n", "perm", "=", "np", ".", "arange", "(", "self", ".", "batch_size", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "perm", ")", "\n", "real", "=", "data_sampler", ".", "sample", "(", "self", ".", "batch_size", ",", "col", "[", "perm", "]", ",", "opt", "[", "perm", "]", ")", "\n", "c2", "=", "c1", "[", "perm", "]", "\n", "\n", "", "fake", "=", "self", ".", "generator", "(", "fakez", ")", "\n", "fakeact", "=", "apply_activate", "(", "fake", ",", "self", ".", "transformer", ".", "output_info", ")", "\n", "\n", "real", "=", "torch", ".", "from_numpy", "(", "real", ".", "astype", "(", "'float32'", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "if", "c1", "is", "not", "None", ":", "\n", "                    ", "fake_cat", "=", "torch", ".", "cat", "(", "[", "fakeact", ",", "c1", "]", ",", "dim", "=", "1", ")", "\n", "real_cat", "=", "torch", ".", "cat", "(", "[", "real", ",", "c2", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "                    ", "real_cat", "=", "real", "\n", "fake_cat", "=", "fake", "\n", "\n", "", "y_fake", "=", "discriminator", "(", "fake_cat", ")", "\n", "y_real", "=", "discriminator", "(", "real_cat", ")", "\n", "\n", "loss_d", "=", "-", "torch", ".", "mean", "(", "y_real", ")", "+", "torch", ".", "mean", "(", "y_fake", ")", "\n", "pen", "=", "calc_gradient_penalty", "(", "discriminator", ",", "real_cat", ",", "fake_cat", ",", "self", ".", "device", ")", "\n", "\n", "optimizerD", ".", "zero_grad", "(", ")", "\n", "pen", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "loss_d", ".", "backward", "(", ")", "\n", "optimizerD", ".", "step", "(", ")", "\n", "\n", "fakez", "=", "torch", ".", "normal", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "\n", "condvec", "=", "self", ".", "cond_generator", ".", "sample", "(", "self", ".", "batch_size", ")", "\n", "\n", "if", "condvec", "is", "None", ":", "\n", "                    ", "c1", ",", "m1", ",", "col", ",", "opt", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "", "else", ":", "\n", "                    ", "c1", ",", "m1", ",", "col", ",", "opt", "=", "condvec", "\n", "c1", "=", "torch", ".", "from_numpy", "(", "c1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "m1", "=", "torch", ".", "from_numpy", "(", "m1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "fakez", "=", "torch", ".", "cat", "(", "[", "fakez", ",", "c1", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "fake", "=", "self", ".", "generator", "(", "fakez", ")", "\n", "fakeact", "=", "apply_activate", "(", "fake", ",", "self", ".", "transformer", ".", "output_info", ")", "\n", "\n", "if", "c1", "is", "not", "None", ":", "\n", "                    ", "y_fake", "=", "discriminator", "(", "torch", ".", "cat", "(", "[", "fakeact", ",", "c1", "]", ",", "dim", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "                    ", "y_fake", "=", "discriminator", "(", "fakeact", ")", "\n", "\n", "", "if", "condvec", "is", "None", ":", "\n", "                    ", "cross_entropy", "=", "0", "\n", "", "else", ":", "\n", "                    ", "cross_entropy", "=", "cond_loss", "(", "fake", ",", "self", ".", "transformer", ".", "output_info", ",", "c1", ",", "m1", ")", "\n", "\n", "", "loss_g", "=", "-", "torch", ".", "mean", "(", "y_fake", ")", "+", "cross_entropy", "\n", "\n", "optimizerG", ".", "zero_grad", "(", ")", "\n", "loss_g", ".", "backward", "(", ")", "\n", "optimizerG", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.CTGANSynthesizer.sample": [[389, 416], ["ctgan.CTGANSynthesizer.generator.eval", "range", "numpy.concatenate", "ctgan.CTGANSynthesizer.transformer.inverse_transform", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "torch.normal().to", "ctgan.CTGANSynthesizer.cond_generator.sample_zero", "ctgan.CTGANSynthesizer.generator", "ctgan.apply_activate", "numpy.concatenate.append", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "apply_activate.detach().cpu().numpy", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "apply_activate.detach().cpu", "apply_activate.detach"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.inverse_transform", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.Cond.sample_zero", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.apply_activate"], ["", "", "", "def", "sample", "(", "self", ",", "n", ")", ":", "\n", "\n", "        ", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "output_info", "=", "self", ".", "transformer", ".", "output_info", "\n", "steps", "=", "n", "//", "self", ".", "batch_size", "+", "1", "\n", "data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "steps", ")", ":", "\n", "            ", "mean", "=", "torch", ".", "zeros", "(", "self", ".", "batch_size", ",", "self", ".", "embedding_dim", ")", "\n", "std", "=", "mean", "+", "1", "\n", "fakez", "=", "torch", ".", "normal", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "condvec", "=", "self", ".", "cond_generator", ".", "sample_zero", "(", "self", ".", "batch_size", ")", "\n", "if", "condvec", "is", "None", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "c1", "=", "condvec", "\n", "c1", "=", "torch", ".", "from_numpy", "(", "c1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "fakez", "=", "torch", ".", "cat", "(", "[", "fakez", ",", "c1", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "fake", "=", "self", ".", "generator", "(", "fakez", ")", "\n", "fakeact", "=", "apply_activate", "(", "fake", ",", "output_info", ")", "\n", "data", ".", "append", "(", "fakeact", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "data", "=", "np", ".", "concatenate", "(", "data", ",", "axis", "=", "0", ")", "\n", "data", "=", "data", "[", ":", "n", "]", "\n", "return", "self", ".", "transformer", ".", "inverse_transform", "(", "data", ",", "None", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.apply_activate": [[66, 81], ["torch.cat", "torch.cat", "torch.cat", "data_t.append", "torch.tanh", "torch.tanh", "torch.tanh", "data_t.append", "torch.nn.functional.gumbel_softmax"], "function", ["None"], ["", "", "def", "apply_activate", "(", "data", ",", "output_info", ")", ":", "\n", "    ", "data_t", "=", "[", "]", "\n", "st", "=", "0", "\n", "for", "item", "in", "output_info", ":", "\n", "        ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "            ", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "data_t", ".", "append", "(", "torch", ".", "tanh", "(", "data", "[", ":", ",", "st", ":", "ed", "]", ")", ")", "\n", "st", "=", "ed", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "            ", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "data_t", ".", "append", "(", "F", ".", "gumbel_softmax", "(", "data", "[", ":", ",", "st", ":", "ed", "]", ",", "tau", "=", "0.2", ")", ")", "\n", "st", "=", "ed", "\n", "", "else", ":", "\n", "            ", "assert", "0", "\n", "", "", "return", "torch", ".", "cat", "(", "data_t", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.random_choice_prob_index": [[83, 86], ["numpy.expand_dims", "numpy.random.rand", "a.cumsum"], "function", ["None"], ["", "def", "random_choice_prob_index", "(", "a", ",", "axis", "=", "1", ")", ":", "\n", "    ", "r", "=", "np", ".", "expand_dims", "(", "np", ".", "random", ".", "rand", "(", "a", ".", "shape", "[", "1", "-", "axis", "]", ")", ",", "axis", "=", "axis", ")", "\n", "return", "(", "a", ".", "cumsum", "(", "axis", "=", "axis", ")", ">", "r", ")", ".", "argmax", "(", "axis", "=", "axis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.cond_loss": [[172, 204], ["torch.stack", "torch.stack", "torch.stack", "data.size", "torch.nn.functional.cross_entropy", "torch.stack.append", "torch.argmax", "torch.argmax", "torch.argmax"], "function", ["None"], ["", "", "def", "cond_loss", "(", "data", ",", "output_info", ",", "c", ",", "m", ")", ":", "\n", "    ", "loss", "=", "[", "]", "\n", "st", "=", "0", "\n", "st_c", "=", "0", "\n", "skip", "=", "False", "\n", "for", "item", "in", "output_info", ":", "\n", "        ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "            ", "st", "+=", "item", "[", "0", "]", "\n", "skip", "=", "True", "\n", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "            ", "if", "skip", ":", "\n", "                ", "skip", "=", "False", "\n", "st", "+=", "item", "[", "0", "]", "\n", "continue", "\n", "\n", "", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "ed_c", "=", "st_c", "+", "item", "[", "0", "]", "\n", "tmp", "=", "F", ".", "cross_entropy", "(", "\n", "data", "[", ":", ",", "st", ":", "ed", "]", ",", "\n", "torch", ".", "argmax", "(", "c", "[", ":", ",", "st_c", ":", "ed_c", "]", ",", "dim", "=", "1", ")", ",", "\n", "reduction", "=", "'none'", "\n", ")", "\n", "loss", ".", "append", "(", "tmp", ")", "\n", "st", "=", "ed", "\n", "st_c", "=", "ed_c", "\n", "\n", "", "else", ":", "\n", "            ", "assert", "0", "\n", "", "", "loss", "=", "torch", ".", "stack", "(", "loss", ",", "dim", "=", "1", ")", "\n", "\n", "return", "(", "loss", "*", "m", ")", ".", "sum", "(", ")", "/", "data", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.ctgan.calc_gradient_penalty": [[246, 263], ["torch.rand", "torch.rand", "torch.rand", "alpha.view.repeat", "alpha.view.view", "netD", "real_data.size", "real_data.size", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "real_data.size", "torch.ones", "torch.ones", "torch.ones", "netD.size", "gradients.view().norm", "gradients.view", "real_data.size"], "function", ["None"], ["", "", "def", "calc_gradient_penalty", "(", "netD", ",", "real_data", ",", "fake_data", ",", "device", "=", "'cpu'", ",", "pac", "=", "10", ",", "lambda_", "=", "10", ")", ":", "\n", "    ", "alpha", "=", "torch", ".", "rand", "(", "real_data", ".", "size", "(", "0", ")", "//", "pac", ",", "1", ",", "1", ",", "device", "=", "device", ")", "\n", "alpha", "=", "alpha", ".", "repeat", "(", "1", ",", "pac", ",", "real_data", ".", "size", "(", "1", ")", ")", "\n", "alpha", "=", "alpha", ".", "view", "(", "-", "1", ",", "real_data", ".", "size", "(", "1", ")", ")", "\n", "\n", "interpolates", "=", "alpha", "*", "real_data", "+", "(", "(", "1", "-", "alpha", ")", "*", "fake_data", ")", "\n", "\n", "disc_interpolates", "=", "netD", "(", "interpolates", ")", "\n", "\n", "gradients", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "outputs", "=", "disc_interpolates", ",", "inputs", "=", "interpolates", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "disc_interpolates", ".", "size", "(", ")", ",", "device", "=", "device", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "\n", "gradient_penalty", "=", "(", "\n", "(", "gradients", ".", "view", "(", "-", "1", ",", "pac", "*", "real_data", ".", "size", "(", "1", ")", ")", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "-", "1", ")", "**", "2", ")", ".", "mean", "(", ")", "*", "lambda_", "\n", "return", "gradient_penalty", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.networks.Generator.__init__": [[8, 21], ["torch.nn.Module.__init__", "octgan.synthesizers.odeblocks.ODEBlockG", "list", "seq.append", "torch.nn.Sequential", "torch.nn.Sequential", "octgan.synthesizers.odeblocks.ODEFuncG", "torch.nn.Linear", "torch.nn.Linear", "networks.Residual"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "gen_dims", ",", "data_dim", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dim", "=", "embedding_dim", "\n", "self", ".", "ode", "=", "ODEBlockG", "(", "ODEFuncG", "(", "dim", ")", ")", "\n", "\n", "seq", "=", "[", "]", "\n", "for", "item", "in", "list", "(", "gen_dims", ")", ":", "\n", "            ", "seq", "+=", "[", "\n", "Residual", "(", "dim", ",", "item", ")", "\n", "]", "\n", "dim", "+=", "item", "\n", "", "seq", ".", "append", "(", "Linear", "(", "dim", ",", "data_dim", ")", ")", "\n", "self", ".", "seq", "=", "Sequential", "(", "*", "seq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.networks.Generator.forward": [[22, 26], ["networks.Generator.ode", "networks.Generator.seq"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "data", "=", "self", ".", "ode", "(", "input", ")", "\n", "data", "=", "self", ".", "seq", "(", "data", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.networks.Discriminator.__init__": [[28, 50], ["torch.nn.Module.__init__", "list", "torch.nn.Sequential", "torch.nn.Sequential", "octgan.synthesizers.odeblocks.ODEBlockD", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "octgan.synthesizers.odeblocks.ODEFuncD", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Dropout", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "dis_dims", ",", "num_split", ",", "pack", "=", "1", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dim", "=", "input_dim", "*", "pack", "\n", "self", ".", "pack", "=", "pack", "\n", "self", ".", "packdim", "=", "dim", "\n", "self", ".", "num_split", "=", "num_split", "\n", "\n", "seq", "=", "[", "]", "\n", "for", "item", "in", "list", "(", "dis_dims", ")", ":", "\n", "            ", "seq", "+=", "[", "\n", "Linear", "(", "dim", ",", "item", ")", ",", "\n", "LeakyReLU", "(", "0.2", ")", ",", "\n", "Dropout", "(", "0.5", ")", "\n", "]", "\n", "dim", "=", "item", "\n", "", "self", ".", "seq", "=", "Sequential", "(", "*", "seq", ")", "\n", "self", ".", "ode", "=", "ODEBlockD", "(", "ODEFuncD", "(", "dim", ")", ",", "self", ".", "num_split", ")", "\n", "\n", "self", ".", "traj_dim", "=", "dim", "*", "(", "self", ".", "num_split", "+", "1", ")", "\n", "self", ".", "last1", "=", "nn", ".", "Linear", "(", "self", ".", "traj_dim", ",", "self", ".", "traj_dim", "*", "2", ")", "\n", "self", ".", "last3", "=", "nn", ".", "Linear", "(", "self", ".", "traj_dim", "*", "2", ",", "self", ".", "traj_dim", ")", "\n", "self", ".", "last4", "=", "nn", ".", "Linear", "(", "self", ".", "traj_dim", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.networks.Discriminator.forward": [[51, 63], ["networks.Discriminator.seq", "networks.Discriminator.ode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu", "networks.Discriminator.last4", "value.view", "networks.Discriminator.last1", "networks.Discriminator.last3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "value", "=", "x", "[", "0", "]", "\n", "time", "=", "x", "[", "1", "]", "\n", "out", "=", "self", ".", "seq", "(", "value", ".", "view", "(", "-", "1", ",", "self", ".", "packdim", ")", ")", "\n", "out1_time", "=", "[", "out", ",", "time", "]", "\n", "out", "=", "self", ".", "ode", "(", "out1_time", ")", "\n", "out", "=", "torch", ".", "cat", "(", "out", ",", "dim", "=", "1", ")", "\n", "\n", "out", "=", "F", ".", "leaky_relu", "(", "self", ".", "last1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "leaky_relu", "(", "self", ".", "last3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "last4", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.networks.Residual.__init__": [[66, 71], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "i", ",", "o", ")", ":", "\n", "        ", "super", "(", "Residual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "Linear", "(", "i", ",", "o", ")", "\n", "self", ".", "bn", "=", "BatchNorm1d", "(", "o", ")", "\n", "self", ".", "relu", "=", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.networks.Residual.forward": [[72, 77], ["networks.Residual.fc", "networks.Residual.bn", "networks.Residual.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "fc", "(", "input", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "torch", ".", "cat", "(", "[", "out", ",", "input", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.odeblocks.PixelNorm.__init__": [[7, 9], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.odeblocks.PixelNorm.forward": [[10, 12], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", "/", "torch", ".", "sqrt", "(", "torch", ".", "mean", "(", "input", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.odeblocks.ODEFuncG.__init__": [[15, 31], ["torch.Module.__init__", "odeblocks.PixelNorm", "seq.append", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "first_layer_dim", ")", ":", "\n", "        ", "super", "(", "ODEFuncG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dim", "=", "first_layer_dim", "\n", "\n", "self", ".", "layer_start", "=", "PixelNorm", "(", ")", "\n", "seq", "=", "[", "nn", ".", "Linear", "(", "first_layer_dim", "+", "1", ",", "first_layer_dim", "+", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "]", "\n", "seq", "*=", "7", "\n", "seq", ".", "append", "(", "nn", ".", "Linear", "(", "first_layer_dim", "+", "1", ",", "first_layer_dim", ")", ")", "\n", "self", ".", "layer_t", "=", "Sequential", "(", "*", "seq", ")", "\n", "\n", "for", "m", "in", "self", ".", "layer_t", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "0.1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "val", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.odeblocks.ODEFuncG.forward": [[32, 39], ["odeblocks.ODEFuncG.layer_start", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "odeblocks.ODEFuncG.layer_t", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "t", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "layer_start", "(", "x", ")", "\n", "tt", "=", "torch", ".", "ones_like", "(", "x", "[", ":", ",", "[", "0", "]", "]", ")", "*", "t", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "tt", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "layer_t", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.odeblocks.ODEFuncD.__init__": [[42, 57], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "first_layer_dim", ")", ":", "\n", "        ", "super", "(", "ODEFuncD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer_start", "=", "nn", ".", "Sequential", "(", "nn", ".", "BatchNorm1d", "(", "first_layer_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "layer_t", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "first_layer_dim", "+", "1", ",", "first_layer_dim", "*", "2", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "first_layer_dim", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "first_layer_dim", "*", "2", ",", "first_layer_dim", "*", "1", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "first_layer_dim", "*", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "for", "m", "in", "self", ".", "layer_t", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "0.1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "val", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.odeblocks.ODEFuncD.forward": [[58, 64], ["odeblocks.ODEFuncD.layer_start", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "odeblocks.ODEFuncD.layer_t", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "t", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "layer_start", "(", "x", ")", "\n", "tt", "=", "torch", ".", "ones_like", "(", "x", "[", ":", ",", "[", "0", "]", "]", ")", "*", "t", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "tt", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "layer_t", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.odeblocks.ODEBlockG.__init__": [[66, 70], ["torch.Module.__init__", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "odefunc", ")", ":", "\n", "        ", "super", "(", "ODEBlockG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "odefunc", "=", "odefunc", "\n", "self", ".", "integration_time", "=", "torch", ".", "tensor", "(", "[", "0", ",", "1", "]", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.odeblocks.ODEBlockG.forward": [[71, 77], ["odeblocks.ODEBlockG.integration_time.type_as", "torchdiffeq.odeint"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.odeint.odeint"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "self", ".", "integration_time", "=", "self", ".", "integration_time", ".", "type_as", "(", "x", ")", "\n", "out", "=", "odeint", "(", "self", ".", "odefunc", ",", "x", ",", "self", ".", "integration_time", ",", "rtol", "=", "1e-3", ",", "atol", "=", "1e-3", ")", "\n", "\n", "return", "out", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.odeblocks.ODEBlockD.__init__": [[79, 84], ["torch.Module.__init__", "torch.device", "torch.device", "torch.device", "torch.device", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "odefunc", ",", "num_split", ")", ":", "\n", "        ", "super", "(", "ODEBlockD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "odefunc", "=", "odefunc", "\n", "self", ".", "num_split", "=", "num_split", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.odeblocks.ODEBlockD.forward": [[85, 102], ["torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "range", "len", "odeblocks.ODEBlockD.total_integration_time[].type_as", "torchdiffeq.odeint", "out.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.odeint.odeint"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "initial_value", "=", "x", "[", "0", "]", "\n", "integration_time", "=", "torch", ".", "cat", "(", "x", "[", "1", "]", ",", "dim", "=", "0", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "zero", "=", "torch", ".", "tensor", "(", "[", "0.", "]", ",", "requires_grad", "=", "False", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "one", "=", "torch", ".", "tensor", "(", "[", "1.", "]", ",", "requires_grad", "=", "False", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "all_time", "=", "torch", ".", "cat", "(", "[", "zero", ",", "integration_time", ",", "one", "]", ",", "dim", "=", "0", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "total_integration_time", "=", "[", "all_time", "[", "i", ":", "i", "+", "2", "]", "for", "i", "in", "range", "(", "self", ".", "num_split", ")", "]", "\n", "\n", "out", "=", "[", "[", "1", ",", "initial_value", "]", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "total_integration_time", ")", ")", ":", "\n", "            ", "self", ".", "integration_time", "=", "self", ".", "total_integration_time", "[", "i", "]", ".", "type_as", "(", "initial_value", ")", "\n", "out_ode", "=", "odeint", "(", "self", ".", "odefunc", ",", "out", "[", "i", "]", "[", "1", "]", ",", "self", ".", "integration_time", ",", "rtol", "=", "1e-3", ",", "atol", "=", "1e-3", ")", "\n", "\n", "out", ".", "append", "(", "out_ode", ")", "\n", "", "return", "[", "i", "[", "1", "]", "for", "i", "in", "out", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tvae.Encoder.__init__": [[12, 25], ["torch.nn.Module.__init__", "list", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_dim", ",", "compress_dims", ",", "embedding_dim", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dim", "=", "data_dim", "\n", "seq", "=", "[", "]", "\n", "for", "item", "in", "list", "(", "compress_dims", ")", ":", "\n", "            ", "seq", "+=", "[", "\n", "Linear", "(", "dim", ",", "item", ")", ",", "\n", "ReLU", "(", ")", "\n", "]", "\n", "dim", "=", "item", "\n", "", "self", ".", "seq", "=", "Sequential", "(", "*", "seq", ")", "\n", "self", ".", "fc1", "=", "Linear", "(", "dim", ",", "embedding_dim", ")", "\n", "self", ".", "fc2", "=", "Linear", "(", "dim", ",", "embedding_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tvae.Encoder.forward": [[26, 32], ["tvae.Encoder.seq", "tvae.Encoder.fc1", "tvae.Encoder.fc2", "torch.exp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "feature", "=", "self", ".", "seq", "(", "input", ")", "\n", "mu", "=", "self", ".", "fc1", "(", "feature", ")", "\n", "logvar", "=", "self", ".", "fc2", "(", "feature", ")", "\n", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "\n", "return", "mu", ",", "std", ",", "logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tvae.Decoder.__init__": [[35, 46], ["torch.nn.Module.__init__", "list", "seq.append", "torch.nn.Sequential", "torch.nn.Parameter", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_dim", ",", "decompress_dims", ",", "data_dim", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dim", "=", "embedding_dim", "\n", "seq", "=", "[", "]", "\n", "for", "item", "in", "list", "(", "decompress_dims", ")", ":", "\n", "            ", "seq", "+=", "[", "Linear", "(", "dim", ",", "item", ")", ",", "ReLU", "(", ")", "]", "\n", "dim", "=", "item", "\n", "\n", "", "seq", ".", "append", "(", "Linear", "(", "dim", ",", "data_dim", ")", ")", "\n", "self", ".", "seq", "=", "Sequential", "(", "*", "seq", ")", "\n", "self", ".", "sigma", "=", "Parameter", "(", "torch", ".", "ones", "(", "data_dim", ")", "*", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tvae.Decoder.forward": [[47, 49], ["tvae.Decoder.seq"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "seq", "(", "input", ")", ",", "self", ".", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tvae.TVAESynthesizer.__init__": [[78, 93], ["torch.device", "torch.cuda.is_available"], "methods", ["None"], ["def", "__init__", "(", "\n", "self", ",", "\n", "dataset_name", ",", "\n", "args", "=", "None", "\n", ")", ":", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "self", ".", "embedding_dim", "=", "args", ".", "embedding_dim", "\n", "self", ".", "compress_dims", "=", "args", ".", "gen_dim", "\n", "self", ".", "decompress_dims", "=", "args", ".", "dis_dim", "\n", "self", ".", "lr", "=", "args", ".", "lr", "\n", "self", ".", "l2scale", "=", "args", ".", "l2scale", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "self", ".", "loss_factor", "=", "2", "\n", "self", ".", "epochs", "=", "args", ".", "epochs", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tvae.TVAESynthesizer.fit": [[94, 127], ["tuple", "tuple", "octgan.synthesizers.transformers.BGMTransformer", "tvae.TVAESynthesizer.transformer.fit", "tvae.TVAESynthesizer.transformer.transform", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "Encoder().to", "Decoder().to", "torch.optim.Adam", "range", "torch.from_numpy().to", "len", "print", "enumerate", "tvae.Encoder", "tvae.Decoder", "list", "list", "torch.optim.Adam.zero_grad", "data[].to", "Encoder().to.", "torch.randn_like", "tvae.TVAESynthesizer.decoder", "tvae.loss_function", "loss.backward", "torch.optim.Adam.step", "tvae.TVAESynthesizer.decoder.sigma.data.clamp_", "torch.from_numpy", "len", "Encoder().to.parameters", "tvae.TVAESynthesizer.decoder.parameters", "tvae.TVAESynthesizer.astype"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.transform", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tvae.loss_function", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward"], ["", "def", "fit", "(", "self", ",", "train_data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "\n", "        ", "self", ".", "transformer", "=", "BGMTransformer", "(", ")", "\n", "self", ".", "transformer", ".", "fit", "(", "train_data", ",", "categorical_columns", ",", "ordinal_columns", ")", "\n", "num", "=", "train_data", ".", "shape", "[", "0", "]", "\n", "train_data", "=", "self", ".", "transformer", ".", "transform", "(", "train_data", ")", "\n", "dataset", "=", "TensorDataset", "(", "torch", ".", "from_numpy", "(", "train_data", ".", "astype", "(", "'float32'", ")", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "if", "len", "(", "train_data", ")", "<=", "self", ".", "batch_size", ":", "\n", "            ", "self", ".", "batch_size", "=", "(", "len", "(", "train_data", ")", "//", "10", ")", "*", "10", "\n", "", "loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "data_dim", "=", "self", ".", "transformer", ".", "output_dim", "\n", "encoder", "=", "Encoder", "(", "data_dim", ",", "self", ".", "compress_dims", ",", "self", ".", "embedding_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", "self", ".", "embedding_dim", ",", "self", ".", "compress_dims", ",", "data_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "optimizerAE", "=", "Adam", "(", "\n", "list", "(", "encoder", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "decoder", ".", "parameters", "(", ")", ")", ",", "\n", "weight_decay", "=", "self", ".", "l2scale", ",", "lr", "=", "self", ".", "lr", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "epochs", ")", ":", "\n", "            ", "print", "(", "i", ")", "\n", "for", "id_", ",", "data", "in", "enumerate", "(", "loader", ")", ":", "\n", "                ", "optimizerAE", ".", "zero_grad", "(", ")", "\n", "real", "=", "data", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "mu", ",", "std", ",", "logvar", "=", "encoder", "(", "real", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "emb", "=", "eps", "*", "std", "+", "mu", "\n", "rec", ",", "sigmas", "=", "self", ".", "decoder", "(", "emb", ")", "\n", "loss_1", ",", "loss_2", "=", "loss_function", "(", "\n", "rec", ",", "real", ",", "sigmas", ",", "mu", ",", "logvar", ",", "self", ".", "transformer", ".", "output_info", ",", "self", ".", "loss_factor", ")", "\n", "loss", "=", "loss_1", "+", "loss_2", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizerAE", ".", "step", "(", ")", "\n", "self", ".", "decoder", ".", "sigma", ".", "data", ".", "clamp_", "(", "0.01", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tvae.TVAESynthesizer.sample": [[129, 145], ["tvae.TVAESynthesizer.decoder.eval", "range", "numpy.concatenate", "tvae.TVAESynthesizer.transformer.inverse_transform", "torch.zeros", "torch.normal().to", "tvae.TVAESynthesizer.decoder", "torch.tanh", "numpy.concatenate.append", "sigmas.detach().cpu().numpy", "torch.tanh.detach().cpu().numpy", "torch.normal", "sigmas.detach().cpu", "torch.tanh.detach().cpu", "sigmas.detach", "torch.tanh.detach"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.inverse_transform"], ["", "", "", "def", "sample", "(", "self", ",", "samples", ")", ":", "\n", "        ", "self", ".", "decoder", ".", "eval", "(", ")", "\n", "\n", "steps", "=", "samples", "//", "self", ".", "batch_size", "+", "1", "\n", "data", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "steps", ")", ":", "\n", "            ", "mean", "=", "torch", ".", "zeros", "(", "self", ".", "batch_size", ",", "self", ".", "embedding_dim", ")", "\n", "std", "=", "mean", "+", "1", "\n", "noise", "=", "torch", ".", "normal", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "fake", ",", "sigmas", "=", "self", ".", "decoder", "(", "noise", ")", "\n", "fake", "=", "torch", ".", "tanh", "(", "fake", ")", "\n", "data", ".", "append", "(", "fake", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "data", "=", "np", ".", "concatenate", "(", "data", ",", "axis", "=", "0", ")", "\n", "data", "=", "data", "[", ":", "samples", "]", "\n", "return", "self", ".", "transformer", ".", "inverse_transform", "(", "data", ",", "sigmas", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tvae.loss_function": [[51, 73], ["torch.sum", "loss.append", "loss.append", "recon_x.size", "loss.append", "logvar.exp", "sum", "x.size", "x.size", "torch.log", "torch.nn.functional.cross_entropy", "mu.pow", "x.size", "torch.argmax", "torch.tanh"], "function", ["None"], ["", "", "def", "loss_function", "(", "recon_x", ",", "x", ",", "sigmas", ",", "mu", ",", "logvar", ",", "output_info", ",", "factor", ")", ":", "\n", "    ", "st", "=", "0", "\n", "loss", "=", "[", "]", "\n", "for", "item", "in", "output_info", ":", "\n", "        ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "            ", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "std", "=", "sigmas", "[", "st", "]", "\n", "loss", ".", "append", "(", "(", "(", "x", "[", ":", ",", "st", "]", "-", "torch", ".", "tanh", "(", "recon_x", "[", ":", ",", "st", "]", ")", ")", "**", "2", "/", "2", "/", "(", "std", "**", "2", ")", ")", ".", "sum", "(", ")", ")", "\n", "loss", ".", "append", "(", "torch", ".", "log", "(", "std", ")", "*", "x", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "st", "=", "ed", "\n", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "            ", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "loss", ".", "append", "(", "cross_entropy", "(", "\n", "recon_x", "[", ":", ",", "st", ":", "ed", "]", ",", "torch", ".", "argmax", "(", "x", "[", ":", ",", "st", ":", "ed", "]", ",", "dim", "=", "-", "1", ")", ",", "reduction", "=", "'sum'", ")", ")", "\n", "st", "=", "ed", "\n", "\n", "", "else", ":", "\n", "            ", "assert", "0", "\n", "", "", "assert", "st", "==", "recon_x", ".", "size", "(", ")", "[", "1", "]", "\n", "KLD", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "logvar", "-", "mu", ".", "pow", "(", "2", ")", "-", "logvar", ".", "exp", "(", ")", ")", "\n", "return", "sum", "(", "loss", ")", "*", "factor", "/", "x", ".", "size", "(", ")", "[", "0", "]", ",", "KLD", "/", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.Discriminator.__init__": [[15, 20], ["torch.nn.Module.__init__", "torch.nn.Sequential"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "meta", ",", "side", ",", "layers", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "meta", "=", "meta", "\n", "self", ".", "side", "=", "side", "\n", "self", ".", "seq", "=", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.Discriminator.forward": [[21, 23], ["tablegan.Discriminator.seq"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "seq", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.Generator.__init__": [[26, 31], ["torch.nn.Module.__init__", "torch.nn.Sequential"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "meta", ",", "side", ",", "layers", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "meta", "=", "meta", "\n", "self", ".", "side", "=", "side", "\n", "self", ".", "seq", "=", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.Generator.forward": [[32, 34], ["tablegan.Generator.seq"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_", ")", ":", "\n", "        ", "return", "self", ".", "seq", "(", "input_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.Classifier.__init__": [[37, 52], ["torch.nn.Module.__init__", "torch.nn.Sequential", "numpy.ones", "torch.from_numpy().to", "len", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "meta", ",", "side", ",", "layers", ",", "device", ")", ":", "\n", "        ", "super", "(", "Classifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "meta", "=", "meta", "\n", "self", ".", "side", "=", "side", "\n", "self", ".", "seq", "=", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "valid", "=", "True", "\n", "if", "meta", "[", "-", "1", "]", "[", "'name'", "]", "!=", "'label'", "or", "meta", "[", "-", "1", "]", "[", "'type'", "]", "!=", "CATEGORICAL", "or", "meta", "[", "-", "1", "]", "[", "'size'", "]", "!=", "2", ":", "\n", "            ", "self", ".", "valid", "=", "False", "\n", "\n", "", "masking", "=", "np", ".", "ones", "(", "(", "1", ",", "1", ",", "side", ",", "side", ")", ",", "dtype", "=", "'float32'", ")", "\n", "index", "=", "len", "(", "self", ".", "meta", ")", "-", "1", "\n", "self", ".", "r", "=", "index", "//", "side", "\n", "self", ".", "c", "=", "index", "%", "side", "\n", "masking", "[", "0", ",", "0", ",", "self", ".", "r", ",", "self", ".", "c", "]", "=", "0", "\n", "self", ".", "masking", "=", "torch", ".", "from_numpy", "(", "masking", ")", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.Classifier.forward": [[53, 57], ["tablegan.Classifier.masking.expand", "tablegan.Classifier.seq().view", "input[].view", "input.size", "tablegan.Classifier.seq"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "label", "=", "(", "input", "[", ":", ",", ":", ",", "self", ".", "r", ",", "self", ".", "c", "]", ".", "view", "(", "-", "1", ")", "+", "1", ")", "/", "2", "\n", "input", "=", "input", "*", "self", ".", "masking", ".", "expand", "(", "input", ".", "size", "(", ")", ")", "\n", "return", "self", ".", "seq", "(", "input", ")", ".", "view", "(", "-", "1", ")", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.TableganSynthesizer.__init__": [[118, 131], ["torch.device", "torch.cuda.is_available"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "dataset_name", ",", "\n", "args", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "self", ".", "random_dim", "=", "args", ".", "random_dim", "\n", "self", ".", "num_channels", "=", "args", ".", "num_channels", "\n", "self", ".", "l2scale", "=", "args", ".", "l2scale", "\n", "self", ".", "lr", "=", "args", ".", "lr", "\n", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "self", ".", "epochs", "=", "args", ".", "epochs", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.TableganSynthesizer.fit": [[132, 217], ["tuple", "tuple", "octgan.synthesizers.transformers.TableganTransformer", "tablegan.TableganSynthesizer.transformer.fit", "tablegan.TableganSynthesizer.transformer.transform", "torch.from_numpy().to", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "tablegan.determine_layers", "Generator().to", "Discriminator().to", "Classifier().to", "dict", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tablegan.TableganSynthesizer.generator.apply", "Discriminator().to.apply", "Classifier().to.apply", "range", "len", "tablegan.TableganSynthesizer.generator.parameters", "Discriminator().to.parameters", "Classifier().to.parameters", "print", "enumerate", "torch.from_numpy", "tablegan.Generator", "tablegan.Discriminator", "tablegan.Classifier", "data[].to", "torch.randn", "tablegan.TableganSynthesizer.generator", "torch.optim.Adam.zero_grad", "Discriminator().to.", "Discriminator().to.", "loss_d.backward", "torch.optim.Adam.step", "torch.randn", "tablegan.TableganSynthesizer.generator", "torch.optim.Adam.zero_grad", "Discriminator().to.", "loss_g.backward", "torch.norm", "torch.norm", "loss_info.backward", "torch.optim.Adam.step", "torch.randn", "tablegan.TableganSynthesizer.generator", "torch.from_numpy().to.astype", "len", "torch.log().mean", "torch.log().mean", "Classifier().to.", "Classifier().to.", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.optim.Adam.zero_grad", "torch.nn.functional.binary_cross_entropy_with_logits.backward", "torch.optim.Adam.step", "torch.optim.Adam.zero_grad", "torch.nn.functional.binary_cross_entropy_with_logits.backward", "torch.optim.Adam.step", "print", "torch.log().mean", "torch.mean", "torch.mean", "torch.std", "torch.std", "torch.log", "torch.log", "torch.log"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.transform", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.determine_layers", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward"], ["", "def", "fit", "(", "self", ",", "data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "\n", "        ", "sides", "=", "[", "4", ",", "8", ",", "16", ",", "24", ",", "32", "]", "\n", "for", "i", "in", "sides", ":", "\n", "            ", "if", "i", "*", "i", ">=", "data", ".", "shape", "[", "1", "]", ":", "\n", "                ", "self", ".", "side", "=", "i", "\n", "break", "\n", "\n", "", "", "self", ".", "transformer", "=", "TableganTransformer", "(", "self", ".", "side", ")", "\n", "self", ".", "transformer", ".", "fit", "(", "data", ",", "categorical_columns", ",", "ordinal_columns", ")", "\n", "data", "=", "self", ".", "transformer", ".", "transform", "(", "data", ")", "\n", "data", "=", "torch", ".", "from_numpy", "(", "data", ".", "astype", "(", "'float32'", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "dataset", "=", "TensorDataset", "(", "data", ")", "\n", "if", "len", "(", "data", ")", "<=", "self", ".", "batch_size", ":", "\n", "            ", "self", ".", "batch_size", "=", "(", "len", "(", "data", ")", "//", "10", ")", "*", "10", "\n", "\n", "", "loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "layers_D", ",", "layers_G", ",", "layers_C", "=", "determine_layers", "(", "\n", "self", ".", "side", ",", "self", ".", "random_dim", ",", "self", ".", "num_channels", ")", "\n", "\n", "self", ".", "generator", "=", "Generator", "(", "self", ".", "transformer", ".", "meta", ",", "self", ".", "side", ",", "layers_G", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "discriminator", "=", "Discriminator", "(", "self", ".", "transformer", ".", "meta", ",", "self", ".", "side", ",", "layers_D", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "classifier", "=", "Classifier", "(", "\n", "self", ".", "transformer", ".", "meta", ",", "self", ".", "side", ",", "layers_C", ",", "self", ".", "device", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "optimizer_params", "=", "dict", "(", "lr", "=", "self", ".", "lr", ",", "betas", "=", "(", "0.5", ",", "0.9", ")", ",", "eps", "=", "1e-3", ",", "weight_decay", "=", "self", ".", "l2scale", ")", "\n", "optimizerG", "=", "Adam", "(", "self", ".", "generator", ".", "parameters", "(", ")", ",", "**", "optimizer_params", ")", "\n", "optimizerD", "=", "Adam", "(", "discriminator", ".", "parameters", "(", ")", ",", "**", "optimizer_params", ")", "\n", "optimizerC", "=", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "**", "optimizer_params", ")", "\n", "\n", "self", ".", "generator", ".", "apply", "(", "weights_init", ")", "\n", "discriminator", ".", "apply", "(", "weights_init", ")", "\n", "classifier", ".", "apply", "(", "weights_init", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "epochs", ")", ":", "\n", "            ", "print", "(", "i", ")", "\n", "for", "id_", ",", "data", "in", "enumerate", "(", "loader", ")", ":", "\n", "                ", "real", "=", "data", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "noise", "=", "torch", ".", "randn", "(", "self", ".", "batch_size", ",", "self", ".", "random_dim", ",", "1", ",", "1", ",", "device", "=", "self", ".", "device", ")", "\n", "fake", "=", "self", ".", "generator", "(", "noise", ")", "\n", "\n", "optimizerD", ".", "zero_grad", "(", ")", "\n", "y_real", "=", "discriminator", "(", "real", ")", "\n", "y_fake", "=", "discriminator", "(", "fake", ")", "\n", "loss_d", "=", "(", "\n", "-", "(", "torch", ".", "log", "(", "y_real", "+", "1e-4", ")", ".", "mean", "(", ")", ")", "-", "(", "torch", ".", "log", "(", "1.", "-", "y_fake", "+", "1e-4", ")", ".", "mean", "(", ")", ")", ")", "\n", "loss_d", ".", "backward", "(", ")", "\n", "optimizerD", ".", "step", "(", ")", "\n", "\n", "noise", "=", "torch", ".", "randn", "(", "self", ".", "batch_size", ",", "self", ".", "random_dim", ",", "1", ",", "1", ",", "device", "=", "self", ".", "device", ")", "\n", "fake", "=", "self", ".", "generator", "(", "noise", ")", "\n", "optimizerG", ".", "zero_grad", "(", ")", "\n", "y_fake", "=", "discriminator", "(", "fake", ")", "\n", "loss_g", "=", "-", "(", "torch", ".", "log", "(", "y_fake", "+", "1e-4", ")", ".", "mean", "(", ")", ")", "\n", "loss_g", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "loss_mean", "=", "torch", ".", "norm", "(", "torch", ".", "mean", "(", "fake", ",", "dim", "=", "0", ")", "-", "torch", ".", "mean", "(", "real", ",", "dim", "=", "0", ")", ",", "1", ")", "\n", "loss_std", "=", "torch", ".", "norm", "(", "torch", ".", "std", "(", "fake", ",", "dim", "=", "0", ")", "-", "torch", ".", "std", "(", "real", ",", "dim", "=", "0", ")", ",", "1", ")", "\n", "loss_info", "=", "loss_mean", "+", "loss_std", "\n", "loss_info", ".", "backward", "(", ")", "\n", "optimizerG", ".", "step", "(", ")", "\n", "\n", "noise", "=", "torch", ".", "randn", "(", "self", ".", "batch_size", ",", "self", ".", "random_dim", ",", "1", ",", "1", ",", "device", "=", "self", ".", "device", ")", "\n", "fake", "=", "self", ".", "generator", "(", "noise", ")", "\n", "if", "classifier", ".", "valid", ":", "\n", "                    ", "real_pre", ",", "real_label", "=", "classifier", "(", "real", ")", "\n", "fake_pre", ",", "fake_label", "=", "classifier", "(", "fake", ")", "\n", "\n", "loss_cc", "=", "binary_cross_entropy_with_logits", "(", "real_pre", ",", "real_label", ")", "\n", "loss_cg", "=", "binary_cross_entropy_with_logits", "(", "fake_pre", ",", "fake_label", ")", "\n", "\n", "optimizerG", ".", "zero_grad", "(", ")", "\n", "loss_cg", ".", "backward", "(", ")", "\n", "optimizerG", ".", "step", "(", ")", "\n", "\n", "optimizerC", ".", "zero_grad", "(", ")", "\n", "loss_cc", ".", "backward", "(", ")", "\n", "optimizerC", ".", "step", "(", ")", "\n", "loss_c", "=", "(", "loss_cc", ",", "loss_cg", ")", "\n", "", "else", ":", "\n", "                    ", "loss_c", "=", "None", "\n", "\n", "", "if", "(", "(", "id_", "+", "1", ")", "%", "50", "==", "0", ")", ":", "\n", "                    ", "print", "(", "\"epoch\"", ",", "i", "+", "1", ",", "\"step\"", ",", "id_", "+", "1", ",", "loss_d", ",", "loss_g", ",", "loss_c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.TableganSynthesizer.sample": [[218, 230], ["tablegan.TableganSynthesizer.generator.eval", "range", "numpy.concatenate", "tablegan.TableganSynthesizer.transformer.inverse_transform", "torch.randn", "tablegan.TableganSynthesizer.generator", "numpy.concatenate.append", "tablegan.TableganSynthesizer.detach().cpu().numpy", "tablegan.TableganSynthesizer.detach().cpu", "tablegan.TableganSynthesizer.detach"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.inverse_transform"], ["", "", "", "", "def", "sample", "(", "self", ",", "n", ")", ":", "\n", "        ", "self", ".", "generator", ".", "eval", "(", ")", "\n", "\n", "steps", "=", "n", "//", "self", ".", "batch_size", "+", "1", "\n", "data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "steps", ")", ":", "\n", "            ", "noise", "=", "torch", ".", "randn", "(", "self", ".", "batch_size", ",", "self", ".", "random_dim", ",", "1", ",", "1", ",", "device", "=", "self", ".", "device", ")", "\n", "fake", "=", "self", ".", "generator", "(", "noise", ")", "\n", "data", ".", "append", "(", "fake", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "data", "=", "np", ".", "concatenate", "(", "data", ",", "axis", "=", "0", ")", "\n", "return", "self", ".", "transformer", ".", "inverse_transform", "(", "data", "[", ":", "n", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.determine_layers": [[59, 103], ["zip", "zip", "zip", "layer_dims.append", "torch.nn.Conv2d", "torch.nn.Sigmoid", "torch.nn.ConvTranspose2d", "reversed", "reversed", "torch.nn.Tanh", "torch.nn.Conv2d", "len", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.LeakyReLU", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.LeakyReLU"], "function", ["None"], ["", "", "def", "determine_layers", "(", "side", ",", "random_dim", ",", "num_channels", ")", ":", "\n", "    ", "assert", "side", ">=", "4", "and", "side", "<=", "32", "\n", "\n", "layer_dims", "=", "[", "(", "1", ",", "side", ")", ",", "(", "num_channels", ",", "side", "//", "2", ")", "]", "\n", "\n", "while", "layer_dims", "[", "-", "1", "]", "[", "1", "]", ">", "3", "and", "len", "(", "layer_dims", ")", "<", "4", ":", "\n", "        ", "layer_dims", ".", "append", "(", "(", "layer_dims", "[", "-", "1", "]", "[", "0", "]", "*", "2", ",", "layer_dims", "[", "-", "1", "]", "[", "1", "]", "//", "2", ")", ")", "\n", "\n", "", "layers_D", "=", "[", "]", "\n", "for", "prev", ",", "curr", "in", "zip", "(", "layer_dims", ",", "layer_dims", "[", "1", ":", "]", ")", ":", "\n", "        ", "layers_D", "+=", "[", "\n", "Conv2d", "(", "prev", "[", "0", "]", ",", "curr", "[", "0", "]", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "curr", "[", "0", "]", ")", ",", "\n", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", "]", "\n", "", "layers_D", "+=", "[", "\n", "Conv2d", "(", "layer_dims", "[", "-", "1", "]", "[", "0", "]", ",", "1", ",", "layer_dims", "[", "-", "1", "]", "[", "1", "]", ",", "1", ",", "0", ")", ",", "\n", "Sigmoid", "(", ")", "\n", "]", "\n", "\n", "layers_G", "=", "[", "\n", "ConvTranspose2d", "(", "\n", "random_dim", ",", "layer_dims", "[", "-", "1", "]", "[", "0", "]", ",", "layer_dims", "[", "-", "1", "]", "[", "1", "]", ",", "1", ",", "0", ",", "output_padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "]", "\n", "\n", "for", "prev", ",", "curr", "in", "zip", "(", "reversed", "(", "layer_dims", ")", ",", "reversed", "(", "layer_dims", "[", ":", "-", "1", "]", ")", ")", ":", "\n", "        ", "layers_G", "+=", "[", "\n", "BatchNorm2d", "(", "prev", "[", "0", "]", ")", ",", "\n", "ReLU", "(", "True", ")", ",", "\n", "ConvTranspose2d", "(", "prev", "[", "0", "]", ",", "curr", "[", "0", "]", ",", "4", ",", "2", ",", "1", ",", "output_padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "]", "\n", "", "layers_G", "+=", "[", "Tanh", "(", ")", "]", "\n", "\n", "layers_C", "=", "[", "]", "\n", "for", "prev", ",", "curr", "in", "zip", "(", "layer_dims", ",", "layer_dims", "[", "1", ":", "]", ")", ":", "\n", "        ", "layers_C", "+=", "[", "\n", "Conv2d", "(", "prev", "[", "0", "]", ",", "curr", "[", "0", "]", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "curr", "[", "0", "]", ")", ",", "\n", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", "]", "\n", "\n", "", "layers_C", "+=", "[", "Conv2d", "(", "layer_dims", "[", "-", "1", "]", "[", "0", "]", ",", "1", ",", "layer_dims", "[", "-", "1", "]", "[", "1", "]", ",", "1", ",", "0", ")", "]", "\n", "\n", "return", "layers_D", ",", "layers_G", ",", "layers_C", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.tablegan.weights_init": [[105, 113], ["classname.find", "torch.nn.init.normal_", "classname.find", "torch.nn.init.normal_", "torch.nn.init.constant_"], "function", ["None"], ["", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "0.0", ",", "0.02", ")", "\n", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "1.0", ",", "0.02", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.Transformer.get_metadata": [[11, 46], ["tuple", "tuple", "pandas.DataFrame", "column.value_counts().index.tolist", "meta.append", "list", "sorted", "list", "meta.append", "meta.append", "len", "dict().items", "map", "column.value_counts", "len", "column.min", "column.max", "dict", "column.value_counts"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "get_metadata", "(", "data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "        ", "meta", "=", "[", "]", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "data", ")", "\n", "for", "index", "in", "df", ":", "\n", "            ", "column", "=", "df", "[", "index", "]", "\n", "\n", "if", "index", "in", "categorical_columns", ":", "\n", "                ", "mapper", "=", "column", ".", "value_counts", "(", ")", ".", "index", ".", "tolist", "(", ")", "\n", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "index", ",", "\n", "\"type\"", ":", "CATEGORICAL", ",", "\n", "\"size\"", ":", "len", "(", "mapper", ")", ",", "\n", "\"i2s\"", ":", "mapper", "\n", "}", ")", "\n", "", "elif", "index", "in", "ordinal_columns", ":", "\n", "                ", "value_count", "=", "list", "(", "dict", "(", "column", ".", "value_counts", "(", ")", ")", ".", "items", "(", ")", ")", "\n", "value_count", "=", "sorted", "(", "value_count", ",", "key", "=", "lambda", "x", ":", "-", "x", "[", "1", "]", ")", "\n", "mapper", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", "[", "0", "]", ",", "value_count", ")", ")", "\n", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "index", ",", "\n", "\"type\"", ":", "ORDINAL", ",", "\n", "\"size\"", ":", "len", "(", "mapper", ")", ",", "\n", "\"i2s\"", ":", "mapper", "\n", "}", ")", "\n", "", "else", ":", "\n", "                ", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "index", ",", "\n", "\"type\"", ":", "CONTINUOUS", ",", "\n", "\"min\"", ":", "column", ".", "min", "(", ")", ",", "\n", "\"max\"", ":", "column", ".", "max", "(", ")", ",", "\n", "}", ")", "\n", "\n", "", "", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.Transformer.fit": [[47, 49], ["tuple", "tuple"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.Transformer.transform": [[50, 52], ["None"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.Transformer.inverse_transform": [[53, 55], ["None"], "methods", ["None"], ["", "def", "inverse_transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.BGMTransformer.__init__": [[62, 67], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "n_clusters", "=", "10", ",", "eps", "=", "0.005", ")", ":", "\n", "        ", "\"\"\"n_cluster is the upper bound of modes.\"\"\"", "\n", "self", ".", "meta", "=", "None", "\n", "self", ".", "n_clusters", "=", "n_clusters", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.BGMTransformer.fit": [[68, 96], ["tuple", "tuple", "transformers.BGMTransformer.get_metadata", "enumerate", "sklearn.mixture.BayesianGaussianMixture", "sklearn.mixture.BayesianGaussianMixture.fit", "model.append", "transformers.BGMTransformer.components.append", "model.append", "transformers.BGMTransformer.components.append", "data[].reshape", "numpy.sum", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.Transformer.get_metadata", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit"], ["", "def", "fit", "(", "self", ",", "data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "        ", "self", ".", "meta", "=", "self", ".", "get_metadata", "(", "data", ",", "categorical_columns", ",", "ordinal_columns", ")", "\n", "model", "=", "[", "]", "\n", "\n", "self", ".", "output_info", "=", "[", "]", "\n", "self", ".", "output_dim", "=", "0", "\n", "self", ".", "components", "=", "[", "]", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "self", ".", "meta", ")", ":", "\n", "            ", "if", "info", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "                ", "gm", "=", "BayesianGaussianMixture", "(", "\n", "self", ".", "n_clusters", ",", "\n", "weight_concentration_prior_type", "=", "'dirichlet_process'", ",", "\n", "weight_concentration_prior", "=", "0.001", ",", "\n", "n_init", "=", "1", ")", "\n", "gm", ".", "fit", "(", "data", "[", ":", ",", "id_", "]", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", ")", "\n", "model", ".", "append", "(", "gm", ")", "\n", "comp", "=", "gm", ".", "weights_", ">", "self", ".", "eps", "\n", "self", ".", "components", ".", "append", "(", "comp", ")", "\n", "\n", "self", ".", "output_info", "+=", "[", "(", "1", ",", "'tanh'", ")", ",", "(", "np", ".", "sum", "(", "comp", ")", ",", "'softmax'", ")", "]", "\n", "self", ".", "output_dim", "+=", "1", "+", "np", ".", "sum", "(", "comp", ")", "\n", "", "else", ":", "\n", "                ", "model", ".", "append", "(", "None", ")", "\n", "self", ".", "components", ".", "append", "(", "None", ")", "\n", "self", ".", "output_info", "+=", "[", "(", "info", "[", "'size'", "]", ",", "'softmax'", ")", "]", "\n", "self", ".", "output_dim", "+=", "info", "[", "'size'", "]", "\n", "\n", "", "", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.BGMTransformer.transform": [[97, 134], ["enumerate", "numpy.concatenate", "current.reshape.reshape.reshape", "transformers.BGMTransformer.model[].means_.reshape", "numpy.sqrt().reshape", "transformers.BGMTransformer.model[].predict_proba", "sum", "numpy.zeros", "range", "numpy.arange", "features[].reshape", "numpy.clip", "numpy.zeros_like", "numpy.zeros", "list", "values.append", "current.reshape.reshape.reshape", "len", "len", "numpy.random.choice", "len", "map", "numpy.sqrt", "sum", "numpy.arange", "len", "numpy.arange", "numpy.arange", "len", "len"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "values", "=", "[", "]", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "self", ".", "meta", ")", ":", "\n", "            ", "current", "=", "data", "[", ":", ",", "id_", "]", "\n", "if", "info", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "                ", "current", "=", "current", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "\n", "means", "=", "self", ".", "model", "[", "id_", "]", ".", "means_", ".", "reshape", "(", "(", "1", ",", "self", ".", "n_clusters", ")", ")", "\n", "stds", "=", "np", ".", "sqrt", "(", "self", ".", "model", "[", "id_", "]", ".", "covariances_", ")", ".", "reshape", "(", "(", "1", ",", "self", ".", "n_clusters", ")", ")", "\n", "features", "=", "(", "current", "-", "means", ")", "/", "(", "4", "*", "stds", ")", "\n", "\n", "probs", "=", "self", ".", "model", "[", "id_", "]", ".", "predict_proba", "(", "current", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", ")", "\n", "\n", "n_opts", "=", "sum", "(", "self", ".", "components", "[", "id_", "]", ")", "\n", "features", "=", "features", "[", ":", ",", "self", ".", "components", "[", "id_", "]", "]", "\n", "probs", "=", "probs", "[", ":", ",", "self", ".", "components", "[", "id_", "]", "]", "\n", "\n", "opt_sel", "=", "np", ".", "zeros", "(", "len", "(", "data", ")", ",", "dtype", "=", "'int'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "data", ")", ")", ":", "\n", "                    ", "pp", "=", "probs", "[", "i", "]", "+", "1e-6", "\n", "pp", "=", "pp", "/", "sum", "(", "pp", ")", "\n", "opt_sel", "[", "i", "]", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "n_opts", ")", ",", "p", "=", "pp", ")", "\n", "\n", "", "idx", "=", "np", ".", "arange", "(", "(", "len", "(", "features", ")", ")", ")", "\n", "features", "=", "features", "[", "idx", ",", "opt_sel", "]", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "features", "=", "np", ".", "clip", "(", "features", ",", "-", ".99", ",", ".99", ")", "\n", "\n", "probs_onehot", "=", "np", ".", "zeros_like", "(", "probs", ")", "\n", "probs_onehot", "[", "np", ".", "arange", "(", "len", "(", "probs", ")", ")", ",", "opt_sel", "]", "=", "1", "\n", "values", "+=", "[", "features", ",", "probs_onehot", "]", "\n", "", "else", ":", "\n", "                ", "col_t", "=", "np", ".", "zeros", "(", "[", "len", "(", "data", ")", ",", "info", "[", "'size'", "]", "]", ")", "\n", "idx", "=", "list", "(", "map", "(", "info", "[", "'i2s'", "]", ".", "index", ",", "current", ")", ")", "\n", "col_t", "[", "np", ".", "arange", "(", "len", "(", "data", ")", ")", ",", "idx", "]", "=", "1", "\n", "values", ".", "append", "(", "col_t", ")", "\n", "\n", "", "", "return", "np", ".", "concatenate", "(", "values", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.BGMTransformer.inverse_transform": [[135, 168], ["numpy.zeros", "enumerate", "len", "len", "numpy.clip", "transformers.BGMTransformer.model[].means_.reshape", "numpy.sqrt().reshape", "numpy.argmax", "numpy.argmax", "list", "numpy.random.normal", "numpy.ones", "numpy.sum", "map", "numpy.sqrt", "numpy.sum"], "methods", ["None"], ["", "def", "inverse_transform", "(", "self", ",", "data", ",", "sigmas", ")", ":", "\n", "        ", "data_t", "=", "np", ".", "zeros", "(", "[", "len", "(", "data", ")", ",", "len", "(", "self", ".", "meta", ")", "]", ")", "\n", "\n", "st", "=", "0", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "self", ".", "meta", ")", ":", "\n", "            ", "if", "info", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "                ", "u", "=", "data", "[", ":", ",", "st", "]", "\n", "v", "=", "data", "[", ":", ",", "st", "+", "1", ":", "st", "+", "1", "+", "np", ".", "sum", "(", "self", ".", "components", "[", "id_", "]", ")", "]", "\n", "\n", "if", "sigmas", "is", "not", "None", ":", "\n", "                    ", "sig", "=", "sigmas", "[", "st", "]", "\n", "u", "=", "np", ".", "random", ".", "normal", "(", "u", ",", "sig", ")", "\n", "\n", "", "u", "=", "np", ".", "clip", "(", "u", ",", "-", "1", ",", "1", ")", "\n", "v_t", "=", "np", ".", "ones", "(", "(", "data", ".", "shape", "[", "0", "]", ",", "self", ".", "n_clusters", ")", ")", "*", "-", "100", "\n", "v_t", "[", ":", ",", "self", ".", "components", "[", "id_", "]", "]", "=", "v", "\n", "v", "=", "v_t", "\n", "st", "+=", "1", "+", "np", ".", "sum", "(", "self", ".", "components", "[", "id_", "]", ")", "\n", "means", "=", "self", ".", "model", "[", "id_", "]", ".", "means_", ".", "reshape", "(", "[", "-", "1", "]", ")", "\n", "stds", "=", "np", ".", "sqrt", "(", "self", ".", "model", "[", "id_", "]", ".", "covariances_", ")", ".", "reshape", "(", "[", "-", "1", "]", ")", "\n", "p_argmax", "=", "np", ".", "argmax", "(", "v", ",", "axis", "=", "1", ")", "\n", "std_t", "=", "stds", "[", "p_argmax", "]", "\n", "mean_t", "=", "means", "[", "p_argmax", "]", "\n", "tmp", "=", "u", "*", "4", "*", "std_t", "+", "mean_t", "\n", "data_t", "[", ":", ",", "id_", "]", "=", "tmp", "\n", "\n", "", "else", ":", "\n", "                ", "current", "=", "data", "[", ":", ",", "st", ":", "st", "+", "info", "[", "'size'", "]", "]", "\n", "st", "+=", "info", "[", "'size'", "]", "\n", "idx", "=", "np", ".", "argmax", "(", "current", ",", "axis", "=", "1", ")", "\n", "data_t", "[", ":", ",", "id_", "]", "=", "list", "(", "map", "(", "info", "[", "'i2s'", "]", ".", "__getitem__", ",", "idx", ")", ")", "\n", "\n", "", "", "return", "data_t", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.GeneralTransformer.__init__": [[176, 180], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "act", "=", "'sigmoid'", ")", ":", "\n", "        ", "self", ".", "act", "=", "act", "\n", "self", ".", "meta", "=", "None", "\n", "self", ".", "output_dim", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.GeneralTransformer.fit": [[181, 189], ["tuple", "tuple", "transformers.GeneralTransformer.get_metadata"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.Transformer.get_metadata"], ["", "def", "fit", "(", "self", ",", "data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "        ", "self", ".", "meta", "=", "self", ".", "get_metadata", "(", "data", ",", "categorical_columns", ",", "ordinal_columns", ")", "\n", "self", ".", "output_dim", "=", "0", "\n", "for", "info", "in", "self", ".", "meta", ":", "\n", "            ", "if", "info", "[", "'type'", "]", "in", "[", "CONTINUOUS", ",", "ORDINAL", "]", ":", "\n", "                ", "self", ".", "output_dim", "+=", "1", "\n", "", "else", ":", "\n", "                ", "self", ".", "output_dim", "+=", "info", "[", "'size'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.GeneralTransformer.transform": [[190, 217], ["enumerate", "numpy.concatenate", "data_t.append", "transformers.GeneralTransformer.output_info.append", "col.reshape", "data_t.append", "transformers.GeneralTransformer.output_info.append", "numpy.zeros", "list", "data_t.append", "transformers.GeneralTransformer.output_info.append", "col.reshape", "map", "len", "numpy.arange", "len"], "methods", ["None"], ["", "", "", "def", "transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "data_t", "=", "[", "]", "\n", "self", ".", "output_info", "=", "[", "]", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "self", ".", "meta", ")", ":", "\n", "            ", "col", "=", "data", "[", ":", ",", "id_", "]", "\n", "if", "info", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "                ", "col", "=", "(", "col", "-", "(", "info", "[", "'min'", "]", ")", ")", "/", "(", "info", "[", "'max'", "]", "-", "info", "[", "'min'", "]", ")", "\n", "if", "self", ".", "act", "==", "'tanh'", ":", "\n", "                    ", "col", "=", "col", "*", "2", "-", "1", "\n", "", "data_t", ".", "append", "(", "col", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", ")", "\n", "self", ".", "output_info", ".", "append", "(", "(", "1", ",", "self", ".", "act", ")", ")", "\n", "\n", "", "elif", "info", "[", "'type'", "]", "==", "ORDINAL", ":", "\n", "                ", "col", "=", "col", "/", "info", "[", "'size'", "]", "\n", "if", "self", ".", "act", "==", "'tanh'", ":", "\n", "                    ", "col", "=", "col", "*", "2", "-", "1", "\n", "", "data_t", ".", "append", "(", "col", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", ")", "\n", "self", ".", "output_info", ".", "append", "(", "(", "1", ",", "self", ".", "act", ")", ")", "\n", "\n", "", "else", ":", "\n", "                ", "col_t", "=", "np", ".", "zeros", "(", "[", "len", "(", "data", ")", ",", "info", "[", "'size'", "]", "]", ")", "\n", "idx", "=", "list", "(", "map", "(", "info", "[", "'i2s'", "]", ".", "index", ",", "col", ")", ")", "\n", "col_t", "[", "np", ".", "arange", "(", "len", "(", "data", ")", ")", ",", "idx", "]", "=", "1", "\n", "data_t", ".", "append", "(", "col_t", ")", "\n", "self", ".", "output_info", ".", "append", "(", "(", "info", "[", "'size'", "]", ",", "'softmax'", ")", ")", "\n", "\n", "", "", "return", "np", ".", "concatenate", "(", "data_t", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.GeneralTransformer.inverse_transform": [[218, 250], ["numpy.zeros", "data.copy.copy.copy", "enumerate", "len", "len", "numpy.clip", "numpy.round().clip", "numpy.argmax", "list", "map", "numpy.round"], "methods", ["None"], ["", "def", "inverse_transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "data_t", "=", "np", ".", "zeros", "(", "[", "len", "(", "data", ")", ",", "len", "(", "self", ".", "meta", ")", "]", ")", "\n", "\n", "data", "=", "data", ".", "copy", "(", ")", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "self", ".", "meta", ")", ":", "\n", "            ", "if", "info", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "                ", "current", "=", "data", "[", ":", ",", "0", "]", "\n", "data", "=", "data", "[", ":", ",", "1", ":", "]", "\n", "\n", "if", "self", ".", "act", "==", "'tanh'", ":", "\n", "                    ", "current", "=", "(", "current", "+", "1", ")", "/", "2", "\n", "\n", "", "current", "=", "np", ".", "clip", "(", "current", ",", "0", ",", "1", ")", "\n", "data_t", "[", ":", ",", "id_", "]", "=", "current", "*", "(", "info", "[", "'max'", "]", "-", "info", "[", "'min'", "]", ")", "+", "info", "[", "'min'", "]", "\n", "\n", "", "elif", "info", "[", "'type'", "]", "==", "ORDINAL", ":", "\n", "                ", "current", "=", "data", "[", ":", ",", "0", "]", "\n", "data", "=", "data", "[", ":", ",", "1", ":", "]", "\n", "\n", "if", "self", ".", "act", "==", "'tanh'", ":", "\n", "                    ", "current", "=", "(", "current", "+", "1", ")", "/", "2", "\n", "\n", "", "current", "=", "current", "*", "info", "[", "'size'", "]", "\n", "current", "=", "np", ".", "round", "(", "current", ")", ".", "clip", "(", "0", ",", "info", "[", "'size'", "]", "-", "1", ")", "\n", "data_t", "[", ":", ",", "id_", "]", "=", "current", "\n", "", "else", ":", "\n", "                ", "current", "=", "data", "[", ":", ",", ":", "info", "[", "'size'", "]", "]", "\n", "data", "=", "data", "[", ":", ",", "info", "[", "'size'", "]", ":", "]", "\n", "idx", "=", "np", ".", "argmax", "(", "current", ",", "axis", "=", "1", ")", "\n", "data_t", "[", ":", ",", "id_", "]", "=", "list", "(", "map", "(", "info", "[", "'i2s'", "]", ".", "__getitem__", ",", "idx", ")", ")", "\n", "\n", "", "", "return", "data_t", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.GMMTransformer.__init__": [[259, 262], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "n_clusters", "=", "5", ")", ":", "\n", "        ", "self", ".", "meta", "=", "None", "\n", "self", ".", "n_clusters", "=", "n_clusters", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.GMMTransformer.fit": [[263, 282], ["tuple", "tuple", "transformers.GMMTransformer.get_metadata", "enumerate", "sklearn.mixture.GaussianMixture", "sklearn.mixture.GaussianMixture.fit", "model.append", "model.append", "data[].reshape"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.Transformer.get_metadata", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit"], ["", "def", "fit", "(", "self", ",", "data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "        ", "self", ".", "meta", "=", "self", ".", "get_metadata", "(", "data", ",", "categorical_columns", ",", "ordinal_columns", ")", "\n", "model", "=", "[", "]", "\n", "\n", "self", ".", "output_info", "=", "[", "]", "\n", "self", ".", "output_dim", "=", "0", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "self", ".", "meta", ")", ":", "\n", "            ", "if", "info", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "                ", "gm", "=", "GaussianMixture", "(", "self", ".", "n_clusters", ")", "\n", "gm", ".", "fit", "(", "data", "[", ":", ",", "id_", "]", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", ")", "\n", "model", ".", "append", "(", "gm", ")", "\n", "self", ".", "output_info", "+=", "[", "(", "1", ",", "'tanh'", ")", ",", "(", "self", ".", "n_clusters", ",", "'softmax'", ")", "]", "\n", "self", ".", "output_dim", "+=", "1", "+", "self", ".", "n_clusters", "\n", "", "else", ":", "\n", "                ", "model", ".", "append", "(", "None", ")", "\n", "self", ".", "output_info", "+=", "[", "(", "info", "[", "'size'", "]", ",", "'softmax'", ")", "]", "\n", "self", ".", "output_dim", "+=", "info", "[", "'size'", "]", "\n", "\n", "", "", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.GMMTransformer.transform": [[283, 309], ["enumerate", "numpy.concatenate", "current.reshape.reshape.reshape", "transformers.GMMTransformer.model[].means_.reshape", "numpy.sqrt().reshape", "transformers.GMMTransformer.model[].predict_proba", "numpy.argmax", "numpy.arange", "features[].reshape", "numpy.clip", "numpy.zeros", "list", "values.append", "current.reshape.reshape.reshape", "len", "map", "numpy.sqrt", "len", "numpy.arange", "len"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "values", "=", "[", "]", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "self", ".", "meta", ")", ":", "\n", "            ", "current", "=", "data", "[", ":", ",", "id_", "]", "\n", "if", "info", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "                ", "current", "=", "current", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "\n", "means", "=", "self", ".", "model", "[", "id_", "]", ".", "means_", ".", "reshape", "(", "(", "1", ",", "self", ".", "n_clusters", ")", ")", "\n", "stds", "=", "np", ".", "sqrt", "(", "self", ".", "model", "[", "id_", "]", ".", "covariances_", ")", ".", "reshape", "(", "(", "1", ",", "self", ".", "n_clusters", ")", ")", "\n", "features", "=", "(", "current", "-", "means", ")", "/", "(", "2", "*", "stds", ")", "\n", "\n", "probs", "=", "self", ".", "model", "[", "id_", "]", ".", "predict_proba", "(", "current", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", ")", "\n", "argmax", "=", "np", ".", "argmax", "(", "probs", ",", "axis", "=", "1", ")", "\n", "idx", "=", "np", ".", "arange", "(", "(", "len", "(", "features", ")", ")", ")", "\n", "features", "=", "features", "[", "idx", ",", "argmax", "]", ".", "reshape", "(", "[", "-", "1", ",", "1", "]", ")", "\n", "\n", "features", "=", "np", ".", "clip", "(", "features", ",", "-", ".99", ",", ".99", ")", "\n", "\n", "values", "+=", "[", "features", ",", "probs", "]", "\n", "", "else", ":", "\n", "                ", "col_t", "=", "np", ".", "zeros", "(", "[", "len", "(", "data", ")", ",", "info", "[", "'size'", "]", "]", ")", "\n", "idx", "=", "list", "(", "map", "(", "info", "[", "'i2s'", "]", ".", "index", ",", "current", ")", ")", "\n", "col_t", "[", "np", ".", "arange", "(", "len", "(", "data", ")", ")", ",", "idx", "]", "=", "1", "\n", "values", ".", "append", "(", "col_t", ")", "\n", "\n", "", "", "return", "np", ".", "concatenate", "(", "values", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.GMMTransformer.inverse_transform": [[310, 339], ["numpy.zeros", "enumerate", "len", "len", "numpy.clip", "transformers.GMMTransformer.model[].means_.reshape", "numpy.sqrt().reshape", "numpy.argmax", "numpy.argmax", "list", "numpy.random.normal", "map", "numpy.sqrt"], "methods", ["None"], ["", "def", "inverse_transform", "(", "self", ",", "data", ",", "sigmas", ")", ":", "\n", "        ", "data_t", "=", "np", ".", "zeros", "(", "[", "len", "(", "data", ")", ",", "len", "(", "self", ".", "meta", ")", "]", ")", "\n", "\n", "st", "=", "0", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "self", ".", "meta", ")", ":", "\n", "            ", "if", "info", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "                ", "u", "=", "data", "[", ":", ",", "st", "]", "\n", "v", "=", "data", "[", ":", ",", "st", "+", "1", ":", "st", "+", "1", "+", "self", ".", "n_clusters", "]", "\n", "if", "sigmas", "is", "not", "None", ":", "\n", "                    ", "sig", "=", "sigmas", "[", "st", "]", "\n", "u", "=", "np", ".", "random", ".", "normal", "(", "u", ",", "sig", ")", "\n", "\n", "", "u", "=", "np", ".", "clip", "(", "u", ",", "-", "1", ",", "1", ")", "\n", "st", "+=", "1", "+", "self", ".", "n_clusters", "\n", "means", "=", "self", ".", "model", "[", "id_", "]", ".", "means_", ".", "reshape", "(", "[", "-", "1", "]", ")", "\n", "stds", "=", "np", ".", "sqrt", "(", "self", ".", "model", "[", "id_", "]", ".", "covariances_", ")", ".", "reshape", "(", "[", "-", "1", "]", ")", "\n", "p_argmax", "=", "np", ".", "argmax", "(", "v", ",", "axis", "=", "1", ")", "\n", "std_t", "=", "stds", "[", "p_argmax", "]", "\n", "mean_t", "=", "means", "[", "p_argmax", "]", "\n", "tmp", "=", "u", "*", "2", "*", "std_t", "+", "mean_t", "\n", "data_t", "[", ":", ",", "id_", "]", "=", "tmp", "\n", "\n", "", "else", ":", "\n", "                ", "current", "=", "data", "[", ":", ",", "st", ":", "st", "+", "info", "[", "'size'", "]", "]", "\n", "st", "+=", "info", "[", "'size'", "]", "\n", "idx", "=", "np", ".", "argmax", "(", "current", ",", "axis", "=", "1", ")", "\n", "data_t", "[", ":", ",", "id_", "]", "=", "list", "(", "map", "(", "info", "[", "'i2s'", "]", ".", "__getitem__", ",", "idx", ")", ")", "\n", "\n", "", "", "return", "data_t", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.TableganTransformer.__init__": [[344, 346], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "side", ")", ":", "\n", "        ", "self", ".", "height", "=", "side", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.TableganTransformer.fit": [[347, 358], ["tuple", "tuple", "transformers.TableganTransformer.get_metadata", "numpy.zeros", "numpy.zeros", "range", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.Transformer.get_metadata"], ["", "def", "fit", "(", "self", ",", "data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "        ", "self", ".", "meta", "=", "self", ".", "get_metadata", "(", "data", ",", "categorical_columns", ",", "ordinal_columns", ")", "\n", "self", ".", "minn", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "meta", ")", ")", "\n", "self", ".", "maxx", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "meta", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "meta", ")", ")", ":", "\n", "            ", "if", "self", ".", "meta", "[", "i", "]", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "                ", "self", ".", "minn", "[", "i", "]", "=", "self", ".", "meta", "[", "i", "]", "[", "'min'", "]", "-", "1e-3", "\n", "self", ".", "maxx", "[", "i", "]", "=", "self", ".", "meta", "[", "i", "]", "[", "'max'", "]", "+", "1e-3", "\n", "", "else", ":", "\n", "                ", "self", ".", "minn", "[", "i", "]", "=", "-", "1e-3", "\n", "self", ".", "maxx", "[", "i", "]", "=", "self", ".", "meta", "[", "i", "]", "[", "'size'", "]", "-", "1", "+", "1e-3", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.TableganTransformer.transform": [[359, 367], ["numpy.concatenate.copy().astype", "numpy.concatenate.reshape", "len", "numpy.zeros", "numpy.concatenate", "numpy.concatenate.copy", "len", "len"], "methods", ["None"], ["", "", "", "def", "transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "data", "=", "data", ".", "copy", "(", ")", ".", "astype", "(", "'float32'", ")", "\n", "data", "=", "(", "data", "-", "self", ".", "minn", ")", "/", "(", "self", ".", "maxx", "-", "self", ".", "minn", ")", "*", "2", "-", "1", "\n", "if", "self", ".", "height", "*", "self", ".", "height", ">", "len", "(", "data", "[", "0", "]", ")", ":", "\n", "            ", "padding", "=", "np", ".", "zeros", "(", "(", "len", "(", "data", ")", ",", "self", ".", "height", "*", "self", ".", "height", "-", "len", "(", "data", "[", "0", "]", ")", ")", ")", "\n", "data", "=", "np", ".", "concatenate", "(", "[", "data", ",", "padding", "]", ",", "axis", "=", "1", ")", "\n", "\n", "", "return", "data", ".", "reshape", "(", "-", "1", ",", "1", ",", "self", ".", "height", ",", "self", ".", "height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.TableganTransformer.inverse_transform": [[368, 380], ["data.reshape.reshape.reshape", "numpy.zeros", "enumerate", "len", "len", "data[].reshape", "numpy.round"], "methods", ["None"], ["", "def", "inverse_transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "data", "=", "data", ".", "reshape", "(", "-", "1", ",", "self", ".", "height", "*", "self", ".", "height", ")", "\n", "\n", "data_t", "=", "np", ".", "zeros", "(", "[", "len", "(", "data", ")", ",", "len", "(", "self", ".", "meta", ")", "]", ")", "\n", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "self", ".", "meta", ")", ":", "\n", "            ", "numerator", "=", "(", "data", "[", ":", ",", "id_", "]", ".", "reshape", "(", "[", "-", "1", "]", ")", "+", "1", ")", "\n", "data_t", "[", ":", ",", "id_", "]", "=", "(", "numerator", "/", "2", ")", "*", "(", "self", ".", "maxx", "[", "id_", "]", "-", "self", ".", "minn", "[", "id_", "]", ")", "+", "self", ".", "minn", "[", "id_", "]", "\n", "if", "info", "[", "'type'", "]", "in", "[", "CATEGORICAL", ",", "ORDINAL", "]", ":", "\n", "                ", "data_t", "[", ":", ",", "id_", "]", "=", "np", ".", "round", "(", "data_t", "[", ":", ",", "id_", "]", ")", "\n", "\n", "", "", "return", "data_t", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.__init__": [[393, 398], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "n_bins", ")", ":", "\n", "        ", "self", ".", "n_bins", "=", "n_bins", "\n", "self", ".", "meta", "=", "None", "\n", "self", ".", "column_index", "=", "None", "\n", "self", ".", "discretizer", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.fit": [[399, 411], ["tuple", "tuple", "transformers.DiscretizeTransformer.get_metadata", "sklearn.preprocessing.KBinsDiscretizer", "transformers.DiscretizeTransformer.discretizer.fit", "enumerate"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.Transformer.get_metadata", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit"], ["", "def", "fit", "(", "self", ",", "data", ",", "categorical_columns", "=", "tuple", "(", ")", ",", "ordinal_columns", "=", "tuple", "(", ")", ")", ":", "\n", "        ", "self", ".", "meta", "=", "self", ".", "get_metadata", "(", "data", ",", "categorical_columns", ",", "ordinal_columns", ")", "\n", "self", ".", "column_index", "=", "[", "\n", "index", "for", "index", ",", "info", "in", "enumerate", "(", "self", ".", "meta", ")", "if", "info", "[", "'type'", "]", "==", "CONTINUOUS", "]", "\n", "\n", "self", ".", "discretizer", "=", "KBinsDiscretizer", "(", "\n", "n_bins", "=", "self", ".", "n_bins", ",", "encode", "=", "'ordinal'", ",", "strategy", "=", "'uniform'", ")", "\n", "\n", "if", "not", "self", ".", "column_index", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "discretizer", ".", "fit", "(", "data", "[", ":", ",", "self", ".", "column_index", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.transform": [[412, 424], ["transformers.DiscretizeTransformer.discretizer.transform", "data.astype", "data.astype"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.transform"], ["", "def", "transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "\"\"\"Transform data discretizing continous values.\n        Args:\n            data(pandas.DataFrame)\n        Returns:\n            numpy.ndarray\n        \"\"\"", "\n", "if", "self", ".", "column_index", "==", "[", "]", ":", "\n", "            ", "return", "data", ".", "astype", "(", "'int'", ")", "\n", "\n", "", "data", "[", ":", ",", "self", ".", "column_index", "]", "=", "self", ".", "discretizer", ".", "transform", "(", "data", "[", ":", ",", "self", ".", "column_index", "]", ")", "\n", "return", "data", ".", "astype", "(", "'int'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.inverse_transform": [[425, 432], ["data.astype.astype.astype", "transformers.DiscretizeTransformer.discretizer.inverse_transform"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.transformers.DiscretizeTransformer.inverse_transform"], ["", "def", "inverse_transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "column_index", "==", "[", "]", ":", "\n", "            ", "return", "data", "\n", "\n", "", "data", "=", "data", ".", "astype", "(", "'float32'", ")", "\n", "data", "[", ":", ",", "self", ".", "column_index", "]", "=", "self", ".", "discretizer", ".", "inverse_transform", "(", "data", "[", ":", ",", "self", ".", "column_index", "]", ")", "\n", "return", "data", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.__init__": [[5, 7], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset_name", ",", "args", "=", "None", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.fit": [[8, 10], ["pandas.DataFrame"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "train_data", ",", "categorical_columns", ",", "ordinal_columns", ")", ":", "\n", "        ", "self", ".", "data", "=", "pd", ".", "DataFrame", "(", "train_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.identity.IdentitySynthesizer.sample": [[11, 13], ["identity.IdentitySynthesizer.data.sample().to_numpy().copy", "identity.IdentitySynthesizer.data.sample().to_numpy", "identity.IdentitySynthesizer.data.sample"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample"], ["", "def", "sample", "(", "self", ",", "samples", ")", ":", "\n", "        ", "return", "self", ".", "data", ".", "sample", "(", "samples", ",", "replace", "=", "True", ")", ".", "to_numpy", "(", ")", ".", "copy", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.Cond.__init__": [[29, 85], ["numpy.zeros", "numpy.asarray", "max", "utils.Cond.model.append", "numpy.sum", "numpy.log", "utils.Cond.interval.append", "numpy.argmax", "numpy.sum"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "output_info", ")", ":", "\n", "\n", "        ", "self", ".", "model", "=", "[", "]", "\n", "\n", "st", "=", "0", "\n", "skip", "=", "False", "\n", "max_interval", "=", "0", "\n", "counter", "=", "0", "\n", "for", "item", "in", "output_info", ":", "\n", "            ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "                ", "st", "+=", "item", "[", "0", "]", "\n", "skip", "=", "True", "\n", "continue", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "                ", "if", "skip", ":", "\n", "                    ", "skip", "=", "False", "\n", "st", "+=", "item", "[", "0", "]", "\n", "continue", "\n", "\n", "", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "max_interval", "=", "max", "(", "max_interval", ",", "ed", "-", "st", ")", "\n", "counter", "+=", "1", "\n", "self", ".", "model", ".", "append", "(", "np", ".", "argmax", "(", "data", "[", ":", ",", "st", ":", "ed", "]", ",", "axis", "=", "-", "1", ")", ")", "\n", "st", "=", "ed", "\n", "", "else", ":", "\n", "                ", "assert", "0", "\n", "", "", "assert", "st", "==", "data", ".", "shape", "[", "1", "]", "\n", "\n", "self", ".", "interval", "=", "[", "]", "\n", "self", ".", "n_col", "=", "0", "\n", "self", ".", "n_opt", "=", "0", "\n", "skip", "=", "False", "\n", "st", "=", "0", "\n", "self", ".", "p", "=", "np", ".", "zeros", "(", "(", "counter", ",", "max_interval", ")", ")", "\n", "for", "item", "in", "output_info", ":", "\n", "            ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "                ", "skip", "=", "True", "\n", "st", "+=", "item", "[", "0", "]", "\n", "continue", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "                ", "if", "skip", ":", "\n", "                    ", "st", "+=", "item", "[", "0", "]", "\n", "skip", "=", "False", "\n", "continue", "\n", "", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "tmp", "=", "np", ".", "sum", "(", "data", "[", ":", ",", "st", ":", "ed", "]", ",", "axis", "=", "0", ")", "\n", "tmp", "=", "np", ".", "log", "(", "tmp", "+", "1", ")", "\n", "tmp", "=", "tmp", "/", "np", ".", "sum", "(", "tmp", ")", "\n", "self", ".", "p", "[", "self", ".", "n_col", ",", ":", "item", "[", "0", "]", "]", "=", "tmp", "\n", "self", ".", "interval", ".", "append", "(", "(", "self", ".", "n_opt", ",", "item", "[", "0", "]", ")", ")", "\n", "self", ".", "n_opt", "+=", "item", "[", "0", "]", "\n", "self", ".", "n_col", "+=", "1", "\n", "st", "=", "ed", "\n", "", "else", ":", "\n", "                ", "assert", "0", "\n", "", "", "self", ".", "interval", "=", "np", ".", "asarray", "(", "self", ".", "interval", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.Cond.sample": [[86, 100], ["numpy.random.choice", "numpy.zeros", "numpy.zeros", "utils.random_choice_prob_index", "numpy.arange", "numpy.arange", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.random_choice_prob_index"], ["", "def", "sample", "(", "self", ",", "batch", ")", ":", "\n", "        ", "if", "self", ".", "n_col", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "batch", "=", "batch", "\n", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "n_col", ")", ",", "batch", ")", "\n", "\n", "vec1", "=", "np", ".", "zeros", "(", "(", "batch", ",", "self", ".", "n_opt", ")", ",", "dtype", "=", "'float32'", ")", "\n", "mask1", "=", "np", ".", "zeros", "(", "(", "batch", ",", "self", ".", "n_col", ")", ",", "dtype", "=", "'float32'", ")", "\n", "mask1", "[", "np", ".", "arange", "(", "batch", ")", ",", "idx", "]", "=", "1", "\n", "opt1prime", "=", "random_choice_prob_index", "(", "self", ".", "p", "[", "idx", "]", ")", "\n", "opt1", "=", "self", ".", "interval", "[", "idx", ",", "0", "]", "+", "opt1prime", "\n", "vec1", "[", "np", ".", "arange", "(", "batch", ")", ",", "opt1", "]", "=", "1", "\n", "\n", "return", "vec1", ",", "mask1", ",", "idx", ",", "opt1prime", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.Cond.sample_zero": [[101, 111], ["numpy.zeros", "numpy.random.choice", "range", "numpy.arange", "int", "numpy.random.choice"], "methods", ["None"], ["", "def", "sample_zero", "(", "self", ",", "batch", ")", ":", "\n", "        ", "if", "self", ".", "n_col", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "vec", "=", "np", ".", "zeros", "(", "(", "batch", ",", "self", ".", "n_opt", ")", ",", "dtype", "=", "'float32'", ")", "\n", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "n_col", ")", ",", "batch", ")", "\n", "for", "i", "in", "range", "(", "batch", ")", ":", "\n", "            ", "col", "=", "idx", "[", "i", "]", "\n", "pick", "=", "int", "(", "np", ".", "random", ".", "choice", "(", "self", ".", "model", "[", "col", "]", ")", ")", "\n", "vec", "[", "i", ",", "pick", "+", "self", ".", "interval", "[", "col", ",", "0", "]", "]", "=", "1", "\n", "", "return", "vec", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.Sampler.__init__": [[150, 176], ["object.__init__", "len", "range", "utils.Sampler.model.append", "tmp.append", "numpy.nonzero"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["def", "__init__", "(", "self", ",", "data", ",", "output_info", ")", ":", "\n", "        ", "super", "(", "Sampler", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "model", "=", "[", "]", "\n", "self", ".", "n", "=", "len", "(", "data", ")", "\n", "\n", "st", "=", "0", "\n", "skip", "=", "False", "\n", "for", "item", "in", "output_info", ":", "\n", "            ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "                ", "st", "+=", "item", "[", "0", "]", "\n", "skip", "=", "True", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "                ", "if", "skip", ":", "\n", "                    ", "skip", "=", "False", "\n", "st", "+=", "item", "[", "0", "]", "\n", "continue", "\n", "", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "tmp", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "item", "[", "0", "]", ")", ":", "\n", "                    ", "tmp", ".", "append", "(", "np", ".", "nonzero", "(", "data", "[", ":", ",", "st", "+", "j", "]", ")", "[", "0", "]", ")", "\n", "", "self", ".", "model", ".", "append", "(", "tmp", ")", "\n", "st", "=", "ed", "\n", "", "else", ":", "\n", "                ", "assert", "0", "\n", "", "", "assert", "st", "==", "data", ".", "shape", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.Sampler.sample": [[177, 185], ["zip", "numpy.random.choice", "numpy.random.choice.append", "numpy.arange", "numpy.random.choice"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "n", ",", "col", ",", "opt", ")", ":", "\n", "        ", "if", "col", "is", "None", ":", "\n", "            ", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "self", ".", "n", ")", ",", "n", ")", "\n", "return", "self", ".", "data", "[", "idx", "]", "\n", "", "idx", "=", "[", "]", "\n", "for", "c", ",", "o", "in", "zip", "(", "col", ",", "opt", ")", ":", "\n", "            ", "idx", ".", "append", "(", "np", ".", "random", ".", "choice", "(", "self", ".", "model", "[", "c", "]", "[", "o", "]", ")", ")", "\n", "", "return", "self", ".", "data", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.apply_activate": [[6, 21], ["torch.cat", "data_t.append", "torch.tanh", "data_t.append", "torch.nn.functional.gumbel_softmax"], "function", ["None"], ["def", "apply_activate", "(", "data", ",", "output_info", ")", ":", "\n", "    ", "data_t", "=", "[", "]", "\n", "st", "=", "0", "\n", "for", "item", "in", "output_info", ":", "\n", "        ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "            ", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "data_t", ".", "append", "(", "torch", ".", "tanh", "(", "data", "[", ":", ",", "st", ":", "ed", "]", ")", ")", "\n", "st", "=", "ed", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "            ", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "data_t", ".", "append", "(", "F", ".", "gumbel_softmax", "(", "data", "[", ":", ",", "st", ":", "ed", "]", ",", "tau", "=", "0.2", ")", ")", "\n", "st", "=", "ed", "\n", "", "else", ":", "\n", "            ", "assert", "0", "\n", "", "", "return", "torch", ".", "cat", "(", "data_t", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.random_choice_prob_index": [[23, 26], ["numpy.expand_dims", "numpy.random.rand", "a.cumsum"], "function", ["None"], ["", "def", "random_choice_prob_index", "(", "a", ",", "axis", "=", "1", ")", ":", "\n", "    ", "r", "=", "np", ".", "expand_dims", "(", "np", ".", "random", ".", "rand", "(", "a", ".", "shape", "[", "1", "-", "axis", "]", ")", ",", "axis", "=", "axis", ")", "\n", "return", "(", "a", ".", "cumsum", "(", "axis", "=", "axis", ")", ">", "r", ")", ".", "argmax", "(", "axis", "=", "axis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.cond_loss": [[113, 145], ["torch.stack", "data.size", "torch.nn.functional.cross_entropy", "torch.stack.append", "torch.argmax"], "function", ["None"], ["", "", "def", "cond_loss", "(", "data", ",", "output_info", ",", "c", ",", "m", ")", ":", "\n", "    ", "loss", "=", "[", "]", "\n", "st", "=", "0", "\n", "st_c", "=", "0", "\n", "skip", "=", "False", "\n", "for", "item", "in", "output_info", ":", "\n", "        ", "if", "item", "[", "1", "]", "==", "'tanh'", ":", "\n", "            ", "st", "+=", "item", "[", "0", "]", "\n", "skip", "=", "True", "\n", "\n", "", "elif", "item", "[", "1", "]", "==", "'softmax'", ":", "\n", "            ", "if", "skip", ":", "\n", "                ", "skip", "=", "False", "\n", "st", "+=", "item", "[", "0", "]", "\n", "continue", "\n", "\n", "", "ed", "=", "st", "+", "item", "[", "0", "]", "\n", "ed_c", "=", "st_c", "+", "item", "[", "0", "]", "\n", "tmp", "=", "F", ".", "cross_entropy", "(", "\n", "data", "[", ":", ",", "st", ":", "ed", "]", ",", "\n", "torch", ".", "argmax", "(", "c", "[", ":", ",", "st_c", ":", "ed_c", "]", ",", "dim", "=", "1", ")", ",", "\n", "reduction", "=", "'none'", "\n", ")", "\n", "loss", ".", "append", "(", "tmp", ")", "\n", "st", "=", "ed", "\n", "st_c", "=", "ed_c", "\n", "\n", "", "else", ":", "\n", "            ", "assert", "0", "\n", "", "", "loss", "=", "torch", ".", "stack", "(", "loss", ",", "dim", "=", "1", ")", "\n", "\n", "return", "(", "loss", "*", "m", ")", ".", "sum", "(", ")", "/", "data", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.synthesizers.utils.calc_gradient_penalty": [[187, 205], ["torch.rand", "alpha.view.repeat", "alpha.view.view", "netD", "real_data.size", "real_data.size", "torch.autograd.grad", "real_data.size", "torch.ones", "netD.size", "gradients.view().norm", "gradients.view", "real_data.size"], "function", ["None"], ["", "", "def", "calc_gradient_penalty", "(", "netD", ",", "real_data", ",", "fake_data", ",", "t_pairs", ",", "device", "=", "'cpu'", ",", "pac", "=", "1", ",", "lambda_", "=", "10", ")", ":", "\n", "    ", "alpha", "=", "torch", ".", "rand", "(", "real_data", ".", "size", "(", "0", ")", "//", "pac", ",", "1", ",", "1", ",", "device", "=", "device", ")", "\n", "alpha", "=", "alpha", ".", "repeat", "(", "1", ",", "pac", ",", "real_data", ".", "size", "(", "1", ")", ")", "\n", "alpha", "=", "alpha", ".", "view", "(", "-", "1", ",", "real_data", ".", "size", "(", "1", ")", ")", "\n", "\n", "interpolates", "=", "alpha", "*", "real_data", "+", "(", "(", "1", "-", "alpha", ")", "*", "fake_data", ")", "\n", "\n", "disc_interpolates", "=", "netD", "(", "[", "interpolates", ",", "t_pairs", "]", ")", "\n", "\n", "gradients", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "outputs", "=", "disc_interpolates", ",", "inputs", "=", "interpolates", ",", "\n", "grad_outputs", "=", "torch", ".", "ones", "(", "disc_interpolates", ".", "size", "(", ")", ",", "device", "=", "device", ")", ",", "\n", "create_graph", "=", "True", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "\n", "gradient_penalty", "=", "(", "\n", "(", "gradients", ".", "view", "(", "-", "1", ",", "pac", "*", "real_data", ".", "size", "(", "1", ")", ")", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "-", "1", ")", "**", "2", ")", ".", "mean", "(", ")", "*", "lambda_", "\n", "\n", "return", "gradient_penalty", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.utils.data_utils.verify_table": [[8, 16], ["enumerate", "numpy.all", "numpy.all", "numpy.all", "numpy.all", "table[].astype", "table[].astype"], "function", ["None"], ["def", "verify_table", "(", "table", ",", "meta", ")", ":", "\n", "    ", "for", "_id", ",", "item", "in", "enumerate", "(", "meta", ")", ":", "\n", "        ", "if", "item", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "            ", "assert", "np", ".", "all", "(", "item", "[", "'min'", "]", "<=", "table", "[", ":", ",", "_id", "]", ")", "\n", "assert", "np", ".", "all", "(", "table", "[", ":", ",", "_id", "]", "<=", "item", "[", "'max'", "]", ")", "\n", "", "else", ":", "\n", "            ", "assert", "np", ".", "all", "(", "table", "[", ":", ",", "_id", "]", ".", "astype", "(", "'int32'", ")", ">=", "0", ")", "\n", "assert", "np", ".", "all", "(", "table", "[", ":", ",", "_id", "]", ".", "astype", "(", "'int32'", ")", "<", "item", "[", "'size'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.utils.data_utils.verify": [[17, 45], ["numpy.load", "data_utils.verify_table", "data_utils.verify_table", "open", "json.load", "type", "len", "type", "len", "set"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.utils.data_utils.verify_table", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.utils.data_utils.verify_table"], ["", "", "", "def", "verify", "(", "datafile", ",", "metafile", ")", ":", "\n", "    ", "with", "open", "(", "metafile", ")", "as", "f", ":", "\n", "        ", "meta", "=", "json", ".", "load", "(", "f", ")", "\n", "", "assert", "'columns'", "in", "meta", "\n", "assert", "'problem_type'", "in", "meta", "\n", "\n", "\n", "for", "item", "in", "meta", "[", "'columns'", "]", ":", "\n", "        ", "assert", "'name'", "in", "item", "\n", "assert", "item", "[", "'name'", "]", "is", "None", "or", "type", "(", "item", "[", "'name'", "]", ")", "==", "str", "\n", "\n", "assert", "'type'", "in", "item", "\n", "assert", "item", "[", "'type'", "]", "in", "[", "CATEGORICAL", ",", "CONTINUOUS", ",", "ORDINAL", "]", "\n", "\n", "if", "item", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "            ", "assert", "'min'", "in", "item", "and", "'max'", "in", "item", "\n", "", "else", ":", "\n", "            ", "assert", "'size'", "in", "item", "and", "'i2s'", "in", "item", "\n", "assert", "item", "[", "'size'", "]", "==", "len", "(", "item", "[", "'i2s'", "]", ")", "\n", "for", "ss", "in", "item", "[", "'i2s'", "]", ":", "\n", "                ", "assert", "type", "(", "ss", ")", "==", "str", "\n", "assert", "len", "(", "set", "(", "item", "[", "'i2s'", "]", ")", ")", "==", "item", "[", "'size'", "]", "\n", "\n", "\n", "", "", "", "data", "=", "np", ".", "load", "(", "datafile", ")", "\n", "\n", "verify_table", "(", "data", "[", "'train'", "]", ",", "meta", "[", "'columns'", "]", ")", "\n", "verify_table", "(", "data", "[", "'test'", "]", ",", "meta", "[", "'columns'", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.real.adult.project_table": [[20, 32], ["numpy.zeros", "enumerate", "data.iloc[].values.astype", "dict", "data.iloc[].apply", "data.iloc[].apply", "enumerate"], "function", ["None"], ["def", "project_table", "(", "data", ",", "meta", ")", ":", "\n", "    ", "values", "=", "np", ".", "zeros", "(", "shape", "=", "data", ".", "shape", ",", "dtype", "=", "'float32'", ")", "\n", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "meta", ")", ":", "\n", "        ", "if", "info", "[", "'type'", "]", "==", "CONTINUOUS", ":", "\n", "            ", "values", "[", ":", ",", "id_", "]", "=", "data", ".", "iloc", "[", ":", ",", "id_", "]", ".", "values", ".", "astype", "(", "'float32'", ")", "\n", "", "else", ":", "\n", "            ", "mapper", "=", "dict", "(", "[", "(", "item", ",", "id", ")", "for", "id", ",", "item", "in", "enumerate", "(", "info", "[", "'i2s'", "]", ")", "]", ")", "\n", "mapped", "=", "data", ".", "iloc", "[", ":", ",", "id_", "]", ".", "apply", "(", "lambda", "x", ":", "mapper", "[", "x", "]", ")", ".", "values", "\n", "values", "[", ":", ",", "id_", "]", "=", "mapped", "\n", "mapped", "=", "data", ".", "iloc", "[", ":", ",", "id_", "]", ".", "apply", "(", "lambda", "x", ":", "mapper", "[", "x", "]", ")", ".", "values", "\n", "", "", "return", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.real.adult.main": [[34, 110], ["pandas.read_csv", "df.apply.apply", "enumerate", "adult.project_table", "numpy.random.seed", "numpy.random.shuffle", "numpy.savez", "data_utils.verify", "s.mkdir", "os.mkdir", "os.path.join", "open", "json.dump", "x.str.strip", "meta.append", "meta.append", "list", "sorted", "list", "numpy.min", "numpy.max", "dict().items", "map", "len", "df.apply.iloc[].values.astype", "df.apply.iloc[].values.astype", "dict", "df.apply.iloc[].value_counts"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.real.adult.project_table", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.utils.data_utils.verify"], ["", "def", "main", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "s", ".", "mkdir", "(", "output_dir", ")", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "\n", "", "try", ":", "\n", "        ", "os", ".", "mkdir", "(", "temp_dir", ")", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "\n", "", "df", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "cur_dir", ",", "\"raw/binary/adult.data\"", ")", ",", "dtype", "=", "'str'", ",", "header", "=", "None", ")", "\n", "df", "=", "df", ".", "apply", "(", "lambda", "x", ":", "x", ".", "str", ".", "strip", "(", "' \\t.'", ")", ")", "\n", "\n", "col_type", "=", "[", "\n", "(", "\"age\"", ",", "CONTINUOUS", ")", ",", "\n", "(", "\"workclass\"", ",", "CATEGORICAL", ")", ",", "\n", "(", "\"fnlwgt\"", ",", "CONTINUOUS", ")", ",", "\n", "(", "\"education\"", ",", "ORDINAL", ",", "[", "\"Preschool\"", ",", "\"1st-4th\"", ",", "\"5th-6th\"", ",", "\"7th-8th\"", ",", "\"9th\"", ",", "\"10th\"", ",", "\"11th\"", ",", "\"12th\"", ",", "\"HS-grad\"", ",", "\"Prof-school\"", ",", "\"Assoc-voc\"", ",", "\"Assoc-acdm\"", ",", "\"Some-college\"", ",", "\"Bachelors\"", ",", "\"Masters\"", ",", "\"Doctorate\"", "]", ")", ",", "\n", "(", "\"education-num\"", ",", "CONTINUOUS", ")", ",", "\n", "(", "\"marital-status\"", ",", "CATEGORICAL", ")", ",", "\n", "(", "\"occupation\"", ",", "CATEGORICAL", ")", ",", "\n", "(", "\"relationship\"", ",", "CATEGORICAL", ")", ",", "\n", "(", "\"race\"", ",", "CATEGORICAL", ")", ",", "\n", "(", "\"sex\"", ",", "CATEGORICAL", ")", ",", "\n", "(", "\"capital-gain\"", ",", "CONTINUOUS", ")", ",", "\n", "(", "\"capital-loss\"", ",", "CONTINUOUS", ")", ",", "\n", "(", "\"hours-per-week\"", ",", "CONTINUOUS", ")", ",", "\n", "(", "\"native-country\"", ",", "CATEGORICAL", ")", ",", "\n", "(", "\"label\"", ",", "CATEGORICAL", ")", "\n", "]", "\n", "\n", "meta", "=", "[", "]", "\n", "for", "id_", ",", "info", "in", "enumerate", "(", "col_type", ")", ":", "\n", "        ", "if", "info", "[", "1", "]", "==", "CONTINUOUS", ":", "\n", "            ", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "info", "[", "0", "]", ",", "\n", "\"type\"", ":", "info", "[", "1", "]", ",", "\n", "\"min\"", ":", "np", ".", "min", "(", "df", ".", "iloc", "[", ":", ",", "id_", "]", ".", "values", ".", "astype", "(", "'float'", ")", ")", ",", "\n", "\"max\"", ":", "np", ".", "max", "(", "df", ".", "iloc", "[", ":", ",", "id_", "]", ".", "values", ".", "astype", "(", "'float'", ")", ")", "\n", "}", ")", "\n", "", "else", ":", "\n", "            ", "if", "info", "[", "1", "]", "==", "CATEGORICAL", ":", "\n", "                ", "value_count", "=", "list", "(", "dict", "(", "df", ".", "iloc", "[", ":", ",", "id_", "]", ".", "value_counts", "(", ")", ")", ".", "items", "(", ")", ")", "\n", "value_count", "=", "sorted", "(", "value_count", ",", "key", "=", "lambda", "x", ":", "-", "x", "[", "1", "]", ")", "\n", "mapper", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", "[", "0", "]", ",", "value_count", ")", ")", "\n", "", "else", ":", "\n", "                ", "mapper", "=", "info", "[", "2", "]", "\n", "\n", "", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "info", "[", "0", "]", ",", "\n", "\"type\"", ":", "info", "[", "1", "]", ",", "\n", "\"size\"", ":", "len", "(", "mapper", ")", ",", "\n", "\"i2s\"", ":", "mapper", "\n", "}", ")", "\n", "\n", "\n", "", "", "tdata", "=", "project_table", "(", "df", ",", "meta", ")", "\n", "\n", "config", "=", "{", "\n", "'columns'", ":", "meta", ",", "\n", "'problem_type'", ":", "'binary_classification'", "\n", "}", "\n", "\n", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "tdata", ")", "\n", "\n", "t_train", "=", "tdata", "[", ":", "-", "10000", "]", "\n", "t_test", "=", "tdata", "[", "-", "10000", ":", "]", "\n", "\n", "with", "open", "(", "\"{}/{}.json\"", ".", "format", "(", "output_dir", ",", "name", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "json", ".", "dump", "(", "config", ",", "f", ",", "sort_keys", "=", "True", ",", "indent", "=", "4", ",", "separators", "=", "(", "','", ",", "': '", ")", ")", "\n", "", "np", ".", "savez", "(", "\"{}/{}.npz\"", ".", "format", "(", "output_dir", ",", "name", ")", ",", "train", "=", "t_train", ",", "test", "=", "t_test", ")", "\n", "\n", "verify", "(", "\"{}/{}.npz\"", ".", "format", "(", "output_dir", ",", "name", ")", ",", "\n", "\"{}/{}.json\"", ".", "format", "(", "output_dir", ",", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.__init__": [[18, 20], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dist_type", ")", ":", "\n", "        ", "self", ".", "model", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample": [[21, 66], ["numpy.empty", "numpy.zeros", "range", "len", "len", "enumerate", "multivariate.map_col", "len", "type", "distribution.sample", "range", "processing_order.append", "type", "range", "distribution.sample", "len", "tmp.decode.decode.decode"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.map_col", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.MultivariateMaker.sample"], ["", "def", "sample", "(", "self", ",", "n", ")", ":", "\n", "        ", "nodes_parents", "=", "self", ".", "model", ".", "structure", "\n", "processing_order", "=", "[", "]", "\n", "\n", "while", "len", "(", "processing_order", ")", "!=", "len", "(", "nodes_parents", ")", ":", "\n", "            ", "update", "=", "False", "\n", "\n", "for", "id_", ",", "parents", "in", "enumerate", "(", "nodes_parents", ")", ":", "\n", "                ", "if", "id_", "in", "processing_order", ":", "\n", "                    ", "continue", "\n", "\n", "", "flag", "=", "True", "\n", "for", "parent", "in", "parents", ":", "\n", "                    ", "if", "not", "parent", "in", "processing_order", ":", "\n", "                        ", "flag", "=", "False", "\n", "\n", "", "", "if", "flag", ":", "\n", "                    ", "processing_order", ".", "append", "(", "id_", ")", "\n", "update", "=", "True", "\n", "", "", "assert", "update", "\n", "\n", "", "data", "=", "np", ".", "empty", "(", "(", "n", ",", "len", "(", "nodes_parents", ")", ")", ",", "dtype", "=", "'S128'", ")", "\n", "for", "current", "in", "processing_order", ":", "\n", "            ", "distribution", "=", "self", ".", "model", ".", "states", "[", "current", "]", ".", "distribution", "\n", "if", "type", "(", "distribution", ")", "==", "DiscreteDistribution", ":", "\n", "                ", "data", "[", ":", ",", "current", "]", "=", "distribution", ".", "sample", "(", "n", ")", "\n", "", "else", ":", "\n", "                ", "assert", "type", "(", "distribution", ")", "==", "ConditionalProbabilityTable", "\n", "parents_map", "=", "nodes_parents", "[", "current", "]", "\n", "parents", "=", "distribution", ".", "parents", "\n", "for", "_id", "in", "range", "(", "n", ")", ":", "\n", "                    ", "values", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "parents_map", ")", ")", ":", "\n", "                        ", "tmp", "=", "data", "[", "_id", ",", "parents_map", "[", "i", "]", "]", "\n", "try", ":", "\n", "                            ", "tmp", "=", "tmp", ".", "decode", "(", "'utf8'", ")", "\n", "", "except", ":", "\n", "                            ", "pass", "\n", "", "values", "[", "parents", "[", "i", "]", "]", "=", "tmp", "\n", "", "data", "[", "_id", ",", "current", "]", "=", "distribution", ".", "sample", "(", "parent_values", "=", "values", ")", "\n", "\n", "", "", "", "data_t", "=", "np", ".", "zeros", "(", "data", ".", "shape", ")", "\n", "for", "col_id", "in", "range", "(", "data", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "data_t", "[", ":", ",", "col_id", "]", "=", "map_col", "(", "self", ".", "meta", "[", "col_id", "]", "[", "'i2s'", "]", ",", "data", "[", ":", ",", "col_id", "]", ")", "\n", "", "return", "data_t", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.ChainMaker.__init__": [[72, 117], ["pomegranate.DiscreteDistribution", "pomegranate.ConditionalProbabilityTable", "pomegranate.ConditionalProbabilityTable", "pomegranate.Node", "pomegranate.Node", "pomegranate.Node", "pomegranate.BayesianNetwork", "pomegranate.BayesianNetwork.add_states", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.bake", "range", "multivariate.ChainMaker.model.node_count", "meta.append", "chr", "ord"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "A", "=", "DiscreteDistribution", "(", "{", "'1'", ":", "1.", "/", "3", ",", "'2'", ":", "1.", "/", "3", ",", "'3'", ":", "1.", "/", "3", "}", ")", "\n", "B", "=", "ConditionalProbabilityTable", "(", "\n", "[", "[", "'1'", ",", "'1'", ",", "0.5", "]", ",", "\n", "[", "'1'", ",", "'2'", ",", "0.5", "]", ",", "\n", "[", "'1'", ",", "'3'", ",", "0", "]", ",", "\n", "[", "'2'", ",", "'1'", ",", "0", "]", ",", "\n", "[", "'2'", ",", "'2'", ",", "0.5", "]", ",", "\n", "[", "'2'", ",", "'3'", ",", "0.5", "]", ",", "\n", "[", "'3'", ",", "'1'", ",", "0.5", "]", ",", "\n", "[", "'3'", ",", "'2'", ",", "0", "]", ",", "\n", "[", "'3'", ",", "'3'", ",", "0.5", "]", ",", "\n", "]", ",", "[", "A", "]", ")", "\n", "C", "=", "ConditionalProbabilityTable", "(", "\n", "[", "[", "'1'", ",", "'1'", ",", "0.5", "]", ",", "\n", "[", "'1'", ",", "'2'", ",", "0.5", "]", ",", "\n", "[", "'1'", ",", "'3'", ",", "0", "]", ",", "\n", "[", "'2'", ",", "'1'", ",", "0", "]", ",", "\n", "[", "'2'", ",", "'2'", ",", "0.5", "]", ",", "\n", "[", "'2'", ",", "'3'", ",", "0.5", "]", ",", "\n", "[", "'3'", ",", "'1'", ",", "0.5", "]", ",", "\n", "[", "'3'", ",", "'2'", ",", "0", "]", ",", "\n", "[", "'3'", ",", "'3'", ",", "0.5", "]", ",", "\n", "]", ",", "[", "B", "]", ")", "\n", "\n", "s1", "=", "Node", "(", "A", ",", "name", "=", "\"A\"", ")", "\n", "s2", "=", "Node", "(", "B", ",", "name", "=", "\"B\"", ")", "\n", "s3", "=", "Node", "(", "C", ",", "name", "=", "\"C\"", ")", "\n", "\n", "model", "=", "BayesianNetwork", "(", "\"ChainSampler\"", ")", "\n", "model", ".", "add_states", "(", "s1", ",", "s2", ",", "s3", ")", "\n", "model", ".", "add_edge", "(", "s1", ",", "s2", ")", "\n", "model", ".", "add_edge", "(", "s2", ",", "s3", ")", "\n", "model", ".", "bake", "(", ")", "\n", "self", ".", "model", "=", "model", "\n", "\n", "meta", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "model", ".", "node_count", "(", ")", ")", ":", "\n", "            ", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "chr", "(", "ord", "(", "'A'", ")", "+", "i", ")", ",", "\n", "\"type\"", ":", "\"categorical\"", ",", "\n", "\"size\"", ":", "3", ",", "\n", "\"i2s\"", ":", "[", "'1'", ",", "'2'", ",", "'3'", "]", "\n", "}", ")", "\n", "", "self", ".", "meta", "=", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.TreeMaker.__init__": [[120, 171], ["pomegranate.DiscreteDistribution", "pomegranate.ConditionalProbabilityTable", "pomegranate.ConditionalProbabilityTable", "pomegranate.Node", "pomegranate.Node", "pomegranate.Node", "pomegranate.BayesianNetwork", "pomegranate.BayesianNetwork.add_states", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.bake", "range", "meta.append", "meta.append", "multivariate.TreeMaker.model.node_count", "chr", "ord"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "A", "=", "DiscreteDistribution", "(", "{", "'1'", ":", "1.", "/", "3", ",", "'2'", ":", "1.", "/", "3", ",", "'3'", ":", "1.", "/", "3", "}", ")", "\n", "B", "=", "ConditionalProbabilityTable", "(", "\n", "[", "[", "'1'", ",", "'1'", ",", "0.5", "]", ",", "\n", "[", "'1'", ",", "'2'", ",", "0.5", "]", ",", "\n", "[", "'1'", ",", "'3'", ",", "0", "]", ",", "\n", "[", "'2'", ",", "'1'", ",", "0", "]", ",", "\n", "[", "'2'", ",", "'2'", ",", "0.5", "]", ",", "\n", "[", "'2'", ",", "'3'", ",", "0.5", "]", ",", "\n", "[", "'3'", ",", "'1'", ",", "0.5", "]", ",", "\n", "[", "'3'", ",", "'2'", ",", "0", "]", ",", "\n", "[", "'3'", ",", "'3'", ",", "0.5", "]", ",", "\n", "]", ",", "[", "A", "]", ")", "\n", "C", "=", "ConditionalProbabilityTable", "(", "\n", "[", "[", "'1'", ",", "'4'", ",", "0.5", "]", ",", "\n", "[", "'1'", ",", "'5'", ",", "0.5", "]", ",", "\n", "[", "'1'", ",", "'6'", ",", "0", "]", ",", "\n", "[", "'2'", ",", "'4'", ",", "0", "]", ",", "\n", "[", "'2'", ",", "'5'", ",", "0.5", "]", ",", "\n", "[", "'2'", ",", "'6'", ",", "0.5", "]", ",", "\n", "[", "'3'", ",", "'4'", ",", "0.5", "]", ",", "\n", "[", "'3'", ",", "'5'", ",", "0", "]", ",", "\n", "[", "'3'", ",", "'6'", ",", "0.5", "]", ",", "\n", "]", ",", "[", "A", "]", ")", "\n", "\n", "s1", "=", "Node", "(", "A", ",", "name", "=", "\"A\"", ")", "\n", "s2", "=", "Node", "(", "B", ",", "name", "=", "\"B\"", ")", "\n", "s3", "=", "Node", "(", "C", ",", "name", "=", "\"C\"", ")", "\n", "\n", "model", "=", "BayesianNetwork", "(", "\"tree\"", ")", "\n", "model", ".", "add_states", "(", "s1", ",", "s2", ",", "s3", ")", "\n", "model", ".", "add_edge", "(", "s1", ",", "s2", ")", "\n", "model", ".", "add_edge", "(", "s1", ",", "s3", ")", "\n", "model", ".", "bake", "(", ")", "\n", "self", ".", "model", "=", "model", "\n", "\n", "meta", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "model", ".", "node_count", "(", ")", "-", "1", ")", ":", "\n", "            ", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "chr", "(", "ord", "(", "'A'", ")", "+", "i", ")", ",", "\n", "\"type\"", ":", "\"categorical\"", ",", "\n", "\"size\"", ":", "3", ",", "\n", "\"i2s\"", ":", "[", "'1'", ",", "'2'", ",", "'3'", "]", "\n", "}", ")", "\n", "", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "\"C\"", ",", "\n", "\"type\"", ":", "\"categorical\"", ",", "\n", "\"size\"", ":", "3", ",", "\n", "\"i2s\"", ":", "[", "'4'", ",", "'5'", ",", "'6'", "]", "\n", "}", ")", "\n", "self", ".", "meta", "=", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.FCMaker.__init__": [[173, 216], ["pomegranate.DiscreteDistribution", "pomegranate.ConditionalProbabilityTable", "pomegranate.ConditionalProbabilityTable", "pomegranate.Node", "pomegranate.Node", "pomegranate.Node", "pomegranate.BayesianNetwork", "pomegranate.BayesianNetwork.add_states", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.bake", "range", "multivariate.FCMaker.model.node_count", "meta.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "Rain", "=", "DiscreteDistribution", "(", "{", "'T'", ":", "0.2", ",", "'F'", ":", "0.8", "}", ")", "\n", "Sprinkler", "=", "ConditionalProbabilityTable", "(", "\n", "[", "[", "'F'", ",", "'T'", ",", "0.4", "]", ",", "\n", "[", "'F'", ",", "'F'", ",", "0.6", "]", ",", "\n", "[", "'T'", ",", "'T'", ",", "0.1", "]", ",", "\n", "[", "'T'", ",", "'F'", ",", "0.9", "]", ",", "\n", "]", ",", "[", "Rain", "]", ")", "\n", "Wet", "=", "ConditionalProbabilityTable", "(", "\n", "[", "[", "'F'", ",", "'F'", ",", "'T'", ",", "0.01", "]", ",", "\n", "[", "'F'", ",", "'F'", ",", "'F'", ",", "0.99", "]", ",", "\n", "[", "'F'", ",", "'T'", ",", "'T'", ",", "0.8", "]", ",", "\n", "[", "'F'", ",", "'T'", ",", "'F'", ",", "0.2", "]", ",", "\n", "[", "'T'", ",", "'F'", ",", "'T'", ",", "0.9", "]", ",", "\n", "[", "'T'", ",", "'F'", ",", "'F'", ",", "0.1", "]", ",", "\n", "[", "'T'", ",", "'T'", ",", "'T'", ",", "0.99", "]", ",", "\n", "[", "'T'", ",", "'T'", ",", "'F'", ",", "0.01", "]", ",", "\n", "]", ",", "[", "Sprinkler", ",", "Rain", "]", ")", "\n", "\n", "s1", "=", "Node", "(", "Rain", ",", "name", "=", "\"Rain\"", ")", "\n", "s2", "=", "Node", "(", "Sprinkler", ",", "name", "=", "\"Sprinkler\"", ")", "\n", "s3", "=", "Node", "(", "Wet", ",", "name", "=", "\"Wet\"", ")", "\n", "\n", "model", "=", "BayesianNetwork", "(", "\"Simple fully connected\"", ")", "\n", "model", ".", "add_states", "(", "s1", ",", "s2", ",", "s3", ")", "\n", "model", ".", "add_edge", "(", "s1", ",", "s2", ")", "\n", "model", ".", "add_edge", "(", "s1", ",", "s3", ")", "\n", "model", ".", "add_edge", "(", "s2", ",", "s3", ")", "\n", "model", ".", "bake", "(", ")", "\n", "self", ".", "model", "=", "model", "\n", "\n", "meta", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "model", ".", "node_count", "(", ")", ")", ":", "\n", "            ", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "None", ",", "\n", "\"type\"", ":", "\"categorical\"", ",", "\n", "\"size\"", ":", "2", ",", "\n", "\"i2s\"", ":", "[", "'T'", ",", "'F'", "]", "\n", "}", ")", "\n", "", "meta", "[", "0", "]", "[", "'name'", "]", "=", "'Rain'", "\n", "meta", "[", "1", "]", "[", "'name'", "]", "=", "'Sprinkler'", "\n", "meta", "[", "2", "]", "[", "'name'", "]", "=", "'Wet'", "\n", "self", ".", "meta", "=", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.GeneralMaker.__init__": [[219, 271], ["pomegranate.DiscreteDistribution", "pomegranate.DiscreteDistribution", "print", "pomegranate.ConditionalProbabilityTable", "print", "pomegranate.ConditionalProbabilityTable", "pomegranate.ConditionalProbabilityTable", "pomegranate.Node", "pomegranate.Node", "pomegranate.Node", "pomegranate.Node", "pomegranate.Node", "pomegranate.BayesianNetwork", "pomegranate.BayesianNetwork.add_states", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.add_edge", "pomegranate.BayesianNetwork.bake", "range", "multivariate.GeneralMaker.model.node_count", "meta.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "Pollution", "=", "DiscreteDistribution", "(", "{", "'F'", ":", "0.9", ",", "'T'", ":", "0.1", "}", ")", "\n", "Smoker", "=", "DiscreteDistribution", "(", "{", "'T'", ":", "0.3", ",", "'F'", ":", "0.7", "}", ")", "\n", "print", "(", "Smoker", ")", "\n", "Cancer", "=", "ConditionalProbabilityTable", "(", "\n", "[", "[", "'T'", ",", "'T'", ",", "'T'", ",", "0.05", "]", ",", "\n", "[", "'T'", ",", "'T'", ",", "'F'", ",", "0.95", "]", ",", "\n", "[", "'T'", ",", "'F'", ",", "'T'", ",", "0.02", "]", ",", "\n", "[", "'T'", ",", "'F'", ",", "'F'", ",", "0.98", "]", ",", "\n", "[", "'F'", ",", "'T'", ",", "'T'", ",", "0.03", "]", ",", "\n", "[", "'F'", ",", "'T'", ",", "'F'", ",", "0.97", "]", ",", "\n", "[", "'F'", ",", "'F'", ",", "'T'", ",", "0.001", "]", ",", "\n", "[", "'F'", ",", "'F'", ",", "'F'", ",", "0.999", "]", ",", "\n", "]", ",", "[", "Pollution", ",", "Smoker", "]", ")", "\n", "print", "(", "Cancer", ")", "\n", "XRay", "=", "ConditionalProbabilityTable", "(", "\n", "[", "[", "'T'", ",", "'T'", ",", "0.9", "]", ",", "\n", "[", "'T'", ",", "'F'", ",", "0.1", "]", ",", "\n", "[", "'F'", ",", "'T'", ",", "0.2", "]", ",", "\n", "[", "'F'", ",", "'F'", ",", "0.8", "]", ",", "\n", "]", ",", "[", "Cancer", "]", ")", "\n", "Dyspnoea", "=", "ConditionalProbabilityTable", "(", "\n", "[", "[", "'T'", ",", "'T'", ",", "0.65", "]", ",", "\n", "[", "'T'", ",", "'F'", ",", "0.35", "]", ",", "\n", "[", "'F'", ",", "'T'", ",", "0.3", "]", ",", "\n", "[", "'F'", ",", "'F'", ",", "0.7", "]", ",", "\n", "]", ",", "[", "Cancer", "]", ")", "\n", "s1", "=", "Node", "(", "Pollution", ",", "name", "=", "\"Pollution\"", ")", "\n", "s2", "=", "Node", "(", "Smoker", ",", "name", "=", "\"Smoker\"", ")", "\n", "s3", "=", "Node", "(", "Cancer", ",", "name", "=", "\"Cancer\"", ")", "\n", "s4", "=", "Node", "(", "XRay", ",", "name", "=", "\"XRay\"", ")", "\n", "s5", "=", "Node", "(", "Dyspnoea", ",", "name", "=", "\"Dyspnoea\"", ")", "\n", "\n", "model", "=", "BayesianNetwork", "(", "\"Lung Cancer\"", ")", "\n", "model", ".", "add_states", "(", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "s5", ")", "\n", "model", ".", "add_edge", "(", "s1", ",", "s3", ")", "\n", "model", ".", "add_edge", "(", "s2", ",", "s3", ")", "\n", "model", ".", "add_edge", "(", "s3", ",", "s4", ")", "\n", "model", ".", "add_edge", "(", "s3", ",", "s5", ")", "\n", "model", ".", "bake", "(", ")", "\n", "self", ".", "model", "=", "model", "\n", "\n", "meta", "=", "[", "]", "\n", "name_mapper", "=", "[", "\"Pollution\"", ",", "\"Smoker\"", ",", "\"Cancer\"", ",", "\"XRay\"", ",", "\"Dyspnoea\"", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "model", ".", "node_count", "(", ")", ")", ":", "\n", "            ", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "name_mapper", "[", "i", "]", ",", "\n", "\"type\"", ":", "\"categorical\"", ",", "\n", "\"size\"", ":", "2", ",", "\n", "\"i2s\"", ":", "[", "'T'", ",", "'F'", "]", "\n", "}", ")", "\n", "", "self", ".", "meta", "=", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.BIFMaker.__init__": [[273, 369], ["re.findall", "re.findall", "set", "zip", "pomegranate.BayesianNetwork", "pomegranate.BayesianNetwork.add_states", "pomegranate.BayesianNetwork.bake", "open", "f.read", "re.search", "re.search.group", "re.search", "int", "re.search.group().replace().split", "re.search", "re.search.group().replace().replace().split", "multivariate.BIFMaker.meta.append", "len", "pomegranate.Node", "pomegranate.BayesianNetwork.add_edge", "re.search.group", "len", "len", "re.search", "re.search.group().replace().split", "dict", "var_index_to_name.append", "pomegranate.DiscreteDistribution", "re.finditer", "var_index_to_name.append", "set.add", "re.search.group().replace", "re.search.group().replace().replace", "float", "abs", "len", "zip", "re.search.group().replace().split", "re.search.group().replace().split", "zip", "edges.append", "pomegranate.ConditionalProbabilityTable", "set.remove", "re.search.group().replace", "float", "len", "len", "abs", "cond_p_table.append", "re.search.group", "re.search.group().replace", "sum", "re.search.group().replace", "re.search.group().replace", "len", "re.search.group", "sum", "re.search.group", "re.search.group", "re.search.group"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "filename", ")", ":", "\n", "        ", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "            ", "bif", "=", "f", ".", "read", "(", ")", "\n", "", "vars", "=", "re", ".", "findall", "(", "r\"variable[^\\{]+{[^\\}]+}\"", ",", "bif", ")", "\n", "probs", "=", "re", ".", "findall", "(", "r\"probability[^\\{]+{[^\\}]+}\"", ",", "bif", ")", "\n", "\n", "var_nodes", "=", "{", "}", "\n", "var_index_to_name", "=", "[", "]", "\n", "edges", "=", "[", "]", "\n", "\n", "self", ".", "meta", "=", "[", "]", "\n", "todo", "=", "set", "(", ")", "\n", "for", "v", ",", "p", "in", "zip", "(", "vars", ",", "probs", ")", ":", "\n", "            ", "m", "=", "re", ".", "search", "(", "r\"variable\\s+([^\\{\\s]+)\\s+\"", ",", "v", ")", "\n", "v_name", "=", "m", ".", "group", "(", "1", ")", "\n", "m", "=", "re", ".", "search", "(", "r\"type\\s+discrete\\s+\\[\\s*(\\d+)\\s*\\]\\s*\\{([^\\}]+)\\}\"", ",", "v", ")", "\n", "v_opts_n", "=", "int", "(", "m", ".", "group", "(", "1", ")", ")", "\n", "v_opts", "=", "m", ".", "group", "(", "2", ")", ".", "replace", "(", "','", ",", "' '", ")", ".", "split", "(", ")", "\n", "\n", "assert", "v_opts_n", "==", "len", "(", "v_opts", ")", "\n", "# print(v_name, v_opts_n, v_opts)", "\n", "\n", "m", "=", "re", ".", "search", "(", "r\"probability\\s*\\(([^)]+)\\)\"", ",", "p", ")", "\n", "cond", "=", "m", ".", "group", "(", "1", ")", ".", "replace", "(", "'|'", ",", "' '", ")", ".", "replace", "(", "','", ",", "' '", ")", ".", "split", "(", ")", "\n", "assert", "cond", "[", "0", "]", "==", "v_name", "\n", "# print(cond)", "\n", "\n", "self", ".", "meta", ".", "append", "(", "{", "\n", "\"name\"", ":", "v_name", ",", "\n", "\"type\"", ":", "\"categorical\"", ",", "\n", "\"size\"", ":", "v_opts_n", ",", "\n", "\"i2s\"", ":", "v_opts", "\n", "}", ")", "\n", "if", "len", "(", "cond", ")", "==", "1", ":", "\n", "                ", "m", "=", "re", ".", "search", "(", "r\"table([e\\-\\d\\.\\s,]*);\"", ",", "p", ")", "\n", "margin_p", "=", "m", ".", "group", "(", "1", ")", ".", "replace", "(", "','", ",", "' '", ")", ".", "split", "(", ")", "\n", "margin_p", "=", "[", "float", "(", "x", ")", "for", "x", "in", "margin_p", "]", "\n", "assert", "abs", "(", "sum", "(", "margin_p", ")", "-", "1", ")", "<", "1e-6", "\n", "assert", "len", "(", "margin_p", ")", "==", "v_opts_n", "\n", "margin_p", "=", "dict", "(", "zip", "(", "v_opts", ",", "margin_p", ")", ")", "\n", "\n", "var_index_to_name", ".", "append", "(", "v_name", ")", "\n", "tmp", "=", "DiscreteDistribution", "(", "margin_p", ")", "\n", "# print(tmp)", "\n", "var_nodes", "[", "v_name", "]", "=", "tmp", "\n", "", "else", ":", "\n", "                ", "m_iter", "=", "re", ".", "finditer", "(", "r\"\\(([^)]*)\\)([\\s\\d\\.,\\-e]+);\"", ",", "p", ")", "\n", "cond_p_table", "=", "[", "]", "\n", "for", "m", "in", "m_iter", ":", "\n", "                    ", "cond_values", "=", "m", ".", "group", "(", "1", ")", ".", "replace", "(", "','", ",", "' '", ")", ".", "split", "(", ")", "\n", "cond_p", "=", "m", ".", "group", "(", "2", ")", ".", "replace", "(", "','", ",", "' '", ")", ".", "split", "(", ")", "\n", "cond_p", "=", "[", "float", "(", "x", ")", "for", "x", "in", "cond_p", "]", "\n", "assert", "len", "(", "cond_values", ")", "==", "len", "(", "cond", ")", "-", "1", "\n", "assert", "len", "(", "cond_p", ")", "==", "v_opts_n", "\n", "assert", "abs", "(", "sum", "(", "cond_p", ")", "-", "1", ")", "<", "1e-6", "\n", "\n", "for", "opt", ",", "opt_p", "in", "zip", "(", "v_opts", ",", "cond_p", ")", ":", "\n", "                        ", "cond_p_table", ".", "append", "(", "cond_values", "+", "[", "opt", ",", "opt_p", "]", ")", "\n", "", "", "var_index_to_name", ".", "append", "(", "v_name", ")", "\n", "\n", "tmp", "=", "(", "cond_p_table", ",", "cond", ")", "\n", "# print(tmp)", "\n", "var_nodes", "[", "v_name", "]", "=", "tmp", "\n", "for", "x", "in", "cond", "[", "1", ":", "]", ":", "\n", "                    ", "edges", ".", "append", "(", "(", "x", ",", "v_name", ")", ")", "\n", "", "todo", ".", "add", "(", "v_name", ")", "\n", "\n", "", "", "while", "len", "(", "todo", ")", ">", "0", ":", "\n", "# print(todo)", "\n", "            ", "for", "v_name", "in", "todo", ":", "\n", "# print(v_name, type(var_nodes[v_name]))", "\n", "                ", "cond_p_table", ",", "cond", "=", "var_nodes", "[", "v_name", "]", "\n", "flag", "=", "True", "\n", "for", "y", "in", "cond", "[", "1", ":", "]", ":", "\n", "                    ", "if", "y", "in", "todo", ":", "\n", "                        ", "flag", "=", "False", "\n", "break", "\n", "", "", "if", "flag", ":", "\n", "                    ", "cond_t", "=", "[", "var_nodes", "[", "x", "]", "for", "x", "in", "cond", "[", "1", ":", "]", "]", "\n", "var_nodes", "[", "v_name", "]", "=", "ConditionalProbabilityTable", "(", "cond_p_table", ",", "cond_t", ")", "\n", "todo", ".", "remove", "(", "v_name", ")", "\n", "break", "\n", "\n", "", "", "", "for", "x", "in", "var_index_to_name", ":", "\n", "            ", "var_nodes", "[", "x", "]", "=", "Node", "(", "var_nodes", "[", "x", "]", ",", "name", "=", "x", ")", "\n", "\n", "", "var_nodes_list", "=", "[", "var_nodes", "[", "x", "]", "for", "x", "in", "var_index_to_name", "]", "\n", "# print(var_nodes_list)", "\n", "model", "=", "BayesianNetwork", "(", "\"tmp\"", ")", "\n", "model", ".", "add_states", "(", "*", "var_nodes_list", ")", "\n", "\n", "for", "edge", "in", "edges", ":", "\n", "            ", "model", ".", "add_edge", "(", "var_nodes", "[", "edge", "[", "0", "]", "]", ",", "var_nodes", "[", "edge", "[", "1", "]", "]", ")", "\n", "", "model", ".", "bake", "(", ")", "\n", "# print(model.to_json())", "\n", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.multivariate.map_col": [[11, 14], ["dict", "enumerate", "item.decode"], "function", ["None"], ["def", "map_col", "(", "index2str", ",", "values", ")", ":", "\n", "    ", "mapper", "=", "dict", "(", "[", "(", "k", ",", "v", ")", "for", "v", ",", "k", "in", "enumerate", "(", "index2str", ")", "]", ")", "\n", "return", "[", "mapper", "[", "item", ".", "decode", "(", "'utf8'", ")", "]", "for", "item", "in", "values", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.bivariate.create_distribution": [[15, 22], ["bivariate.make_gaussian_mixture", "bivariate.make_gaussian_mixture", "bivariate.make_two_rings"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.bivariate.make_gaussian_mixture", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.bivariate.make_gaussian_mixture", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.bivariate.make_two_rings"], ["def", "create_distribution", "(", "dist_type", ",", "num_samples", ")", ":", "\n", "    ", "if", "dist_type", "in", "[", "\"grid\"", ",", "\"gridr\"", "]", ":", "\n", "        ", "return", "make_gaussian_mixture", "(", "dist_type", ",", "num_samples", ")", "\n", "", "elif", "dist_type", "==", "\"ring\"", ":", "\n", "        ", "return", "make_gaussian_mixture", "(", "dist_type", ",", "num_samples", ",", "num_components", "=", "8", ")", "\n", "", "elif", "dist_type", "==", "\"2rings\"", ":", "\n", "        ", "return", "make_two_rings", "(", "num_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.bivariate.make_gaussian_mixture": [[23, 47], ["numpy.zeros", "numpy.fill_diagonal", "numpy.empty", "int", "range", "numpy.round", "numpy.array", "numpy.array", "numpy.random.multivariate_normal", "numpy.random.multivariate_normal", "numpy.array", "numpy.array", "itertools.product", "range", "range", "numpy.array", "itertools.product", "numpy.random.rand", "range", "range", "math.sqrt", "math.sqrt", "math.sqrt", "math.sqrt", "math.sqrt", "math.sqrt", "math.sqrt", "math.sqrt"], "function", ["None"], ["", "", "def", "make_gaussian_mixture", "(", "dist_type", ",", "num_samples", ",", "num_components", "=", "25", ",", "s", "=", "0.05", ",", "n_dim", "=", "2", ")", ":", "\n", "    ", "\"\"\" Generate from Gaussian mixture models arranged in grid or ring\n    \"\"\"", "\n", "sigmas", "=", "np", ".", "zeros", "(", "(", "n_dim", ",", "n_dim", ")", ")", "\n", "np", ".", "fill_diagonal", "(", "sigmas", ",", "s", ")", "\n", "samples", "=", "np", ".", "empty", "(", "[", "num_samples", ",", "n_dim", "]", ")", "\n", "bsize", "=", "int", "(", "np", ".", "round", "(", "num_samples", "/", "num_components", ")", ")", "\n", "\n", "if", "dist_type", "==", "\"grid\"", ":", "\n", "        ", "mus", "=", "np", ".", "array", "(", "[", "np", ".", "array", "(", "[", "i", ",", "j", "]", ")", "for", "i", ",", "j", "in", "itertools", ".", "product", "(", "range", "(", "-", "4", ",", "5", ",", "2", ")", ",", "\n", "range", "(", "-", "4", ",", "5", ",", "2", ")", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "elif", "dist_type", "==", "\"gridr\"", ":", "\n", "        ", "mus", "=", "np", ".", "array", "(", "[", "np", ".", "array", "(", "[", "i", ",", "j", "]", ")", "+", "(", "np", ".", "random", ".", "rand", "(", "2", ")", "-", "0.5", ")", "\n", "for", "i", ",", "j", "in", "itertools", ".", "product", "(", "range", "(", "-", "4", ",", "5", ",", "2", ")", ",", "\n", "range", "(", "-", "4", ",", "5", ",", "2", ")", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "elif", "dist_type", "==", "\"ring\"", ":", "\n", "        ", "mus", "=", "np", ".", "array", "(", "[", "[", "-", "1", ",", "0", "]", ",", "[", "1", ",", "0", "]", ",", "[", "0", ",", "-", "1", "]", ",", "[", "0", ",", "1", "]", ",", "[", "-", "math", ".", "sqrt", "(", "1", "/", "2", ")", ",", "-", "math", ".", "sqrt", "(", "1", "/", "2", ")", "]", ",", "[", "math", ".", "sqrt", "(", "1", "/", "2", ")", ",", "math", ".", "sqrt", "(", "1", "/", "2", ")", "]", ",", "[", "-", "math", ".", "sqrt", "(", "1", "/", "2", ")", ",", "math", ".", "sqrt", "(", "1", "/", "2", ")", "]", ",", "[", "math", ".", "sqrt", "(", "1", "/", "2", ")", ",", "-", "math", ".", "sqrt", "(", "1", "/", "2", ")", "]", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "num_components", ")", ":", "\n", "        ", "if", "(", "i", "+", "1", ")", "*", "bsize", ">=", "num_samples", ":", "\n", "            ", "samples", "[", "i", "*", "bsize", ":", "num_samples", ",", ":", "]", "=", "np", ".", "random", ".", "multivariate_normal", "(", "mus", "[", "i", "]", ",", "sigmas", ",", "size", "=", "num_samples", "-", "i", "*", "bsize", ")", "\n", "", "else", ":", "\n", "            ", "samples", "[", "i", "*", "bsize", ":", "(", "i", "+", "1", ")", "*", "bsize", ",", ":", "]", "=", "np", ".", "random", ".", "multivariate_normal", "(", "mus", "[", "i", "]", ",", "sigmas", ",", "size", "=", "bsize", ")", "\n", "", "", "return", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN.simulated.bivariate.make_two_rings": [[48, 51], ["sklearn.datasets.make_circles"], "function", ["None"], ["", "def", "make_two_rings", "(", "num_samples", ")", ":", "\n", "    ", "samples", ",", "labels", "=", "make_circles", "(", "num_samples", ",", "shuffle", "=", "True", ",", "noise", "=", "None", ",", "random_state", "=", "None", ",", "factor", "=", "0.6", ")", "\n", "return", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.interp._interp_fit": [[5, 36], ["tuple", "tuple", "tuple", "tuple", "misc._dot_product", "misc._dot_product", "misc._dot_product", "zip", "zip", "zip"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._dot_product", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._dot_product", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._dot_product"], ["def", "_interp_fit", "(", "y0", ",", "y1", ",", "y_mid", ",", "f0", ",", "f1", ",", "dt", ")", ":", "\n", "    ", "\"\"\"Fit coefficients for 4th order polynomial interpolation.\n\n    Args:\n        y0: function value at the start of the interval.\n        y1: function value at the end of the interval.\n        y_mid: function value at the mid-point of the interval.\n        f0: derivative value at the start of the interval.\n        f1: derivative value at the end of the interval.\n        dt: width of the interval.\n\n    Returns:\n        List of coefficients `[a, b, c, d, e]` for interpolating with the polynomial\n        `p = a * x ** 4 + b * x ** 3 + c * x ** 2 + d * x + e` for values of `x`\n        between 0 (start of interval) and 1 (end of interval).\n    \"\"\"", "\n", "a", "=", "tuple", "(", "\n", "_dot_product", "(", "[", "-", "2", "*", "dt", ",", "2", "*", "dt", ",", "-", "8", ",", "-", "8", ",", "16", "]", ",", "[", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "]", ")", "\n", "for", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "in", "zip", "(", "f0", ",", "f1", ",", "y0", ",", "y1", ",", "y_mid", ")", "\n", ")", "\n", "b", "=", "tuple", "(", "\n", "_dot_product", "(", "[", "5", "*", "dt", ",", "-", "3", "*", "dt", ",", "18", ",", "14", ",", "-", "32", "]", ",", "[", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "]", ")", "\n", "for", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "in", "zip", "(", "f0", ",", "f1", ",", "y0", ",", "y1", ",", "y_mid", ")", "\n", ")", "\n", "c", "=", "tuple", "(", "\n", "_dot_product", "(", "[", "-", "4", "*", "dt", ",", "dt", ",", "-", "11", ",", "-", "5", ",", "16", "]", ",", "[", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "]", ")", "\n", "for", "f0_", ",", "f1_", ",", "y0_", ",", "y1_", ",", "y_mid_", "in", "zip", "(", "f0", ",", "f1", ",", "y0", ",", "y1", ",", "y_mid", ")", "\n", ")", "\n", "d", "=", "tuple", "(", "dt", "*", "f0_", "for", "f0_", "in", "f0", ")", "\n", "e", "=", "y0", "\n", "return", "[", "a", ",", "b", ",", "c", ",", "d", ",", "e", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.interp._interp_evaluate": [[38, 66], ["misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "range", "tuple", "torch.tensor().type().to", "len", "xs.append", "misc._dot_product", "torch.tensor().type", "reversed", "zip", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._dot_product"], ["", "def", "_interp_evaluate", "(", "coefficients", ",", "t0", ",", "t1", ",", "t", ")", ":", "\n", "    ", "\"\"\"Evaluate polynomial interpolation at the given time point.\n\n    Args:\n        coefficients: list of Tensor coefficients as created by `interp_fit`.\n        t0: scalar float64 Tensor giving the start of the interval.\n        t1: scalar float64 Tensor giving the end of the interval.\n        t: scalar float64 Tensor giving the desired interpolation point.\n\n    Returns:\n        Polynomial interpolation of the coefficients at time `t`.\n    \"\"\"", "\n", "\n", "dtype", "=", "coefficients", "[", "0", "]", "[", "0", "]", ".", "dtype", "\n", "device", "=", "coefficients", "[", "0", "]", "[", "0", "]", ".", "device", "\n", "\n", "t0", "=", "_convert_to_tensor", "(", "t0", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "t1", "=", "_convert_to_tensor", "(", "t1", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "t", "=", "_convert_to_tensor", "(", "t", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "\n", "assert", "(", "t0", "<=", "t", ")", "&", "(", "t", "<=", "t1", ")", ",", "'invalid interpolation, fails `t0 <= t <= t1`: {}, {}, {}'", ".", "format", "(", "t0", ",", "t", ",", "t1", ")", "\n", "x", "=", "(", "(", "t", "-", "t0", ")", "/", "(", "t1", "-", "t0", ")", ")", ".", "type", "(", "dtype", ")", ".", "to", "(", "device", ")", "\n", "\n", "xs", "=", "[", "torch", ".", "tensor", "(", "1", ")", ".", "type", "(", "dtype", ")", ".", "to", "(", "device", ")", ",", "x", "]", "\n", "for", "_", "in", "range", "(", "2", ",", "len", "(", "coefficients", ")", ")", ":", "\n", "        ", "xs", ".", "append", "(", "xs", "[", "-", "1", "]", "*", "x", ")", "\n", "\n", "", "return", "tuple", "(", "_dot_product", "(", "coefficients_", ",", "reversed", "(", "xs", ")", ")", "for", "coefficients_", "in", "zip", "(", "*", "coefficients", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.rk_common._runge_kutta_step": [[22, 62], ["misc._convert_to_tensor", "misc._convert_to_tensor", "tuple", "zip", "tuple", "tuple", "map", "tuple", "tuple", "tuple", "misc._scaled_dot_product", "k_.append", "misc._scaled_dot_product", "zip", "zip", "misc._scaled_dot_product", "zip", "func"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product"], ["", "def", "_runge_kutta_step", "(", "func", ",", "y0", ",", "f0", ",", "t0", ",", "dt", ",", "tableau", ")", ":", "\n", "    ", "\"\"\"Take an arbitrary Runge-Kutta step and estimate error.\n\n    Args:\n        func: Function to evaluate like `func(t, y)` to compute the time derivative\n            of `y`.\n        y0: Tensor initial value for the state.\n        f0: Tensor initial value for the derivative, computed from `func(t0, y0)`.\n        t0: float64 scalar Tensor giving the initial time.\n        dt: float64 scalar Tensor giving the size of the desired time step.\n        tableau: optional _ButcherTableau describing how to take the Runge-Kutta\n            step.\n        name: optional name for the operation.\n\n    Returns:\n        Tuple `(y1, f1, y1_error, k)` giving the estimated function value after\n        the Runge-Kutta step at `t1 = t0 + dt`, the derivative of the state at `t1`,\n        estimated error at `t1`, and a list of Runge-Kutta coefficients `k` used for\n        calculating these terms.\n    \"\"\"", "\n", "dtype", "=", "y0", "[", "0", "]", ".", "dtype", "\n", "device", "=", "y0", "[", "0", "]", ".", "device", "\n", "\n", "t0", "=", "_convert_to_tensor", "(", "t0", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "dt", "=", "_convert_to_tensor", "(", "dt", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "\n", "k", "=", "tuple", "(", "map", "(", "lambda", "x", ":", "[", "x", "]", ",", "f0", ")", ")", "\n", "for", "alpha_i", ",", "beta_i", "in", "zip", "(", "tableau", ".", "alpha", ",", "tableau", ".", "beta", ")", ":", "\n", "        ", "ti", "=", "t0", "+", "alpha_i", "*", "dt", "\n", "yi", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "beta_i", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "tuple", "(", "k_", ".", "append", "(", "f_", ")", "for", "k_", ",", "f_", "in", "zip", "(", "k", ",", "func", "(", "ti", ",", "yi", ")", ")", ")", "\n", "\n", "", "if", "not", "(", "tableau", ".", "c_sol", "[", "-", "1", "]", "==", "0", "and", "tableau", ".", "c_sol", "[", ":", "-", "1", "]", "==", "tableau", ".", "beta", "[", "-", "1", "]", ")", ":", "\n", "# This property (true for Dormand-Prince) lets us save a few FLOPs.", "\n", "        ", "yi", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "tableau", ".", "c_sol", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "\n", "", "y1", "=", "yi", "\n", "f1", "=", "tuple", "(", "k_", "[", "-", "1", "]", "for", "k_", "in", "k", ")", "\n", "y1_error", "=", "tuple", "(", "_scaled_dot_product", "(", "dt", ",", "tableau", ".", "c_error", ",", "k_", ")", "for", "k_", "in", "k", ")", "\n", "return", "(", "y1", ",", "f1", ",", "y1_error", ",", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.rk_common.rk4_step_func": [[64, 70], ["func", "func", "func", "tuple", "func", "tuple", "tuple", "tuple", "zip", "zip", "zip", "zip"], "function", ["None"], ["", "def", "rk4_step_func", "(", "func", ",", "t", ",", "dt", ",", "y", ",", "k1", "=", "None", ")", ":", "\n", "    ", "if", "k1", "is", "None", ":", "k1", "=", "func", "(", "t", ",", "y", ")", "\n", "k2", "=", "func", "(", "t", "+", "dt", "/", "2", ",", "tuple", "(", "y_", "+", "dt", "*", "k1_", "/", "2", "for", "y_", ",", "k1_", "in", "zip", "(", "y", ",", "k1", ")", ")", ")", "\n", "k3", "=", "func", "(", "t", "+", "dt", "/", "2", ",", "tuple", "(", "y_", "+", "dt", "*", "k2_", "/", "2", "for", "y_", ",", "k2_", "in", "zip", "(", "y", ",", "k2", ")", ")", ")", "\n", "k4", "=", "func", "(", "t", "+", "dt", ",", "tuple", "(", "y_", "+", "dt", "*", "k3_", "for", "y_", ",", "k3_", "in", "zip", "(", "y", ",", "k3", ")", ")", ")", "\n", "return", "tuple", "(", "(", "k1_", "+", "2", "*", "k2_", "+", "2", "*", "k3_", "+", "k4_", ")", "*", "(", "dt", "/", "6", ")", "for", "k1_", ",", "k2_", ",", "k3_", ",", "k4_", "in", "zip", "(", "k1", ",", "k2", ",", "k3", ",", "k4", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.rk_common.rk4_alt_step_func": [[72, 79], ["func", "func", "func", "tuple", "func", "tuple", "tuple", "tuple", "zip", "zip", "zip", "zip"], "function", ["None"], ["", "def", "rk4_alt_step_func", "(", "func", ",", "t", ",", "dt", ",", "y", ",", "k1", "=", "None", ")", ":", "\n", "    ", "\"\"\"Smaller error with slightly more compute.\"\"\"", "\n", "if", "k1", "is", "None", ":", "k1", "=", "func", "(", "t", ",", "y", ")", "\n", "k2", "=", "func", "(", "t", "+", "dt", "/", "3", ",", "tuple", "(", "y_", "+", "dt", "*", "k1_", "/", "3", "for", "y_", ",", "k1_", "in", "zip", "(", "y", ",", "k1", ")", ")", ")", "\n", "k3", "=", "func", "(", "t", "+", "dt", "*", "2", "/", "3", ",", "tuple", "(", "y_", "+", "dt", "*", "(", "k1_", "/", "-", "3", "+", "k2_", ")", "for", "y_", ",", "k1_", ",", "k2_", "in", "zip", "(", "y", ",", "k1", ",", "k2", ")", ")", ")", "\n", "k4", "=", "func", "(", "t", "+", "dt", ",", "tuple", "(", "y_", "+", "dt", "*", "(", "k1_", "-", "k2_", "+", "k3_", ")", "for", "y_", ",", "k1_", ",", "k2_", ",", "k3_", "in", "zip", "(", "y", ",", "k1", ",", "k2", ",", "k3", ")", ")", ")", "\n", "return", "tuple", "(", "(", "k1_", "+", "3", "*", "k2_", "+", "3", "*", "k3_", "+", "k4_", ")", "*", "(", "dt", "/", "8", ")", "for", "k1_", ",", "k2_", ",", "k3_", ",", "k4_", "in", "zip", "(", "k1", ",", "k2", ",", "k3", ",", "k4", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_adams.AdamsBashforthMoulton.__init__": [[153, 165], ["solvers.FixedGridODESolver.__init__", "int", "collections.deque", "min"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", "=", "1e-3", ",", "atol", "=", "1e-4", ",", "implicit", "=", "True", ",", "max_iters", "=", "_MAX_ITERS", ",", "max_order", "=", "_MAX_ORDER", ",", "**", "kwargs", "\n", ")", ":", "\n", "        ", "super", "(", "AdamsBashforthMoulton", ",", "self", ")", ".", "__init__", "(", "func", ",", "y0", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "rtol", "=", "rtol", "\n", "self", ".", "atol", "=", "atol", "\n", "self", ".", "implicit", "=", "implicit", "\n", "self", ".", "max_iters", "=", "max_iters", "\n", "self", ".", "max_order", "=", "int", "(", "min", "(", "max_order", ",", "_MAX_ORDER", ")", ")", "\n", "self", ".", "prev_f", "=", "collections", ".", "deque", "(", "maxlen", "=", "self", ".", "max_order", "-", "1", ")", "\n", "self", ".", "prev_t", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_adams.AdamsBashforthMoulton._update_history": [[166, 170], ["fixed_adams.AdamsBashforthMoulton.prev_f.appendleft"], "methods", ["None"], ["", "def", "_update_history", "(", "self", ",", "t", ",", "f", ")", ":", "\n", "        ", "if", "self", ".", "prev_t", "is", "None", "or", "self", ".", "prev_t", "!=", "t", ":", "\n", "            ", "self", ".", "prev_f", ".", "appendleft", "(", "f", ")", "\n", "self", ".", "prev_t", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_adams.AdamsBashforthMoulton.step_func": [[171, 202], ["fixed_adams.AdamsBashforthMoulton._update_history", "min", "func", "len", "rk_common.rk4_alt_step_func", "tuple", "tuple", "range", "fixed_adams.AdamsBashforthMoulton._update_history", "func", "tuple", "misc._has_converged", "print", "fixed_adams.AdamsBashforthMoulton.prev_f.pop", "misc._scaled_dot_product", "zip", "tuple", "misc._scaled_dot_product", "zip", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_adams.AdamsBashforthMoulton._update_history", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.rk_common.rk4_alt_step_func", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_adams.AdamsBashforthMoulton._update_history", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._has_converged", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product"], ["", "", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "self", ".", "_update_history", "(", "t", ",", "func", "(", "t", ",", "y", ")", ")", "\n", "order", "=", "min", "(", "len", "(", "self", ".", "prev_f", ")", ",", "self", ".", "max_order", "-", "1", ")", "\n", "if", "order", "<", "_MIN_ORDER", "-", "1", ":", "\n", "# Compute using RK4.", "\n", "            ", "dy", "=", "rk_common", ".", "rk4_alt_step_func", "(", "func", ",", "t", ",", "dt", ",", "y", ",", "k1", "=", "self", ".", "prev_f", "[", "0", "]", ")", "\n", "return", "dy", "\n", "", "else", ":", "\n", "# Adams-Bashforth predictor.", "\n", "            ", "bashforth_coeffs", "=", "_BASHFORTH_COEFFICIENTS", "[", "order", "]", "\n", "ab_div", "=", "_DIVISOR", "[", "order", "]", "\n", "dy", "=", "tuple", "(", "dt", "*", "_scaled_dot_product", "(", "1", "/", "ab_div", ",", "bashforth_coeffs", ",", "f_", ")", "for", "f_", "in", "zip", "(", "*", "self", ".", "prev_f", ")", ")", "\n", "\n", "# Adams-Moulton corrector.", "\n", "if", "self", ".", "implicit", ":", "\n", "                ", "moulton_coeffs", "=", "_MOULTON_COEFFICIENTS", "[", "order", "+", "1", "]", "\n", "am_div", "=", "_DIVISOR", "[", "order", "+", "1", "]", "\n", "delta", "=", "tuple", "(", "dt", "*", "_scaled_dot_product", "(", "1", "/", "am_div", ",", "moulton_coeffs", "[", "1", ":", "]", ",", "f_", ")", "for", "f_", "in", "zip", "(", "*", "self", ".", "prev_f", ")", ")", "\n", "converged", "=", "False", "\n", "for", "_", "in", "range", "(", "self", ".", "max_iters", ")", ":", "\n", "                    ", "dy_old", "=", "dy", "\n", "f", "=", "func", "(", "t", "+", "dt", ",", "tuple", "(", "y_", "+", "dy_", "for", "y_", ",", "dy_", "in", "zip", "(", "y", ",", "dy", ")", ")", ")", "\n", "dy", "=", "tuple", "(", "dt", "*", "(", "moulton_coeffs", "[", "0", "]", "/", "am_div", ")", "*", "f_", "+", "delta_", "for", "f_", ",", "delta_", "in", "zip", "(", "f", ",", "delta", ")", ")", "\n", "converged", "=", "_has_converged", "(", "dy_old", ",", "dy", ",", "self", ".", "rtol", ",", "self", ".", "atol", ")", "\n", "if", "converged", ":", "\n", "                        ", "break", "\n", "", "", "if", "not", "converged", ":", "\n", "                    ", "print", "(", "'Warning: Functional iteration did not converge. Solution may be incorrect.'", ",", "file", "=", "sys", ".", "stderr", ")", "\n", "self", ".", "prev_f", ".", "pop", "(", ")", "\n", "", "self", ".", "_update_history", "(", "t", ",", "f", ")", "\n", "", "return", "dy", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_adams.AdamsBashforthMoulton.order": [[203, 206], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "return", "4", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_adams.AdamsBashforth.__init__": [[210, 212], ["fixed_adams.AdamsBashforthMoulton.__init__"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["    ", "def", "__init__", "(", "self", ",", "func", ",", "y0", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "AdamsBashforth", ",", "self", ")", ".", "__init__", "(", "func", ",", "y0", ",", "implicit", "=", "False", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri5.Dopri5Solver.__init__": [[60, 76], ["misc._handle_unused_kwargs", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._is_iterable", "misc._is_iterable", "len", "len"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", ",", "atol", ",", "first_step", "=", "None", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "max_num_steps", "=", "2", "**", "31", "-", "1", ",", "\n", "**", "unused_kwargs", "\n", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "rtol", "=", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "atol", "=", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "first_step", "=", "first_step", "\n", "self", ".", "safety", "=", "_convert_to_tensor", "(", "safety", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "ifactor", "=", "_convert_to_tensor", "(", "ifactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "dfactor", "=", "_convert_to_tensor", "(", "dfactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "max_num_steps", "=", "_convert_to_tensor", "(", "max_num_steps", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri5.Dopri5Solver.before_integrate": [[77, 84], ["dopri5.Dopri5Solver.func", "rk_common._RungeKuttaState", "t[].type_as", "misc._select_initial_step().to", "misc._convert_to_tensor", "misc._select_initial_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._select_initial_step"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "f0", "=", "self", ".", "func", "(", "t", "[", "0", "]", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", ",", "self", ".", "y0", ")", "\n", "if", "self", ".", "first_step", "is", "None", ":", "\n", "            ", "first_step", "=", "_select_initial_step", "(", "self", ".", "func", ",", "t", "[", "0", "]", ",", "self", ".", "y0", ",", "4", ",", "self", ".", "rtol", "[", "0", "]", ",", "self", ".", "atol", "[", "0", "]", ",", "f0", "=", "f0", ")", ".", "to", "(", "t", ")", "\n", "", "else", ":", "\n", "            ", "first_step", "=", "_convert_to_tensor", "(", "self", ".", "first_step", ",", "dtype", "=", "t", ".", "dtype", ",", "device", "=", "t", ".", "device", ")", "\n", "", "self", ".", "rk_state", "=", "_RungeKuttaState", "(", "self", ".", "y0", ",", "f0", ",", "t", "[", "0", "]", ",", "t", "[", "0", "]", ",", "first_step", ",", "interp_coeff", "=", "[", "self", ".", "y0", "]", "*", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri5.Dopri5Solver.advance": [[85, 93], ["interp._interp_evaluate", "dopri5.Dopri5Solver._adaptive_dopri5_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.interp._interp_evaluate", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri5.Dopri5Solver._adaptive_dopri5_step"], ["", "def", "advance", "(", "self", ",", "next_t", ")", ":", "\n", "        ", "\"\"\"Interpolate through the next time point, integrating as necessary.\"\"\"", "\n", "n_steps", "=", "0", "\n", "while", "next_t", ">", "self", ".", "rk_state", ".", "t1", ":", "\n", "            ", "assert", "n_steps", "<", "self", ".", "max_num_steps", ",", "'max_num_steps exceeded ({}>={})'", ".", "format", "(", "n_steps", ",", "self", ".", "max_num_steps", ")", "\n", "self", ".", "rk_state", "=", "self", ".", "_adaptive_dopri5_step", "(", "self", ".", "rk_state", ")", "\n", "n_steps", "+=", "1", "\n", "", "return", "_interp_evaluate", "(", "self", ".", "rk_state", ".", "interp_coeff", ",", "self", ".", "rk_state", ".", "t0", ",", "self", ".", "rk_state", ".", "t1", ",", "next_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri5.Dopri5Solver._adaptive_dopri5_step": [[94, 123], ["rk_common._runge_kutta_step", "misc._compute_error_ratio", "misc._optimal_step_size", "rk_common._RungeKuttaState", "dt.item", "misc._is_finite", "dopri5._interp_fit_dopri5", "torch.abs", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.rk_common._runge_kutta_step", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_finite", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri5._interp_fit_dopri5"], ["", "def", "_adaptive_dopri5_step", "(", "self", ",", "rk_state", ")", ":", "\n", "        ", "\"\"\"Take an adaptive Runge-Kutta step to integrate the ODE.\"\"\"", "\n", "y0", ",", "f0", ",", "_", ",", "t0", ",", "dt", ",", "interp_coeff", "=", "rk_state", "\n", "########################################################", "\n", "#                      Assertions                      #", "\n", "########################################################", "\n", "assert", "t0", "+", "dt", ">", "t0", ",", "'underflow in dt {}'", ".", "format", "(", "dt", ".", "item", "(", ")", ")", "\n", "for", "y0_", "in", "y0", ":", "\n", "            ", "assert", "_is_finite", "(", "torch", ".", "abs", "(", "y0_", ")", ")", ",", "'non-finite values in state `y`: {}'", ".", "format", "(", "y0_", ")", "\n", "", "y1", ",", "f1", ",", "y1_error", ",", "k", "=", "_runge_kutta_step", "(", "self", ".", "func", ",", "y0", ",", "f0", ",", "t0", ",", "dt", ",", "tableau", "=", "_DORMAND_PRINCE_SHAMPINE_TABLEAU", ")", "\n", "\n", "########################################################", "\n", "#                     Error Ratio                      #", "\n", "########################################################", "\n", "mean_sq_error_ratio", "=", "_compute_error_ratio", "(", "y1_error", ",", "atol", "=", "self", ".", "atol", ",", "rtol", "=", "self", ".", "rtol", ",", "y0", "=", "y0", ",", "y1", "=", "y1", ")", "\n", "accept_step", "=", "(", "torch", ".", "tensor", "(", "mean_sq_error_ratio", ")", "<=", "1", ")", ".", "all", "(", ")", "\n", "\n", "########################################################", "\n", "#                   Update RK State                    #", "\n", "########################################################", "\n", "y_next", "=", "y1", "if", "accept_step", "else", "y0", "\n", "f_next", "=", "f1", "if", "accept_step", "else", "f0", "\n", "t_next", "=", "t0", "+", "dt", "if", "accept_step", "else", "t0", "\n", "interp_coeff", "=", "_interp_fit_dopri5", "(", "y0", ",", "y1", ",", "k", ",", "dt", ")", "if", "accept_step", "else", "interp_coeff", "\n", "dt_next", "=", "_optimal_step_size", "(", "\n", "dt", ",", "mean_sq_error_ratio", ",", "safety", "=", "self", ".", "safety", ",", "ifactor", "=", "self", ".", "ifactor", ",", "dfactor", "=", "self", ".", "dfactor", ",", "order", "=", "5", "\n", ")", "\n", "rk_state", "=", "_RungeKuttaState", "(", "y_next", ",", "f_next", ",", "t0", ",", "t_next", ",", "dt_next", ",", "interp_coeff", ")", "\n", "return", "rk_state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri5._interp_fit_dopri5": [[39, 46], ["dt.type_as.type_as", "tuple", "tuple", "tuple", "interp._interp_fit", "misc._scaled_dot_product", "zip"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.interp._interp_fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product"], ["def", "_interp_fit_dopri5", "(", "y0", ",", "y1", ",", "k", ",", "dt", ",", "tableau", "=", "_DORMAND_PRINCE_SHAMPINE_TABLEAU", ")", ":", "\n", "    ", "\"\"\"Fit an interpolating polynomial to the results of a Runge-Kutta step.\"\"\"", "\n", "dt", "=", "dt", ".", "type_as", "(", "y0", "[", "0", "]", ")", "\n", "y_mid", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "DPS_C_MID", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "f0", "=", "tuple", "(", "k_", "[", "0", "]", "for", "k_", "in", "k", ")", "\n", "f1", "=", "tuple", "(", "k_", "[", "-", "1", "]", "for", "k_", "in", "k", ")", "\n", "return", "_interp_fit", "(", "y0", ",", "y1", ",", "y_mid", ",", "f0", ",", "f1", ",", "dt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri5._abs_square": [[48, 50], ["torch.mul"], "function", ["None"], ["", "def", "_abs_square", "(", "x", ")", ":", "\n", "    ", "return", "torch", ".", "mul", "(", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri5._ta_append": [[52, 56], ["list_of_tensors.append"], "function", ["None"], ["", "def", "_ta_append", "(", "list_of_tensors", ",", "value", ")", ":", "\n", "    ", "\"\"\"Append a value to the end of a list of PyTorch tensors.\"\"\"", "\n", "list_of_tensors", ".", "append", "(", "value", ")", "\n", "return", "list_of_tensors", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adaptive_heun.AdaptiveHeunSolver.__init__": [[49, 65], ["misc._handle_unused_kwargs", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._is_iterable", "misc._is_iterable", "len", "len"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", ",", "atol", ",", "first_step", "=", "None", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "max_num_steps", "=", "2", "**", "31", "-", "1", ",", "\n", "**", "unused_kwargs", "\n", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "rtol", "=", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "atol", "=", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "first_step", "=", "first_step", "\n", "self", ".", "safety", "=", "_convert_to_tensor", "(", "safety", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "ifactor", "=", "_convert_to_tensor", "(", "ifactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "dfactor", "=", "_convert_to_tensor", "(", "dfactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "max_num_steps", "=", "_convert_to_tensor", "(", "max_num_steps", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adaptive_heun.AdaptiveHeunSolver.before_integrate": [[66, 73], ["adaptive_heun.AdaptiveHeunSolver.func", "rk_common._RungeKuttaState", "t[].type_as", "misc._select_initial_step().to", "misc._convert_to_tensor", "misc._select_initial_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._select_initial_step"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "f0", "=", "self", ".", "func", "(", "t", "[", "0", "]", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", ",", "self", ".", "y0", ")", "\n", "if", "self", ".", "first_step", "is", "None", ":", "\n", "            ", "first_step", "=", "_select_initial_step", "(", "self", ".", "func", ",", "t", "[", "0", "]", ",", "self", ".", "y0", ",", "1", ",", "self", ".", "rtol", "[", "0", "]", ",", "self", ".", "atol", "[", "0", "]", ",", "f0", "=", "f0", ")", ".", "to", "(", "t", ")", "\n", "", "else", ":", "\n", "            ", "first_step", "=", "_convert_to_tensor", "(", "self", ".", "first_step", ",", "dtype", "=", "t", ".", "dtype", ",", "device", "=", "t", ".", "device", ")", "\n", "", "self", ".", "rk_state", "=", "_RungeKuttaState", "(", "self", ".", "y0", ",", "f0", ",", "t", "[", "0", "]", ",", "t", "[", "0", "]", ",", "first_step", ",", "interp_coeff", "=", "[", "self", ".", "y0", "]", "*", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adaptive_heun.AdaptiveHeunSolver.advance": [[74, 82], ["interp._interp_evaluate", "adaptive_heun.AdaptiveHeunSolver._adaptive_heun_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.interp._interp_evaluate", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adaptive_heun.AdaptiveHeunSolver._adaptive_heun_step"], ["", "def", "advance", "(", "self", ",", "next_t", ")", ":", "\n", "        ", "\"\"\"Interpolate through the next time point, integrating as necessary.\"\"\"", "\n", "n_steps", "=", "0", "\n", "while", "next_t", ">", "self", ".", "rk_state", ".", "t1", ":", "\n", "            ", "assert", "n_steps", "<", "self", ".", "max_num_steps", ",", "'max_num_steps exceeded ({}>={})'", ".", "format", "(", "n_steps", ",", "self", ".", "max_num_steps", ")", "\n", "self", ".", "rk_state", "=", "self", ".", "_adaptive_heun_step", "(", "self", ".", "rk_state", ")", "\n", "n_steps", "+=", "1", "\n", "", "return", "_interp_evaluate", "(", "self", ".", "rk_state", ".", "interp_coeff", ",", "self", ".", "rk_state", ".", "t0", ",", "self", ".", "rk_state", ".", "t1", ",", "next_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adaptive_heun.AdaptiveHeunSolver._adaptive_heun_step": [[83, 112], ["rk_common._runge_kutta_step", "misc._compute_error_ratio", "misc._optimal_step_size", "rk_common._RungeKuttaState", "dt.item", "misc._is_finite", "adaptive_heun._interp_fit_adaptive_heun", "torch.abs", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.rk_common._runge_kutta_step", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_finite", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adaptive_heun._interp_fit_adaptive_heun"], ["", "def", "_adaptive_heun_step", "(", "self", ",", "rk_state", ")", ":", "\n", "        ", "\"\"\"Take an adaptive Runge-Kutta step to integrate the ODE.\"\"\"", "\n", "y0", ",", "f0", ",", "_", ",", "t0", ",", "dt", ",", "interp_coeff", "=", "rk_state", "\n", "########################################################", "\n", "#                      Assertions                      #", "\n", "########################################################", "\n", "assert", "t0", "+", "dt", ">", "t0", ",", "'underflow in dt {}'", ".", "format", "(", "dt", ".", "item", "(", ")", ")", "\n", "for", "y0_", "in", "y0", ":", "\n", "            ", "assert", "_is_finite", "(", "torch", ".", "abs", "(", "y0_", ")", ")", ",", "'non-finite values in state `y`: {}'", ".", "format", "(", "y0_", ")", "\n", "", "y1", ",", "f1", ",", "y1_error", ",", "k", "=", "_runge_kutta_step", "(", "self", ".", "func", ",", "y0", ",", "f0", ",", "t0", ",", "dt", ",", "tableau", "=", "_ADAPTIVE_HEUN_TABLEAU", ")", "\n", "\n", "########################################################", "\n", "#                     Error Ratio                      #", "\n", "########################################################", "\n", "mean_sq_error_ratio", "=", "_compute_error_ratio", "(", "y1_error", ",", "atol", "=", "self", ".", "atol", ",", "rtol", "=", "self", ".", "rtol", ",", "y0", "=", "y0", ",", "y1", "=", "y1", ")", "\n", "accept_step", "=", "(", "torch", ".", "tensor", "(", "mean_sq_error_ratio", ")", "<=", "1", ")", ".", "all", "(", ")", "\n", "\n", "########################################################", "\n", "#                   Update RK State                    #", "\n", "########################################################", "\n", "y_next", "=", "y1", "if", "accept_step", "else", "y0", "\n", "f_next", "=", "f1", "if", "accept_step", "else", "f0", "\n", "t_next", "=", "t0", "+", "dt", "if", "accept_step", "else", "t0", "\n", "interp_coeff", "=", "_interp_fit_adaptive_heun", "(", "y0", ",", "y1", ",", "k", ",", "dt", ")", "if", "accept_step", "else", "interp_coeff", "\n", "dt_next", "=", "_optimal_step_size", "(", "\n", "dt", ",", "mean_sq_error_ratio", ",", "safety", "=", "self", ".", "safety", ",", "ifactor", "=", "self", ".", "ifactor", ",", "dfactor", "=", "self", ".", "dfactor", ",", "order", "=", "5", "\n", ")", "\n", "rk_state", "=", "_RungeKuttaState", "(", "y_next", ",", "f_next", ",", "t0", ",", "t_next", ",", "dt_next", ",", "interp_coeff", ")", "\n", "return", "rk_state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adaptive_heun._interp_fit_adaptive_heun": [[28, 35], ["dt.type_as.type_as", "tuple", "tuple", "tuple", "interp._interp_fit", "misc._scaled_dot_product", "zip"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.interp._interp_fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product"], ["def", "_interp_fit_adaptive_heun", "(", "y0", ",", "y1", ",", "k", ",", "dt", ",", "tableau", "=", "_ADAPTIVE_HEUN_TABLEAU", ")", ":", "\n", "    ", "\"\"\"Fit an interpolating polynomial to the results of a Runge-Kutta step.\"\"\"", "\n", "dt", "=", "dt", ".", "type_as", "(", "y0", "[", "0", "]", ")", "\n", "y_mid", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "AH_C_MID", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "f0", "=", "tuple", "(", "k_", "[", "0", "]", "for", "k_", "in", "k", ")", "\n", "f1", "=", "tuple", "(", "k_", "[", "-", "1", "]", "for", "k_", "in", "k", ")", "\n", "return", "_interp_fit", "(", "y0", ",", "y1", ",", "y_mid", ",", "f0", ",", "f1", ",", "dt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adaptive_heun._abs_square": [[37, 39], ["torch.mul"], "function", ["None"], ["", "def", "_abs_square", "(", "x", ")", ":", "\n", "    ", "return", "torch", ".", "mul", "(", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adaptive_heun._ta_append": [[41, 45], ["list_of_tensors.append"], "function", ["None"], ["", "def", "_ta_append", "(", "list_of_tensors", ",", "value", ")", ":", "\n", "    ", "\"\"\"Append a value to the end of a list of PyTorch tensors.\"\"\"", "\n", "list_of_tensors", ".", "append", "(", "value", ")", "\n", "return", "list_of_tensors", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri8.Dopri8Solver.__init__": [[41, 57], ["misc._handle_unused_kwargs", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._is_iterable", "misc._is_iterable", "len", "len"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", ",", "atol", ",", "first_step", "=", "None", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "max_num_steps", "=", "2", "**", "31", "-", "1", ",", "\n", "**", "unused_kwargs", "\n", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "rtol", "=", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "atol", "=", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "first_step", "=", "first_step", "\n", "self", ".", "safety", "=", "_convert_to_tensor", "(", "safety", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "ifactor", "=", "_convert_to_tensor", "(", "ifactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "dfactor", "=", "_convert_to_tensor", "(", "dfactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "max_num_steps", "=", "_convert_to_tensor", "(", "max_num_steps", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri8.Dopri8Solver.before_integrate": [[58, 65], ["dopri8.Dopri8Solver.func", "rk_common._RungeKuttaState", "t[].type_as", "misc._select_initial_step().to", "misc._convert_to_tensor", "misc._select_initial_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._select_initial_step"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "f0", "=", "self", ".", "func", "(", "t", "[", "0", "]", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", ",", "self", ".", "y0", ")", "\n", "if", "self", ".", "first_step", "is", "None", ":", "\n", "            ", "first_step", "=", "_select_initial_step", "(", "self", ".", "func", ",", "t", "[", "0", "]", ",", "self", ".", "y0", ",", "7", ",", "self", ".", "rtol", "[", "0", "]", ",", "self", ".", "atol", "[", "0", "]", ",", "f0", "=", "f0", ")", ".", "to", "(", "t", ")", "\n", "", "else", ":", "\n", "            ", "first_step", "=", "_convert_to_tensor", "(", "self", ".", "first_step", ",", "dtype", "=", "t", ".", "dtype", ",", "device", "=", "t", ".", "device", ")", "\n", "", "self", ".", "rk_state", "=", "_RungeKuttaState", "(", "self", ".", "y0", ",", "f0", ",", "t", "[", "0", "]", ",", "t", "[", "0", "]", ",", "first_step", ",", "interp_coeff", "=", "[", "self", ".", "y0", "]", "*", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri8.Dopri8Solver.advance": [[66, 74], ["interp._interp_evaluate", "dopri8.Dopri8Solver._adaptive_dopri8_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.interp._interp_evaluate", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri8.Dopri8Solver._adaptive_dopri8_step"], ["", "def", "advance", "(", "self", ",", "next_t", ")", ":", "\n", "        ", "\"\"\"Interpolate through the next time point, integrating as necessary.\"\"\"", "\n", "n_steps", "=", "0", "\n", "while", "next_t", ">", "self", ".", "rk_state", ".", "t1", ":", "\n", "            ", "assert", "n_steps", "<", "self", ".", "max_num_steps", ",", "'max_num_steps exceeded ({}>={})'", ".", "format", "(", "n_steps", ",", "self", ".", "max_num_steps", ")", "\n", "self", ".", "rk_state", "=", "self", ".", "_adaptive_dopri8_step", "(", "self", ".", "rk_state", ")", "\n", "n_steps", "+=", "1", "\n", "", "return", "_interp_evaluate", "(", "self", ".", "rk_state", ".", "interp_coeff", ",", "self", ".", "rk_state", ".", "t0", ",", "self", ".", "rk_state", ".", "t1", ",", "next_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri8.Dopri8Solver._adaptive_dopri8_step": [[75, 104], ["rk_common._runge_kutta_step", "misc._compute_error_ratio", "misc._optimal_step_size", "rk_common._RungeKuttaState", "dt.item", "misc._is_finite", "dopri8._interp_fit_dopri8", "torch.abs", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.rk_common._runge_kutta_step", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_finite", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri8._interp_fit_dopri8"], ["", "def", "_adaptive_dopri8_step", "(", "self", ",", "rk_state", ")", ":", "\n", "        ", "\"\"\"Take an adaptive Runge-Kutta step to integrate the ODE.\"\"\"", "\n", "y0", ",", "f0", ",", "_", ",", "t0", ",", "dt", ",", "interp_coeff", "=", "rk_state", "\n", "########################################################", "\n", "#                      Assertions                      #", "\n", "########################################################", "\n", "assert", "t0", "+", "dt", ">", "t0", ",", "'underflow in dt {}'", ".", "format", "(", "dt", ".", "item", "(", ")", ")", "\n", "for", "y0_", "in", "y0", ":", "\n", "            ", "assert", "_is_finite", "(", "torch", ".", "abs", "(", "y0_", ")", ")", ",", "'non-finite values in state `y`: {}'", ".", "format", "(", "y0_", ")", "\n", "", "y1", ",", "f1", ",", "y1_error", ",", "k", "=", "_runge_kutta_step", "(", "self", ".", "func", ",", "y0", ",", "f0", ",", "t0", ",", "dt", ",", "tableau", "=", "_DOPRI8_TABLEAU", ")", "\n", "\n", "########################################################", "\n", "#                     Error Ratio                      #", "\n", "########################################################", "\n", "mean_sq_error_ratio", "=", "_compute_error_ratio", "(", "y1_error", ",", "atol", "=", "self", ".", "atol", ",", "rtol", "=", "self", ".", "rtol", ",", "y0", "=", "y0", ",", "y1", "=", "y1", ")", "\n", "accept_step", "=", "(", "torch", ".", "tensor", "(", "mean_sq_error_ratio", ")", "<=", "1", ")", ".", "all", "(", ")", "\n", "\n", "########################################################", "\n", "#                   Update RK State                    #", "\n", "########################################################", "\n", "y_next", "=", "y1", "if", "accept_step", "else", "y0", "\n", "f_next", "=", "f1", "if", "accept_step", "else", "f0", "\n", "t_next", "=", "t0", "+", "dt", "if", "accept_step", "else", "t0", "\n", "interp_coeff", "=", "_interp_fit_dopri8", "(", "y0", ",", "y1", ",", "k", ",", "dt", ")", "if", "accept_step", "else", "interp_coeff", "\n", "dt_next", "=", "_optimal_step_size", "(", "\n", "dt", ",", "mean_sq_error_ratio", ",", "safety", "=", "self", ".", "safety", ",", "ifactor", "=", "self", ".", "ifactor", ",", "dfactor", "=", "self", ".", "dfactor", ",", "order", "=", "8", "\n", ")", "\n", "rk_state", "=", "_RungeKuttaState", "(", "y_next", ",", "f_next", ",", "t0", ",", "t_next", ",", "dt_next", ",", "interp_coeff", ")", "\n", "return", "rk_state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri8._interp_fit_dopri8": [[21, 28], ["dt.type_as.type_as", "tuple", "tuple", "tuple", "interp._interp_fit", "misc._scaled_dot_product", "zip"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.interp._interp_fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product"], ["def", "_interp_fit_dopri8", "(", "y0", ",", "y1", ",", "k", ",", "dt", ",", "tableau", "=", "_DOPRI8_TABLEAU", ")", ":", "\n", "    ", "\"\"\"Fit an interpolating polynomial to the results of a Runge-Kutta step.\"\"\"", "\n", "dt", "=", "dt", ".", "type_as", "(", "y0", "[", "0", "]", ")", "\n", "y_mid", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "c_mid", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "f0", "=", "tuple", "(", "k_", "[", "0", "]", "for", "k_", "in", "k", ")", "\n", "f1", "=", "tuple", "(", "k_", "[", "-", "1", "]", "for", "k_", "in", "k", ")", "\n", "return", "_interp_fit", "(", "y0", ",", "y1", ",", "y_mid", ",", "f0", ",", "f1", ",", "dt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri8._abs_square": [[29, 31], ["torch.mul"], "function", ["None"], ["", "def", "_abs_square", "(", "x", ")", ":", "\n", "    ", "return", "torch", ".", "mul", "(", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.dopri8._ta_append": [[33, 37], ["list_of_tensors.append"], "function", ["None"], ["", "def", "_ta_append", "(", "list_of_tensors", ",", "value", ")", ":", "\n", "    ", "\"\"\"Append a value to the end of a list of PyTorch tensors.\"\"\"", "\n", "list_of_tensors", ".", "append", "(", "value", ")", "\n", "return", "list_of_tensors", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5.Tsit5Solver.__init__": [[68, 84], ["misc._handle_unused_kwargs", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", ",", "atol", ",", "first_step", "=", "None", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "max_num_steps", "=", "2", "**", "31", "-", "1", ",", "\n", "**", "unused_kwargs", "\n", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "rtol", "=", "rtol", "\n", "self", ".", "atol", "=", "atol", "\n", "self", ".", "first_step", "=", "first_step", "\n", "self", ".", "safety", "=", "_convert_to_tensor", "(", "safety", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "ifactor", "=", "_convert_to_tensor", "(", "ifactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "dfactor", "=", "_convert_to_tensor", "(", "dfactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "max_num_steps", "=", "_convert_to_tensor", "(", "max_num_steps", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5.Tsit5Solver.before_integrate": [[85, 94], ["rk_common._RungeKuttaState", "misc._select_initial_step().to", "misc._convert_to_tensor", "tsit5.Tsit5Solver.func", "tuple", "t[].type_as", "map", "misc._select_initial_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._select_initial_step"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "if", "self", ".", "first_step", "is", "None", ":", "\n", "            ", "first_step", "=", "_select_initial_step", "(", "self", ".", "func", ",", "t", "[", "0", "]", ",", "self", ".", "y0", ",", "4", ",", "self", ".", "rtol", ",", "self", ".", "atol", ")", ".", "to", "(", "t", ")", "\n", "", "else", ":", "\n", "            ", "first_step", "=", "_convert_to_tensor", "(", "self", ".", "first_step", ",", "dtype", "=", "t", ".", "dtype", ",", "device", "=", "t", ".", "device", ")", "\n", "", "self", ".", "rk_state", "=", "_RungeKuttaState", "(", "\n", "self", ".", "y0", ",", "\n", "self", ".", "func", "(", "t", "[", "0", "]", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", ",", "self", ".", "y0", ")", ",", "t", "[", "0", "]", ",", "t", "[", "0", "]", ",", "first_step", ",", "\n", "tuple", "(", "map", "(", "lambda", "x", ":", "[", "x", "]", "*", "7", ",", "self", ".", "y0", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5.Tsit5Solver.advance": [[96, 104], ["tsit5._interp_eval_tsit5", "tsit5.Tsit5Solver._adaptive_tsit5_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5._interp_eval_tsit5", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5.Tsit5Solver._adaptive_tsit5_step"], ["", "def", "advance", "(", "self", ",", "next_t", ")", ":", "\n", "        ", "\"\"\"Interpolate through the next time point, integrating as necessary.\"\"\"", "\n", "n_steps", "=", "0", "\n", "while", "next_t", ">", "self", ".", "rk_state", ".", "t1", ":", "\n", "            ", "assert", "n_steps", "<", "self", ".", "max_num_steps", ",", "'max_num_steps exceeded ({}>={})'", ".", "format", "(", "n_steps", ",", "self", ".", "max_num_steps", ")", "\n", "self", ".", "rk_state", "=", "self", ".", "_adaptive_tsit5_step", "(", "self", ".", "rk_state", ")", "\n", "n_steps", "+=", "1", "\n", "", "return", "_interp_eval_tsit5", "(", "self", ".", "rk_state", ".", "t0", ",", "self", ".", "rk_state", ".", "t1", ",", "self", ".", "rk_state", ".", "interp_coeff", ",", "next_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5.Tsit5Solver._adaptive_tsit5_step": [[105, 140], ["rk_common._runge_kutta_step", "tuple", "tuple", "tuple", "tsit5._optimal_step_size", "rk_common._RungeKuttaState", "dt.item", "misc._is_finite", "sum", "sum", "torch.abs", "torch.mul", "zip", "zip", "torch.sum", "sq_error_ratio_.numel", "torch.max", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.rk_common._runge_kutta_step", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_finite"], ["", "def", "_adaptive_tsit5_step", "(", "self", ",", "rk_state", ")", ":", "\n", "        ", "\"\"\"Take an adaptive Runge-Kutta step to integrate the ODE.\"\"\"", "\n", "y0", ",", "f0", ",", "_", ",", "t0", ",", "dt", ",", "_", "=", "rk_state", "\n", "########################################################", "\n", "#                      Assertions                      #", "\n", "########################################################", "\n", "assert", "t0", "+", "dt", ">", "t0", ",", "'underflow in dt {}'", ".", "format", "(", "dt", ".", "item", "(", ")", ")", "\n", "for", "y0_", "in", "y0", ":", "\n", "            ", "assert", "_is_finite", "(", "torch", ".", "abs", "(", "y0_", ")", ")", ",", "'non-finite values in state `y`: {}'", ".", "format", "(", "y0_", ")", "\n", "", "y1", ",", "f1", ",", "y1_error", ",", "k", "=", "_runge_kutta_step", "(", "self", ".", "func", ",", "y0", ",", "f0", ",", "t0", ",", "dt", ",", "tableau", "=", "_TSITOURAS_TABLEAU", ")", "\n", "\n", "########################################################", "\n", "#                     Error Ratio                      #", "\n", "########################################################", "\n", "error_tol", "=", "tuple", "(", "self", ".", "atol", "+", "self", ".", "rtol", "*", "torch", ".", "max", "(", "torch", ".", "abs", "(", "y0_", ")", ",", "torch", ".", "abs", "(", "y1_", ")", ")", "for", "y0_", ",", "y1_", "in", "zip", "(", "y0", ",", "y1", ")", ")", "\n", "tensor_error_ratio", "=", "tuple", "(", "y1_error_", "/", "error_tol_", "for", "y1_error_", ",", "error_tol_", "in", "zip", "(", "y1_error", ",", "error_tol", ")", ")", "\n", "sq_error_ratio", "=", "tuple", "(", "\n", "torch", ".", "mul", "(", "tensor_error_ratio_", ",", "tensor_error_ratio_", ")", "for", "tensor_error_ratio_", "in", "tensor_error_ratio", "\n", ")", "\n", "mean_error_ratio", "=", "(", "\n", "sum", "(", "torch", ".", "sum", "(", "sq_error_ratio_", ")", "for", "sq_error_ratio_", "in", "sq_error_ratio", ")", "/", "\n", "sum", "(", "sq_error_ratio_", ".", "numel", "(", ")", "for", "sq_error_ratio_", "in", "sq_error_ratio", ")", "\n", ")", "\n", "accept_step", "=", "mean_error_ratio", "<=", "1", "\n", "\n", "########################################################", "\n", "#                   Update RK State                    #", "\n", "########################################################", "\n", "y_next", "=", "y1", "if", "accept_step", "else", "y0", "\n", "f_next", "=", "f1", "if", "accept_step", "else", "f0", "\n", "t_next", "=", "t0", "+", "dt", "if", "accept_step", "else", "t0", "\n", "dt_next", "=", "_optimal_step_size", "(", "dt", ",", "mean_error_ratio", ",", "self", ".", "safety", ",", "self", ".", "ifactor", ",", "self", ".", "dfactor", ")", "\n", "k_next", "=", "k", "if", "accept_step", "else", "self", ".", "rk_state", ".", "interp_coeff", "\n", "rk_state", "=", "_RungeKuttaState", "(", "y_next", ",", "f_next", ",", "t0", ",", "t_next", ",", "dt_next", ",", "k_next", ")", "\n", "return", "rk_state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5._interp_coeff_tsit5": [[30, 40], ["float"], "function", ["None"], ["def", "_interp_coeff_tsit5", "(", "t0", ",", "dt", ",", "eval_t", ")", ":", "\n", "    ", "t", "=", "float", "(", "(", "eval_t", "-", "t0", ")", "/", "dt", ")", "\n", "b1", "=", "-", "1.0530884977290216", "*", "t", "*", "(", "t", "-", "1.3299890189751412", ")", "*", "(", "t", "**", "2", "-", "1.4364028541716351", "*", "t", "+", "0.7139816917074209", ")", "\n", "b2", "=", "0.1017", "*", "t", "**", "2", "*", "(", "t", "**", "2", "-", "2.1966568338249754", "*", "t", "+", "1.2949852507374631", ")", "\n", "b3", "=", "2.490627285651252793", "*", "t", "**", "2", "*", "(", "t", "**", "2", "-", "2.38535645472061657", "*", "t", "+", "1.57803468208092486", ")", "\n", "b4", "=", "-", "16.54810288924490272", "*", "(", "t", "-", "1.21712927295533244", ")", "*", "(", "t", "-", "0.61620406037800089", ")", "*", "t", "**", "2", "\n", "b5", "=", "47.37952196281928122", "*", "(", "t", "-", "1.203071208372362603", ")", "*", "(", "t", "-", "0.658047292653547382", ")", "*", "t", "**", "2", "\n", "b6", "=", "-", "34.87065786149660974", "*", "(", "t", "-", "1.2", ")", "*", "(", "t", "-", "0.666666666666666667", ")", "*", "t", "**", "2", "\n", "b7", "=", "2.5", "*", "(", "t", "-", "1", ")", "*", "(", "t", "-", "0.6", ")", "*", "t", "**", "2", "\n", "return", "[", "b1", ",", "b2", ",", "b3", ",", "b4", ",", "b5", ",", "b6", ",", "b7", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5._interp_eval_tsit5": [[42, 48], ["tuple", "tsit5._interp_coeff_tsit5", "tuple", "misc._scaled_dot_product", "zip"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5._interp_coeff_tsit5", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product"], ["", "def", "_interp_eval_tsit5", "(", "t0", ",", "t1", ",", "k", ",", "eval_t", ")", ":", "\n", "    ", "dt", "=", "t1", "-", "t0", "\n", "y0", "=", "tuple", "(", "k_", "[", "0", "]", "for", "k_", "in", "k", ")", "\n", "interp_coeff", "=", "_interp_coeff_tsit5", "(", "t0", ",", "dt", ",", "eval_t", ")", "\n", "y_t", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "interp_coeff", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "return", "y_t", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5._optimal_step_size": [[50, 60], ["torch.sqrt().type_as", "torch.tensor().type_as", "torch.max", "misc._convert_to_tensor", "torch.min", "torch.sqrt", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor"], ["", "def", "_optimal_step_size", "(", "last_step", ",", "mean_error_ratio", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "order", "=", "5", ")", ":", "\n", "    ", "\"\"\"Calculate the optimal size for the next Runge-Kutta step.\"\"\"", "\n", "if", "mean_error_ratio", "==", "0", ":", "\n", "        ", "return", "last_step", "*", "ifactor", "\n", "", "if", "mean_error_ratio", "<", "1", ":", "\n", "        ", "dfactor", "=", "_convert_to_tensor", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "mean_error_ratio", ".", "device", ")", "\n", "", "error_ratio", "=", "torch", ".", "sqrt", "(", "mean_error_ratio", ")", ".", "type_as", "(", "last_step", ")", "\n", "exponent", "=", "torch", ".", "tensor", "(", "1", "/", "order", ")", ".", "type_as", "(", "last_step", ")", "\n", "factor", "=", "torch", ".", "max", "(", "1", "/", "ifactor", ",", "torch", ".", "min", "(", "error_ratio", "**", "exponent", "/", "safety", ",", "1", "/", "dfactor", ")", ")", "\n", "return", "last_step", "/", "factor", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.tsit5._abs_square": [[62, 64], ["torch.mul"], "function", ["None"], ["", "def", "_abs_square", "(", "x", ")", ":", "\n", "    ", "return", "torch", ".", "mul", "(", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.odeint.odeint": [[26, 84], ["misc._check_inputs", "solver.integrate", "ValueError", "ValueError", "SOLVERS.keys"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._check_inputs", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.FixedGridODESolver.integrate"], ["def", "odeint", "(", "func", ",", "y0", ",", "t", ",", "rtol", "=", "1e-7", ",", "atol", "=", "1e-9", ",", "method", "=", "None", ",", "options", "=", "None", ")", ":", "\n", "    ", "\"\"\"Integrate a system of ordinary differential equations.\n\n    Solves the initial value problem for a non-stiff system of first order ODEs:\n        ```\n        dy/dt = func(t, y), y(t[0]) = y0\n        ```\n    where y is a Tensor or tuple of Tensors of any shape.\n\n    Output dtypes and numerical precision are based on the dtypes of the inputs `y0`.\n\n    Args:\n        func: Function that maps a scalar Tensor `t` and a Tensor holding the state `y`\n            into a Tensor of state derivatives with respect to time. Optionally, `y`\n            can also be a tuple of Tensors.\n        y0: N-D Tensor giving starting value of `y` at time point `t[0]`. Optionally, `y0`\n            can also be a tuple of Tensors.\n        t: 1-D Tensor holding a sequence of time points for which to solve for\n            `y`. The initial time point should be the first element of this sequence,\n            and each time must be larger than the previous time. \n        rtol: optional float64 Tensor specifying an upper bound on relative error,\n            per element of `y`.\n  d      atol: optional float64 Tensor specifying an upper bound on absolute error,\n            per element of `y`.\n        method: optional string indicating the integration method to use.\n        options: optional dict of configuring options for the indicated integration\n            method. Can only be provided if a `method` is explicitly set.\n\n    Returns:\n        y: Tensor, where the first dimension corresponds to different\n            time points. Contains the solved value of y for each desired time point in\n            `t`, with the initial value `y0` being the first element along the first\n            dimension.\n\n    Raises:\n        ValueError: if an invalid `method` is provided.\n    \"\"\"", "\n", "\n", "tensor_input", ",", "func", ",", "y0", ",", "t", "=", "_check_inputs", "(", "func", ",", "y0", ",", "t", ")", "\n", "\n", "if", "options", "is", "None", ":", "\n", "        ", "options", "=", "{", "}", "\n", "", "elif", "method", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "'cannot supply `options` without specifying `method`'", ")", "\n", "\n", "", "if", "method", "is", "None", ":", "\n", "        ", "method", "=", "'dopri5'", "\n", "\n", "", "if", "method", "not", "in", "SOLVERS", ":", "\n", "        ", "raise", "ValueError", "(", "'Invalid method \"{}\". Must be one of {}'", ".", "format", "(", "\n", "method", ",", "'{\"'", "+", "'\", \"'", ".", "join", "(", "SOLVERS", ".", "keys", "(", ")", ")", "+", "'\"}.'", ")", ")", "\n", "\n", "", "solver", "=", "SOLVERS", "[", "method", "]", "(", "func", ",", "y0", ",", "rtol", "=", "rtol", ",", "atol", "=", "atol", ",", "**", "options", ")", "\n", "solution", "=", "solver", ".", "integrate", "(", "t", ")", "\n", "\n", "if", "tensor_input", ":", "\n", "        ", "solution", "=", "solution", "[", "0", "]", "\n", "", "return", "solution", "\n", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.forward": [[9, 23], ["ctx.save_for_backward", "len", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "odeint"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.odeint.odeint"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "*", "args", ")", ":", "\n", "        ", "assert", "len", "(", "args", ")", ">=", "8", ",", "'Internal error: all arguments required.'", "\n", "(", "y0", ",", "func", ",", "t", ",", "flat_params", ",", "rtol", ",", "atol", ",", "method", ",", "options", ",", "adjoint_rtol", ",", "adjoint_atol", ",", "adjoint_method", ",", "\n", "adjoint_options", ")", "=", "(", "args", "[", ":", "-", "11", "]", ",", "args", "[", "-", "11", "]", ",", "args", "[", "-", "10", "]", ",", "args", "[", "-", "9", "]", ",", "args", "[", "-", "8", "]", ",", "args", "[", "-", "7", "]", ",", "args", "[", "-", "6", "]", ",", "args", "[", "-", "5", "]", ",", "\n", "args", "[", "-", "4", "]", ",", "args", "[", "-", "3", "]", ",", "args", "[", "-", "2", "]", ",", "args", "[", "-", "1", "]", ")", "\n", "\n", "(", "ctx", ".", "func", ",", "ctx", ".", "adjoint_rtol", ",", "ctx", ".", "adjoint_atol", ",", "ctx", ".", "adjoint_method", ",", "\n", "ctx", ".", "adjoint_options", ")", "=", "func", ",", "adjoint_rtol", ",", "adjoint_atol", ",", "adjoint_method", ",", "adjoint_options", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "ans", "=", "odeint", "(", "func", ",", "y0", ",", "t", ",", "rtol", "=", "rtol", ",", "atol", "=", "atol", ",", "method", "=", "method", ",", "options", "=", "options", ")", "\n", "", "ctx", ".", "save_for_backward", "(", "t", ",", "flat_params", ",", "*", "ans", ")", "\n", "return", "ans", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.OdeintAdjointMethod.backward": [[24, 106], ["tuple", "len", "tuple", "func.parameters", "tuple", "misc._flatten_convert_none_to_zeros", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "tuple", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "range", "torch.cat.append", "torch.cat.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "t.to().detach().requires_grad_.to().detach().requires_grad_.to().detach().requires_grad_", "tuple", "func", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "len", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "tuple", "tuple", "func", "sum", "torch.cat.append", "torch.cat.append", "odeint", "tuple", "tuple", "tuple", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor().to.numel", "torch.tensor().to.numel", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len", "len", "t.to().detach().requires_grad_.to().detach().requires_grad_.to().detach", "y_.detach().requires_grad_", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "zip", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.dot().reshape", "torch.dot().reshape", "torch.dot().reshape", "torch.dot().reshape", "zip", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "zip", "t.to().detach().requires_grad_.to().detach().requires_grad_.to", "y_.detach", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "len", "func_i_.reshape", "grad_output_i_.reshape"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._flatten_convert_none_to_zeros", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.odeint.odeint"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "*", "grad_output", ")", ":", "\n", "        ", "t", ",", "flat_params", ",", "*", "ans", "=", "ctx", ".", "saved_tensors", "\n", "ans", "=", "tuple", "(", "ans", ")", "\n", "(", "func", ",", "adjoint_rtol", ",", "adjoint_atol", ",", "adjoint_method", ",", "\n", "adjoint_options", ")", "=", "ctx", ".", "func", ",", "ctx", ".", "adjoint_rtol", ",", "ctx", ".", "adjoint_atol", ",", "ctx", ".", "adjoint_method", ",", "ctx", ".", "adjoint_options", "\n", "n_tensors", "=", "len", "(", "ans", ")", "\n", "f_params", "=", "tuple", "(", "func", ".", "parameters", "(", ")", ")", "\n", "\n", "# TODO: use a nn.Module and call odeint_adjoint to implement higher order derivatives.", "\n", "def", "augmented_dynamics", "(", "t", ",", "y_aug", ")", ":", "\n", "# Dynamics of the original system augmented with", "\n", "# the adjoint wrt y, and an integrator wrt t and args.", "\n", "            ", "y", ",", "adj_y", "=", "y_aug", "[", ":", "n_tensors", "]", ",", "y_aug", "[", "n_tensors", ":", "2", "*", "n_tensors", "]", "# Ignore adj_time and adj_params.", "\n", "\n", "with", "torch", ".", "set_grad_enabled", "(", "True", ")", ":", "\n", "                ", "t", "=", "t", ".", "to", "(", "y", "[", "0", "]", ".", "device", ")", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "y", "=", "tuple", "(", "y_", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "for", "y_", "in", "y", ")", "\n", "func_eval", "=", "func", "(", "t", ",", "y", ")", "\n", "vjp_t", ",", "*", "vjp_y_and_params", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "func_eval", ",", "(", "t", ",", ")", "+", "y", "+", "f_params", ",", "\n", "tuple", "(", "-", "adj_y_", "for", "adj_y_", "in", "adj_y", ")", ",", "allow_unused", "=", "True", ",", "retain_graph", "=", "True", "\n", ")", "\n", "", "vjp_y", "=", "vjp_y_and_params", "[", ":", "n_tensors", "]", "\n", "vjp_params", "=", "vjp_y_and_params", "[", "n_tensors", ":", "]", "\n", "\n", "# autograd.grad returns None if no gradient, set to zero.", "\n", "vjp_t", "=", "torch", ".", "zeros_like", "(", "t", ")", "if", "vjp_t", "is", "None", "else", "vjp_t", "\n", "vjp_y", "=", "tuple", "(", "torch", ".", "zeros_like", "(", "y_", ")", "if", "vjp_y_", "is", "None", "else", "vjp_y_", "for", "vjp_y_", ",", "y_", "in", "zip", "(", "vjp_y", ",", "y", ")", ")", "\n", "vjp_params", "=", "_flatten_convert_none_to_zeros", "(", "vjp_params", ",", "f_params", ")", "\n", "\n", "if", "len", "(", "f_params", ")", "==", "0", ":", "\n", "                ", "vjp_params", "=", "torch", ".", "tensor", "(", "0.", ")", ".", "to", "(", "vjp_y", "[", "0", "]", ")", "\n", "", "return", "(", "*", "func_eval", ",", "*", "vjp_y", ",", "vjp_t", ",", "vjp_params", ")", "\n", "\n", "", "T", "=", "ans", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "adj_y", "=", "tuple", "(", "grad_output_", "[", "-", "1", "]", "for", "grad_output_", "in", "grad_output", ")", "\n", "adj_params", "=", "torch", ".", "zeros_like", "(", "flat_params", ")", "\n", "adj_time", "=", "torch", ".", "tensor", "(", "0.", ")", ".", "to", "(", "t", ")", "\n", "time_vjps", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "T", "-", "1", ",", "0", ",", "-", "1", ")", ":", "\n", "\n", "                ", "ans_i", "=", "tuple", "(", "ans_", "[", "i", "]", "for", "ans_", "in", "ans", ")", "\n", "grad_output_i", "=", "tuple", "(", "grad_output_", "[", "i", "]", "for", "grad_output_", "in", "grad_output", ")", "\n", "func_i", "=", "func", "(", "t", "[", "i", "]", ",", "ans_i", ")", "\n", "\n", "# Compute the effect of moving the current time measurement point.", "\n", "dLd_cur_t", "=", "sum", "(", "\n", "torch", ".", "dot", "(", "func_i_", ".", "reshape", "(", "-", "1", ")", ",", "grad_output_i_", ".", "reshape", "(", "-", "1", ")", ")", ".", "reshape", "(", "1", ")", "\n", "for", "func_i_", ",", "grad_output_i_", "in", "zip", "(", "func_i", ",", "grad_output_i", ")", "\n", ")", "\n", "adj_time", "=", "adj_time", "-", "dLd_cur_t", "\n", "time_vjps", ".", "append", "(", "dLd_cur_t", ")", "\n", "\n", "# Run the augmented system backwards in time.", "\n", "if", "adj_params", ".", "numel", "(", ")", "==", "0", ":", "\n", "                    ", "adj_params", "=", "torch", ".", "tensor", "(", "0.", ")", ".", "to", "(", "adj_y", "[", "0", "]", ")", "\n", "", "aug_y0", "=", "(", "*", "ans_i", ",", "*", "adj_y", ",", "adj_time", ",", "adj_params", ")", "\n", "aug_ans", "=", "odeint", "(", "\n", "augmented_dynamics", ",", "aug_y0", ",", "\n", "torch", ".", "tensor", "(", "[", "t", "[", "i", "]", ",", "t", "[", "i", "-", "1", "]", "]", ")", ",", "\n", "rtol", "=", "adjoint_rtol", ",", "atol", "=", "adjoint_atol", ",", "method", "=", "adjoint_method", ",", "options", "=", "adjoint_options", "\n", ")", "\n", "\n", "# Unpack aug_ans.", "\n", "adj_y", "=", "aug_ans", "[", "n_tensors", ":", "2", "*", "n_tensors", "]", "\n", "adj_time", "=", "aug_ans", "[", "2", "*", "n_tensors", "]", "\n", "adj_params", "=", "aug_ans", "[", "2", "*", "n_tensors", "+", "1", "]", "\n", "\n", "adj_y", "=", "tuple", "(", "adj_y_", "[", "1", "]", "if", "len", "(", "adj_y_", ")", ">", "0", "else", "adj_y_", "for", "adj_y_", "in", "adj_y", ")", "\n", "if", "len", "(", "adj_time", ")", ">", "0", ":", "adj_time", "=", "adj_time", "[", "1", "]", "\n", "if", "len", "(", "adj_params", ")", ">", "0", ":", "adj_params", "=", "adj_params", "[", "1", "]", "\n", "\n", "adj_y", "=", "tuple", "(", "adj_y_", "+", "grad_output_", "[", "i", "-", "1", "]", "for", "adj_y_", ",", "grad_output_", "in", "zip", "(", "adj_y", ",", "grad_output", ")", ")", "\n", "\n", "del", "aug_y0", ",", "aug_ans", "\n", "\n", "", "time_vjps", ".", "append", "(", "adj_time", ")", "\n", "time_vjps", "=", "torch", ".", "cat", "(", "time_vjps", "[", ":", ":", "-", "1", "]", ")", "\n", "\n", "return", "(", "*", "adj_y", ",", "None", ",", "time_vjps", ",", "adj_params", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adjoint.odeint_adjoint": [[108, 148], ["torch.is_tensor", "torch.is_tensor", "misc._flatten", "OdeintAdjointMethod.apply", "isinstance", "ValueError", "TupleFunc", "TupleFunc.parameters", "super().__init__", "adjoint..base_func"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._flatten", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__"], ["", "", "", "def", "odeint_adjoint", "(", "func", ",", "y0", ",", "t", ",", "rtol", "=", "1e-6", ",", "atol", "=", "1e-12", ",", "method", "=", "None", ",", "options", "=", "None", ",", "adjoint_rtol", "=", "None", ",", "adjoint_atol", "=", "None", ",", "\n", "adjoint_method", "=", "None", ",", "adjoint_options", "=", "None", ")", ":", "\n", "\n", "# We need this in order to access the variables inside this module,", "\n", "# since we have no other way of getting variables along the execution path.", "\n", "    ", "if", "not", "isinstance", "(", "func", ",", "nn", ".", "Module", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'func is required to be an instance of nn.Module.'", ")", "\n", "\n", "", "if", "adjoint_rtol", "is", "None", ":", "\n", "        ", "adjoint_rtol", "=", "rtol", "\n", "", "if", "adjoint_atol", "is", "None", ":", "\n", "        ", "adjoint_atol", "=", "atol", "\n", "", "if", "adjoint_method", "is", "None", ":", "\n", "        ", "adjoint_method", "=", "method", "\n", "", "if", "adjoint_options", "is", "None", ":", "\n", "        ", "adjoint_options", "=", "options", "\n", "\n", "", "tensor_input", "=", "False", "\n", "if", "torch", ".", "is_tensor", "(", "y0", ")", ":", "\n", "\n", "        ", "class", "TupleFunc", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "            ", "def", "__init__", "(", "self", ",", "base_func", ")", ":", "\n", "                ", "super", "(", "TupleFunc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_func", "=", "base_func", "\n", "\n", "", "def", "forward", "(", "self", ",", "t", ",", "y", ")", ":", "\n", "                ", "return", "(", "self", ".", "base_func", "(", "t", ",", "y", "[", "0", "]", ")", ",", ")", "\n", "\n", "", "", "tensor_input", "=", "True", "\n", "y0", "=", "(", "y0", ",", ")", "\n", "func", "=", "TupleFunc", "(", "func", ")", "\n", "\n", "", "flat_params", "=", "_flatten", "(", "func", ".", "parameters", "(", ")", ")", "\n", "ys", "=", "OdeintAdjointMethod", ".", "apply", "(", "*", "y0", ",", "func", ",", "t", ",", "flat_params", ",", "rtol", ",", "atol", ",", "method", ",", "options", ",", "adjoint_rtol", ",", "adjoint_atol", ",", "\n", "adjoint_method", ",", "adjoint_options", ")", "\n", "\n", "if", "tensor_input", ":", "\n", "        ", "ys", "=", "ys", "[", "0", "]", "\n", "", "return", "ys", "\n", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_grid.Euler.step_func": [[7, 9], ["tuple", "func"], "methods", ["None"], ["    ", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "return", "tuple", "(", "dt", "*", "f_", "for", "f_", "in", "func", "(", "t", "+", "self", ".", "eps", ",", "y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_grid.Euler.order": [[10, 13], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_grid.Midpoint.step_func": [[17, 20], ["tuple", "tuple", "zip", "func", "func"], "methods", ["None"], ["    ", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "y_mid", "=", "tuple", "(", "y_", "+", "f_", "*", "dt", "/", "2", "for", "y_", ",", "f_", "in", "zip", "(", "y", ",", "func", "(", "t", "+", "self", ".", "eps", ",", "y", ")", ")", ")", "\n", "return", "tuple", "(", "dt", "*", "f_", "for", "f_", "in", "func", "(", "t", "+", "dt", "/", "2", ",", "y_mid", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_grid.Midpoint.order": [[21, 24], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "return", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_grid.RK4.step_func": [[28, 30], ["rk_common.rk4_alt_step_func"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.rk_common.rk4_alt_step_func"], ["    ", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "return", "rk_common", ".", "rk4_alt_step_func", "(", "func", ",", "t", "+", "self", ".", "eps", ",", "dt", "-", "2", "*", "self", ".", "eps", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.fixed_grid.RK4.order": [[31, 34], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "return", "4", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.AdaptiveStepsizeODESolver.__init__": [[9, 17], ["misc._handle_unused_kwargs"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._handle_unused_kwargs"], ["def", "__init__", "(", "self", ",", "func", ",", "y0", ",", "atol", ",", "rtol", ",", "**", "unused_kwargs", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "atol", "=", "atol", "\n", "self", ".", "rtol", "=", "rtol", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.AdaptiveStepsizeODESolver.before_integrate": [[18, 20], ["None"], "methods", ["None"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.AdaptiveStepsizeODESolver.advance": [[21, 24], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "advance", "(", "self", ",", "next_t", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.AdaptiveStepsizeODESolver.integrate": [[25, 34], ["misc._assert_increasing", "t.to.to.to", "solvers.AdaptiveStepsizeODESolver.before_integrate", "range", "tuple", "len", "solvers.AdaptiveStepsizeODESolver.advance", "solution.append", "map", "tuple", "zip"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._assert_increasing", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.before_integrate", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.advance"], ["", "def", "integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "_assert_increasing", "(", "t", ")", "\n", "solution", "=", "[", "self", ".", "y0", "]", "\n", "t", "=", "t", ".", "to", "(", "self", ".", "y0", "[", "0", "]", ".", "device", ",", "torch", ".", "float64", ")", "\n", "self", ".", "before_integrate", "(", "t", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "t", ")", ")", ":", "\n", "            ", "y", "=", "self", ".", "advance", "(", "t", "[", "i", "]", ")", "\n", "solution", ".", "append", "(", "y", ")", "\n", "", "return", "tuple", "(", "map", "(", "torch", ".", "stack", ",", "tuple", "(", "zip", "(", "*", "solution", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.FixedGridODESolver.__init__": [[39, 59], ["unused_kwargs.pop", "unused_kwargs.pop", "misc._handle_unused_kwargs", "solvers.FixedGridODESolver._grid_constructor_from_step_size", "ValueError"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.FixedGridODESolver._grid_constructor_from_step_size"], ["def", "__init__", "(", "self", ",", "func", ",", "y0", ",", "step_size", "=", "None", ",", "grid_constructor", "=", "None", ",", "eps", "=", "0", ",", "**", "unused_kwargs", ")", ":", "\n", "        ", "unused_kwargs", ".", "pop", "(", "'rtol'", ",", "None", ")", "\n", "unused_kwargs", ".", "pop", "(", "'atol'", ",", "None", ")", "\n", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "eps", "=", "eps", "\n", "\n", "if", "step_size", "is", "None", ":", "\n", "            ", "if", "grid_constructor", "is", "None", ":", "\n", "                ", "self", ".", "grid_constructor", "=", "lambda", "f", ",", "y0", ",", "t", ":", "t", "\n", "", "else", ":", "\n", "                ", "self", ".", "grid_constructor", "=", "grid_constructor", "\n", "", "", "else", ":", "\n", "            ", "if", "grid_constructor", "is", "None", ":", "\n", "                ", "self", ".", "grid_constructor", "=", "self", ".", "_grid_constructor_from_step_size", "(", "step_size", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"step_size and grid_constructor are exclusive arguments.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.FixedGridODESolver._grid_constructor_from_step_size": [[60, 74], ["torch.ceil().item", "torch.ceil", "torch.arange().to", "torch.arange"], "methods", ["None"], ["", "", "", "def", "_grid_constructor_from_step_size", "(", "self", ",", "step_size", ")", ":", "\n", "\n", "        ", "def", "_grid_constructor", "(", "func", ",", "y0", ",", "t", ")", ":", "\n", "            ", "start_time", "=", "t", "[", "0", "]", "\n", "end_time", "=", "t", "[", "-", "1", "]", "\n", "\n", "niters", "=", "torch", ".", "ceil", "(", "(", "end_time", "-", "start_time", ")", "/", "step_size", "+", "1", ")", ".", "item", "(", ")", "\n", "t_infer", "=", "torch", ".", "arange", "(", "0", ",", "niters", ")", ".", "to", "(", "t", ")", "*", "step_size", "+", "start_time", "\n", "if", "t_infer", "[", "-", "1", "]", ">", "t", "[", "-", "1", "]", ":", "\n", "                ", "t_infer", "[", "-", "1", "]", "=", "t", "[", "-", "1", "]", "\n", "\n", "", "return", "t_infer", "\n", "\n", "", "return", "_grid_constructor", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.FixedGridODESolver.order": [[75, 79], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "abc", ".", "abstractmethod", "\n", "def", "order", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.FixedGridODESolver.step_func": [[80, 83], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "step_func", "(", "self", ",", "func", ",", "t", ",", "dt", ",", "y", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.FixedGridODESolver.integrate": [[84, 105], ["misc._assert_increasing", "t.type_as.type_as.type_as", "solvers.FixedGridODESolver.grid_constructor", "time_grid.to.to.to", "zip", "tuple", "solvers.FixedGridODESolver.step_func", "tuple", "map", "solution.append", "tuple", "len", "solvers.FixedGridODESolver._linear_interp", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._assert_increasing", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.FixedGridODESolver.step_func", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.FixedGridODESolver._linear_interp"], ["", "def", "integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "_assert_increasing", "(", "t", ")", "\n", "t", "=", "t", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", "\n", "time_grid", "=", "self", ".", "grid_constructor", "(", "self", ".", "func", ",", "self", ".", "y0", ",", "t", ")", "\n", "assert", "time_grid", "[", "0", "]", "==", "t", "[", "0", "]", "and", "time_grid", "[", "-", "1", "]", "==", "t", "[", "-", "1", "]", "\n", "time_grid", "=", "time_grid", ".", "to", "(", "self", ".", "y0", "[", "0", "]", ")", "\n", "\n", "solution", "=", "[", "self", ".", "y0", "]", "\n", "\n", "j", "=", "1", "\n", "y0", "=", "self", ".", "y0", "\n", "for", "t0", ",", "t1", "in", "zip", "(", "time_grid", "[", ":", "-", "1", "]", ",", "time_grid", "[", "1", ":", "]", ")", ":", "\n", "            ", "dy", "=", "self", ".", "step_func", "(", "self", ".", "func", ",", "t0", ",", "t1", "-", "t0", ",", "y0", ")", "\n", "y1", "=", "tuple", "(", "y0_", "+", "dy_", "for", "y0_", ",", "dy_", "in", "zip", "(", "y0", ",", "dy", ")", ")", "\n", "\n", "while", "j", "<", "len", "(", "t", ")", "and", "t1", ">=", "t", "[", "j", "]", ":", "\n", "                ", "solution", ".", "append", "(", "self", ".", "_linear_interp", "(", "t0", ",", "t1", ",", "y0", ",", "y1", ",", "t", "[", "j", "]", ")", ")", "\n", "j", "+=", "1", "\n", "", "y0", "=", "y1", "\n", "\n", "", "return", "tuple", "(", "map", "(", "torch", ".", "stack", ",", "tuple", "(", "zip", "(", "*", "solution", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.solvers.FixedGridODESolver._linear_interp": [[106, 114], ["tuple", "tuple", "t0.to", "t1.to", "t.to", "zip", "zip"], "methods", ["None"], ["", "def", "_linear_interp", "(", "self", ",", "t0", ",", "t1", ",", "y0", ",", "y1", ",", "t", ")", ":", "\n", "        ", "if", "t", "==", "t0", ":", "\n", "            ", "return", "y0", "\n", "", "if", "t", "==", "t1", ":", "\n", "            ", "return", "y1", "\n", "", "t0", ",", "t1", ",", "t", "=", "t0", ".", "to", "(", "y0", "[", "0", "]", ")", ",", "t1", ".", "to", "(", "y0", "[", "0", "]", ")", ",", "t", ".", "to", "(", "y0", "[", "0", "]", ")", "\n", "slope", "=", "tuple", "(", "(", "y1_", "-", "y0_", ")", "/", "(", "t1", "-", "t0", ")", "for", "y0_", ",", "y1_", ",", "in", "zip", "(", "y0", ",", "y1", ")", ")", "\n", "return", "tuple", "(", "y0_", "+", "slope_", "*", "(", "t", "-", "t0", ")", "for", "y0_", ",", "slope_", "in", "zip", "(", "y0", ",", "slope", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._flatten": [[5, 8], ["p.contiguous().view", "torch.cat", "torch.tensor", "len", "p.contiguous"], "function", ["None"], ["def", "_flatten", "(", "sequence", ")", ":", "\n", "    ", "flat", "=", "[", "p", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "for", "p", "in", "sequence", "]", "\n", "return", "torch", ".", "cat", "(", "flat", ")", "if", "len", "(", "flat", ")", ">", "0", "else", "torch", ".", "tensor", "(", "[", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._flatten_convert_none_to_zeros": [[10, 16], ["torch.cat", "torch.tensor", "p.contiguous().view", "torch.zeros_like().view", "zip", "len", "p.contiguous", "torch.zeros_like"], "function", ["None"], ["", "def", "_flatten_convert_none_to_zeros", "(", "sequence", ",", "like_sequence", ")", ":", "\n", "    ", "flat", "=", "[", "\n", "p", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "if", "p", "is", "not", "None", "else", "torch", ".", "zeros_like", "(", "q", ")", ".", "view", "(", "-", "1", ")", "\n", "for", "p", ",", "q", "in", "zip", "(", "sequence", ",", "like_sequence", ")", "\n", "]", "\n", "return", "torch", ".", "cat", "(", "flat", ")", "if", "len", "(", "flat", ")", ">", "0", "else", "torch", ".", "tensor", "(", "[", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._possibly_nonzero": [[18, 20], ["isinstance"], "function", ["None"], ["", "def", "_possibly_nonzero", "(", "x", ")", ":", "\n", "    ", "return", "isinstance", "(", "x", ",", "torch", ".", "Tensor", ")", "or", "x", "!=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product": [[22, 26], ["sum", "zip", "misc._possibly_nonzero", "misc._possibly_nonzero"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._possibly_nonzero", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._possibly_nonzero"], ["", "def", "_scaled_dot_product", "(", "scale", ",", "xs", ",", "ys", ")", ":", "\n", "    ", "\"\"\"Calculate a scaled, vector inner product between lists of Tensors.\"\"\"", "\n", "# Using _possibly_nonzero lets us avoid wasted computation.", "\n", "return", "sum", "(", "[", "(", "scale", "*", "x", ")", "*", "y", "for", "x", ",", "y", "in", "zip", "(", "xs", ",", "ys", ")", "if", "_possibly_nonzero", "(", "x", ")", "or", "_possibly_nonzero", "(", "y", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._dot_product": [[28, 31], ["sum", "zip"], "function", ["None"], ["", "def", "_dot_product", "(", "xs", ",", "ys", ")", ":", "\n", "    ", "\"\"\"Calculate the vector inner product between two lists of Tensors.\"\"\"", "\n", "return", "sum", "(", "[", "x", "*", "y", "for", "x", ",", "y", "in", "zip", "(", "xs", ",", "ys", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._has_converged": [[33, 38], ["tuple", "tuple", "all", "torch.abs", "zip", "zip", "zip", "torch.max", "torch.abs", "torch.abs"], "function", ["None"], ["", "def", "_has_converged", "(", "y0", ",", "y1", ",", "rtol", ",", "atol", ")", ":", "\n", "    ", "\"\"\"Checks that each element is within the error tolerance.\"\"\"", "\n", "error_tol", "=", "tuple", "(", "atol", "+", "rtol", "*", "torch", ".", "max", "(", "torch", ".", "abs", "(", "y0_", ")", ",", "torch", ".", "abs", "(", "y1_", ")", ")", "for", "y0_", ",", "y1_", "in", "zip", "(", "y0", ",", "y1", ")", ")", "\n", "error", "=", "tuple", "(", "torch", ".", "abs", "(", "y0_", "-", "y1_", ")", "for", "y0_", ",", "y1_", "in", "zip", "(", "y0", ",", "y1", ")", ")", "\n", "return", "all", "(", "(", "error_", "<", "error_tol_", ")", ".", "all", "(", ")", "for", "error_", ",", "error_tol_", "in", "zip", "(", "error", ",", "error_tol", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor": [[40, 48], ["isinstance", "torch.tensor", "a.to.type", "a.to.to"], "function", ["None"], ["", "def", "_convert_to_tensor", "(", "a", ",", "dtype", "=", "None", ",", "device", "=", "None", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "a", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "a", "=", "torch", ".", "tensor", "(", "a", ")", "\n", "", "if", "dtype", "is", "not", "None", ":", "\n", "        ", "a", "=", "a", ".", "type", "(", "dtype", ")", "\n", "", "if", "device", "is", "not", "None", ":", "\n", "        ", "a", "=", "a", ".", "to", "(", "device", ")", "\n", "", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_finite": [[50, 53], ["torch.isnan", "_check.any", "float", "float"], "function", ["None"], ["", "def", "_is_finite", "(", "tensor", ")", ":", "\n", "    ", "_check", "=", "(", "tensor", "==", "float", "(", "'inf'", ")", ")", "+", "(", "tensor", "==", "float", "(", "'-inf'", ")", ")", "+", "torch", ".", "isnan", "(", "tensor", ")", "\n", "return", "not", "_check", ".", "any", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._decreasing": [[55, 57], ["None"], "function", ["None"], ["", "def", "_decreasing", "(", "t", ")", ":", "\n", "    ", "return", "(", "t", "[", "1", ":", "]", "<", "t", "[", ":", "-", "1", "]", ")", ".", "all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._assert_increasing": [[59, 61], ["None"], "function", ["None"], ["", "def", "_assert_increasing", "(", "t", ")", ":", "\n", "    ", "assert", "(", "t", "[", "1", ":", "]", ">", "t", "[", ":", "-", "1", "]", ")", ".", "all", "(", ")", ",", "'t must be strictly increasing or decreasing'", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable": [[63, 69], ["iter"], "function", ["None"], ["", "def", "_is_iterable", "(", "inputs", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "iter", "(", "inputs", ")", "\n", "return", "True", "\n", "", "except", "TypeError", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._norm": [[71, 77], ["torch.is_tensor", "torch.sqrt", "x.norm", "x.numel", "sum", "sum", "x_.numel", "x_.norm"], "function", ["None"], ["", "", "def", "_norm", "(", "x", ")", ":", "\n", "    ", "\"\"\"Compute RMS norm.\"\"\"", "\n", "if", "torch", ".", "is_tensor", "(", "x", ")", ":", "\n", "        ", "return", "x", ".", "norm", "(", ")", "/", "(", "x", ".", "numel", "(", ")", "**", "0.5", ")", "\n", "", "else", ":", "\n", "        ", "return", "torch", ".", "sqrt", "(", "sum", "(", "x_", ".", "norm", "(", ")", "**", "2", "for", "x_", "in", "x", ")", "/", "sum", "(", "x_", ".", "numel", "(", ")", "for", "x_", "in", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._handle_unused_kwargs": [[79, 82], ["len", "warnings.warn"], "function", ["None"], ["", "", "def", "_handle_unused_kwargs", "(", "solver", ",", "unused_kwargs", ")", ":", "\n", "    ", "if", "len", "(", "unused_kwargs", ")", ">", "0", ":", "\n", "        ", "warnings", ".", "warn", "(", "'{}: Unexpected arguments {}'", ".", "format", "(", "solver", ".", "__class__", ".", "__name__", ",", "unused_kwargs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._select_initial_step": [[84, 144], ["t0.to.to", "tuple", "tuple", "tuple", "tuple", "fun", "tuple", "torch.min", "fun", "misc._is_iterable", "misc._is_iterable", "torch.tensor().to", "torch.max", "len", "len", "misc._norm", "misc._norm", "max().item", "max().item", "max", "max().item", "max().item", "torch.tensor().to", "zip", "zip", "zip", "torch.tensor", "zip", "misc._norm", "zip", "max", "float", "torch.abs", "max", "max", "max", "max", "torch.tensor", "zip"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._norm", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._norm", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._norm"], ["", "", "def", "_select_initial_step", "(", "fun", ",", "t0", ",", "y0", ",", "order", ",", "rtol", ",", "atol", ",", "f0", "=", "None", ")", ":", "\n", "    ", "\"\"\"Empirically select a good initial step.\n\n    The algorithm is described in [1]_.\n\n    Parameters\n    ----------\n    fun : callable\n        Right-hand side of the system.\n    t0 : float\n        Initial value of the independent variable.\n    y0 : ndarray, shape (n,)\n        Initial value of the dependent variable.\n    direction : float\n        Integration direction.\n    order : float\n        Method order.\n    rtol : float\n        Desired relative tolerance.\n    atol : float\n        Desired absolute tolerance.\n\n    Returns\n    -------\n    h_abs : float\n        Absolute value of the suggested initial step.\n\n    References\n    ----------\n    .. [1] E. Hairer, S. P. Norsett G. Wanner, \"Solving Ordinary Differential\n           Equations I: Nonstiff Problems\", Sec. II.4.\n    \"\"\"", "\n", "t0", "=", "t0", ".", "to", "(", "y0", "[", "0", "]", ")", "\n", "if", "f0", "is", "None", ":", "\n", "        ", "f0", "=", "fun", "(", "t0", ",", "y0", ")", "\n", "\n", "", "rtol", "=", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "atol", "=", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "\n", "scale", "=", "tuple", "(", "atol_", "+", "torch", ".", "abs", "(", "y0_", ")", "*", "rtol_", "for", "y0_", ",", "atol_", ",", "rtol_", "in", "zip", "(", "y0", ",", "atol", ",", "rtol", ")", ")", "\n", "\n", "d0", "=", "tuple", "(", "_norm", "(", "y0_", "/", "scale_", ")", "for", "y0_", ",", "scale_", "in", "zip", "(", "y0", ",", "scale", ")", ")", "\n", "d1", "=", "tuple", "(", "_norm", "(", "f0_", "/", "scale_", ")", "for", "f0_", ",", "scale_", "in", "zip", "(", "f0", ",", "scale", ")", ")", "\n", "\n", "if", "max", "(", "d0", ")", ".", "item", "(", ")", "<", "1e-5", "or", "max", "(", "d1", ")", ".", "item", "(", ")", "<", "1e-5", ":", "\n", "        ", "h0", "=", "torch", ".", "tensor", "(", "1e-6", ")", ".", "to", "(", "t0", ")", "\n", "", "else", ":", "\n", "        ", "h0", "=", "0.01", "*", "max", "(", "d0_", "/", "d1_", "for", "d0_", ",", "d1_", "in", "zip", "(", "d0", ",", "d1", ")", ")", "\n", "\n", "", "y1", "=", "tuple", "(", "y0_", "+", "h0", "*", "f0_", "for", "y0_", ",", "f0_", "in", "zip", "(", "y0", ",", "f0", ")", ")", "\n", "f1", "=", "fun", "(", "t0", "+", "h0", ",", "y1", ")", "\n", "\n", "d2", "=", "tuple", "(", "_norm", "(", "(", "f1_", "-", "f0_", ")", "/", "scale_", ")", "/", "h0", "for", "f1_", ",", "f0_", ",", "scale_", "in", "zip", "(", "f1", ",", "f0", ",", "scale", ")", ")", "\n", "\n", "if", "max", "(", "d1", ")", ".", "item", "(", ")", "<=", "1e-15", "and", "max", "(", "d2", ")", ".", "item", "(", ")", "<=", "1e-15", ":", "\n", "        ", "h1", "=", "torch", ".", "max", "(", "torch", ".", "tensor", "(", "1e-6", ")", ".", "to", "(", "h0", ")", ",", "h0", "*", "1e-3", ")", "\n", "", "else", ":", "\n", "        ", "h1", "=", "(", "0.01", "/", "max", "(", "d1", "+", "d2", ")", ")", "**", "(", "1.", "/", "float", "(", "order", "+", "1", ")", ")", "\n", "\n", "", "return", "torch", ".", "min", "(", "100", "*", "h0", ",", "h1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._compute_error_ratio": [[146, 158], ["tuple", "tuple", "tuple", "misc._is_iterable", "misc._is_iterable", "torch.mean", "len", "len", "zip", "zip", "torch.max", "torch.abs", "torch.abs"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable"], ["", "def", "_compute_error_ratio", "(", "error_estimate", ",", "error_tol", "=", "None", ",", "rtol", "=", "None", ",", "atol", "=", "None", ",", "y0", "=", "None", ",", "y1", "=", "None", ")", ":", "\n", "    ", "if", "error_tol", "is", "None", ":", "\n", "        ", "assert", "rtol", "is", "not", "None", "and", "atol", "is", "not", "None", "and", "y0", "is", "not", "None", "and", "y1", "is", "not", "None", "\n", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "error_tol", "=", "tuple", "(", "\n", "atol_", "+", "rtol_", "*", "torch", ".", "max", "(", "torch", ".", "abs", "(", "y0_", ")", ",", "torch", ".", "abs", "(", "y1_", ")", ")", "\n", "for", "atol_", ",", "rtol_", ",", "y0_", ",", "y1_", "in", "zip", "(", "atol", ",", "rtol", ",", "y0", ",", "y1", ")", "\n", ")", "\n", "", "error_ratio", "=", "tuple", "(", "error_estimate_", "/", "error_tol_", "for", "error_estimate_", ",", "error_tol_", "in", "zip", "(", "error_estimate", ",", "error_tol", ")", ")", "\n", "mean_sq_error_ratio", "=", "tuple", "(", "torch", ".", "mean", "(", "error_ratio_", "*", "error_ratio_", ")", "for", "error_ratio_", "in", "error_ratio", ")", "\n", "return", "mean_sq_error_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._optimal_step_size": [[160, 171], ["max", "torch.sqrt().to", "torch.tensor().to", "torch.max", "misc._convert_to_tensor", "torch.min", "torch.sqrt", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor"], ["", "def", "_optimal_step_size", "(", "last_step", ",", "mean_error_ratio", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "order", "=", "5", ")", ":", "\n", "    ", "\"\"\"Calculate the optimal size for the next step.\"\"\"", "\n", "mean_error_ratio", "=", "max", "(", "mean_error_ratio", ")", "# Compute step size based on highest ratio.", "\n", "if", "mean_error_ratio", "==", "0", ":", "\n", "        ", "return", "last_step", "*", "ifactor", "\n", "", "if", "mean_error_ratio", "<", "1", ":", "\n", "        ", "dfactor", "=", "_convert_to_tensor", "(", "1", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "mean_error_ratio", ".", "device", ")", "\n", "", "error_ratio", "=", "torch", ".", "sqrt", "(", "mean_error_ratio", ")", ".", "to", "(", "last_step", ")", "\n", "exponent", "=", "torch", ".", "tensor", "(", "1", "/", "order", ")", ".", "to", "(", "last_step", ")", "\n", "factor", "=", "torch", ".", "max", "(", "1", "/", "ifactor", ",", "torch", ".", "min", "(", "error_ratio", "**", "exponent", "/", "safety", ",", "1", "/", "dfactor", ")", ")", "\n", "return", "last_step", "/", "factor", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._check_inputs": [[173, 196], ["torch.is_tensor", "isinstance", "misc._decreasing", "torch.is_tensor", "torch.is_floating_point", "TypeError", "type", "tuple", "torch.is_floating_point", "TypeError", "_base_nontuple_func_", "t.type", "y0_.type", "_base_reverse_func"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._decreasing"], ["", "def", "_check_inputs", "(", "func", ",", "y0", ",", "t", ")", ":", "\n", "    ", "tensor_input", "=", "False", "\n", "if", "torch", ".", "is_tensor", "(", "y0", ")", ":", "\n", "        ", "tensor_input", "=", "True", "\n", "y0", "=", "(", "y0", ",", ")", "\n", "_base_nontuple_func_", "=", "func", "\n", "func", "=", "lambda", "t", ",", "y", ":", "(", "_base_nontuple_func_", "(", "t", ",", "y", "[", "0", "]", ")", ",", ")", "\n", "", "assert", "isinstance", "(", "y0", ",", "tuple", ")", ",", "'y0 must be either a torch.Tensor or a tuple'", "\n", "for", "y0_", "in", "y0", ":", "\n", "        ", "assert", "torch", ".", "is_tensor", "(", "y0_", ")", ",", "'each element must be a torch.Tensor but received {}'", ".", "format", "(", "type", "(", "y0_", ")", ")", "\n", "\n", "", "if", "_decreasing", "(", "t", ")", ":", "\n", "        ", "t", "=", "-", "t", "\n", "_base_reverse_func", "=", "func", "\n", "func", "=", "lambda", "t", ",", "y", ":", "tuple", "(", "-", "f_", "for", "f_", "in", "_base_reverse_func", "(", "-", "t", ",", "y", ")", ")", "\n", "\n", "", "for", "y0_", "in", "y0", ":", "\n", "        ", "if", "not", "torch", ".", "is_floating_point", "(", "y0_", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'`y0` must be a floating point Tensor but is a {}'", ".", "format", "(", "y0_", ".", "type", "(", ")", ")", ")", "\n", "", "", "if", "not", "torch", ".", "is_floating_point", "(", "t", ")", ":", "\n", "        ", "raise", "TypeError", "(", "'`t` must be a floating point Tensor but is a {}'", ".", "format", "(", "t", ".", "type", "(", ")", ")", ")", "\n", "\n", "", "return", "tensor_input", ",", "func", ",", "y0", ",", "t", "\n", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.bosh3.Bosh3Solver.__init__": [[36, 52], ["misc._handle_unused_kwargs", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._is_iterable", "misc._is_iterable", "len", "len"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", ",", "atol", ",", "first_step", "=", "None", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "max_num_steps", "=", "2", "**", "31", "-", "1", ",", "\n", "**", "unused_kwargs", "\n", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "rtol", "=", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "atol", "=", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "first_step", "=", "first_step", "\n", "self", ".", "safety", "=", "_convert_to_tensor", "(", "safety", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "ifactor", "=", "_convert_to_tensor", "(", "ifactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "dfactor", "=", "_convert_to_tensor", "(", "dfactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "max_num_steps", "=", "_convert_to_tensor", "(", "max_num_steps", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.bosh3.Bosh3Solver.before_integrate": [[53, 60], ["bosh3.Bosh3Solver.func", "rk_common._RungeKuttaState", "t[].type_as", "misc._select_initial_step().to", "misc._convert_to_tensor", "misc._select_initial_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._select_initial_step"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "f0", "=", "self", ".", "func", "(", "t", "[", "0", "]", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", ",", "self", ".", "y0", ")", "\n", "if", "self", ".", "first_step", "is", "None", ":", "\n", "            ", "first_step", "=", "_select_initial_step", "(", "self", ".", "func", ",", "t", "[", "0", "]", ",", "self", ".", "y0", ",", "2", ",", "self", ".", "rtol", "[", "0", "]", ",", "self", ".", "atol", "[", "0", "]", ",", "f0", "=", "f0", ")", ".", "to", "(", "t", ")", "\n", "", "else", ":", "\n", "            ", "first_step", "=", "_convert_to_tensor", "(", "self", ".", "first_step", ",", "dtype", "=", "t", ".", "dtype", ",", "device", "=", "t", ".", "device", ")", "\n", "", "self", ".", "rk_state", "=", "_RungeKuttaState", "(", "self", ".", "y0", ",", "f0", ",", "t", "[", "0", "]", ",", "t", "[", "0", "]", ",", "first_step", ",", "interp_coeff", "=", "[", "self", ".", "y0", "]", "*", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.bosh3.Bosh3Solver.advance": [[61, 69], ["interp._interp_evaluate", "bosh3.Bosh3Solver._adaptive_bosh3_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.interp._interp_evaluate", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.bosh3.Bosh3Solver._adaptive_bosh3_step"], ["", "def", "advance", "(", "self", ",", "next_t", ")", ":", "\n", "        ", "\"\"\"Interpolate through the next time point, integrating as necessary.\"\"\"", "\n", "n_steps", "=", "0", "\n", "while", "next_t", ">", "self", ".", "rk_state", ".", "t1", ":", "\n", "            ", "assert", "n_steps", "<", "self", ".", "max_num_steps", ",", "'max_num_steps exceeded ({}>={})'", ".", "format", "(", "n_steps", ",", "self", ".", "max_num_steps", ")", "\n", "self", ".", "rk_state", "=", "self", ".", "_adaptive_bosh3_step", "(", "self", ".", "rk_state", ")", "\n", "n_steps", "+=", "1", "\n", "", "return", "_interp_evaluate", "(", "self", ".", "rk_state", ".", "interp_coeff", ",", "self", ".", "rk_state", ".", "t0", ",", "self", ".", "rk_state", ".", "t1", ",", "next_t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.bosh3.Bosh3Solver._adaptive_bosh3_step": [[70, 99], ["rk_common._runge_kutta_step", "misc._compute_error_ratio", "misc._optimal_step_size", "rk_common._RungeKuttaState", "dt.item", "misc._is_finite", "bosh3._interp_fit_bosh3", "torch.abs", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.rk_common._runge_kutta_step", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_finite", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.bosh3._interp_fit_bosh3"], ["", "def", "_adaptive_bosh3_step", "(", "self", ",", "rk_state", ")", ":", "\n", "        ", "\"\"\"Take an adaptive Runge-Kutta step to integrate the ODE.\"\"\"", "\n", "y0", ",", "f0", ",", "_", ",", "t0", ",", "dt", ",", "interp_coeff", "=", "rk_state", "\n", "########################################################", "\n", "#                      Assertions                      #", "\n", "########################################################", "\n", "assert", "t0", "+", "dt", ">", "t0", ",", "'underflow in dt {}'", ".", "format", "(", "dt", ".", "item", "(", ")", ")", "\n", "for", "y0_", "in", "y0", ":", "\n", "            ", "assert", "_is_finite", "(", "torch", ".", "abs", "(", "y0_", ")", ")", ",", "'non-finite values in state `y`: {}'", ".", "format", "(", "y0_", ")", "\n", "", "y1", ",", "f1", ",", "y1_error", ",", "k", "=", "_runge_kutta_step", "(", "self", ".", "func", ",", "y0", ",", "f0", ",", "t0", ",", "dt", ",", "tableau", "=", "_BOGACKI_SHAMPINE_TABLEAU", ")", "\n", "\n", "########################################################", "\n", "#                     Error Ratio                      #", "\n", "########################################################", "\n", "mean_sq_error_ratio", "=", "_compute_error_ratio", "(", "y1_error", ",", "atol", "=", "self", ".", "atol", ",", "rtol", "=", "self", ".", "rtol", ",", "y0", "=", "y0", ",", "y1", "=", "y1", ")", "\n", "accept_step", "=", "(", "torch", ".", "tensor", "(", "mean_sq_error_ratio", ")", "<=", "1", ")", ".", "all", "(", ")", "\n", "\n", "########################################################", "\n", "#                   Update RK State                    #", "\n", "########################################################", "\n", "y_next", "=", "y1", "if", "accept_step", "else", "y0", "\n", "f_next", "=", "f1", "if", "accept_step", "else", "f0", "\n", "t_next", "=", "t0", "+", "dt", "if", "accept_step", "else", "t0", "\n", "interp_coeff", "=", "_interp_fit_bosh3", "(", "y0", ",", "y1", ",", "k", ",", "dt", ")", "if", "accept_step", "else", "interp_coeff", "\n", "dt_next", "=", "_optimal_step_size", "(", "\n", "dt", ",", "mean_sq_error_ratio", ",", "safety", "=", "self", ".", "safety", ",", "ifactor", "=", "self", ".", "ifactor", ",", "dfactor", "=", "self", ".", "dfactor", ",", "order", "=", "3", "\n", ")", "\n", "rk_state", "=", "_RungeKuttaState", "(", "y_next", ",", "f_next", ",", "t0", ",", "t_next", ",", "dt_next", ",", "interp_coeff", ")", "\n", "return", "rk_state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.bosh3._interp_fit_bosh3": [[24, 31], ["dt.type_as.type_as", "tuple", "tuple", "tuple", "interp._interp_fit", "misc._scaled_dot_product", "zip"], "function", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.interp._interp_fit", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product"], ["def", "_interp_fit_bosh3", "(", "y0", ",", "y1", ",", "k", ",", "dt", ")", ":", "\n", "    ", "\"\"\"Fit an interpolating polynomial to the results of a Runge-Kutta step.\"\"\"", "\n", "dt", "=", "dt", ".", "type_as", "(", "y0", "[", "0", "]", ")", "\n", "y_mid", "=", "tuple", "(", "y0_", "+", "_scaled_dot_product", "(", "dt", ",", "BS_C_MID", ",", "k_", ")", "for", "y0_", ",", "k_", "in", "zip", "(", "y0", ",", "k", ")", ")", "\n", "f0", "=", "tuple", "(", "k_", "[", "0", "]", "for", "k_", "in", "k", ")", "\n", "f1", "=", "tuple", "(", "k_", "[", "-", "1", "]", "for", "k_", "in", "k", ")", "\n", "return", "_interp_fit", "(", "y0", ",", "y1", ",", "y_mid", ",", "f0", ",", "f1", ",", "dt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.__init__": [[63, 80], ["misc._handle_unused_kwargs", "int", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._convert_to_tensor", "misc._is_iterable", "misc._is_iterable", "max", "len", "len", "min"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._handle_unused_kwargs", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._is_iterable"], ["    ", "def", "__init__", "(", "\n", "self", ",", "func", ",", "y0", ",", "rtol", ",", "atol", ",", "implicit", "=", "True", ",", "first_step", "=", "None", ",", "max_order", "=", "_MAX_ORDER", ",", "safety", "=", "0.9", ",", "ifactor", "=", "10.0", ",", "dfactor", "=", "0.2", ",", "\n", "**", "unused_kwargs", "\n", ")", ":", "\n", "        ", "_handle_unused_kwargs", "(", "self", ",", "unused_kwargs", ")", "\n", "del", "unused_kwargs", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "y0", "=", "y0", "\n", "self", ".", "rtol", "=", "rtol", "if", "_is_iterable", "(", "rtol", ")", "else", "[", "rtol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "atol", "=", "atol", "if", "_is_iterable", "(", "atol", ")", "else", "[", "atol", "]", "*", "len", "(", "y0", ")", "\n", "self", ".", "implicit", "=", "implicit", "\n", "self", ".", "first_step", "=", "first_step", "\n", "self", ".", "max_order", "=", "int", "(", "max", "(", "_MIN_ORDER", ",", "min", "(", "max_order", ",", "_MAX_ORDER", ")", ")", ")", "\n", "self", ".", "safety", "=", "_convert_to_tensor", "(", "safety", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "ifactor", "=", "_convert_to_tensor", "(", "ifactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "self", ".", "dfactor", "=", "_convert_to_tensor", "(", "dfactor", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "y0", "[", "0", "]", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.before_integrate": [[81, 97], ["collections.deque", "collections.deque", "collections.deque", "adams.VariableCoefficientAdamsBashforth.func", "collections.deque.appendleft", "collections.deque.appendleft", "collections.deque.appendleft", "adams._VCABMState", "t0.type_as", "misc._select_initial_step().to", "misc._select_initial_step().to", "misc._select_initial_step", "misc._select_initial_step"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._select_initial_step", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._select_initial_step"], ["", "def", "before_integrate", "(", "self", ",", "t", ")", ":", "\n", "        ", "prev_f", "=", "collections", ".", "deque", "(", "maxlen", "=", "self", ".", "max_order", "+", "1", ")", "\n", "prev_t", "=", "collections", ".", "deque", "(", "maxlen", "=", "self", ".", "max_order", "+", "1", ")", "\n", "phi", "=", "collections", ".", "deque", "(", "maxlen", "=", "self", ".", "max_order", ")", "\n", "\n", "t0", "=", "t", "[", "0", "]", "\n", "f0", "=", "self", ".", "func", "(", "t0", ".", "type_as", "(", "self", ".", "y0", "[", "0", "]", ")", ",", "self", ".", "y0", ")", "\n", "prev_t", ".", "appendleft", "(", "t0", ")", "\n", "prev_f", ".", "appendleft", "(", "f0", ")", "\n", "phi", ".", "appendleft", "(", "f0", ")", "\n", "if", "self", ".", "first_step", "is", "None", ":", "\n", "            ", "first_step", "=", "_select_initial_step", "(", "self", ".", "func", ",", "t", "[", "0", "]", ",", "self", ".", "y0", ",", "2", ",", "self", ".", "rtol", "[", "0", "]", ",", "self", ".", "atol", "[", "0", "]", ",", "f0", "=", "f0", ")", ".", "to", "(", "t", ")", "\n", "", "else", ":", "\n", "            ", "first_step", "=", "_select_initial_step", "(", "self", ".", "func", ",", "t", "[", "0", "]", ",", "self", ".", "y0", ",", "2", ",", "self", ".", "rtol", "[", "0", "]", ",", "self", ".", "atol", "[", "0", "]", ",", "f0", "=", "f0", ")", ".", "to", "(", "t", ")", "\n", "\n", "", "self", ".", "vcabm_state", "=", "_VCABMState", "(", "self", ".", "y0", ",", "prev_f", ",", "prev_t", ",", "next_t", "=", "t", "[", "0", "]", "+", "first_step", ",", "phi", "=", "phi", ",", "order", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth.advance": [[98, 104], ["misc._convert_to_tensor().to", "adams.VariableCoefficientAdamsBashforth._adaptive_adams_step", "misc._convert_to_tensor"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth._adaptive_adams_step", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._convert_to_tensor"], ["", "def", "advance", "(", "self", ",", "final_t", ")", ":", "\n", "        ", "final_t", "=", "_convert_to_tensor", "(", "final_t", ")", ".", "to", "(", "self", ".", "vcabm_state", ".", "prev_t", "[", "0", "]", ")", "\n", "while", "final_t", ">", "self", ".", "vcabm_state", ".", "prev_t", "[", "0", "]", ":", "\n", "            ", "self", ".", "vcabm_state", "=", "self", ".", "_adaptive_adams_step", "(", "self", ".", "vcabm_state", ",", "final_t", ")", "\n", "", "assert", "final_t", "==", "self", ".", "vcabm_state", ".", "prev_t", "[", "0", "]", "\n", "return", "self", ".", "vcabm_state", ".", "y_n", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.VariableCoefficientAdamsBashforth._adaptive_adams_step": [[105, 175], ["dt.to", "adams.g_and_explicit_phi", "g.to.to.to", "tuple", "adams.VariableCoefficientAdamsBashforth.func", "adams.compute_implicit_phi", "tuple", "tuple", "tuple", "misc._compute_error_ratio", "adams.VariableCoefficientAdamsBashforth.func", "adams.compute_implicit_phi", "prev_f.appendleft", "prev_t.appendleft", "adams._VCABMState", "next_t.to", "misc._optimal_step_size", "adams._VCABMState", "next_t.to", "min", "misc._compute_error_ratio", "misc._compute_error_ratio", "misc._optimal_step_size", "len", "tuple", "tuple", "min", "max", "misc._scaled_dot_product", "zip", "zip", "zip", "torch.tensor", "misc._compute_error_ratio", "tuple", "torch.max", "tuple", "max", "max", "zip", "torch.abs", "torch.abs", "max", "max"], "methods", ["home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.g_and_explicit_phi", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.compute_implicit_phi", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.compute_implicit_phi", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._compute_error_ratio", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._optimal_step_size", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._scaled_dot_product", "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.misc._compute_error_ratio"], ["", "def", "_adaptive_adams_step", "(", "self", ",", "vcabm_state", ",", "final_t", ")", ":", "\n", "        ", "y0", ",", "prev_f", ",", "prev_t", ",", "next_t", ",", "prev_phi", ",", "order", "=", "vcabm_state", "\n", "if", "next_t", ">", "final_t", ":", "\n", "            ", "next_t", "=", "final_t", "\n", "", "dt", "=", "(", "next_t", "-", "prev_t", "[", "0", "]", ")", "\n", "dt_cast", "=", "dt", ".", "to", "(", "y0", "[", "0", "]", ")", "\n", "\n", "# Explicit predictor step.", "\n", "g", ",", "phi", "=", "g_and_explicit_phi", "(", "prev_t", ",", "next_t", ",", "prev_phi", ",", "order", ")", "\n", "g", "=", "g", ".", "to", "(", "y0", "[", "0", "]", ")", "\n", "p_next", "=", "tuple", "(", "\n", "y0_", "+", "_scaled_dot_product", "(", "dt_cast", ",", "g", "[", ":", "max", "(", "1", ",", "order", "-", "1", ")", "]", ",", "phi_", "[", ":", "max", "(", "1", ",", "order", "-", "1", ")", "]", ")", "\n", "for", "y0_", ",", "phi_", "in", "zip", "(", "y0", ",", "tuple", "(", "zip", "(", "*", "phi", ")", ")", ")", "\n", ")", "\n", "\n", "# Update phi to implicit.", "\n", "next_f0", "=", "self", ".", "func", "(", "next_t", ".", "to", "(", "p_next", "[", "0", "]", ")", ",", "p_next", ")", "\n", "implicit_phi_p", "=", "compute_implicit_phi", "(", "phi", ",", "next_f0", ",", "order", "+", "1", ")", "\n", "\n", "# Implicit corrector step.", "\n", "y_next", "=", "tuple", "(", "\n", "p_next_", "+", "dt_cast", "*", "g", "[", "order", "-", "1", "]", "*", "iphi_", "for", "p_next_", ",", "iphi_", "in", "zip", "(", "p_next", ",", "implicit_phi_p", "[", "order", "-", "1", "]", ")", "\n", ")", "\n", "\n", "# Error estimation.", "\n", "tolerance", "=", "tuple", "(", "\n", "atol_", "+", "rtol_", "*", "torch", ".", "max", "(", "torch", ".", "abs", "(", "y0_", ")", ",", "torch", ".", "abs", "(", "y1_", ")", ")", "\n", "for", "atol_", ",", "rtol_", ",", "y0_", ",", "y1_", "in", "zip", "(", "self", ".", "atol", ",", "self", ".", "rtol", ",", "y0", ",", "y_next", ")", "\n", ")", "\n", "local_error", "=", "tuple", "(", "dt_cast", "*", "(", "g", "[", "order", "]", "-", "g", "[", "order", "-", "1", "]", ")", "*", "iphi_", "for", "iphi_", "in", "implicit_phi_p", "[", "order", "]", ")", "\n", "error_k", "=", "_compute_error_ratio", "(", "local_error", ",", "tolerance", ")", "\n", "accept_step", "=", "(", "torch", ".", "tensor", "(", "error_k", ")", "<=", "1", ")", ".", "all", "(", ")", "\n", "\n", "if", "not", "accept_step", ":", "\n", "# Retry with adjusted step size if step is rejected.", "\n", "            ", "dt_next", "=", "_optimal_step_size", "(", "dt", ",", "error_k", ",", "self", ".", "safety", ",", "self", ".", "ifactor", ",", "self", ".", "dfactor", ",", "order", "=", "order", ")", "\n", "return", "_VCABMState", "(", "y0", ",", "prev_f", ",", "prev_t", ",", "prev_t", "[", "0", "]", "+", "dt_next", ",", "prev_phi", ",", "order", "=", "order", ")", "\n", "\n", "# We accept the step. Evaluate f and update phi.", "\n", "", "next_f0", "=", "self", ".", "func", "(", "next_t", ".", "to", "(", "p_next", "[", "0", "]", ")", ",", "y_next", ")", "\n", "implicit_phi", "=", "compute_implicit_phi", "(", "phi", ",", "next_f0", ",", "order", "+", "2", ")", "\n", "\n", "next_order", "=", "order", "\n", "\n", "if", "len", "(", "prev_t", ")", "<=", "4", "or", "order", "<", "3", ":", "\n", "            ", "next_order", "=", "min", "(", "order", "+", "1", ",", "3", ",", "self", ".", "max_order", ")", "\n", "", "else", ":", "\n", "            ", "error_km1", "=", "_compute_error_ratio", "(", "\n", "tuple", "(", "dt_cast", "*", "(", "g", "[", "order", "-", "1", "]", "-", "g", "[", "order", "-", "2", "]", ")", "*", "iphi_", "for", "iphi_", "in", "implicit_phi_p", "[", "order", "-", "1", "]", ")", ",", "tolerance", "\n", ")", "\n", "error_km2", "=", "_compute_error_ratio", "(", "\n", "tuple", "(", "dt_cast", "*", "(", "g", "[", "order", "-", "2", "]", "-", "g", "[", "order", "-", "3", "]", ")", "*", "iphi_", "for", "iphi_", "in", "implicit_phi_p", "[", "order", "-", "2", "]", ")", ",", "tolerance", "\n", ")", "\n", "if", "min", "(", "error_km1", "+", "error_km2", ")", "<", "max", "(", "error_k", ")", ":", "\n", "                ", "next_order", "=", "order", "-", "1", "\n", "", "elif", "order", "<", "self", ".", "max_order", ":", "\n", "                ", "error_kp1", "=", "_compute_error_ratio", "(", "\n", "tuple", "(", "dt_cast", "*", "gamma_star", "[", "order", "]", "*", "iphi_", "for", "iphi_", "in", "implicit_phi_p", "[", "order", "]", ")", ",", "tolerance", "\n", ")", "\n", "if", "max", "(", "error_kp1", ")", "<", "max", "(", "error_k", ")", ":", "\n", "                    ", "next_order", "=", "order", "+", "1", "\n", "\n", "# Keep step size constant if increasing order. Else use adaptive step size.", "\n", "", "", "", "dt_next", "=", "dt", "if", "next_order", ">", "order", "else", "_optimal_step_size", "(", "\n", "dt", ",", "error_k", ",", "self", ".", "safety", ",", "self", ".", "ifactor", ",", "self", ".", "dfactor", ",", "order", "=", "order", "+", "1", "\n", ")", "\n", "\n", "prev_f", ".", "appendleft", "(", "next_f0", ")", "\n", "prev_t", ".", "appendleft", "(", "next_t", ")", "\n", "return", "_VCABMState", "(", "p_next", ",", "prev_f", ",", "prev_t", ",", "next_t", "+", "dt_next", ",", "implicit_phi", ",", "order", "=", "next_order", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.g_and_explicit_phi": [[26, 50], ["torch.empty().to", "collections.deque", "torch.tensor().to", "collections.deque.append", "range", "torch.arange().to", "torch.tensor().to.to", "collections.deque.append", "torch.empty", "torch.tensor", "tuple", "torch.arange"], "function", ["None"], ["", "def", "g_and_explicit_phi", "(", "prev_t", ",", "next_t", ",", "implicit_phi", ",", "k", ")", ":", "\n", "    ", "curr_t", "=", "prev_t", "[", "0", "]", "\n", "dt", "=", "next_t", "-", "prev_t", "[", "0", "]", "\n", "\n", "g", "=", "torch", ".", "empty", "(", "k", "+", "1", ")", ".", "to", "(", "prev_t", "[", "0", "]", ")", "\n", "explicit_phi", "=", "collections", ".", "deque", "(", "maxlen", "=", "k", ")", "\n", "beta", "=", "torch", ".", "tensor", "(", "1", ")", ".", "to", "(", "prev_t", "[", "0", "]", ")", "\n", "\n", "g", "[", "0", "]", "=", "1", "\n", "c", "=", "1", "/", "torch", ".", "arange", "(", "1", ",", "k", "+", "2", ")", ".", "to", "(", "prev_t", "[", "0", "]", ")", "\n", "explicit_phi", ".", "append", "(", "implicit_phi", "[", "0", "]", ")", "\n", "\n", "for", "j", "in", "range", "(", "1", ",", "k", ")", ":", "\n", "        ", "beta", "=", "(", "next_t", "-", "prev_t", "[", "j", "-", "1", "]", ")", "/", "(", "curr_t", "-", "prev_t", "[", "j", "]", ")", "*", "beta", "\n", "beat_cast", "=", "beta", ".", "to", "(", "implicit_phi", "[", "j", "]", "[", "0", "]", ")", "\n", "explicit_phi", ".", "append", "(", "tuple", "(", "iphi_", "*", "beat_cast", "for", "iphi_", "in", "implicit_phi", "[", "j", "]", ")", ")", "\n", "\n", "c", "=", "c", "[", ":", "-", "1", "]", "-", "c", "[", "1", ":", "]", "if", "j", "==", "1", "else", "c", "[", ":", "-", "1", "]", "-", "c", "[", "1", ":", "]", "*", "dt", "/", "(", "next_t", "-", "prev_t", "[", "j", "-", "1", "]", ")", "\n", "g", "[", "j", "]", "=", "c", "[", "0", "]", "\n", "\n", "", "c", "=", "c", "[", ":", "-", "1", "]", "-", "c", "[", "1", ":", "]", "*", "dt", "/", "(", "next_t", "-", "prev_t", "[", "k", "-", "1", "]", ")", "\n", "g", "[", "k", "]", "=", "c", "[", "0", "]", "\n", "\n", "return", "g", ",", "explicit_phi", "\n", "\n"]], "home.repos.pwc.inspect_result.bigdyl-yonsei_OCTGAN._impl.adams.compute_implicit_phi": [[52, 59], ["min", "collections.deque", "collections.deque.append", "range", "collections.deque.append", "len", "tuple", "zip"], "function", ["None"], ["", "def", "compute_implicit_phi", "(", "explicit_phi", ",", "f_n", ",", "k", ")", ":", "\n", "    ", "k", "=", "min", "(", "len", "(", "explicit_phi", ")", "+", "1", ",", "k", ")", "\n", "implicit_phi", "=", "collections", ".", "deque", "(", "maxlen", "=", "k", ")", "\n", "implicit_phi", ".", "append", "(", "f_n", ")", "\n", "for", "j", "in", "range", "(", "1", ",", "k", ")", ":", "\n", "        ", "implicit_phi", ".", "append", "(", "tuple", "(", "iphi_", "-", "ephi_", "for", "iphi_", ",", "ephi_", "in", "zip", "(", "implicit_phi", "[", "j", "-", "1", "]", ",", "explicit_phi", "[", "j", "-", "1", "]", ")", ")", ")", "\n", "", "return", "implicit_phi", "\n", "\n"]]}